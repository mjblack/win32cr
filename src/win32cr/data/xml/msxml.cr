require "../../foundation.cr"
require "../../system/com.cr"

{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link("delayimp")]
{% end %}
@[Link("user32")]
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/IGNORE:4199")]
{% end %}
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
{% else %}
{% end %}
lib LibWin32
  E_XML_NOTWF = -1072897501_i32
  E_XML_NODTD = -1072897500_i32
  E_XML_INVALID = -1072897499_i32
  E_XML_BUFFERTOOSMALL = -1072897498_i32
  XHR_PROP_ONDATA_ALWAYS = 0_u32
  XHR_PROP_ONDATA_NEVER = 18446744073709551615_u64
  DISPID_XOBJ_MIN = 65536_u32
  DISPID_XOBJ_MAX = 131071_u32
  DISPID_XOBJ_BASE = 65536_u32
  DISPID_XMLELEMENTCOLLECTION = 65536_u32
  DISPID_XMLELEMENTCOLLECTION_LENGTH = 65537_u32
  DISPID_XMLELEMENTCOLLECTION_NEWENUM = -4_i32
  DISPID_XMLELEMENTCOLLECTION_ITEM = 65539_u32
  DISPID_XMLDOCUMENT = 65636_u32
  DISPID_XMLDOCUMENT_ROOT = 65637_u32
  DISPID_XMLDOCUMENT_FILESIZE = 65638_u32
  DISPID_XMLDOCUMENT_FILEMODIFIEDDATE = 65639_u32
  DISPID_XMLDOCUMENT_FILEUPDATEDDATE = 65640_u32
  DISPID_XMLDOCUMENT_URL = 65641_u32
  DISPID_XMLDOCUMENT_MIMETYPE = 65642_u32
  DISPID_XMLDOCUMENT_READYSTATE = 65643_u32
  DISPID_XMLDOCUMENT_CREATEELEMENT = 65644_u32
  DISPID_XMLDOCUMENT_CHARSET = 65645_u32
  DISPID_XMLDOCUMENT_VERSION = 65646_u32
  DISPID_XMLDOCUMENT_DOCTYPE = 65647_u32
  DISPID_XMLDOCUMENT_DTDURL = 65648_u32
  DISPID_XMLDOCUMENT_ASYNC = 65649_u32
  DISPID_XMLDOCUMENT_CASEINSENSITIVE = 65650_u32
  DISPID_XMLDOCUMENT_BASEURL = 65651_u32
  DISPID_XMLDOCUMENT_XML = 65652_u32
  DISPID_XMLDOCUMENT_LASTERROR = 65653_u32
  DISPID_XMLDOCUMENT_TRIMWHITESPACE = 65654_u32
  DISPID_XMLDOCUMENT_COMMIT = 65655_u32
  DISPID_XMLELEMENT = 65736_u32
  DISPID_XMLELEMENT_TAGNAME = 65737_u32
  DISPID_XMLELEMENT_PARENT = 65738_u32
  DISPID_XMLELEMENT_SETATTRIBUTE = 65739_u32
  DISPID_XMLELEMENT_GETATTRIBUTE = 65740_u32
  DISPID_XMLELEMENT_REMOVEATTRIBUTE = 65741_u32
  DISPID_XMLELEMENT_CHILDREN = 65742_u32
  DISPID_XMLELEMENT_TYPE = 65743_u32
  DISPID_XMLELEMENT_TEXT = 65744_u32
  DISPID_XMLELEMENT_ADDCHILD = 65745_u32
  DISPID_XMLELEMENT_REMOVECHILD = 65746_u32
  DISPID_XMLELEMENT_ATTRIBUTES = 65747_u32
  DISPID_XMLNOTIFSINK = 65836_u32
  DISPID_XMLNOTIFSINK_CHILDADDED = 65837_u32
  DISPID_XMLATTRIBUTE = 65936_u32
  DISPID_XMLATTRIBUTE_NAME = 65937_u32
  DISPID_XMLATTRIBUTE_VALUE = 65938_u32
  DISPID_XMLERROR = 65936_u32
  DISPID_XMLERROR_REASON = 65937_u32
  DISPID_XMLERROR_LINE = 65938_u32
  DISPID_XMLERROR_POS = 65939_u32
  DISPID_NODE = 66036_u32
  DISPID_NODE_NAME = 66037_u32
  DISPID_NODE_PARENT = 66038_u32
  DISPID_NODE_TYPE = 66039_u32
  DISPID_NODE_VALUE = 66040_u32
  DISPID_NODE_SETATTRIBUTE = 66041_u32
  DISPID_NODE_GETATTRIBUTE = 66042_u32
  DISPID_NODE_REMOVEATTRIBUTE = 66043_u32
  DISPID_NODE_ATTRIBUTES = 66044_u32
  DISPID_NODE_ADD = 66045_u32
  DISPID_NODE_REMOVE = 66046_u32
  DISPID_NODE_CHILDREN = 66047_u32
  DISPID_NODELIST = 66136_u32
  DISPID_NODELIST_NEWENUM = 66137_u32
  DISPID_NODELIST_NEXT = 66138_u32
  DISPID_NODELIST_CURRENT = 66139_u32
  DISPID_NODELIST_MOVE = 66140_u32
  DISPID_NODELIST_MOVETONODE = 66141_u32
  DISPID_NODELIST_LENGTH = 66142_u32
  DISPID_NODELIST_ITEM = 66143_u32
  DISPID_DOM_BASE = 1_u32
  DISPID_DOM_COLLECTION_BASE = 1000000_u32
  DISPID_DOM_COLLECTION_MAX = 2999999_u32
  DISPID_DOM_NODE = 1_u32
  DISPID_DOM_NODE_NODENAME = 2_u32
  DISPID_DOM_NODE_NODEVALUE = 3_u32
  DISPID_DOM_NODE_NODETYPE = 4_u32
  DISPID_DOM_NODE_NODETYPEENUM = 5_u32
  DISPID_DOM_NODE_PARENTNODE = 6_u32
  DISPID_DOM_NODE_CHILDNODES = 7_u32
  DISPID_DOM_NODE_FIRSTCHILD = 8_u32
  DISPID_DOM_NODE_LASTCHILD = 9_u32
  DISPID_DOM_NODE_PREVIOUSSIBLING = 10_u32
  DISPID_DOM_NODE_NEXTSIBLING = 11_u32
  DISPID_DOM_NODE_ATTRIBUTES = 12_u32
  DISPID_DOM_NODE_INSERTBEFORE = 13_u32
  DISPID_DOM_NODE_REPLACECHILD = 14_u32
  DISPID_DOM_NODE_REMOVECHILD = 15_u32
  DISPID_DOM_NODE_APPENDCHILD = 16_u32
  DISPID_DOM_NODE_HASCHILDNODES = 17_u32
  DISPID_DOM_NODE_OWNERDOC = 18_u32
  DISPID_DOM_NODE_CLONENODE = 19_u32
  DISPID_XMLDOM_NODE = 20_u32
  DISPID_XMLDOM_NODE_STRINGTYPE = 21_u32
  DISPID_XMLDOM_NODE_SPECIFIED = 22_u32
  DISPID_XMLDOM_NODE_DEFINITION = 23_u32
  DISPID_XMLDOM_NODE_TEXT = 24_u32
  DISPID_XMLDOM_NODE_NODETYPEDVALUE = 25_u32
  DISPID_XMLDOM_NODE_DATATYPE = 26_u32
  DISPID_XMLDOM_NODE_XML = 27_u32
  DISPID_XMLDOM_NODE_TRANSFORMNODE = 28_u32
  DISPID_XMLDOM_NODE_SELECTNODES = 29_u32
  DISPID_XMLDOM_NODE_SELECTSINGLENODE = 30_u32
  DISPID_XMLDOM_NODE_PARSED = 31_u32
  DISPID_XMLDOM_NODE_NAMESPACE = 32_u32
  DISPID_XMLDOM_NODE_PREFIX = 33_u32
  DISPID_XMLDOM_NODE_BASENAME = 34_u32
  DISPID_XMLDOM_NODE_TRANSFORMNODETOOBJECT = 35_u32
  DISPID_XMLDOM_NODE__TOP = 36_u32
  DISPID_DOM_DOCUMENT = 37_u32
  DISPID_DOM_DOCUMENT_DOCTYPE = 38_u32
  DISPID_DOM_DOCUMENT_IMPLEMENTATION = 39_u32
  DISPID_DOM_DOCUMENT_DOCUMENTELEMENT = 40_u32
  DISPID_DOM_DOCUMENT_CREATEELEMENT = 41_u32
  DISPID_DOM_DOCUMENT_CREATEDOCUMENTFRAGMENT = 42_u32
  DISPID_DOM_DOCUMENT_CREATETEXTNODE = 43_u32
  DISPID_DOM_DOCUMENT_CREATECOMMENT = 44_u32
  DISPID_DOM_DOCUMENT_CREATECDATASECTION = 45_u32
  DISPID_DOM_DOCUMENT_CREATEPROCESSINGINSTRUCTION = 46_u32
  DISPID_DOM_DOCUMENT_CREATEATTRIBUTE = 47_u32
  DISPID_DOM_DOCUMENT_CREATEENTITY = 48_u32
  DISPID_DOM_DOCUMENT_CREATEENTITYREFERENCE = 49_u32
  DISPID_DOM_DOCUMENT_GETELEMENTSBYTAGNAME = 50_u32
  DISPID_DOM_DOCUMENT_TOP = 51_u32
  DISPID_XMLDOM_DOCUMENT = 52_u32
  DISPID_XMLDOM_DOCUMENT_DOCUMENTNODE = 53_u32
  DISPID_XMLDOM_DOCUMENT_CREATENODE = 54_u32
  DISPID_XMLDOM_DOCUMENT_CREATENODEEX = 55_u32
  DISPID_XMLDOM_DOCUMENT_NODEFROMID = 56_u32
  DISPID_XMLDOM_DOCUMENT_DOCUMENTNAMESPACES = 57_u32
  DISPID_XMLDOM_DOCUMENT_LOAD = 58_u32
  DISPID_XMLDOM_DOCUMENT_PARSEERROR = 59_u32
  DISPID_XMLDOM_DOCUMENT_URL = 60_u32
  DISPID_XMLDOM_DOCUMENT_ASYNC = 61_u32
  DISPID_XMLDOM_DOCUMENT_ABORT = 62_u32
  DISPID_XMLDOM_DOCUMENT_LOADXML = 63_u32
  DISPID_XMLDOM_DOCUMENT_SAVE = 64_u32
  DISPID_XMLDOM_DOCUMENT_VALIDATE = 65_u32
  DISPID_XMLDOM_DOCUMENT_RESOLVENAMESPACE = 66_u32
  DISPID_XMLDOM_DOCUMENT_PRESERVEWHITESPACE = 67_u32
  DISPID_XMLDOM_DOCUMENT_ONREADYSTATECHANGE = 68_u32
  DISPID_XMLDOM_DOCUMENT_ONDATAAVAILABLE = 69_u32
  DISPID_XMLDOM_DOCUMENT_ONTRANSFORMNODE = 70_u32
  DISPID_XMLDOM_DOCUMENT__TOP = 71_u32
  DISPID_DOM_NODELIST = 72_u32
  DISPID_DOM_NODELIST_ITEM = 73_u32
  DISPID_DOM_NODELIST_LENGTH = 74_u32
  DISPID_XMLDOM_NODELIST = 75_u32
  DISPID_XMLDOM_NODELIST_NEXTNODE = 76_u32
  DISPID_XMLDOM_NODELIST_RESET = 77_u32
  DISPID_XMLDOM_NODELIST_NEWENUM = 78_u32
  DISPID_XMLDOM_NODELIST__TOP = 79_u32
  DISPID_DOM_NAMEDNODEMAP = 80_u32
  DISPID_DOM_NAMEDNODEMAP_GETNAMEDITEM = 83_u32
  DISPID_DOM_NAMEDNODEMAP_SETNAMEDITEM = 84_u32
  DISPID_DOM_NAMEDNODEMAP_REMOVENAMEDITEM = 85_u32
  DISPID_XMLDOM_NAMEDNODEMAP = 86_u32
  DISPID_XMLDOM_NAMEDNODEMAP_GETQUALIFIEDITEM = 87_u32
  DISPID_XMLDOM_NAMEDNODEMAP_REMOVEQUALIFIEDITEM = 88_u32
  DISPID_XMLDOM_NAMEDNODEMAP_NEXTNODE = 89_u32
  DISPID_XMLDOM_NAMEDNODEMAP_RESET = 90_u32
  DISPID_XMLDOM_NAMEDNODEMAP_NEWENUM = 91_u32
  DISPID_XMLDOM_NAMEDNODEMAP__TOP = 92_u32
  DISPID_DOM_W3CWRAPPERS = 93_u32
  DISPID_DOM_DOCUMENTFRAGMENT = 94_u32
  DISPID_DOM_DOCUMENTFRAGMENT__TOP = 95_u32
  DISPID_DOM_ELEMENT = 96_u32
  DISPID_DOM_ELEMENT_GETTAGNAME = 97_u32
  DISPID_DOM_ELEMENT_GETATTRIBUTES = 98_u32
  DISPID_DOM_ELEMENT_GETATTRIBUTE = 99_u32
  DISPID_DOM_ELEMENT_SETATTRIBUTE = 100_u32
  DISPID_DOM_ELEMENT_REMOVEATTRIBUTE = 101_u32
  DISPID_DOM_ELEMENT_GETATTRIBUTENODE = 102_u32
  DISPID_DOM_ELEMENT_SETATTRIBUTENODE = 103_u32
  DISPID_DOM_ELEMENT_REMOVEATTRIBUTENODE = 104_u32
  DISPID_DOM_ELEMENT_GETELEMENTSBYTAGNAME = 105_u32
  DISPID_DOM_ELEMENT_NORMALIZE = 106_u32
  DISPID_DOM_ELEMENT__TOP = 107_u32
  DISPID_DOM_DATA = 108_u32
  DISPID_DOM_DATA_DATA = 109_u32
  DISPID_DOM_DATA_LENGTH = 110_u32
  DISPID_DOM_DATA_SUBSTRING = 111_u32
  DISPID_DOM_DATA_APPEND = 112_u32
  DISPID_DOM_DATA_INSERT = 113_u32
  DISPID_DOM_DATA_DELETE = 114_u32
  DISPID_DOM_DATA_REPLACE = 115_u32
  DISPID_DOM_DATA__TOP = 116_u32
  DISPID_DOM_ATTRIBUTE = 117_u32
  DISPID_DOM_ATTRIBUTE_GETNAME = 118_u32
  DISPID_DOM_ATTRIBUTE_SPECIFIED = 119_u32
  DISPID_DOM_ATTRIBUTE_VALUE = 120_u32
  DISPID_DOM_ATTRIBUTE__TOP = 121_u32
  DISPID_DOM_TEXT = 122_u32
  DISPID_DOM_TEXT_SPLITTEXT = 123_u32
  DISPID_DOM_TEXT_JOINTEXT = 124_u32
  DISPID_DOM_TEXT__TOP = 125_u32
  DISPID_DOM_PI = 126_u32
  DISPID_DOM_PI_TARGET = 127_u32
  DISPID_DOM_PI_DATA = 128_u32
  DISPID_DOM_PI__TOP = 129_u32
  DISPID_DOM_DOCUMENTTYPE = 130_u32
  DISPID_DOM_DOCUMENTTYPE_NAME = 131_u32
  DISPID_DOM_DOCUMENTTYPE_ENTITIES = 132_u32
  DISPID_DOM_DOCUMENTTYPE_NOTATIONS = 133_u32
  DISPID_DOM_DOCUMENTTYPE__TOP = 134_u32
  DISPID_DOM_NOTATION = 135_u32
  DISPID_DOM_NOTATION_PUBLICID = 136_u32
  DISPID_DOM_NOTATION_SYSTEMID = 137_u32
  DISPID_DOM_NOTATION__TOP = 138_u32
  DISPID_DOM_ENTITY = 139_u32
  DISPID_DOM_ENTITY_PUBLICID = 140_u32
  DISPID_DOM_ENTITY_SYSTEMID = 141_u32
  DISPID_DOM_ENTITY_NOTATIONNAME = 142_u32
  DISPID_DOM_ENTITY__TOP = 143_u32
  DISPID_DOM_W3CWRAPPERS_TOP = 143_u32
  DISPID_DOM_IMPLEMENTATION = 144_u32
  DISPID_DOM_IMPLEMENTATION_HASFEATURE = 145_u32
  DISPID_DOM_IMPLEMENTATION__TOP = 146_u32
  DISPID_DOM__TOP = 176_u32
  DISPID_DOM_ERROR = 177_u32
  DISPID_DOM_ERROR_ERRORCODE = 178_u32
  DISPID_DOM_ERROR_URL = 179_u32
  DISPID_DOM_ERROR_REASON = 180_u32
  DISPID_DOM_ERROR_SRCTEXT = 181_u32
  DISPID_DOM_ERROR_LINE = 182_u32
  DISPID_DOM_ERROR_LINEPOS = 183_u32
  DISPID_DOM_ERROR_FILEPOS = 184_u32
  DISPID_DOM_ERROR__TOP = 185_u32
  DISPID_DOM_ERROR2 = 186_u32
  DISPID_DOM_ERROR2_ALLERRORS = 187_u32
  DISPID_DOM_ERROR2_ERRORPARAMETERS = 188_u32
  DISPID_DOM_ERROR2_ERRORPARAMETERSCOUNT = 189_u32
  DISPID_DOM_ERROR2_ERRORXPATH = 190_u32
  DISPID_DOM_ERROR2__TOP = 191_u32
  DISPID_DOM_ERRORCOLLECTION = 192_u32
  DISPID_DOM_ERRORCOLLECTION_LENGTH = 193_u32
  DISPID_DOM_ERRORCOLLECTION_NEXT = 194_u32
  DISPID_DOM_ERRORCOLLECTION_RESET = 195_u32
  DISPID_DOM_ERRORCOLLECTION__TOP = 196_u32
  DISPID_XTLRUNTIME = 186_u32
  DISPID_XTLRUNTIME_UNIQUEID = 187_u32
  DISPID_XTLRUNTIME_DEPTH = 188_u32
  DISPID_XTLRUNTIME_CHILDNUMBER = 189_u32
  DISPID_XTLRUNTIME_ANCESTORCHILDNUMBER = 190_u32
  DISPID_XTLRUNTIME_ABSOLUTECHILDNUMBER = 191_u32
  DISPID_XTLRUNTIME_FORMATINDEX = 192_u32
  DISPID_XTLRUNTIME_FORMATNUMBER = 193_u32
  DISPID_XTLRUNTIME_FORMATDATE = 194_u32
  DISPID_XTLRUNTIME_FORMATTIME = 195_u32
  DISPID_XTLRUNTIME__TOP = 196_u32
  DISPID_XMLDOMEVENT = 197_u32
  DISPID_XMLDOMEVENT_ONREADYSTATECHANGE = -609_i32
  DISPID_XMLDOMEVENT_ONDATAAVAILABLE = 198_u32
  DISPID_XMLDOMEVENT__TOP = 199_u32
  DISPID_XMLDOM_DOCUMENT2 = 200_u32
  DISPID_XMLDOM_DOCUMENT2_NAMESPACES = 201_u32
  DISPID_XMLDOM_DOCUMENT2_SCHEMAS = 202_u32
  DISPID_XMLDOM_DOCUMENT2_VALIDATE = 203_u32
  DISPID_XMLDOM_DOCUMENT2_SETPROPERTY = 204_u32
  DISPID_XMLDOM_DOCUMENT2_GETPROPERTY = 205_u32
  DISPID_XMLDOM_DOCUMENT2__TOP = 206_u32
  DISPID_XMLDOM_DOCUMENT3 = 207_u32
  DISPID_XMLDOM_DOCUMENT3_VALIDATENODE = 208_u32
  DISPID_XMLDOM_DOCUMENT3_IMPORTNODE = 209_u32
  DISPID_XMLDOM_DOCUMENT3__TOP = 210_u32
  DISPID_XMLDOM_SCHEMACOLLECTION = 2_u32
  DISPID_XMLDOM_SCHEMACOLLECTION_ADD = 3_u32
  DISPID_XMLDOM_SCHEMACOLLECTION_GET = 4_u32
  DISPID_XMLDOM_SCHEMACOLLECTION_REMOVE = 5_u32
  DISPID_XMLDOM_SCHEMACOLLECTION_LENGTH = 6_u32
  DISPID_XMLDOM_SCHEMACOLLECTION_NAMESPACEURI = 7_u32
  DISPID_XMLDOM_SCHEMACOLLECTION_ADDCOLLECTION = 8_u32
  DISPID_XMLDOM_SCHEMACOLLECTION__TOP = 9_u32
  DISPID_XMLDOM_SELECTION = 80_u32
  DISPID_XMLDOM_SELECTION_EXPR = 81_u32
  DISPID_XMLDOM_SELECTION_CONTEXT = 82_u32
  DISPID_XMLDOM_SELECTION_PEEKNODE = 83_u32
  DISPID_XMLDOM_SELECTION_MATCHES = 84_u32
  DISPID_XMLDOM_SELECTION_REMOVENEXT = 85_u32
  DISPID_XMLDOM_SELECTION_REMOVEALL = 86_u32
  DISPID_XMLDOM_SELECTION_CLONE = 87_u32
  DISPID_XMLDOM_SELECTION_GETPROPERTY = 88_u32
  DISPID_XMLDOM_SELECTION_SETPROPERTY = 89_u32
  DISPID_XMLDOM_SELECTION__TOP = 90_u32
  DISPID_XMLDOM_TEMPLATE = 1_u32
  DISPID_XMLDOM_TEMPLATE_STYLESHEET = 2_u32
  DISPID_XMLDOM_TEMPLATE_CREATEPROCESSOR = 3_u32
  DISPID_XMLDOM_TEMPLATE__TOP = 4_u32
  DISPID_XMLDOM_PROCESSOR = 1_u32
  DISPID_XMLDOM_PROCESSOR_INPUT = 2_u32
  DISPID_XMLDOM_PROCESSOR_XSLTEMPLATE = 3_u32
  DISPID_XMLDOM_PROCESSOR_SETSTARTMODE = 4_u32
  DISPID_XMLDOM_PROCESSOR_STARTMODE = 5_u32
  DISPID_XMLDOM_PROCESSOR_STARTMODEURI = 6_u32
  DISPID_XMLDOM_PROCESSOR_OUTPUT = 7_u32
  DISPID_XMLDOM_PROCESSOR_TRANSFORM = 8_u32
  DISPID_XMLDOM_PROCESSOR_RESET = 9_u32
  DISPID_XMLDOM_PROCESSOR_READYSTATE = 10_u32
  DISPID_XMLDOM_PROCESSOR_ADDPARAMETER = 11_u32
  DISPID_XMLDOM_PROCESSOR_ADDOBJECT = 12_u32
  DISPID_XMLDOM_PROCESSOR_STYLESHEET = 13_u32
  DISPID_XMLDOM_PROCESSOR__TOP = 14_u32
  DISPID_XMLDSO = 65536_u32
  DISPID_XMLDSO_DOCUMENT = 65537_u32
  DISPID_XMLDSO_JAVADSOCOMPATIBLE = 65538_u32
  DISPID_SAX_XMLREADER__MIN = 1281_u32
  DISPID_SAX_XMLREADER__MAX = 65536_u32
  DISPID_SAX_XMLREADER__BASE = 1281_u32
  DISPID_SAX_XMLREADER = 1281_u32
  DISPID_SAX_XMLREADER_GETFEATURE = 1282_u32
  DISPID_SAX_XMLREADER_PUTFEATURE = 1283_u32
  DISPID_SAX_XMLREADER_GETPROPERTY = 1284_u32
  DISPID_SAX_XMLREADER_PUTPROPERTY = 1285_u32
  DISPID_SAX_XMLREADER_ENTITYRESOLVER = 1286_u32
  DISPID_SAX_XMLREADER_CONTENTHANDLER = 1287_u32
  DISPID_SAX_XMLREADER_DTDHANDLER = 1288_u32
  DISPID_SAX_XMLREADER_ERRORHANDLER = 1289_u32
  DISPID_SAX_XMLREADER_BASEURL = 1290_u32
  DISPID_SAX_XMLREADER_SECUREBASEURL = 1291_u32
  DISPID_SAX_XMLREADER_PARSE = 1292_u32
  DISPID_SAX_XMLREADER_PARSEURL = 1293_u32
  DISPID_SAX_XMLREADER_PARENT = 1294_u32
  DISPID_SAX_XMLREADER__TOP = 1295_u32
  DISPID_SAX_XMLFILTER__BASE = 1296_u32
  DISPID_SAX_XMLFILTER = 1296_u32
  DISPID_SAX_XMLFILTER_GETFEATURE = 1297_u32
  DISPID_SAX_XMLFILTER_PUTFEATURE = 1298_u32
  DISPID_SAX_XMLFILTER_GETPROPERTY = 1299_u32
  DISPID_SAX_XMLFILTER_PUTPROPERTY = 1300_u32
  DISPID_SAX_XMLFILTER_ENTITYRESOLVER = 1301_u32
  DISPID_SAX_XMLFILTER_CONTENTHANDLER = 1302_u32
  DISPID_SAX_XMLFILTER_DTDHANDLER = 1303_u32
  DISPID_SAX_XMLFILTER_ERRORHANDLER = 1304_u32
  DISPID_SAX_XMLFILTER_BASEURL = 1305_u32
  DISPID_SAX_XMLFILTER_SECUREBASEURL = 1306_u32
  DISPID_SAX_XMLFILTER_PARSE = 1307_u32
  DISPID_SAX_XMLFILTER_PARSEURL = 1308_u32
  DISPID_SAX_XMLFILTER_PARENT = 1309_u32
  DISPID_SAX_XMLFILTER__TOP = 1311_u32
  DISPID_SAX_LOCATOR__BASE = 1312_u32
  DISPID_SAX_LOCATOR = 1312_u32
  DISPID_SAX_LOCATOR_COLUMNNUMBER = 1313_u32
  DISPID_SAX_LOCATOR_LINENUMBER = 1314_u32
  DISPID_SAX_LOCATOR_PUBLICID = 1315_u32
  DISPID_SAX_LOCATOR_SYSTEMID = 1316_u32
  DISPID_SAX_LOCATOR__TOP = 1317_u32
  DISPID_SAX_ENTITYRESOLVER__BASE = 1318_u32
  DISPID_SAX_ENTITYRESOLVER = 1318_u32
  DISPID_SAX_ENTITYRESOLVER_RESOLVEENTITY = 1319_u32
  DISPID_SAX_ENTITYRESOLVER__TOP = 1320_u32
  DISPID_SAX_CONTENTHANDLER__BASE = 1321_u32
  DISPID_SAX_CONTENTHANDLER = 1321_u32
  DISPID_SAX_CONTENTHANDLER_DOCUMENTLOCATOR = 1322_u32
  DISPID_SAX_CONTENTHANDLER_STARTDOCUMENT = 1323_u32
  DISPID_SAX_CONTENTHANDLER_ENDDOCUMENT = 1324_u32
  DISPID_SAX_CONTENTHANDLER_STARTPREFIXMAPPING = 1325_u32
  DISPID_SAX_CONTENTHANDLER_ENDPREFIXMAPPING = 1326_u32
  DISPID_SAX_CONTENTHANDLER_STARTELEMENT = 1327_u32
  DISPID_SAX_CONTENTHANDLER_ENDELEMENT = 1328_u32
  DISPID_SAX_CONTENTHANDLER_CHARACTERS = 1329_u32
  DISPID_SAX_CONTENTHANDLER_IGNORABLEWHITESPACE = 1330_u32
  DISPID_SAX_CONTENTHANDLER_PROCESSINGINSTRUCTION = 1331_u32
  DISPID_SAX_CONTENTHANDLER_SKIPPEDENTITY = 1332_u32
  DISPID_SAX_CONTENTHANDLER__TOP = 1333_u32
  DISPID_SAX_DTDHANDLER__BASE = 1334_u32
  DISPID_SAX_DTDHANDLER = 1334_u32
  DISPID_SAX_DTDHANDLER_NOTATIONDECL = 1335_u32
  DISPID_SAX_DTDHANDLER_UNPARSEDENTITYDECL = 1336_u32
  DISPID_SAX_DTDHANDLER__TOP = 1337_u32
  DISPID_SAX_ERRORHANDLER__BASE = 1338_u32
  DISPID_SAX_ERRORHANDLER = 1338_u32
  DISPID_SAX_ERRORHANDLER_ERROR = 1339_u32
  DISPID_SAX_ERRORHANDLER_FATALERROR = 1340_u32
  DISPID_SAX_ERRORHANDLER_IGNORABLEWARNING = 1341_u32
  DISPID_SAX_ERRORHANDLER__TOP = 1342_u32
  DISPID_SAX_ATTRIBUTES__BASE = 1343_u32
  DISPID_SAX_ATTRIBUTES = 1343_u32
  DISPID_SAX_ATTRIBUTES_LENGTH = 1344_u32
  DISPID_SAX_ATTRIBUTES_GETURI = 1345_u32
  DISPID_SAX_ATTRIBUTES_GETLOCALNAME = 1346_u32
  DISPID_SAX_ATTRIBUTES_GETQNAME = 1347_u32
  DISPID_SAX_ATTRIBUTES_GETINDEXFROMNAME = 1348_u32
  DISPID_SAX_ATTRIBUTES_GETINDEXFROMQNAME = 1349_u32
  DISPID_SAX_ATTRIBUTES_GETTYPE = 1350_u32
  DISPID_SAX_ATTRIBUTES_GETTYPEFROMNAME = 1351_u32
  DISPID_SAX_ATTRIBUTES_GETTYPEFROMQNAME = 1352_u32
  DISPID_SAX_ATTRIBUTES_GETVALUE = 1353_u32
  DISPID_SAX_ATTRIBUTES_GETVALUEFROMNAME = 1354_u32
  DISPID_SAX_ATTRIBUTES_GETVALUEFROMQNAME = 1355_u32
  DISPID_SAX_ATTRIBUTES__TOP = 1356_u32
  DISPID_SAX_LEXICALHANDLER__BASE = 1357_u32
  DISPID_SAX_LEXICALHANDLER = 1357_u32
  DISPID_SAX_LEXICALHANDLER_STARTDTD = 1358_u32
  DISPID_SAX_LEXICALHANDLER_ENDDTD = 1359_u32
  DISPID_SAX_LEXICALHANDLER_STARTENTITY = 1360_u32
  DISPID_SAX_LEXICALHANDLER_ENDENTITY = 1361_u32
  DISPID_SAX_LEXICALHANDLER_STARTCDATA = 1362_u32
  DISPID_SAX_LEXICALHANDLER_ENDCDATA = 1363_u32
  DISPID_SAX_LEXICALHANDLER_COMMENT = 1364_u32
  DISPID_SAX_LEXICALHANDLER__TOP = 1365_u32
  DISPID_SAX_DECLHANDLER__BASE = 1366_u32
  DISPID_SAX_DECLHANDLER = 1366_u32
  DISPID_SAX_DECLHANDLER_ELEMENTDECL = 1367_u32
  DISPID_SAX_DECLHANDLER_ATTRIBUTEDECL = 1368_u32
  DISPID_SAX_DECLHANDLER_INTERNALENTITYDECL = 1369_u32
  DISPID_SAX_DECLHANDLER_EXTERNALENTITYDECL = 1370_u32
  DISPID_SAX_DECLHANDLER__TOP = 1371_u32
  DISPID_MX_ATTRIBUTES__BASE = 1372_u32
  DISPID_MX_ATTRIBUTES = 1372_u32
  DISPID_MX_ATTRIBUTES_ADDATTRIBUTE = 1373_u32
  DISPID_MX_ATTRIBUTES_CLEAR = 1374_u32
  DISPID_MX_ATTRIBUTES_REMOVEATTRIBUTE = 1375_u32
  DISPID_MX_ATTRIBUTES_SETATTRIBUTE = 1376_u32
  DISPID_MX_ATTRIBUTES_SETATTRIBUTES = 1377_u32
  DISPID_MX_ATTRIBUTES_SETLOCALNAME = 1378_u32
  DISPID_MX_ATTRIBUTES_SETQNAME = 1379_u32
  DISPID_MX_ATTRIBUTES_SETTYPE = 1380_u32
  DISPID_MX_ATTRIBUTES_SETURI = 1381_u32
  DISPID_MX_ATTRIBUTES_SETVALUE = 1382_u32
  DISPID_MX_ATTRIBUTES_ADDATTRIBUTEFROMINDEX = 1383_u32
  DISPID_MX_ATTRIBUTES__TOP = 1383_u32
  DISPID_MX_WRITER__BASE = 1384_u32
  DISPID_MX_WRITER = 1384_u32
  DISPID_MX_WRITER_OUTPUT = 1385_u32
  DISPID_MX_WRITER_DESTINATION = 1386_u32
  DISPID_MX_WRITER_ENCODING = 1387_u32
  DISPID_MX_WRITER_BYTEORDERMARK = 1388_u32
  DISPID_MX_WRITER_INDENT = 1389_u32
  DISPID_MX_WRITER_STANDALONE = 1390_u32
  DISPID_MX_WRITER_OMITXMLDECLARATION = 1391_u32
  DISPID_MX_WRITER_VERSION = 1392_u32
  DISPID_MX_WRITER_DISABLEOUTPUTESCAPING = 1393_u32
  DISPID_MX_WRITER_FLUSH = 1394_u32
  DISPID_MX_WRITER_RESET = 1395_u32
  DISPID_MX_WRITER__TOP = 1396_u32
  DISPID_MX_READER_CONTROL__BASE = 1397_u32
  DISPID_MX_READER_CONTROL = 1397_u32
  DISPID_MX_READER_CONTROL_ABORT = 1398_u32
  DISPID_MX_READER_CONTROL_RESUME = 1399_u32
  DISPID_MX_READER_CONTROL_SUSPEND = 1400_u32
  DISPID_MX_READER_CONTROL__TOP = 1401_u32
  DISPID_MX_SCHEMADECLHANDLER__BASE = 1402_u32
  DISPID_MX_SCHEMADECLHANDLER = 1402_u32
  DISPID_MX_SCHEMADECLHANDLER_SCHEMAELEMENTDECL = 1403_u32
  DISPID_MX_SCHEMADECLHANDLER__TOP = 1404_u32
  DISPID_MX_NSMGR__BASE = 1405_u32
  DISPID_MX_NSMGR = 1405_u32
  DISPID_MX_NSMGR_ALLOWOVERRIDE = 1406_u32
  DISPID_MX_NSMGR_RESET = 1407_u32
  DISPID_MX_NSMGR_PUSHCONTEXT = 1408_u32
  DISPID_MX_NSMGR_PUSHNODECONTEXT = 1409_u32
  DISPID_MX_NSMGR_POPCONTEXT = 1410_u32
  DISPID_MX_NSMGR_DECLAREPREFIX = 1411_u32
  DISPID_MX_NSMGR_GETDECLAREDPREFIXES = 1412_u32
  DISPID_MX_NSMGR_GETPREFIXES = 1413_u32
  DISPID_MX_NSMGR_GETURI = 1414_u32
  DISPID_MX_NSMGR_GETURIFROMNODE = 1415_u32
  DISPID_MX_NSMGR_LENGTH = 1416_u32
  DISPID_MX_NSMGR__TOP = 1417_u32
  DISPID_MXXML_FILTER__BASE = 1418_u32
  DISPID_MXXML_FILTER = 1418_u32
  DISPID_MXXML_FILTER_CONTENTHANDLER = 1419_u32
  DISPID_MXXML_FILTER_DTDHANDLER = 1420_u32
  DISPID_MXXML_FILTER_ENTITYRESOLVER = 1421_u32
  DISPID_MXXML_FILTER_ERRORHANDLER = 1422_u32
  DISPID_MXXML_FILTER_GETFEATURE = 1423_u32
  DISPID_MXXML_FILTER_GETPROPERTY = 1424_u32
  DISPID_MXXML_FILTER_PUTFEATURE = 1425_u32
  DISPID_MXXML_FILTER_PUTPROPERTY = 1426_u32
  DISPID_MXXML_FILTER__TOP = 1427_u32
  DISPID_SOM = 1418_u32
  DISPID_SOM_VALIDATE = 1419_u32
  DISPID_SOM_VALIDATEONLOAD = 1420_u32
  DISPID_SOM_GETSCHEMA = 1421_u32
  DISPID_SOM_GETDECLARATION = 1422_u32
  DISPID_SOM_ITEMBYNAME = 1423_u32
  DISPID_SOM_ITEMBYQNAME = 1424_u32
  DISPID_SOM_ANYATTRIBUTE = 1425_u32
  DISPID_SOM_ATTRIBUTEGROUPS = 1426_u32
  DISPID_SOM_ATTRIBUTES = 1427_u32
  DISPID_SOM_BASETYPES = 1428_u32
  DISPID_SOM_CONTENTMODEL = 1429_u32
  DISPID_SOM_CONTENTTYPE = 1430_u32
  DISPID_SOM_DEFAULTVALUE = 1431_u32
  DISPID_SOM_DERIVEDBY = 1432_u32
  DISPID_SOM_DISALLOWED = 1433_u32
  DISPID_SOM_ELEMENTS = 1434_u32
  DISPID_SOM_ENUMERATION = 1435_u32
  DISPID_SOM_FIELDS = 1436_u32
  DISPID_SOM_FINAL = 1437_u32
  DISPID_SOM_FIXEDVALUE = 1438_u32
  DISPID_SOM_FRACTIONDIGITS = 1439_u32
  DISPID_SOM_ID = 1440_u32
  DISPID_SOM_IDCONSTRAINTS = 1441_u32
  DISPID_SOM_ISABSTRACT = 1442_u32
  DISPID_SOM_ISNILLABLE = 1443_u32
  DISPID_SOM_ISREFERENCE = 1444_u32
  DISPID_SOM_ISVALID = 1445_u32
  DISPID_SOM_ITEMTYPE = 1446_u32
  DISPID_SOM_LENGTH = 1447_u32
  DISPID_SOM_MAXEXCLUSIVE = 1448_u32
  DISPID_SOM_MAXINCLUSIVE = 1449_u32
  DISPID_SOM_MAXLENGTH = 1450_u32
  DISPID_SOM_MAXOCCURS = 1451_u32
  DISPID_SOM_MINEXCLUSIVE = 1452_u32
  DISPID_SOM_MININCLUSIVE = 1453_u32
  DISPID_SOM_MINLENGTH = 1454_u32
  DISPID_SOM_MINOCCURS = 1455_u32
  DISPID_SOM_MODELGROUPS = 1456_u32
  DISPID_SOM_NAME = 1457_u32
  DISPID_SOM_NAMESPACES = 1458_u32
  DISPID_SOM_NAMESPACEURI = 1459_u32
  DISPID_SOM_NOTATIONS = 1460_u32
  DISPID_SOM_PARTICLES = 1461_u32
  DISPID_SOM_PATTERNS = 1462_u32
  DISPID_SOM_PROCESSCONTENTS = 1463_u32
  DISPID_SOM_PROHIBITED = 1464_u32
  DISPID_SOM_PUBLICIDENTIFIER = 1465_u32
  DISPID_SOM_REFERENCEDKEY = 1466_u32
  DISPID_SOM_SCHEMA = 1467_u32
  DISPID_SOM_SCHEMALOCATIONS = 1468_u32
  DISPID_SOM_SCOPE = 1469_u32
  DISPID_SOM_SELECTOR = 1470_u32
  DISPID_SOM_SUBSTITUTIONGROUP = 1471_u32
  DISPID_SOM_EXCLUSIONS = 1472_u32
  DISPID_SOM_SYSTEMIDENTIFIER = 1473_u32
  DISPID_SOM_TARGETNAMESPACE = 1474_u32
  DISPID_SOM_TOTALDIGITS = 1475_u32
  DISPID_SOM_TYPE = 1476_u32
  DISPID_SOM_TYPES = 1477_u32
  DISPID_SOM_UNHANDLEDATTRS = 1478_u32
  DISPID_SOM_USE = 1479_u32
  DISPID_SOM_VARIETY = 1480_u32
  DISPID_SOM_VERSION = 1481_u32
  DISPID_SOM_WHITESPACE = 1482_u32
  DISPID_SOM_WRITEANNOTATION = 1483_u32
  DISPID_SOM_TOP = 1484_u32
  DISPID_XMLDSIG = 1_u32
  DISPID_XMLDSIG_CREATEKEYFROMCSP = 1_u32
  DISPID_XMLDSIG_CREATEKEYFROMHMACSECRET = 2_u32
  DISPID_XMLDSIG_CREATEKEYFROMNODE = 3_u32
  DISPID_XMLDSIG_CREATESAXPROXY = 4_u32
  DISPID_XMLDSIG_GETVERIFYINGCERTIFICATE = 5_u32
  DISPID_XMLDSIG_SETREFERENCEDATA = 6_u32
  DISPID_XMLDSIG_SIGN = 7_u32
  DISPID_XMLDSIG_SIGNATURE = 8_u32
  DISPID_XMLDSIG_STORE = 9_u32
  DISPID_XMLDSIG_VERIFY = 10_u32
  DOMDocument = LibC::GUID.new(0x2933bf90_u32, 0x7b36_u16, 0x11d2_u16, StaticArray[0xb2_u8, 0xe_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x98_u8, 0x3e_u8, 0x60_u8])
  DOMFreeThreadedDocument = LibC::GUID.new(0x2933bf91_u32, 0x7b36_u16, 0x11d2_u16, StaticArray[0xb2_u8, 0xe_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x98_u8, 0x3e_u8, 0x60_u8])
  XMLHTTPRequest = LibC::GUID.new(0xed8c108e_u32, 0x4349_u16, 0x11d2_u16, StaticArray[0x91_u8, 0xa4_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x79_u8, 0x69_u8, 0xe8_u8])
  XMLDSOControl = LibC::GUID.new(0x550dda30_u32, 0x541_u16, 0x11d2_u16, StaticArray[0x9c_u8, 0xa9_u8, 0x0_u8, 0x60_u8, 0xb0_u8, 0xec_u8, 0x3d_u8, 0x39_u8])
  XMLDocument = LibC::GUID.new(0xcfc399af_u32, 0xd876_u16, 0x11d0_u16, StaticArray[0x9c_u8, 0x10_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc9_u8, 0x9c_u8, 0x8e_u8])
  DOMDocument60 = LibC::GUID.new(0x88d96a05_u32, 0xf192_u16, 0x11d4_u16, StaticArray[0xa6_u8, 0x5f_u8, 0x0_u8, 0x40_u8, 0x96_u8, 0x32_u8, 0x51_u8, 0xe5_u8])
  FreeThreadedDOMDocument60 = LibC::GUID.new(0x88d96a06_u32, 0xf192_u16, 0x11d4_u16, StaticArray[0xa6_u8, 0x5f_u8, 0x0_u8, 0x40_u8, 0x96_u8, 0x32_u8, 0x51_u8, 0xe5_u8])
  XMLSchemaCache60 = LibC::GUID.new(0x88d96a07_u32, 0xf192_u16, 0x11d4_u16, StaticArray[0xa6_u8, 0x5f_u8, 0x0_u8, 0x40_u8, 0x96_u8, 0x32_u8, 0x51_u8, 0xe5_u8])
  XSLTemplate60 = LibC::GUID.new(0x88d96a08_u32, 0xf192_u16, 0x11d4_u16, StaticArray[0xa6_u8, 0x5f_u8, 0x0_u8, 0x40_u8, 0x96_u8, 0x32_u8, 0x51_u8, 0xe5_u8])
  XMLHTTP60 = LibC::GUID.new(0x88d96a0a_u32, 0xf192_u16, 0x11d4_u16, StaticArray[0xa6_u8, 0x5f_u8, 0x0_u8, 0x40_u8, 0x96_u8, 0x32_u8, 0x51_u8, 0xe5_u8])
  FreeThreadedXMLHTTP60 = LibC::GUID.new(0x88d96a09_u32, 0xf192_u16, 0x11d4_u16, StaticArray[0xa6_u8, 0x5f_u8, 0x0_u8, 0x40_u8, 0x96_u8, 0x32_u8, 0x51_u8, 0xe5_u8])
  ServerXMLHTTP60 = LibC::GUID.new(0x88d96a0b_u32, 0xf192_u16, 0x11d4_u16, StaticArray[0xa6_u8, 0x5f_u8, 0x0_u8, 0x40_u8, 0x96_u8, 0x32_u8, 0x51_u8, 0xe5_u8])
  SAXXMLReader60 = LibC::GUID.new(0x88d96a0c_u32, 0xf192_u16, 0x11d4_u16, StaticArray[0xa6_u8, 0x5f_u8, 0x0_u8, 0x40_u8, 0x96_u8, 0x32_u8, 0x51_u8, 0xe5_u8])
  MXXMLWriter60 = LibC::GUID.new(0x88d96a0f_u32, 0xf192_u16, 0x11d4_u16, StaticArray[0xa6_u8, 0x5f_u8, 0x0_u8, 0x40_u8, 0x96_u8, 0x32_u8, 0x51_u8, 0xe5_u8])
  MXHTMLWriter60 = LibC::GUID.new(0x88d96a10_u32, 0xf192_u16, 0x11d4_u16, StaticArray[0xa6_u8, 0x5f_u8, 0x0_u8, 0x40_u8, 0x96_u8, 0x32_u8, 0x51_u8, 0xe5_u8])
  SAXAttributes60 = LibC::GUID.new(0x88d96a0e_u32, 0xf192_u16, 0x11d4_u16, StaticArray[0xa6_u8, 0x5f_u8, 0x0_u8, 0x40_u8, 0x96_u8, 0x32_u8, 0x51_u8, 0xe5_u8])
  MXNamespaceManager60 = LibC::GUID.new(0x88d96a11_u32, 0xf192_u16, 0x11d4_u16, StaticArray[0xa6_u8, 0x5f_u8, 0x0_u8, 0x40_u8, 0x96_u8, 0x32_u8, 0x51_u8, 0xe5_u8])


  enum DOMNodeType : Int32
    NODE_INVALID = 0
    NODE_ELEMENT = 1
    NODE_ATTRIBUTE = 2
    NODE_TEXT = 3
    NODE_CDATA_SECTION = 4
    NODE_ENTITY_REFERENCE = 5
    NODE_ENTITY = 6
    NODE_PROCESSING_INSTRUCTION = 7
    NODE_COMMENT = 8
    NODE_DOCUMENT = 9
    NODE_DOCUMENT_TYPE = 10
    NODE_DOCUMENT_FRAGMENT = 11
    NODE_NOTATION = 12
  end

  enum XMLEMEM_TYPE : Int32
    XMLELEMTYPE_ELEMENT = 0
    XMLELEMTYPE_TEXT = 1
    XMLELEMTYPE_COMMENT = 2
    XMLELEMTYPE_DOCUMENT = 3
    XMLELEMTYPE_DTD = 4
    XMLELEMTYPE_PI = 5
    XMLELEMTYPE_OTHER = 6
  end

  enum SERVERXMLHTTP_OPTION : Int32
    SXH_OPTION_URL = -1
    SXH_OPTION_URL_CODEPAGE = 0
    SXH_OPTION_ESCAPE_PERCENT_IN_URL = 1
    SXH_OPTION_IGNORE_SERVER_SSL_CERT_ERROR_FLAGS = 2
    SXH_OPTION_SELECT_CLIENT_SSL_CERT = 3
  end

  enum SXH_SERVER_CERT_OPTION : Int32
    SXH_SERVER_CERT_IGNORE_UNKNOWN_CA = 256
    SXH_SERVER_CERT_IGNORE_WRONG_USAGE = 512
    SXH_SERVER_CERT_IGNORE_CERT_CN_INVALID = 4096
    SXH_SERVER_CERT_IGNORE_CERT_DATE_INVALID = 8192
    SXH_SERVER_CERT_IGNORE_ALL_SERVER_ERRORS = 13056
  end

  enum SXH_PROXY_SETTING : Int32
    SXH_PROXY_SET_DEFAULT = 0
    SXH_PROXY_SET_PRECONFIG = 0
    SXH_PROXY_SET_DIRECT = 1
    SXH_PROXY_SET_PROXY = 2
  end

  enum SOMITEMTYPE : Int32
    SOMITEM_SCHEMA = 4096
    SOMITEM_ATTRIBUTE = 4097
    SOMITEM_ATTRIBUTEGROUP = 4098
    SOMITEM_NOTATION = 4099
    SOMITEM_ANNOTATION = 4100
    SOMITEM_IDENTITYCONSTRAINT = 4352
    SOMITEM_KEY = 4353
    SOMITEM_KEYREF = 4354
    SOMITEM_UNIQUE = 4355
    SOMITEM_ANYTYPE = 8192
    SOMITEM_DATATYPE = 8448
    SOMITEM_DATATYPE_ANYTYPE = 8449
    SOMITEM_DATATYPE_ANYURI = 8450
    SOMITEM_DATATYPE_BASE64BINARY = 8451
    SOMITEM_DATATYPE_BOOLEAN = 8452
    SOMITEM_DATATYPE_BYTE = 8453
    SOMITEM_DATATYPE_DATE = 8454
    SOMITEM_DATATYPE_DATETIME = 8455
    SOMITEM_DATATYPE_DAY = 8456
    SOMITEM_DATATYPE_DECIMAL = 8457
    SOMITEM_DATATYPE_DOUBLE = 8458
    SOMITEM_DATATYPE_DURATION = 8459
    SOMITEM_DATATYPE_ENTITIES = 8460
    SOMITEM_DATATYPE_ENTITY = 8461
    SOMITEM_DATATYPE_FLOAT = 8462
    SOMITEM_DATATYPE_HEXBINARY = 8463
    SOMITEM_DATATYPE_ID = 8464
    SOMITEM_DATATYPE_IDREF = 8465
    SOMITEM_DATATYPE_IDREFS = 8466
    SOMITEM_DATATYPE_INT = 8467
    SOMITEM_DATATYPE_INTEGER = 8468
    SOMITEM_DATATYPE_LANGUAGE = 8469
    SOMITEM_DATATYPE_LONG = 8470
    SOMITEM_DATATYPE_MONTH = 8471
    SOMITEM_DATATYPE_MONTHDAY = 8472
    SOMITEM_DATATYPE_NAME = 8473
    SOMITEM_DATATYPE_NCNAME = 8474
    SOMITEM_DATATYPE_NEGATIVEINTEGER = 8475
    SOMITEM_DATATYPE_NMTOKEN = 8476
    SOMITEM_DATATYPE_NMTOKENS = 8477
    SOMITEM_DATATYPE_NONNEGATIVEINTEGER = 8478
    SOMITEM_DATATYPE_NONPOSITIVEINTEGER = 8479
    SOMITEM_DATATYPE_NORMALIZEDSTRING = 8480
    SOMITEM_DATATYPE_NOTATION = 8481
    SOMITEM_DATATYPE_POSITIVEINTEGER = 8482
    SOMITEM_DATATYPE_QNAME = 8483
    SOMITEM_DATATYPE_SHORT = 8484
    SOMITEM_DATATYPE_STRING = 8485
    SOMITEM_DATATYPE_TIME = 8486
    SOMITEM_DATATYPE_TOKEN = 8487
    SOMITEM_DATATYPE_UNSIGNEDBYTE = 8488
    SOMITEM_DATATYPE_UNSIGNEDINT = 8489
    SOMITEM_DATATYPE_UNSIGNEDLONG = 8490
    SOMITEM_DATATYPE_UNSIGNEDSHORT = 8491
    SOMITEM_DATATYPE_YEAR = 8492
    SOMITEM_DATATYPE_YEARMONTH = 8493
    SOMITEM_DATATYPE_ANYSIMPLETYPE = 8703
    SOMITEM_SIMPLETYPE = 8704
    SOMITEM_COMPLEXTYPE = 9216
    SOMITEM_PARTICLE = 16384
    SOMITEM_ANY = 16385
    SOMITEM_ANYATTRIBUTE = 16386
    SOMITEM_ELEMENT = 16387
    SOMITEM_GROUP = 16640
    SOMITEM_ALL = 16641
    SOMITEM_CHOICE = 16642
    SOMITEM_SEQUENCE = 16643
    SOMITEM_EMPTYPARTICLE = 16644
    SOMITEM_NULL = 2048
    SOMITEM_NULL_TYPE = 10240
    SOMITEM_NULL_ANY = 18433
    SOMITEM_NULL_ANYATTRIBUTE = 18434
    SOMITEM_NULL_ELEMENT = 18435
  end

  enum SCHEMAUSE : Int32
    SCHEMAUSE_OPTIONAL = 0
    SCHEMAUSE_PROHIBITED = 1
    SCHEMAUSE_REQUIRED = 2
  end

  enum SCHEMADERIVATIONMETHOD : Int32
    SCHEMADERIVATIONMETHOD_EMPTY = 0
    SCHEMADERIVATIONMETHOD_SUBSTITUTION = 1
    SCHEMADERIVATIONMETHOD_EXTENSION = 2
    SCHEMADERIVATIONMETHOD_RESTRICTION = 4
    SCHEMADERIVATIONMETHOD_LIST = 8
    SCHEMADERIVATIONMETHOD_UNION = 16
    SCHEMADERIVATIONMETHOD_ALL = 255
    SCHEMADERIVATIONMETHOD_NONE = 256
  end

  enum SCHEMACONTENTTYPE : Int32
    SCHEMACONTENTTYPE_EMPTY = 0
    SCHEMACONTENTTYPE_TEXTONLY = 1
    SCHEMACONTENTTYPE_ELEMENTONLY = 2
    SCHEMACONTENTTYPE_MIXED = 3
  end

  enum SCHEMAPROCESSCONTENTS : Int32
    SCHEMAPROCESSCONTENTS_NONE = 0
    SCHEMAPROCESSCONTENTS_SKIP = 1
    SCHEMAPROCESSCONTENTS_LAX = 2
    SCHEMAPROCESSCONTENTS_STRICT = 3
  end

  enum SCHEMAWHITESPACE : Int32
    SCHEMAWHITESPACE_NONE = -1
    SCHEMAWHITESPACE_PRESERVE = 0
    SCHEMAWHITESPACE_REPLACE = 1
    SCHEMAWHITESPACE_COLLAPSE = 2
  end

  enum SCHEMATYPEVARIETY : Int32
    SCHEMATYPEVARIETY_NONE = -1
    SCHEMATYPEVARIETY_ATOMIC = 0
    SCHEMATYPEVARIETY_LIST = 1
    SCHEMATYPEVARIETY_UNION = 2
  end

  enum XHR_COOKIE_STATE : Int32
    XHR_COOKIE_STATE_UNKNOWN = 0
    XHR_COOKIE_STATE_ACCEPT = 1
    XHR_COOKIE_STATE_PROMPT = 2
    XHR_COOKIE_STATE_LEASH = 3
    XHR_COOKIE_STATE_DOWNGRADE = 4
    XHR_COOKIE_STATE_REJECT = 5
  end

  enum XHR_COOKIE_FLAG : Int32
    XHR_COOKIE_IS_SECURE = 1
    XHR_COOKIE_IS_SESSION = 2
    XHR_COOKIE_THIRD_PARTY = 16
    XHR_COOKIE_PROMPT_REQUIRED = 32
    XHR_COOKIE_EVALUATE_P3P = 64
    XHR_COOKIE_APPLY_P3P = 128
    XHR_COOKIE_P3P_ENABLED = 256
    XHR_COOKIE_IS_RESTRICTED = 512
    XHR_COOKIE_IE6 = 1024
    XHR_COOKIE_IS_LEGACY = 2048
    XHR_COOKIE_NON_SCRIPT = 4096
    XHR_COOKIE_HTTPONLY = 8192
  end

  enum XHR_CRED_PROMPT : Int32
    XHR_CRED_PROMPT_ALL = 0
    XHR_CRED_PROMPT_NONE = 1
    XHR_CRED_PROMPT_PROXY = 2
  end

  enum XHR_AUTH : Int32
    XHR_AUTH_ALL = 0
    XHR_AUTH_NONE = 1
    XHR_AUTH_PROXY = 2
  end

  enum XHR_PROPERTY : Int32
    XHR_PROP_NO_CRED_PROMPT = 0
    XHR_PROP_NO_AUTH = 1
    XHR_PROP_TIMEOUT = 2
    XHR_PROP_NO_DEFAULT_HEADERS = 3
    XHR_PROP_REPORT_REDIRECT_STATUS = 4
    XHR_PROP_NO_CACHE = 5
    XHR_PROP_EXTENDED_ERROR = 6
    XHR_PROP_QUERY_STRING_UTF8 = 7
    XHR_PROP_IGNORE_CERT_ERRORS = 8
    XHR_PROP_ONDATA_THRESHOLD = 9
    XHR_PROP_SET_ENTERPRISEID = 10
    XHR_PROP_MAX_CONNECTIONS = 11
  end

  enum XHR_CERT_IGNORE_FLAG : UInt32
    XHR_CERT_IGNORE_REVOCATION_FAILED = 128
    XHR_CERT_IGNORE_UNKNOWN_CA = 256
    XHR_CERT_IGNORE_CERT_CN_INVALID = 4096
    XHR_CERT_IGNORE_CERT_DATE_INVALID = 8192
    XHR_CERT_IGNORE_ALL_SERVER_ERRORS = 12672
  end

  enum XHR_CERT_ERROR_FLAG : UInt32
    XHR_CERT_ERROR_REVOCATION_FAILED = 8388608
    XHR_CERT_ERROR_UNKNOWN_CA = 16777216
    XHR_CERT_ERROR_CERT_CN_INVALID = 33554432
    XHR_CERT_ERROR_CERT_DATE_INVALID = 67108864
    XHR_CERT_ERROR_ALL_SERVER_ERRORS = 125829120
  end

  struct XML_ERROR
    _n_line : UInt32
    _pch_buf : UInt8*
    _cch_buf : UInt32
    _ich : UInt32
    _psz_found : UInt8*
    _psz_expected : UInt8*
    _reserved1 : UInt32
    _reserved2 : UInt32
  end
  struct Msxml6_referenceremainingtypes__
    __tag_dom_node_type__ : DOMNodeType
    __dom_node_type__ : DOMNodeType
    __server_xml_http_option_enum__ : SERVERXMLHTTP_OPTION
    __server_xml_http_option__ : SERVERXMLHTTP_OPTION
    __server_cert_option_enum__ : SXH_SERVER_CERT_OPTION
    __server_cert_option__ : SXH_SERVER_CERT_OPTION
    __proxy_setting_enum__ : SXH_PROXY_SETTING
    __proxy_setting__ : SXH_PROXY_SETTING
    __som_item_type_enum__ : SOMITEMTYPE
    __som_item_type__ : SOMITEMTYPE
    __schema_use_enum__ : SCHEMAUSE
    __schema_use__ : SCHEMAUSE
    __schema_derivation_method_enum__ : SCHEMADERIVATIONMETHOD
    __schema_derivation_method__ : SCHEMADERIVATIONMETHOD
    __schema_content_type_enum__ : SCHEMACONTENTTYPE
    __schema_content_type__ : SCHEMACONTENTTYPE
    __schema_process_contents_enum__ : SCHEMAPROCESSCONTENTS
    __schema_process_contents__ : SCHEMAPROCESSCONTENTS
    __schema_whitespace_enum__ : SCHEMAWHITESPACE
    __schema_whitespace__ : SCHEMAWHITESPACE
    __schema_type_variety_enum__ : SCHEMATYPEVARIETY
    __schema_type_variety__ : SCHEMATYPEVARIETY
  end
  struct XHR_COOKIE
    pwsz_url : LibC::LPWSTR
    pwsz_name : LibC::LPWSTR
    pwsz_value : LibC::LPWSTR
    pwsz_p3_p_policy : LibC::LPWSTR
    ft_expires : FILETIME
    dw_flags : UInt32
  end
  struct XHR_CERT
    cb_cert : UInt32
    pb_cert : UInt8*
  end


  struct IXMLDOMImplementationVTbl
    query_interface : Proc(IXMLDOMImplementation*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMImplementation*, UInt32)
    release : Proc(IXMLDOMImplementation*, UInt32)
    get_type_info_count : Proc(IXMLDOMImplementation*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMImplementation*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMImplementation*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMImplementation*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    has_feature : Proc(IXMLDOMImplementation*, UInt8*, UInt8*, Int16*, HRESULT)
  end

  IXMLDOMImplementation_GUID = LibC::GUID.new("2933bf8f-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMImplementation = "2933bf8f-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMImplementation
    lpVtbl : IXMLDOMImplementationVTbl*
  end

  struct IXMLDOMNodeVTbl
    query_interface : Proc(IXMLDOMNode*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMNode*, UInt32)
    release : Proc(IXMLDOMNode*, UInt32)
    get_type_info_count : Proc(IXMLDOMNode*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMNode*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMNode*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMNode*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMNode*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMNode*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMNode*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMNode*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMNode*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMNode*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMNode*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMNode*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMNode*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMNode*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMNode*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMNode*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMNode*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMNode*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMNode*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMNode*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMNode*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMNode*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMNode*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMNode*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMNode*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMNode*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMNode*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMNode*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMNode*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMNode*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMNode*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMNode*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMNode*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMNode*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMNode*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMNode*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMNode*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMNode*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMNode*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMNode*, IXMLDOMNode, VARIANT, HRESULT)
  end

  IXMLDOMNode_GUID = LibC::GUID.new("2933bf80-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMNode = "2933bf80-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMNode
    lpVtbl : IXMLDOMNodeVTbl*
  end

  struct IXMLDOMDocumentFragmentVTbl
    query_interface : Proc(IXMLDOMDocumentFragment*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMDocumentFragment*, UInt32)
    release : Proc(IXMLDOMDocumentFragment*, UInt32)
    get_type_info_count : Proc(IXMLDOMDocumentFragment*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMDocumentFragment*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMDocumentFragment*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMDocumentFragment*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMDocumentFragment*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMDocumentFragment*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMDocumentFragment*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMDocumentFragment*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMDocumentFragment*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMDocumentFragment*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMDocumentFragment*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMDocumentFragment*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMDocumentFragment*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMDocumentFragment*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMDocumentFragment*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMDocumentFragment*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMDocumentFragment*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMDocumentFragment*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMDocumentFragment*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMDocumentFragment*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMDocumentFragment*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMDocumentFragment*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMDocumentFragment*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMDocumentFragment*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMDocumentFragment*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMDocumentFragment*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMDocumentFragment*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMDocumentFragment*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMDocumentFragment*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMDocumentFragment*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMDocumentFragment*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMDocumentFragment*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMDocumentFragment*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMDocumentFragment*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMDocumentFragment*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMDocumentFragment*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMDocumentFragment*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMDocumentFragment*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMDocumentFragment*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMDocumentFragment*, IXMLDOMNode, VARIANT, HRESULT)
  end

  IXMLDOMDocumentFragment_GUID = LibC::GUID.new("3efaa413-272f-11d2-836f-0000f87a7782")
  CLSID_IXMLDOMDocumentFragment = "3efaa413-272f-11d2-836f-0000f87a7782"
  struct IXMLDOMDocumentFragment
    lpVtbl : IXMLDOMDocumentFragmentVTbl*
  end

  struct IXMLDOMDocumentVTbl
    query_interface : Proc(IXMLDOMDocument*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMDocument*, UInt32)
    release : Proc(IXMLDOMDocument*, UInt32)
    get_type_info_count : Proc(IXMLDOMDocument*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMDocument*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMDocument*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMDocument*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMDocument*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMDocument*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMDocument*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMDocument*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMDocument*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMDocument*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMDocument*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMDocument*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMDocument*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMDocument*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMDocument*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMDocument*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMDocument*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMDocument*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMDocument*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMDocument*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMDocument*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMDocument*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMDocument*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMDocument*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMDocument*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMDocument*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMDocument*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMDocument*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMDocument*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMDocument*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMDocument*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMDocument*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMDocument*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMDocument*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMDocument*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMDocument*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMDocument*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMDocument*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMDocument*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMDocument*, IXMLDOMNode, VARIANT, HRESULT)
    get_doctype : Proc(IXMLDOMDocument*, IXMLDOMDocumentType*, HRESULT)
    get_implementation : Proc(IXMLDOMDocument*, IXMLDOMImplementation*, HRESULT)
    get_document_element : Proc(IXMLDOMDocument*, IXMLDOMElement*, HRESULT)
    putref_document_element : Proc(IXMLDOMDocument*, IXMLDOMElement, HRESULT)
    create_element : Proc(IXMLDOMDocument*, UInt8*, IXMLDOMElement*, HRESULT)
    create_document_fragment : Proc(IXMLDOMDocument*, IXMLDOMDocumentFragment*, HRESULT)
    create_text_node : Proc(IXMLDOMDocument*, UInt8*, IXMLDOMText*, HRESULT)
    create_comment : Proc(IXMLDOMDocument*, UInt8*, IXMLDOMComment*, HRESULT)
    create_cdata_section : Proc(IXMLDOMDocument*, UInt8*, IXMLDOMCDATASection*, HRESULT)
    create_processing_instruction : Proc(IXMLDOMDocument*, UInt8*, UInt8*, IXMLDOMProcessingInstruction*, HRESULT)
    create_attribute : Proc(IXMLDOMDocument*, UInt8*, IXMLDOMAttribute*, HRESULT)
    create_entity_reference : Proc(IXMLDOMDocument*, UInt8*, IXMLDOMEntityReference*, HRESULT)
    get_elements_by_tag_name : Proc(IXMLDOMDocument*, UInt8*, IXMLDOMNodeList*, HRESULT)
    create_node : Proc(IXMLDOMDocument*, VARIANT, UInt8*, UInt8*, IXMLDOMNode*, HRESULT)
    node_from_id : Proc(IXMLDOMDocument*, UInt8*, IXMLDOMNode*, HRESULT)
    load : Proc(IXMLDOMDocument*, VARIANT, Int16*, HRESULT)
    get_ready_state : Proc(IXMLDOMDocument*, Int32*, HRESULT)
    get_parse_error : Proc(IXMLDOMDocument*, IXMLDOMParseError*, HRESULT)
    get_url : Proc(IXMLDOMDocument*, UInt8**, HRESULT)
    get_async : Proc(IXMLDOMDocument*, Int16*, HRESULT)
    put_async : Proc(IXMLDOMDocument*, Int16, HRESULT)
    abort : Proc(IXMLDOMDocument*, HRESULT)
    load_xml : Proc(IXMLDOMDocument*, UInt8*, Int16*, HRESULT)
    save : Proc(IXMLDOMDocument*, VARIANT, HRESULT)
    get_validate_on_parse : Proc(IXMLDOMDocument*, Int16*, HRESULT)
    put_validate_on_parse : Proc(IXMLDOMDocument*, Int16, HRESULT)
    get_resolve_externals : Proc(IXMLDOMDocument*, Int16*, HRESULT)
    put_resolve_externals : Proc(IXMLDOMDocument*, Int16, HRESULT)
    get_preserve_white_space : Proc(IXMLDOMDocument*, Int16*, HRESULT)
    put_preserve_white_space : Proc(IXMLDOMDocument*, Int16, HRESULT)
    put_onreadystatechange : Proc(IXMLDOMDocument*, VARIANT, HRESULT)
    put_ondataavailable : Proc(IXMLDOMDocument*, VARIANT, HRESULT)
    put_ontransformnode : Proc(IXMLDOMDocument*, VARIANT, HRESULT)
  end

  IXMLDOMDocument_GUID = LibC::GUID.new("2933bf81-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMDocument = "2933bf81-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMDocument
    lpVtbl : IXMLDOMDocumentVTbl*
  end

  struct IXMLDOMNodeListVTbl
    query_interface : Proc(IXMLDOMNodeList*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMNodeList*, UInt32)
    release : Proc(IXMLDOMNodeList*, UInt32)
    get_type_info_count : Proc(IXMLDOMNodeList*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMNodeList*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMNodeList*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMNodeList*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_item : Proc(IXMLDOMNodeList*, Int32, IXMLDOMNode*, HRESULT)
    get_length : Proc(IXMLDOMNodeList*, Int32*, HRESULT)
    next_node : Proc(IXMLDOMNodeList*, IXMLDOMNode*, HRESULT)
    reset : Proc(IXMLDOMNodeList*, HRESULT)
    get__new_enum : Proc(IXMLDOMNodeList*, IUnknown*, HRESULT)
  end

  IXMLDOMNodeList_GUID = LibC::GUID.new("2933bf82-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMNodeList = "2933bf82-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMNodeList
    lpVtbl : IXMLDOMNodeListVTbl*
  end

  struct IXMLDOMNamedNodeMapVTbl
    query_interface : Proc(IXMLDOMNamedNodeMap*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMNamedNodeMap*, UInt32)
    release : Proc(IXMLDOMNamedNodeMap*, UInt32)
    get_type_info_count : Proc(IXMLDOMNamedNodeMap*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMNamedNodeMap*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMNamedNodeMap*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMNamedNodeMap*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_named_item : Proc(IXMLDOMNamedNodeMap*, UInt8*, IXMLDOMNode*, HRESULT)
    set_named_item : Proc(IXMLDOMNamedNodeMap*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_named_item : Proc(IXMLDOMNamedNodeMap*, UInt8*, IXMLDOMNode*, HRESULT)
    get_item : Proc(IXMLDOMNamedNodeMap*, Int32, IXMLDOMNode*, HRESULT)
    get_length : Proc(IXMLDOMNamedNodeMap*, Int32*, HRESULT)
    get_qualified_item : Proc(IXMLDOMNamedNodeMap*, UInt8*, UInt8*, IXMLDOMNode*, HRESULT)
    remove_qualified_item : Proc(IXMLDOMNamedNodeMap*, UInt8*, UInt8*, IXMLDOMNode*, HRESULT)
    next_node : Proc(IXMLDOMNamedNodeMap*, IXMLDOMNode*, HRESULT)
    reset : Proc(IXMLDOMNamedNodeMap*, HRESULT)
    get__new_enum : Proc(IXMLDOMNamedNodeMap*, IUnknown*, HRESULT)
  end

  IXMLDOMNamedNodeMap_GUID = LibC::GUID.new("2933bf83-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMNamedNodeMap = "2933bf83-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMNamedNodeMap
    lpVtbl : IXMLDOMNamedNodeMapVTbl*
  end

  struct IXMLDOMCharacterDataVTbl
    query_interface : Proc(IXMLDOMCharacterData*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMCharacterData*, UInt32)
    release : Proc(IXMLDOMCharacterData*, UInt32)
    get_type_info_count : Proc(IXMLDOMCharacterData*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMCharacterData*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMCharacterData*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMCharacterData*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMCharacterData*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMCharacterData*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMCharacterData*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMCharacterData*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMCharacterData*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMCharacterData*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMCharacterData*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMCharacterData*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMCharacterData*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMCharacterData*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMCharacterData*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMCharacterData*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMCharacterData*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMCharacterData*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMCharacterData*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMCharacterData*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMCharacterData*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMCharacterData*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMCharacterData*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMCharacterData*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMCharacterData*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMCharacterData*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMCharacterData*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMCharacterData*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMCharacterData*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMCharacterData*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMCharacterData*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMCharacterData*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMCharacterData*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMCharacterData*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMCharacterData*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMCharacterData*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMCharacterData*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMCharacterData*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMCharacterData*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMCharacterData*, IXMLDOMNode, VARIANT, HRESULT)
    get_data : Proc(IXMLDOMCharacterData*, UInt8**, HRESULT)
    put_data : Proc(IXMLDOMCharacterData*, UInt8*, HRESULT)
    get_length : Proc(IXMLDOMCharacterData*, Int32*, HRESULT)
    substring_data : Proc(IXMLDOMCharacterData*, Int32, Int32, UInt8**, HRESULT)
    append_data : Proc(IXMLDOMCharacterData*, UInt8*, HRESULT)
    insert_data : Proc(IXMLDOMCharacterData*, Int32, UInt8*, HRESULT)
    delete_data : Proc(IXMLDOMCharacterData*, Int32, Int32, HRESULT)
    replace_data : Proc(IXMLDOMCharacterData*, Int32, Int32, UInt8*, HRESULT)
  end

  IXMLDOMCharacterData_GUID = LibC::GUID.new("2933bf84-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMCharacterData = "2933bf84-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMCharacterData
    lpVtbl : IXMLDOMCharacterDataVTbl*
  end

  struct IXMLDOMAttributeVTbl
    query_interface : Proc(IXMLDOMAttribute*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMAttribute*, UInt32)
    release : Proc(IXMLDOMAttribute*, UInt32)
    get_type_info_count : Proc(IXMLDOMAttribute*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMAttribute*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMAttribute*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMAttribute*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMAttribute*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMAttribute*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMAttribute*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMAttribute*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMAttribute*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMAttribute*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMAttribute*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMAttribute*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMAttribute*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMAttribute*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMAttribute*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMAttribute*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMAttribute*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMAttribute*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMAttribute*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMAttribute*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMAttribute*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMAttribute*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMAttribute*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMAttribute*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMAttribute*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMAttribute*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMAttribute*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMAttribute*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMAttribute*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMAttribute*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMAttribute*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMAttribute*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMAttribute*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMAttribute*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMAttribute*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMAttribute*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMAttribute*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMAttribute*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMAttribute*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMAttribute*, IXMLDOMNode, VARIANT, HRESULT)
    get_name : Proc(IXMLDOMAttribute*, UInt8**, HRESULT)
    get_value : Proc(IXMLDOMAttribute*, VARIANT*, HRESULT)
    put_value : Proc(IXMLDOMAttribute*, VARIANT, HRESULT)
  end

  IXMLDOMAttribute_GUID = LibC::GUID.new("2933bf85-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMAttribute = "2933bf85-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMAttribute
    lpVtbl : IXMLDOMAttributeVTbl*
  end

  struct IXMLDOMElementVTbl
    query_interface : Proc(IXMLDOMElement*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMElement*, UInt32)
    release : Proc(IXMLDOMElement*, UInt32)
    get_type_info_count : Proc(IXMLDOMElement*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMElement*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMElement*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMElement*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMElement*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMElement*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMElement*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMElement*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMElement*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMElement*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMElement*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMElement*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMElement*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMElement*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMElement*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMElement*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMElement*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMElement*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMElement*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMElement*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMElement*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMElement*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMElement*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMElement*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMElement*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMElement*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMElement*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMElement*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMElement*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMElement*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMElement*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMElement*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMElement*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMElement*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMElement*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMElement*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMElement*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMElement*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMElement*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMElement*, IXMLDOMNode, VARIANT, HRESULT)
    get_tag_name : Proc(IXMLDOMElement*, UInt8**, HRESULT)
    get_attribute : Proc(IXMLDOMElement*, UInt8*, VARIANT*, HRESULT)
    set_attribute : Proc(IXMLDOMElement*, UInt8*, VARIANT, HRESULT)
    remove_attribute : Proc(IXMLDOMElement*, UInt8*, HRESULT)
    get_attribute_node : Proc(IXMLDOMElement*, UInt8*, IXMLDOMAttribute*, HRESULT)
    set_attribute_node : Proc(IXMLDOMElement*, IXMLDOMAttribute, IXMLDOMAttribute*, HRESULT)
    remove_attribute_node : Proc(IXMLDOMElement*, IXMLDOMAttribute, IXMLDOMAttribute*, HRESULT)
    get_elements_by_tag_name : Proc(IXMLDOMElement*, UInt8*, IXMLDOMNodeList*, HRESULT)
    normalize : Proc(IXMLDOMElement*, HRESULT)
  end

  IXMLDOMElement_GUID = LibC::GUID.new("2933bf86-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMElement = "2933bf86-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMElement
    lpVtbl : IXMLDOMElementVTbl*
  end

  struct IXMLDOMTextVTbl
    query_interface : Proc(IXMLDOMText*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMText*, UInt32)
    release : Proc(IXMLDOMText*, UInt32)
    get_type_info_count : Proc(IXMLDOMText*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMText*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMText*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMText*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMText*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMText*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMText*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMText*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMText*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMText*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMText*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMText*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMText*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMText*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMText*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMText*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMText*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMText*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMText*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMText*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMText*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMText*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMText*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMText*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMText*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMText*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMText*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMText*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMText*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMText*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMText*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMText*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMText*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMText*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMText*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMText*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMText*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMText*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMText*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMText*, IXMLDOMNode, VARIANT, HRESULT)
    get_data : Proc(IXMLDOMText*, UInt8**, HRESULT)
    put_data : Proc(IXMLDOMText*, UInt8*, HRESULT)
    get_length : Proc(IXMLDOMText*, Int32*, HRESULT)
    substring_data : Proc(IXMLDOMText*, Int32, Int32, UInt8**, HRESULT)
    append_data : Proc(IXMLDOMText*, UInt8*, HRESULT)
    insert_data : Proc(IXMLDOMText*, Int32, UInt8*, HRESULT)
    delete_data : Proc(IXMLDOMText*, Int32, Int32, HRESULT)
    replace_data : Proc(IXMLDOMText*, Int32, Int32, UInt8*, HRESULT)
    split_text : Proc(IXMLDOMText*, Int32, IXMLDOMText*, HRESULT)
  end

  IXMLDOMText_GUID = LibC::GUID.new("2933bf87-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMText = "2933bf87-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMText
    lpVtbl : IXMLDOMTextVTbl*
  end

  struct IXMLDOMCommentVTbl
    query_interface : Proc(IXMLDOMComment*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMComment*, UInt32)
    release : Proc(IXMLDOMComment*, UInt32)
    get_type_info_count : Proc(IXMLDOMComment*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMComment*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMComment*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMComment*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMComment*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMComment*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMComment*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMComment*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMComment*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMComment*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMComment*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMComment*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMComment*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMComment*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMComment*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMComment*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMComment*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMComment*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMComment*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMComment*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMComment*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMComment*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMComment*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMComment*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMComment*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMComment*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMComment*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMComment*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMComment*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMComment*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMComment*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMComment*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMComment*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMComment*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMComment*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMComment*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMComment*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMComment*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMComment*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMComment*, IXMLDOMNode, VARIANT, HRESULT)
    get_data : Proc(IXMLDOMComment*, UInt8**, HRESULT)
    put_data : Proc(IXMLDOMComment*, UInt8*, HRESULT)
    get_length : Proc(IXMLDOMComment*, Int32*, HRESULT)
    substring_data : Proc(IXMLDOMComment*, Int32, Int32, UInt8**, HRESULT)
    append_data : Proc(IXMLDOMComment*, UInt8*, HRESULT)
    insert_data : Proc(IXMLDOMComment*, Int32, UInt8*, HRESULT)
    delete_data : Proc(IXMLDOMComment*, Int32, Int32, HRESULT)
    replace_data : Proc(IXMLDOMComment*, Int32, Int32, UInt8*, HRESULT)
  end

  IXMLDOMComment_GUID = LibC::GUID.new("2933bf88-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMComment = "2933bf88-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMComment
    lpVtbl : IXMLDOMCommentVTbl*
  end

  struct IXMLDOMProcessingInstructionVTbl
    query_interface : Proc(IXMLDOMProcessingInstruction*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMProcessingInstruction*, UInt32)
    release : Proc(IXMLDOMProcessingInstruction*, UInt32)
    get_type_info_count : Proc(IXMLDOMProcessingInstruction*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMProcessingInstruction*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMProcessingInstruction*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMProcessingInstruction*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMProcessingInstruction*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMProcessingInstruction*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMProcessingInstruction*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMProcessingInstruction*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMProcessingInstruction*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMProcessingInstruction*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMProcessingInstruction*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMProcessingInstruction*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMProcessingInstruction*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMProcessingInstruction*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMProcessingInstruction*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMProcessingInstruction*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMProcessingInstruction*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMProcessingInstruction*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMProcessingInstruction*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMProcessingInstruction*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMProcessingInstruction*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMProcessingInstruction*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMProcessingInstruction*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMProcessingInstruction*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMProcessingInstruction*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMProcessingInstruction*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMProcessingInstruction*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMProcessingInstruction*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMProcessingInstruction*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMProcessingInstruction*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMProcessingInstruction*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMProcessingInstruction*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMProcessingInstruction*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMProcessingInstruction*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMProcessingInstruction*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMProcessingInstruction*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMProcessingInstruction*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMProcessingInstruction*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMProcessingInstruction*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMProcessingInstruction*, IXMLDOMNode, VARIANT, HRESULT)
    get_target : Proc(IXMLDOMProcessingInstruction*, UInt8**, HRESULT)
    get_data : Proc(IXMLDOMProcessingInstruction*, UInt8**, HRESULT)
    put_data : Proc(IXMLDOMProcessingInstruction*, UInt8*, HRESULT)
  end

  IXMLDOMProcessingInstruction_GUID = LibC::GUID.new("2933bf89-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMProcessingInstruction = "2933bf89-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMProcessingInstruction
    lpVtbl : IXMLDOMProcessingInstructionVTbl*
  end

  struct IXMLDOMCDATASectionVTbl
    query_interface : Proc(IXMLDOMCDATASection*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMCDATASection*, UInt32)
    release : Proc(IXMLDOMCDATASection*, UInt32)
    get_type_info_count : Proc(IXMLDOMCDATASection*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMCDATASection*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMCDATASection*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMCDATASection*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMCDATASection*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMCDATASection*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMCDATASection*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMCDATASection*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMCDATASection*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMCDATASection*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMCDATASection*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMCDATASection*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMCDATASection*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMCDATASection*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMCDATASection*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMCDATASection*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMCDATASection*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMCDATASection*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMCDATASection*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMCDATASection*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMCDATASection*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMCDATASection*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMCDATASection*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMCDATASection*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMCDATASection*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMCDATASection*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMCDATASection*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMCDATASection*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMCDATASection*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMCDATASection*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMCDATASection*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMCDATASection*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMCDATASection*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMCDATASection*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMCDATASection*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMCDATASection*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMCDATASection*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMCDATASection*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMCDATASection*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMCDATASection*, IXMLDOMNode, VARIANT, HRESULT)
    get_data : Proc(IXMLDOMCDATASection*, UInt8**, HRESULT)
    put_data : Proc(IXMLDOMCDATASection*, UInt8*, HRESULT)
    get_length : Proc(IXMLDOMCDATASection*, Int32*, HRESULT)
    substring_data : Proc(IXMLDOMCDATASection*, Int32, Int32, UInt8**, HRESULT)
    append_data : Proc(IXMLDOMCDATASection*, UInt8*, HRESULT)
    insert_data : Proc(IXMLDOMCDATASection*, Int32, UInt8*, HRESULT)
    delete_data : Proc(IXMLDOMCDATASection*, Int32, Int32, HRESULT)
    replace_data : Proc(IXMLDOMCDATASection*, Int32, Int32, UInt8*, HRESULT)
    split_text : Proc(IXMLDOMCDATASection*, Int32, IXMLDOMText*, HRESULT)
  end

  IXMLDOMCDATASection_GUID = LibC::GUID.new("2933bf8a-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMCDATASection = "2933bf8a-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMCDATASection
    lpVtbl : IXMLDOMCDATASectionVTbl*
  end

  struct IXMLDOMDocumentTypeVTbl
    query_interface : Proc(IXMLDOMDocumentType*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMDocumentType*, UInt32)
    release : Proc(IXMLDOMDocumentType*, UInt32)
    get_type_info_count : Proc(IXMLDOMDocumentType*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMDocumentType*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMDocumentType*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMDocumentType*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMDocumentType*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMDocumentType*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMDocumentType*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMDocumentType*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMDocumentType*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMDocumentType*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMDocumentType*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMDocumentType*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMDocumentType*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMDocumentType*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMDocumentType*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMDocumentType*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMDocumentType*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMDocumentType*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMDocumentType*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMDocumentType*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMDocumentType*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMDocumentType*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMDocumentType*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMDocumentType*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMDocumentType*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMDocumentType*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMDocumentType*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMDocumentType*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMDocumentType*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMDocumentType*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMDocumentType*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMDocumentType*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMDocumentType*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMDocumentType*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMDocumentType*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMDocumentType*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMDocumentType*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMDocumentType*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMDocumentType*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMDocumentType*, IXMLDOMNode, VARIANT, HRESULT)
    get_name : Proc(IXMLDOMDocumentType*, UInt8**, HRESULT)
    get_entities : Proc(IXMLDOMDocumentType*, IXMLDOMNamedNodeMap*, HRESULT)
    get_notations : Proc(IXMLDOMDocumentType*, IXMLDOMNamedNodeMap*, HRESULT)
  end

  IXMLDOMDocumentType_GUID = LibC::GUID.new("2933bf8b-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMDocumentType = "2933bf8b-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMDocumentType
    lpVtbl : IXMLDOMDocumentTypeVTbl*
  end

  struct IXMLDOMNotationVTbl
    query_interface : Proc(IXMLDOMNotation*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMNotation*, UInt32)
    release : Proc(IXMLDOMNotation*, UInt32)
    get_type_info_count : Proc(IXMLDOMNotation*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMNotation*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMNotation*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMNotation*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMNotation*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMNotation*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMNotation*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMNotation*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMNotation*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMNotation*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMNotation*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMNotation*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMNotation*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMNotation*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMNotation*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMNotation*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMNotation*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMNotation*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMNotation*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMNotation*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMNotation*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMNotation*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMNotation*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMNotation*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMNotation*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMNotation*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMNotation*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMNotation*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMNotation*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMNotation*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMNotation*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMNotation*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMNotation*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMNotation*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMNotation*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMNotation*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMNotation*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMNotation*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMNotation*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMNotation*, IXMLDOMNode, VARIANT, HRESULT)
    get_public_id : Proc(IXMLDOMNotation*, VARIANT*, HRESULT)
    get_system_id : Proc(IXMLDOMNotation*, VARIANT*, HRESULT)
  end

  IXMLDOMNotation_GUID = LibC::GUID.new("2933bf8c-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMNotation = "2933bf8c-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMNotation
    lpVtbl : IXMLDOMNotationVTbl*
  end

  struct IXMLDOMEntityVTbl
    query_interface : Proc(IXMLDOMEntity*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMEntity*, UInt32)
    release : Proc(IXMLDOMEntity*, UInt32)
    get_type_info_count : Proc(IXMLDOMEntity*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMEntity*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMEntity*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMEntity*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMEntity*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMEntity*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMEntity*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMEntity*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMEntity*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMEntity*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMEntity*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMEntity*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMEntity*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMEntity*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMEntity*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMEntity*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMEntity*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMEntity*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMEntity*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMEntity*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMEntity*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMEntity*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMEntity*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMEntity*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMEntity*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMEntity*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMEntity*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMEntity*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMEntity*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMEntity*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMEntity*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMEntity*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMEntity*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMEntity*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMEntity*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMEntity*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMEntity*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMEntity*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMEntity*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMEntity*, IXMLDOMNode, VARIANT, HRESULT)
    get_public_id : Proc(IXMLDOMEntity*, VARIANT*, HRESULT)
    get_system_id : Proc(IXMLDOMEntity*, VARIANT*, HRESULT)
    get_notation_name : Proc(IXMLDOMEntity*, UInt8**, HRESULT)
  end

  IXMLDOMEntity_GUID = LibC::GUID.new("2933bf8d-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMEntity = "2933bf8d-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMEntity
    lpVtbl : IXMLDOMEntityVTbl*
  end

  struct IXMLDOMEntityReferenceVTbl
    query_interface : Proc(IXMLDOMEntityReference*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMEntityReference*, UInt32)
    release : Proc(IXMLDOMEntityReference*, UInt32)
    get_type_info_count : Proc(IXMLDOMEntityReference*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMEntityReference*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMEntityReference*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMEntityReference*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMEntityReference*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMEntityReference*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMEntityReference*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMEntityReference*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMEntityReference*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMEntityReference*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMEntityReference*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMEntityReference*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMEntityReference*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMEntityReference*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMEntityReference*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMEntityReference*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMEntityReference*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMEntityReference*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMEntityReference*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMEntityReference*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMEntityReference*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMEntityReference*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMEntityReference*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMEntityReference*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMEntityReference*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMEntityReference*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMEntityReference*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMEntityReference*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMEntityReference*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMEntityReference*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMEntityReference*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMEntityReference*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMEntityReference*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMEntityReference*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMEntityReference*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMEntityReference*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMEntityReference*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMEntityReference*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMEntityReference*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMEntityReference*, IXMLDOMNode, VARIANT, HRESULT)
  end

  IXMLDOMEntityReference_GUID = LibC::GUID.new("2933bf8e-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMEntityReference = "2933bf8e-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMEntityReference
    lpVtbl : IXMLDOMEntityReferenceVTbl*
  end

  struct IXMLDOMParseErrorVTbl
    query_interface : Proc(IXMLDOMParseError*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMParseError*, UInt32)
    release : Proc(IXMLDOMParseError*, UInt32)
    get_type_info_count : Proc(IXMLDOMParseError*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMParseError*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMParseError*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMParseError*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_error_code : Proc(IXMLDOMParseError*, Int32*, HRESULT)
    get_url : Proc(IXMLDOMParseError*, UInt8**, HRESULT)
    get_reason : Proc(IXMLDOMParseError*, UInt8**, HRESULT)
    get_src_text : Proc(IXMLDOMParseError*, UInt8**, HRESULT)
    get_line : Proc(IXMLDOMParseError*, Int32*, HRESULT)
    get_linepos : Proc(IXMLDOMParseError*, Int32*, HRESULT)
    get_filepos : Proc(IXMLDOMParseError*, Int32*, HRESULT)
  end

  IXMLDOMParseError_GUID = LibC::GUID.new("3efaa426-272f-11d2-836f-0000f87a7782")
  CLSID_IXMLDOMParseError = "3efaa426-272f-11d2-836f-0000f87a7782"
  struct IXMLDOMParseError
    lpVtbl : IXMLDOMParseErrorVTbl*
  end

  struct IXTLRuntimeVTbl
    query_interface : Proc(IXTLRuntime*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXTLRuntime*, UInt32)
    release : Proc(IXTLRuntime*, UInt32)
    get_type_info_count : Proc(IXTLRuntime*, UInt32*, HRESULT)
    get_type_info : Proc(IXTLRuntime*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXTLRuntime*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXTLRuntime*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXTLRuntime*, UInt8**, HRESULT)
    get_node_value : Proc(IXTLRuntime*, VARIANT*, HRESULT)
    put_node_value : Proc(IXTLRuntime*, VARIANT, HRESULT)
    get_node_type : Proc(IXTLRuntime*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXTLRuntime*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXTLRuntime*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXTLRuntime*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXTLRuntime*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXTLRuntime*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXTLRuntime*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXTLRuntime*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXTLRuntime*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXTLRuntime*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXTLRuntime*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXTLRuntime*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXTLRuntime*, Int16*, HRESULT)
    get_owner_document : Proc(IXTLRuntime*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXTLRuntime*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXTLRuntime*, UInt8**, HRESULT)
    get_text : Proc(IXTLRuntime*, UInt8**, HRESULT)
    put_text : Proc(IXTLRuntime*, UInt8*, HRESULT)
    get_specified : Proc(IXTLRuntime*, Int16*, HRESULT)
    get_definition : Proc(IXTLRuntime*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXTLRuntime*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXTLRuntime*, VARIANT, HRESULT)
    get_data_type : Proc(IXTLRuntime*, VARIANT*, HRESULT)
    put_data_type : Proc(IXTLRuntime*, UInt8*, HRESULT)
    get_xml : Proc(IXTLRuntime*, UInt8**, HRESULT)
    transform_node : Proc(IXTLRuntime*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXTLRuntime*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXTLRuntime*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXTLRuntime*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXTLRuntime*, UInt8**, HRESULT)
    get_prefix : Proc(IXTLRuntime*, UInt8**, HRESULT)
    get_base_name : Proc(IXTLRuntime*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXTLRuntime*, IXMLDOMNode, VARIANT, HRESULT)
    unique_id : Proc(IXTLRuntime*, IXMLDOMNode, Int32*, HRESULT)
    depth : Proc(IXTLRuntime*, IXMLDOMNode, Int32*, HRESULT)
    child_number : Proc(IXTLRuntime*, IXMLDOMNode, Int32*, HRESULT)
    ancestor_child_number : Proc(IXTLRuntime*, UInt8*, IXMLDOMNode, Int32*, HRESULT)
    absolute_child_number : Proc(IXTLRuntime*, IXMLDOMNode, Int32*, HRESULT)
    format_index : Proc(IXTLRuntime*, Int32, UInt8*, UInt8**, HRESULT)
    format_number : Proc(IXTLRuntime*, Float64, UInt8*, UInt8**, HRESULT)
    format_date : Proc(IXTLRuntime*, VARIANT, UInt8*, VARIANT, UInt8**, HRESULT)
    format_time : Proc(IXTLRuntime*, VARIANT, UInt8*, VARIANT, UInt8**, HRESULT)
  end

  IXTLRuntime_GUID = LibC::GUID.new("3efaa425-272f-11d2-836f-0000f87a7782")
  CLSID_IXTLRuntime = "3efaa425-272f-11d2-836f-0000f87a7782"
  struct IXTLRuntime
    lpVtbl : IXTLRuntimeVTbl*
  end

  struct XMLDOMDocumentEventsVTbl
    query_interface : Proc(XMLDOMDocumentEvents*, Guid*, Void**, HRESULT)
    add_ref : Proc(XMLDOMDocumentEvents*, UInt32)
    release : Proc(XMLDOMDocumentEvents*, UInt32)
    get_type_info_count : Proc(XMLDOMDocumentEvents*, UInt32*, HRESULT)
    get_type_info : Proc(XMLDOMDocumentEvents*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(XMLDOMDocumentEvents*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(XMLDOMDocumentEvents*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
  end

  XMLDOMDocumentEvents_GUID = LibC::GUID.new("3efaa427-272f-11d2-836f-0000f87a7782")
  CLSID_XMLDOMDocumentEvents = "3efaa427-272f-11d2-836f-0000f87a7782"
  struct XMLDOMDocumentEvents
    lpVtbl : XMLDOMDocumentEventsVTbl*
  end

  struct IXMLHttpRequestVTbl
    query_interface : Proc(IXMLHttpRequest*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLHttpRequest*, UInt32)
    release : Proc(IXMLHttpRequest*, UInt32)
    get_type_info_count : Proc(IXMLHttpRequest*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLHttpRequest*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLHttpRequest*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLHttpRequest*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    open : Proc(IXMLHttpRequest*, UInt8*, UInt8*, VARIANT, VARIANT, VARIANT, HRESULT)
    set_request_header : Proc(IXMLHttpRequest*, UInt8*, UInt8*, HRESULT)
    get_response_header : Proc(IXMLHttpRequest*, UInt8*, UInt8**, HRESULT)
    get_all_response_headers : Proc(IXMLHttpRequest*, UInt8**, HRESULT)
    send : Proc(IXMLHttpRequest*, VARIANT, HRESULT)
    abort : Proc(IXMLHttpRequest*, HRESULT)
    get_status : Proc(IXMLHttpRequest*, Int32*, HRESULT)
    get_status_text : Proc(IXMLHttpRequest*, UInt8**, HRESULT)
    get_response_xml : Proc(IXMLHttpRequest*, IDispatch*, HRESULT)
    get_response_text : Proc(IXMLHttpRequest*, UInt8**, HRESULT)
    get_response_body : Proc(IXMLHttpRequest*, VARIANT*, HRESULT)
    get_response_stream : Proc(IXMLHttpRequest*, VARIANT*, HRESULT)
    get_ready_state : Proc(IXMLHttpRequest*, Int32*, HRESULT)
    put_onreadystatechange : Proc(IXMLHttpRequest*, IDispatch, HRESULT)
  end

  IXMLHttpRequest_GUID = LibC::GUID.new("ed8c108d-4349-11d2-91a4-00c04f7969e8")
  CLSID_IXMLHttpRequest = "ed8c108d-4349-11d2-91a4-00c04f7969e8"
  struct IXMLHttpRequest
    lpVtbl : IXMLHttpRequestVTbl*
  end

  struct IXMLDSOControlVTbl
    query_interface : Proc(IXMLDSOControl*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDSOControl*, UInt32)
    release : Proc(IXMLDSOControl*, UInt32)
    get_type_info_count : Proc(IXMLDSOControl*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDSOControl*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDSOControl*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDSOControl*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_xml_document : Proc(IXMLDSOControl*, IXMLDOMDocument*, HRESULT)
    put_xml_document : Proc(IXMLDSOControl*, IXMLDOMDocument, HRESULT)
    get_java_dso_compatible : Proc(IXMLDSOControl*, LibC::BOOL*, HRESULT)
    put_java_dso_compatible : Proc(IXMLDSOControl*, LibC::BOOL, HRESULT)
    get_ready_state : Proc(IXMLDSOControl*, Int32*, HRESULT)
  end

  IXMLDSOControl_GUID = LibC::GUID.new("310afa62-0575-11d2-9ca9-0060b0ec3d39")
  CLSID_IXMLDSOControl = "310afa62-0575-11d2-9ca9-0060b0ec3d39"
  struct IXMLDSOControl
    lpVtbl : IXMLDSOControlVTbl*
  end

  struct IXMLElementCollectionVTbl
    query_interface : Proc(IXMLElementCollection*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLElementCollection*, UInt32)
    release : Proc(IXMLElementCollection*, UInt32)
    get_type_info_count : Proc(IXMLElementCollection*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLElementCollection*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLElementCollection*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLElementCollection*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    put_length : Proc(IXMLElementCollection*, Int32, HRESULT)
    get_length : Proc(IXMLElementCollection*, Int32*, HRESULT)
    get__new_enum : Proc(IXMLElementCollection*, IUnknown*, HRESULT)
    item : Proc(IXMLElementCollection*, VARIANT, VARIANT, IDispatch*, HRESULT)
  end

  IXMLElementCollection_GUID = LibC::GUID.new("65725580-9b5d-11d0-9bfe-00c04fc99c8e")
  CLSID_IXMLElementCollection = "65725580-9b5d-11d0-9bfe-00c04fc99c8e"
  struct IXMLElementCollection
    lpVtbl : IXMLElementCollectionVTbl*
  end

  struct IXMLDocumentVTbl
    query_interface : Proc(IXMLDocument*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDocument*, UInt32)
    release : Proc(IXMLDocument*, UInt32)
    get_type_info_count : Proc(IXMLDocument*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDocument*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDocument*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDocument*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_root : Proc(IXMLDocument*, IXMLElement*, HRESULT)
    get_file_size : Proc(IXMLDocument*, UInt8**, HRESULT)
    get_file_modified_date : Proc(IXMLDocument*, UInt8**, HRESULT)
    get_file_updated_date : Proc(IXMLDocument*, UInt8**, HRESULT)
    get_url : Proc(IXMLDocument*, UInt8**, HRESULT)
    put_url : Proc(IXMLDocument*, UInt8*, HRESULT)
    get_mime_type : Proc(IXMLDocument*, UInt8**, HRESULT)
    get_ready_state : Proc(IXMLDocument*, Int32*, HRESULT)
    get_charset : Proc(IXMLDocument*, UInt8**, HRESULT)
    put_charset : Proc(IXMLDocument*, UInt8*, HRESULT)
    get_version : Proc(IXMLDocument*, UInt8**, HRESULT)
    get_doctype : Proc(IXMLDocument*, UInt8**, HRESULT)
    get_dtd_url : Proc(IXMLDocument*, UInt8**, HRESULT)
    create_element : Proc(IXMLDocument*, VARIANT, VARIANT, IXMLElement*, HRESULT)
  end

  IXMLDocument_GUID = LibC::GUID.new("f52e2b61-18a1-11d1-b105-00805f49916b")
  CLSID_IXMLDocument = "f52e2b61-18a1-11d1-b105-00805f49916b"
  struct IXMLDocument
    lpVtbl : IXMLDocumentVTbl*
  end

  struct IXMLDocument2VTbl
    query_interface : Proc(IXMLDocument2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDocument2*, UInt32)
    release : Proc(IXMLDocument2*, UInt32)
    get_type_info_count : Proc(IXMLDocument2*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDocument2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDocument2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDocument2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_root : Proc(IXMLDocument2*, IXMLElement2*, HRESULT)
    get_file_size : Proc(IXMLDocument2*, UInt8**, HRESULT)
    get_file_modified_date : Proc(IXMLDocument2*, UInt8**, HRESULT)
    get_file_updated_date : Proc(IXMLDocument2*, UInt8**, HRESULT)
    get_url : Proc(IXMLDocument2*, UInt8**, HRESULT)
    put_url : Proc(IXMLDocument2*, UInt8*, HRESULT)
    get_mime_type : Proc(IXMLDocument2*, UInt8**, HRESULT)
    get_ready_state : Proc(IXMLDocument2*, Int32*, HRESULT)
    get_charset : Proc(IXMLDocument2*, UInt8**, HRESULT)
    put_charset : Proc(IXMLDocument2*, UInt8*, HRESULT)
    get_version : Proc(IXMLDocument2*, UInt8**, HRESULT)
    get_doctype : Proc(IXMLDocument2*, UInt8**, HRESULT)
    get_dtd_url : Proc(IXMLDocument2*, UInt8**, HRESULT)
    create_element : Proc(IXMLDocument2*, VARIANT, VARIANT, IXMLElement2*, HRESULT)
    get_async : Proc(IXMLDocument2*, Int16*, HRESULT)
    put_async : Proc(IXMLDocument2*, Int16, HRESULT)
  end

  IXMLDocument2_GUID = LibC::GUID.new("2b8de2fe-8d2d-11d1-b2fc-00c04fd915a9")
  CLSID_IXMLDocument2 = "2b8de2fe-8d2d-11d1-b2fc-00c04fd915a9"
  struct IXMLDocument2
    lpVtbl : IXMLDocument2VTbl*
  end

  struct IXMLElementVTbl
    query_interface : Proc(IXMLElement*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLElement*, UInt32)
    release : Proc(IXMLElement*, UInt32)
    get_type_info_count : Proc(IXMLElement*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLElement*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLElement*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLElement*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_tag_name : Proc(IXMLElement*, UInt8**, HRESULT)
    put_tag_name : Proc(IXMLElement*, UInt8*, HRESULT)
    get_parent : Proc(IXMLElement*, IXMLElement*, HRESULT)
    set_attribute : Proc(IXMLElement*, UInt8*, VARIANT, HRESULT)
    get_attribute : Proc(IXMLElement*, UInt8*, VARIANT*, HRESULT)
    remove_attribute : Proc(IXMLElement*, UInt8*, HRESULT)
    get_children : Proc(IXMLElement*, IXMLElementCollection*, HRESULT)
    get_type : Proc(IXMLElement*, Int32*, HRESULT)
    get_text : Proc(IXMLElement*, UInt8**, HRESULT)
    put_text : Proc(IXMLElement*, UInt8*, HRESULT)
    add_child : Proc(IXMLElement*, IXMLElement, Int32, Int32, HRESULT)
    remove_child : Proc(IXMLElement*, IXMLElement, HRESULT)
  end

  IXMLElement_GUID = LibC::GUID.new("3f7f31ac-e15f-11d0-9c25-00c04fc99c8e")
  CLSID_IXMLElement = "3f7f31ac-e15f-11d0-9c25-00c04fc99c8e"
  struct IXMLElement
    lpVtbl : IXMLElementVTbl*
  end

  struct IXMLElement2VTbl
    query_interface : Proc(IXMLElement2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLElement2*, UInt32)
    release : Proc(IXMLElement2*, UInt32)
    get_type_info_count : Proc(IXMLElement2*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLElement2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLElement2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLElement2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_tag_name : Proc(IXMLElement2*, UInt8**, HRESULT)
    put_tag_name : Proc(IXMLElement2*, UInt8*, HRESULT)
    get_parent : Proc(IXMLElement2*, IXMLElement2*, HRESULT)
    set_attribute : Proc(IXMLElement2*, UInt8*, VARIANT, HRESULT)
    get_attribute : Proc(IXMLElement2*, UInt8*, VARIANT*, HRESULT)
    remove_attribute : Proc(IXMLElement2*, UInt8*, HRESULT)
    get_children : Proc(IXMLElement2*, IXMLElementCollection*, HRESULT)
    get_type : Proc(IXMLElement2*, Int32*, HRESULT)
    get_text : Proc(IXMLElement2*, UInt8**, HRESULT)
    put_text : Proc(IXMLElement2*, UInt8*, HRESULT)
    add_child : Proc(IXMLElement2*, IXMLElement2, Int32, Int32, HRESULT)
    remove_child : Proc(IXMLElement2*, IXMLElement2, HRESULT)
    get_attributes : Proc(IXMLElement2*, IXMLElementCollection*, HRESULT)
  end

  IXMLElement2_GUID = LibC::GUID.new("2b8de2ff-8d2d-11d1-b2fc-00c04fd915a9")
  CLSID_IXMLElement2 = "2b8de2ff-8d2d-11d1-b2fc-00c04fd915a9"
  struct IXMLElement2
    lpVtbl : IXMLElement2VTbl*
  end

  struct IXMLAttributeVTbl
    query_interface : Proc(IXMLAttribute*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLAttribute*, UInt32)
    release : Proc(IXMLAttribute*, UInt32)
    get_type_info_count : Proc(IXMLAttribute*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLAttribute*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLAttribute*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLAttribute*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_name : Proc(IXMLAttribute*, UInt8**, HRESULT)
    get_value : Proc(IXMLAttribute*, UInt8**, HRESULT)
  end

  IXMLAttribute_GUID = LibC::GUID.new("d4d4a0fc-3b73-11d1-b2b4-00c04fb92596")
  CLSID_IXMLAttribute = "d4d4a0fc-3b73-11d1-b2b4-00c04fb92596"
  struct IXMLAttribute
    lpVtbl : IXMLAttributeVTbl*
  end

  struct IXMLErrorVTbl
    query_interface : Proc(IXMLError*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLError*, UInt32)
    release : Proc(IXMLError*, UInt32)
    get_error_info : Proc(IXMLError*, XML_ERROR*, HRESULT)
  end

  IXMLError_GUID = LibC::GUID.new("948c5ad3-c58d-11d0-9c0b-00c04fc99c8e")
  CLSID_IXMLError = "948c5ad3-c58d-11d0-9c0b-00c04fc99c8e"
  struct IXMLError
    lpVtbl : IXMLErrorVTbl*
  end

  struct IXMLDOMDocument2VTbl
    query_interface : Proc(IXMLDOMDocument2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMDocument2*, UInt32)
    release : Proc(IXMLDOMDocument2*, UInt32)
    get_type_info_count : Proc(IXMLDOMDocument2*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMDocument2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMDocument2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMDocument2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMDocument2*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMDocument2*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMDocument2*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMDocument2*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMDocument2*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMDocument2*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMDocument2*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMDocument2*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMDocument2*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMDocument2*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMDocument2*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMDocument2*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMDocument2*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMDocument2*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMDocument2*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMDocument2*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMDocument2*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMDocument2*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMDocument2*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMDocument2*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMDocument2*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMDocument2*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMDocument2*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMDocument2*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMDocument2*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMDocument2*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMDocument2*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMDocument2*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMDocument2*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMDocument2*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMDocument2*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMDocument2*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMDocument2*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMDocument2*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMDocument2*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMDocument2*, IXMLDOMNode, VARIANT, HRESULT)
    get_doctype : Proc(IXMLDOMDocument2*, IXMLDOMDocumentType*, HRESULT)
    get_implementation : Proc(IXMLDOMDocument2*, IXMLDOMImplementation*, HRESULT)
    get_document_element : Proc(IXMLDOMDocument2*, IXMLDOMElement*, HRESULT)
    putref_document_element : Proc(IXMLDOMDocument2*, IXMLDOMElement, HRESULT)
    create_element : Proc(IXMLDOMDocument2*, UInt8*, IXMLDOMElement*, HRESULT)
    create_document_fragment : Proc(IXMLDOMDocument2*, IXMLDOMDocumentFragment*, HRESULT)
    create_text_node : Proc(IXMLDOMDocument2*, UInt8*, IXMLDOMText*, HRESULT)
    create_comment : Proc(IXMLDOMDocument2*, UInt8*, IXMLDOMComment*, HRESULT)
    create_cdata_section : Proc(IXMLDOMDocument2*, UInt8*, IXMLDOMCDATASection*, HRESULT)
    create_processing_instruction : Proc(IXMLDOMDocument2*, UInt8*, UInt8*, IXMLDOMProcessingInstruction*, HRESULT)
    create_attribute : Proc(IXMLDOMDocument2*, UInt8*, IXMLDOMAttribute*, HRESULT)
    create_entity_reference : Proc(IXMLDOMDocument2*, UInt8*, IXMLDOMEntityReference*, HRESULT)
    get_elements_by_tag_name : Proc(IXMLDOMDocument2*, UInt8*, IXMLDOMNodeList*, HRESULT)
    create_node : Proc(IXMLDOMDocument2*, VARIANT, UInt8*, UInt8*, IXMLDOMNode*, HRESULT)
    node_from_id : Proc(IXMLDOMDocument2*, UInt8*, IXMLDOMNode*, HRESULT)
    load : Proc(IXMLDOMDocument2*, VARIANT, Int16*, HRESULT)
    get_ready_state : Proc(IXMLDOMDocument2*, Int32*, HRESULT)
    get_parse_error : Proc(IXMLDOMDocument2*, IXMLDOMParseError*, HRESULT)
    get_url : Proc(IXMLDOMDocument2*, UInt8**, HRESULT)
    get_async : Proc(IXMLDOMDocument2*, Int16*, HRESULT)
    put_async : Proc(IXMLDOMDocument2*, Int16, HRESULT)
    abort : Proc(IXMLDOMDocument2*, HRESULT)
    load_xml : Proc(IXMLDOMDocument2*, UInt8*, Int16*, HRESULT)
    save : Proc(IXMLDOMDocument2*, VARIANT, HRESULT)
    get_validate_on_parse : Proc(IXMLDOMDocument2*, Int16*, HRESULT)
    put_validate_on_parse : Proc(IXMLDOMDocument2*, Int16, HRESULT)
    get_resolve_externals : Proc(IXMLDOMDocument2*, Int16*, HRESULT)
    put_resolve_externals : Proc(IXMLDOMDocument2*, Int16, HRESULT)
    get_preserve_white_space : Proc(IXMLDOMDocument2*, Int16*, HRESULT)
    put_preserve_white_space : Proc(IXMLDOMDocument2*, Int16, HRESULT)
    put_onreadystatechange : Proc(IXMLDOMDocument2*, VARIANT, HRESULT)
    put_ondataavailable : Proc(IXMLDOMDocument2*, VARIANT, HRESULT)
    put_ontransformnode : Proc(IXMLDOMDocument2*, VARIANT, HRESULT)
    get_namespaces : Proc(IXMLDOMDocument2*, IXMLDOMSchemaCollection*, HRESULT)
    get_schemas : Proc(IXMLDOMDocument2*, VARIANT*, HRESULT)
    putref_schemas : Proc(IXMLDOMDocument2*, VARIANT, HRESULT)
    validate : Proc(IXMLDOMDocument2*, IXMLDOMParseError*, HRESULT)
    set_property : Proc(IXMLDOMDocument2*, UInt8*, VARIANT, HRESULT)
    get_property : Proc(IXMLDOMDocument2*, UInt8*, VARIANT*, HRESULT)
  end

  IXMLDOMDocument2_GUID = LibC::GUID.new("2933bf95-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMDocument2 = "2933bf95-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMDocument2
    lpVtbl : IXMLDOMDocument2VTbl*
  end

  struct IXMLDOMDocument3VTbl
    query_interface : Proc(IXMLDOMDocument3*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMDocument3*, UInt32)
    release : Proc(IXMLDOMDocument3*, UInt32)
    get_type_info_count : Proc(IXMLDOMDocument3*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMDocument3*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMDocument3*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMDocument3*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_node_name : Proc(IXMLDOMDocument3*, UInt8**, HRESULT)
    get_node_value : Proc(IXMLDOMDocument3*, VARIANT*, HRESULT)
    put_node_value : Proc(IXMLDOMDocument3*, VARIANT, HRESULT)
    get_node_type : Proc(IXMLDOMDocument3*, DOMNodeType*, HRESULT)
    get_parent_node : Proc(IXMLDOMDocument3*, IXMLDOMNode*, HRESULT)
    get_child_nodes : Proc(IXMLDOMDocument3*, IXMLDOMNodeList*, HRESULT)
    get_first_child : Proc(IXMLDOMDocument3*, IXMLDOMNode*, HRESULT)
    get_last_child : Proc(IXMLDOMDocument3*, IXMLDOMNode*, HRESULT)
    get_previous_sibling : Proc(IXMLDOMDocument3*, IXMLDOMNode*, HRESULT)
    get_next_sibling : Proc(IXMLDOMDocument3*, IXMLDOMNode*, HRESULT)
    get_attributes : Proc(IXMLDOMDocument3*, IXMLDOMNamedNodeMap*, HRESULT)
    insert_before : Proc(IXMLDOMDocument3*, IXMLDOMNode, VARIANT, IXMLDOMNode*, HRESULT)
    replace_child : Proc(IXMLDOMDocument3*, IXMLDOMNode, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_child : Proc(IXMLDOMDocument3*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    append_child : Proc(IXMLDOMDocument3*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    has_child_nodes : Proc(IXMLDOMDocument3*, Int16*, HRESULT)
    get_owner_document : Proc(IXMLDOMDocument3*, IXMLDOMDocument*, HRESULT)
    clone_node : Proc(IXMLDOMDocument3*, Int16, IXMLDOMNode*, HRESULT)
    get_node_type_string : Proc(IXMLDOMDocument3*, UInt8**, HRESULT)
    get_text : Proc(IXMLDOMDocument3*, UInt8**, HRESULT)
    put_text : Proc(IXMLDOMDocument3*, UInt8*, HRESULT)
    get_specified : Proc(IXMLDOMDocument3*, Int16*, HRESULT)
    get_definition : Proc(IXMLDOMDocument3*, IXMLDOMNode*, HRESULT)
    get_node_typed_value : Proc(IXMLDOMDocument3*, VARIANT*, HRESULT)
    put_node_typed_value : Proc(IXMLDOMDocument3*, VARIANT, HRESULT)
    get_data_type : Proc(IXMLDOMDocument3*, VARIANT*, HRESULT)
    put_data_type : Proc(IXMLDOMDocument3*, UInt8*, HRESULT)
    get_xml : Proc(IXMLDOMDocument3*, UInt8**, HRESULT)
    transform_node : Proc(IXMLDOMDocument3*, IXMLDOMNode, UInt8**, HRESULT)
    select_nodes : Proc(IXMLDOMDocument3*, UInt8*, IXMLDOMNodeList*, HRESULT)
    select_single_node : Proc(IXMLDOMDocument3*, UInt8*, IXMLDOMNode*, HRESULT)
    get_parsed : Proc(IXMLDOMDocument3*, Int16*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMDocument3*, UInt8**, HRESULT)
    get_prefix : Proc(IXMLDOMDocument3*, UInt8**, HRESULT)
    get_base_name : Proc(IXMLDOMDocument3*, UInt8**, HRESULT)
    transform_node_to_object : Proc(IXMLDOMDocument3*, IXMLDOMNode, VARIANT, HRESULT)
    get_doctype : Proc(IXMLDOMDocument3*, IXMLDOMDocumentType*, HRESULT)
    get_implementation : Proc(IXMLDOMDocument3*, IXMLDOMImplementation*, HRESULT)
    get_document_element : Proc(IXMLDOMDocument3*, IXMLDOMElement*, HRESULT)
    putref_document_element : Proc(IXMLDOMDocument3*, IXMLDOMElement, HRESULT)
    create_element : Proc(IXMLDOMDocument3*, UInt8*, IXMLDOMElement*, HRESULT)
    create_document_fragment : Proc(IXMLDOMDocument3*, IXMLDOMDocumentFragment*, HRESULT)
    create_text_node : Proc(IXMLDOMDocument3*, UInt8*, IXMLDOMText*, HRESULT)
    create_comment : Proc(IXMLDOMDocument3*, UInt8*, IXMLDOMComment*, HRESULT)
    create_cdata_section : Proc(IXMLDOMDocument3*, UInt8*, IXMLDOMCDATASection*, HRESULT)
    create_processing_instruction : Proc(IXMLDOMDocument3*, UInt8*, UInt8*, IXMLDOMProcessingInstruction*, HRESULT)
    create_attribute : Proc(IXMLDOMDocument3*, UInt8*, IXMLDOMAttribute*, HRESULT)
    create_entity_reference : Proc(IXMLDOMDocument3*, UInt8*, IXMLDOMEntityReference*, HRESULT)
    get_elements_by_tag_name : Proc(IXMLDOMDocument3*, UInt8*, IXMLDOMNodeList*, HRESULT)
    create_node : Proc(IXMLDOMDocument3*, VARIANT, UInt8*, UInt8*, IXMLDOMNode*, HRESULT)
    node_from_id : Proc(IXMLDOMDocument3*, UInt8*, IXMLDOMNode*, HRESULT)
    load : Proc(IXMLDOMDocument3*, VARIANT, Int16*, HRESULT)
    get_ready_state : Proc(IXMLDOMDocument3*, Int32*, HRESULT)
    get_parse_error : Proc(IXMLDOMDocument3*, IXMLDOMParseError*, HRESULT)
    get_url : Proc(IXMLDOMDocument3*, UInt8**, HRESULT)
    get_async : Proc(IXMLDOMDocument3*, Int16*, HRESULT)
    put_async : Proc(IXMLDOMDocument3*, Int16, HRESULT)
    abort : Proc(IXMLDOMDocument3*, HRESULT)
    load_xml : Proc(IXMLDOMDocument3*, UInt8*, Int16*, HRESULT)
    save : Proc(IXMLDOMDocument3*, VARIANT, HRESULT)
    get_validate_on_parse : Proc(IXMLDOMDocument3*, Int16*, HRESULT)
    put_validate_on_parse : Proc(IXMLDOMDocument3*, Int16, HRESULT)
    get_resolve_externals : Proc(IXMLDOMDocument3*, Int16*, HRESULT)
    put_resolve_externals : Proc(IXMLDOMDocument3*, Int16, HRESULT)
    get_preserve_white_space : Proc(IXMLDOMDocument3*, Int16*, HRESULT)
    put_preserve_white_space : Proc(IXMLDOMDocument3*, Int16, HRESULT)
    put_onreadystatechange : Proc(IXMLDOMDocument3*, VARIANT, HRESULT)
    put_ondataavailable : Proc(IXMLDOMDocument3*, VARIANT, HRESULT)
    put_ontransformnode : Proc(IXMLDOMDocument3*, VARIANT, HRESULT)
    get_namespaces : Proc(IXMLDOMDocument3*, IXMLDOMSchemaCollection*, HRESULT)
    get_schemas : Proc(IXMLDOMDocument3*, VARIANT*, HRESULT)
    putref_schemas : Proc(IXMLDOMDocument3*, VARIANT, HRESULT)
    validate : Proc(IXMLDOMDocument3*, IXMLDOMParseError*, HRESULT)
    set_property : Proc(IXMLDOMDocument3*, UInt8*, VARIANT, HRESULT)
    get_property : Proc(IXMLDOMDocument3*, UInt8*, VARIANT*, HRESULT)
    validate_node : Proc(IXMLDOMDocument3*, IXMLDOMNode, IXMLDOMParseError*, HRESULT)
    import_node : Proc(IXMLDOMDocument3*, IXMLDOMNode, Int16, IXMLDOMNode*, HRESULT)
  end

  IXMLDOMDocument3_GUID = LibC::GUID.new("2933bf96-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXMLDOMDocument3 = "2933bf96-7b36-11d2-b20e-00c04f983e60"
  struct IXMLDOMDocument3
    lpVtbl : IXMLDOMDocument3VTbl*
  end

  struct IXMLDOMSchemaCollectionVTbl
    query_interface : Proc(IXMLDOMSchemaCollection*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMSchemaCollection*, UInt32)
    release : Proc(IXMLDOMSchemaCollection*, UInt32)
    get_type_info_count : Proc(IXMLDOMSchemaCollection*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMSchemaCollection*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMSchemaCollection*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMSchemaCollection*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    add : Proc(IXMLDOMSchemaCollection*, UInt8*, VARIANT, HRESULT)
    get : Proc(IXMLDOMSchemaCollection*, UInt8*, IXMLDOMNode*, HRESULT)
    remove : Proc(IXMLDOMSchemaCollection*, UInt8*, HRESULT)
    get_length : Proc(IXMLDOMSchemaCollection*, Int32*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMSchemaCollection*, Int32, UInt8**, HRESULT)
    add_collection : Proc(IXMLDOMSchemaCollection*, IXMLDOMSchemaCollection, HRESULT)
    get__new_enum : Proc(IXMLDOMSchemaCollection*, IUnknown*, HRESULT)
  end

  IXMLDOMSchemaCollection_GUID = LibC::GUID.new("373984c8-b845-449b-91e7-45ac83036ade")
  CLSID_IXMLDOMSchemaCollection = "373984c8-b845-449b-91e7-45ac83036ade"
  struct IXMLDOMSchemaCollection
    lpVtbl : IXMLDOMSchemaCollectionVTbl*
  end

  struct IXMLDOMSelectionVTbl
    query_interface : Proc(IXMLDOMSelection*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMSelection*, UInt32)
    release : Proc(IXMLDOMSelection*, UInt32)
    get_type_info_count : Proc(IXMLDOMSelection*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMSelection*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMSelection*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMSelection*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_item : Proc(IXMLDOMSelection*, Int32, IXMLDOMNode*, HRESULT)
    get_length : Proc(IXMLDOMSelection*, Int32*, HRESULT)
    next_node : Proc(IXMLDOMSelection*, IXMLDOMNode*, HRESULT)
    reset : Proc(IXMLDOMSelection*, HRESULT)
    get__new_enum : Proc(IXMLDOMSelection*, IUnknown*, HRESULT)
    get_expr : Proc(IXMLDOMSelection*, UInt8**, HRESULT)
    put_expr : Proc(IXMLDOMSelection*, UInt8*, HRESULT)
    get_context : Proc(IXMLDOMSelection*, IXMLDOMNode*, HRESULT)
    putref_context : Proc(IXMLDOMSelection*, IXMLDOMNode, HRESULT)
    peek_node : Proc(IXMLDOMSelection*, IXMLDOMNode*, HRESULT)
    matches : Proc(IXMLDOMSelection*, IXMLDOMNode, IXMLDOMNode*, HRESULT)
    remove_next : Proc(IXMLDOMSelection*, IXMLDOMNode*, HRESULT)
    remove_all : Proc(IXMLDOMSelection*, HRESULT)
    clone : Proc(IXMLDOMSelection*, IXMLDOMSelection*, HRESULT)
    get_property : Proc(IXMLDOMSelection*, UInt8*, VARIANT*, HRESULT)
    set_property : Proc(IXMLDOMSelection*, UInt8*, VARIANT, HRESULT)
  end

  IXMLDOMSelection_GUID = LibC::GUID.new("aa634fc7-5888-44a7-a257-3a47150d3a0e")
  CLSID_IXMLDOMSelection = "aa634fc7-5888-44a7-a257-3a47150d3a0e"
  struct IXMLDOMSelection
    lpVtbl : IXMLDOMSelectionVTbl*
  end

  struct IXMLDOMParseError2VTbl
    query_interface : Proc(IXMLDOMParseError2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMParseError2*, UInt32)
    release : Proc(IXMLDOMParseError2*, UInt32)
    get_type_info_count : Proc(IXMLDOMParseError2*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMParseError2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMParseError2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMParseError2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_error_code : Proc(IXMLDOMParseError2*, Int32*, HRESULT)
    get_url : Proc(IXMLDOMParseError2*, UInt8**, HRESULT)
    get_reason : Proc(IXMLDOMParseError2*, UInt8**, HRESULT)
    get_src_text : Proc(IXMLDOMParseError2*, UInt8**, HRESULT)
    get_line : Proc(IXMLDOMParseError2*, Int32*, HRESULT)
    get_linepos : Proc(IXMLDOMParseError2*, Int32*, HRESULT)
    get_filepos : Proc(IXMLDOMParseError2*, Int32*, HRESULT)
    get_error_x_path : Proc(IXMLDOMParseError2*, UInt8**, HRESULT)
    get_all_errors : Proc(IXMLDOMParseError2*, IXMLDOMParseErrorCollection*, HRESULT)
    error_parameters : Proc(IXMLDOMParseError2*, Int32, UInt8**, HRESULT)
    get_error_parameters_count : Proc(IXMLDOMParseError2*, Int32*, HRESULT)
  end

  IXMLDOMParseError2_GUID = LibC::GUID.new("3efaa428-272f-11d2-836f-0000f87a7782")
  CLSID_IXMLDOMParseError2 = "3efaa428-272f-11d2-836f-0000f87a7782"
  struct IXMLDOMParseError2
    lpVtbl : IXMLDOMParseError2VTbl*
  end

  struct IXMLDOMParseErrorCollectionVTbl
    query_interface : Proc(IXMLDOMParseErrorCollection*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMParseErrorCollection*, UInt32)
    release : Proc(IXMLDOMParseErrorCollection*, UInt32)
    get_type_info_count : Proc(IXMLDOMParseErrorCollection*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMParseErrorCollection*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMParseErrorCollection*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMParseErrorCollection*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_item : Proc(IXMLDOMParseErrorCollection*, Int32, IXMLDOMParseError2*, HRESULT)
    get_length : Proc(IXMLDOMParseErrorCollection*, Int32*, HRESULT)
    get_next : Proc(IXMLDOMParseErrorCollection*, IXMLDOMParseError2*, HRESULT)
    reset : Proc(IXMLDOMParseErrorCollection*, HRESULT)
    get__new_enum : Proc(IXMLDOMParseErrorCollection*, IUnknown*, HRESULT)
  end

  IXMLDOMParseErrorCollection_GUID = LibC::GUID.new("3efaa429-272f-11d2-836f-0000f87a7782")
  CLSID_IXMLDOMParseErrorCollection = "3efaa429-272f-11d2-836f-0000f87a7782"
  struct IXMLDOMParseErrorCollection
    lpVtbl : IXMLDOMParseErrorCollectionVTbl*
  end

  struct IXSLProcessorVTbl
    query_interface : Proc(IXSLProcessor*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXSLProcessor*, UInt32)
    release : Proc(IXSLProcessor*, UInt32)
    get_type_info_count : Proc(IXSLProcessor*, UInt32*, HRESULT)
    get_type_info : Proc(IXSLProcessor*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXSLProcessor*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXSLProcessor*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    put_input : Proc(IXSLProcessor*, VARIANT, HRESULT)
    get_input : Proc(IXSLProcessor*, VARIANT*, HRESULT)
    get_owner_template : Proc(IXSLProcessor*, IXSLTemplate*, HRESULT)
    set_start_mode : Proc(IXSLProcessor*, UInt8*, UInt8*, HRESULT)
    get_start_mode : Proc(IXSLProcessor*, UInt8**, HRESULT)
    get_start_mode_uri : Proc(IXSLProcessor*, UInt8**, HRESULT)
    put_output : Proc(IXSLProcessor*, VARIANT, HRESULT)
    get_output : Proc(IXSLProcessor*, VARIANT*, HRESULT)
    transform : Proc(IXSLProcessor*, Int16*, HRESULT)
    reset : Proc(IXSLProcessor*, HRESULT)
    get_ready_state : Proc(IXSLProcessor*, Int32*, HRESULT)
    add_parameter : Proc(IXSLProcessor*, UInt8*, VARIANT, UInt8*, HRESULT)
    add_object : Proc(IXSLProcessor*, IDispatch, UInt8*, HRESULT)
    get_stylesheet : Proc(IXSLProcessor*, IXMLDOMNode*, HRESULT)
  end

  IXSLProcessor_GUID = LibC::GUID.new("2933bf92-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXSLProcessor = "2933bf92-7b36-11d2-b20e-00c04f983e60"
  struct IXSLProcessor
    lpVtbl : IXSLProcessorVTbl*
  end

  struct IXSLTemplateVTbl
    query_interface : Proc(IXSLTemplate*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXSLTemplate*, UInt32)
    release : Proc(IXSLTemplate*, UInt32)
    get_type_info_count : Proc(IXSLTemplate*, UInt32*, HRESULT)
    get_type_info : Proc(IXSLTemplate*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXSLTemplate*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXSLTemplate*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    putref_stylesheet : Proc(IXSLTemplate*, IXMLDOMNode, HRESULT)
    get_stylesheet : Proc(IXSLTemplate*, IXMLDOMNode*, HRESULT)
    create_processor : Proc(IXSLTemplate*, IXSLProcessor*, HRESULT)
  end

  IXSLTemplate_GUID = LibC::GUID.new("2933bf93-7b36-11d2-b20e-00c04f983e60")
  CLSID_IXSLTemplate = "2933bf93-7b36-11d2-b20e-00c04f983e60"
  struct IXSLTemplate
    lpVtbl : IXSLTemplateVTbl*
  end

  struct IXMLHTTPRequestVTbl
    query_interface : Proc(IXMLHTTPRequest*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLHTTPRequest*, UInt32)
    release : Proc(IXMLHTTPRequest*, UInt32)
    get_type_info_count : Proc(IXMLHTTPRequest*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLHTTPRequest*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLHTTPRequest*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLHTTPRequest*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    open : Proc(IXMLHTTPRequest*, UInt8*, UInt8*, VARIANT, VARIANT, VARIANT, HRESULT)
    set_request_header : Proc(IXMLHTTPRequest*, UInt8*, UInt8*, HRESULT)
    get_response_header : Proc(IXMLHTTPRequest*, UInt8*, UInt8**, HRESULT)
    get_all_response_headers : Proc(IXMLHTTPRequest*, UInt8**, HRESULT)
    send : Proc(IXMLHTTPRequest*, VARIANT, HRESULT)
    abort : Proc(IXMLHTTPRequest*, HRESULT)
    get_status : Proc(IXMLHTTPRequest*, Int32*, HRESULT)
    get_status_text : Proc(IXMLHTTPRequest*, UInt8**, HRESULT)
    get_response_xml : Proc(IXMLHTTPRequest*, IDispatch*, HRESULT)
    get_response_text : Proc(IXMLHTTPRequest*, UInt8**, HRESULT)
    get_response_body : Proc(IXMLHTTPRequest*, VARIANT*, HRESULT)
    get_response_stream : Proc(IXMLHTTPRequest*, VARIANT*, HRESULT)
    get_ready_state : Proc(IXMLHTTPRequest*, Int32*, HRESULT)
    put_onreadystatechange : Proc(IXMLHTTPRequest*, IDispatch, HRESULT)
  end

  IXMLHTTPRequest_GUID = LibC::GUID.new("ed8c108d-4349-11d2-91a4-00c04f7969e8")
  CLSID_IXMLHTTPRequest = "ed8c108d-4349-11d2-91a4-00c04f7969e8"
  struct IXMLHTTPRequest
    lpVtbl : IXMLHTTPRequestVTbl*
  end

  struct IServerXMLHTTPRequestVTbl
    query_interface : Proc(IServerXMLHTTPRequest*, Guid*, Void**, HRESULT)
    add_ref : Proc(IServerXMLHTTPRequest*, UInt32)
    release : Proc(IServerXMLHTTPRequest*, UInt32)
    get_type_info_count : Proc(IServerXMLHTTPRequest*, UInt32*, HRESULT)
    get_type_info : Proc(IServerXMLHTTPRequest*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IServerXMLHTTPRequest*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IServerXMLHTTPRequest*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    open : Proc(IServerXMLHTTPRequest*, UInt8*, UInt8*, VARIANT, VARIANT, VARIANT, HRESULT)
    set_request_header : Proc(IServerXMLHTTPRequest*, UInt8*, UInt8*, HRESULT)
    get_response_header : Proc(IServerXMLHTTPRequest*, UInt8*, UInt8**, HRESULT)
    get_all_response_headers : Proc(IServerXMLHTTPRequest*, UInt8**, HRESULT)
    send : Proc(IServerXMLHTTPRequest*, VARIANT, HRESULT)
    abort : Proc(IServerXMLHTTPRequest*, HRESULT)
    get_status : Proc(IServerXMLHTTPRequest*, Int32*, HRESULT)
    get_status_text : Proc(IServerXMLHTTPRequest*, UInt8**, HRESULT)
    get_response_xml : Proc(IServerXMLHTTPRequest*, IDispatch*, HRESULT)
    get_response_text : Proc(IServerXMLHTTPRequest*, UInt8**, HRESULT)
    get_response_body : Proc(IServerXMLHTTPRequest*, VARIANT*, HRESULT)
    get_response_stream : Proc(IServerXMLHTTPRequest*, VARIANT*, HRESULT)
    get_ready_state : Proc(IServerXMLHTTPRequest*, Int32*, HRESULT)
    put_onreadystatechange : Proc(IServerXMLHTTPRequest*, IDispatch, HRESULT)
    set_timeouts : Proc(IServerXMLHTTPRequest*, Int32, Int32, Int32, Int32, HRESULT)
    wait_for_response : Proc(IServerXMLHTTPRequest*, VARIANT, Int16*, HRESULT)
    get_option : Proc(IServerXMLHTTPRequest*, SERVERXMLHTTP_OPTION, VARIANT*, HRESULT)
    set_option : Proc(IServerXMLHTTPRequest*, SERVERXMLHTTP_OPTION, VARIANT, HRESULT)
  end

  IServerXMLHTTPRequest_GUID = LibC::GUID.new("2e9196bf-13ba-4dd4-91ca-6c571f281495")
  CLSID_IServerXMLHTTPRequest = "2e9196bf-13ba-4dd4-91ca-6c571f281495"
  struct IServerXMLHTTPRequest
    lpVtbl : IServerXMLHTTPRequestVTbl*
  end

  struct IServerXMLHTTPRequest2VTbl
    query_interface : Proc(IServerXMLHTTPRequest2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IServerXMLHTTPRequest2*, UInt32)
    release : Proc(IServerXMLHTTPRequest2*, UInt32)
    get_type_info_count : Proc(IServerXMLHTTPRequest2*, UInt32*, HRESULT)
    get_type_info : Proc(IServerXMLHTTPRequest2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IServerXMLHTTPRequest2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IServerXMLHTTPRequest2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    open : Proc(IServerXMLHTTPRequest2*, UInt8*, UInt8*, VARIANT, VARIANT, VARIANT, HRESULT)
    set_request_header : Proc(IServerXMLHTTPRequest2*, UInt8*, UInt8*, HRESULT)
    get_response_header : Proc(IServerXMLHTTPRequest2*, UInt8*, UInt8**, HRESULT)
    get_all_response_headers : Proc(IServerXMLHTTPRequest2*, UInt8**, HRESULT)
    send : Proc(IServerXMLHTTPRequest2*, VARIANT, HRESULT)
    abort : Proc(IServerXMLHTTPRequest2*, HRESULT)
    get_status : Proc(IServerXMLHTTPRequest2*, Int32*, HRESULT)
    get_status_text : Proc(IServerXMLHTTPRequest2*, UInt8**, HRESULT)
    get_response_xml : Proc(IServerXMLHTTPRequest2*, IDispatch*, HRESULT)
    get_response_text : Proc(IServerXMLHTTPRequest2*, UInt8**, HRESULT)
    get_response_body : Proc(IServerXMLHTTPRequest2*, VARIANT*, HRESULT)
    get_response_stream : Proc(IServerXMLHTTPRequest2*, VARIANT*, HRESULT)
    get_ready_state : Proc(IServerXMLHTTPRequest2*, Int32*, HRESULT)
    put_onreadystatechange : Proc(IServerXMLHTTPRequest2*, IDispatch, HRESULT)
    set_timeouts : Proc(IServerXMLHTTPRequest2*, Int32, Int32, Int32, Int32, HRESULT)
    wait_for_response : Proc(IServerXMLHTTPRequest2*, VARIANT, Int16*, HRESULT)
    get_option : Proc(IServerXMLHTTPRequest2*, SERVERXMLHTTP_OPTION, VARIANT*, HRESULT)
    set_option : Proc(IServerXMLHTTPRequest2*, SERVERXMLHTTP_OPTION, VARIANT, HRESULT)
    set_proxy : Proc(IServerXMLHTTPRequest2*, SXH_PROXY_SETTING, VARIANT, VARIANT, HRESULT)
    set_proxy_credentials : Proc(IServerXMLHTTPRequest2*, UInt8*, UInt8*, HRESULT)
  end

  IServerXMLHTTPRequest2_GUID = LibC::GUID.new("2e01311b-c322-4b0a-bd77-b90cfdc8dce7")
  CLSID_IServerXMLHTTPRequest2 = "2e01311b-c322-4b0a-bd77-b90cfdc8dce7"
  struct IServerXMLHTTPRequest2
    lpVtbl : IServerXMLHTTPRequest2VTbl*
  end

  struct ISAXXMLReaderVTbl
    query_interface : Proc(ISAXXMLReader*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISAXXMLReader*, UInt32)
    release : Proc(ISAXXMLReader*, UInt32)
    get_feature : Proc(ISAXXMLReader*, LibC::LPWSTR, Int16*, HRESULT)
    put_feature : Proc(ISAXXMLReader*, LibC::LPWSTR, Int16, HRESULT)
    get_property : Proc(ISAXXMLReader*, LibC::LPWSTR, VARIANT*, HRESULT)
    put_property : Proc(ISAXXMLReader*, LibC::LPWSTR, VARIANT, HRESULT)
    get_entity_resolver : Proc(ISAXXMLReader*, ISAXEntityResolver*, HRESULT)
    put_entity_resolver : Proc(ISAXXMLReader*, ISAXEntityResolver, HRESULT)
    get_content_handler : Proc(ISAXXMLReader*, ISAXContentHandler*, HRESULT)
    put_content_handler : Proc(ISAXXMLReader*, ISAXContentHandler, HRESULT)
    get_dtd_handler : Proc(ISAXXMLReader*, ISAXDTDHandler*, HRESULT)
    put_dtd_handler : Proc(ISAXXMLReader*, ISAXDTDHandler, HRESULT)
    get_error_handler : Proc(ISAXXMLReader*, ISAXErrorHandler*, HRESULT)
    put_error_handler : Proc(ISAXXMLReader*, ISAXErrorHandler, HRESULT)
    get_base_url : Proc(ISAXXMLReader*, UInt16**, HRESULT)
    put_base_url : Proc(ISAXXMLReader*, LibC::LPWSTR, HRESULT)
    get_secure_base_url : Proc(ISAXXMLReader*, UInt16**, HRESULT)
    put_secure_base_url : Proc(ISAXXMLReader*, LibC::LPWSTR, HRESULT)
    parse : Proc(ISAXXMLReader*, VARIANT, HRESULT)
    parse_url : Proc(ISAXXMLReader*, LibC::LPWSTR, HRESULT)
  end

  ISAXXMLReader_GUID = LibC::GUID.new("a4f96ed0-f829-476e-81c0-cdc7bd2a0802")
  CLSID_ISAXXMLReader = "a4f96ed0-f829-476e-81c0-cdc7bd2a0802"
  struct ISAXXMLReader
    lpVtbl : ISAXXMLReaderVTbl*
  end

  struct ISAXXMLFilterVTbl
    query_interface : Proc(ISAXXMLFilter*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISAXXMLFilter*, UInt32)
    release : Proc(ISAXXMLFilter*, UInt32)
    get_feature : Proc(ISAXXMLFilter*, LibC::LPWSTR, Int16*, HRESULT)
    put_feature : Proc(ISAXXMLFilter*, LibC::LPWSTR, Int16, HRESULT)
    get_property : Proc(ISAXXMLFilter*, LibC::LPWSTR, VARIANT*, HRESULT)
    put_property : Proc(ISAXXMLFilter*, LibC::LPWSTR, VARIANT, HRESULT)
    get_entity_resolver : Proc(ISAXXMLFilter*, ISAXEntityResolver*, HRESULT)
    put_entity_resolver : Proc(ISAXXMLFilter*, ISAXEntityResolver, HRESULT)
    get_content_handler : Proc(ISAXXMLFilter*, ISAXContentHandler*, HRESULT)
    put_content_handler : Proc(ISAXXMLFilter*, ISAXContentHandler, HRESULT)
    get_dtd_handler : Proc(ISAXXMLFilter*, ISAXDTDHandler*, HRESULT)
    put_dtd_handler : Proc(ISAXXMLFilter*, ISAXDTDHandler, HRESULT)
    get_error_handler : Proc(ISAXXMLFilter*, ISAXErrorHandler*, HRESULT)
    put_error_handler : Proc(ISAXXMLFilter*, ISAXErrorHandler, HRESULT)
    get_base_url : Proc(ISAXXMLFilter*, UInt16**, HRESULT)
    put_base_url : Proc(ISAXXMLFilter*, LibC::LPWSTR, HRESULT)
    get_secure_base_url : Proc(ISAXXMLFilter*, UInt16**, HRESULT)
    put_secure_base_url : Proc(ISAXXMLFilter*, LibC::LPWSTR, HRESULT)
    parse : Proc(ISAXXMLFilter*, VARIANT, HRESULT)
    parse_url : Proc(ISAXXMLFilter*, LibC::LPWSTR, HRESULT)
    get_parent : Proc(ISAXXMLFilter*, ISAXXMLReader*, HRESULT)
    put_parent : Proc(ISAXXMLFilter*, ISAXXMLReader, HRESULT)
  end

  ISAXXMLFilter_GUID = LibC::GUID.new("70409222-ca09-4475-acb8-40312fe8d145")
  CLSID_ISAXXMLFilter = "70409222-ca09-4475-acb8-40312fe8d145"
  struct ISAXXMLFilter
    lpVtbl : ISAXXMLFilterVTbl*
  end

  struct ISAXLocatorVTbl
    query_interface : Proc(ISAXLocator*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISAXLocator*, UInt32)
    release : Proc(ISAXLocator*, UInt32)
    get_column_number : Proc(ISAXLocator*, Int32*, HRESULT)
    get_line_number : Proc(ISAXLocator*, Int32*, HRESULT)
    get_public_id : Proc(ISAXLocator*, UInt16**, HRESULT)
    get_system_id : Proc(ISAXLocator*, UInt16**, HRESULT)
  end

  ISAXLocator_GUID = LibC::GUID.new("9b7e472a-0de4-4640-bff3-84d38a051c31")
  CLSID_ISAXLocator = "9b7e472a-0de4-4640-bff3-84d38a051c31"
  struct ISAXLocator
    lpVtbl : ISAXLocatorVTbl*
  end

  struct ISAXEntityResolverVTbl
    query_interface : Proc(ISAXEntityResolver*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISAXEntityResolver*, UInt32)
    release : Proc(ISAXEntityResolver*, UInt32)
    resolve_entity : Proc(ISAXEntityResolver*, LibC::LPWSTR, LibC::LPWSTR, VARIANT*, HRESULT)
  end

  ISAXEntityResolver_GUID = LibC::GUID.new("99bca7bd-e8c4-4d5f-a0cf-6d907901ff07")
  CLSID_ISAXEntityResolver = "99bca7bd-e8c4-4d5f-a0cf-6d907901ff07"
  struct ISAXEntityResolver
    lpVtbl : ISAXEntityResolverVTbl*
  end

  struct ISAXContentHandlerVTbl
    query_interface : Proc(ISAXContentHandler*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISAXContentHandler*, UInt32)
    release : Proc(ISAXContentHandler*, UInt32)
    put_document_locator : Proc(ISAXContentHandler*, ISAXLocator, HRESULT)
    start_document : Proc(ISAXContentHandler*, HRESULT)
    end_document : Proc(ISAXContentHandler*, HRESULT)
    start_prefix_mapping : Proc(ISAXContentHandler*, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, HRESULT)
    end_prefix_mapping : Proc(ISAXContentHandler*, LibC::LPWSTR, Int32, HRESULT)
    start_element : Proc(ISAXContentHandler*, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, ISAXAttributes, HRESULT)
    end_element : Proc(ISAXContentHandler*, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, HRESULT)
    characters : Proc(ISAXContentHandler*, LibC::LPWSTR, Int32, HRESULT)
    ignorable_whitespace : Proc(ISAXContentHandler*, LibC::LPWSTR, Int32, HRESULT)
    processing_instruction : Proc(ISAXContentHandler*, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, HRESULT)
    skipped_entity : Proc(ISAXContentHandler*, LibC::LPWSTR, Int32, HRESULT)
  end

  ISAXContentHandler_GUID = LibC::GUID.new("1545cdfa-9e4e-4497-a8a4-2bf7d0112c44")
  CLSID_ISAXContentHandler = "1545cdfa-9e4e-4497-a8a4-2bf7d0112c44"
  struct ISAXContentHandler
    lpVtbl : ISAXContentHandlerVTbl*
  end

  struct ISAXDTDHandlerVTbl
    query_interface : Proc(ISAXDTDHandler*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISAXDTDHandler*, UInt32)
    release : Proc(ISAXDTDHandler*, UInt32)
    notation_decl : Proc(ISAXDTDHandler*, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, HRESULT)
    unparsed_entity_decl : Proc(ISAXDTDHandler*, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, HRESULT)
  end

  ISAXDTDHandler_GUID = LibC::GUID.new("e15c1baf-afb3-4d60-8c36-19a8c45defed")
  CLSID_ISAXDTDHandler = "e15c1baf-afb3-4d60-8c36-19a8c45defed"
  struct ISAXDTDHandler
    lpVtbl : ISAXDTDHandlerVTbl*
  end

  struct ISAXErrorHandlerVTbl
    query_interface : Proc(ISAXErrorHandler*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISAXErrorHandler*, UInt32)
    release : Proc(ISAXErrorHandler*, UInt32)
    error : Proc(ISAXErrorHandler*, ISAXLocator, LibC::LPWSTR, HRESULT, HRESULT)
    fatal_error : Proc(ISAXErrorHandler*, ISAXLocator, LibC::LPWSTR, HRESULT, HRESULT)
    ignorable_warning : Proc(ISAXErrorHandler*, ISAXLocator, LibC::LPWSTR, HRESULT, HRESULT)
  end

  ISAXErrorHandler_GUID = LibC::GUID.new("a60511c4-ccf5-479e-98a3-dc8dc545b7d0")
  CLSID_ISAXErrorHandler = "a60511c4-ccf5-479e-98a3-dc8dc545b7d0"
  struct ISAXErrorHandler
    lpVtbl : ISAXErrorHandlerVTbl*
  end

  struct ISAXLexicalHandlerVTbl
    query_interface : Proc(ISAXLexicalHandler*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISAXLexicalHandler*, UInt32)
    release : Proc(ISAXLexicalHandler*, UInt32)
    start_dtd : Proc(ISAXLexicalHandler*, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, HRESULT)
    end_dtd : Proc(ISAXLexicalHandler*, HRESULT)
    start_entity : Proc(ISAXLexicalHandler*, LibC::LPWSTR, Int32, HRESULT)
    end_entity : Proc(ISAXLexicalHandler*, LibC::LPWSTR, Int32, HRESULT)
    start_cdata : Proc(ISAXLexicalHandler*, HRESULT)
    end_cdata : Proc(ISAXLexicalHandler*, HRESULT)
    comment : Proc(ISAXLexicalHandler*, LibC::LPWSTR, Int32, HRESULT)
  end

  ISAXLexicalHandler_GUID = LibC::GUID.new("7f85d5f5-47a8-4497-bda5-84ba04819ea6")
  CLSID_ISAXLexicalHandler = "7f85d5f5-47a8-4497-bda5-84ba04819ea6"
  struct ISAXLexicalHandler
    lpVtbl : ISAXLexicalHandlerVTbl*
  end

  struct ISAXDeclHandlerVTbl
    query_interface : Proc(ISAXDeclHandler*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISAXDeclHandler*, UInt32)
    release : Proc(ISAXDeclHandler*, UInt32)
    element_decl : Proc(ISAXDeclHandler*, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, HRESULT)
    attribute_decl : Proc(ISAXDeclHandler*, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, HRESULT)
    internal_entity_decl : Proc(ISAXDeclHandler*, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, HRESULT)
    external_entity_decl : Proc(ISAXDeclHandler*, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, HRESULT)
  end

  ISAXDeclHandler_GUID = LibC::GUID.new("862629ac-771a-47b2-8337-4e6843c1be90")
  CLSID_ISAXDeclHandler = "862629ac-771a-47b2-8337-4e6843c1be90"
  struct ISAXDeclHandler
    lpVtbl : ISAXDeclHandlerVTbl*
  end

  struct ISAXAttributesVTbl
    query_interface : Proc(ISAXAttributes*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISAXAttributes*, UInt32)
    release : Proc(ISAXAttributes*, UInt32)
    get_length : Proc(ISAXAttributes*, Int32*, HRESULT)
    get_uri : Proc(ISAXAttributes*, Int32, UInt16**, Int32*, HRESULT)
    get_local_name : Proc(ISAXAttributes*, Int32, UInt16**, Int32*, HRESULT)
    get_q_name : Proc(ISAXAttributes*, Int32, UInt16**, Int32*, HRESULT)
    get_name : Proc(ISAXAttributes*, Int32, UInt16**, Int32*, UInt16**, Int32*, UInt16**, Int32*, HRESULT)
    get_index_from_name : Proc(ISAXAttributes*, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, Int32*, HRESULT)
    get_index_from_q_name : Proc(ISAXAttributes*, LibC::LPWSTR, Int32, Int32*, HRESULT)
    get_type : Proc(ISAXAttributes*, Int32, UInt16**, Int32*, HRESULT)
    get_type_from_name : Proc(ISAXAttributes*, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, UInt16**, Int32*, HRESULT)
    get_type_from_q_name : Proc(ISAXAttributes*, LibC::LPWSTR, Int32, UInt16**, Int32*, HRESULT)
    get_value : Proc(ISAXAttributes*, Int32, UInt16**, Int32*, HRESULT)
    get_value_from_name : Proc(ISAXAttributes*, LibC::LPWSTR, Int32, LibC::LPWSTR, Int32, UInt16**, Int32*, HRESULT)
    get_value_from_q_name : Proc(ISAXAttributes*, LibC::LPWSTR, Int32, UInt16**, Int32*, HRESULT)
  end

  ISAXAttributes_GUID = LibC::GUID.new("f078abe1-45d2-4832-91ea-4466ce2f25c9")
  CLSID_ISAXAttributes = "f078abe1-45d2-4832-91ea-4466ce2f25c9"
  struct ISAXAttributes
    lpVtbl : ISAXAttributesVTbl*
  end

  struct IVBSAXXMLReaderVTbl
    query_interface : Proc(IVBSAXXMLReader*, Guid*, Void**, HRESULT)
    add_ref : Proc(IVBSAXXMLReader*, UInt32)
    release : Proc(IVBSAXXMLReader*, UInt32)
    get_type_info_count : Proc(IVBSAXXMLReader*, UInt32*, HRESULT)
    get_type_info : Proc(IVBSAXXMLReader*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IVBSAXXMLReader*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IVBSAXXMLReader*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_feature : Proc(IVBSAXXMLReader*, UInt8*, Int16*, HRESULT)
    put_feature : Proc(IVBSAXXMLReader*, UInt8*, Int16, HRESULT)
    get_property : Proc(IVBSAXXMLReader*, UInt8*, VARIANT*, HRESULT)
    put_property : Proc(IVBSAXXMLReader*, UInt8*, VARIANT, HRESULT)
    get_entity_resolver : Proc(IVBSAXXMLReader*, IVBSAXEntityResolver*, HRESULT)
    putref_entity_resolver : Proc(IVBSAXXMLReader*, IVBSAXEntityResolver, HRESULT)
    get_content_handler : Proc(IVBSAXXMLReader*, IVBSAXContentHandler*, HRESULT)
    putref_content_handler : Proc(IVBSAXXMLReader*, IVBSAXContentHandler, HRESULT)
    get_dtd_handler : Proc(IVBSAXXMLReader*, IVBSAXDTDHandler*, HRESULT)
    putref_dtd_handler : Proc(IVBSAXXMLReader*, IVBSAXDTDHandler, HRESULT)
    get_error_handler : Proc(IVBSAXXMLReader*, IVBSAXErrorHandler*, HRESULT)
    putref_error_handler : Proc(IVBSAXXMLReader*, IVBSAXErrorHandler, HRESULT)
    get_base_url : Proc(IVBSAXXMLReader*, UInt8**, HRESULT)
    put_base_url : Proc(IVBSAXXMLReader*, UInt8*, HRESULT)
    get_secure_base_url : Proc(IVBSAXXMLReader*, UInt8**, HRESULT)
    put_secure_base_url : Proc(IVBSAXXMLReader*, UInt8*, HRESULT)
    parse : Proc(IVBSAXXMLReader*, VARIANT, HRESULT)
    parse_url : Proc(IVBSAXXMLReader*, UInt8*, HRESULT)
  end

  IVBSAXXMLReader_GUID = LibC::GUID.new("8c033caa-6cd6-4f73-b728-4531af74945f")
  CLSID_IVBSAXXMLReader = "8c033caa-6cd6-4f73-b728-4531af74945f"
  struct IVBSAXXMLReader
    lpVtbl : IVBSAXXMLReaderVTbl*
  end

  struct IVBSAXXMLFilterVTbl
    query_interface : Proc(IVBSAXXMLFilter*, Guid*, Void**, HRESULT)
    add_ref : Proc(IVBSAXXMLFilter*, UInt32)
    release : Proc(IVBSAXXMLFilter*, UInt32)
    get_type_info_count : Proc(IVBSAXXMLFilter*, UInt32*, HRESULT)
    get_type_info : Proc(IVBSAXXMLFilter*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IVBSAXXMLFilter*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IVBSAXXMLFilter*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_parent : Proc(IVBSAXXMLFilter*, IVBSAXXMLReader*, HRESULT)
    putref_parent : Proc(IVBSAXXMLFilter*, IVBSAXXMLReader, HRESULT)
  end

  IVBSAXXMLFilter_GUID = LibC::GUID.new("1299eb1b-5b88-433e-82de-82ca75ad4e04")
  CLSID_IVBSAXXMLFilter = "1299eb1b-5b88-433e-82de-82ca75ad4e04"
  struct IVBSAXXMLFilter
    lpVtbl : IVBSAXXMLFilterVTbl*
  end

  struct IVBSAXLocatorVTbl
    query_interface : Proc(IVBSAXLocator*, Guid*, Void**, HRESULT)
    add_ref : Proc(IVBSAXLocator*, UInt32)
    release : Proc(IVBSAXLocator*, UInt32)
    get_type_info_count : Proc(IVBSAXLocator*, UInt32*, HRESULT)
    get_type_info : Proc(IVBSAXLocator*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IVBSAXLocator*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IVBSAXLocator*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_column_number : Proc(IVBSAXLocator*, Int32*, HRESULT)
    get_line_number : Proc(IVBSAXLocator*, Int32*, HRESULT)
    get_public_id : Proc(IVBSAXLocator*, UInt8**, HRESULT)
    get_system_id : Proc(IVBSAXLocator*, UInt8**, HRESULT)
  end

  IVBSAXLocator_GUID = LibC::GUID.new("796e7ac5-5aa2-4eff-acad-3faaf01a3288")
  CLSID_IVBSAXLocator = "796e7ac5-5aa2-4eff-acad-3faaf01a3288"
  struct IVBSAXLocator
    lpVtbl : IVBSAXLocatorVTbl*
  end

  struct IVBSAXEntityResolverVTbl
    query_interface : Proc(IVBSAXEntityResolver*, Guid*, Void**, HRESULT)
    add_ref : Proc(IVBSAXEntityResolver*, UInt32)
    release : Proc(IVBSAXEntityResolver*, UInt32)
    get_type_info_count : Proc(IVBSAXEntityResolver*, UInt32*, HRESULT)
    get_type_info : Proc(IVBSAXEntityResolver*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IVBSAXEntityResolver*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IVBSAXEntityResolver*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    resolve_entity : Proc(IVBSAXEntityResolver*, UInt8**, UInt8**, VARIANT*, HRESULT)
  end

  IVBSAXEntityResolver_GUID = LibC::GUID.new("0c05d096-f45b-4aca-ad1a-aa0bc25518dc")
  CLSID_IVBSAXEntityResolver = "0c05d096-f45b-4aca-ad1a-aa0bc25518dc"
  struct IVBSAXEntityResolver
    lpVtbl : IVBSAXEntityResolverVTbl*
  end

  struct IVBSAXContentHandlerVTbl
    query_interface : Proc(IVBSAXContentHandler*, Guid*, Void**, HRESULT)
    add_ref : Proc(IVBSAXContentHandler*, UInt32)
    release : Proc(IVBSAXContentHandler*, UInt32)
    get_type_info_count : Proc(IVBSAXContentHandler*, UInt32*, HRESULT)
    get_type_info : Proc(IVBSAXContentHandler*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IVBSAXContentHandler*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IVBSAXContentHandler*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    putref_document_locator : Proc(IVBSAXContentHandler*, IVBSAXLocator, HRESULT)
    start_document : Proc(IVBSAXContentHandler*, HRESULT)
    end_document : Proc(IVBSAXContentHandler*, HRESULT)
    start_prefix_mapping : Proc(IVBSAXContentHandler*, UInt8**, UInt8**, HRESULT)
    end_prefix_mapping : Proc(IVBSAXContentHandler*, UInt8**, HRESULT)
    start_element : Proc(IVBSAXContentHandler*, UInt8**, UInt8**, UInt8**, IVBSAXAttributes, HRESULT)
    end_element : Proc(IVBSAXContentHandler*, UInt8**, UInt8**, UInt8**, HRESULT)
    characters : Proc(IVBSAXContentHandler*, UInt8**, HRESULT)
    ignorable_whitespace : Proc(IVBSAXContentHandler*, UInt8**, HRESULT)
    processing_instruction : Proc(IVBSAXContentHandler*, UInt8**, UInt8**, HRESULT)
    skipped_entity : Proc(IVBSAXContentHandler*, UInt8**, HRESULT)
  end

  IVBSAXContentHandler_GUID = LibC::GUID.new("2ed7290a-4dd5-4b46-bb26-4e4155e77faa")
  CLSID_IVBSAXContentHandler = "2ed7290a-4dd5-4b46-bb26-4e4155e77faa"
  struct IVBSAXContentHandler
    lpVtbl : IVBSAXContentHandlerVTbl*
  end

  struct IVBSAXDTDHandlerVTbl
    query_interface : Proc(IVBSAXDTDHandler*, Guid*, Void**, HRESULT)
    add_ref : Proc(IVBSAXDTDHandler*, UInt32)
    release : Proc(IVBSAXDTDHandler*, UInt32)
    get_type_info_count : Proc(IVBSAXDTDHandler*, UInt32*, HRESULT)
    get_type_info : Proc(IVBSAXDTDHandler*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IVBSAXDTDHandler*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IVBSAXDTDHandler*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    notation_decl : Proc(IVBSAXDTDHandler*, UInt8**, UInt8**, UInt8**, HRESULT)
    unparsed_entity_decl : Proc(IVBSAXDTDHandler*, UInt8**, UInt8**, UInt8**, UInt8**, HRESULT)
  end

  IVBSAXDTDHandler_GUID = LibC::GUID.new("24fb3297-302d-4620-ba39-3a732d850558")
  CLSID_IVBSAXDTDHandler = "24fb3297-302d-4620-ba39-3a732d850558"
  struct IVBSAXDTDHandler
    lpVtbl : IVBSAXDTDHandlerVTbl*
  end

  struct IVBSAXErrorHandlerVTbl
    query_interface : Proc(IVBSAXErrorHandler*, Guid*, Void**, HRESULT)
    add_ref : Proc(IVBSAXErrorHandler*, UInt32)
    release : Proc(IVBSAXErrorHandler*, UInt32)
    get_type_info_count : Proc(IVBSAXErrorHandler*, UInt32*, HRESULT)
    get_type_info : Proc(IVBSAXErrorHandler*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IVBSAXErrorHandler*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IVBSAXErrorHandler*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    error : Proc(IVBSAXErrorHandler*, IVBSAXLocator, UInt8**, Int32, HRESULT)
    fatal_error : Proc(IVBSAXErrorHandler*, IVBSAXLocator, UInt8**, Int32, HRESULT)
    ignorable_warning : Proc(IVBSAXErrorHandler*, IVBSAXLocator, UInt8**, Int32, HRESULT)
  end

  IVBSAXErrorHandler_GUID = LibC::GUID.new("d963d3fe-173c-4862-9095-b92f66995f52")
  CLSID_IVBSAXErrorHandler = "d963d3fe-173c-4862-9095-b92f66995f52"
  struct IVBSAXErrorHandler
    lpVtbl : IVBSAXErrorHandlerVTbl*
  end

  struct IVBSAXLexicalHandlerVTbl
    query_interface : Proc(IVBSAXLexicalHandler*, Guid*, Void**, HRESULT)
    add_ref : Proc(IVBSAXLexicalHandler*, UInt32)
    release : Proc(IVBSAXLexicalHandler*, UInt32)
    get_type_info_count : Proc(IVBSAXLexicalHandler*, UInt32*, HRESULT)
    get_type_info : Proc(IVBSAXLexicalHandler*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IVBSAXLexicalHandler*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IVBSAXLexicalHandler*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    start_dtd : Proc(IVBSAXLexicalHandler*, UInt8**, UInt8**, UInt8**, HRESULT)
    end_dtd : Proc(IVBSAXLexicalHandler*, HRESULT)
    start_entity : Proc(IVBSAXLexicalHandler*, UInt8**, HRESULT)
    end_entity : Proc(IVBSAXLexicalHandler*, UInt8**, HRESULT)
    start_cdata : Proc(IVBSAXLexicalHandler*, HRESULT)
    end_cdata : Proc(IVBSAXLexicalHandler*, HRESULT)
    comment : Proc(IVBSAXLexicalHandler*, UInt8**, HRESULT)
  end

  IVBSAXLexicalHandler_GUID = LibC::GUID.new("032aac35-8c0e-4d9d-979f-e3b702935576")
  CLSID_IVBSAXLexicalHandler = "032aac35-8c0e-4d9d-979f-e3b702935576"
  struct IVBSAXLexicalHandler
    lpVtbl : IVBSAXLexicalHandlerVTbl*
  end

  struct IVBSAXDeclHandlerVTbl
    query_interface : Proc(IVBSAXDeclHandler*, Guid*, Void**, HRESULT)
    add_ref : Proc(IVBSAXDeclHandler*, UInt32)
    release : Proc(IVBSAXDeclHandler*, UInt32)
    get_type_info_count : Proc(IVBSAXDeclHandler*, UInt32*, HRESULT)
    get_type_info : Proc(IVBSAXDeclHandler*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IVBSAXDeclHandler*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IVBSAXDeclHandler*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    element_decl : Proc(IVBSAXDeclHandler*, UInt8**, UInt8**, HRESULT)
    attribute_decl : Proc(IVBSAXDeclHandler*, UInt8**, UInt8**, UInt8**, UInt8**, UInt8**, HRESULT)
    internal_entity_decl : Proc(IVBSAXDeclHandler*, UInt8**, UInt8**, HRESULT)
    external_entity_decl : Proc(IVBSAXDeclHandler*, UInt8**, UInt8**, UInt8**, HRESULT)
  end

  IVBSAXDeclHandler_GUID = LibC::GUID.new("e8917260-7579-4be1-b5dd-7afbfa6f077b")
  CLSID_IVBSAXDeclHandler = "e8917260-7579-4be1-b5dd-7afbfa6f077b"
  struct IVBSAXDeclHandler
    lpVtbl : IVBSAXDeclHandlerVTbl*
  end

  struct IVBSAXAttributesVTbl
    query_interface : Proc(IVBSAXAttributes*, Guid*, Void**, HRESULT)
    add_ref : Proc(IVBSAXAttributes*, UInt32)
    release : Proc(IVBSAXAttributes*, UInt32)
    get_type_info_count : Proc(IVBSAXAttributes*, UInt32*, HRESULT)
    get_type_info : Proc(IVBSAXAttributes*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IVBSAXAttributes*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IVBSAXAttributes*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_length : Proc(IVBSAXAttributes*, Int32*, HRESULT)
    get_uri : Proc(IVBSAXAttributes*, Int32, UInt8**, HRESULT)
    get_local_name : Proc(IVBSAXAttributes*, Int32, UInt8**, HRESULT)
    get_q_name : Proc(IVBSAXAttributes*, Int32, UInt8**, HRESULT)
    get_index_from_name : Proc(IVBSAXAttributes*, UInt8*, UInt8*, Int32*, HRESULT)
    get_index_from_q_name : Proc(IVBSAXAttributes*, UInt8*, Int32*, HRESULT)
    get_type : Proc(IVBSAXAttributes*, Int32, UInt8**, HRESULT)
    get_type_from_name : Proc(IVBSAXAttributes*, UInt8*, UInt8*, UInt8**, HRESULT)
    get_type_from_q_name : Proc(IVBSAXAttributes*, UInt8*, UInt8**, HRESULT)
    get_value : Proc(IVBSAXAttributes*, Int32, UInt8**, HRESULT)
    get_value_from_name : Proc(IVBSAXAttributes*, UInt8*, UInt8*, UInt8**, HRESULT)
    get_value_from_q_name : Proc(IVBSAXAttributes*, UInt8*, UInt8**, HRESULT)
  end

  IVBSAXAttributes_GUID = LibC::GUID.new("10dc0586-132b-4cac-8bb3-db00ac8b7ee0")
  CLSID_IVBSAXAttributes = "10dc0586-132b-4cac-8bb3-db00ac8b7ee0"
  struct IVBSAXAttributes
    lpVtbl : IVBSAXAttributesVTbl*
  end

  struct IMXWriterVTbl
    query_interface : Proc(IMXWriter*, Guid*, Void**, HRESULT)
    add_ref : Proc(IMXWriter*, UInt32)
    release : Proc(IMXWriter*, UInt32)
    get_type_info_count : Proc(IMXWriter*, UInt32*, HRESULT)
    get_type_info : Proc(IMXWriter*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IMXWriter*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IMXWriter*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    put_output : Proc(IMXWriter*, VARIANT, HRESULT)
    get_output : Proc(IMXWriter*, VARIANT*, HRESULT)
    put_encoding : Proc(IMXWriter*, UInt8*, HRESULT)
    get_encoding : Proc(IMXWriter*, UInt8**, HRESULT)
    put_byte_order_mark : Proc(IMXWriter*, Int16, HRESULT)
    get_byte_order_mark : Proc(IMXWriter*, Int16*, HRESULT)
    put_indent : Proc(IMXWriter*, Int16, HRESULT)
    get_indent : Proc(IMXWriter*, Int16*, HRESULT)
    put_standalone : Proc(IMXWriter*, Int16, HRESULT)
    get_standalone : Proc(IMXWriter*, Int16*, HRESULT)
    put_omit_xml_declaration : Proc(IMXWriter*, Int16, HRESULT)
    get_omit_xml_declaration : Proc(IMXWriter*, Int16*, HRESULT)
    put_version : Proc(IMXWriter*, UInt8*, HRESULT)
    get_version : Proc(IMXWriter*, UInt8**, HRESULT)
    put_disable_output_escaping : Proc(IMXWriter*, Int16, HRESULT)
    get_disable_output_escaping : Proc(IMXWriter*, Int16*, HRESULT)
    flush : Proc(IMXWriter*, HRESULT)
  end

  IMXWriter_GUID = LibC::GUID.new("4d7ff4ba-1565-4ea8-94e1-6e724a46f98d")
  CLSID_IMXWriter = "4d7ff4ba-1565-4ea8-94e1-6e724a46f98d"
  struct IMXWriter
    lpVtbl : IMXWriterVTbl*
  end

  struct IMXAttributesVTbl
    query_interface : Proc(IMXAttributes*, Guid*, Void**, HRESULT)
    add_ref : Proc(IMXAttributes*, UInt32)
    release : Proc(IMXAttributes*, UInt32)
    get_type_info_count : Proc(IMXAttributes*, UInt32*, HRESULT)
    get_type_info : Proc(IMXAttributes*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IMXAttributes*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IMXAttributes*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    add_attribute : Proc(IMXAttributes*, UInt8*, UInt8*, UInt8*, UInt8*, UInt8*, HRESULT)
    add_attribute_from_index : Proc(IMXAttributes*, VARIANT, Int32, HRESULT)
    clear : Proc(IMXAttributes*, HRESULT)
    remove_attribute : Proc(IMXAttributes*, Int32, HRESULT)
    set_attribute : Proc(IMXAttributes*, Int32, UInt8*, UInt8*, UInt8*, UInt8*, UInt8*, HRESULT)
    set_attributes : Proc(IMXAttributes*, VARIANT, HRESULT)
    set_local_name : Proc(IMXAttributes*, Int32, UInt8*, HRESULT)
    set_q_name : Proc(IMXAttributes*, Int32, UInt8*, HRESULT)
    set_type : Proc(IMXAttributes*, Int32, UInt8*, HRESULT)
    set_uri : Proc(IMXAttributes*, Int32, UInt8*, HRESULT)
    set_value : Proc(IMXAttributes*, Int32, UInt8*, HRESULT)
  end

  IMXAttributes_GUID = LibC::GUID.new("f10d27cc-3ec0-415c-8ed8-77ab1c5e7262")
  CLSID_IMXAttributes = "f10d27cc-3ec0-415c-8ed8-77ab1c5e7262"
  struct IMXAttributes
    lpVtbl : IMXAttributesVTbl*
  end

  struct IMXReaderControlVTbl
    query_interface : Proc(IMXReaderControl*, Guid*, Void**, HRESULT)
    add_ref : Proc(IMXReaderControl*, UInt32)
    release : Proc(IMXReaderControl*, UInt32)
    get_type_info_count : Proc(IMXReaderControl*, UInt32*, HRESULT)
    get_type_info : Proc(IMXReaderControl*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IMXReaderControl*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IMXReaderControl*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    abort : Proc(IMXReaderControl*, HRESULT)
    resume : Proc(IMXReaderControl*, HRESULT)
    suspend : Proc(IMXReaderControl*, HRESULT)
  end

  IMXReaderControl_GUID = LibC::GUID.new("808f4e35-8d5a-4fbe-8466-33a41279ed30")
  CLSID_IMXReaderControl = "808f4e35-8d5a-4fbe-8466-33a41279ed30"
  struct IMXReaderControl
    lpVtbl : IMXReaderControlVTbl*
  end

  struct IMXSchemaDeclHandlerVTbl
    query_interface : Proc(IMXSchemaDeclHandler*, Guid*, Void**, HRESULT)
    add_ref : Proc(IMXSchemaDeclHandler*, UInt32)
    release : Proc(IMXSchemaDeclHandler*, UInt32)
    get_type_info_count : Proc(IMXSchemaDeclHandler*, UInt32*, HRESULT)
    get_type_info : Proc(IMXSchemaDeclHandler*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IMXSchemaDeclHandler*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IMXSchemaDeclHandler*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    schema_element_decl : Proc(IMXSchemaDeclHandler*, ISchemaElement, HRESULT)
  end

  IMXSchemaDeclHandler_GUID = LibC::GUID.new("fa4bb38c-faf9-4cca-9302-d1dd0fe520db")
  CLSID_IMXSchemaDeclHandler = "fa4bb38c-faf9-4cca-9302-d1dd0fe520db"
  struct IMXSchemaDeclHandler
    lpVtbl : IMXSchemaDeclHandlerVTbl*
  end

  struct IMXNamespacePrefixesVTbl
    query_interface : Proc(IMXNamespacePrefixes*, Guid*, Void**, HRESULT)
    add_ref : Proc(IMXNamespacePrefixes*, UInt32)
    release : Proc(IMXNamespacePrefixes*, UInt32)
    get_type_info_count : Proc(IMXNamespacePrefixes*, UInt32*, HRESULT)
    get_type_info : Proc(IMXNamespacePrefixes*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IMXNamespacePrefixes*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IMXNamespacePrefixes*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_item : Proc(IMXNamespacePrefixes*, Int32, UInt8**, HRESULT)
    get_length : Proc(IMXNamespacePrefixes*, Int32*, HRESULT)
    get__new_enum : Proc(IMXNamespacePrefixes*, IUnknown*, HRESULT)
  end

  IMXNamespacePrefixes_GUID = LibC::GUID.new("c90352f4-643c-4fbc-bb23-e996eb2d51fd")
  CLSID_IMXNamespacePrefixes = "c90352f4-643c-4fbc-bb23-e996eb2d51fd"
  struct IMXNamespacePrefixes
    lpVtbl : IMXNamespacePrefixesVTbl*
  end

  struct IVBMXNamespaceManagerVTbl
    query_interface : Proc(IVBMXNamespaceManager*, Guid*, Void**, HRESULT)
    add_ref : Proc(IVBMXNamespaceManager*, UInt32)
    release : Proc(IVBMXNamespaceManager*, UInt32)
    get_type_info_count : Proc(IVBMXNamespaceManager*, UInt32*, HRESULT)
    get_type_info : Proc(IVBMXNamespaceManager*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IVBMXNamespaceManager*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IVBMXNamespaceManager*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    put_allow_override : Proc(IVBMXNamespaceManager*, Int16, HRESULT)
    get_allow_override : Proc(IVBMXNamespaceManager*, Int16*, HRESULT)
    reset : Proc(IVBMXNamespaceManager*, HRESULT)
    push_context : Proc(IVBMXNamespaceManager*, HRESULT)
    push_node_context : Proc(IVBMXNamespaceManager*, IXMLDOMNode, Int16, HRESULT)
    pop_context : Proc(IVBMXNamespaceManager*, HRESULT)
    declare_prefix : Proc(IVBMXNamespaceManager*, UInt8*, UInt8*, HRESULT)
    get_declared_prefixes : Proc(IVBMXNamespaceManager*, IMXNamespacePrefixes*, HRESULT)
    get_prefixes : Proc(IVBMXNamespaceManager*, UInt8*, IMXNamespacePrefixes*, HRESULT)
    get_uri : Proc(IVBMXNamespaceManager*, UInt8*, VARIANT*, HRESULT)
    get_uri_from_node : Proc(IVBMXNamespaceManager*, UInt8*, IXMLDOMNode, VARIANT*, HRESULT)
  end

  IVBMXNamespaceManager_GUID = LibC::GUID.new("c90352f5-643c-4fbc-bb23-e996eb2d51fd")
  CLSID_IVBMXNamespaceManager = "c90352f5-643c-4fbc-bb23-e996eb2d51fd"
  struct IVBMXNamespaceManager
    lpVtbl : IVBMXNamespaceManagerVTbl*
  end

  struct IMXNamespaceManagerVTbl
    query_interface : Proc(IMXNamespaceManager*, Guid*, Void**, HRESULT)
    add_ref : Proc(IMXNamespaceManager*, UInt32)
    release : Proc(IMXNamespaceManager*, UInt32)
    put_allow_override : Proc(IMXNamespaceManager*, Int16, HRESULT)
    get_allow_override : Proc(IMXNamespaceManager*, Int16*, HRESULT)
    reset : Proc(IMXNamespaceManager*, HRESULT)
    push_context : Proc(IMXNamespaceManager*, HRESULT)
    push_node_context : Proc(IMXNamespaceManager*, IXMLDOMNode, Int16, HRESULT)
    pop_context : Proc(IMXNamespaceManager*, HRESULT)
    declare_prefix : Proc(IMXNamespaceManager*, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    get_declared_prefix : Proc(IMXNamespaceManager*, Int32, Char*, Int32*, HRESULT)
    get_prefix : Proc(IMXNamespaceManager*, LibC::LPWSTR, Int32, Char*, Int32*, HRESULT)
    get_uri : Proc(IMXNamespaceManager*, LibC::LPWSTR, IXMLDOMNode, Char*, Int32*, HRESULT)
  end

  IMXNamespaceManager_GUID = LibC::GUID.new("c90352f6-643c-4fbc-bb23-e996eb2d51fd")
  CLSID_IMXNamespaceManager = "c90352f6-643c-4fbc-bb23-e996eb2d51fd"
  struct IMXNamespaceManager
    lpVtbl : IMXNamespaceManagerVTbl*
  end

  struct IMXXMLFilterVTbl
    query_interface : Proc(IMXXMLFilter*, Guid*, Void**, HRESULT)
    add_ref : Proc(IMXXMLFilter*, UInt32)
    release : Proc(IMXXMLFilter*, UInt32)
    get_type_info_count : Proc(IMXXMLFilter*, UInt32*, HRESULT)
    get_type_info : Proc(IMXXMLFilter*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IMXXMLFilter*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IMXXMLFilter*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_feature : Proc(IMXXMLFilter*, UInt8*, Int16*, HRESULT)
    put_feature : Proc(IMXXMLFilter*, UInt8*, Int16, HRESULT)
    get_property : Proc(IMXXMLFilter*, UInt8*, VARIANT*, HRESULT)
    put_property : Proc(IMXXMLFilter*, UInt8*, VARIANT, HRESULT)
    get_entity_resolver : Proc(IMXXMLFilter*, IUnknown*, HRESULT)
    putref_entity_resolver : Proc(IMXXMLFilter*, IUnknown, HRESULT)
    get_content_handler : Proc(IMXXMLFilter*, IUnknown*, HRESULT)
    putref_content_handler : Proc(IMXXMLFilter*, IUnknown, HRESULT)
    get_dtd_handler : Proc(IMXXMLFilter*, IUnknown*, HRESULT)
    putref_dtd_handler : Proc(IMXXMLFilter*, IUnknown, HRESULT)
    get_error_handler : Proc(IMXXMLFilter*, IUnknown*, HRESULT)
    putref_error_handler : Proc(IMXXMLFilter*, IUnknown, HRESULT)
  end

  IMXXMLFilter_GUID = LibC::GUID.new("c90352f7-643c-4fbc-bb23-e996eb2d51fd")
  CLSID_IMXXMLFilter = "c90352f7-643c-4fbc-bb23-e996eb2d51fd"
  struct IMXXMLFilter
    lpVtbl : IMXXMLFilterVTbl*
  end

  struct IXMLDOMSchemaCollection2VTbl
    query_interface : Proc(IXMLDOMSchemaCollection2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLDOMSchemaCollection2*, UInt32)
    release : Proc(IXMLDOMSchemaCollection2*, UInt32)
    get_type_info_count : Proc(IXMLDOMSchemaCollection2*, UInt32*, HRESULT)
    get_type_info : Proc(IXMLDOMSchemaCollection2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IXMLDOMSchemaCollection2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IXMLDOMSchemaCollection2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    add : Proc(IXMLDOMSchemaCollection2*, UInt8*, VARIANT, HRESULT)
    get : Proc(IXMLDOMSchemaCollection2*, UInt8*, IXMLDOMNode*, HRESULT)
    remove : Proc(IXMLDOMSchemaCollection2*, UInt8*, HRESULT)
    get_length : Proc(IXMLDOMSchemaCollection2*, Int32*, HRESULT)
    get_namespace_uri : Proc(IXMLDOMSchemaCollection2*, Int32, UInt8**, HRESULT)
    add_collection : Proc(IXMLDOMSchemaCollection2*, IXMLDOMSchemaCollection, HRESULT)
    get__new_enum : Proc(IXMLDOMSchemaCollection2*, IUnknown*, HRESULT)
    validate : Proc(IXMLDOMSchemaCollection2*, HRESULT)
    put_validate_on_load : Proc(IXMLDOMSchemaCollection2*, Int16, HRESULT)
    get_validate_on_load : Proc(IXMLDOMSchemaCollection2*, Int16*, HRESULT)
    get_schema : Proc(IXMLDOMSchemaCollection2*, UInt8*, ISchema*, HRESULT)
    get_declaration : Proc(IXMLDOMSchemaCollection2*, IXMLDOMNode, ISchemaItem*, HRESULT)
  end

  IXMLDOMSchemaCollection2_GUID = LibC::GUID.new("50ea08b0-dd1b-4664-9a50-c2f40f4bd79a")
  CLSID_IXMLDOMSchemaCollection2 = "50ea08b0-dd1b-4664-9a50-c2f40f4bd79a"
  struct IXMLDOMSchemaCollection2
    lpVtbl : IXMLDOMSchemaCollection2VTbl*
  end

  struct ISchemaStringCollectionVTbl
    query_interface : Proc(ISchemaStringCollection*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISchemaStringCollection*, UInt32)
    release : Proc(ISchemaStringCollection*, UInt32)
    get_type_info_count : Proc(ISchemaStringCollection*, UInt32*, HRESULT)
    get_type_info : Proc(ISchemaStringCollection*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISchemaStringCollection*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISchemaStringCollection*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_item : Proc(ISchemaStringCollection*, Int32, UInt8**, HRESULT)
    get_length : Proc(ISchemaStringCollection*, Int32*, HRESULT)
    get__new_enum : Proc(ISchemaStringCollection*, IUnknown*, HRESULT)
  end

  ISchemaStringCollection_GUID = LibC::GUID.new("50ea08b1-dd1b-4664-9a50-c2f40f4bd79a")
  CLSID_ISchemaStringCollection = "50ea08b1-dd1b-4664-9a50-c2f40f4bd79a"
  struct ISchemaStringCollection
    lpVtbl : ISchemaStringCollectionVTbl*
  end

  struct ISchemaItemCollectionVTbl
    query_interface : Proc(ISchemaItemCollection*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISchemaItemCollection*, UInt32)
    release : Proc(ISchemaItemCollection*, UInt32)
    get_type_info_count : Proc(ISchemaItemCollection*, UInt32*, HRESULT)
    get_type_info : Proc(ISchemaItemCollection*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISchemaItemCollection*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISchemaItemCollection*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_item : Proc(ISchemaItemCollection*, Int32, ISchemaItem*, HRESULT)
    item_by_name : Proc(ISchemaItemCollection*, UInt8*, ISchemaItem*, HRESULT)
    item_by_q_name : Proc(ISchemaItemCollection*, UInt8*, UInt8*, ISchemaItem*, HRESULT)
    get_length : Proc(ISchemaItemCollection*, Int32*, HRESULT)
    get__new_enum : Proc(ISchemaItemCollection*, IUnknown*, HRESULT)
  end

  ISchemaItemCollection_GUID = LibC::GUID.new("50ea08b2-dd1b-4664-9a50-c2f40f4bd79a")
  CLSID_ISchemaItemCollection = "50ea08b2-dd1b-4664-9a50-c2f40f4bd79a"
  struct ISchemaItemCollection
    lpVtbl : ISchemaItemCollectionVTbl*
  end

  struct ISchemaItemVTbl
    query_interface : Proc(ISchemaItem*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISchemaItem*, UInt32)
    release : Proc(ISchemaItem*, UInt32)
    get_type_info_count : Proc(ISchemaItem*, UInt32*, HRESULT)
    get_type_info : Proc(ISchemaItem*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISchemaItem*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISchemaItem*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_name : Proc(ISchemaItem*, UInt8**, HRESULT)
    get_namespace_uri : Proc(ISchemaItem*, UInt8**, HRESULT)
    get_schema : Proc(ISchemaItem*, ISchema*, HRESULT)
    get_id : Proc(ISchemaItem*, UInt8**, HRESULT)
    get_item_type : Proc(ISchemaItem*, SOMITEMTYPE*, HRESULT)
    get_unhandled_attributes : Proc(ISchemaItem*, IVBSAXAttributes*, HRESULT)
    write_annotation : Proc(ISchemaItem*, IUnknown, Int16*, HRESULT)
  end

  ISchemaItem_GUID = LibC::GUID.new("50ea08b3-dd1b-4664-9a50-c2f40f4bd79a")
  CLSID_ISchemaItem = "50ea08b3-dd1b-4664-9a50-c2f40f4bd79a"
  struct ISchemaItem
    lpVtbl : ISchemaItemVTbl*
  end

  struct ISchemaVTbl
    query_interface : Proc(ISchema*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISchema*, UInt32)
    release : Proc(ISchema*, UInt32)
    get_type_info_count : Proc(ISchema*, UInt32*, HRESULT)
    get_type_info : Proc(ISchema*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISchema*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISchema*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_name : Proc(ISchema*, UInt8**, HRESULT)
    get_namespace_uri : Proc(ISchema*, UInt8**, HRESULT)
    get_schema : Proc(ISchema*, ISchema*, HRESULT)
    get_id : Proc(ISchema*, UInt8**, HRESULT)
    get_item_type : Proc(ISchema*, SOMITEMTYPE*, HRESULT)
    get_unhandled_attributes : Proc(ISchema*, IVBSAXAttributes*, HRESULT)
    write_annotation : Proc(ISchema*, IUnknown, Int16*, HRESULT)
    get_target_namespace : Proc(ISchema*, UInt8**, HRESULT)
    get_version : Proc(ISchema*, UInt8**, HRESULT)
    get_types : Proc(ISchema*, ISchemaItemCollection*, HRESULT)
    get_elements : Proc(ISchema*, ISchemaItemCollection*, HRESULT)
    get_attributes : Proc(ISchema*, ISchemaItemCollection*, HRESULT)
    get_attribute_groups : Proc(ISchema*, ISchemaItemCollection*, HRESULT)
    get_model_groups : Proc(ISchema*, ISchemaItemCollection*, HRESULT)
    get_notations : Proc(ISchema*, ISchemaItemCollection*, HRESULT)
    get_schema_locations : Proc(ISchema*, ISchemaStringCollection*, HRESULT)
  end

  ISchema_GUID = LibC::GUID.new("50ea08b4-dd1b-4664-9a50-c2f40f4bd79a")
  CLSID_ISchema = "50ea08b4-dd1b-4664-9a50-c2f40f4bd79a"
  struct ISchema
    lpVtbl : ISchemaVTbl*
  end

  struct ISchemaParticleVTbl
    query_interface : Proc(ISchemaParticle*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISchemaParticle*, UInt32)
    release : Proc(ISchemaParticle*, UInt32)
    get_type_info_count : Proc(ISchemaParticle*, UInt32*, HRESULT)
    get_type_info : Proc(ISchemaParticle*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISchemaParticle*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISchemaParticle*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_name : Proc(ISchemaParticle*, UInt8**, HRESULT)
    get_namespace_uri : Proc(ISchemaParticle*, UInt8**, HRESULT)
    get_schema : Proc(ISchemaParticle*, ISchema*, HRESULT)
    get_id : Proc(ISchemaParticle*, UInt8**, HRESULT)
    get_item_type : Proc(ISchemaParticle*, SOMITEMTYPE*, HRESULT)
    get_unhandled_attributes : Proc(ISchemaParticle*, IVBSAXAttributes*, HRESULT)
    write_annotation : Proc(ISchemaParticle*, IUnknown, Int16*, HRESULT)
    get_min_occurs : Proc(ISchemaParticle*, VARIANT*, HRESULT)
    get_max_occurs : Proc(ISchemaParticle*, VARIANT*, HRESULT)
  end

  ISchemaParticle_GUID = LibC::GUID.new("50ea08b5-dd1b-4664-9a50-c2f40f4bd79a")
  CLSID_ISchemaParticle = "50ea08b5-dd1b-4664-9a50-c2f40f4bd79a"
  struct ISchemaParticle
    lpVtbl : ISchemaParticleVTbl*
  end

  struct ISchemaAttributeVTbl
    query_interface : Proc(ISchemaAttribute*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISchemaAttribute*, UInt32)
    release : Proc(ISchemaAttribute*, UInt32)
    get_type_info_count : Proc(ISchemaAttribute*, UInt32*, HRESULT)
    get_type_info : Proc(ISchemaAttribute*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISchemaAttribute*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISchemaAttribute*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_name : Proc(ISchemaAttribute*, UInt8**, HRESULT)
    get_namespace_uri : Proc(ISchemaAttribute*, UInt8**, HRESULT)
    get_schema : Proc(ISchemaAttribute*, ISchema*, HRESULT)
    get_id : Proc(ISchemaAttribute*, UInt8**, HRESULT)
    get_item_type : Proc(ISchemaAttribute*, SOMITEMTYPE*, HRESULT)
    get_unhandled_attributes : Proc(ISchemaAttribute*, IVBSAXAttributes*, HRESULT)
    write_annotation : Proc(ISchemaAttribute*, IUnknown, Int16*, HRESULT)
    get_type : Proc(ISchemaAttribute*, ISchemaType*, HRESULT)
    get_scope : Proc(ISchemaAttribute*, ISchemaComplexType*, HRESULT)
    get_default_value : Proc(ISchemaAttribute*, UInt8**, HRESULT)
    get_fixed_value : Proc(ISchemaAttribute*, UInt8**, HRESULT)
    get_use : Proc(ISchemaAttribute*, SCHEMAUSE*, HRESULT)
    get_is_reference : Proc(ISchemaAttribute*, Int16*, HRESULT)
  end

  ISchemaAttribute_GUID = LibC::GUID.new("50ea08b6-dd1b-4664-9a50-c2f40f4bd79a")
  CLSID_ISchemaAttribute = "50ea08b6-dd1b-4664-9a50-c2f40f4bd79a"
  struct ISchemaAttribute
    lpVtbl : ISchemaAttributeVTbl*
  end

  struct ISchemaElementVTbl
    query_interface : Proc(ISchemaElement*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISchemaElement*, UInt32)
    release : Proc(ISchemaElement*, UInt32)
    get_type_info_count : Proc(ISchemaElement*, UInt32*, HRESULT)
    get_type_info : Proc(ISchemaElement*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISchemaElement*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISchemaElement*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_name : Proc(ISchemaElement*, UInt8**, HRESULT)
    get_namespace_uri : Proc(ISchemaElement*, UInt8**, HRESULT)
    get_schema : Proc(ISchemaElement*, ISchema*, HRESULT)
    get_id : Proc(ISchemaElement*, UInt8**, HRESULT)
    get_item_type : Proc(ISchemaElement*, SOMITEMTYPE*, HRESULT)
    get_unhandled_attributes : Proc(ISchemaElement*, IVBSAXAttributes*, HRESULT)
    write_annotation : Proc(ISchemaElement*, IUnknown, Int16*, HRESULT)
    get_min_occurs : Proc(ISchemaElement*, VARIANT*, HRESULT)
    get_max_occurs : Proc(ISchemaElement*, VARIANT*, HRESULT)
    get_type : Proc(ISchemaElement*, ISchemaType*, HRESULT)
    get_scope : Proc(ISchemaElement*, ISchemaComplexType*, HRESULT)
    get_default_value : Proc(ISchemaElement*, UInt8**, HRESULT)
    get_fixed_value : Proc(ISchemaElement*, UInt8**, HRESULT)
    get_is_nillable : Proc(ISchemaElement*, Int16*, HRESULT)
    get_identity_constraints : Proc(ISchemaElement*, ISchemaItemCollection*, HRESULT)
    get_substitution_group : Proc(ISchemaElement*, ISchemaElement*, HRESULT)
    get_substitution_group_exclusions : Proc(ISchemaElement*, SCHEMADERIVATIONMETHOD*, HRESULT)
    get_disallowed_substitutions : Proc(ISchemaElement*, SCHEMADERIVATIONMETHOD*, HRESULT)
    get_is_abstract : Proc(ISchemaElement*, Int16*, HRESULT)
    get_is_reference : Proc(ISchemaElement*, Int16*, HRESULT)
  end

  ISchemaElement_GUID = LibC::GUID.new("50ea08b7-dd1b-4664-9a50-c2f40f4bd79a")
  CLSID_ISchemaElement = "50ea08b7-dd1b-4664-9a50-c2f40f4bd79a"
  struct ISchemaElement
    lpVtbl : ISchemaElementVTbl*
  end

  struct ISchemaTypeVTbl
    query_interface : Proc(ISchemaType*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISchemaType*, UInt32)
    release : Proc(ISchemaType*, UInt32)
    get_type_info_count : Proc(ISchemaType*, UInt32*, HRESULT)
    get_type_info : Proc(ISchemaType*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISchemaType*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISchemaType*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_name : Proc(ISchemaType*, UInt8**, HRESULT)
    get_namespace_uri : Proc(ISchemaType*, UInt8**, HRESULT)
    get_schema : Proc(ISchemaType*, ISchema*, HRESULT)
    get_id : Proc(ISchemaType*, UInt8**, HRESULT)
    get_item_type : Proc(ISchemaType*, SOMITEMTYPE*, HRESULT)
    get_unhandled_attributes : Proc(ISchemaType*, IVBSAXAttributes*, HRESULT)
    write_annotation : Proc(ISchemaType*, IUnknown, Int16*, HRESULT)
    get_base_types : Proc(ISchemaType*, ISchemaItemCollection*, HRESULT)
    get_final : Proc(ISchemaType*, SCHEMADERIVATIONMETHOD*, HRESULT)
    get_variety : Proc(ISchemaType*, SCHEMATYPEVARIETY*, HRESULT)
    get_derived_by : Proc(ISchemaType*, SCHEMADERIVATIONMETHOD*, HRESULT)
    is_valid : Proc(ISchemaType*, UInt8*, Int16*, HRESULT)
    get_min_exclusive : Proc(ISchemaType*, UInt8**, HRESULT)
    get_min_inclusive : Proc(ISchemaType*, UInt8**, HRESULT)
    get_max_exclusive : Proc(ISchemaType*, UInt8**, HRESULT)
    get_max_inclusive : Proc(ISchemaType*, UInt8**, HRESULT)
    get_total_digits : Proc(ISchemaType*, VARIANT*, HRESULT)
    get_fraction_digits : Proc(ISchemaType*, VARIANT*, HRESULT)
    get_length : Proc(ISchemaType*, VARIANT*, HRESULT)
    get_min_length : Proc(ISchemaType*, VARIANT*, HRESULT)
    get_max_length : Proc(ISchemaType*, VARIANT*, HRESULT)
    get_enumeration : Proc(ISchemaType*, ISchemaStringCollection*, HRESULT)
    get_whitespace : Proc(ISchemaType*, SCHEMAWHITESPACE*, HRESULT)
    get_patterns : Proc(ISchemaType*, ISchemaStringCollection*, HRESULT)
  end

  ISchemaType_GUID = LibC::GUID.new("50ea08b8-dd1b-4664-9a50-c2f40f4bd79a")
  CLSID_ISchemaType = "50ea08b8-dd1b-4664-9a50-c2f40f4bd79a"
  struct ISchemaType
    lpVtbl : ISchemaTypeVTbl*
  end

  struct ISchemaComplexTypeVTbl
    query_interface : Proc(ISchemaComplexType*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISchemaComplexType*, UInt32)
    release : Proc(ISchemaComplexType*, UInt32)
    get_type_info_count : Proc(ISchemaComplexType*, UInt32*, HRESULT)
    get_type_info : Proc(ISchemaComplexType*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISchemaComplexType*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISchemaComplexType*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_name : Proc(ISchemaComplexType*, UInt8**, HRESULT)
    get_namespace_uri : Proc(ISchemaComplexType*, UInt8**, HRESULT)
    get_schema : Proc(ISchemaComplexType*, ISchema*, HRESULT)
    get_id : Proc(ISchemaComplexType*, UInt8**, HRESULT)
    get_item_type : Proc(ISchemaComplexType*, SOMITEMTYPE*, HRESULT)
    get_unhandled_attributes : Proc(ISchemaComplexType*, IVBSAXAttributes*, HRESULT)
    write_annotation : Proc(ISchemaComplexType*, IUnknown, Int16*, HRESULT)
    get_base_types : Proc(ISchemaComplexType*, ISchemaItemCollection*, HRESULT)
    get_final : Proc(ISchemaComplexType*, SCHEMADERIVATIONMETHOD*, HRESULT)
    get_variety : Proc(ISchemaComplexType*, SCHEMATYPEVARIETY*, HRESULT)
    get_derived_by : Proc(ISchemaComplexType*, SCHEMADERIVATIONMETHOD*, HRESULT)
    is_valid : Proc(ISchemaComplexType*, UInt8*, Int16*, HRESULT)
    get_min_exclusive : Proc(ISchemaComplexType*, UInt8**, HRESULT)
    get_min_inclusive : Proc(ISchemaComplexType*, UInt8**, HRESULT)
    get_max_exclusive : Proc(ISchemaComplexType*, UInt8**, HRESULT)
    get_max_inclusive : Proc(ISchemaComplexType*, UInt8**, HRESULT)
    get_total_digits : Proc(ISchemaComplexType*, VARIANT*, HRESULT)
    get_fraction_digits : Proc(ISchemaComplexType*, VARIANT*, HRESULT)
    get_length : Proc(ISchemaComplexType*, VARIANT*, HRESULT)
    get_min_length : Proc(ISchemaComplexType*, VARIANT*, HRESULT)
    get_max_length : Proc(ISchemaComplexType*, VARIANT*, HRESULT)
    get_enumeration : Proc(ISchemaComplexType*, ISchemaStringCollection*, HRESULT)
    get_whitespace : Proc(ISchemaComplexType*, SCHEMAWHITESPACE*, HRESULT)
    get_patterns : Proc(ISchemaComplexType*, ISchemaStringCollection*, HRESULT)
    get_is_abstract : Proc(ISchemaComplexType*, Int16*, HRESULT)
    get_any_attribute : Proc(ISchemaComplexType*, ISchemaAny*, HRESULT)
    get_attributes : Proc(ISchemaComplexType*, ISchemaItemCollection*, HRESULT)
    get_content_type : Proc(ISchemaComplexType*, SCHEMACONTENTTYPE*, HRESULT)
    get_content_model : Proc(ISchemaComplexType*, ISchemaModelGroup*, HRESULT)
    get_prohibited_substitutions : Proc(ISchemaComplexType*, SCHEMADERIVATIONMETHOD*, HRESULT)
  end

  ISchemaComplexType_GUID = LibC::GUID.new("50ea08b9-dd1b-4664-9a50-c2f40f4bd79a")
  CLSID_ISchemaComplexType = "50ea08b9-dd1b-4664-9a50-c2f40f4bd79a"
  struct ISchemaComplexType
    lpVtbl : ISchemaComplexTypeVTbl*
  end

  struct ISchemaAttributeGroupVTbl
    query_interface : Proc(ISchemaAttributeGroup*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISchemaAttributeGroup*, UInt32)
    release : Proc(ISchemaAttributeGroup*, UInt32)
    get_type_info_count : Proc(ISchemaAttributeGroup*, UInt32*, HRESULT)
    get_type_info : Proc(ISchemaAttributeGroup*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISchemaAttributeGroup*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISchemaAttributeGroup*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_name : Proc(ISchemaAttributeGroup*, UInt8**, HRESULT)
    get_namespace_uri : Proc(ISchemaAttributeGroup*, UInt8**, HRESULT)
    get_schema : Proc(ISchemaAttributeGroup*, ISchema*, HRESULT)
    get_id : Proc(ISchemaAttributeGroup*, UInt8**, HRESULT)
    get_item_type : Proc(ISchemaAttributeGroup*, SOMITEMTYPE*, HRESULT)
    get_unhandled_attributes : Proc(ISchemaAttributeGroup*, IVBSAXAttributes*, HRESULT)
    write_annotation : Proc(ISchemaAttributeGroup*, IUnknown, Int16*, HRESULT)
    get_any_attribute : Proc(ISchemaAttributeGroup*, ISchemaAny*, HRESULT)
    get_attributes : Proc(ISchemaAttributeGroup*, ISchemaItemCollection*, HRESULT)
  end

  ISchemaAttributeGroup_GUID = LibC::GUID.new("50ea08ba-dd1b-4664-9a50-c2f40f4bd79a")
  CLSID_ISchemaAttributeGroup = "50ea08ba-dd1b-4664-9a50-c2f40f4bd79a"
  struct ISchemaAttributeGroup
    lpVtbl : ISchemaAttributeGroupVTbl*
  end

  struct ISchemaModelGroupVTbl
    query_interface : Proc(ISchemaModelGroup*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISchemaModelGroup*, UInt32)
    release : Proc(ISchemaModelGroup*, UInt32)
    get_type_info_count : Proc(ISchemaModelGroup*, UInt32*, HRESULT)
    get_type_info : Proc(ISchemaModelGroup*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISchemaModelGroup*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISchemaModelGroup*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_name : Proc(ISchemaModelGroup*, UInt8**, HRESULT)
    get_namespace_uri : Proc(ISchemaModelGroup*, UInt8**, HRESULT)
    get_schema : Proc(ISchemaModelGroup*, ISchema*, HRESULT)
    get_id : Proc(ISchemaModelGroup*, UInt8**, HRESULT)
    get_item_type : Proc(ISchemaModelGroup*, SOMITEMTYPE*, HRESULT)
    get_unhandled_attributes : Proc(ISchemaModelGroup*, IVBSAXAttributes*, HRESULT)
    write_annotation : Proc(ISchemaModelGroup*, IUnknown, Int16*, HRESULT)
    get_min_occurs : Proc(ISchemaModelGroup*, VARIANT*, HRESULT)
    get_max_occurs : Proc(ISchemaModelGroup*, VARIANT*, HRESULT)
    get_particles : Proc(ISchemaModelGroup*, ISchemaItemCollection*, HRESULT)
  end

  ISchemaModelGroup_GUID = LibC::GUID.new("50ea08bb-dd1b-4664-9a50-c2f40f4bd79a")
  CLSID_ISchemaModelGroup = "50ea08bb-dd1b-4664-9a50-c2f40f4bd79a"
  struct ISchemaModelGroup
    lpVtbl : ISchemaModelGroupVTbl*
  end

  struct ISchemaAnyVTbl
    query_interface : Proc(ISchemaAny*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISchemaAny*, UInt32)
    release : Proc(ISchemaAny*, UInt32)
    get_type_info_count : Proc(ISchemaAny*, UInt32*, HRESULT)
    get_type_info : Proc(ISchemaAny*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISchemaAny*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISchemaAny*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_name : Proc(ISchemaAny*, UInt8**, HRESULT)
    get_namespace_uri : Proc(ISchemaAny*, UInt8**, HRESULT)
    get_schema : Proc(ISchemaAny*, ISchema*, HRESULT)
    get_id : Proc(ISchemaAny*, UInt8**, HRESULT)
    get_item_type : Proc(ISchemaAny*, SOMITEMTYPE*, HRESULT)
    get_unhandled_attributes : Proc(ISchemaAny*, IVBSAXAttributes*, HRESULT)
    write_annotation : Proc(ISchemaAny*, IUnknown, Int16*, HRESULT)
    get_min_occurs : Proc(ISchemaAny*, VARIANT*, HRESULT)
    get_max_occurs : Proc(ISchemaAny*, VARIANT*, HRESULT)
    get_namespaces : Proc(ISchemaAny*, ISchemaStringCollection*, HRESULT)
    get_process_contents : Proc(ISchemaAny*, SCHEMAPROCESSCONTENTS*, HRESULT)
  end

  ISchemaAny_GUID = LibC::GUID.new("50ea08bc-dd1b-4664-9a50-c2f40f4bd79a")
  CLSID_ISchemaAny = "50ea08bc-dd1b-4664-9a50-c2f40f4bd79a"
  struct ISchemaAny
    lpVtbl : ISchemaAnyVTbl*
  end

  struct ISchemaIdentityConstraintVTbl
    query_interface : Proc(ISchemaIdentityConstraint*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISchemaIdentityConstraint*, UInt32)
    release : Proc(ISchemaIdentityConstraint*, UInt32)
    get_type_info_count : Proc(ISchemaIdentityConstraint*, UInt32*, HRESULT)
    get_type_info : Proc(ISchemaIdentityConstraint*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISchemaIdentityConstraint*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISchemaIdentityConstraint*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_name : Proc(ISchemaIdentityConstraint*, UInt8**, HRESULT)
    get_namespace_uri : Proc(ISchemaIdentityConstraint*, UInt8**, HRESULT)
    get_schema : Proc(ISchemaIdentityConstraint*, ISchema*, HRESULT)
    get_id : Proc(ISchemaIdentityConstraint*, UInt8**, HRESULT)
    get_item_type : Proc(ISchemaIdentityConstraint*, SOMITEMTYPE*, HRESULT)
    get_unhandled_attributes : Proc(ISchemaIdentityConstraint*, IVBSAXAttributes*, HRESULT)
    write_annotation : Proc(ISchemaIdentityConstraint*, IUnknown, Int16*, HRESULT)
    get_selector : Proc(ISchemaIdentityConstraint*, UInt8**, HRESULT)
    get_fields : Proc(ISchemaIdentityConstraint*, ISchemaStringCollection*, HRESULT)
    get_referenced_key : Proc(ISchemaIdentityConstraint*, ISchemaIdentityConstraint*, HRESULT)
  end

  ISchemaIdentityConstraint_GUID = LibC::GUID.new("50ea08bd-dd1b-4664-9a50-c2f40f4bd79a")
  CLSID_ISchemaIdentityConstraint = "50ea08bd-dd1b-4664-9a50-c2f40f4bd79a"
  struct ISchemaIdentityConstraint
    lpVtbl : ISchemaIdentityConstraintVTbl*
  end

  struct ISchemaNotationVTbl
    query_interface : Proc(ISchemaNotation*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISchemaNotation*, UInt32)
    release : Proc(ISchemaNotation*, UInt32)
    get_type_info_count : Proc(ISchemaNotation*, UInt32*, HRESULT)
    get_type_info : Proc(ISchemaNotation*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISchemaNotation*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISchemaNotation*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_name : Proc(ISchemaNotation*, UInt8**, HRESULT)
    get_namespace_uri : Proc(ISchemaNotation*, UInt8**, HRESULT)
    get_schema : Proc(ISchemaNotation*, ISchema*, HRESULT)
    get_id : Proc(ISchemaNotation*, UInt8**, HRESULT)
    get_item_type : Proc(ISchemaNotation*, SOMITEMTYPE*, HRESULT)
    get_unhandled_attributes : Proc(ISchemaNotation*, IVBSAXAttributes*, HRESULT)
    write_annotation : Proc(ISchemaNotation*, IUnknown, Int16*, HRESULT)
    get_system_identifier : Proc(ISchemaNotation*, UInt8**, HRESULT)
    get_public_identifier : Proc(ISchemaNotation*, UInt8**, HRESULT)
  end

  ISchemaNotation_GUID = LibC::GUID.new("50ea08be-dd1b-4664-9a50-c2f40f4bd79a")
  CLSID_ISchemaNotation = "50ea08be-dd1b-4664-9a50-c2f40f4bd79a"
  struct ISchemaNotation
    lpVtbl : ISchemaNotationVTbl*
  end

  struct IXMLHTTPRequest2CallbackVTbl
    query_interface : Proc(IXMLHTTPRequest2Callback*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLHTTPRequest2Callback*, UInt32)
    release : Proc(IXMLHTTPRequest2Callback*, UInt32)
    on_redirect : Proc(IXMLHTTPRequest2Callback*, IXMLHTTPRequest2, LibC::LPWSTR, HRESULT)
    on_headers_available : Proc(IXMLHTTPRequest2Callback*, IXMLHTTPRequest2, UInt32, LibC::LPWSTR, HRESULT)
    on_data_available : Proc(IXMLHTTPRequest2Callback*, IXMLHTTPRequest2, ISequentialStream, HRESULT)
    on_response_received : Proc(IXMLHTTPRequest2Callback*, IXMLHTTPRequest2, ISequentialStream, HRESULT)
    on_error : Proc(IXMLHTTPRequest2Callback*, IXMLHTTPRequest2, HRESULT, HRESULT)
  end

  IXMLHTTPRequest2Callback_GUID = LibC::GUID.new("a44a9299-e321-40de-8866-341b41669162")
  CLSID_IXMLHTTPRequest2Callback = "a44a9299-e321-40de-8866-341b41669162"
  struct IXMLHTTPRequest2Callback
    lpVtbl : IXMLHTTPRequest2CallbackVTbl*
  end

  struct IXMLHTTPRequest2VTbl
    query_interface : Proc(IXMLHTTPRequest2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLHTTPRequest2*, UInt32)
    release : Proc(IXMLHTTPRequest2*, UInt32)
    open : Proc(IXMLHTTPRequest2*, LibC::LPWSTR, LibC::LPWSTR, IXMLHTTPRequest2Callback, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    send : Proc(IXMLHTTPRequest2*, ISequentialStream, UInt64, HRESULT)
    abort : Proc(IXMLHTTPRequest2*, HRESULT)
    set_cookie : Proc(IXMLHTTPRequest2*, XHR_COOKIE*, UInt32*, HRESULT)
    set_custom_response_stream : Proc(IXMLHTTPRequest2*, ISequentialStream, HRESULT)
    set_property : Proc(IXMLHTTPRequest2*, XHR_PROPERTY, UInt64, HRESULT)
    set_request_header : Proc(IXMLHTTPRequest2*, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    get_all_response_headers : Proc(IXMLHTTPRequest2*, UInt16**, HRESULT)
    get_cookie : Proc(IXMLHTTPRequest2*, LibC::LPWSTR, LibC::LPWSTR, UInt32, UInt32*, XHR_COOKIE**, HRESULT)
    get_response_header : Proc(IXMLHTTPRequest2*, LibC::LPWSTR, UInt16**, HRESULT)
  end

  IXMLHTTPRequest2_GUID = LibC::GUID.new("e5d37dc0-552a-4d52-9cc0-a14d546fbd04")
  CLSID_IXMLHTTPRequest2 = "e5d37dc0-552a-4d52-9cc0-a14d546fbd04"
  struct IXMLHTTPRequest2
    lpVtbl : IXMLHTTPRequest2VTbl*
  end

  struct IXMLHTTPRequest3CallbackVTbl
    query_interface : Proc(IXMLHTTPRequest3Callback*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLHTTPRequest3Callback*, UInt32)
    release : Proc(IXMLHTTPRequest3Callback*, UInt32)
    on_redirect : Proc(IXMLHTTPRequest3Callback*, IXMLHTTPRequest2, LibC::LPWSTR, HRESULT)
    on_headers_available : Proc(IXMLHTTPRequest3Callback*, IXMLHTTPRequest2, UInt32, LibC::LPWSTR, HRESULT)
    on_data_available : Proc(IXMLHTTPRequest3Callback*, IXMLHTTPRequest2, ISequentialStream, HRESULT)
    on_response_received : Proc(IXMLHTTPRequest3Callback*, IXMLHTTPRequest2, ISequentialStream, HRESULT)
    on_error : Proc(IXMLHTTPRequest3Callback*, IXMLHTTPRequest2, HRESULT, HRESULT)
    on_server_certificate_received : Proc(IXMLHTTPRequest3Callback*, IXMLHTTPRequest3, UInt32, UInt32, XHR_CERT*, HRESULT)
    on_client_certificate_requested : Proc(IXMLHTTPRequest3Callback*, IXMLHTTPRequest3, UInt32, UInt16**, HRESULT)
  end

  IXMLHTTPRequest3Callback_GUID = LibC::GUID.new("b9e57830-8c6c-4a6f-9c13-47772bb047bb")
  CLSID_IXMLHTTPRequest3Callback = "b9e57830-8c6c-4a6f-9c13-47772bb047bb"
  struct IXMLHTTPRequest3Callback
    lpVtbl : IXMLHTTPRequest3CallbackVTbl*
  end

  struct IXMLHTTPRequest3VTbl
    query_interface : Proc(IXMLHTTPRequest3*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXMLHTTPRequest3*, UInt32)
    release : Proc(IXMLHTTPRequest3*, UInt32)
    open : Proc(IXMLHTTPRequest3*, LibC::LPWSTR, LibC::LPWSTR, IXMLHTTPRequest2Callback, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    send : Proc(IXMLHTTPRequest3*, ISequentialStream, UInt64, HRESULT)
    abort : Proc(IXMLHTTPRequest3*, HRESULT)
    set_cookie : Proc(IXMLHTTPRequest3*, XHR_COOKIE*, UInt32*, HRESULT)
    set_custom_response_stream : Proc(IXMLHTTPRequest3*, ISequentialStream, HRESULT)
    set_property : Proc(IXMLHTTPRequest3*, XHR_PROPERTY, UInt64, HRESULT)
    set_request_header : Proc(IXMLHTTPRequest3*, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    get_all_response_headers : Proc(IXMLHTTPRequest3*, UInt16**, HRESULT)
    get_cookie : Proc(IXMLHTTPRequest3*, LibC::LPWSTR, LibC::LPWSTR, UInt32, UInt32*, XHR_COOKIE**, HRESULT)
    get_response_header : Proc(IXMLHTTPRequest3*, LibC::LPWSTR, UInt16**, HRESULT)
    set_client_certificate : Proc(IXMLHTTPRequest3*, UInt32, UInt8*, LibC::LPWSTR, HRESULT)
  end

  IXMLHTTPRequest3_GUID = LibC::GUID.new("a1c9feee-0617-4f23-9d58-8961ea43567c")
  CLSID_IXMLHTTPRequest3 = "a1c9feee-0617-4f23-9d58-8961ea43567c"
  struct IXMLHTTPRequest3
    lpVtbl : IXMLHTTPRequest3VTbl*
  end

end
