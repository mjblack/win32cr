require "../foundation.cr"
require "../system/com.cr"
require "../system/windowsprogramming.cr"
require "../system/registry.cr"
require "../security/cryptography.cr"

{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link("delayimp")]
{% end %}
@[Link("user32")]
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/IGNORE:4199")]
{% end %}
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/DELAYLOAD:msi.dll")]
@[Link(ldflags: "/DELAYLOAD:sfc.dll")]
@[Link(ldflags: "/DELAYLOAD:mspatchc.dll")]
@[Link(ldflags: "/DELAYLOAD:mspatcha.dll")]
@[Link(ldflags: "/DELAYLOAD:msdelta.dll")]
{% else %}
@[Link("msi")]
@[Link("sfc")]
@[Link("mspatchc")]
@[Link("mspatcha")]
@[Link("msdelta")]
{% end %}
lib LibWin32
  alias MSIHANDLE = UInt32

  UIALL = 32768_u32
  LOGTOKEN_TYPE_MASK = 3_u32
  LOGTOKEN_UNSPECIFIED = 0_u32
  LOGTOKEN_NO_LOG = 1_u32
  LOGTOKEN_SETUPAPI_APPLOG = 2_u32
  LOGTOKEN_SETUPAPI_DEVLOG = 3_u32
  TXTLOG_SETUPAPI_DEVLOG = 1_u32
  TXTLOG_SETUPAPI_CMDLINE = 2_u32
  TXTLOG_SETUPAPI_BITS = 3_u32
  TXTLOG_ERROR = 1_u32
  TXTLOG_WARNING = 2_u32
  TXTLOG_SYSTEM_STATE_CHANGE = 3_u32
  TXTLOG_SUMMARY = 4_u32
  TXTLOG_DETAILS = 5_u32
  TXTLOG_VERBOSE = 6_u32
  TXTLOG_VERY_VERBOSE = 7_u32
  TXTLOG_RESERVED_FLAGS = 65520_u32
  TXTLOG_TIMESTAMP = 65536_u32
  TXTLOG_DEPTH_INCR = 131072_u32
  TXTLOG_DEPTH_DECR = 262144_u32
  TXTLOG_TAB_1 = 524288_u32
  TXTLOG_FLUSH_FILE = 1048576_u32
  TXTLOG_DEVINST = 1_u32
  TXTLOG_INF = 2_u32
  TXTLOG_FILEQ = 4_u32
  TXTLOG_COPYFILES = 8_u32
  TXTLOG_SIGVERIF = 32_u32
  TXTLOG_BACKUP = 128_u32
  TXTLOG_UI = 256_u32
  TXTLOG_UTIL = 512_u32
  TXTLOG_INFDB = 1024_u32
  TXTLOG_DRVSETUP = 4194304_u32
  TXTLOG_POLICY = 8388608_u32
  TXTLOG_NEWDEV = 16777216_u32
  TXTLOG_UMPNPMGR = 33554432_u32
  TXTLOG_DRIVER_STORE = 67108864_u32
  TXTLOG_SETUP = 134217728_u32
  TXTLOG_CMI = 268435456_u32
  TXTLOG_DEVMGR = 536870912_u32
  TXTLOG_INSTALLER = 1073741824_u32
  TXTLOG_VENDOR = 2147483648_u32
  CLSID_EvalCom2 = "6e5e1910-8053-4660-b795-6b612e29bc58"
  WIN32_MSM = 100_u32
  LIBID_MsmMergeTypeLib = "0adda82f-2c26-11d2-ad65-00a0c9af11a6"
  CLSID_MsmMerge2 = "f94985d5-29f9-4743-9805-99bc3f35b678"
  WIN32_MSI = 500_u32
  MAX_GUID_CHARS = 38_u32
  MAX_FEATURE_CHARS = 38_u32
  MSI_INVALID_HASH_IS_FATAL = 1_u32
  ERROR_ROLLBACK_DISABLED = 1653_u32
  MSI_NULL_INTEGER = 2147483648_u32
  INSTALLMESSAGE_TYPEMASK = -16777216_i32
  STREAM_FORMAT_COMPLIB_MODULE = 0_u32
  STREAM_FORMAT_COMPLIB_MANIFEST = 1_u32
  STREAM_FORMAT_WIN32_MODULE = 2_u32
  STREAM_FORMAT_WIN32_MANIFEST = 4_u32
  IASSEMBLYCACHEITEM_COMMIT_FLAG_REFRESH = 1_u32
  ASSEMBLYINFO_FLAG_INSTALLED = 1_u32
  ASSEMBLYINFO_FLAG_PAYLOADRESIDENT = 2_u32
  IASSEMBLYCACHEITEM_COMMIT_DISPOSITION_INSTALLED = 1_u32
  IASSEMBLYCACHEITEM_COMMIT_DISPOSITION_REFRESHED = 2_u32
  IASSEMBLYCACHEITEM_COMMIT_DISPOSITION_ALREADY_INSTALLED = 3_u32
  FUSION_REFCOUNT_UNINSTALL_SUBKEY_GUID = "8cedc215-ac4b-488b-93c0-a50a49cb2fb8"
  FUSION_REFCOUNT_FILEPATH_GUID = "b02f9d65-fb77-4f7a-afa5-b391309f11c9"
  FUSION_REFCOUNT_OPAQUE_STRING_GUID = "2ec93463-b0c3-45e1-8364-327e96aea856"
  SFC_DISABLE_NORMAL = 0_u32
  SFC_DISABLE_ASK = 1_u32
  SFC_DISABLE_ONCE = 2_u32
  SFC_DISABLE_SETUP = 3_u32
  SFC_DISABLE_NOPOPUPS = 4_u32
  SFC_SCAN_NORMAL = 0_u32
  SFC_SCAN_ALWAYS = 1_u32
  SFC_SCAN_ONCE = 2_u32
  SFC_SCAN_IMMEDIATE = 3_u32
  SFC_QUOTA_DEFAULT = 50_u32
  PID_TITLE = 2_u32
  PID_SUBJECT = 3_u32
  PID_AUTHOR = 4_u32
  PID_KEYWORDS = 5_u32
  PID_COMMENTS = 6_u32
  PID_TEMPLATE = 7_u32
  PID_LASTAUTHOR = 8_u32
  PID_REVNUMBER = 9_u32
  PID_EDITTIME = 10_u32
  PID_LASTPRINTED = 11_u32
  PID_CREATE_DTM = 12_u32
  PID_LASTSAVE_DTM = 13_u32
  PID_PAGECOUNT = 14_u32
  PID_WORDCOUNT = 15_u32
  PID_CHARCOUNT = 16_u32
  PID_THUMBNAIL = 17_u32
  PID_APPNAME = 18_u32
  PID_MSIVERSION = 14_u32
  PID_MSISOURCE = 15_u32
  PID_MSIRESTRICT = 16_u32
  PATCH_OPTION_USE_BEST = 0_u32
  PATCH_OPTION_USE_LZX_BEST = 3_u32
  PATCH_OPTION_USE_LZX_A = 1_u32
  PATCH_OPTION_USE_LZX_B = 2_u32
  PATCH_OPTION_USE_LZX_LARGE = 4_u32
  PATCH_OPTION_NO_BINDFIX = 65536_u32
  PATCH_OPTION_NO_LOCKFIX = 131072_u32
  PATCH_OPTION_NO_REBASE = 262144_u32
  PATCH_OPTION_FAIL_IF_SAME_FILE = 524288_u32
  PATCH_OPTION_FAIL_IF_BIGGER = 1048576_u32
  PATCH_OPTION_NO_CHECKSUM = 2097152_u32
  PATCH_OPTION_NO_RESTIMEFIX = 4194304_u32
  PATCH_OPTION_NO_TIMESTAMP = 8388608_u32
  PATCH_OPTION_SIGNATURE_MD5 = 16777216_u32
  PATCH_OPTION_INTERLEAVE_FILES = 1073741824_u32
  PATCH_OPTION_RESERVED1 = 2147483648_u32
  PATCH_OPTION_VALID_FLAGS = 3237937159_u32
  PATCH_SYMBOL_NO_IMAGEHLP = 1_u32
  PATCH_SYMBOL_NO_FAILURES = 2_u32
  PATCH_SYMBOL_UNDECORATED_TOO = 4_u32
  PATCH_SYMBOL_RESERVED1 = 2147483648_u32
  PATCH_TRANSFORM_PE_RESOURCE_2 = 256_u32
  PATCH_TRANSFORM_PE_IRELOC_2 = 512_u32
  APPLY_OPTION_FAIL_IF_EXACT = 1_u32
  APPLY_OPTION_FAIL_IF_CLOSE = 2_u32
  APPLY_OPTION_TEST_ONLY = 4_u32
  APPLY_OPTION_VALID_FLAGS = 7_u32
  ERROR_PATCH_ENCODE_FAILURE = 3222155521_u32
  ERROR_PATCH_INVALID_OPTIONS = 3222155522_u32
  ERROR_PATCH_SAME_FILE = 3222155523_u32
  ERROR_PATCH_RETAIN_RANGES_DIFFER = 3222155524_u32
  ERROR_PATCH_BIGGER_THAN_COMPRESSED = 3222155525_u32
  ERROR_PATCH_IMAGEHLP_FAILURE = 3222155526_u32
  ERROR_PATCH_DECODE_FAILURE = 3222159617_u32
  ERROR_PATCH_CORRUPT = 3222159618_u32
  ERROR_PATCH_NEWER_FORMAT = 3222159619_u32
  ERROR_PATCH_WRONG_FILE = 3222159620_u32
  ERROR_PATCH_NOT_NECESSARY = 3222159621_u32
  ERROR_PATCH_NOT_AVAILABLE = 3222159622_u32
  ERROR_PCW_BASE = 3222163713_u32
  ERROR_PCW_PCP_DOESNT_EXIST = 3222163713_u32
  ERROR_PCW_PCP_BAD_FORMAT = 3222163714_u32
  ERROR_PCW_CANT_CREATE_TEMP_FOLDER = 3222163715_u32
  ERROR_PCW_MISSING_PATCH_PATH = 3222163716_u32
  ERROR_PCW_CANT_OVERWRITE_PATCH = 3222163717_u32
  ERROR_PCW_CANT_CREATE_PATCH_FILE = 3222163718_u32
  ERROR_PCW_MISSING_PATCH_GUID = 3222163719_u32
  ERROR_PCW_BAD_PATCH_GUID = 3222163720_u32
  ERROR_PCW_BAD_GUIDS_TO_REPLACE = 3222163721_u32
  ERROR_PCW_BAD_TARGET_PRODUCT_CODE_LIST = 3222163722_u32
  ERROR_PCW_NO_UPGRADED_IMAGES_TO_PATCH = 3222163723_u32
  ERROR_PCW_BAD_API_PATCHING_SYMBOL_FLAGS = 3222163725_u32
  ERROR_PCW_OODS_COPYING_MSI = 3222163726_u32
  ERROR_PCW_UPGRADED_IMAGE_NAME_TOO_LONG = 3222163727_u32
  ERROR_PCW_BAD_UPGRADED_IMAGE_NAME = 3222163728_u32
  ERROR_PCW_DUP_UPGRADED_IMAGE_NAME = 3222163729_u32
  ERROR_PCW_UPGRADED_IMAGE_PATH_TOO_LONG = 3222163730_u32
  ERROR_PCW_UPGRADED_IMAGE_PATH_EMPTY = 3222163731_u32
  ERROR_PCW_UPGRADED_IMAGE_PATH_NOT_EXIST = 3222163732_u32
  ERROR_PCW_UPGRADED_IMAGE_PATH_NOT_MSI = 3222163733_u32
  ERROR_PCW_UPGRADED_IMAGE_COMPRESSED = 3222163734_u32
  ERROR_PCW_TARGET_IMAGE_NAME_TOO_LONG = 3222163735_u32
  ERROR_PCW_BAD_TARGET_IMAGE_NAME = 3222163736_u32
  ERROR_PCW_DUP_TARGET_IMAGE_NAME = 3222163737_u32
  ERROR_PCW_TARGET_IMAGE_PATH_TOO_LONG = 3222163738_u32
  ERROR_PCW_TARGET_IMAGE_PATH_EMPTY = 3222163739_u32
  ERROR_PCW_TARGET_IMAGE_PATH_NOT_EXIST = 3222163740_u32
  ERROR_PCW_TARGET_IMAGE_PATH_NOT_MSI = 3222163741_u32
  ERROR_PCW_TARGET_IMAGE_COMPRESSED = 3222163742_u32
  ERROR_PCW_TARGET_BAD_PROD_VALIDATE = 3222163743_u32
  ERROR_PCW_TARGET_BAD_PROD_CODE_VAL = 3222163744_u32
  ERROR_PCW_UPGRADED_MISSING_SRC_FILES = 3222163745_u32
  ERROR_PCW_TARGET_MISSING_SRC_FILES = 3222163746_u32
  ERROR_PCW_IMAGE_FAMILY_NAME_TOO_LONG = 3222163747_u32
  ERROR_PCW_BAD_IMAGE_FAMILY_NAME = 3222163748_u32
  ERROR_PCW_DUP_IMAGE_FAMILY_NAME = 3222163749_u32
  ERROR_PCW_BAD_IMAGE_FAMILY_SRC_PROP = 3222163750_u32
  ERROR_PCW_UFILEDATA_LONG_FILE_TABLE_KEY = 3222163751_u32
  ERROR_PCW_UFILEDATA_BLANK_FILE_TABLE_KEY = 3222163752_u32
  ERROR_PCW_UFILEDATA_MISSING_FILE_TABLE_KEY = 3222163753_u32
  ERROR_PCW_EXTFILE_LONG_FILE_TABLE_KEY = 3222163754_u32
  ERROR_PCW_EXTFILE_BLANK_FILE_TABLE_KEY = 3222163755_u32
  ERROR_PCW_EXTFILE_BAD_FAMILY_FIELD = 3222163756_u32
  ERROR_PCW_EXTFILE_LONG_PATH_TO_FILE = 3222163757_u32
  ERROR_PCW_EXTFILE_BLANK_PATH_TO_FILE = 3222163758_u32
  ERROR_PCW_EXTFILE_MISSING_FILE = 3222163759_u32
  ERROR_PCW_BAD_FILE_SEQUENCE_START = 3222163770_u32
  ERROR_PCW_CANT_COPY_FILE_TO_TEMP_FOLDER = 3222163771_u32
  ERROR_PCW_CANT_CREATE_ONE_PATCH_FILE = 3222163772_u32
  ERROR_PCW_BAD_IMAGE_FAMILY_DISKID = 3222163773_u32
  ERROR_PCW_BAD_IMAGE_FAMILY_FILESEQSTART = 3222163774_u32
  ERROR_PCW_BAD_UPGRADED_IMAGE_FAMILY = 3222163775_u32
  ERROR_PCW_BAD_TARGET_IMAGE_UPGRADED = 3222163776_u32
  ERROR_PCW_DUP_TARGET_IMAGE_PACKCODE = 3222163777_u32
  ERROR_PCW_UFILEDATA_BAD_UPGRADED_FIELD = 3222163778_u32
  ERROR_PCW_MISMATCHED_PRODUCT_CODES = 3222163779_u32
  ERROR_PCW_MISMATCHED_PRODUCT_VERSIONS = 3222163780_u32
  ERROR_PCW_CANNOT_WRITE_DDF = 3222163781_u32
  ERROR_PCW_CANNOT_RUN_MAKECAB = 3222163782_u32
  ERROR_PCW_WRITE_SUMMARY_PROPERTIES = 3222163787_u32
  ERROR_PCW_TFILEDATA_LONG_FILE_TABLE_KEY = 3222163788_u32
  ERROR_PCW_TFILEDATA_BLANK_FILE_TABLE_KEY = 3222163789_u32
  ERROR_PCW_TFILEDATA_MISSING_FILE_TABLE_KEY = 3222163790_u32
  ERROR_PCW_TFILEDATA_BAD_TARGET_FIELD = 3222163791_u32
  ERROR_PCW_UPGRADED_IMAGE_PATCH_PATH_TOO_LONG = 3222163792_u32
  ERROR_PCW_UPGRADED_IMAGE_PATCH_PATH_NOT_EXIST = 3222163793_u32
  ERROR_PCW_UPGRADED_IMAGE_PATCH_PATH_NOT_MSI = 3222163794_u32
  ERROR_PCW_DUP_UPGRADED_IMAGE_PACKCODE = 3222163795_u32
  ERROR_PCW_UFILEIGNORE_BAD_UPGRADED_FIELD = 3222163796_u32
  ERROR_PCW_UFILEIGNORE_LONG_FILE_TABLE_KEY = 3222163797_u32
  ERROR_PCW_UFILEIGNORE_BLANK_FILE_TABLE_KEY = 3222163798_u32
  ERROR_PCW_UFILEIGNORE_BAD_FILE_TABLE_KEY = 3222163799_u32
  ERROR_PCW_FAMILY_RANGE_NAME_TOO_LONG = 3222163800_u32
  ERROR_PCW_BAD_FAMILY_RANGE_NAME = 3222163801_u32
  ERROR_PCW_FAMILY_RANGE_LONG_FILE_TABLE_KEY = 3222163802_u32
  ERROR_PCW_FAMILY_RANGE_BLANK_FILE_TABLE_KEY = 3222163803_u32
  ERROR_PCW_FAMILY_RANGE_LONG_RETAIN_OFFSETS = 3222163804_u32
  ERROR_PCW_FAMILY_RANGE_BLANK_RETAIN_OFFSETS = 3222163805_u32
  ERROR_PCW_FAMILY_RANGE_BAD_RETAIN_OFFSETS = 3222163806_u32
  ERROR_PCW_FAMILY_RANGE_LONG_RETAIN_LENGTHS = 3222163807_u32
  ERROR_PCW_FAMILY_RANGE_BLANK_RETAIN_LENGTHS = 3222163808_u32
  ERROR_PCW_FAMILY_RANGE_BAD_RETAIN_LENGTHS = 3222163809_u32
  ERROR_PCW_FAMILY_RANGE_COUNT_MISMATCH = 3222163810_u32
  ERROR_PCW_EXTFILE_LONG_IGNORE_OFFSETS = 3222163811_u32
  ERROR_PCW_EXTFILE_BAD_IGNORE_OFFSETS = 3222163812_u32
  ERROR_PCW_EXTFILE_LONG_IGNORE_LENGTHS = 3222163813_u32
  ERROR_PCW_EXTFILE_BAD_IGNORE_LENGTHS = 3222163814_u32
  ERROR_PCW_EXTFILE_IGNORE_COUNT_MISMATCH = 3222163815_u32
  ERROR_PCW_EXTFILE_LONG_RETAIN_OFFSETS = 3222163816_u32
  ERROR_PCW_EXTFILE_BAD_RETAIN_OFFSETS = 3222163817_u32
  ERROR_PCW_TFILEDATA_LONG_IGNORE_OFFSETS = 3222163819_u32
  ERROR_PCW_TFILEDATA_BAD_IGNORE_OFFSETS = 3222163820_u32
  ERROR_PCW_TFILEDATA_LONG_IGNORE_LENGTHS = 3222163821_u32
  ERROR_PCW_TFILEDATA_BAD_IGNORE_LENGTHS = 3222163822_u32
  ERROR_PCW_TFILEDATA_IGNORE_COUNT_MISMATCH = 3222163823_u32
  ERROR_PCW_TFILEDATA_LONG_RETAIN_OFFSETS = 3222163824_u32
  ERROR_PCW_TFILEDATA_BAD_RETAIN_OFFSETS = 3222163825_u32
  ERROR_PCW_CANT_GENERATE_TRANSFORM = 3222163827_u32
  ERROR_PCW_CANT_CREATE_SUMMARY_INFO = 3222163828_u32
  ERROR_PCW_CANT_GENERATE_TRANSFORM_POUND = 3222163829_u32
  ERROR_PCW_CANT_CREATE_SUMMARY_INFO_POUND = 3222163830_u32
  ERROR_PCW_BAD_UPGRADED_IMAGE_PRODUCT_CODE = 3222163831_u32
  ERROR_PCW_BAD_UPGRADED_IMAGE_PRODUCT_VERSION = 3222163832_u32
  ERROR_PCW_BAD_UPGRADED_IMAGE_UPGRADE_CODE = 3222163833_u32
  ERROR_PCW_BAD_TARGET_IMAGE_PRODUCT_CODE = 3222163834_u32
  ERROR_PCW_BAD_TARGET_IMAGE_PRODUCT_VERSION = 3222163835_u32
  ERROR_PCW_BAD_TARGET_IMAGE_UPGRADE_CODE = 3222163836_u32
  ERROR_PCW_MATCHED_PRODUCT_VERSIONS = 3222163837_u32
  ERROR_PCW_OBSOLETION_WITH_SEQUENCE_DATA = 3222163838_u32
  ERROR_PCW_OBSOLETION_WITH_MSI30 = 3222163839_u32
  ERROR_PCW_OBSOLETION_WITH_PATCHSEQUENCE = 3222163840_u32
  ERROR_PCW_CANNOT_CREATE_TABLE = 3222163841_u32
  ERROR_PCW_CANT_GENERATE_SEQUENCEINFO_MAJORUPGD = 3222163842_u32
  ERROR_PCW_MAJOR_UPGD_WITHOUT_SEQUENCING = 3222163843_u32
  ERROR_PCW_BAD_PRODUCTVERSION_VALIDATION = 3222163844_u32
  ERROR_PCW_BAD_TRANSFORMSET = 3222163845_u32
  ERROR_PCW_BAD_TGT_UPD_IMAGES = 3222163846_u32
  ERROR_PCW_BAD_SUPERCEDENCE = 3222163847_u32
  ERROR_PCW_BAD_SEQUENCE = 3222163848_u32
  ERROR_PCW_BAD_TARGET = 3222163849_u32
  ERROR_PCW_NULL_PATCHFAMILY = 3222163850_u32
  ERROR_PCW_NULL_SEQUENCE_NUMBER = 3222163851_u32
  ERROR_PCW_BAD_VERSION_STRING = 3222163852_u32
  ERROR_PCW_BAD_MAJOR_VERSION = 3222163853_u32
  ERROR_PCW_SEQUENCING_BAD_TARGET = 3222163854_u32
  ERROR_PCW_PATCHMETADATA_PROP_NOT_SET = 3222163855_u32
  ERROR_PCW_INVALID_PATCHMETADATA_PROP = 3222163856_u32
  ERROR_PCW_INVALID_SUPERCEDENCE = 3222163857_u32
  ERROR_PCW_DUPLICATE_SEQUENCE_RECORD = 3222163858_u32
  ERROR_PCW_WRONG_PATCHMETADATA_STRD_PROP = 3222163859_u32
  ERROR_PCW_INVALID_PARAMETER = 3222163860_u32
  ERROR_PCW_CREATEFILE_LOG_FAILED = 3222163861_u32
  ERROR_PCW_INVALID_LOG_LEVEL = 3222163862_u32
  ERROR_PCW_INVALID_UI_LEVEL = 3222163863_u32
  ERROR_PCW_ERROR_WRITING_TO_LOG = 3222163864_u32
  ERROR_PCW_OUT_OF_MEMORY = 3222163865_u32
  ERROR_PCW_UNKNOWN_ERROR = 3222163866_u32
  ERROR_PCW_UNKNOWN_INFO = 3222163867_u32
  ERROR_PCW_UNKNOWN_WARN = 3222163868_u32
  ERROR_PCW_OPEN_VIEW = 3222163869_u32
  ERROR_PCW_EXECUTE_VIEW = 3222163870_u32
  ERROR_PCW_VIEW_FETCH = 3222163871_u32
  ERROR_PCW_FAILED_EXPAND_PATH = 3222163872_u32
  ERROR_PCW_INTERNAL_ERROR = 3222163969_u32
  ERROR_PCW_INVALID_PCP_PROPERTY = 3222163970_u32
  ERROR_PCW_INVALID_PCP_TARGETIMAGES = 3222163971_u32
  ERROR_PCW_LAX_VALIDATION_FLAGS = 3222163972_u32
  ERROR_PCW_FAILED_CREATE_TRANSFORM = 3222163973_u32
  ERROR_PCW_CANT_DELETE_TEMP_FOLDER = 3222163974_u32
  ERROR_PCW_MISSING_DIRECTORY_TABLE = 3222163975_u32
  ERROR_PCW_INVALID_SUPERSEDENCE_VALUE = 3222163976_u32
  ERROR_PCW_INVALID_PATCH_TYPE_SEQUENCING = 3222163977_u32
  ERROR_PCW_CANT_READ_FILE = 3222163978_u32
  ERROR_PCW_TARGET_WRONG_PRODUCT_VERSION_COMP = 3222163979_u32
  ERROR_PCW_INVALID_PCP_UPGRADEDFILESTOIGNORE = 3222163980_u32
  ERROR_PCW_INVALID_PCP_UPGRADEDIMAGES = 3222163981_u32
  ERROR_PCW_INVALID_PCP_EXTERNALFILES = 3222163982_u32
  ERROR_PCW_INVALID_PCP_IMAGEFAMILIES = 3222163983_u32
  ERROR_PCW_INVALID_PCP_PATCHSEQUENCE = 3222163984_u32
  ERROR_PCW_INVALID_PCP_TARGETFILES_OPTIONALDATA = 3222163985_u32
  ERROR_PCW_INVALID_PCP_UPGRADEDFILES_OPTIONALDATA = 3222163986_u32
  ERROR_PCW_MISSING_PATCHMETADATA = 3222163987_u32
  ERROR_PCW_IMAGE_PATH_NOT_EXIST = 3222163988_u32
  ERROR_PCW_INVALID_RANGE_ELEMENT = 3222163989_u32
  ERROR_PCW_INVALID_MAJOR_VERSION = 3222163990_u32
  ERROR_PCW_INVALID_PCP_PROPERTIES = 3222163991_u32
  ERROR_PCW_INVALID_PCP_FAMILYFILERANGES = 3222163992_u32
  INFO_BASE = 3222229249_u32
  INFO_PASSED_MAIN_CONTROL = 3222229249_u32
  INFO_ENTERING_PHASE_I_VALIDATION = 3222229250_u32
  INFO_ENTERING_PHASE_I = 3222229251_u32
  INFO_PCP_PATH = 3222229252_u32
  INFO_TEMP_DIR = 3222229253_u32
  INFO_SET_OPTIONS = 3222229254_u32
  INFO_PROPERTY = 3222229255_u32
  INFO_ENTERING_PHASE_II = 3222229256_u32
  INFO_ENTERING_PHASE_III = 3222229257_u32
  INFO_ENTERING_PHASE_IV = 3222229258_u32
  INFO_ENTERING_PHASE_V = 3222229259_u32
  INFO_GENERATING_METADATA = 3222229265_u32
  INFO_TEMP_DIR_CLEANUP = 3222229266_u32
  INFO_PATCHCACHE_FILEINFO_FAILURE = 3222229267_u32
  INFO_PATCHCACHE_PCI_READFAILURE = 3222229268_u32
  INFO_PATCHCACHE_PCI_WRITEFAILURE = 3222229269_u32
  INFO_USING_USER_MSI_FOR_PATCH_TABLES = 3222229270_u32
  INFO_SUCCESSFUL_PATCH_CREATION = 3222229271_u32
  WARN_BASE = 3222294785_u32
  WARN_MAJOR_UPGRADE_PATCH = 3222294785_u32
  WARN_SEQUENCE_DATA_GENERATION_DISABLED = 3222294786_u32
  WARN_SEQUENCE_DATA_SUPERSEDENCE_IGNORED = 3222294787_u32
  WARN_IMPROPER_TRANSFORM_VALIDATION = 3222294788_u32
  WARN_PCW_MISMATCHED_PRODUCT_CODES = 3222294789_u32
  WARN_PCW_MISMATCHED_PRODUCT_VERSIONS = 3222294790_u32
  WARN_INVALID_TRANSFORM_VALIDATION = 3222294791_u32
  WARN_BAD_MAJOR_VERSION = 3222294792_u32
  WARN_FILE_VERSION_DOWNREV = 3222294793_u32
  WARN_EQUAL_FILE_VERSION = 3222294794_u32
  WARN_PATCHPROPERTYNOTSET = 3222294795_u32
  WARN_OBSOLETION_WITH_SEQUENCE_DATA = 3222294802_u32
  WARN_OBSOLETION_WITH_MSI30 = 3222294801_u32
  WARN_OBSOLETION_WITH_PATCHSEQUENCE = 3222294803_u32
  DELTA_MAX_HASH_SIZE = 32_u32
  Cchmaxinteger = 12_i32
  LOGNONE = 0_u32
  LOGINFO = 1_u32
  LOGWARN = 2_u32
  LOGERR = 4_u32
  LOGPERFMESSAGES = 8_u32
  LOGALL = 15_u32
  UINONE = 0_u32
  UILOGBITS = 15_u32
  DEFAULT_MINIMUM_REQUIRED_MSI_VERSION = 100_u32
  DEFAULT_FILE_SEQUENCE_START = 2_u32
  DEFAULT_DISK_ID = 2_u32
  MsmMerge = LibC::GUID.new(0xadda830_u32, 0x2c26_u16, 0x11d2_u16, StaticArray[0xad_u8, 0x65_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xaf_u8, 0x11_u8, 0xa6_u8])
  PMSvc = LibC::GUID.new(0xb9e511fc_u32, 0xe364_u16, 0x497a_u16, StaticArray[0xa1_u8, 0x21_u8, 0xb7_u8, 0xb3_u8, 0x61_u8, 0x2c_u8, 0xed_u8, 0xce_u8])

  alias LPDISPLAYVAL = Proc(Void*, RESULTTYPES, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::BOOL)
  alias LPEVALCOMCALLBACK = Proc(STATUSTYPES, LibC::LPWSTR, Void*, LibC::BOOL)
  alias INSTALLUI_HANDLERA = Proc(Void*, UInt32, PSTR, Int32)
  alias INSTALLUI_HANDLERW = Proc(Void*, UInt32, LibC::LPWSTR, Int32)
  alias PINSTALLUI_HANDLER_RECORD = Proc(Void*, UInt32, MSIHANDLE, Int32)
  alias PPATCH_PROGRESS_CALLBACK = Proc(Void*, UInt32, UInt32, LibC::BOOL)
  alias PPATCH_SYMLOAD_CALLBACK = Proc(UInt32, PSTR, UInt32, UInt32, UInt32, UInt32, UInt32, Void*, LibC::BOOL)


  enum MSIASSEMBLYINFO : UInt32
    MSIASSEMBLYINFO_NETASSEMBLY = 0
    MSIASSEMBLYINFO_WIN32ASSEMBLY = 1
  end

  enum IASSEMBLYCACHE_UNINSTALL_DISPOSITION : UInt32
    IASSEMBLYCACHE_UNINSTALL_DISPOSITION_UNINSTALLED = 1
    IASSEMBLYCACHE_UNINSTALL_DISPOSITION_STILL_IN_USE = 2
    IASSEMBLYCACHE_UNINSTALL_DISPOSITION_ALREADY_UNINSTALLED = 3
    IASSEMBLYCACHE_UNINSTALL_DISPOSITION_DELETE_PENDING = 4
  end

  enum QUERYASMINFO_FLAGS : UInt32
    QUERYASMINFO_FLAG_VALIDATE = 1
  end

  enum RESULTTYPES : Int32
    Ieunknown = 0
    Ieerror = 1
    Iewarning = 2
    Ieinfo = 3
  end

  enum STATUSTYPES : Int32
    Iestatusgetcub = 0
    Iestatusicecount = 1
    Iestatusmerge = 2
    Iestatussummaryinfo = 3
    Iestatuscreateengine = 4
    Iestatusstarting = 5
    Iestatusrunice = 6
    Iestatusshutdown = 7
    Iestatussuccess = 8
    Iestatusfail = 9
    Iestatuscancel = 10
  end

  enum Msmerrortype : Int32
    Msmerrorlanguageunsupported = 1
    Msmerrorlanguagefailed = 2
    Msmerrorexclusion = 3
    Msmerrortablemerge = 4
    Msmerrorresequencemerge = 5
    Msmerrorfilecreate = 6
    Msmerrordircreate = 7
    Msmerrorfeaturerequired = 8
  end

  enum INSTALLMESSAGE : Int32
    INSTALLMESSAGE_FATALEXIT = 0
    INSTALLMESSAGE_ERROR = 16777216
    INSTALLMESSAGE_WARNING = 33554432
    INSTALLMESSAGE_USER = 50331648
    INSTALLMESSAGE_INFO = 67108864
    INSTALLMESSAGE_FILESINUSE = 83886080
    INSTALLMESSAGE_RESOLVESOURCE = 100663296
    INSTALLMESSAGE_OUTOFDISKSPACE = 117440512
    INSTALLMESSAGE_ACTIONSTART = 134217728
    INSTALLMESSAGE_ACTIONDATA = 150994944
    INSTALLMESSAGE_PROGRESS = 167772160
    INSTALLMESSAGE_COMMONDATA = 184549376
    INSTALLMESSAGE_INITIALIZE = 201326592
    INSTALLMESSAGE_TERMINATE = 218103808
    INSTALLMESSAGE_SHOWDIALOG = 234881024
    INSTALLMESSAGE_PERFORMANCE = 251658240
    INSTALLMESSAGE_RMFILESINUSE = 419430400
    INSTALLMESSAGE_INSTALLSTART = 436207616
    INSTALLMESSAGE_INSTALLEND = 452984832
  end

  enum INSTALLUILEVEL : Int32
    INSTALLUILEVEL_NOCHANGE = 0
    INSTALLUILEVEL_DEFAULT = 1
    INSTALLUILEVEL_NONE = 2
    INSTALLUILEVEL_BASIC = 3
    INSTALLUILEVEL_REDUCED = 4
    INSTALLUILEVEL_FULL = 5
    INSTALLUILEVEL_ENDDIALOG = 128
    INSTALLUILEVEL_PROGRESSONLY = 64
    INSTALLUILEVEL_HIDECANCEL = 32
    INSTALLUILEVEL_SOURCERESONLY = 256
    INSTALLUILEVEL_UACONLY = 512
  end

  enum INSTALLSTATE : Int32
    INSTALLSTATE_NOTUSED = -7
    INSTALLSTATE_BADCONFIG = -6
    INSTALLSTATE_INCOMPLETE = -5
    INSTALLSTATE_SOURCEABSENT = -4
    INSTALLSTATE_MOREDATA = -3
    INSTALLSTATE_INVALIDARG = -2
    INSTALLSTATE_UNKNOWN = -1
    INSTALLSTATE_BROKEN = 0
    INSTALLSTATE_ADVERTISED = 1
    INSTALLSTATE_REMOVED = 1
    INSTALLSTATE_ABSENT = 2
    INSTALLSTATE_LOCAL = 3
    INSTALLSTATE_SOURCE = 4
    INSTALLSTATE_DEFAULT = 5
  end

  enum USERINFOSTATE : Int32
    USERINFOSTATE_MOREDATA = -3
    USERINFOSTATE_INVALIDARG = -2
    USERINFOSTATE_UNKNOWN = -1
    USERINFOSTATE_ABSENT = 0
    USERINFOSTATE_PRESENT = 1
  end

  enum INSTALLLEVEL : Int32
    INSTALLLEVEL_DEFAULT = 0
    INSTALLLEVEL_MINIMUM = 1
    INSTALLLEVEL_MAXIMUM = 65535
  end

  enum REINSTALLMODE : Int32
    REINSTALLMODE_REPAIR = 1
    REINSTALLMODE_FILEMISSING = 2
    REINSTALLMODE_FILEOLDERVERSION = 4
    REINSTALLMODE_FILEEQUALVERSION = 8
    REINSTALLMODE_FILEEXACT = 16
    REINSTALLMODE_FILEVERIFY = 32
    REINSTALLMODE_FILEREPLACE = 64
    REINSTALLMODE_MACHINEDATA = 128
    REINSTALLMODE_USERDATA = 256
    REINSTALLMODE_SHORTCUT = 512
    REINSTALLMODE_PACKAGE = 1024
  end

  enum INSTALLOGMODE : Int32
    INSTALLLOGMODE_FATALEXIT = 1
    INSTALLLOGMODE_ERROR = 2
    INSTALLLOGMODE_WARNING = 4
    INSTALLLOGMODE_USER = 8
    INSTALLLOGMODE_INFO = 16
    INSTALLLOGMODE_RESOLVESOURCE = 64
    INSTALLLOGMODE_OUTOFDISKSPACE = 128
    INSTALLLOGMODE_ACTIONSTART = 256
    INSTALLLOGMODE_ACTIONDATA = 512
    INSTALLLOGMODE_COMMONDATA = 2048
    INSTALLLOGMODE_PROPERTYDUMP = 1024
    INSTALLLOGMODE_VERBOSE = 4096
    INSTALLLOGMODE_EXTRADEBUG = 8192
    INSTALLLOGMODE_LOGONLYONERROR = 16384
    INSTALLLOGMODE_LOGPERFORMANCE = 32768
    INSTALLLOGMODE_PROGRESS = 1024
    INSTALLLOGMODE_INITIALIZE = 4096
    INSTALLLOGMODE_TERMINATE = 8192
    INSTALLLOGMODE_SHOWDIALOG = 16384
    INSTALLLOGMODE_FILESINUSE = 32
    INSTALLLOGMODE_RMFILESINUSE = 33554432
    INSTALLLOGMODE_INSTALLSTART = 67108864
    INSTALLLOGMODE_INSTALLEND = 134217728
  end

  enum INSTALLLOGATTRIBUTES : Int32
    INSTALLLOGATTRIBUTES_APPEND = 1
    INSTALLLOGATTRIBUTES_FLUSHEACHLINE = 2
  end

  enum INSTALLFEATUREATTRIBUTE : Int32
    INSTALLFEATUREATTRIBUTE_FAVORLOCAL = 1
    INSTALLFEATUREATTRIBUTE_FAVORSOURCE = 2
    INSTALLFEATUREATTRIBUTE_FOLLOWPARENT = 4
    INSTALLFEATUREATTRIBUTE_FAVORADVERTISE = 8
    INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE = 16
    INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE = 32
  end

  enum INSTALLMODE : Int32
    INSTALLMODE_NODETECTION_ANY = -4
    INSTALLMODE_NOSOURCERESOLUTION = -3
    INSTALLMODE_NODETECTION = -2
    INSTALLMODE_EXISTING = -1
    INSTALLMODE_DEFAULT = 0
  end

  enum MSIPATCHSTATE : Int32
    MSIPATCHSTATE_INVALID = 0
    MSIPATCHSTATE_APPLIED = 1
    MSIPATCHSTATE_SUPERSEDED = 2
    MSIPATCHSTATE_OBSOLETED = 4
    MSIPATCHSTATE_REGISTERED = 8
    MSIPATCHSTATE_ALL = 15
  end

  enum MSIINSTALLCONTEXT : Int32
    MSIINSTALLCONTEXT_FIRSTVISIBLE = 0
    MSIINSTALLCONTEXT_NONE = 0
    MSIINSTALLCONTEXT_USERMANAGED = 1
    MSIINSTALLCONTEXT_USERUNMANAGED = 2
    MSIINSTALLCONTEXT_MACHINE = 4
    MSIINSTALLCONTEXT_ALL = 7
    MSIINSTALLCONTEXT_ALLUSERMANAGED = 8
  end

  enum MSIPATCHDATATYPE : Int32
    MSIPATCH_DATATYPE_PATCHFILE = 0
    MSIPATCH_DATATYPE_XMLPATH = 1
    MSIPATCH_DATATYPE_XMLBLOB = 2
  end

  enum SCRIPTFLAGS : Int32
    SCRIPTFLAGS_CACHEINFO = 1
    SCRIPTFLAGS_SHORTCUTS = 4
    SCRIPTFLAGS_MACHINEASSIGN = 8
    SCRIPTFLAGS_REGDATA_CNFGINFO = 32
    SCRIPTFLAGS_VALIDATE_TRANSFORMS_LIST = 64
    SCRIPTFLAGS_REGDATA_CLASSINFO = 128
    SCRIPTFLAGS_REGDATA_EXTENSIONINFO = 256
    SCRIPTFLAGS_REGDATA_APPINFO = 384
    SCRIPTFLAGS_REGDATA = 416
  end

  enum ADVERTISEFLAGS : Int32
    ADVERTISEFLAGS_MACHINEASSIGN = 0
    ADVERTISEFLAGS_USERASSIGN = 1
  end

  enum INSTALLTYPE : Int32
    INSTALLTYPE_DEFAULT = 0
    INSTALLTYPE_NETWORK_IMAGE = 1
    INSTALLTYPE_SINGLE_INSTANCE = 2
  end

  enum MSIARCHITECTUREFLAGS : Int32
    MSIARCHITECTUREFLAGS_X86 = 1
    MSIARCHITECTUREFLAGS_IA64 = 2
    MSIARCHITECTUREFLAGS_AMD64 = 4
    MSIARCHITECTUREFLAGS_ARM = 8
  end

  enum MSIOPENPACKAGEFLAGS : Int32
    MSIOPENPACKAGEFLAGS_IGNOREMACHINESTATE = 1
  end

  enum MSIADVERTISEOPTIONFLAGS : Int32
    MSIADVERTISEOPTIONFLAGS_INSTANCE = 1
  end

  enum MSISOURCETYPE : Int32
    MSISOURCETYPE_UNKNOWN = 0
    MSISOURCETYPE_NETWORK = 1
    MSISOURCETYPE_URL = 2
    MSISOURCETYPE_MEDIA = 4
  end

  enum MSICODE : Int32
    MSICODE_PRODUCT = 0
    MSICODE_PATCH = 1073741824
  end

  enum MSITRANSACTION : Int32
    MSITRANSACTION_CHAIN_EMBEDDEDUI = 1
    MSITRANSACTION_JOIN_EXISTING_EMBEDDEDUI = 2
  end

  enum MSITRANSACTIONSTATE : UInt32
    MSITRANSACTIONSTATE_ROLLBACK = 0
    MSITRANSACTIONSTATE_COMMIT = 1
  end

  enum MSIDBSTATE : Int32
    MSIDBSTATE_ERROR = -1
    MSIDBSTATE_READ = 0
    MSIDBSTATE_WRITE = 1
  end

  enum MSIMODIFY : Int32
    MSIMODIFY_SEEK = -1
    MSIMODIFY_REFRESH = 0
    MSIMODIFY_INSERT = 1
    MSIMODIFY_UPDATE = 2
    MSIMODIFY_ASSIGN = 3
    MSIMODIFY_REPLACE = 4
    MSIMODIFY_MERGE = 5
    MSIMODIFY_DELETE = 6
    MSIMODIFY_INSERT_TEMPORARY = 7
    MSIMODIFY_VALIDATE = 8
    MSIMODIFY_VALIDATE_NEW = 9
    MSIMODIFY_VALIDATE_FIELD = 10
    MSIMODIFY_VALIDATE_DELETE = 11
  end

  enum MSICOLINFO : Int32
    MSICOLINFO_NAMES = 0
    MSICOLINFO_TYPES = 1
  end

  enum MSICONDITION : Int32
    MSICONDITION_FALSE = 0
    MSICONDITION_TRUE = 1
    MSICONDITION_NONE = 2
    MSICONDITION_ERROR = 3
  end

  enum MSICOSTTREE : Int32
    MSICOSTTREE_SELFONLY = 0
    MSICOSTTREE_CHILDREN = 1
    MSICOSTTREE_PARENTS = 2
    MSICOSTTREE_RESERVED = 3
  end

  enum MSIDBERROR : Int32
    MSIDBERROR_INVALIDARG = -3
    MSIDBERROR_MOREDATA = -2
    MSIDBERROR_FUNCTIONERROR = -1
    MSIDBERROR_NOERROR = 0
    MSIDBERROR_DUPLICATEKEY = 1
    MSIDBERROR_REQUIRED = 2
    MSIDBERROR_BADLINK = 3
    MSIDBERROR_OVERFLOW = 4
    MSIDBERROR_UNDERFLOW = 5
    MSIDBERROR_NOTINSET = 6
    MSIDBERROR_BADVERSION = 7
    MSIDBERROR_BADCASE = 8
    MSIDBERROR_BADGUID = 9
    MSIDBERROR_BADWILDCARD = 10
    MSIDBERROR_BADIDENTIFIER = 11
    MSIDBERROR_BADLANGUAGE = 12
    MSIDBERROR_BADFILENAME = 13
    MSIDBERROR_BADPATH = 14
    MSIDBERROR_BADCONDITION = 15
    MSIDBERROR_BADFORMATTED = 16
    MSIDBERROR_BADTEMPLATE = 17
    MSIDBERROR_BADDEFAULTDIR = 18
    MSIDBERROR_BADREGPATH = 19
    MSIDBERROR_BADCUSTOMSOURCE = 20
    MSIDBERROR_BADPROPERTY = 21
    MSIDBERROR_MISSINGDATA = 22
    MSIDBERROR_BADCATEGORY = 23
    MSIDBERROR_BADKEYTABLE = 24
    MSIDBERROR_BADMAXMINVALUES = 25
    MSIDBERROR_BADCABINET = 26
    MSIDBERROR_BADSHORTCUT = 27
    MSIDBERROR_STRINGOVERFLOW = 28
    MSIDBERROR_BADLOCALIZEATTRIB = 29
  end

  enum MSIRUNMODE : Int32
    MSIRUNMODE_ADMIN = 0
    MSIRUNMODE_ADVERTISE = 1
    MSIRUNMODE_MAINTENANCE = 2
    MSIRUNMODE_ROLLBACKENABLED = 3
    MSIRUNMODE_LOGENABLED = 4
    MSIRUNMODE_OPERATIONS = 5
    MSIRUNMODE_REBOOTATEND = 6
    MSIRUNMODE_REBOOTNOW = 7
    MSIRUNMODE_CABINET = 8
    MSIRUNMODE_SOURCESHORTNAMES = 9
    MSIRUNMODE_TARGETSHORTNAMES = 10
    MSIRUNMODE_RESERVED11 = 11
    MSIRUNMODE_WINDOWS9X = 12
    MSIRUNMODE_ZAWENABLED = 13
    MSIRUNMODE_RESERVED14 = 14
    MSIRUNMODE_RESERVED15 = 15
    MSIRUNMODE_SCHEDULED = 16
    MSIRUNMODE_ROLLBACK = 17
    MSIRUNMODE_COMMIT = 18
  end

  enum MSITRANSFORM_ERROR : Int32
    MSITRANSFORM_ERROR_ADDEXISTINGROW = 1
    MSITRANSFORM_ERROR_DELMISSINGROW = 2
    MSITRANSFORM_ERROR_ADDEXISTINGTABLE = 4
    MSITRANSFORM_ERROR_DELMISSINGTABLE = 8
    MSITRANSFORM_ERROR_UPDATEMISSINGROW = 16
    MSITRANSFORM_ERROR_CHANGECODEPAGE = 32
    MSITRANSFORM_ERROR_VIEWTRANSFORM = 256
    MSITRANSFORM_ERROR_NONE = 0
  end

  enum MSITRANSFORM_VALIDATE : Int32
    MSITRANSFORM_VALIDATE_LANGUAGE = 1
    MSITRANSFORM_VALIDATE_PRODUCT = 2
    MSITRANSFORM_VALIDATE_PLATFORM = 4
    MSITRANSFORM_VALIDATE_MAJORVERSION = 8
    MSITRANSFORM_VALIDATE_MINORVERSION = 16
    MSITRANSFORM_VALIDATE_UPDATEVERSION = 32
    MSITRANSFORM_VALIDATE_NEWLESSBASEVERSION = 64
    MSITRANSFORM_VALIDATE_NEWLESSEQUALBASEVERSION = 128
    MSITRANSFORM_VALIDATE_NEWEQUALBASEVERSION = 256
    MSITRANSFORM_VALIDATE_NEWGREATEREQUALBASEVERSION = 512
    MSITRANSFORM_VALIDATE_NEWGREATERBASEVERSION = 1024
    MSITRANSFORM_VALIDATE_UPGRADECODE = 2048
  end

  enum ASM_NAME : Int32
    ASM_NAME_PUBLIC_KEY = 0
    ASM_NAME_PUBLIC_KEY_TOKEN = 1
    ASM_NAME_HASH_VALUE = 2
    ASM_NAME_NAME = 3
    ASM_NAME_MAJOR_VERSION = 4
    ASM_NAME_MINOR_VERSION = 5
    ASM_NAME_BUILD_NUMBER = 6
    ASM_NAME_REVISION_NUMBER = 7
    ASM_NAME_CULTURE = 8
    ASM_NAME_PROCESSOR_ID_ARRAY = 9
    ASM_NAME_OSINFO_ARRAY = 10
    ASM_NAME_HASH_ALGID = 11
    ASM_NAME_ALIAS = 12
    ASM_NAME_CODEBASE_URL = 13
    ASM_NAME_CODEBASE_LASTMOD = 14
    ASM_NAME_NULL_PUBLIC_KEY = 15
    ASM_NAME_NULL_PUBLIC_KEY_TOKEN = 16
    ASM_NAME_CUSTOM = 17
    ASM_NAME_NULL_CUSTOM = 18
    ASM_NAME_MVID = 19
    ASM_NAME_MAX_PARAMS = 20
  end

  enum ASM_BIND_FLAGS : UInt32
    ASM_BINDF_FORCE_CACHE_INSTALL = 1
    ASM_BINDF_RFS_INTEGRITY_CHECK = 2
    ASM_BINDF_RFS_MODULE_CHECK = 4
    ASM_BINDF_BINPATH_PROBE_ONLY = 8
    ASM_BINDF_SHARED_BINPATH_HINT = 16
    ASM_BINDF_PARENT_ASM_HINT = 32
  end

  enum ASM_DISPLAY_FLAGS : Int32
    ASM_DISPLAYF_VERSION = 1
    ASM_DISPLAYF_CULTURE = 2
    ASM_DISPLAYF_PUBLIC_KEY_TOKEN = 4
    ASM_DISPLAYF_PUBLIC_KEY = 8
    ASM_DISPLAYF_CUSTOM = 16
    ASM_DISPLAYF_PROCESSORARCHITECTURE = 32
    ASM_DISPLAYF_LANGUAGEID = 64
  end

  enum ASM_CMP_FLAGS : Int32
    ASM_CMPF_NAME = 1
    ASM_CMPF_MAJOR_VERSION = 2
    ASM_CMPF_MINOR_VERSION = 4
    ASM_CMPF_BUILD_NUMBER = 8
    ASM_CMPF_REVISION_NUMBER = 16
    ASM_CMPF_PUBLIC_KEY_TOKEN = 32
    ASM_CMPF_CULTURE = 64
    ASM_CMPF_CUSTOM = 128
    ASM_CMPF_ALL = 255
    ASM_CMPF_DEFAULT = 256
  end

  enum CREATE_ASM_NAME_OBJ_FLAGS : Int32
    CANOF_PARSE_DISPLAY_NAME = 1
    CANOF_SET_DEFAULT_VALUES = 2
  end

  enum Msidbcontrolattributes : Int32
    Msidbcontrolattributesvisible = 1
    Msidbcontrolattributesenabled = 2
    Msidbcontrolattributessunken = 4
    Msidbcontrolattributesindirect = 8
    Msidbcontrolattributesinteger = 16
    Msidbcontrolattributesrtlro = 32
    Msidbcontrolattributesrightaligned = 64
    Msidbcontrolattributesleftscroll = 128
    Msidbcontrolattributesbidi = 224
    Msidbcontrolattributestransparent = 65536
    Msidbcontrolattributesnoprefix = 131072
    Msidbcontrolattributesnowrap = 262144
    Msidbcontrolattributesformatsize = 524288
    Msidbcontrolattributesuserslanguage = 1048576
    Msidbcontrolattributesmultiline = 65536
    Msidbcontrolattributespasswordinput = 2097152
    Msidbcontrolattributesprogress95 = 65536
    Msidbcontrolattributesremovablevolume = 65536
    Msidbcontrolattributesfixedvolume = 131072
    Msidbcontrolattributesremotevolume = 262144
    Msidbcontrolattributescdromvolume = 524288
    Msidbcontrolattributesramdiskvolume = 1048576
    Msidbcontrolattributesfloppyvolume = 2097152
    Msidbcontrolshowrollbackcost = 4194304
    Msidbcontrolattributessorted = 65536
    Msidbcontrolattributescombolist = 131072
    Msidbcontrolattributesimagehandle = 65536
    Msidbcontrolattributespushlike = 131072
    Msidbcontrolattributesbitmap = 262144
    Msidbcontrolattributesicon = 524288
    Msidbcontrolattributesfixedsize = 1048576
    Msidbcontrolattributesiconsize16 = 2097152
    Msidbcontrolattributesiconsize32 = 4194304
    Msidbcontrolattributesiconsize48 = 6291456
    Msidbcontrolattributeselevationshield = 8388608
    Msidbcontrolattributeshasborder = 16777216
  end

  enum Msidblocatortype : Int32
    Msidblocatortypedirectory = 0
    Msidblocatortypefilename = 1
    Msidblocatortyperawvalue = 2
    Msidblocatortype64bit = 16
  end

  enum Msidbcomponentattributes : Int32
    Msidbcomponentattributeslocalonly = 0
    Msidbcomponentattributessourceonly = 1
    Msidbcomponentattributesoptional = 2
    Msidbcomponentattributesregistrykeypath = 4
    Msidbcomponentattributesshareddllrefcount = 8
    Msidbcomponentattributespermanent = 16
    Msidbcomponentattributesodbcdatasource = 32
    Msidbcomponentattributestransitive = 64
    Msidbcomponentattributesneveroverwrite = 128
    Msidbcomponentattributes64bit = 256
    Msidbcomponentattributesdisableregistryreflection = 512
    Msidbcomponentattributesuninstallonsupersedence = 1024
    Msidbcomponentattributesshared = 2048
  end

  enum Msidbassemblyattributes : Int32
    Msidbassemblyattributesurt = 0
    Msidbassemblyattributeswin32 = 1
  end

  enum Msidbcustomactiontype : Int32
    Msidbcustomactiontypedll = 1
    Msidbcustomactiontypeexe = 2
    Msidbcustomactiontypetextdata = 3
    Msidbcustomactiontypejscript = 5
    Msidbcustomactiontypevbscript = 6
    Msidbcustomactiontypeinstall = 7
    Msidbcustomactiontypebinarydata = 0
    Msidbcustomactiontypesourcefile = 16
    Msidbcustomactiontypedirectory = 32
    Msidbcustomactiontypeproperty = 48
    Msidbcustomactiontypecontinue = 64
    Msidbcustomactiontypeasync = 128
    Msidbcustomactiontypefirstsequence = 256
    Msidbcustomactiontypeonceperprocess = 512
    Msidbcustomactiontypeclientrepeat = 768
    Msidbcustomactiontypeinscript = 1024
    Msidbcustomactiontyperollback = 256
    Msidbcustomactiontypecommit = 512
    Msidbcustomactiontypenoimpersonate = 2048
    Msidbcustomactiontypetsaware = 16384
    Msidbcustomactiontype64bitscript = 4096
    Msidbcustomactiontypehidetarget = 8192
    Msidbcustomactiontypepatchuninstall = 32768
  end

  enum Msidbdialogattributes : Int32
    Msidbdialogattributesvisible = 1
    Msidbdialogattributesmodal = 2
    Msidbdialogattributesminimize = 4
    Msidbdialogattributessysmodal = 8
    Msidbdialogattributeskeepmodeless = 16
    Msidbdialogattributestrackdiskspace = 32
    Msidbdialogattributesusecustompalette = 64
    Msidbdialogattributesrtlro = 128
    Msidbdialogattributesrightaligned = 256
    Msidbdialogattributesleftscroll = 512
    Msidbdialogattributesbidi = 896
    Msidbdialogattributeserror = 65536
  end

  enum Msidbfeatureattributes : Int32
    Msidbfeatureattributesfavorlocal = 0
    Msidbfeatureattributesfavorsource = 1
    Msidbfeatureattributesfollowparent = 2
    Msidbfeatureattributesfavoradvertise = 4
    Msidbfeatureattributesdisallowadvertise = 8
    Msidbfeatureattributesuidisallowabsent = 16
    Msidbfeatureattributesnounsupportedadvertise = 32
  end

  enum Msidbfileattributes : Int32
    Msidbfileattributesreadonly = 1
    Msidbfileattributeshidden = 2
    Msidbfileattributessystem = 4
    Msidbfileattributesreserved0 = 8
    Msidbfileattributesisolatedcomp = 16
    Msidbfileattributesreserved1 = 64
    Msidbfileattributesreserved2 = 128
    Msidbfileattributesreserved3 = 256
    Msidbfileattributesvital = 512
    Msidbfileattributeschecksum = 1024
    Msidbfileattributespatchadded = 4096
    Msidbfileattributesnoncompressed = 8192
    Msidbfileattributescompressed = 16384
    Msidbfileattributesreserved4 = 32768
  end

  enum Msidbinifileaction : Int32
    Msidbinifileactionaddline = 0
    Msidbinifileactioncreateline = 1
    Msidbinifileactionremoveline = 2
    Msidbinifileactionaddtag = 3
    Msidbinifileactionremovetag = 4
  end

  enum Msidbmovefileoptions : Int32
    Msidbmovefileoptionsmove = 1
  end

  enum Msidbodbcdatasourceregistration : Int32
    Msidbodbcdatasourceregistrationpermachine = 0
    Msidbodbcdatasourceregistrationperuser = 1
  end

  enum Msidbclassattributes : Int32
    Msidbclassattributesrelativepath = 1
  end

  enum Msidbpatchattributes : Int32
    Msidbpatchattributesnonvital = 1
  end

  enum Msidbregistryroot : Int32
    Msidbregistryrootclassesroot = 0
    Msidbregistryrootcurrentuser = 1
    Msidbregistryrootlocalmachine = 2
    Msidbregistryrootusers = 3
  end

  enum Msidbremovefileinstallmode : Int32
    Msidbremovefileinstallmodeoninstall = 1
    Msidbremovefileinstallmodeonremove = 2
    Msidbremovefileinstallmodeonboth = 3
  end

  enum Msidbservicecontrolevent : Int32
    Msidbservicecontroleventstart = 1
    Msidbservicecontroleventstop = 2
    Msidbservicecontroleventdelete = 8
    Msidbservicecontroleventuninstallstart = 16
    Msidbservicecontroleventuninstallstop = 32
    Msidbservicecontroleventuninstalldelete = 128
  end

  enum Msidbserviceconfigevent : Int32
    Msidbserviceconfigeventinstall = 1
    Msidbserviceconfigeventuninstall = 2
    Msidbserviceconfigeventreinstall = 4
  end

  enum Msidbserviceinstallerrorcontrol : Int32
    Msidbserviceinstallerrorcontrolvital = 32768
  end

  enum Msidbtextstylestylebits : Int32
    Msidbtextstylestylebitsbold = 1
    Msidbtextstylestylebitsitalic = 2
    Msidbtextstylestylebitsunderline = 4
    Msidbtextstylestylebitsstrike = 8
  end

  enum Msidbupgradeattributes : Int32
    Msidbupgradeattributesmigratefeatures = 1
    Msidbupgradeattributesonlydetect = 2
    Msidbupgradeattributesignoreremovefailure = 4
    Msidbupgradeattributesversionmininclusive = 256
    Msidbupgradeattributesversionmaxinclusive = 512
    Msidbupgradeattributeslanguagesexclusive = 1024
  end

  enum Msidbembeddeduiattributes : Int32
    Msidbembeddedui = 1
    Msidbembeddedhandlesbasic = 2
  end

  enum Msidbsuminfosourcetype : Int32
    Msidbsuminfosourcetypesfn = 1
    Msidbsuminfosourcetypecompressed = 2
    Msidbsuminfosourcetypeadminimage = 4
    Msidbsuminfosourcetypeluapackage = 8
  end

  enum Msirbreboottype : Int32
    Msirbrebootimmediate = 1
    Msirbrebootdeferred = 2
  end

  enum Msirbrebootreason : Int32
    Msirbrebootundeterminedreason = 0
    Msirbrebootinusefilesreason = 1
    Msirbrebootschedulerebootreason = 2
    Msirbrebootforcerebootreason = 3
    Msirbrebootcustomactionreason = 4
  end

  enum Msififastinstallbits : Int32
    Msififastinstallnosr = 1
    Msififastinstallquickcosting = 2
    Msififastinstalllessprgmsg = 4
  end

  enum TILE_TEMPLATE_TYPE : Int32
    TILE_TEMPLATE_INVALID = 0
    TILE_TEMPLATE_FLIP = 5
    TILE_TEMPLATE_DEEPLINK = 13
    TILE_TEMPLATE_CYCLE = 14
    TILE_TEMPLATE_METROCOUNT = 1
    TILE_TEMPLATE_AGILESTORE = 2
    TILE_TEMPLATE_GAMES = 3
    TILE_TEMPLATE_CALENDAR = 4
    TILE_TEMPLATE_MUSICVIDEO = 7
    TILE_TEMPLATE_PEOPLE = 10
    TILE_TEMPLATE_CONTACT = 11
    TILE_TEMPLATE_GROUP = 12
    TILE_TEMPLATE_DEFAULT = 15
    TILE_TEMPLATE_BADGE = 16
    TILE_TEMPLATE_BLOCK = 17
    TILE_TEMPLATE_TEXT01 = 18
    TILE_TEMPLATE_TEXT02 = 19
    TILE_TEMPLATE_TEXT03 = 20
    TILE_TEMPLATE_TEXT04 = 21
    TILE_TEMPLATE_TEXT05 = 22
    TILE_TEMPLATE_TEXT06 = 23
    TILE_TEMPLATE_TEXT07 = 24
    TILE_TEMPLATE_TEXT08 = 25
    TILE_TEMPLATE_TEXT09 = 26
    TILE_TEMPLATE_TEXT10 = 27
    TILE_TEMPLATE_TEXT11 = 28
    TILE_TEMPLATE_IMAGE = 29
    TILE_TEMPLATE_IMAGECOLLECTION = 30
    TILE_TEMPLATE_IMAGEANDTEXT01 = 31
    TILE_TEMPLATE_IMAGEANDTEXT02 = 32
    TILE_TEMPLATE_BLOCKANDTEXT01 = 33
    TILE_TEMPLATE_BLOCKANDTEXT02 = 34
    TILE_TEMPLATE_PEEKIMAGEANDTEXT01 = 35
    TILE_TEMPLATE_PEEKIMAGEANDTEXT02 = 36
    TILE_TEMPLATE_PEEKIMAGEANDTEXT03 = 37
    TILE_TEMPLATE_PEEKIMAGEANDTEXT04 = 38
    TILE_TEMPLATE_PEEKIMAGE01 = 39
    TILE_TEMPLATE_PEEKIMAGE02 = 40
    TILE_TEMPLATE_PEEKIMAGE03 = 41
    TILE_TEMPLATE_PEEKIMAGE04 = 42
    TILE_TEMPLATE_PEEKIMAGE05 = 43
    TILE_TEMPLATE_PEEKIMAGE06 = 44
    TILE_TEMPLATE_PEEKIMAGECOLLECTION01 = 45
    TILE_TEMPLATE_PEEKIMAGECOLLECTION02 = 46
    TILE_TEMPLATE_PEEKIMAGECOLLECTION03 = 47
    TILE_TEMPLATE_PEEKIMAGECOLLECTION04 = 48
    TILE_TEMPLATE_PEEKIMAGECOLLECTION05 = 49
    TILE_TEMPLATE_PEEKIMAGECOLLECTION06 = 50
    TILE_TEMPLATE_SMALLIMAGEANDTEXT01 = 51
    TILE_TEMPLATE_SMALLIMAGEANDTEXT02 = 52
    TILE_TEMPLATE_SMALLIMAGEANDTEXT03 = 53
    TILE_TEMPLATE_SMALLIMAGEANDTEXT04 = 54
    TILE_TEMPLATE_SMALLIMAGEANDTEXT05 = 55
    TILE_TEMPLATE_METROCOUNTQUEUE = 56
    TILE_TEMPLATE_SEARCH = 57
    TILE_TEMPLATE_TILEFLYOUT01 = 58
    TILE_TEMPLATE_FOLDER = 59
    TILE_TEMPLATE_ALL = 100
  end

  enum PM_APP_GENRE : Int32
    PM_APP_GENRE_GAMES = 0
    PM_APP_GENRE_OTHER = 1
    PM_APP_GENRE_INVALID = 2
  end

  enum PM_APPLICATION_INSTALL_TYPE : Int32
    PM_APPLICATION_INSTALL_NORMAL = 0
    PM_APPLICATION_INSTALL_IN_ROM = 1
    PM_APPLICATION_INSTALL_PA = 2
    PM_APPLICATION_INSTALL_DEBUG = 3
    PM_APPLICATION_INSTALL_ENTERPRISE = 4
    PM_APPLICATION_INSTALL_INVALID = 5
  end

  enum PM_APPLICATION_STATE : Int32
    PM_APPLICATION_STATE_MIN = 0
    PM_APPLICATION_STATE_INSTALLED = 1
    PM_APPLICATION_STATE_INSTALLING = 2
    PM_APPLICATION_STATE_UPDATING = 3
    PM_APPLICATION_STATE_UNINSTALLING = 4
    PM_APPLICATION_STATE_LICENSE_UPDATING = 5
    PM_APPLICATION_STATE_MOVING = 6
    PM_APPLICATION_STATE_DISABLED_SD_CARD = 7
    PM_APPLICATION_STATE_DISABLED_ENTERPRISE = 8
    PM_APPLICATION_STATE_DISABLED_BACKING_UP = 9
    PM_APPLICATION_STATE_DISABLED_MDIL_BINDING = 10
    PM_APPLICATION_STATE_MAX = 10
    PM_APPLICATION_STATE_INVALID = 11
  end

  enum PM_APPLICATION_HUBTYPE : Int32
    PM_APPLICATION_HUBTYPE_NONMUSIC = 0
    PM_APPLICATION_HUBTYPE_MUSIC = 1
    PM_APPLICATION_HUBTYPE_INVALID = 2
  end

  enum PM_TILE_HUBTYPE : Int32
    PM_TILE_HUBTYPE_MUSIC = 1
    PM_TILE_HUBTYPE_MOSETTINGS = 268435456
    PM_TILE_HUBTYPE_GAMES = 536870912
    PM_TILE_HUBTYPE_APPLIST = 1073741824
    PM_TILE_HUBTYPE_STARTMENU = -2147483648
    PM_TILE_HUBTYPE_LOCKSCREEN = 16777216
    PM_TILE_HUBTYPE_KIDZONE = 33554432
    PM_TILE_HUBTYPE_CACHED = 67108864
    PM_TILE_HUBTYPE_INVALID = 67108865
  end

  enum PM_STARTTILE_TYPE : Int32
    PM_STARTTILE_TYPE_PRIMARY = 1
    PM_STARTTILE_TYPE_SECONDARY = 2
    PM_STARTTILE_TYPE_APPLIST = 3
    PM_STARTTILE_TYPE_APPLISTPRIMARY = 4
    PM_STARTTILE_TYPE_INVALID = 5
  end

  enum PM_TASK_TYPE : Int32
    PM_TASK_TYPE_NORMAL = 0
    PM_TASK_TYPE_DEFAULT = 1
    PM_TASK_TYPE_SETTINGS = 2
    PM_TASK_TYPE_BACKGROUNDSERVICEAGENT = 3
    PM_TASK_TYPE_BACKGROUNDWORKER = 4
    PM_TASK_TYPE_INVALID = 5
  end

  enum PACKMAN_RUNTIME : Int32
    PACKMAN_RUNTIME_NATIVE = 1
    PACKMAN_RUNTIME_SILVERLIGHTMOBILE = 2
    PACKMAN_RUNTIME_XNA = 3
    PACKMAN_RUNTIME_MODERN_NATIVE = 4
    PACKMAN_RUNTIME_JUPITER = 5
    PACKMAN_RUNTIME_INVALID = 6
  end

  enum PM_ACTIVATION_POLICY : Int32
    PM_ACTIVATION_POLICY_RESUME = 0
    PM_ACTIVATION_POLICY_RESUMESAMEPARAMS = 1
    PM_ACTIVATION_POLICY_REPLACE = 2
    PM_ACTIVATION_POLICY_REPLACESAMEPARAMS = 3
    PM_ACTIVATION_POLICY_MULTISESSION = 4
    PM_ACTIVATION_POLICY_REPLACE_IGNOREFOREGROUND = 5
    PM_ACTIVATION_POLICY_UNKNOWN = 6
    PM_ACTIVATION_POLICY_INVALID = 7
  end

  enum PM_TASK_TRANSITION : Int32
    PM_TASK_TRANSITION_DEFAULT = 0
    PM_TASK_TRANSITION_NONE = 1
    PM_TASK_TRANSITION_TURNSTILE = 2
    PM_TASK_TRANSITION_SLIDE = 3
    PM_TASK_TRANSITION_SWIVEL = 4
    PM_TASK_TRANSITION_READERBOARD = 5
    PM_TASK_TRANSITION_CUSTOM = 6
    PM_TASK_TRANSITION_INVALID = 7
  end

  enum PM_ENUM_APP_FILTER : Int32
    PM_APP_FILTER_ALL = 0
    PM_APP_FILTER_VISIBLE = 1
    PM_APP_FILTER_GENRE = 2
    PM_APP_FILTER_NONGAMES = 3
    PM_APP_FILTER_HUBTYPE = 4
    PM_APP_FILTER_PINABLEONKIDZONE = 5
    PM_APP_FILTER_ALL_INCLUDE_MODERN = 6
    PM_APP_FILTER_FRAMEWORK = 7
    PM_APP_FILTER_MAX = 8
  end

  enum PM_ENUM_TILE_FILTER : Int32
    PM_TILE_FILTER_APPLIST = 8
    PM_TILE_FILTER_PINNED = 9
    PM_TILE_FILTER_HUBTYPE = 10
    PM_TILE_FILTER_APP_ALL = 11
    PM_TILE_FILTER_MAX = 12
  end

  enum PM_ENUM_TASK_FILTER : Int32
    PM_TASK_FILTER_APP_ALL = 12
    PM_TASK_FILTER_TASK_TYPE = 13
    PM_TASK_FILTER_DEHYD_SUPRESSING = 14
    PM_TASK_FILTER_APP_TASK_TYPE = 15
    PM_TASK_FILTER_BGEXECUTION = 16
    PM_TASK_FILTER_MAX = 17
  end

  enum PM_ENUM_EXTENSION_FILTER : Int32
    PM_ENUM_EXTENSION_FILTER_BY_CONSUMER = 17
    PM_ENUM_EXTENSION_FILTER_APPCONNECT = 17
    PM_ENUM_EXTENSION_FILTER_PROTOCOL_ALL = 18
    PM_ENUM_EXTENSION_FILTER_FTASSOC_FILETYPE_ALL = 19
    PM_ENUM_EXTENSION_FILTER_FTASSOC_CONTENTTYPE_ALL = 20
    PM_ENUM_EXTENSION_FILTER_FTASSOC_APPLICATION_ALL = 21
    PM_ENUM_EXTENSION_FILTER_SHARETARGET_ALL = 22
    PM_ENUM_EXTENSION_FILTER_FILEOPENPICKER_ALL = 23
    PM_ENUM_EXTENSION_FILTER_FILESAVEPICKER_ALL = 24
    PM_ENUM_EXTENSION_FILTER_CACHEDFILEUPDATER_ALL = 25
    PM_ENUM_EXTENSION_FILTER_MAX = 26
  end

  enum PM_ENUM_BSA_FILTER : Int32
    PM_ENUM_BSA_FILTER_ALL = 26
    PM_ENUM_BSA_FILTER_BY_TASKID = 27
    PM_ENUM_BSA_FILTER_BY_PRODUCTID = 28
    PM_ENUM_BSA_FILTER_BY_PERIODIC = 29
    PM_ENUM_BSA_FILTER_BY_ALL_LAUNCHONBOOT = 30
    PM_ENUM_BSA_FILTER_MAX = 31
  end

  enum PM_ENUM_BW_FILTER : Int32
    PM_ENUM_BW_FILTER_BOOTWORKER_ALL = 31
    PM_ENUM_BW_FILTER_BY_TASKID = 32
    PM_ENUM_BW_FILTER_MAX = 33
  end

  enum PM_LIVETILE_RECURRENCE_TYPE : Int32
    PM_LIVETILE_RECURRENCE_TYPE_INSTANT = 0
    PM_LIVETILE_RECURRENCE_TYPE_ONETIME = 1
    PM_LIVETILE_RECURRENCE_TYPE_INTERVAL = 2
    PM_LIVETILE_RECURRENCE_TYPE_MAX = 2
  end

  enum PM_TILE_SIZE : Int32
    PM_TILE_SIZE_SMALL = 0
    PM_TILE_SIZE_MEDIUM = 1
    PM_TILE_SIZE_LARGE = 2
    PM_TILE_SIZE_SQUARE310X310 = 3
    PM_TILE_SIZE_TALL150X310 = 4
    PM_TILE_SIZE_INVALID = 5
  end

  enum PM_LOGO_SIZE : Int32
    PM_LOGO_SIZE_SMALL = 0
    PM_LOGO_SIZE_MEDIUM = 1
    PM_LOGO_SIZE_LARGE = 2
    PM_LOGO_SIZE_INVALID = 3
  end

  enum ACTCTX_REQUESTED_RUN_LEVEL : Int32
    ACTCTX_RUN_LEVEL_UNSPECIFIED = 0
    ACTCTX_RUN_LEVEL_AS_INVOKER = 1
    ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE = 2
    ACTCTX_RUN_LEVEL_REQUIRE_ADMIN = 3
    ACTCTX_RUN_LEVEL_NUMBERS = 4
  end

  enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE : Int32
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN = 0
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS = 1
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION = 2
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MAXVERSIONTESTED = 3
  end

  union PM_ENUM_FILTER_FilterParameter_e__Union
    dummy : Int32
    genre : PM_APP_GENRE
    app_hub_type : PM_APPLICATION_HUBTYPE
    hub_type : PM_TILE_HUBTYPE
    tasktype : PM_TASK_TYPE
    task_product_id : Guid
    tile_product_id : Guid
    app_task_type : Tagapptasktype
    consumer : PM_EXTENSIONCONSUMER
    bsa_task : PM_BSATASKID
    bsa_product_id : Guid
    bw_task : PM_BWTASKID
    protocol_name : UInt8*
    file_type : UInt8*
    content_type : UInt8*
    app_supported_file_ext_pid : Guid
    share_target_file_type : UInt8*
  end
  union PATCH_OLD_FILE_INFO_Anonymous_e__Union
    old_file_name_a : PSTR
    old_file_name_w : LibC::LPWSTR
    old_file_handle : LibC::HANDLE
  end
  union DELTA_INPUT_Anonymous_e__Union
    lpc_start : Void*
    lp_start : Void*
  end

  struct PMSIHANDLE
    m_h : MSIHANDLE
  end
  struct MSIPATCHSEQUENCEINFOA
    sz_patch_data : PSTR
    e_patch_data_type : MSIPATCHDATATYPE
    dw_order : UInt32
    u_status : UInt32
  end
  struct MSIPATCHSEQUENCEINFOW
    sz_patch_data : LibC::LPWSTR
    e_patch_data_type : MSIPATCHDATATYPE
    dw_order : UInt32
    u_status : UInt32
  end
  struct MSIFILEHASHINFO
    dw_file_hash_info_size : UInt32
    dw_data : UInt32[4]*
  end
  struct ASSEMBLY_INFO
    cb_assembly_info : UInt32
    dw_assembly_flags : UInt32
    uli_assembly_size_in_kb : ULARGE_INTEGER
    psz_current_assembly_path_buf : LibC::LPWSTR
    cch_buf : UInt32
  end
  struct FUSION_INSTALL_REFERENCE
    cb_size : UInt32
    dw_flags : UInt32
    guid_scheme : Guid
    sz_identifier : LibC::LPWSTR
    sz_non_cannonical_data : LibC::LPWSTR
  end
  struct PROTECTED_FILE_DATA
    file_name : Char[260]*
    file_number : UInt32
  end
  struct Tagapptasktype
    product_id : Guid
    task_type : PM_TASK_TYPE
  end
  struct PM_EXTENSIONCONSUMER
    consumer_pid : Guid
    extension_id : UInt8*
  end
  struct PM_BSATASKID
    product_id : Guid
    task_id : UInt8*
  end
  struct PM_BWTASKID
    product_id : Guid
    task_id : UInt8*
  end
  struct PM_ENUM_FILTER
    filter_type : Int32
    filter_parameter : PM_ENUM_FILTER_FilterParameter_e__Union
  end
  struct PM_STARTAPPBLOB
    cb_size : UInt32
    product_id : Guid
    app_title : UInt8*
    icon_path : UInt8*
    is_uninstallable : LibC::BOOL
    app_install_type : PM_APPLICATION_INSTALL_TYPE
    instance_id : Guid
    state : PM_APPLICATION_STATE
    is_modern : LibC::BOOL
    is_modern_light_up : LibC::BOOL
    light_up_support_mask : UInt16
  end
  struct PM_INVOCATIONINFO
    uri_base_or_aumid : UInt8*
    uri_fragment_or_args : UInt8*
  end
  struct PM_STARTTILEBLOB
    cb_size : UInt32
    product_id : Guid
    tile_id : UInt8*
    template_type : TILE_TEMPLATE_TYPE
    hub_position : UInt32[32]*
    hub_visibility_bitmask : UInt32
    is_default : LibC::BOOL
    tile_type : PM_STARTTILE_TYPE
    pb_prop_blob : UInt8*
    cb_prop_blob : UInt32
    is_restoring : LibC::BOOL
    is_modern : LibC::BOOL
    invocation_info : PM_INVOCATIONINFO
  end
  struct PM_INSTALLINFO
    product_id : Guid
    package_path : UInt8*
    instance_id : Guid
    pb_license : UInt8*
    cb_license : UInt32
    is_uninstall_disabled : LibC::BOOL
    deployment_options : UInt32
    offer_id : Guid
    marketplace_app_version : UInt8*
  end
  struct PM_UPDATEINFO_LEGACY
    product_id : Guid
    package_path : UInt8*
    instance_id : Guid
    pb_license : UInt8*
    cb_license : UInt32
    marketplace_app_version : UInt8*
  end
  struct PM_UPDATEINFO
    product_id : Guid
    package_path : UInt8*
    instance_id : Guid
    pb_license : UInt8*
    cb_license : UInt32
    marketplace_app_version : UInt8*
    deployment_options : UInt32
  end
  struct PATCH_IGNORE_RANGE
    offset_in_old_file : UInt32
    length_in_bytes : UInt32
  end
  struct PATCH_RETAIN_RANGE
    offset_in_old_file : UInt32
    length_in_bytes : UInt32
    offset_in_new_file : UInt32
  end
  struct PATCH_OLD_FILE_INFO_A
    size_of_this_struct : UInt32
    old_file_name : PSTR
    ignore_range_count : UInt32
    ignore_range_array : PATCH_IGNORE_RANGE*
    retain_range_count : UInt32
    retain_range_array : PATCH_RETAIN_RANGE*
  end
  struct PATCH_OLD_FILE_INFO_W
    size_of_this_struct : UInt32
    old_file_name : LibC::LPWSTR
    ignore_range_count : UInt32
    ignore_range_array : PATCH_IGNORE_RANGE*
    retain_range_count : UInt32
    retain_range_array : PATCH_RETAIN_RANGE*
  end
  struct PATCH_OLD_FILE_INFO_H
    size_of_this_struct : UInt32
    old_file_handle : LibC::HANDLE
    ignore_range_count : UInt32
    ignore_range_array : PATCH_IGNORE_RANGE*
    retain_range_count : UInt32
    retain_range_array : PATCH_RETAIN_RANGE*
  end
  struct PATCH_OLD_FILE_INFO
    size_of_this_struct : UInt32
    anonymous : PATCH_OLD_FILE_INFO_Anonymous_e__Union
    ignore_range_count : UInt32
    ignore_range_array : PATCH_IGNORE_RANGE*
    retain_range_count : UInt32
    retain_range_array : PATCH_RETAIN_RANGE*
  end
  struct PATCH_INTERLEAVE_MAP
    count_ranges : UInt32
    range : PATCH_INTERLEAVE_MAP_Anonymous_e__Struct[0]*
  end
  struct PATCH_INTERLEAVE_MAP_Anonymous_e__Struct
    old_offset : UInt32
    old_length : UInt32
    new_length : UInt32
  end
  struct PATCH_OPTION_DATA
    size_of_this_struct : UInt32
    symbol_option_flags : UInt32
    new_file_symbol_path : PSTR
    old_file_symbol_path_array : PSTR*
    extended_option_flags : UInt32
    sym_load_callback : PPATCH_SYMLOAD_CALLBACK
    sym_load_context : Void*
    interleave_map_array : PATCH_INTERLEAVE_MAP**
    max_lzx_window_size : UInt32
  end
  struct DELTA_INPUT
    anonymous : DELTA_INPUT_Anonymous_e__Union
    u_size : LibC::UINT_PTR
    editable : LibC::BOOL
  end
  struct DELTA_OUTPUT
    lp_start : Void*
    u_size : LibC::UINT_PTR
  end
  struct DELTA_HASH
    hash_size : UInt32
    hash_value : UInt8[32]*
  end
  struct DELTA_HEADER_INFO
    file_type_set : Int64
    file_type : Int64
    flags : Int64
    target_size : LibC::UINT_PTR
    target_file_time : FILETIME
    target_hash_alg_id : UInt32
    target_hash : DELTA_HASH
  end
  struct ACTIVATION_CONTEXT_QUERY_INDEX
    ul_assembly_index : UInt32
    ul_file_index_in_assembly : UInt32
  end
  struct ASSEMBLY_FILE_DETAILED_INFORMATION
    ul_flags : UInt32
    ul_filename_length : UInt32
    ul_path_length : UInt32
    lp_file_name : LibC::LPWSTR
    lp_file_path : LibC::LPWSTR
  end
  struct ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
    ul_flags : UInt32
    ul_encoded_assembly_identity_length : UInt32
    ul_manifest_path_type : UInt32
    ul_manifest_path_length : UInt32
    li_manifest_last_write_time : LARGE_INTEGER
    ul_policy_path_type : UInt32
    ul_policy_path_length : UInt32
    li_policy_last_write_time : LARGE_INTEGER
    ul_metadata_satellite_roster_index : UInt32
    ul_manifest_version_major : UInt32
    ul_manifest_version_minor : UInt32
    ul_policy_version_major : UInt32
    ul_policy_version_minor : UInt32
    ul_assembly_directory_name_length : UInt32
    lp_assembly_encoded_assembly_identity : LibC::LPWSTR
    lp_assembly_manifest_path : LibC::LPWSTR
    lp_assembly_policy_path : LibC::LPWSTR
    lp_assembly_directory_name : LibC::LPWSTR
    ul_file_count : UInt32
  end
  struct ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION
    ul_flags : UInt32
    run_level : ACTCTX_REQUESTED_RUN_LEVEL
    ui_access : UInt32
  end
  struct COMPATIBILITY_CONTEXT_ELEMENT
    id : Guid
    type : ACTCTX_COMPATIBILITY_ELEMENT_TYPE
    max_version_tested : UInt64
  end
  struct ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION
    element_count : UInt32
    elements : COMPATIBILITY_CONTEXT_ELEMENT[0]*
  end
  struct ACTIVATION_CONTEXT_DETAILED_INFORMATION
    dw_flags : UInt32
    ul_format_version : UInt32
    ul_assembly_count : UInt32
    ul_root_manifest_path_type : UInt32
    ul_root_manifest_path_chars : UInt32
    ul_root_configuration_path_type : UInt32
    ul_root_configuration_path_chars : UInt32
    ul_app_dir_path_type : UInt32
    ul_app_dir_path_chars : UInt32
    lp_root_manifest_path : LibC::LPWSTR
    lp_root_configuration_path : LibC::LPWSTR
    lp_app_dir_path : LibC::LPWSTR
  end
  struct ACTCTXA
    cb_size : UInt32
    dw_flags : UInt32
    lp_source : PSTR
    w_processor_architecture : UInt16
    w_lang_id : UInt16
    lp_assembly_directory : PSTR
    lp_resource_name : PSTR
    lp_application_name : PSTR
    h_module : HINSTANCE
  end
  struct ACTCTXW
    cb_size : UInt32
    dw_flags : UInt32
    lp_source : LibC::LPWSTR
    w_processor_architecture : UInt16
    w_lang_id : UInt16
    lp_assembly_directory : LibC::LPWSTR
    lp_resource_name : LibC::LPWSTR
    lp_application_name : LibC::LPWSTR
    h_module : HINSTANCE
  end
  struct ACTCTX_SECTION_KEYED_DATA
    cb_size : UInt32
    ul_data_format_version : UInt32
    lp_data : Void*
    ul_length : UInt32
    lp_section_global_data : Void*
    ul_section_global_data_length : UInt32
    lp_section_base : Void*
    ul_section_total_length : UInt32
    h_act_ctx : LibC::HANDLE
    ul_assembly_roster_index : UInt32
    ul_flags : UInt32
    assembly_metadata : ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA
  end


  struct IValidateVTbl
    query_interface : Proc(IValidate*, Guid*, Void**, HRESULT)
    add_ref : Proc(IValidate*, UInt32)
    release : Proc(IValidate*, UInt32)
    open_database : Proc(IValidate*, LibC::LPWSTR, HRESULT)
    open_cub : Proc(IValidate*, LibC::LPWSTR, HRESULT)
    close_database : Proc(IValidate*, HRESULT)
    close_cub : Proc(IValidate*, HRESULT)
    set_display : Proc(IValidate*, LPDISPLAYVAL, Void*, HRESULT)
    set_status : Proc(IValidate*, LPEVALCOMCALLBACK, Void*, HRESULT)
    validate : Proc(IValidate*, LibC::LPWSTR, HRESULT)
  end

  IValidate_GUID = LibC::GUID.new("e482e5c6-e31e-4143-a2e6-dbc3d8e4b8d3")
  CLSID_IValidate = "e482e5c6-e31e-4143-a2e6-dbc3d8e4b8d3"
  struct IValidate
    lpVtbl : IValidateVTbl*
  end

  struct IEnumMsmStringVTbl
    query_interface : Proc(IEnumMsmString*, Guid*, Void**, HRESULT)
    add_ref : Proc(IEnumMsmString*, UInt32)
    release : Proc(IEnumMsmString*, UInt32)
    next : Proc(IEnumMsmString*, UInt32, UInt8**, UInt32*, HRESULT)
    skip : Proc(IEnumMsmString*, UInt32, HRESULT)
    reset : Proc(IEnumMsmString*, HRESULT)
    clone : Proc(IEnumMsmString*, IEnumMsmString*, HRESULT)
  end

  IEnumMsmString_GUID = LibC::GUID.new("0adda826-2c26-11d2-ad65-00a0c9af11a6")
  CLSID_IEnumMsmString = "0adda826-2c26-11d2-ad65-00a0c9af11a6"
  struct IEnumMsmString
    lpVtbl : IEnumMsmStringVTbl*
  end

  struct IMsmStringsVTbl
    query_interface : Proc(IMsmStrings*, Guid*, Void**, HRESULT)
    add_ref : Proc(IMsmStrings*, UInt32)
    release : Proc(IMsmStrings*, UInt32)
    get_type_info_count : Proc(IMsmStrings*, UInt32*, HRESULT)
    get_type_info : Proc(IMsmStrings*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IMsmStrings*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IMsmStrings*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_item : Proc(IMsmStrings*, Int32, UInt8**, HRESULT)
    get_count : Proc(IMsmStrings*, Int32*, HRESULT)
    get__new_enum : Proc(IMsmStrings*, IUnknown*, HRESULT)
  end

  IMsmStrings_GUID = LibC::GUID.new("0adda827-2c26-11d2-ad65-00a0c9af11a6")
  CLSID_IMsmStrings = "0adda827-2c26-11d2-ad65-00a0c9af11a6"
  struct IMsmStrings
    lpVtbl : IMsmStringsVTbl*
  end

  struct IMsmErrorVTbl
    query_interface : Proc(IMsmError*, Guid*, Void**, HRESULT)
    add_ref : Proc(IMsmError*, UInt32)
    release : Proc(IMsmError*, UInt32)
    get_type_info_count : Proc(IMsmError*, UInt32*, HRESULT)
    get_type_info : Proc(IMsmError*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IMsmError*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IMsmError*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_type : Proc(IMsmError*, Msmerrortype*, HRESULT)
    get_path : Proc(IMsmError*, UInt8**, HRESULT)
    get_language : Proc(IMsmError*, Int16*, HRESULT)
    get_database_table : Proc(IMsmError*, UInt8**, HRESULT)
    get_database_keys : Proc(IMsmError*, IMsmStrings*, HRESULT)
    get_module_table : Proc(IMsmError*, UInt8**, HRESULT)
    get_module_keys : Proc(IMsmError*, IMsmStrings*, HRESULT)
  end

  IMsmError_GUID = LibC::GUID.new("0adda828-2c26-11d2-ad65-00a0c9af11a6")
  CLSID_IMsmError = "0adda828-2c26-11d2-ad65-00a0c9af11a6"
  struct IMsmError
    lpVtbl : IMsmErrorVTbl*
  end

  struct IEnumMsmErrorVTbl
    query_interface : Proc(IEnumMsmError*, Guid*, Void**, HRESULT)
    add_ref : Proc(IEnumMsmError*, UInt32)
    release : Proc(IEnumMsmError*, UInt32)
    next : Proc(IEnumMsmError*, UInt32, IMsmError*, UInt32*, HRESULT)
    skip : Proc(IEnumMsmError*, UInt32, HRESULT)
    reset : Proc(IEnumMsmError*, HRESULT)
    clone : Proc(IEnumMsmError*, IEnumMsmError*, HRESULT)
  end

  IEnumMsmError_GUID = LibC::GUID.new("0adda829-2c26-11d2-ad65-00a0c9af11a6")
  CLSID_IEnumMsmError = "0adda829-2c26-11d2-ad65-00a0c9af11a6"
  struct IEnumMsmError
    lpVtbl : IEnumMsmErrorVTbl*
  end

  struct IMsmErrorsVTbl
    query_interface : Proc(IMsmErrors*, Guid*, Void**, HRESULT)
    add_ref : Proc(IMsmErrors*, UInt32)
    release : Proc(IMsmErrors*, UInt32)
    get_type_info_count : Proc(IMsmErrors*, UInt32*, HRESULT)
    get_type_info : Proc(IMsmErrors*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IMsmErrors*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IMsmErrors*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_item : Proc(IMsmErrors*, Int32, IMsmError*, HRESULT)
    get_count : Proc(IMsmErrors*, Int32*, HRESULT)
    get__new_enum : Proc(IMsmErrors*, IUnknown*, HRESULT)
  end

  IMsmErrors_GUID = LibC::GUID.new("0adda82a-2c26-11d2-ad65-00a0c9af11a6")
  CLSID_IMsmErrors = "0adda82a-2c26-11d2-ad65-00a0c9af11a6"
  struct IMsmErrors
    lpVtbl : IMsmErrorsVTbl*
  end

  struct IMsmDependencyVTbl
    query_interface : Proc(IMsmDependency*, Guid*, Void**, HRESULT)
    add_ref : Proc(IMsmDependency*, UInt32)
    release : Proc(IMsmDependency*, UInt32)
    get_type_info_count : Proc(IMsmDependency*, UInt32*, HRESULT)
    get_type_info : Proc(IMsmDependency*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IMsmDependency*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IMsmDependency*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_module : Proc(IMsmDependency*, UInt8**, HRESULT)
    get_language : Proc(IMsmDependency*, Int16*, HRESULT)
    get_version : Proc(IMsmDependency*, UInt8**, HRESULT)
  end

  IMsmDependency_GUID = LibC::GUID.new("0adda82b-2c26-11d2-ad65-00a0c9af11a6")
  CLSID_IMsmDependency = "0adda82b-2c26-11d2-ad65-00a0c9af11a6"
  struct IMsmDependency
    lpVtbl : IMsmDependencyVTbl*
  end

  struct IEnumMsmDependencyVTbl
    query_interface : Proc(IEnumMsmDependency*, Guid*, Void**, HRESULT)
    add_ref : Proc(IEnumMsmDependency*, UInt32)
    release : Proc(IEnumMsmDependency*, UInt32)
    next : Proc(IEnumMsmDependency*, UInt32, IMsmDependency*, UInt32*, HRESULT)
    skip : Proc(IEnumMsmDependency*, UInt32, HRESULT)
    reset : Proc(IEnumMsmDependency*, HRESULT)
    clone : Proc(IEnumMsmDependency*, IEnumMsmDependency*, HRESULT)
  end

  IEnumMsmDependency_GUID = LibC::GUID.new("0adda82c-2c26-11d2-ad65-00a0c9af11a6")
  CLSID_IEnumMsmDependency = "0adda82c-2c26-11d2-ad65-00a0c9af11a6"
  struct IEnumMsmDependency
    lpVtbl : IEnumMsmDependencyVTbl*
  end

  struct IMsmDependenciesVTbl
    query_interface : Proc(IMsmDependencies*, Guid*, Void**, HRESULT)
    add_ref : Proc(IMsmDependencies*, UInt32)
    release : Proc(IMsmDependencies*, UInt32)
    get_type_info_count : Proc(IMsmDependencies*, UInt32*, HRESULT)
    get_type_info : Proc(IMsmDependencies*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IMsmDependencies*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IMsmDependencies*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_item : Proc(IMsmDependencies*, Int32, IMsmDependency*, HRESULT)
    get_count : Proc(IMsmDependencies*, Int32*, HRESULT)
    get__new_enum : Proc(IMsmDependencies*, IUnknown*, HRESULT)
  end

  IMsmDependencies_GUID = LibC::GUID.new("0adda82d-2c26-11d2-ad65-00a0c9af11a6")
  CLSID_IMsmDependencies = "0adda82d-2c26-11d2-ad65-00a0c9af11a6"
  struct IMsmDependencies
    lpVtbl : IMsmDependenciesVTbl*
  end

  struct IMsmMergeVTbl
    query_interface : Proc(IMsmMerge*, Guid*, Void**, HRESULT)
    add_ref : Proc(IMsmMerge*, UInt32)
    release : Proc(IMsmMerge*, UInt32)
    get_type_info_count : Proc(IMsmMerge*, UInt32*, HRESULT)
    get_type_info : Proc(IMsmMerge*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IMsmMerge*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IMsmMerge*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    open_database : Proc(IMsmMerge*, UInt8*, HRESULT)
    open_module : Proc(IMsmMerge*, UInt8*, Int16, HRESULT)
    close_database : Proc(IMsmMerge*, Int16, HRESULT)
    close_module : Proc(IMsmMerge*, HRESULT)
    open_log : Proc(IMsmMerge*, UInt8*, HRESULT)
    close_log : Proc(IMsmMerge*, HRESULT)
    log : Proc(IMsmMerge*, UInt8*, HRESULT)
    get_errors : Proc(IMsmMerge*, IMsmErrors*, HRESULT)
    get_dependencies : Proc(IMsmMerge*, IMsmDependencies*, HRESULT)
    merge : Proc(IMsmMerge*, UInt8*, UInt8*, HRESULT)
    connect : Proc(IMsmMerge*, UInt8*, HRESULT)
    extract_cab : Proc(IMsmMerge*, UInt8*, HRESULT)
    extract_files : Proc(IMsmMerge*, UInt8*, HRESULT)
  end

  IMsmMerge_GUID = LibC::GUID.new("0adda82e-2c26-11d2-ad65-00a0c9af11a6")
  CLSID_IMsmMerge = "0adda82e-2c26-11d2-ad65-00a0c9af11a6"
  struct IMsmMerge
    lpVtbl : IMsmMergeVTbl*
  end

  struct IMsmGetFilesVTbl
    query_interface : Proc(IMsmGetFiles*, Guid*, Void**, HRESULT)
    add_ref : Proc(IMsmGetFiles*, UInt32)
    release : Proc(IMsmGetFiles*, UInt32)
    get_type_info_count : Proc(IMsmGetFiles*, UInt32*, HRESULT)
    get_type_info : Proc(IMsmGetFiles*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IMsmGetFiles*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IMsmGetFiles*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_module_files : Proc(IMsmGetFiles*, IMsmStrings*, HRESULT)
  end

  IMsmGetFiles_GUID = LibC::GUID.new("7041ae26-2d78-11d2-888a-00a0c981b015")
  CLSID_IMsmGetFiles = "7041ae26-2d78-11d2-888a-00a0c981b015"
  struct IMsmGetFiles
    lpVtbl : IMsmGetFilesVTbl*
  end

  struct IAssemblyNameVTbl
    query_interface : Proc(IAssemblyName*, Guid*, Void**, HRESULT)
    add_ref : Proc(IAssemblyName*, UInt32)
    release : Proc(IAssemblyName*, UInt32)
    set_property : Proc(IAssemblyName*, UInt32, Void*, UInt32, HRESULT)
    get_property : Proc(IAssemblyName*, UInt32, Void*, UInt32*, HRESULT)
    finalize : Proc(IAssemblyName*, HRESULT)
    get_display_name : Proc(IAssemblyName*, Char*, UInt32*, UInt32, HRESULT)
    reserved : Proc(IAssemblyName*, Guid*, IUnknown, IUnknown, LibC::LPWSTR, Int64, Void*, UInt32, Void**, HRESULT)
    get_name : Proc(IAssemblyName*, UInt32*, Char*, HRESULT)
    get_version : Proc(IAssemblyName*, UInt32*, UInt32*, HRESULT)
    is_equal : Proc(IAssemblyName*, IAssemblyName, UInt32, HRESULT)
    clone : Proc(IAssemblyName*, IAssemblyName*, HRESULT)
  end

  IAssemblyName_GUID = LibC::GUID.new("cd193bc0-b4bc-11d2-9833-00c04fc31d2e")
  CLSID_IAssemblyName = "cd193bc0-b4bc-11d2-9833-00c04fc31d2e"
  struct IAssemblyName
    lpVtbl : IAssemblyNameVTbl*
  end

  struct IAssemblyCacheItemVTbl
    query_interface : Proc(IAssemblyCacheItem*, Guid*, Void**, HRESULT)
    add_ref : Proc(IAssemblyCacheItem*, UInt32)
    release : Proc(IAssemblyCacheItem*, UInt32)
    create_stream : Proc(IAssemblyCacheItem*, UInt32, LibC::LPWSTR, UInt32, UInt32, IStream*, ULARGE_INTEGER*, HRESULT)
    commit : Proc(IAssemblyCacheItem*, UInt32, UInt32*, HRESULT)
    abort_item : Proc(IAssemblyCacheItem*, HRESULT)
  end

  IAssemblyCacheItem_GUID = LibC::GUID.new("9e3aaeb4-d1cd-11d2-bab9-00c04f8eceae")
  CLSID_IAssemblyCacheItem = "9e3aaeb4-d1cd-11d2-bab9-00c04f8eceae"
  struct IAssemblyCacheItem
    lpVtbl : IAssemblyCacheItemVTbl*
  end

  struct IAssemblyCacheVTbl
    query_interface : Proc(IAssemblyCache*, Guid*, Void**, HRESULT)
    add_ref : Proc(IAssemblyCache*, UInt32)
    release : Proc(IAssemblyCache*, UInt32)
    uninstall_assembly : Proc(IAssemblyCache*, UInt32, LibC::LPWSTR, FUSION_INSTALL_REFERENCE*, IASSEMBLYCACHE_UNINSTALL_DISPOSITION*, HRESULT)
    query_assembly_info : Proc(IAssemblyCache*, QUERYASMINFO_FLAGS, LibC::LPWSTR, ASSEMBLY_INFO*, HRESULT)
    create_assembly_cache_item : Proc(IAssemblyCache*, UInt32, Void*, IAssemblyCacheItem*, LibC::LPWSTR, HRESULT)
    reserved : Proc(IAssemblyCache*, IUnknown*, HRESULT)
    install_assembly : Proc(IAssemblyCache*, UInt32, LibC::LPWSTR, FUSION_INSTALL_REFERENCE*, HRESULT)
  end

  IAssemblyCache_GUID = LibC::GUID.new("e707dcde-d1cd-11d2-bab9-00c04f8eceae")
  CLSID_IAssemblyCache = "e707dcde-d1cd-11d2-bab9-00c04f8eceae"
  struct IAssemblyCache
    lpVtbl : IAssemblyCacheVTbl*
  end

  struct IPMApplicationInfoVTbl
    query_interface : Proc(IPMApplicationInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMApplicationInfo*, UInt32)
    release : Proc(IPMApplicationInfo*, UInt32)
    get_product_id : Proc(IPMApplicationInfo*, Guid*, HRESULT)
    get_instance_id : Proc(IPMApplicationInfo*, Guid*, HRESULT)
    get_offer_id : Proc(IPMApplicationInfo*, Guid*, HRESULT)
    get_default_task : Proc(IPMApplicationInfo*, UInt8**, HRESULT)
    get_app_title : Proc(IPMApplicationInfo*, UInt8**, HRESULT)
    get_icon_path : Proc(IPMApplicationInfo*, UInt8**, HRESULT)
    get_notification_state : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_app_install_type : Proc(IPMApplicationInfo*, PM_APPLICATION_INSTALL_TYPE*, HRESULT)
    get_state : Proc(IPMApplicationInfo*, PM_APPLICATION_STATE*, HRESULT)
    get_is_revoked : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_update_available : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_install_date : Proc(IPMApplicationInfo*, FILETIME*, HRESULT)
    get_is_uninstallable : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_is_themable : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_is_trial : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_install_path : Proc(IPMApplicationInfo*, UInt8**, HRESULT)
    get_data_root : Proc(IPMApplicationInfo*, UInt8**, HRESULT)
    get_genre : Proc(IPMApplicationInfo*, PM_APP_GENRE*, HRESULT)
    get_publisher : Proc(IPMApplicationInfo*, UInt8**, HRESULT)
    get_author : Proc(IPMApplicationInfo*, UInt8**, HRESULT)
    get_description : Proc(IPMApplicationInfo*, UInt8**, HRESULT)
    get_version : Proc(IPMApplicationInfo*, UInt8**, HRESULT)
    get_invocation_info : Proc(IPMApplicationInfo*, UInt8**, UInt8**, HRESULT)
    get_app_plat_major_version : Proc(IPMApplicationInfo*, UInt8*, HRESULT)
    get_app_plat_minor_version : Proc(IPMApplicationInfo*, UInt8*, HRESULT)
    get_publisher_id : Proc(IPMApplicationInfo*, Guid*, HRESULT)
    get_is_multi_core : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_sid : Proc(IPMApplicationInfo*, UInt8**, HRESULT)
    get_app_plat_major_version_light_up : Proc(IPMApplicationInfo*, UInt8*, HRESULT)
    get_app_plat_minor_version_light_up : Proc(IPMApplicationInfo*, UInt8*, HRESULT)
    set_update_available : Proc(IPMApplicationInfo*, LibC::BOOL, HRESULT)
    set_notification_state : Proc(IPMApplicationInfo*, LibC::BOOL, HRESULT)
    set_icon_path : Proc(IPMApplicationInfo*, UInt8*, HRESULT)
    set_uninstallable_state : Proc(IPMApplicationInfo*, LibC::BOOL, HRESULT)
    get_is_pinable_on_kid_zone : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_is_originally_pre_installed : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_is_install_on_sd : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_is_optout_on_sd : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_is_optout_backup_restore : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    set_enterprise_disabled : Proc(IPMApplicationInfo*, LibC::BOOL, HRESULT)
    set_enterprise_uninstallable : Proc(IPMApplicationInfo*, LibC::BOOL, HRESULT)
    get_enterprise_disabled : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_enterprise_uninstallable : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_is_visible_on_app_list : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_is_inbox_app : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_storage_id : Proc(IPMApplicationInfo*, Guid*, HRESULT)
    get_start_app_blob : Proc(IPMApplicationInfo*, PM_STARTAPPBLOB*, HRESULT)
    get_is_movable : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_deployment_app_enumeration_hub_filter : Proc(IPMApplicationInfo*, PM_TILE_HUBTYPE*, HRESULT)
    get_modified_date : Proc(IPMApplicationInfo*, FILETIME*, HRESULT)
    get_is_originally_restored : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_should_defer_mdil_bind : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    get_is_fully_pre_install : Proc(IPMApplicationInfo*, LibC::BOOL*, HRESULT)
    set_is_mdil_maintenance_needed : Proc(IPMApplicationInfo*, LibC::BOOL, HRESULT)
    set_title : Proc(IPMApplicationInfo*, UInt8*, HRESULT)
  end

  IPMApplicationInfo_GUID = LibC::GUID.new("50afb58a-438c-4088-9789-f8c4899829c7")
  CLSID_IPMApplicationInfo = "50afb58a-438c-4088-9789-f8c4899829c7"
  struct IPMApplicationInfo
    lpVtbl : IPMApplicationInfoVTbl*
  end

  struct IPMTilePropertyInfoVTbl
    query_interface : Proc(IPMTilePropertyInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMTilePropertyInfo*, UInt32)
    release : Proc(IPMTilePropertyInfo*, UInt32)
    get_property_id : Proc(IPMTilePropertyInfo*, UInt32*, HRESULT)
    get_property_value : Proc(IPMTilePropertyInfo*, UInt8**, HRESULT)
    set_property : Proc(IPMTilePropertyInfo*, UInt8*, HRESULT)
  end

  IPMTilePropertyInfo_GUID = LibC::GUID.new("6c2b8017-1efa-42a7-86c0-6d4b640bf528")
  CLSID_IPMTilePropertyInfo = "6c2b8017-1efa-42a7-86c0-6d4b640bf528"
  struct IPMTilePropertyInfo
    lpVtbl : IPMTilePropertyInfoVTbl*
  end

  struct IPMTilePropertyEnumeratorVTbl
    query_interface : Proc(IPMTilePropertyEnumerator*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMTilePropertyEnumerator*, UInt32)
    release : Proc(IPMTilePropertyEnumerator*, UInt32)
    get_next : Proc(IPMTilePropertyEnumerator*, IPMTilePropertyInfo*, HRESULT)
  end

  IPMTilePropertyEnumerator_GUID = LibC::GUID.new("cc4cd629-9047-4250-aac8-930e47812421")
  CLSID_IPMTilePropertyEnumerator = "cc4cd629-9047-4250-aac8-930e47812421"
  struct IPMTilePropertyEnumerator
    lpVtbl : IPMTilePropertyEnumeratorVTbl*
  end

  struct IPMTileInfoVTbl
    query_interface : Proc(IPMTileInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMTileInfo*, UInt32)
    release : Proc(IPMTileInfo*, UInt32)
    get_product_id : Proc(IPMTileInfo*, Guid*, HRESULT)
    get_tile_id : Proc(IPMTileInfo*, UInt8**, HRESULT)
    get_template_type : Proc(IPMTileInfo*, TILE_TEMPLATE_TYPE*, HRESULT)
    get_hub_pinned_state : Proc(IPMTileInfo*, PM_TILE_HUBTYPE, LibC::BOOL*, HRESULT)
    get_hub_position : Proc(IPMTileInfo*, PM_TILE_HUBTYPE, UInt32*, HRESULT)
    get_is_notified : Proc(IPMTileInfo*, LibC::BOOL*, HRESULT)
    get_is_default : Proc(IPMTileInfo*, LibC::BOOL*, HRESULT)
    get_task_id : Proc(IPMTileInfo*, UInt8**, HRESULT)
    get_tile_type : Proc(IPMTileInfo*, PM_STARTTILE_TYPE*, HRESULT)
    get_is_themable : Proc(IPMTileInfo*, LibC::BOOL*, HRESULT)
    get_property_by_id : Proc(IPMTileInfo*, UInt32, IPMTilePropertyInfo*, HRESULT)
    get_invocation_info : Proc(IPMTileInfo*, UInt8**, UInt8**, HRESULT)
    get_property_enum : Proc(IPMTileInfo*, IPMTilePropertyEnumerator*, HRESULT)
    get_hub_tile_size : Proc(IPMTileInfo*, PM_TILE_HUBTYPE, PM_TILE_SIZE*, HRESULT)
    set_hub_position : Proc(IPMTileInfo*, PM_TILE_HUBTYPE, UInt32, HRESULT)
    set_notified_state : Proc(IPMTileInfo*, LibC::BOOL, HRESULT)
    set_hub_pinned_state : Proc(IPMTileInfo*, PM_TILE_HUBTYPE, LibC::BOOL, HRESULT)
    set_hub_tile_size : Proc(IPMTileInfo*, PM_TILE_HUBTYPE, PM_TILE_SIZE, HRESULT)
    set_invocation_info : Proc(IPMTileInfo*, UInt8*, UInt8*, HRESULT)
    get_start_tile_blob : Proc(IPMTileInfo*, PM_STARTTILEBLOB*, HRESULT)
    get_is_restoring : Proc(IPMTileInfo*, LibC::BOOL*, HRESULT)
    get_is_auto_restore_disabled : Proc(IPMTileInfo*, LibC::BOOL*, HRESULT)
    set_is_restoring : Proc(IPMTileInfo*, LibC::BOOL, HRESULT)
    set_is_auto_restore_disabled : Proc(IPMTileInfo*, LibC::BOOL, HRESULT)
  end

  IPMTileInfo_GUID = LibC::GUID.new("d1604833-2b08-4001-82cd-183ad734f752")
  CLSID_IPMTileInfo = "d1604833-2b08-4001-82cd-183ad734f752"
  struct IPMTileInfo
    lpVtbl : IPMTileInfoVTbl*
  end

  struct IPMTileInfoEnumeratorVTbl
    query_interface : Proc(IPMTileInfoEnumerator*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMTileInfoEnumerator*, UInt32)
    release : Proc(IPMTileInfoEnumerator*, UInt32)
    get_next : Proc(IPMTileInfoEnumerator*, IPMTileInfo*, HRESULT)
  end

  IPMTileInfoEnumerator_GUID = LibC::GUID.new("ded83065-e462-4b2c-acb5-e39cea61c874")
  CLSID_IPMTileInfoEnumerator = "ded83065-e462-4b2c-acb5-e39cea61c874"
  struct IPMTileInfoEnumerator
    lpVtbl : IPMTileInfoEnumeratorVTbl*
  end

  struct IPMApplicationInfoEnumeratorVTbl
    query_interface : Proc(IPMApplicationInfoEnumerator*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMApplicationInfoEnumerator*, UInt32)
    release : Proc(IPMApplicationInfoEnumerator*, UInt32)
    get_next : Proc(IPMApplicationInfoEnumerator*, IPMApplicationInfo*, HRESULT)
  end

  IPMApplicationInfoEnumerator_GUID = LibC::GUID.new("0ec42a96-4d46-4dc6-a3d9-a7acaac0f5fa")
  CLSID_IPMApplicationInfoEnumerator = "0ec42a96-4d46-4dc6-a3d9-a7acaac0f5fa"
  struct IPMApplicationInfoEnumerator
    lpVtbl : IPMApplicationInfoEnumeratorVTbl*
  end

  struct IPMLiveTileJobInfoVTbl
    query_interface : Proc(IPMLiveTileJobInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMLiveTileJobInfo*, UInt32)
    release : Proc(IPMLiveTileJobInfo*, UInt32)
    get_product_id : Proc(IPMLiveTileJobInfo*, Guid*, HRESULT)
    get_tile_id : Proc(IPMLiveTileJobInfo*, UInt8**, HRESULT)
    get_next_schedule : Proc(IPMLiveTileJobInfo*, FILETIME*, HRESULT)
    set_next_schedule : Proc(IPMLiveTileJobInfo*, FILETIME, HRESULT)
    get_start_schedule : Proc(IPMLiveTileJobInfo*, FILETIME*, HRESULT)
    set_start_schedule : Proc(IPMLiveTileJobInfo*, FILETIME, HRESULT)
    get_interval_duration : Proc(IPMLiveTileJobInfo*, UInt32*, HRESULT)
    set_interval_duration : Proc(IPMLiveTileJobInfo*, UInt32, HRESULT)
    get_run_forever : Proc(IPMLiveTileJobInfo*, LibC::BOOL*, HRESULT)
    set_run_forever : Proc(IPMLiveTileJobInfo*, LibC::BOOL, HRESULT)
    get_max_run_count : Proc(IPMLiveTileJobInfo*, UInt32*, HRESULT)
    set_max_run_count : Proc(IPMLiveTileJobInfo*, UInt32, HRESULT)
    get_run_count : Proc(IPMLiveTileJobInfo*, UInt32*, HRESULT)
    set_run_count : Proc(IPMLiveTileJobInfo*, UInt32, HRESULT)
    get_recurrence_type : Proc(IPMLiveTileJobInfo*, UInt32*, HRESULT)
    set_recurrence_type : Proc(IPMLiveTileJobInfo*, UInt32, HRESULT)
    get_tile_xml : Proc(IPMLiveTileJobInfo*, UInt8**, UInt32*, HRESULT)
    set_tile_xml : Proc(IPMLiveTileJobInfo*, UInt8*, UInt32, HRESULT)
    get_url_xml : Proc(IPMLiveTileJobInfo*, UInt8**, UInt32*, HRESULT)
    set_url_xml : Proc(IPMLiveTileJobInfo*, UInt8*, UInt32, HRESULT)
    get_attempt_count : Proc(IPMLiveTileJobInfo*, UInt32*, HRESULT)
    set_attempt_count : Proc(IPMLiveTileJobInfo*, UInt32, HRESULT)
    get_download_state : Proc(IPMLiveTileJobInfo*, UInt32*, HRESULT)
    set_download_state : Proc(IPMLiveTileJobInfo*, UInt32, HRESULT)
  end

  IPMLiveTileJobInfo_GUID = LibC::GUID.new("6009a81f-4710-4697-b5f6-2208f6057b8e")
  CLSID_IPMLiveTileJobInfo = "6009a81f-4710-4697-b5f6-2208f6057b8e"
  struct IPMLiveTileJobInfo
    lpVtbl : IPMLiveTileJobInfoVTbl*
  end

  struct IPMLiveTileJobInfoEnumeratorVTbl
    query_interface : Proc(IPMLiveTileJobInfoEnumerator*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMLiveTileJobInfoEnumerator*, UInt32)
    release : Proc(IPMLiveTileJobInfoEnumerator*, UInt32)
    get_next : Proc(IPMLiveTileJobInfoEnumerator*, IPMLiveTileJobInfo*, HRESULT)
  end

  IPMLiveTileJobInfoEnumerator_GUID = LibC::GUID.new("bc042582-9415-4f36-9f99-06f104c07c03")
  CLSID_IPMLiveTileJobInfoEnumerator = "bc042582-9415-4f36-9f99-06f104c07c03"
  struct IPMLiveTileJobInfoEnumerator
    lpVtbl : IPMLiveTileJobInfoEnumeratorVTbl*
  end

  struct IPMDeploymentManagerVTbl
    query_interface : Proc(IPMDeploymentManager*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMDeploymentManager*, UInt32)
    release : Proc(IPMDeploymentManager*, UInt32)
    report_download_begin : Proc(IPMDeploymentManager*, Guid, HRESULT)
    report_download_progress : Proc(IPMDeploymentManager*, Guid, UInt16, HRESULT)
    report_download_complete : Proc(IPMDeploymentManager*, Guid, HRESULT, HRESULT)
    begin_install : Proc(IPMDeploymentManager*, PM_INSTALLINFO*, HRESULT)
    begin_update : Proc(IPMDeploymentManager*, PM_UPDATEINFO*, HRESULT)
    begin_deploy_package : Proc(IPMDeploymentManager*, PM_INSTALLINFO*, HRESULT)
    begin_update_deployed_package_legacy : Proc(IPMDeploymentManager*, PM_UPDATEINFO_LEGACY*, HRESULT)
    begin_uninstall : Proc(IPMDeploymentManager*, Guid, HRESULT)
    begin_enterprise_app_install : Proc(IPMDeploymentManager*, PM_INSTALLINFO*, HRESULT)
    begin_enterprise_app_update : Proc(IPMDeploymentManager*, PM_UPDATEINFO*, HRESULT)
    begin_update_license : Proc(IPMDeploymentManager*, Guid, Guid, UInt8*, UInt32, HRESULT)
    get_license_challenge : Proc(IPMDeploymentManager*, UInt8*, UInt8**, UInt32*, UInt8**, UInt32*, UInt8**, UInt32*, UInt8**, UInt32*, UInt8**, UInt32*, HRESULT)
    get_license_challenge_by_product_id : Proc(IPMDeploymentManager*, Guid, UInt8**, UInt32*, HRESULT)
    get_license_challenge_by_product_id2 : Proc(IPMDeploymentManager*, Guid, UInt8**, UInt32*, UInt8**, UInt32*, UInt8**, UInt32*, UInt8**, UInt32*, UInt8**, UInt32*, HRESULT)
    revoke_license : Proc(IPMDeploymentManager*, Guid, HRESULT)
    rebind_mdil_binaries : Proc(IPMDeploymentManager*, Guid, SAFEARRAY*, HRESULT)
    rebind_all_mdil_binaries : Proc(IPMDeploymentManager*, Guid, Guid, HRESULT)
    regenerate_xbf : Proc(IPMDeploymentManager*, Guid, SAFEARRAY*, HRESULT)
    generate_xbf_for_current_locale : Proc(IPMDeploymentManager*, Guid, HRESULT)
    begin_provision : Proc(IPMDeploymentManager*, Guid, UInt8*, HRESULT)
    begin_deprovision : Proc(IPMDeploymentManager*, Guid, HRESULT)
    reindex_sqlce_databases : Proc(IPMDeploymentManager*, Guid, HRESULT)
    set_applications_need_maintenance : Proc(IPMDeploymentManager*, UInt32, UInt32*, HRESULT)
    update_chamber_profile : Proc(IPMDeploymentManager*, Guid, HRESULT)
    enterprise_policy_is_application_allowed : Proc(IPMDeploymentManager*, Guid, LibC::LPWSTR, LibC::BOOL*, HRESULT)
    begin_update_deployed_package : Proc(IPMDeploymentManager*, PM_UPDATEINFO*, HRESULT)
    report_restore_cancelled : Proc(IPMDeploymentManager*, Guid, HRESULT)
    resolve_resource_string : Proc(IPMDeploymentManager*, LibC::LPWSTR, UInt8**, HRESULT)
    update_capabilities_for_modern_apps : Proc(IPMDeploymentManager*, HRESULT)
    report_download_status_update : Proc(IPMDeploymentManager*, Guid, HRESULT)
    begin_uninstall_with_options : Proc(IPMDeploymentManager*, Guid, UInt32, HRESULT)
    bind_deferred_mdil_binaries : Proc(IPMDeploymentManager*, HRESULT)
    generate_xaml_lightup_xbf_for_current_locale : Proc(IPMDeploymentManager*, UInt8*, HRESULT)
    add_license_for_appx : Proc(IPMDeploymentManager*, Guid, UInt8*, UInt32, UInt8*, UInt32, HRESULT)
    fix_junctions_for_apps_on_sd_card : Proc(IPMDeploymentManager*, HRESULT)
  end

  IPMDeploymentManager_GUID = LibC::GUID.new("35f785fa-1979-4a8b-bc8f-fd70eb0d1544")
  CLSID_IPMDeploymentManager = "35f785fa-1979-4a8b-bc8f-fd70eb0d1544"
  struct IPMDeploymentManager
    lpVtbl : IPMDeploymentManagerVTbl*
  end

  struct IPMEnumerationManagerVTbl
    query_interface : Proc(IPMEnumerationManager*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMEnumerationManager*, UInt32)
    release : Proc(IPMEnumerationManager*, UInt32)
    get_all_applications : Proc(IPMEnumerationManager*, IPMApplicationInfoEnumerator*, PM_ENUM_FILTER, HRESULT)
    get_all_tiles : Proc(IPMEnumerationManager*, IPMTileInfoEnumerator*, PM_ENUM_FILTER, HRESULT)
    get_all_tasks : Proc(IPMEnumerationManager*, IPMTaskInfoEnumerator*, PM_ENUM_FILTER, HRESULT)
    get_all_extensions : Proc(IPMEnumerationManager*, IPMExtensionInfoEnumerator*, PM_ENUM_FILTER, HRESULT)
    get_all_background_service_agents : Proc(IPMEnumerationManager*, IPMBackgroundServiceAgentInfoEnumerator*, PM_ENUM_FILTER, HRESULT)
    get_all_background_workers : Proc(IPMEnumerationManager*, IPMBackgroundWorkerInfoEnumerator*, PM_ENUM_FILTER, HRESULT)
    get_application_info : Proc(IPMEnumerationManager*, Guid, IPMApplicationInfo*, HRESULT)
    get_tile_info : Proc(IPMEnumerationManager*, Guid, UInt8*, IPMTileInfo*, HRESULT)
    get_task_info : Proc(IPMEnumerationManager*, Guid, UInt8*, IPMTaskInfo*, HRESULT)
    get_task_info_ex : Proc(IPMEnumerationManager*, Guid, LibC::LPWSTR, IPMTaskInfo*, HRESULT)
    get_background_service_agent_info : Proc(IPMEnumerationManager*, UInt32, IPMBackgroundServiceAgentInfo*, HRESULT)
    get_all_live_tile_jobs : Proc(IPMEnumerationManager*, IPMLiveTileJobInfoEnumerator*, HRESULT)
    get_live_tile_job : Proc(IPMEnumerationManager*, Guid, UInt8*, PM_LIVETILE_RECURRENCE_TYPE, IPMLiveTileJobInfo*, HRESULT)
    get_application_info_external : Proc(IPMEnumerationManager*, Guid, IPMApplicationInfo*, HRESULT)
    get_file_handler_generic_logo : Proc(IPMEnumerationManager*, UInt8*, PM_LOGO_SIZE, UInt8**, HRESULT)
    get_application_info_from_access_claims : Proc(IPMEnumerationManager*, UInt8*, UInt8*, IPMApplicationInfo*, HRESULT)
    get_start_tile_enumerator_blob : Proc(IPMEnumerationManager*, PM_ENUM_FILTER, UInt32*, PM_STARTTILEBLOB**, HRESULT)
    get_start_app_enumerator_blob : Proc(IPMEnumerationManager*, PM_ENUM_FILTER, UInt32*, PM_STARTAPPBLOB**, HRESULT)
  end

  IPMEnumerationManager_GUID = LibC::GUID.new("698d57c2-292d-4cf3-b73c-d95a6922ed9a")
  CLSID_IPMEnumerationManager = "698d57c2-292d-4cf3-b73c-d95a6922ed9a"
  struct IPMEnumerationManager
    lpVtbl : IPMEnumerationManagerVTbl*
  end

  struct IPMTaskInfoVTbl
    query_interface : Proc(IPMTaskInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMTaskInfo*, UInt32)
    release : Proc(IPMTaskInfo*, UInt32)
    get_product_id : Proc(IPMTaskInfo*, Guid*, HRESULT)
    get_task_id : Proc(IPMTaskInfo*, UInt8**, HRESULT)
    get_navigation_page : Proc(IPMTaskInfo*, UInt8**, HRESULT)
    get_task_transition : Proc(IPMTaskInfo*, PM_TASK_TRANSITION*, HRESULT)
    get_runtime_type : Proc(IPMTaskInfo*, PACKMAN_RUNTIME*, HRESULT)
    get_activation_policy : Proc(IPMTaskInfo*, PM_ACTIVATION_POLICY*, HRESULT)
    get_task_type : Proc(IPMTaskInfo*, PM_TASK_TYPE*, HRESULT)
    get_invocation_info : Proc(IPMTaskInfo*, UInt8**, UInt8**, HRESULT)
    get_image_path : Proc(IPMTaskInfo*, UInt8**, HRESULT)
    get_image_params : Proc(IPMTaskInfo*, UInt8**, HRESULT)
    get_install_root_folder : Proc(IPMTaskInfo*, UInt8**, HRESULT)
    get_data_root_folder : Proc(IPMTaskInfo*, UInt8**, HRESULT)
    get_is_single_instance_host : Proc(IPMTaskInfo*, LibC::BOOL*, HRESULT)
    get_is_interop_enabled : Proc(IPMTaskInfo*, LibC::BOOL*, HRESULT)
    get_application_state : Proc(IPMTaskInfo*, PM_APPLICATION_STATE*, HRESULT)
    get_install_type : Proc(IPMTaskInfo*, PM_APPLICATION_INSTALL_TYPE*, HRESULT)
    get_version : Proc(IPMTaskInfo*, UInt8*, UInt8*, HRESULT)
    get_bits_per_pixel : Proc(IPMTaskInfo*, UInt16*, HRESULT)
    get_suppresses_dehydration : Proc(IPMTaskInfo*, LibC::BOOL*, HRESULT)
    get_background_execution_abilities : Proc(IPMTaskInfo*, UInt8**, HRESULT)
    get_is_opted_for_extended_mem : Proc(IPMTaskInfo*, LibC::BOOL*, HRESULT)
  end

  IPMTaskInfo_GUID = LibC::GUID.new("bf1d8c33-1bf5-4ee0-b549-6b9dd3834942")
  CLSID_IPMTaskInfo = "bf1d8c33-1bf5-4ee0-b549-6b9dd3834942"
  struct IPMTaskInfo
    lpVtbl : IPMTaskInfoVTbl*
  end

  struct IPMTaskInfoEnumeratorVTbl
    query_interface : Proc(IPMTaskInfoEnumerator*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMTaskInfoEnumerator*, UInt32)
    release : Proc(IPMTaskInfoEnumerator*, UInt32)
    get_next : Proc(IPMTaskInfoEnumerator*, IPMTaskInfo*, HRESULT)
  end

  IPMTaskInfoEnumerator_GUID = LibC::GUID.new("0630b0f8-0bbc-4821-be74-c7995166ed2a")
  CLSID_IPMTaskInfoEnumerator = "0630b0f8-0bbc-4821-be74-c7995166ed2a"
  struct IPMTaskInfoEnumerator
    lpVtbl : IPMTaskInfoEnumeratorVTbl*
  end

  struct IPMExtensionInfoVTbl
    query_interface : Proc(IPMExtensionInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMExtensionInfo*, UInt32)
    release : Proc(IPMExtensionInfo*, UInt32)
    get_supplier_pid : Proc(IPMExtensionInfo*, Guid*, HRESULT)
    get_supplier_task_id : Proc(IPMExtensionInfo*, UInt8**, HRESULT)
    get_title : Proc(IPMExtensionInfo*, UInt8**, HRESULT)
    get_icon_path : Proc(IPMExtensionInfo*, UInt8**, HRESULT)
    get_extra_file : Proc(IPMExtensionInfo*, UInt8**, HRESULT)
    get_invocation_info : Proc(IPMExtensionInfo*, UInt8**, UInt8**, HRESULT)
  end

  IPMExtensionInfo_GUID = LibC::GUID.new("49acde79-9788-4d0a-8aa0-1746afdb9e9d")
  CLSID_IPMExtensionInfo = "49acde79-9788-4d0a-8aa0-1746afdb9e9d"
  struct IPMExtensionInfo
    lpVtbl : IPMExtensionInfoVTbl*
  end

  struct IPMExtensionFileExtensionInfoVTbl
    query_interface : Proc(IPMExtensionFileExtensionInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMExtensionFileExtensionInfo*, UInt32)
    release : Proc(IPMExtensionFileExtensionInfo*, UInt32)
    get_name : Proc(IPMExtensionFileExtensionInfo*, UInt8**, HRESULT)
    get_display_name : Proc(IPMExtensionFileExtensionInfo*, UInt8**, HRESULT)
    get_logo : Proc(IPMExtensionFileExtensionInfo*, PM_LOGO_SIZE, UInt8**, HRESULT)
    get_content_type : Proc(IPMExtensionFileExtensionInfo*, UInt8*, UInt8**, HRESULT)
    get_file_type : Proc(IPMExtensionFileExtensionInfo*, UInt8*, UInt8**, HRESULT)
    get_invocation_info : Proc(IPMExtensionFileExtensionInfo*, UInt8**, UInt8**, HRESULT)
    get_all_file_types : Proc(IPMExtensionFileExtensionInfo*, UInt32*, UInt8***, HRESULT)
  end

  IPMExtensionFileExtensionInfo_GUID = LibC::GUID.new("6b87cb6c-0b88-4989-a4ec-033714f710d4")
  CLSID_IPMExtensionFileExtensionInfo = "6b87cb6c-0b88-4989-a4ec-033714f710d4"
  struct IPMExtensionFileExtensionInfo
    lpVtbl : IPMExtensionFileExtensionInfoVTbl*
  end

  struct IPMExtensionProtocolInfoVTbl
    query_interface : Proc(IPMExtensionProtocolInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMExtensionProtocolInfo*, UInt32)
    release : Proc(IPMExtensionProtocolInfo*, UInt32)
    get_protocol : Proc(IPMExtensionProtocolInfo*, UInt8**, HRESULT)
    get_invocation_info : Proc(IPMExtensionProtocolInfo*, UInt8**, UInt8**, HRESULT)
  end

  IPMExtensionProtocolInfo_GUID = LibC::GUID.new("1e3fa036-51eb-4453-baff-b8d8e4b46c8e")
  CLSID_IPMExtensionProtocolInfo = "1e3fa036-51eb-4453-baff-b8d8e4b46c8e"
  struct IPMExtensionProtocolInfo
    lpVtbl : IPMExtensionProtocolInfoVTbl*
  end

  struct IPMExtensionShareTargetInfoVTbl
    query_interface : Proc(IPMExtensionShareTargetInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMExtensionShareTargetInfo*, UInt32)
    release : Proc(IPMExtensionShareTargetInfo*, UInt32)
    get_all_file_types : Proc(IPMExtensionShareTargetInfo*, UInt32*, UInt8***, HRESULT)
    get_all_data_formats : Proc(IPMExtensionShareTargetInfo*, UInt32*, UInt8***, HRESULT)
    get_supports_all_file_types : Proc(IPMExtensionShareTargetInfo*, LibC::BOOL*, HRESULT)
  end

  IPMExtensionShareTargetInfo_GUID = LibC::GUID.new("5471f48b-c65c-4656-8c70-242e31195fea")
  CLSID_IPMExtensionShareTargetInfo = "5471f48b-c65c-4656-8c70-242e31195fea"
  struct IPMExtensionShareTargetInfo
    lpVtbl : IPMExtensionShareTargetInfoVTbl*
  end

  struct IPMExtensionContractInfoVTbl
    query_interface : Proc(IPMExtensionContractInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMExtensionContractInfo*, UInt32)
    release : Proc(IPMExtensionContractInfo*, UInt32)
    get_invocation_info : Proc(IPMExtensionContractInfo*, UInt8**, UInt8**, HRESULT)
  end

  IPMExtensionContractInfo_GUID = LibC::GUID.new("e5666373-7ba1-467c-b819-b175db1c295b")
  CLSID_IPMExtensionContractInfo = "e5666373-7ba1-467c-b819-b175db1c295b"
  struct IPMExtensionContractInfo
    lpVtbl : IPMExtensionContractInfoVTbl*
  end

  struct IPMExtensionFileOpenPickerInfoVTbl
    query_interface : Proc(IPMExtensionFileOpenPickerInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMExtensionFileOpenPickerInfo*, UInt32)
    release : Proc(IPMExtensionFileOpenPickerInfo*, UInt32)
    get_all_file_types : Proc(IPMExtensionFileOpenPickerInfo*, UInt32*, UInt8***, HRESULT)
    get_supports_all_file_types : Proc(IPMExtensionFileOpenPickerInfo*, LibC::BOOL*, HRESULT)
  end

  IPMExtensionFileOpenPickerInfo_GUID = LibC::GUID.new("6dc91d25-9606-420c-9a78-e034a3418345")
  CLSID_IPMExtensionFileOpenPickerInfo = "6dc91d25-9606-420c-9a78-e034a3418345"
  struct IPMExtensionFileOpenPickerInfo
    lpVtbl : IPMExtensionFileOpenPickerInfoVTbl*
  end

  struct IPMExtensionFileSavePickerInfoVTbl
    query_interface : Proc(IPMExtensionFileSavePickerInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMExtensionFileSavePickerInfo*, UInt32)
    release : Proc(IPMExtensionFileSavePickerInfo*, UInt32)
    get_all_file_types : Proc(IPMExtensionFileSavePickerInfo*, UInt32*, UInt8***, HRESULT)
    get_supports_all_file_types : Proc(IPMExtensionFileSavePickerInfo*, LibC::BOOL*, HRESULT)
  end

  IPMExtensionFileSavePickerInfo_GUID = LibC::GUID.new("38005cba-f81a-493e-a0f8-922c8680da43")
  CLSID_IPMExtensionFileSavePickerInfo = "38005cba-f81a-493e-a0f8-922c8680da43"
  struct IPMExtensionFileSavePickerInfo
    lpVtbl : IPMExtensionFileSavePickerInfoVTbl*
  end

  struct IPMExtensionCachedFileUpdaterInfoVTbl
    query_interface : Proc(IPMExtensionCachedFileUpdaterInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMExtensionCachedFileUpdaterInfo*, UInt32)
    release : Proc(IPMExtensionCachedFileUpdaterInfo*, UInt32)
    get_supports_updates : Proc(IPMExtensionCachedFileUpdaterInfo*, LibC::BOOL*, HRESULT)
  end

  IPMExtensionCachedFileUpdaterInfo_GUID = LibC::GUID.new("e2d77509-4e58-4ba9-af7e-b642e370e1b0")
  CLSID_IPMExtensionCachedFileUpdaterInfo = "e2d77509-4e58-4ba9-af7e-b642e370e1b0"
  struct IPMExtensionCachedFileUpdaterInfo
    lpVtbl : IPMExtensionCachedFileUpdaterInfoVTbl*
  end

  struct IPMExtensionInfoEnumeratorVTbl
    query_interface : Proc(IPMExtensionInfoEnumerator*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMExtensionInfoEnumerator*, UInt32)
    release : Proc(IPMExtensionInfoEnumerator*, UInt32)
    get_next : Proc(IPMExtensionInfoEnumerator*, IPMExtensionInfo*, HRESULT)
  end

  IPMExtensionInfoEnumerator_GUID = LibC::GUID.new("403b9e82-1171-4573-8e6f-6f33f39b83dd")
  CLSID_IPMExtensionInfoEnumerator = "403b9e82-1171-4573-8e6f-6f33f39b83dd"
  struct IPMExtensionInfoEnumerator
    lpVtbl : IPMExtensionInfoEnumeratorVTbl*
  end

  struct IPMBackgroundServiceAgentInfoVTbl
    query_interface : Proc(IPMBackgroundServiceAgentInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMBackgroundServiceAgentInfo*, UInt32)
    release : Proc(IPMBackgroundServiceAgentInfo*, UInt32)
    get_product_id : Proc(IPMBackgroundServiceAgentInfo*, Guid*, HRESULT)
    get_task_id : Proc(IPMBackgroundServiceAgentInfo*, UInt8**, HRESULT)
    get_bsaid : Proc(IPMBackgroundServiceAgentInfo*, UInt32*, HRESULT)
    get_bg_specifier : Proc(IPMBackgroundServiceAgentInfo*, UInt8**, HRESULT)
    get_bg_name : Proc(IPMBackgroundServiceAgentInfo*, UInt8**, HRESULT)
    get_bg_source : Proc(IPMBackgroundServiceAgentInfo*, UInt8**, HRESULT)
    get_bg_type : Proc(IPMBackgroundServiceAgentInfo*, UInt8**, HRESULT)
    get_is_periodic : Proc(IPMBackgroundServiceAgentInfo*, LibC::BOOL*, HRESULT)
    get_is_scheduled : Proc(IPMBackgroundServiceAgentInfo*, LibC::BOOL*, HRESULT)
    get_is_schedule_allowed : Proc(IPMBackgroundServiceAgentInfo*, LibC::BOOL*, HRESULT)
    get_description : Proc(IPMBackgroundServiceAgentInfo*, UInt8**, HRESULT)
    get_is_launch_on_boot : Proc(IPMBackgroundServiceAgentInfo*, LibC::BOOL*, HRESULT)
    set_is_scheduled : Proc(IPMBackgroundServiceAgentInfo*, LibC::BOOL, HRESULT)
    set_is_schedule_allowed : Proc(IPMBackgroundServiceAgentInfo*, LibC::BOOL, HRESULT)
  end

  IPMBackgroundServiceAgentInfo_GUID = LibC::GUID.new("3a8b46da-928c-4879-998c-09dc96f3d490")
  CLSID_IPMBackgroundServiceAgentInfo = "3a8b46da-928c-4879-998c-09dc96f3d490"
  struct IPMBackgroundServiceAgentInfo
    lpVtbl : IPMBackgroundServiceAgentInfoVTbl*
  end

  struct IPMBackgroundWorkerInfoVTbl
    query_interface : Proc(IPMBackgroundWorkerInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMBackgroundWorkerInfo*, UInt32)
    release : Proc(IPMBackgroundWorkerInfo*, UInt32)
    get_product_id : Proc(IPMBackgroundWorkerInfo*, Guid*, HRESULT)
    get_task_id : Proc(IPMBackgroundWorkerInfo*, UInt8**, HRESULT)
    get_bg_name : Proc(IPMBackgroundWorkerInfo*, UInt8**, HRESULT)
    get_max_startup_latency : Proc(IPMBackgroundWorkerInfo*, UInt32*, HRESULT)
    get_expected_runtime : Proc(IPMBackgroundWorkerInfo*, UInt32*, HRESULT)
    get_is_boot_worker : Proc(IPMBackgroundWorkerInfo*, LibC::BOOL*, HRESULT)
  end

  IPMBackgroundWorkerInfo_GUID = LibC::GUID.new("7dd4531b-d3bf-4b6b-94f3-69c098b1497d")
  CLSID_IPMBackgroundWorkerInfo = "7dd4531b-d3bf-4b6b-94f3-69c098b1497d"
  struct IPMBackgroundWorkerInfo
    lpVtbl : IPMBackgroundWorkerInfoVTbl*
  end

  struct IPMBackgroundServiceAgentInfoEnumeratorVTbl
    query_interface : Proc(IPMBackgroundServiceAgentInfoEnumerator*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMBackgroundServiceAgentInfoEnumerator*, UInt32)
    release : Proc(IPMBackgroundServiceAgentInfoEnumerator*, UInt32)
    get_next : Proc(IPMBackgroundServiceAgentInfoEnumerator*, IPMBackgroundServiceAgentInfo*, HRESULT)
  end

  IPMBackgroundServiceAgentInfoEnumerator_GUID = LibC::GUID.new("18eb2072-ab56-43b3-872c-beafb7a6b391")
  CLSID_IPMBackgroundServiceAgentInfoEnumerator = "18eb2072-ab56-43b3-872c-beafb7a6b391"
  struct IPMBackgroundServiceAgentInfoEnumerator
    lpVtbl : IPMBackgroundServiceAgentInfoEnumeratorVTbl*
  end

  struct IPMBackgroundWorkerInfoEnumeratorVTbl
    query_interface : Proc(IPMBackgroundWorkerInfoEnumerator*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPMBackgroundWorkerInfoEnumerator*, UInt32)
    release : Proc(IPMBackgroundWorkerInfoEnumerator*, UInt32)
    get_next : Proc(IPMBackgroundWorkerInfoEnumerator*, IPMBackgroundWorkerInfo*, HRESULT)
  end

  IPMBackgroundWorkerInfoEnumerator_GUID = LibC::GUID.new("87f479f8-90d8-4ec7-92b9-72787e2f636b")
  CLSID_IPMBackgroundWorkerInfoEnumerator = "87f479f8-90d8-4ec7-92b9-72787e2f636b"
  struct IPMBackgroundWorkerInfoEnumerator
    lpVtbl : IPMBackgroundWorkerInfoEnumeratorVTbl*
  end


  # Params # hany : MSIHANDLE [In]
  fun MsiCloseHandle(hany : MSIHANDLE) : UInt32

  # Params # 
  fun MsiCloseAllHandles : UInt32

  # Params # dwuilevel : INSTALLUILEVEL [In],phwnd : HANDLE* [In]
  fun MsiSetInternalUI(dwuilevel : INSTALLUILEVEL, phwnd : HANDLE*) : INSTALLUILEVEL

  # Params # puihandler : INSTALLUI_HANDLERA [In],dwmessagefilter : UInt32 [In],pvcontext : Void* [In]
  fun MsiSetExternalUIA(puihandler : INSTALLUI_HANDLERA, dwmessagefilter : UInt32, pvcontext : Void*) : INSTALLUI_HANDLERA

  # Params # puihandler : INSTALLUI_HANDLERW [In],dwmessagefilter : UInt32 [In],pvcontext : Void* [In]
  fun MsiSetExternalUIW(puihandler : INSTALLUI_HANDLERW, dwmessagefilter : UInt32, pvcontext : Void*) : INSTALLUI_HANDLERW

  # Params # puihandler : PINSTALLUI_HANDLER_RECORD [In],dwmessagefilter : UInt32 [In],pvcontext : Void* [In],ppuiprevhandler : PINSTALLUI_HANDLER_RECORD [In]
  fun MsiSetExternalUIRecord(puihandler : PINSTALLUI_HANDLER_RECORD, dwmessagefilter : UInt32, pvcontext : Void*, ppuiprevhandler : PINSTALLUI_HANDLER_RECORD) : UInt32

  # Params # dwlogmode : INSTALLOGMODE [In],szlogfile : PSTR [In],dwlogattributes : UInt32 [In]
  fun MsiEnableLogA(dwlogmode : INSTALLOGMODE, szlogfile : PSTR, dwlogattributes : UInt32) : UInt32

  # Params # dwlogmode : INSTALLOGMODE [In],szlogfile : LibC::LPWSTR [In],dwlogattributes : UInt32 [In]
  fun MsiEnableLogW(dwlogmode : INSTALLOGMODE, szlogfile : LibC::LPWSTR, dwlogattributes : UInt32) : UInt32

  # Params # szproduct : PSTR [In]
  fun MsiQueryProductStateA(szproduct : PSTR) : INSTALLSTATE

  # Params # szproduct : LibC::LPWSTR [In]
  fun MsiQueryProductStateW(szproduct : LibC::LPWSTR) : INSTALLSTATE

  # Params # szproduct : PSTR [In],szattribute : PSTR [In],lpvaluebuf : UInt8* [In],pcchvaluebuf : UInt32* [In]
  fun MsiGetProductInfoA(szproduct : PSTR, szattribute : PSTR, lpvaluebuf : UInt8*, pcchvaluebuf : UInt32*) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],szattribute : LibC::LPWSTR [In],lpvaluebuf : Char* [In],pcchvaluebuf : UInt32* [In]
  fun MsiGetProductInfoW(szproduct : LibC::LPWSTR, szattribute : LibC::LPWSTR, lpvaluebuf : Char*, pcchvaluebuf : UInt32*) : UInt32

  # Params # szproductcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],szproperty : PSTR [In],szvalue : UInt8* [In],pcchvalue : UInt32* [In]
  fun MsiGetProductInfoExA(szproductcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, szproperty : PSTR, szvalue : UInt8*, pcchvalue : UInt32*) : UInt32

  # Params # szproductcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],szproperty : LibC::LPWSTR [In],szvalue : Char* [In],pcchvalue : UInt32* [In]
  fun MsiGetProductInfoExW(szproductcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, szproperty : LibC::LPWSTR, szvalue : Char*, pcchvalue : UInt32*) : UInt32

  # Params # szpackagepath : PSTR [In],szcommandline : PSTR [In]
  fun MsiInstallProductA(szpackagepath : PSTR, szcommandline : PSTR) : UInt32

  # Params # szpackagepath : LibC::LPWSTR [In],szcommandline : LibC::LPWSTR [In]
  fun MsiInstallProductW(szpackagepath : LibC::LPWSTR, szcommandline : LibC::LPWSTR) : UInt32

  # Params # szproduct : PSTR [In],iinstalllevel : INSTALLLEVEL [In],einstallstate : INSTALLSTATE [In]
  fun MsiConfigureProductA(szproduct : PSTR, iinstalllevel : INSTALLLEVEL, einstallstate : INSTALLSTATE) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],iinstalllevel : INSTALLLEVEL [In],einstallstate : INSTALLSTATE [In]
  fun MsiConfigureProductW(szproduct : LibC::LPWSTR, iinstalllevel : INSTALLLEVEL, einstallstate : INSTALLSTATE) : UInt32

  # Params # szproduct : PSTR [In],iinstalllevel : INSTALLLEVEL [In],einstallstate : INSTALLSTATE [In],szcommandline : PSTR [In]
  fun MsiConfigureProductExA(szproduct : PSTR, iinstalllevel : INSTALLLEVEL, einstallstate : INSTALLSTATE, szcommandline : PSTR) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],iinstalllevel : INSTALLLEVEL [In],einstallstate : INSTALLSTATE [In],szcommandline : LibC::LPWSTR [In]
  fun MsiConfigureProductExW(szproduct : LibC::LPWSTR, iinstalllevel : INSTALLLEVEL, einstallstate : INSTALLSTATE, szcommandline : LibC::LPWSTR) : UInt32

  # Params # szproduct : PSTR [In],szreinstallmode : REINSTALLMODE [In]
  fun MsiReinstallProductA(szproduct : PSTR, szreinstallmode : REINSTALLMODE) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],szreinstallmode : REINSTALLMODE [In]
  fun MsiReinstallProductW(szproduct : LibC::LPWSTR, szreinstallmode : REINSTALLMODE) : UInt32

  # Params # szpackagepath : PSTR [In],szscriptfilepath : PSTR [In],sztransforms : PSTR [In],lgidlanguage : UInt16 [In],dwplatform : UInt32 [In],dwoptions : UInt32 [In]
  fun MsiAdvertiseProductExA(szpackagepath : PSTR, szscriptfilepath : PSTR, sztransforms : PSTR, lgidlanguage : UInt16, dwplatform : UInt32, dwoptions : UInt32) : UInt32

  # Params # szpackagepath : LibC::LPWSTR [In],szscriptfilepath : LibC::LPWSTR [In],sztransforms : LibC::LPWSTR [In],lgidlanguage : UInt16 [In],dwplatform : UInt32 [In],dwoptions : UInt32 [In]
  fun MsiAdvertiseProductExW(szpackagepath : LibC::LPWSTR, szscriptfilepath : LibC::LPWSTR, sztransforms : LibC::LPWSTR, lgidlanguage : UInt16, dwplatform : UInt32, dwoptions : UInt32) : UInt32

  # Params # szpackagepath : PSTR [In],szscriptfilepath : PSTR [In],sztransforms : PSTR [In],lgidlanguage : UInt16 [In]
  fun MsiAdvertiseProductA(szpackagepath : PSTR, szscriptfilepath : PSTR, sztransforms : PSTR, lgidlanguage : UInt16) : UInt32

  # Params # szpackagepath : LibC::LPWSTR [In],szscriptfilepath : LibC::LPWSTR [In],sztransforms : LibC::LPWSTR [In],lgidlanguage : UInt16 [In]
  fun MsiAdvertiseProductW(szpackagepath : LibC::LPWSTR, szscriptfilepath : LibC::LPWSTR, sztransforms : LibC::LPWSTR, lgidlanguage : UInt16) : UInt32

  # Params # szscriptfile : PSTR [In],sziconfolder : PSTR [In],hregdata : HKEY [In],fshortcuts : LibC::BOOL [In],fremoveitems : LibC::BOOL [In]
  fun MsiProcessAdvertiseScriptA(szscriptfile : PSTR, sziconfolder : PSTR, hregdata : HKEY, fshortcuts : LibC::BOOL, fremoveitems : LibC::BOOL) : UInt32

  # Params # szscriptfile : LibC::LPWSTR [In],sziconfolder : LibC::LPWSTR [In],hregdata : HKEY [In],fshortcuts : LibC::BOOL [In],fremoveitems : LibC::BOOL [In]
  fun MsiProcessAdvertiseScriptW(szscriptfile : LibC::LPWSTR, sziconfolder : LibC::LPWSTR, hregdata : HKEY, fshortcuts : LibC::BOOL, fremoveitems : LibC::BOOL) : UInt32

  # Params # szscriptfile : PSTR [In],dwflags : UInt32 [In],phregdata : HKEY* [In],fremoveitems : LibC::BOOL [In]
  fun MsiAdvertiseScriptA(szscriptfile : PSTR, dwflags : UInt32, phregdata : HKEY*, fremoveitems : LibC::BOOL) : UInt32

  # Params # szscriptfile : LibC::LPWSTR [In],dwflags : UInt32 [In],phregdata : HKEY* [In],fremoveitems : LibC::BOOL [In]
  fun MsiAdvertiseScriptW(szscriptfile : LibC::LPWSTR, dwflags : UInt32, phregdata : HKEY*, fremoveitems : LibC::BOOL) : UInt32

  # Params # szscriptfile : PSTR [In],lpproductbuf39 : PSTR [In],plgidlanguage : UInt16* [In],pdwversion : UInt32* [In],lpnamebuf : UInt8* [In],pcchnamebuf : UInt32* [In],lppackagebuf : UInt8* [In],pcchpackagebuf : UInt32* [In]
  fun MsiGetProductInfoFromScriptA(szscriptfile : PSTR, lpproductbuf39 : PSTR, plgidlanguage : UInt16*, pdwversion : UInt32*, lpnamebuf : UInt8*, pcchnamebuf : UInt32*, lppackagebuf : UInt8*, pcchpackagebuf : UInt32*) : UInt32

  # Params # szscriptfile : LibC::LPWSTR [In],lpproductbuf39 : LibC::LPWSTR [In],plgidlanguage : UInt16* [In],pdwversion : UInt32* [In],lpnamebuf : Char* [In],pcchnamebuf : UInt32* [In],lppackagebuf : Char* [In],pcchpackagebuf : UInt32* [In]
  fun MsiGetProductInfoFromScriptW(szscriptfile : LibC::LPWSTR, lpproductbuf39 : LibC::LPWSTR, plgidlanguage : UInt16*, pdwversion : UInt32*, lpnamebuf : Char*, pcchnamebuf : UInt32*, lppackagebuf : Char*, pcchpackagebuf : UInt32*) : UInt32

  # Params # szcomponent : PSTR [In],lpbuf39 : PSTR [In]
  fun MsiGetProductCodeA(szcomponent : PSTR, lpbuf39 : PSTR) : UInt32

  # Params # szcomponent : LibC::LPWSTR [In],lpbuf39 : LibC::LPWSTR [In]
  fun MsiGetProductCodeW(szcomponent : LibC::LPWSTR, lpbuf39 : LibC::LPWSTR) : UInt32

  # Params # szproduct : PSTR [In],lpusernamebuf : UInt8* [In],pcchusernamebuf : UInt32* [In],lporgnamebuf : UInt8* [In],pcchorgnamebuf : UInt32* [In],lpserialbuf : UInt8* [In],pcchserialbuf : UInt32* [In]
  fun MsiGetUserInfoA(szproduct : PSTR, lpusernamebuf : UInt8*, pcchusernamebuf : UInt32*, lporgnamebuf : UInt8*, pcchorgnamebuf : UInt32*, lpserialbuf : UInt8*, pcchserialbuf : UInt32*) : USERINFOSTATE

  # Params # szproduct : LibC::LPWSTR [In],lpusernamebuf : Char* [In],pcchusernamebuf : UInt32* [In],lporgnamebuf : Char* [In],pcchorgnamebuf : UInt32* [In],lpserialbuf : Char* [In],pcchserialbuf : UInt32* [In]
  fun MsiGetUserInfoW(szproduct : LibC::LPWSTR, lpusernamebuf : Char*, pcchusernamebuf : UInt32*, lporgnamebuf : Char*, pcchorgnamebuf : UInt32*, lpserialbuf : Char*, pcchserialbuf : UInt32*) : USERINFOSTATE

  # Params # szproduct : PSTR [In]
  fun MsiCollectUserInfoA(szproduct : PSTR) : UInt32

  # Params # szproduct : LibC::LPWSTR [In]
  fun MsiCollectUserInfoW(szproduct : LibC::LPWSTR) : UInt32

  # Params # szpatchpackage : PSTR [In],szinstallpackage : PSTR [In],einstalltype : INSTALLTYPE [In],szcommandline : PSTR [In]
  fun MsiApplyPatchA(szpatchpackage : PSTR, szinstallpackage : PSTR, einstalltype : INSTALLTYPE, szcommandline : PSTR) : UInt32

  # Params # szpatchpackage : LibC::LPWSTR [In],szinstallpackage : LibC::LPWSTR [In],einstalltype : INSTALLTYPE [In],szcommandline : LibC::LPWSTR [In]
  fun MsiApplyPatchW(szpatchpackage : LibC::LPWSTR, szinstallpackage : LibC::LPWSTR, einstalltype : INSTALLTYPE, szcommandline : LibC::LPWSTR) : UInt32

  # Params # szpatch : PSTR [In],szattribute : PSTR [In],lpvaluebuf : UInt8* [In],pcchvaluebuf : UInt32* [In]
  fun MsiGetPatchInfoA(szpatch : PSTR, szattribute : PSTR, lpvaluebuf : UInt8*, pcchvaluebuf : UInt32*) : UInt32

  # Params # szpatch : LibC::LPWSTR [In],szattribute : LibC::LPWSTR [In],lpvaluebuf : Char* [In],pcchvaluebuf : UInt32* [In]
  fun MsiGetPatchInfoW(szpatch : LibC::LPWSTR, szattribute : LibC::LPWSTR, lpvaluebuf : Char*, pcchvaluebuf : UInt32*) : UInt32

  # Params # szproduct : PSTR [In],ipatchindex : UInt32 [In],lppatchbuf : PSTR [In],lptransformsbuf : UInt8* [In],pcchtransformsbuf : UInt32* [In]
  fun MsiEnumPatchesA(szproduct : PSTR, ipatchindex : UInt32, lppatchbuf : PSTR, lptransformsbuf : UInt8*, pcchtransformsbuf : UInt32*) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],ipatchindex : UInt32 [In],lppatchbuf : LibC::LPWSTR [In],lptransformsbuf : Char* [In],pcchtransformsbuf : UInt32* [In]
  fun MsiEnumPatchesW(szproduct : LibC::LPWSTR, ipatchindex : UInt32, lppatchbuf : LibC::LPWSTR, lptransformsbuf : Char*, pcchtransformsbuf : UInt32*) : UInt32

  # Params # szpatchlist : PSTR [In],szproductcode : PSTR [In],euninstalltype : INSTALLTYPE [In],szpropertylist : PSTR [In]
  fun MsiRemovePatchesA(szpatchlist : PSTR, szproductcode : PSTR, euninstalltype : INSTALLTYPE, szpropertylist : PSTR) : UInt32

  # Params # szpatchlist : LibC::LPWSTR [In],szproductcode : LibC::LPWSTR [In],euninstalltype : INSTALLTYPE [In],szpropertylist : LibC::LPWSTR [In]
  fun MsiRemovePatchesW(szpatchlist : LibC::LPWSTR, szproductcode : LibC::LPWSTR, euninstalltype : INSTALLTYPE, szpropertylist : LibC::LPWSTR) : UInt32

  # Params # szpatchpath : PSTR [In],dwreserved : UInt32 [In],szxmldata : UInt8* [In],pcchxmldata : UInt32* [In]
  fun MsiExtractPatchXMLDataA(szpatchpath : PSTR, dwreserved : UInt32, szxmldata : UInt8*, pcchxmldata : UInt32*) : UInt32

  # Params # szpatchpath : LibC::LPWSTR [In],dwreserved : UInt32 [In],szxmldata : Char* [In],pcchxmldata : UInt32* [In]
  fun MsiExtractPatchXMLDataW(szpatchpath : LibC::LPWSTR, dwreserved : UInt32, szxmldata : Char*, pcchxmldata : UInt32*) : UInt32

  # Params # szpatchcode : PSTR [In],szproductcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],szproperty : PSTR [In],lpvalue : UInt8* [In],pcchvalue : UInt32* [In]
  fun MsiGetPatchInfoExA(szpatchcode : PSTR, szproductcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, szproperty : PSTR, lpvalue : UInt8*, pcchvalue : UInt32*) : UInt32

  # Params # szpatchcode : LibC::LPWSTR [In],szproductcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],szproperty : LibC::LPWSTR [In],lpvalue : Char* [In],pcchvalue : UInt32* [In]
  fun MsiGetPatchInfoExW(szpatchcode : LibC::LPWSTR, szproductcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, szproperty : LibC::LPWSTR, lpvalue : Char*, pcchvalue : UInt32*) : UInt32

  # Params # szpatchpackages : PSTR [In],szproductcode : PSTR [In],szpropertieslist : PSTR [In]
  fun MsiApplyMultiplePatchesA(szpatchpackages : PSTR, szproductcode : PSTR, szpropertieslist : PSTR) : UInt32

  # Params # szpatchpackages : LibC::LPWSTR [In],szproductcode : LibC::LPWSTR [In],szpropertieslist : LibC::LPWSTR [In]
  fun MsiApplyMultiplePatchesW(szpatchpackages : LibC::LPWSTR, szproductcode : LibC::LPWSTR, szpropertieslist : LibC::LPWSTR) : UInt32

  # Params # szproductcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],cpatchinfo : UInt32 [In],ppatchinfo : MSIPATCHSEQUENCEINFOA* [In]
  fun MsiDeterminePatchSequenceA(szproductcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, cpatchinfo : UInt32, ppatchinfo : MSIPATCHSEQUENCEINFOA*) : UInt32

  # Params # szproductcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],cpatchinfo : UInt32 [In],ppatchinfo : MSIPATCHSEQUENCEINFOW* [In]
  fun MsiDeterminePatchSequenceW(szproductcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, cpatchinfo : UInt32, ppatchinfo : MSIPATCHSEQUENCEINFOW*) : UInt32

  # Params # szproductpackagepath : PSTR [In],cpatchinfo : UInt32 [In],ppatchinfo : MSIPATCHSEQUENCEINFOA* [In]
  fun MsiDetermineApplicablePatchesA(szproductpackagepath : PSTR, cpatchinfo : UInt32, ppatchinfo : MSIPATCHSEQUENCEINFOA*) : UInt32

  # Params # szproductpackagepath : LibC::LPWSTR [In],cpatchinfo : UInt32 [In],ppatchinfo : MSIPATCHSEQUENCEINFOW* [In]
  fun MsiDetermineApplicablePatchesW(szproductpackagepath : LibC::LPWSTR, cpatchinfo : UInt32, ppatchinfo : MSIPATCHSEQUENCEINFOW*) : UInt32

  # Params # szproductcode : PSTR [In],szusersid : PSTR [In],dwcontext : UInt32 [In],dwfilter : UInt32 [In],dwindex : UInt32 [In],szpatchcode : PSTR [In],sztargetproductcode : PSTR [In],pdwtargetproductcontext : MSIINSTALLCONTEXT* [In],sztargetusersid : UInt8* [In],pcchtargetusersid : UInt32* [In]
  fun MsiEnumPatchesExA(szproductcode : PSTR, szusersid : PSTR, dwcontext : UInt32, dwfilter : UInt32, dwindex : UInt32, szpatchcode : PSTR, sztargetproductcode : PSTR, pdwtargetproductcontext : MSIINSTALLCONTEXT*, sztargetusersid : UInt8*, pcchtargetusersid : UInt32*) : UInt32

  # Params # szproductcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : UInt32 [In],dwfilter : UInt32 [In],dwindex : UInt32 [In],szpatchcode : LibC::LPWSTR [In],sztargetproductcode : LibC::LPWSTR [In],pdwtargetproductcontext : MSIINSTALLCONTEXT* [In],sztargetusersid : Char* [In],pcchtargetusersid : UInt32* [In]
  fun MsiEnumPatchesExW(szproductcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : UInt32, dwfilter : UInt32, dwindex : UInt32, szpatchcode : LibC::LPWSTR, sztargetproductcode : LibC::LPWSTR, pdwtargetproductcontext : MSIINSTALLCONTEXT*, sztargetusersid : Char*, pcchtargetusersid : UInt32*) : UInt32

  # Params # szproduct : PSTR [In],szfeature : PSTR [In]
  fun MsiQueryFeatureStateA(szproduct : PSTR, szfeature : PSTR) : INSTALLSTATE

  # Params # szproduct : LibC::LPWSTR [In],szfeature : LibC::LPWSTR [In]
  fun MsiQueryFeatureStateW(szproduct : LibC::LPWSTR, szfeature : LibC::LPWSTR) : INSTALLSTATE

  # Params # szproductcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],szfeature : PSTR [In],pdwstate : INSTALLSTATE* [In]
  fun MsiQueryFeatureStateExA(szproductcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, szfeature : PSTR, pdwstate : INSTALLSTATE*) : UInt32

  # Params # szproductcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],szfeature : LibC::LPWSTR [In],pdwstate : INSTALLSTATE* [In]
  fun MsiQueryFeatureStateExW(szproductcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, szfeature : LibC::LPWSTR, pdwstate : INSTALLSTATE*) : UInt32

  # Params # szproduct : PSTR [In],szfeature : PSTR [In]
  fun MsiUseFeatureA(szproduct : PSTR, szfeature : PSTR) : INSTALLSTATE

  # Params # szproduct : LibC::LPWSTR [In],szfeature : LibC::LPWSTR [In]
  fun MsiUseFeatureW(szproduct : LibC::LPWSTR, szfeature : LibC::LPWSTR) : INSTALLSTATE

  # Params # szproduct : PSTR [In],szfeature : PSTR [In],dwinstallmode : UInt32 [In],dwreserved : UInt32 [In]
  fun MsiUseFeatureExA(szproduct : PSTR, szfeature : PSTR, dwinstallmode : UInt32, dwreserved : UInt32) : INSTALLSTATE

  # Params # szproduct : LibC::LPWSTR [In],szfeature : LibC::LPWSTR [In],dwinstallmode : UInt32 [In],dwreserved : UInt32 [In]
  fun MsiUseFeatureExW(szproduct : LibC::LPWSTR, szfeature : LibC::LPWSTR, dwinstallmode : UInt32, dwreserved : UInt32) : INSTALLSTATE

  # Params # szproduct : PSTR [In],szfeature : PSTR [In],pdwusecount : UInt32* [In],pwdateused : UInt16* [In]
  fun MsiGetFeatureUsageA(szproduct : PSTR, szfeature : PSTR, pdwusecount : UInt32*, pwdateused : UInt16*) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],szfeature : LibC::LPWSTR [In],pdwusecount : UInt32* [In],pwdateused : UInt16* [In]
  fun MsiGetFeatureUsageW(szproduct : LibC::LPWSTR, szfeature : LibC::LPWSTR, pdwusecount : UInt32*, pwdateused : UInt16*) : UInt32

  # Params # szproduct : PSTR [In],szfeature : PSTR [In],einstallstate : INSTALLSTATE [In]
  fun MsiConfigureFeatureA(szproduct : PSTR, szfeature : PSTR, einstallstate : INSTALLSTATE) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],szfeature : LibC::LPWSTR [In],einstallstate : INSTALLSTATE [In]
  fun MsiConfigureFeatureW(szproduct : LibC::LPWSTR, szfeature : LibC::LPWSTR, einstallstate : INSTALLSTATE) : UInt32

  # Params # szproduct : PSTR [In],szfeature : PSTR [In],dwreinstallmode : REINSTALLMODE [In]
  fun MsiReinstallFeatureA(szproduct : PSTR, szfeature : PSTR, dwreinstallmode : REINSTALLMODE) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],szfeature : LibC::LPWSTR [In],dwreinstallmode : REINSTALLMODE [In]
  fun MsiReinstallFeatureW(szproduct : LibC::LPWSTR, szfeature : LibC::LPWSTR, dwreinstallmode : REINSTALLMODE) : UInt32

  # Params # szproduct : PSTR [In],szfeature : PSTR [In],szcomponent : PSTR [In],dwinstallmode : INSTALLMODE [In],lppathbuf : UInt8* [In],pcchpathbuf : UInt32* [In]
  fun MsiProvideComponentA(szproduct : PSTR, szfeature : PSTR, szcomponent : PSTR, dwinstallmode : INSTALLMODE, lppathbuf : UInt8*, pcchpathbuf : UInt32*) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],szfeature : LibC::LPWSTR [In],szcomponent : LibC::LPWSTR [In],dwinstallmode : INSTALLMODE [In],lppathbuf : Char* [In],pcchpathbuf : UInt32* [In]
  fun MsiProvideComponentW(szproduct : LibC::LPWSTR, szfeature : LibC::LPWSTR, szcomponent : LibC::LPWSTR, dwinstallmode : INSTALLMODE, lppathbuf : Char*, pcchpathbuf : UInt32*) : UInt32

  # Params # szcategory : PSTR [In],szqualifier : PSTR [In],dwinstallmode : INSTALLMODE [In],lppathbuf : UInt8* [In],pcchpathbuf : UInt32* [In]
  fun MsiProvideQualifiedComponentA(szcategory : PSTR, szqualifier : PSTR, dwinstallmode : INSTALLMODE, lppathbuf : UInt8*, pcchpathbuf : UInt32*) : UInt32

  # Params # szcategory : LibC::LPWSTR [In],szqualifier : LibC::LPWSTR [In],dwinstallmode : INSTALLMODE [In],lppathbuf : Char* [In],pcchpathbuf : UInt32* [In]
  fun MsiProvideQualifiedComponentW(szcategory : LibC::LPWSTR, szqualifier : LibC::LPWSTR, dwinstallmode : INSTALLMODE, lppathbuf : Char*, pcchpathbuf : UInt32*) : UInt32

  # Params # szcategory : PSTR [In],szqualifier : PSTR [In],dwinstallmode : INSTALLMODE [In],szproduct : PSTR [In],dwunused1 : UInt32 [In],dwunused2 : UInt32 [In],lppathbuf : UInt8* [In],pcchpathbuf : UInt32* [In]
  fun MsiProvideQualifiedComponentExA(szcategory : PSTR, szqualifier : PSTR, dwinstallmode : INSTALLMODE, szproduct : PSTR, dwunused1 : UInt32, dwunused2 : UInt32, lppathbuf : UInt8*, pcchpathbuf : UInt32*) : UInt32

  # Params # szcategory : LibC::LPWSTR [In],szqualifier : LibC::LPWSTR [In],dwinstallmode : INSTALLMODE [In],szproduct : LibC::LPWSTR [In],dwunused1 : UInt32 [In],dwunused2 : UInt32 [In],lppathbuf : Char* [In],pcchpathbuf : UInt32* [In]
  fun MsiProvideQualifiedComponentExW(szcategory : LibC::LPWSTR, szqualifier : LibC::LPWSTR, dwinstallmode : INSTALLMODE, szproduct : LibC::LPWSTR, dwunused1 : UInt32, dwunused2 : UInt32, lppathbuf : Char*, pcchpathbuf : UInt32*) : UInt32

  # Params # szproduct : PSTR [In],szcomponent : PSTR [In],lppathbuf : UInt8* [In],pcchbuf : UInt32* [In]
  fun MsiGetComponentPathA(szproduct : PSTR, szcomponent : PSTR, lppathbuf : UInt8*, pcchbuf : UInt32*) : INSTALLSTATE

  # Params # szproduct : LibC::LPWSTR [In],szcomponent : LibC::LPWSTR [In],lppathbuf : Char* [In],pcchbuf : UInt32* [In]
  fun MsiGetComponentPathW(szproduct : LibC::LPWSTR, szcomponent : LibC::LPWSTR, lppathbuf : Char*, pcchbuf : UInt32*) : INSTALLSTATE

  # Params # szproductcode : PSTR [In],szcomponentcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],lpoutpathbuffer : UInt8* [In],pcchoutpathbuffer : UInt32* [In]
  fun MsiGetComponentPathExA(szproductcode : PSTR, szcomponentcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, lpoutpathbuffer : UInt8*, pcchoutpathbuffer : UInt32*) : INSTALLSTATE

  # Params # szproductcode : LibC::LPWSTR [In],szcomponentcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],lpoutpathbuffer : Char* [In],pcchoutpathbuffer : UInt32* [In]
  fun MsiGetComponentPathExW(szproductcode : LibC::LPWSTR, szcomponentcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, lpoutpathbuffer : Char*, pcchoutpathbuffer : UInt32*) : INSTALLSTATE

  # Params # szassemblyname : PSTR [In],szappcontext : PSTR [In],dwinstallmode : INSTALLMODE [In],dwassemblyinfo : MSIASSEMBLYINFO [In],lppathbuf : UInt8* [In],pcchpathbuf : UInt32* [In]
  fun MsiProvideAssemblyA(szassemblyname : PSTR, szappcontext : PSTR, dwinstallmode : INSTALLMODE, dwassemblyinfo : MSIASSEMBLYINFO, lppathbuf : UInt8*, pcchpathbuf : UInt32*) : UInt32

  # Params # szassemblyname : LibC::LPWSTR [In],szappcontext : LibC::LPWSTR [In],dwinstallmode : INSTALLMODE [In],dwassemblyinfo : MSIASSEMBLYINFO [In],lppathbuf : Char* [In],pcchpathbuf : UInt32* [In]
  fun MsiProvideAssemblyW(szassemblyname : LibC::LPWSTR, szappcontext : LibC::LPWSTR, dwinstallmode : INSTALLMODE, dwassemblyinfo : MSIASSEMBLYINFO, lppathbuf : Char*, pcchpathbuf : UInt32*) : UInt32

  # Params # szproductcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],szcomponentcode : PSTR [In],pdwstate : INSTALLSTATE* [In]
  fun MsiQueryComponentStateA(szproductcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, szcomponentcode : PSTR, pdwstate : INSTALLSTATE*) : UInt32

  # Params # szproductcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],szcomponentcode : LibC::LPWSTR [In],pdwstate : INSTALLSTATE* [In]
  fun MsiQueryComponentStateW(szproductcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, szcomponentcode : LibC::LPWSTR, pdwstate : INSTALLSTATE*) : UInt32

  # Params # iproductindex : UInt32 [In],lpproductbuf : PSTR [In]
  fun MsiEnumProductsA(iproductindex : UInt32, lpproductbuf : PSTR) : UInt32

  # Params # iproductindex : UInt32 [In],lpproductbuf : LibC::LPWSTR [In]
  fun MsiEnumProductsW(iproductindex : UInt32, lpproductbuf : LibC::LPWSTR) : UInt32

  # Params # szproductcode : PSTR [In],szusersid : PSTR [In],dwcontext : UInt32 [In],dwindex : UInt32 [In],szinstalledproductcode : PSTR [In],pdwinstalledcontext : MSIINSTALLCONTEXT* [In],szsid : UInt8* [In],pcchsid : UInt32* [In]
  fun MsiEnumProductsExA(szproductcode : PSTR, szusersid : PSTR, dwcontext : UInt32, dwindex : UInt32, szinstalledproductcode : PSTR, pdwinstalledcontext : MSIINSTALLCONTEXT*, szsid : UInt8*, pcchsid : UInt32*) : UInt32

  # Params # szproductcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : UInt32 [In],dwindex : UInt32 [In],szinstalledproductcode : LibC::LPWSTR [In],pdwinstalledcontext : MSIINSTALLCONTEXT* [In],szsid : Char* [In],pcchsid : UInt32* [In]
  fun MsiEnumProductsExW(szproductcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : UInt32, dwindex : UInt32, szinstalledproductcode : LibC::LPWSTR, pdwinstalledcontext : MSIINSTALLCONTEXT*, szsid : Char*, pcchsid : UInt32*) : UInt32

  # Params # lpupgradecode : PSTR [In],dwreserved : UInt32 [In],iproductindex : UInt32 [In],lpproductbuf : PSTR [In]
  fun MsiEnumRelatedProductsA(lpupgradecode : PSTR, dwreserved : UInt32, iproductindex : UInt32, lpproductbuf : PSTR) : UInt32

  # Params # lpupgradecode : LibC::LPWSTR [In],dwreserved : UInt32 [In],iproductindex : UInt32 [In],lpproductbuf : LibC::LPWSTR [In]
  fun MsiEnumRelatedProductsW(lpupgradecode : LibC::LPWSTR, dwreserved : UInt32, iproductindex : UInt32, lpproductbuf : LibC::LPWSTR) : UInt32

  # Params # szproduct : PSTR [In],ifeatureindex : UInt32 [In],lpfeaturebuf : PSTR [In],lpparentbuf : PSTR [In]
  fun MsiEnumFeaturesA(szproduct : PSTR, ifeatureindex : UInt32, lpfeaturebuf : PSTR, lpparentbuf : PSTR) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],ifeatureindex : UInt32 [In],lpfeaturebuf : LibC::LPWSTR [In],lpparentbuf : LibC::LPWSTR [In]
  fun MsiEnumFeaturesW(szproduct : LibC::LPWSTR, ifeatureindex : UInt32, lpfeaturebuf : LibC::LPWSTR, lpparentbuf : LibC::LPWSTR) : UInt32

  # Params # icomponentindex : UInt32 [In],lpcomponentbuf : PSTR [In]
  fun MsiEnumComponentsA(icomponentindex : UInt32, lpcomponentbuf : PSTR) : UInt32

  # Params # icomponentindex : UInt32 [In],lpcomponentbuf : LibC::LPWSTR [In]
  fun MsiEnumComponentsW(icomponentindex : UInt32, lpcomponentbuf : LibC::LPWSTR) : UInt32

  # Params # szusersid : PSTR [In],dwcontext : UInt32 [In],dwindex : UInt32 [In],szinstalledcomponentcode : PSTR [In],pdwinstalledcontext : MSIINSTALLCONTEXT* [In],szsid : UInt8* [In],pcchsid : UInt32* [In]
  fun MsiEnumComponentsExA(szusersid : PSTR, dwcontext : UInt32, dwindex : UInt32, szinstalledcomponentcode : PSTR, pdwinstalledcontext : MSIINSTALLCONTEXT*, szsid : UInt8*, pcchsid : UInt32*) : UInt32

  # Params # szusersid : LibC::LPWSTR [In],dwcontext : UInt32 [In],dwindex : UInt32 [In],szinstalledcomponentcode : LibC::LPWSTR [In],pdwinstalledcontext : MSIINSTALLCONTEXT* [In],szsid : Char* [In],pcchsid : UInt32* [In]
  fun MsiEnumComponentsExW(szusersid : LibC::LPWSTR, dwcontext : UInt32, dwindex : UInt32, szinstalledcomponentcode : LibC::LPWSTR, pdwinstalledcontext : MSIINSTALLCONTEXT*, szsid : Char*, pcchsid : UInt32*) : UInt32

  # Params # szcomponent : PSTR [In],iproductindex : UInt32 [In],lpproductbuf : PSTR [In]
  fun MsiEnumClientsA(szcomponent : PSTR, iproductindex : UInt32, lpproductbuf : PSTR) : UInt32

  # Params # szcomponent : LibC::LPWSTR [In],iproductindex : UInt32 [In],lpproductbuf : LibC::LPWSTR [In]
  fun MsiEnumClientsW(szcomponent : LibC::LPWSTR, iproductindex : UInt32, lpproductbuf : LibC::LPWSTR) : UInt32

  # Params # szcomponent : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwproductindex : UInt32 [In],szproductbuf : PSTR [In],pdwinstalledcontext : MSIINSTALLCONTEXT* [In],szsid : UInt8* [In],pcchsid : UInt32* [In]
  fun MsiEnumClientsExA(szcomponent : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, dwproductindex : UInt32, szproductbuf : PSTR, pdwinstalledcontext : MSIINSTALLCONTEXT*, szsid : UInt8*, pcchsid : UInt32*) : UInt32

  # Params # szcomponent : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwproductindex : UInt32 [In],szproductbuf : LibC::LPWSTR [In],pdwinstalledcontext : MSIINSTALLCONTEXT* [In],szsid : Char* [In],pcchsid : UInt32* [In]
  fun MsiEnumClientsExW(szcomponent : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, dwproductindex : UInt32, szproductbuf : LibC::LPWSTR, pdwinstalledcontext : MSIINSTALLCONTEXT*, szsid : Char*, pcchsid : UInt32*) : UInt32

  # Params # szcomponent : PSTR [In],iindex : UInt32 [In],lpqualifierbuf : UInt8* [In],pcchqualifierbuf : UInt32* [In],lpapplicationdatabuf : UInt8* [In],pcchapplicationdatabuf : UInt32* [In]
  fun MsiEnumComponentQualifiersA(szcomponent : PSTR, iindex : UInt32, lpqualifierbuf : UInt8*, pcchqualifierbuf : UInt32*, lpapplicationdatabuf : UInt8*, pcchapplicationdatabuf : UInt32*) : UInt32

  # Params # szcomponent : LibC::LPWSTR [In],iindex : UInt32 [In],lpqualifierbuf : Char* [In],pcchqualifierbuf : UInt32* [In],lpapplicationdatabuf : Char* [In],pcchapplicationdatabuf : UInt32* [In]
  fun MsiEnumComponentQualifiersW(szcomponent : LibC::LPWSTR, iindex : UInt32, lpqualifierbuf : Char*, pcchqualifierbuf : UInt32*, lpapplicationdatabuf : Char*, pcchapplicationdatabuf : UInt32*) : UInt32

  # Params # szproduct : PSTR [In],hproduct : MSIHANDLE* [In]
  fun MsiOpenProductA(szproduct : PSTR, hproduct : MSIHANDLE*) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],hproduct : MSIHANDLE* [In]
  fun MsiOpenProductW(szproduct : LibC::LPWSTR, hproduct : MSIHANDLE*) : UInt32

  # Params # szpackagepath : PSTR [In],hproduct : MSIHANDLE* [In]
  fun MsiOpenPackageA(szpackagepath : PSTR, hproduct : MSIHANDLE*) : UInt32

  # Params # szpackagepath : LibC::LPWSTR [In],hproduct : MSIHANDLE* [In]
  fun MsiOpenPackageW(szpackagepath : LibC::LPWSTR, hproduct : MSIHANDLE*) : UInt32

  # Params # szpackagepath : PSTR [In],dwoptions : UInt32 [In],hproduct : MSIHANDLE* [In]
  fun MsiOpenPackageExA(szpackagepath : PSTR, dwoptions : UInt32, hproduct : MSIHANDLE*) : UInt32

  # Params # szpackagepath : LibC::LPWSTR [In],dwoptions : UInt32 [In],hproduct : MSIHANDLE* [In]
  fun MsiOpenPackageExW(szpackagepath : LibC::LPWSTR, dwoptions : UInt32, hproduct : MSIHANDLE*) : UInt32

  # Params # szproductcode : PSTR [In],szpatchpackages : PSTR [In],pcfiles : UInt32* [In],pphfilerecords : MSIHANDLE** [In]
  fun MsiGetPatchFileListA(szproductcode : PSTR, szpatchpackages : PSTR, pcfiles : UInt32*, pphfilerecords : MSIHANDLE**) : UInt32

  # Params # szproductcode : LibC::LPWSTR [In],szpatchpackages : LibC::LPWSTR [In],pcfiles : UInt32* [In],pphfilerecords : MSIHANDLE** [In]
  fun MsiGetPatchFileListW(szproductcode : LibC::LPWSTR, szpatchpackages : LibC::LPWSTR, pcfiles : UInt32*, pphfilerecords : MSIHANDLE**) : UInt32

  # Params # hproduct : MSIHANDLE [In],szproperty : PSTR [In],lpvaluebuf : UInt8* [In],pcchvaluebuf : UInt32* [In]
  fun MsiGetProductPropertyA(hproduct : MSIHANDLE, szproperty : PSTR, lpvaluebuf : UInt8*, pcchvaluebuf : UInt32*) : UInt32

  # Params # hproduct : MSIHANDLE [In],szproperty : LibC::LPWSTR [In],lpvaluebuf : Char* [In],pcchvaluebuf : UInt32* [In]
  fun MsiGetProductPropertyW(hproduct : MSIHANDLE, szproperty : LibC::LPWSTR, lpvaluebuf : Char*, pcchvaluebuf : UInt32*) : UInt32

  # Params # szpackagepath : PSTR [In]
  fun MsiVerifyPackageA(szpackagepath : PSTR) : UInt32

  # Params # szpackagepath : LibC::LPWSTR [In]
  fun MsiVerifyPackageW(szpackagepath : LibC::LPWSTR) : UInt32

  # Params # hproduct : MSIHANDLE [In],szfeature : PSTR [In],lpattributes : UInt32* [In],lptitlebuf : UInt8* [In],pcchtitlebuf : UInt32* [In],lphelpbuf : UInt8* [In],pcchhelpbuf : UInt32* [In]
  fun MsiGetFeatureInfoA(hproduct : MSIHANDLE, szfeature : PSTR, lpattributes : UInt32*, lptitlebuf : UInt8*, pcchtitlebuf : UInt32*, lphelpbuf : UInt8*, pcchhelpbuf : UInt32*) : UInt32

  # Params # hproduct : MSIHANDLE [In],szfeature : LibC::LPWSTR [In],lpattributes : UInt32* [In],lptitlebuf : Char* [In],pcchtitlebuf : UInt32* [In],lphelpbuf : Char* [In],pcchhelpbuf : UInt32* [In]
  fun MsiGetFeatureInfoW(hproduct : MSIHANDLE, szfeature : LibC::LPWSTR, lpattributes : UInt32*, lptitlebuf : Char*, pcchtitlebuf : UInt32*, lphelpbuf : Char*, pcchhelpbuf : UInt32*) : UInt32

  # Params # szproduct : PSTR [In],szcomponent : PSTR [In],einstallstate : INSTALLSTATE [In]
  fun MsiInstallMissingComponentA(szproduct : PSTR, szcomponent : PSTR, einstallstate : INSTALLSTATE) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],szcomponent : LibC::LPWSTR [In],einstallstate : INSTALLSTATE [In]
  fun MsiInstallMissingComponentW(szproduct : LibC::LPWSTR, szcomponent : LibC::LPWSTR, einstallstate : INSTALLSTATE) : UInt32

  # Params # szproduct : PSTR [In],szfile : PSTR [In]
  fun MsiInstallMissingFileA(szproduct : PSTR, szfile : PSTR) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],szfile : LibC::LPWSTR [In]
  fun MsiInstallMissingFileW(szproduct : LibC::LPWSTR, szfile : LibC::LPWSTR) : UInt32

  # Params # szcomponent : PSTR [In],lppathbuf : UInt8* [In],pcchbuf : UInt32* [In]
  fun MsiLocateComponentA(szcomponent : PSTR, lppathbuf : UInt8*, pcchbuf : UInt32*) : INSTALLSTATE

  # Params # szcomponent : LibC::LPWSTR [In],lppathbuf : Char* [In],pcchbuf : UInt32* [In]
  fun MsiLocateComponentW(szcomponent : LibC::LPWSTR, lppathbuf : Char*, pcchbuf : UInt32*) : INSTALLSTATE

  # Params # szproduct : PSTR [In],szusername : PSTR [In],dwreserved : UInt32 [In]
  fun MsiSourceListClearAllA(szproduct : PSTR, szusername : PSTR, dwreserved : UInt32) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],szusername : LibC::LPWSTR [In],dwreserved : UInt32 [In]
  fun MsiSourceListClearAllW(szproduct : LibC::LPWSTR, szusername : LibC::LPWSTR, dwreserved : UInt32) : UInt32

  # Params # szproduct : PSTR [In],szusername : PSTR [In],dwreserved : UInt32 [In],szsource : PSTR [In]
  fun MsiSourceListAddSourceA(szproduct : PSTR, szusername : PSTR, dwreserved : UInt32, szsource : PSTR) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],szusername : LibC::LPWSTR [In],dwreserved : UInt32 [In],szsource : LibC::LPWSTR [In]
  fun MsiSourceListAddSourceW(szproduct : LibC::LPWSTR, szusername : LibC::LPWSTR, dwreserved : UInt32, szsource : LibC::LPWSTR) : UInt32

  # Params # szproduct : PSTR [In],szusername : PSTR [In],dwreserved : UInt32 [In]
  fun MsiSourceListForceResolutionA(szproduct : PSTR, szusername : PSTR, dwreserved : UInt32) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],szusername : LibC::LPWSTR [In],dwreserved : UInt32 [In]
  fun MsiSourceListForceResolutionW(szproduct : LibC::LPWSTR, szusername : LibC::LPWSTR, dwreserved : UInt32) : UInt32

  # Params # szproductcodeorpatchcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],szsource : PSTR [In],dwindex : UInt32 [In]
  fun MsiSourceListAddSourceExA(szproductcodeorpatchcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, szsource : PSTR, dwindex : UInt32) : UInt32

  # Params # szproductcodeorpatchcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],szsource : LibC::LPWSTR [In],dwindex : UInt32 [In]
  fun MsiSourceListAddSourceExW(szproductcodeorpatchcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, szsource : LibC::LPWSTR, dwindex : UInt32) : UInt32

  # Params # szproductcodeorpatchcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],dwdiskid : UInt32 [In],szvolumelabel : PSTR [In],szdiskprompt : PSTR [In]
  fun MsiSourceListAddMediaDiskA(szproductcodeorpatchcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, dwdiskid : UInt32, szvolumelabel : PSTR, szdiskprompt : PSTR) : UInt32

  # Params # szproductcodeorpatchcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],dwdiskid : UInt32 [In],szvolumelabel : LibC::LPWSTR [In],szdiskprompt : LibC::LPWSTR [In]
  fun MsiSourceListAddMediaDiskW(szproductcodeorpatchcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, dwdiskid : UInt32, szvolumelabel : LibC::LPWSTR, szdiskprompt : LibC::LPWSTR) : UInt32

  # Params # szproductcodeorpatchcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],szsource : PSTR [In]
  fun MsiSourceListClearSourceA(szproductcodeorpatchcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, szsource : PSTR) : UInt32

  # Params # szproductcodeorpatchcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],szsource : LibC::LPWSTR [In]
  fun MsiSourceListClearSourceW(szproductcodeorpatchcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, szsource : LibC::LPWSTR) : UInt32

  # Params # szproductcodeorpatchcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],dwdiskid : UInt32 [In]
  fun MsiSourceListClearMediaDiskA(szproductcodeorpatchcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, dwdiskid : UInt32) : UInt32

  # Params # szproductcodeorpatchcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],dwdiskid : UInt32 [In]
  fun MsiSourceListClearMediaDiskW(szproductcodeorpatchcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, dwdiskid : UInt32) : UInt32

  # Params # szproductcodeorpatchcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In]
  fun MsiSourceListClearAllExA(szproductcodeorpatchcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32) : UInt32

  # Params # szproductcodeorpatchcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In]
  fun MsiSourceListClearAllExW(szproductcodeorpatchcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32) : UInt32

  # Params # szproductcodeorpatchcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In]
  fun MsiSourceListForceResolutionExA(szproductcodeorpatchcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32) : UInt32

  # Params # szproductcodeorpatchcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In]
  fun MsiSourceListForceResolutionExW(szproductcodeorpatchcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32) : UInt32

  # Params # szproductcodeorpatchcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],szproperty : PSTR [In],szvalue : PSTR [In]
  fun MsiSourceListSetInfoA(szproductcodeorpatchcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, szproperty : PSTR, szvalue : PSTR) : UInt32

  # Params # szproductcodeorpatchcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],szproperty : LibC::LPWSTR [In],szvalue : LibC::LPWSTR [In]
  fun MsiSourceListSetInfoW(szproductcodeorpatchcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, szproperty : LibC::LPWSTR, szvalue : LibC::LPWSTR) : UInt32

  # Params # szproductcodeorpatchcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],szproperty : PSTR [In],szvalue : UInt8* [In],pcchvalue : UInt32* [In]
  fun MsiSourceListGetInfoA(szproductcodeorpatchcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, szproperty : PSTR, szvalue : UInt8*, pcchvalue : UInt32*) : UInt32

  # Params # szproductcodeorpatchcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],szproperty : LibC::LPWSTR [In],szvalue : Char* [In],pcchvalue : UInt32* [In]
  fun MsiSourceListGetInfoW(szproductcodeorpatchcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, szproperty : LibC::LPWSTR, szvalue : Char*, pcchvalue : UInt32*) : UInt32

  # Params # szproductcodeorpatchcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],dwindex : UInt32 [In],szsource : UInt8* [In],pcchsource : UInt32* [In]
  fun MsiSourceListEnumSourcesA(szproductcodeorpatchcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, dwindex : UInt32, szsource : UInt8*, pcchsource : UInt32*) : UInt32

  # Params # szproductcodeorpatchcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],dwindex : UInt32 [In],szsource : Char* [In],pcchsource : UInt32* [In]
  fun MsiSourceListEnumSourcesW(szproductcodeorpatchcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, dwindex : UInt32, szsource : Char*, pcchsource : UInt32*) : UInt32

  # Params # szproductcodeorpatchcode : PSTR [In],szusersid : PSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],dwindex : UInt32 [In],pdwdiskid : UInt32* [In],szvolumelabel : UInt8* [In],pcchvolumelabel : UInt32* [In],szdiskprompt : UInt8* [In],pcchdiskprompt : UInt32* [In]
  fun MsiSourceListEnumMediaDisksA(szproductcodeorpatchcode : PSTR, szusersid : PSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, dwindex : UInt32, pdwdiskid : UInt32*, szvolumelabel : UInt8*, pcchvolumelabel : UInt32*, szdiskprompt : UInt8*, pcchdiskprompt : UInt32*) : UInt32

  # Params # szproductcodeorpatchcode : LibC::LPWSTR [In],szusersid : LibC::LPWSTR [In],dwcontext : MSIINSTALLCONTEXT [In],dwoptions : UInt32 [In],dwindex : UInt32 [In],pdwdiskid : UInt32* [In],szvolumelabel : Char* [In],pcchvolumelabel : UInt32* [In],szdiskprompt : Char* [In],pcchdiskprompt : UInt32* [In]
  fun MsiSourceListEnumMediaDisksW(szproductcodeorpatchcode : LibC::LPWSTR, szusersid : LibC::LPWSTR, dwcontext : MSIINSTALLCONTEXT, dwoptions : UInt32, dwindex : UInt32, pdwdiskid : UInt32*, szvolumelabel : Char*, pcchvolumelabel : UInt32*, szdiskprompt : Char*, pcchdiskprompt : UInt32*) : UInt32

  # Params # szfilepath : PSTR [In],lpversionbuf : UInt8* [In],pcchversionbuf : UInt32* [In],lplangbuf : UInt8* [In],pcchlangbuf : UInt32* [In]
  fun MsiGetFileVersionA(szfilepath : PSTR, lpversionbuf : UInt8*, pcchversionbuf : UInt32*, lplangbuf : UInt8*, pcchlangbuf : UInt32*) : UInt32

  # Params # szfilepath : LibC::LPWSTR [In],lpversionbuf : Char* [In],pcchversionbuf : UInt32* [In],lplangbuf : Char* [In],pcchlangbuf : UInt32* [In]
  fun MsiGetFileVersionW(szfilepath : LibC::LPWSTR, lpversionbuf : Char*, pcchversionbuf : UInt32*, lplangbuf : Char*, pcchlangbuf : UInt32*) : UInt32

  # Params # szfilepath : PSTR [In],dwoptions : UInt32 [In],phash : MSIFILEHASHINFO* [In]
  fun MsiGetFileHashA(szfilepath : PSTR, dwoptions : UInt32, phash : MSIFILEHASHINFO*) : UInt32

  # Params # szfilepath : LibC::LPWSTR [In],dwoptions : UInt32 [In],phash : MSIFILEHASHINFO* [In]
  fun MsiGetFileHashW(szfilepath : LibC::LPWSTR, dwoptions : UInt32, phash : MSIFILEHASHINFO*) : UInt32

  # Params # szsignedobjectpath : PSTR [In],dwflags : UInt32 [In],ppccertcontext : CERT_CONTEXT** [In],pbhashdata : UInt8* [In],pcbhashdata : UInt32* [In]
  fun MsiGetFileSignatureInformationA(szsignedobjectpath : PSTR, dwflags : UInt32, ppccertcontext : CERT_CONTEXT**, pbhashdata : UInt8*, pcbhashdata : UInt32*) : HRESULT

  # Params # szsignedobjectpath : LibC::LPWSTR [In],dwflags : UInt32 [In],ppccertcontext : CERT_CONTEXT** [In],pbhashdata : UInt8* [In],pcbhashdata : UInt32* [In]
  fun MsiGetFileSignatureInformationW(szsignedobjectpath : LibC::LPWSTR, dwflags : UInt32, ppccertcontext : CERT_CONTEXT**, pbhashdata : UInt8*, pcbhashdata : UInt32*) : HRESULT

  # Params # szshortcutpath : PSTR [In],szproductcode : PSTR [In],szfeatureid : PSTR [In],szcomponentcode : PSTR [In]
  fun MsiGetShortcutTargetA(szshortcutpath : PSTR, szproductcode : PSTR, szfeatureid : PSTR, szcomponentcode : PSTR) : UInt32

  # Params # szshortcutpath : LibC::LPWSTR [In],szproductcode : LibC::LPWSTR [In],szfeatureid : LibC::LPWSTR [In],szcomponentcode : LibC::LPWSTR [In]
  fun MsiGetShortcutTargetW(szshortcutpath : LibC::LPWSTR, szproductcode : LibC::LPWSTR, szfeatureid : LibC::LPWSTR, szcomponentcode : LibC::LPWSTR) : UInt32

  # Params # szproduct : PSTR [In],pfelevated : LibC::BOOL* [In]
  fun MsiIsProductElevatedA(szproduct : PSTR, pfelevated : LibC::BOOL*) : UInt32

  # Params # szproduct : LibC::LPWSTR [In],pfelevated : LibC::BOOL* [In]
  fun MsiIsProductElevatedW(szproduct : LibC::LPWSTR, pfelevated : LibC::BOOL*) : UInt32

  # Params # poldsid : PSTR [In],pnewsid : PSTR [In]
  fun MsiNotifySidChangeA(poldsid : PSTR, pnewsid : PSTR) : UInt32

  # Params # poldsid : LibC::LPWSTR [In],pnewsid : LibC::LPWSTR [In]
  fun MsiNotifySidChangeW(poldsid : LibC::LPWSTR, pnewsid : LibC::LPWSTR) : UInt32

  # Params # szname : PSTR [In],dwtransactionattributes : UInt32 [In],phtransactionhandle : MSIHANDLE* [In],phchangeofownerevent : LibC::HANDLE* [In]
  fun MsiBeginTransactionA(szname : PSTR, dwtransactionattributes : UInt32, phtransactionhandle : MSIHANDLE*, phchangeofownerevent : LibC::HANDLE*) : UInt32

  # Params # szname : LibC::LPWSTR [In],dwtransactionattributes : UInt32 [In],phtransactionhandle : MSIHANDLE* [In],phchangeofownerevent : LibC::HANDLE* [In]
  fun MsiBeginTransactionW(szname : LibC::LPWSTR, dwtransactionattributes : UInt32, phtransactionhandle : MSIHANDLE*, phchangeofownerevent : LibC::HANDLE*) : UInt32

  # Params # dwtransactionstate : MSITRANSACTIONSTATE [In]
  fun MsiEndTransaction(dwtransactionstate : MSITRANSACTIONSTATE) : UInt32

  # Params # htransactionhandle : MSIHANDLE [In],dwtransactionattributes : UInt32 [In],phchangeofownerevent : LibC::HANDLE* [In]
  fun MsiJoinTransaction(htransactionhandle : MSIHANDLE, dwtransactionattributes : UInt32, phchangeofownerevent : LibC::HANDLE*) : UInt32

  # Params # hdatabase : MSIHANDLE [In],szquery : PSTR [In],phview : MSIHANDLE* [In]
  fun MsiDatabaseOpenViewA(hdatabase : MSIHANDLE, szquery : PSTR, phview : MSIHANDLE*) : UInt32

  # Params # hdatabase : MSIHANDLE [In],szquery : LibC::LPWSTR [In],phview : MSIHANDLE* [In]
  fun MsiDatabaseOpenViewW(hdatabase : MSIHANDLE, szquery : LibC::LPWSTR, phview : MSIHANDLE*) : UInt32

  # Params # hview : MSIHANDLE [In],szcolumnnamebuffer : UInt8* [In],pcchbuf : UInt32* [In]
  fun MsiViewGetErrorA(hview : MSIHANDLE, szcolumnnamebuffer : UInt8*, pcchbuf : UInt32*) : MSIDBERROR

  # Params # hview : MSIHANDLE [In],szcolumnnamebuffer : Char* [In],pcchbuf : UInt32* [In]
  fun MsiViewGetErrorW(hview : MSIHANDLE, szcolumnnamebuffer : Char*, pcchbuf : UInt32*) : MSIDBERROR

  # Params # hview : MSIHANDLE [In],hrecord : MSIHANDLE [In]
  fun MsiViewExecute(hview : MSIHANDLE, hrecord : MSIHANDLE) : UInt32

  # Params # hview : MSIHANDLE [In],phrecord : MSIHANDLE* [In]
  fun MsiViewFetch(hview : MSIHANDLE, phrecord : MSIHANDLE*) : UInt32

  # Params # hview : MSIHANDLE [In],emodifymode : MSIMODIFY [In],hrecord : MSIHANDLE [In]
  fun MsiViewModify(hview : MSIHANDLE, emodifymode : MSIMODIFY, hrecord : MSIHANDLE) : UInt32

  # Params # hview : MSIHANDLE [In],ecolumninfo : MSICOLINFO [In],phrecord : MSIHANDLE* [In]
  fun MsiViewGetColumnInfo(hview : MSIHANDLE, ecolumninfo : MSICOLINFO, phrecord : MSIHANDLE*) : UInt32

  # Params # hview : MSIHANDLE [In]
  fun MsiViewClose(hview : MSIHANDLE) : UInt32

  # Params # hdatabase : MSIHANDLE [In],sztablename : PSTR [In],phrecord : MSIHANDLE* [In]
  fun MsiDatabaseGetPrimaryKeysA(hdatabase : MSIHANDLE, sztablename : PSTR, phrecord : MSIHANDLE*) : UInt32

  # Params # hdatabase : MSIHANDLE [In],sztablename : LibC::LPWSTR [In],phrecord : MSIHANDLE* [In]
  fun MsiDatabaseGetPrimaryKeysW(hdatabase : MSIHANDLE, sztablename : LibC::LPWSTR, phrecord : MSIHANDLE*) : UInt32

  # Params # hdatabase : MSIHANDLE [In],sztablename : PSTR [In]
  fun MsiDatabaseIsTablePersistentA(hdatabase : MSIHANDLE, sztablename : PSTR) : MSICONDITION

  # Params # hdatabase : MSIHANDLE [In],sztablename : LibC::LPWSTR [In]
  fun MsiDatabaseIsTablePersistentW(hdatabase : MSIHANDLE, sztablename : LibC::LPWSTR) : MSICONDITION

  # Params # hdatabase : MSIHANDLE [In],szdatabasepath : PSTR [In],uiupdatecount : UInt32 [In],phsummaryinfo : MSIHANDLE* [In]
  fun MsiGetSummaryInformationA(hdatabase : MSIHANDLE, szdatabasepath : PSTR, uiupdatecount : UInt32, phsummaryinfo : MSIHANDLE*) : UInt32

  # Params # hdatabase : MSIHANDLE [In],szdatabasepath : LibC::LPWSTR [In],uiupdatecount : UInt32 [In],phsummaryinfo : MSIHANDLE* [In]
  fun MsiGetSummaryInformationW(hdatabase : MSIHANDLE, szdatabasepath : LibC::LPWSTR, uiupdatecount : UInt32, phsummaryinfo : MSIHANDLE*) : UInt32

  # Params # hsummaryinfo : MSIHANDLE [In],puipropertycount : UInt32* [In]
  fun MsiSummaryInfoGetPropertyCount(hsummaryinfo : MSIHANDLE, puipropertycount : UInt32*) : UInt32

  # Params # hsummaryinfo : MSIHANDLE [In],uiproperty : UInt32 [In],uidatatype : UInt32 [In],ivalue : Int32 [In],pftvalue : FILETIME* [In],szvalue : PSTR [In]
  fun MsiSummaryInfoSetPropertyA(hsummaryinfo : MSIHANDLE, uiproperty : UInt32, uidatatype : UInt32, ivalue : Int32, pftvalue : FILETIME*, szvalue : PSTR) : UInt32

  # Params # hsummaryinfo : MSIHANDLE [In],uiproperty : UInt32 [In],uidatatype : UInt32 [In],ivalue : Int32 [In],pftvalue : FILETIME* [In],szvalue : LibC::LPWSTR [In]
  fun MsiSummaryInfoSetPropertyW(hsummaryinfo : MSIHANDLE, uiproperty : UInt32, uidatatype : UInt32, ivalue : Int32, pftvalue : FILETIME*, szvalue : LibC::LPWSTR) : UInt32

  # Params # hsummaryinfo : MSIHANDLE [In],uiproperty : UInt32 [In],puidatatype : UInt32* [In],pivalue : Int32* [In],pftvalue : FILETIME* [In],szvaluebuf : UInt8* [In],pcchvaluebuf : UInt32* [In]
  fun MsiSummaryInfoGetPropertyA(hsummaryinfo : MSIHANDLE, uiproperty : UInt32, puidatatype : UInt32*, pivalue : Int32*, pftvalue : FILETIME*, szvaluebuf : UInt8*, pcchvaluebuf : UInt32*) : UInt32

  # Params # hsummaryinfo : MSIHANDLE [In],uiproperty : UInt32 [In],puidatatype : UInt32* [In],pivalue : Int32* [In],pftvalue : FILETIME* [In],szvaluebuf : Char* [In],pcchvaluebuf : UInt32* [In]
  fun MsiSummaryInfoGetPropertyW(hsummaryinfo : MSIHANDLE, uiproperty : UInt32, puidatatype : UInt32*, pivalue : Int32*, pftvalue : FILETIME*, szvaluebuf : Char*, pcchvaluebuf : UInt32*) : UInt32

  # Params # hsummaryinfo : MSIHANDLE [In]
  fun MsiSummaryInfoPersist(hsummaryinfo : MSIHANDLE) : UInt32

  # Params # szdatabasepath : PSTR [In],szpersist : PSTR [In],phdatabase : MSIHANDLE* [In]
  fun MsiOpenDatabaseA(szdatabasepath : PSTR, szpersist : PSTR, phdatabase : MSIHANDLE*) : UInt32

  # Params # szdatabasepath : LibC::LPWSTR [In],szpersist : LibC::LPWSTR [In],phdatabase : MSIHANDLE* [In]
  fun MsiOpenDatabaseW(szdatabasepath : LibC::LPWSTR, szpersist : LibC::LPWSTR, phdatabase : MSIHANDLE*) : UInt32

  # Params # hdatabase : MSIHANDLE [In],szfolderpath : PSTR [In],szfilename : PSTR [In]
  fun MsiDatabaseImportA(hdatabase : MSIHANDLE, szfolderpath : PSTR, szfilename : PSTR) : UInt32

  # Params # hdatabase : MSIHANDLE [In],szfolderpath : LibC::LPWSTR [In],szfilename : LibC::LPWSTR [In]
  fun MsiDatabaseImportW(hdatabase : MSIHANDLE, szfolderpath : LibC::LPWSTR, szfilename : LibC::LPWSTR) : UInt32

  # Params # hdatabase : MSIHANDLE [In],sztablename : PSTR [In],szfolderpath : PSTR [In],szfilename : PSTR [In]
  fun MsiDatabaseExportA(hdatabase : MSIHANDLE, sztablename : PSTR, szfolderpath : PSTR, szfilename : PSTR) : UInt32

  # Params # hdatabase : MSIHANDLE [In],sztablename : LibC::LPWSTR [In],szfolderpath : LibC::LPWSTR [In],szfilename : LibC::LPWSTR [In]
  fun MsiDatabaseExportW(hdatabase : MSIHANDLE, sztablename : LibC::LPWSTR, szfolderpath : LibC::LPWSTR, szfilename : LibC::LPWSTR) : UInt32

  # Params # hdatabase : MSIHANDLE [In],hdatabasemerge : MSIHANDLE [In],sztablename : PSTR [In]
  fun MsiDatabaseMergeA(hdatabase : MSIHANDLE, hdatabasemerge : MSIHANDLE, sztablename : PSTR) : UInt32

  # Params # hdatabase : MSIHANDLE [In],hdatabasemerge : MSIHANDLE [In],sztablename : LibC::LPWSTR [In]
  fun MsiDatabaseMergeW(hdatabase : MSIHANDLE, hdatabasemerge : MSIHANDLE, sztablename : LibC::LPWSTR) : UInt32

  # Params # hdatabase : MSIHANDLE [In],hdatabasereference : MSIHANDLE [In],sztransformfile : PSTR [In],ireserved1 : Int32 [In],ireserved2 : Int32 [In]
  fun MsiDatabaseGenerateTransformA(hdatabase : MSIHANDLE, hdatabasereference : MSIHANDLE, sztransformfile : PSTR, ireserved1 : Int32, ireserved2 : Int32) : UInt32

  # Params # hdatabase : MSIHANDLE [In],hdatabasereference : MSIHANDLE [In],sztransformfile : LibC::LPWSTR [In],ireserved1 : Int32 [In],ireserved2 : Int32 [In]
  fun MsiDatabaseGenerateTransformW(hdatabase : MSIHANDLE, hdatabasereference : MSIHANDLE, sztransformfile : LibC::LPWSTR, ireserved1 : Int32, ireserved2 : Int32) : UInt32

  # Params # hdatabase : MSIHANDLE [In],sztransformfile : PSTR [In],ierrorconditions : MSITRANSFORM_ERROR [In]
  fun MsiDatabaseApplyTransformA(hdatabase : MSIHANDLE, sztransformfile : PSTR, ierrorconditions : MSITRANSFORM_ERROR) : UInt32

  # Params # hdatabase : MSIHANDLE [In],sztransformfile : LibC::LPWSTR [In],ierrorconditions : MSITRANSFORM_ERROR [In]
  fun MsiDatabaseApplyTransformW(hdatabase : MSIHANDLE, sztransformfile : LibC::LPWSTR, ierrorconditions : MSITRANSFORM_ERROR) : UInt32

  # Params # hdatabase : MSIHANDLE [In],hdatabasereference : MSIHANDLE [In],sztransformfile : PSTR [In],ierrorconditions : MSITRANSFORM_ERROR [In],ivalidation : MSITRANSFORM_VALIDATE [In]
  fun MsiCreateTransformSummaryInfoA(hdatabase : MSIHANDLE, hdatabasereference : MSIHANDLE, sztransformfile : PSTR, ierrorconditions : MSITRANSFORM_ERROR, ivalidation : MSITRANSFORM_VALIDATE) : UInt32

  # Params # hdatabase : MSIHANDLE [In],hdatabasereference : MSIHANDLE [In],sztransformfile : LibC::LPWSTR [In],ierrorconditions : MSITRANSFORM_ERROR [In],ivalidation : MSITRANSFORM_VALIDATE [In]
  fun MsiCreateTransformSummaryInfoW(hdatabase : MSIHANDLE, hdatabasereference : MSIHANDLE, sztransformfile : LibC::LPWSTR, ierrorconditions : MSITRANSFORM_ERROR, ivalidation : MSITRANSFORM_VALIDATE) : UInt32

  # Params # hdatabase : MSIHANDLE [In]
  fun MsiDatabaseCommit(hdatabase : MSIHANDLE) : UInt32

  # Params # hdatabase : MSIHANDLE [In]
  fun MsiGetDatabaseState(hdatabase : MSIHANDLE) : MSIDBSTATE

  # Params # cparams : UInt32 [In]
  fun MsiCreateRecord(cparams : UInt32) : MSIHANDLE

  # Params # hrecord : MSIHANDLE [In],ifield : UInt32 [In]
  fun MsiRecordIsNull(hrecord : MSIHANDLE, ifield : UInt32) : LibC::BOOL

  # Params # hrecord : MSIHANDLE [In],ifield : UInt32 [In]
  fun MsiRecordDataSize(hrecord : MSIHANDLE, ifield : UInt32) : UInt32

  # Params # hrecord : MSIHANDLE [In],ifield : UInt32 [In],ivalue : Int32 [In]
  fun MsiRecordSetInteger(hrecord : MSIHANDLE, ifield : UInt32, ivalue : Int32) : UInt32

  # Params # hrecord : MSIHANDLE [In],ifield : UInt32 [In],szvalue : PSTR [In]
  fun MsiRecordSetStringA(hrecord : MSIHANDLE, ifield : UInt32, szvalue : PSTR) : UInt32

  # Params # hrecord : MSIHANDLE [In],ifield : UInt32 [In],szvalue : LibC::LPWSTR [In]
  fun MsiRecordSetStringW(hrecord : MSIHANDLE, ifield : UInt32, szvalue : LibC::LPWSTR) : UInt32

  # Params # hrecord : MSIHANDLE [In],ifield : UInt32 [In]
  fun MsiRecordGetInteger(hrecord : MSIHANDLE, ifield : UInt32) : Int32

  # Params # hrecord : MSIHANDLE [In],ifield : UInt32 [In],szvaluebuf : UInt8* [In],pcchvaluebuf : UInt32* [In]
  fun MsiRecordGetStringA(hrecord : MSIHANDLE, ifield : UInt32, szvaluebuf : UInt8*, pcchvaluebuf : UInt32*) : UInt32

  # Params # hrecord : MSIHANDLE [In],ifield : UInt32 [In],szvaluebuf : Char* [In],pcchvaluebuf : UInt32* [In]
  fun MsiRecordGetStringW(hrecord : MSIHANDLE, ifield : UInt32, szvaluebuf : Char*, pcchvaluebuf : UInt32*) : UInt32

  # Params # hrecord : MSIHANDLE [In]
  fun MsiRecordGetFieldCount(hrecord : MSIHANDLE) : UInt32

  # Params # hrecord : MSIHANDLE [In],ifield : UInt32 [In],szfilepath : PSTR [In]
  fun MsiRecordSetStreamA(hrecord : MSIHANDLE, ifield : UInt32, szfilepath : PSTR) : UInt32

  # Params # hrecord : MSIHANDLE [In],ifield : UInt32 [In],szfilepath : LibC::LPWSTR [In]
  fun MsiRecordSetStreamW(hrecord : MSIHANDLE, ifield : UInt32, szfilepath : LibC::LPWSTR) : UInt32

  # Params # hrecord : MSIHANDLE [In],ifield : UInt32 [In],szdatabuf : PSTR [In],pcbdatabuf : UInt32* [In]
  fun MsiRecordReadStream(hrecord : MSIHANDLE, ifield : UInt32, szdatabuf : PSTR, pcbdatabuf : UInt32*) : UInt32

  # Params # hrecord : MSIHANDLE [In]
  fun MsiRecordClearData(hrecord : MSIHANDLE) : UInt32

  # Params # hinstall : MSIHANDLE [In]
  fun MsiGetActiveDatabase(hinstall : MSIHANDLE) : MSIHANDLE

  # Params # hinstall : MSIHANDLE [In],szname : PSTR [In],szvalue : PSTR [In]
  fun MsiSetPropertyA(hinstall : MSIHANDLE, szname : PSTR, szvalue : PSTR) : UInt32

  # Params # hinstall : MSIHANDLE [In],szname : LibC::LPWSTR [In],szvalue : LibC::LPWSTR [In]
  fun MsiSetPropertyW(hinstall : MSIHANDLE, szname : LibC::LPWSTR, szvalue : LibC::LPWSTR) : UInt32

  # Params # hinstall : MSIHANDLE [In],szname : PSTR [In],szvaluebuf : UInt8* [In],pcchvaluebuf : UInt32* [In]
  fun MsiGetPropertyA(hinstall : MSIHANDLE, szname : PSTR, szvaluebuf : UInt8*, pcchvaluebuf : UInt32*) : UInt32

  # Params # hinstall : MSIHANDLE [In],szname : LibC::LPWSTR [In],szvaluebuf : Char* [In],pcchvaluebuf : UInt32* [In]
  fun MsiGetPropertyW(hinstall : MSIHANDLE, szname : LibC::LPWSTR, szvaluebuf : Char*, pcchvaluebuf : UInt32*) : UInt32

  # Params # hinstall : MSIHANDLE [In]
  fun MsiGetLanguage(hinstall : MSIHANDLE) : UInt16

  # Params # hinstall : MSIHANDLE [In],erunmode : MSIRUNMODE [In]
  fun MsiGetMode(hinstall : MSIHANDLE, erunmode : MSIRUNMODE) : LibC::BOOL

  # Params # hinstall : MSIHANDLE [In],erunmode : MSIRUNMODE [In],fstate : LibC::BOOL [In]
  fun MsiSetMode(hinstall : MSIHANDLE, erunmode : MSIRUNMODE, fstate : LibC::BOOL) : UInt32

  # Params # hinstall : MSIHANDLE [In],hrecord : MSIHANDLE [In],szresultbuf : UInt8* [In],pcchresultbuf : UInt32* [In]
  fun MsiFormatRecordA(hinstall : MSIHANDLE, hrecord : MSIHANDLE, szresultbuf : UInt8*, pcchresultbuf : UInt32*) : UInt32

  # Params # hinstall : MSIHANDLE [In],hrecord : MSIHANDLE [In],szresultbuf : Char* [In],pcchresultbuf : UInt32* [In]
  fun MsiFormatRecordW(hinstall : MSIHANDLE, hrecord : MSIHANDLE, szresultbuf : Char*, pcchresultbuf : UInt32*) : UInt32

  # Params # hinstall : MSIHANDLE [In],szaction : PSTR [In]
  fun MsiDoActionA(hinstall : MSIHANDLE, szaction : PSTR) : UInt32

  # Params # hinstall : MSIHANDLE [In],szaction : LibC::LPWSTR [In]
  fun MsiDoActionW(hinstall : MSIHANDLE, szaction : LibC::LPWSTR) : UInt32

  # Params # hinstall : MSIHANDLE [In],sztable : PSTR [In],isequencemode : Int32 [In]
  fun MsiSequenceA(hinstall : MSIHANDLE, sztable : PSTR, isequencemode : Int32) : UInt32

  # Params # hinstall : MSIHANDLE [In],sztable : LibC::LPWSTR [In],isequencemode : Int32 [In]
  fun MsiSequenceW(hinstall : MSIHANDLE, sztable : LibC::LPWSTR, isequencemode : Int32) : UInt32

  # Params # hinstall : MSIHANDLE [In],emessagetype : INSTALLMESSAGE [In],hrecord : MSIHANDLE [In]
  fun MsiProcessMessage(hinstall : MSIHANDLE, emessagetype : INSTALLMESSAGE, hrecord : MSIHANDLE) : Int32

  # Params # hinstall : MSIHANDLE [In],szcondition : PSTR [In]
  fun MsiEvaluateConditionA(hinstall : MSIHANDLE, szcondition : PSTR) : MSICONDITION

  # Params # hinstall : MSIHANDLE [In],szcondition : LibC::LPWSTR [In]
  fun MsiEvaluateConditionW(hinstall : MSIHANDLE, szcondition : LibC::LPWSTR) : MSICONDITION

  # Params # hinstall : MSIHANDLE [In],szfeature : PSTR [In],piinstalled : INSTALLSTATE* [In],piaction : INSTALLSTATE* [In]
  fun MsiGetFeatureStateA(hinstall : MSIHANDLE, szfeature : PSTR, piinstalled : INSTALLSTATE*, piaction : INSTALLSTATE*) : UInt32

  # Params # hinstall : MSIHANDLE [In],szfeature : LibC::LPWSTR [In],piinstalled : INSTALLSTATE* [In],piaction : INSTALLSTATE* [In]
  fun MsiGetFeatureStateW(hinstall : MSIHANDLE, szfeature : LibC::LPWSTR, piinstalled : INSTALLSTATE*, piaction : INSTALLSTATE*) : UInt32

  # Params # hinstall : MSIHANDLE [In],szfeature : PSTR [In],istate : INSTALLSTATE [In]
  fun MsiSetFeatureStateA(hinstall : MSIHANDLE, szfeature : PSTR, istate : INSTALLSTATE) : UInt32

  # Params # hinstall : MSIHANDLE [In],szfeature : LibC::LPWSTR [In],istate : INSTALLSTATE [In]
  fun MsiSetFeatureStateW(hinstall : MSIHANDLE, szfeature : LibC::LPWSTR, istate : INSTALLSTATE) : UInt32

  # Params # hinstall : MSIHANDLE [In],szfeature : PSTR [In],dwattributes : UInt32 [In]
  fun MsiSetFeatureAttributesA(hinstall : MSIHANDLE, szfeature : PSTR, dwattributes : UInt32) : UInt32

  # Params # hinstall : MSIHANDLE [In],szfeature : LibC::LPWSTR [In],dwattributes : UInt32 [In]
  fun MsiSetFeatureAttributesW(hinstall : MSIHANDLE, szfeature : LibC::LPWSTR, dwattributes : UInt32) : UInt32

  # Params # hinstall : MSIHANDLE [In],szcomponent : PSTR [In],piinstalled : INSTALLSTATE* [In],piaction : INSTALLSTATE* [In]
  fun MsiGetComponentStateA(hinstall : MSIHANDLE, szcomponent : PSTR, piinstalled : INSTALLSTATE*, piaction : INSTALLSTATE*) : UInt32

  # Params # hinstall : MSIHANDLE [In],szcomponent : LibC::LPWSTR [In],piinstalled : INSTALLSTATE* [In],piaction : INSTALLSTATE* [In]
  fun MsiGetComponentStateW(hinstall : MSIHANDLE, szcomponent : LibC::LPWSTR, piinstalled : INSTALLSTATE*, piaction : INSTALLSTATE*) : UInt32

  # Params # hinstall : MSIHANDLE [In],szcomponent : PSTR [In],istate : INSTALLSTATE [In]
  fun MsiSetComponentStateA(hinstall : MSIHANDLE, szcomponent : PSTR, istate : INSTALLSTATE) : UInt32

  # Params # hinstall : MSIHANDLE [In],szcomponent : LibC::LPWSTR [In],istate : INSTALLSTATE [In]
  fun MsiSetComponentStateW(hinstall : MSIHANDLE, szcomponent : LibC::LPWSTR, istate : INSTALLSTATE) : UInt32

  # Params # hinstall : MSIHANDLE [In],szfeature : PSTR [In],icosttree : MSICOSTTREE [In],istate : INSTALLSTATE [In],picost : Int32* [In]
  fun MsiGetFeatureCostA(hinstall : MSIHANDLE, szfeature : PSTR, icosttree : MSICOSTTREE, istate : INSTALLSTATE, picost : Int32*) : UInt32

  # Params # hinstall : MSIHANDLE [In],szfeature : LibC::LPWSTR [In],icosttree : MSICOSTTREE [In],istate : INSTALLSTATE [In],picost : Int32* [In]
  fun MsiGetFeatureCostW(hinstall : MSIHANDLE, szfeature : LibC::LPWSTR, icosttree : MSICOSTTREE, istate : INSTALLSTATE, picost : Int32*) : UInt32

  # Params # hinstall : MSIHANDLE [In],szcomponent : PSTR [In],dwindex : UInt32 [In],istate : INSTALLSTATE [In],szdrivebuf : UInt8* [In],pcchdrivebuf : UInt32* [In],picost : Int32* [In],pitempcost : Int32* [In]
  fun MsiEnumComponentCostsA(hinstall : MSIHANDLE, szcomponent : PSTR, dwindex : UInt32, istate : INSTALLSTATE, szdrivebuf : UInt8*, pcchdrivebuf : UInt32*, picost : Int32*, pitempcost : Int32*) : UInt32

  # Params # hinstall : MSIHANDLE [In],szcomponent : LibC::LPWSTR [In],dwindex : UInt32 [In],istate : INSTALLSTATE [In],szdrivebuf : Char* [In],pcchdrivebuf : UInt32* [In],picost : Int32* [In],pitempcost : Int32* [In]
  fun MsiEnumComponentCostsW(hinstall : MSIHANDLE, szcomponent : LibC::LPWSTR, dwindex : UInt32, istate : INSTALLSTATE, szdrivebuf : Char*, pcchdrivebuf : UInt32*, picost : Int32*, pitempcost : Int32*) : UInt32

  # Params # hinstall : MSIHANDLE [In],iinstalllevel : Int32 [In]
  fun MsiSetInstallLevel(hinstall : MSIHANDLE, iinstalllevel : Int32) : UInt32

  # Params # hinstall : MSIHANDLE [In],szfeature : PSTR [In],lpinstallstates : UInt32* [In]
  fun MsiGetFeatureValidStatesA(hinstall : MSIHANDLE, szfeature : PSTR, lpinstallstates : UInt32*) : UInt32

  # Params # hinstall : MSIHANDLE [In],szfeature : LibC::LPWSTR [In],lpinstallstates : UInt32* [In]
  fun MsiGetFeatureValidStatesW(hinstall : MSIHANDLE, szfeature : LibC::LPWSTR, lpinstallstates : UInt32*) : UInt32

  # Params # hinstall : MSIHANDLE [In],szfolder : PSTR [In],szpathbuf : UInt8* [In],pcchpathbuf : UInt32* [In]
  fun MsiGetSourcePathA(hinstall : MSIHANDLE, szfolder : PSTR, szpathbuf : UInt8*, pcchpathbuf : UInt32*) : UInt32

  # Params # hinstall : MSIHANDLE [In],szfolder : LibC::LPWSTR [In],szpathbuf : Char* [In],pcchpathbuf : UInt32* [In]
  fun MsiGetSourcePathW(hinstall : MSIHANDLE, szfolder : LibC::LPWSTR, szpathbuf : Char*, pcchpathbuf : UInt32*) : UInt32

  # Params # hinstall : MSIHANDLE [In],szfolder : PSTR [In],szpathbuf : UInt8* [In],pcchpathbuf : UInt32* [In]
  fun MsiGetTargetPathA(hinstall : MSIHANDLE, szfolder : PSTR, szpathbuf : UInt8*, pcchpathbuf : UInt32*) : UInt32

  # Params # hinstall : MSIHANDLE [In],szfolder : LibC::LPWSTR [In],szpathbuf : Char* [In],pcchpathbuf : UInt32* [In]
  fun MsiGetTargetPathW(hinstall : MSIHANDLE, szfolder : LibC::LPWSTR, szpathbuf : Char*, pcchpathbuf : UInt32*) : UInt32

  # Params # hinstall : MSIHANDLE [In],szfolder : PSTR [In],szfolderpath : PSTR [In]
  fun MsiSetTargetPathA(hinstall : MSIHANDLE, szfolder : PSTR, szfolderpath : PSTR) : UInt32

  # Params # hinstall : MSIHANDLE [In],szfolder : LibC::LPWSTR [In],szfolderpath : LibC::LPWSTR [In]
  fun MsiSetTargetPathW(hinstall : MSIHANDLE, szfolder : LibC::LPWSTR, szfolderpath : LibC::LPWSTR) : UInt32

  # Params # hinstall : MSIHANDLE [In]
  fun MsiVerifyDiskSpace(hinstall : MSIHANDLE) : UInt32

  # Params # hdatabase : MSIHANDLE [In],phpreview : MSIHANDLE* [In]
  fun MsiEnableUIPreview(hdatabase : MSIHANDLE, phpreview : MSIHANDLE*) : UInt32

  # Params # hpreview : MSIHANDLE [In],szdialogname : PSTR [In]
  fun MsiPreviewDialogA(hpreview : MSIHANDLE, szdialogname : PSTR) : UInt32

  # Params # hpreview : MSIHANDLE [In],szdialogname : LibC::LPWSTR [In]
  fun MsiPreviewDialogW(hpreview : MSIHANDLE, szdialogname : LibC::LPWSTR) : UInt32

  # Params # hpreview : MSIHANDLE [In],szcontrolname : PSTR [In],szbillboard : PSTR [In]
  fun MsiPreviewBillboardA(hpreview : MSIHANDLE, szcontrolname : PSTR, szbillboard : PSTR) : UInt32

  # Params # hpreview : MSIHANDLE [In],szcontrolname : LibC::LPWSTR [In],szbillboard : LibC::LPWSTR [In]
  fun MsiPreviewBillboardW(hpreview : MSIHANDLE, szcontrolname : LibC::LPWSTR, szbillboard : LibC::LPWSTR) : UInt32

  # Params # 
  fun MsiGetLastErrorRecord : MSIHANDLE

  # Params # rpchandle : LibC::HANDLE [In],protfiledata : PROTECTED_FILE_DATA* [In]
  fun SfcGetNextProtectedFile(rpchandle : LibC::HANDLE, protfiledata : PROTECTED_FILE_DATA*) : LibC::BOOL

  # Params # rpchandle : LibC::HANDLE [In],protfilename : LibC::LPWSTR [In]
  fun SfcIsFileProtected(rpchandle : LibC::HANDLE, protfilename : LibC::LPWSTR) : LibC::BOOL

  # Params # keyhandle : HKEY [In],subkeyname : LibC::LPWSTR [In],keysam : UInt32 [In]
  fun SfcIsKeyProtected(keyhandle : HKEY, subkeyname : LibC::LPWSTR, keysam : UInt32) : LibC::BOOL

  # Params # pszfilename : PSTR [In],pszerror : UInt8* [In],dwerrsize : UInt32 [In]
  fun SfpVerifyFile(pszfilename : PSTR, pszerror : UInt8*, dwerrsize : UInt32) : LibC::BOOL

  # Params # oldfilename : PSTR [In],newfilename : PSTR [In],patchfilename : PSTR [In],optionflags : UInt32 [In],optiondata : PATCH_OPTION_DATA* [In]
  fun CreatePatchFileA(oldfilename : PSTR, newfilename : PSTR, patchfilename : PSTR, optionflags : UInt32, optiondata : PATCH_OPTION_DATA*) : LibC::BOOL

  # Params # oldfilename : LibC::LPWSTR [In],newfilename : LibC::LPWSTR [In],patchfilename : LibC::LPWSTR [In],optionflags : UInt32 [In],optiondata : PATCH_OPTION_DATA* [In]
  fun CreatePatchFileW(oldfilename : LibC::LPWSTR, newfilename : LibC::LPWSTR, patchfilename : LibC::LPWSTR, optionflags : UInt32, optiondata : PATCH_OPTION_DATA*) : LibC::BOOL

  # Params # oldfilehandle : LibC::HANDLE [In],newfilehandle : LibC::HANDLE [In],patchfilehandle : LibC::HANDLE [In],optionflags : UInt32 [In],optiondata : PATCH_OPTION_DATA* [In]
  fun CreatePatchFileByHandles(oldfilehandle : LibC::HANDLE, newfilehandle : LibC::HANDLE, patchfilehandle : LibC::HANDLE, optionflags : UInt32, optiondata : PATCH_OPTION_DATA*) : LibC::BOOL

  # Params # oldfilecount : UInt32 [In],oldfileinfoarray : PATCH_OLD_FILE_INFO_A* [In],newfilename : PSTR [In],patchfilename : PSTR [In],optionflags : UInt32 [In],optiondata : PATCH_OPTION_DATA* [In],progresscallback : PPATCH_PROGRESS_CALLBACK [In],callbackcontext : Void* [In]
  fun CreatePatchFileExA(oldfilecount : UInt32, oldfileinfoarray : PATCH_OLD_FILE_INFO_A*, newfilename : PSTR, patchfilename : PSTR, optionflags : UInt32, optiondata : PATCH_OPTION_DATA*, progresscallback : PPATCH_PROGRESS_CALLBACK, callbackcontext : Void*) : LibC::BOOL

  # Params # oldfilecount : UInt32 [In],oldfileinfoarray : PATCH_OLD_FILE_INFO_W* [In],newfilename : LibC::LPWSTR [In],patchfilename : LibC::LPWSTR [In],optionflags : UInt32 [In],optiondata : PATCH_OPTION_DATA* [In],progresscallback : PPATCH_PROGRESS_CALLBACK [In],callbackcontext : Void* [In]
  fun CreatePatchFileExW(oldfilecount : UInt32, oldfileinfoarray : PATCH_OLD_FILE_INFO_W*, newfilename : LibC::LPWSTR, patchfilename : LibC::LPWSTR, optionflags : UInt32, optiondata : PATCH_OPTION_DATA*, progresscallback : PPATCH_PROGRESS_CALLBACK, callbackcontext : Void*) : LibC::BOOL

  # Params # oldfilecount : UInt32 [In],oldfileinfoarray : PATCH_OLD_FILE_INFO_H* [In],newfilehandle : LibC::HANDLE [In],patchfilehandle : LibC::HANDLE [In],optionflags : UInt32 [In],optiondata : PATCH_OPTION_DATA* [In],progresscallback : PPATCH_PROGRESS_CALLBACK [In],callbackcontext : Void* [In]
  fun CreatePatchFileByHandlesEx(oldfilecount : UInt32, oldfileinfoarray : PATCH_OLD_FILE_INFO_H*, newfilehandle : LibC::HANDLE, patchfilehandle : LibC::HANDLE, optionflags : UInt32, optiondata : PATCH_OPTION_DATA*, progresscallback : PPATCH_PROGRESS_CALLBACK, callbackcontext : Void*) : LibC::BOOL

  # Params # patchfilename : PSTR [In],patchheaderfilename : PSTR [In]
  fun ExtractPatchHeaderToFileA(patchfilename : PSTR, patchheaderfilename : PSTR) : LibC::BOOL

  # Params # patchfilename : LibC::LPWSTR [In],patchheaderfilename : LibC::LPWSTR [In]
  fun ExtractPatchHeaderToFileW(patchfilename : LibC::LPWSTR, patchheaderfilename : LibC::LPWSTR) : LibC::BOOL

  # Params # patchfilehandle : LibC::HANDLE [In],patchheaderfilehandle : LibC::HANDLE [In]
  fun ExtractPatchHeaderToFileByHandles(patchfilehandle : LibC::HANDLE, patchheaderfilehandle : LibC::HANDLE) : LibC::BOOL

  # Params # patchfilename : PSTR [In],oldfilename : PSTR [In],applyoptionflags : UInt32 [In]
  fun TestApplyPatchToFileA(patchfilename : PSTR, oldfilename : PSTR, applyoptionflags : UInt32) : LibC::BOOL

  # Params # patchfilename : LibC::LPWSTR [In],oldfilename : LibC::LPWSTR [In],applyoptionflags : UInt32 [In]
  fun TestApplyPatchToFileW(patchfilename : LibC::LPWSTR, oldfilename : LibC::LPWSTR, applyoptionflags : UInt32) : LibC::BOOL

  # Params # patchfilehandle : LibC::HANDLE [In],oldfilehandle : LibC::HANDLE [In],applyoptionflags : UInt32 [In]
  fun TestApplyPatchToFileByHandles(patchfilehandle : LibC::HANDLE, oldfilehandle : LibC::HANDLE, applyoptionflags : UInt32) : LibC::BOOL

  # Params # patchfilebuffer : UInt8* [In],patchfilesize : UInt32 [In],oldfilebuffer : UInt8* [In],oldfilesize : UInt32 [In],newfilesize : UInt32* [In],applyoptionflags : UInt32 [In]
  fun TestApplyPatchToFileByBuffers(patchfilebuffer : UInt8*, patchfilesize : UInt32, oldfilebuffer : UInt8*, oldfilesize : UInt32, newfilesize : UInt32*, applyoptionflags : UInt32) : LibC::BOOL

  # Params # patchfilename : PSTR [In],oldfilename : PSTR [In],newfilename : PSTR [In],applyoptionflags : UInt32 [In]
  fun ApplyPatchToFileA(patchfilename : PSTR, oldfilename : PSTR, newfilename : PSTR, applyoptionflags : UInt32) : LibC::BOOL

  # Params # patchfilename : LibC::LPWSTR [In],oldfilename : LibC::LPWSTR [In],newfilename : LibC::LPWSTR [In],applyoptionflags : UInt32 [In]
  fun ApplyPatchToFileW(patchfilename : LibC::LPWSTR, oldfilename : LibC::LPWSTR, newfilename : LibC::LPWSTR, applyoptionflags : UInt32) : LibC::BOOL

  # Params # patchfilehandle : LibC::HANDLE [In],oldfilehandle : LibC::HANDLE [In],newfilehandle : LibC::HANDLE [In],applyoptionflags : UInt32 [In]
  fun ApplyPatchToFileByHandles(patchfilehandle : LibC::HANDLE, oldfilehandle : LibC::HANDLE, newfilehandle : LibC::HANDLE, applyoptionflags : UInt32) : LibC::BOOL

  # Params # patchfilename : PSTR [In],oldfilename : PSTR [In],newfilename : PSTR [In],applyoptionflags : UInt32 [In],progresscallback : PPATCH_PROGRESS_CALLBACK [In],callbackcontext : Void* [In]
  fun ApplyPatchToFileExA(patchfilename : PSTR, oldfilename : PSTR, newfilename : PSTR, applyoptionflags : UInt32, progresscallback : PPATCH_PROGRESS_CALLBACK, callbackcontext : Void*) : LibC::BOOL

  # Params # patchfilename : LibC::LPWSTR [In],oldfilename : LibC::LPWSTR [In],newfilename : LibC::LPWSTR [In],applyoptionflags : UInt32 [In],progresscallback : PPATCH_PROGRESS_CALLBACK [In],callbackcontext : Void* [In]
  fun ApplyPatchToFileExW(patchfilename : LibC::LPWSTR, oldfilename : LibC::LPWSTR, newfilename : LibC::LPWSTR, applyoptionflags : UInt32, progresscallback : PPATCH_PROGRESS_CALLBACK, callbackcontext : Void*) : LibC::BOOL

  # Params # patchfilehandle : LibC::HANDLE [In],oldfilehandle : LibC::HANDLE [In],newfilehandle : LibC::HANDLE [In],applyoptionflags : UInt32 [In],progresscallback : PPATCH_PROGRESS_CALLBACK [In],callbackcontext : Void* [In]
  fun ApplyPatchToFileByHandlesEx(patchfilehandle : LibC::HANDLE, oldfilehandle : LibC::HANDLE, newfilehandle : LibC::HANDLE, applyoptionflags : UInt32, progresscallback : PPATCH_PROGRESS_CALLBACK, callbackcontext : Void*) : LibC::BOOL

  # Params # patchfilemapped : UInt8* [In],patchfilesize : UInt32 [In],oldfilemapped : UInt8* [In],oldfilesize : UInt32 [In],newfilebuffer : UInt8** [In],newfilebuffersize : UInt32 [In],newfileactualsize : UInt32* [In],newfiletime : FILETIME* [In],applyoptionflags : UInt32 [In],progresscallback : PPATCH_PROGRESS_CALLBACK [In],callbackcontext : Void* [In]
  fun ApplyPatchToFileByBuffers(patchfilemapped : UInt8*, patchfilesize : UInt32, oldfilemapped : UInt8*, oldfilesize : UInt32, newfilebuffer : UInt8**, newfilebuffersize : UInt32, newfileactualsize : UInt32*, newfiletime : FILETIME*, applyoptionflags : UInt32, progresscallback : PPATCH_PROGRESS_CALLBACK, callbackcontext : Void*) : LibC::BOOL

  # Params # filename : PSTR [In],optionflags : UInt32 [In],optiondata : Void* [In],ignorerangecount : UInt32 [In],ignorerangearray : PATCH_IGNORE_RANGE* [In],retainrangecount : UInt32 [In],retainrangearray : PATCH_RETAIN_RANGE* [In],signaturebuffersize : UInt32 [In],signaturebuffer : PSTR [In]
  fun GetFilePatchSignatureA(filename : PSTR, optionflags : UInt32, optiondata : Void*, ignorerangecount : UInt32, ignorerangearray : PATCH_IGNORE_RANGE*, retainrangecount : UInt32, retainrangearray : PATCH_RETAIN_RANGE*, signaturebuffersize : UInt32, signaturebuffer : PSTR) : LibC::BOOL

  # Params # filename : LibC::LPWSTR [In],optionflags : UInt32 [In],optiondata : Void* [In],ignorerangecount : UInt32 [In],ignorerangearray : PATCH_IGNORE_RANGE* [In],retainrangecount : UInt32 [In],retainrangearray : PATCH_RETAIN_RANGE* [In],signaturebuffersize : UInt32 [In],signaturebuffer : LibC::LPWSTR [In]
  fun GetFilePatchSignatureW(filename : LibC::LPWSTR, optionflags : UInt32, optiondata : Void*, ignorerangecount : UInt32, ignorerangearray : PATCH_IGNORE_RANGE*, retainrangecount : UInt32, retainrangearray : PATCH_RETAIN_RANGE*, signaturebuffersize : UInt32, signaturebuffer : LibC::LPWSTR) : LibC::BOOL

  # Params # filehandle : LibC::HANDLE [In],optionflags : UInt32 [In],optiondata : Void* [In],ignorerangecount : UInt32 [In],ignorerangearray : PATCH_IGNORE_RANGE* [In],retainrangecount : UInt32 [In],retainrangearray : PATCH_RETAIN_RANGE* [In],signaturebuffersize : UInt32 [In],signaturebuffer : PSTR [In]
  fun GetFilePatchSignatureByHandle(filehandle : LibC::HANDLE, optionflags : UInt32, optiondata : Void*, ignorerangecount : UInt32, ignorerangearray : PATCH_IGNORE_RANGE*, retainrangecount : UInt32, retainrangearray : PATCH_RETAIN_RANGE*, signaturebuffersize : UInt32, signaturebuffer : PSTR) : LibC::BOOL

  # Params # filebufferwritable : UInt8* [In],filesize : UInt32 [In],optionflags : UInt32 [In],optiondata : Void* [In],ignorerangecount : UInt32 [In],ignorerangearray : PATCH_IGNORE_RANGE* [In],retainrangecount : UInt32 [In],retainrangearray : PATCH_RETAIN_RANGE* [In],signaturebuffersize : UInt32 [In],signaturebuffer : PSTR [In]
  fun GetFilePatchSignatureByBuffer(filebufferwritable : UInt8*, filesize : UInt32, optionflags : UInt32, optiondata : Void*, ignorerangecount : UInt32, ignorerangearray : PATCH_IGNORE_RANGE*, retainrangecount : UInt32, retainrangearray : PATCH_RETAIN_RANGE*, signaturebuffersize : UInt32, signaturebuffer : PSTR) : LibC::BOOL

  # Params # filebuffer : Void* [In],filesize : UInt32 [In],optionflags : UInt32 [In],optiondata : PATCH_OPTION_DATA* [In],newfilecoffbase : UInt32 [In],newfilecofftime : UInt32 [In],ignorerangecount : UInt32 [In],ignorerangearray : PATCH_IGNORE_RANGE* [In],retainrangecount : UInt32 [In],retainrangearray : PATCH_RETAIN_RANGE* [In]
  fun NormalizeFileForPatchSignature(filebuffer : Void*, filesize : UInt32, optionflags : UInt32, optiondata : PATCH_OPTION_DATA*, newfilecoffbase : UInt32, newfilecofftime : UInt32, ignorerangecount : UInt32, ignorerangearray : PATCH_IGNORE_RANGE*, retainrangecount : UInt32, retainrangearray : PATCH_RETAIN_RANGE*) : Int32

  # Params # delta : DELTA_INPUT [In],lpheaderinfo : DELTA_HEADER_INFO* [In]
  fun GetDeltaInfoB(delta : DELTA_INPUT, lpheaderinfo : DELTA_HEADER_INFO*) : LibC::BOOL

  # Params # lpdeltaname : PSTR [In],lpheaderinfo : DELTA_HEADER_INFO* [In]
  fun GetDeltaInfoA(lpdeltaname : PSTR, lpheaderinfo : DELTA_HEADER_INFO*) : LibC::BOOL

  # Params # lpdeltaname : LibC::LPWSTR [In],lpheaderinfo : DELTA_HEADER_INFO* [In]
  fun GetDeltaInfoW(lpdeltaname : LibC::LPWSTR, lpheaderinfo : DELTA_HEADER_INFO*) : LibC::BOOL

  # Params # applyflags : Int64 [In],source : DELTA_INPUT [In],delta : DELTA_INPUT [In],lpreversefiletime : FILETIME* [In],lptarget : DELTA_OUTPUT* [In],lptargetreverse : DELTA_OUTPUT* [In]
  fun ApplyDeltaGetReverseB(applyflags : Int64, source : DELTA_INPUT, delta : DELTA_INPUT, lpreversefiletime : FILETIME*, lptarget : DELTA_OUTPUT*, lptargetreverse : DELTA_OUTPUT*) : LibC::BOOL

  # Params # applyflags : Int64 [In],source : DELTA_INPUT [In],delta : DELTA_INPUT [In],lptarget : DELTA_OUTPUT* [In]
  fun ApplyDeltaB(applyflags : Int64, source : DELTA_INPUT, delta : DELTA_INPUT, lptarget : DELTA_OUTPUT*) : LibC::BOOL

  # Params # applyflags : Int64 [In],source : DELTA_INPUT [In],delta : DELTA_INPUT [In],lptarget : Void* [In],utargetsize : LibC::UINT_PTR [In]
  fun ApplyDeltaProvidedB(applyflags : Int64, source : DELTA_INPUT, delta : DELTA_INPUT, lptarget : Void*, utargetsize : LibC::UINT_PTR) : LibC::BOOL

  # Params # applyflags : Int64 [In],lpsourcename : PSTR [In],lpdeltaname : PSTR [In],lptargetname : PSTR [In]
  fun ApplyDeltaA(applyflags : Int64, lpsourcename : PSTR, lpdeltaname : PSTR, lptargetname : PSTR) : LibC::BOOL

  # Params # applyflags : Int64 [In],lpsourcename : LibC::LPWSTR [In],lpdeltaname : LibC::LPWSTR [In],lptargetname : LibC::LPWSTR [In]
  fun ApplyDeltaW(applyflags : Int64, lpsourcename : LibC::LPWSTR, lpdeltaname : LibC::LPWSTR, lptargetname : LibC::LPWSTR) : LibC::BOOL

  # Params # filetypeset : Int64 [In],setflags : Int64 [In],resetflags : Int64 [In],source : DELTA_INPUT [In],target : DELTA_INPUT [In],sourceoptions : DELTA_INPUT [In],targetoptions : DELTA_INPUT [In],globaloptions : DELTA_INPUT [In],lptargetfiletime : FILETIME* [In],hashalgid : UInt32 [In],lpdelta : DELTA_OUTPUT* [In]
  fun CreateDeltaB(filetypeset : Int64, setflags : Int64, resetflags : Int64, source : DELTA_INPUT, target : DELTA_INPUT, sourceoptions : DELTA_INPUT, targetoptions : DELTA_INPUT, globaloptions : DELTA_INPUT, lptargetfiletime : FILETIME*, hashalgid : UInt32, lpdelta : DELTA_OUTPUT*) : LibC::BOOL

  # Params # filetypeset : Int64 [In],setflags : Int64 [In],resetflags : Int64 [In],lpsourcename : PSTR [In],lptargetname : PSTR [In],lpsourceoptionsname : PSTR [In],lptargetoptionsname : PSTR [In],globaloptions : DELTA_INPUT [In],lptargetfiletime : FILETIME* [In],hashalgid : UInt32 [In],lpdeltaname : PSTR [In]
  fun CreateDeltaA(filetypeset : Int64, setflags : Int64, resetflags : Int64, lpsourcename : PSTR, lptargetname : PSTR, lpsourceoptionsname : PSTR, lptargetoptionsname : PSTR, globaloptions : DELTA_INPUT, lptargetfiletime : FILETIME*, hashalgid : UInt32, lpdeltaname : PSTR) : LibC::BOOL

  # Params # filetypeset : Int64 [In],setflags : Int64 [In],resetflags : Int64 [In],lpsourcename : LibC::LPWSTR [In],lptargetname : LibC::LPWSTR [In],lpsourceoptionsname : LibC::LPWSTR [In],lptargetoptionsname : LibC::LPWSTR [In],globaloptions : DELTA_INPUT [In],lptargetfiletime : FILETIME* [In],hashalgid : UInt32 [In],lpdeltaname : LibC::LPWSTR [In]
  fun CreateDeltaW(filetypeset : Int64, setflags : Int64, resetflags : Int64, lpsourcename : LibC::LPWSTR, lptargetname : LibC::LPWSTR, lpsourceoptionsname : LibC::LPWSTR, lptargetoptionsname : LibC::LPWSTR, globaloptions : DELTA_INPUT, lptargetfiletime : FILETIME*, hashalgid : UInt32, lpdeltaname : LibC::LPWSTR) : LibC::BOOL

  # Params # filetypeset : Int64 [In],hashalgid : UInt32 [In],source : DELTA_INPUT [In],lphash : DELTA_HASH* [In]
  fun GetDeltaSignatureB(filetypeset : Int64, hashalgid : UInt32, source : DELTA_INPUT, lphash : DELTA_HASH*) : LibC::BOOL

  # Params # filetypeset : Int64 [In],hashalgid : UInt32 [In],lpsourcename : PSTR [In],lphash : DELTA_HASH* [In]
  fun GetDeltaSignatureA(filetypeset : Int64, hashalgid : UInt32, lpsourcename : PSTR, lphash : DELTA_HASH*) : LibC::BOOL

  # Params # filetypeset : Int64 [In],hashalgid : UInt32 [In],lpsourcename : LibC::LPWSTR [In],lphash : DELTA_HASH* [In]
  fun GetDeltaSignatureW(filetypeset : Int64, hashalgid : UInt32, lpsourcename : LibC::LPWSTR, lphash : DELTA_HASH*) : LibC::BOOL

  # Params # filetypeset : Int64 [In],normalizeflags : Int64 [In],normalizeoptions : DELTA_INPUT [In],lpsource : Void* [In],usourcesize : LibC::UINT_PTR [In]
  fun DeltaNormalizeProvidedB(filetypeset : Int64, normalizeflags : Int64, normalizeoptions : DELTA_INPUT, lpsource : Void*, usourcesize : LibC::UINT_PTR) : LibC::BOOL

  # Params # lpmemory : Void* [In]
  fun DeltaFree(lpmemory : Void*) : LibC::BOOL

  # Params # pactctx : ACTCTXA* [In]
  fun CreateActCtxA(pactctx : ACTCTXA*) : LibC::HANDLE

  # Params # pactctx : ACTCTXW* [In]
  fun CreateActCtxW(pactctx : ACTCTXW*) : LibC::HANDLE

  # Params # hactctx : LibC::HANDLE [In]
  fun AddRefActCtx(hactctx : LibC::HANDLE)

  # Params # hactctx : LibC::HANDLE [In]
  fun ReleaseActCtx(hactctx : LibC::HANDLE)

  # Params # hactctx : LibC::HANDLE [In]
  fun ZombifyActCtx(hactctx : LibC::HANDLE) : LibC::BOOL

  # Params # hactctx : LibC::HANDLE [In],lpcookie : LibC::UINT_PTR* [In]
  fun ActivateActCtx(hactctx : LibC::HANDLE, lpcookie : LibC::UINT_PTR*) : LibC::BOOL

  # Params # dwflags : UInt32 [In],ulcookie : LibC::UINT_PTR [In]
  fun DeactivateActCtx(dwflags : UInt32, ulcookie : LibC::UINT_PTR) : LibC::BOOL

  # Params # lphactctx : LibC::HANDLE* [In]
  fun GetCurrentActCtx(lphactctx : LibC::HANDLE*) : LibC::BOOL

  # Params # dwflags : UInt32 [In],lpextensionguid : Guid* [In],ulsectionid : UInt32 [In],lpstringtofind : PSTR [In],returneddata : ACTCTX_SECTION_KEYED_DATA* [In]
  fun FindActCtxSectionStringA(dwflags : UInt32, lpextensionguid : Guid*, ulsectionid : UInt32, lpstringtofind : PSTR, returneddata : ACTCTX_SECTION_KEYED_DATA*) : LibC::BOOL

  # Params # dwflags : UInt32 [In],lpextensionguid : Guid* [In],ulsectionid : UInt32 [In],lpstringtofind : LibC::LPWSTR [In],returneddata : ACTCTX_SECTION_KEYED_DATA* [In]
  fun FindActCtxSectionStringW(dwflags : UInt32, lpextensionguid : Guid*, ulsectionid : UInt32, lpstringtofind : LibC::LPWSTR, returneddata : ACTCTX_SECTION_KEYED_DATA*) : LibC::BOOL

  # Params # dwflags : UInt32 [In],lpextensionguid : Guid* [In],ulsectionid : UInt32 [In],lpguidtofind : Guid* [In],returneddata : ACTCTX_SECTION_KEYED_DATA* [In]
  fun FindActCtxSectionGuid(dwflags : UInt32, lpextensionguid : Guid*, ulsectionid : UInt32, lpguidtofind : Guid*, returneddata : ACTCTX_SECTION_KEYED_DATA*) : LibC::BOOL

  # Params # dwflags : UInt32 [In],hactctx : LibC::HANDLE [In],pvsubinstance : Void* [In],ulinfoclass : UInt32 [In],pvbuffer : Void* [In],cbbuffer : LibC::UINT_PTR [In],pcbwrittenorrequired : LibC::UINT_PTR* [In]
  fun QueryActCtxW(dwflags : UInt32, hactctx : LibC::HANDLE, pvsubinstance : Void*, ulinfoclass : UInt32, pvbuffer : Void*, cbbuffer : LibC::UINT_PTR, pcbwrittenorrequired : LibC::UINT_PTR*) : LibC::BOOL

  # Params # dwflags : UInt32 [In],hactctx : LibC::HANDLE [In],settingsnamespace : LibC::LPWSTR [In],settingname : LibC::LPWSTR [In],pvbuffer : LibC::LPWSTR [In],dwbuffer : LibC::UINT_PTR [In],pdwwrittenorrequired : LibC::UINT_PTR* [In]
  fun QueryActCtxSettingsW(dwflags : UInt32, hactctx : LibC::HANDLE, settingsnamespace : LibC::LPWSTR, settingname : LibC::LPWSTR, pvbuffer : LibC::LPWSTR, dwbuffer : LibC::UINT_PTR, pdwwrittenorrequired : LibC::UINT_PTR*) : LibC::BOOL
end
