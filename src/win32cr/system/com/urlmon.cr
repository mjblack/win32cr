require "./../com.cr"
require "./../../foundation.cr"
require "./../../data/xml/ms_xml.cr"

module Win32cr::System::Com::Urlmon
  MKSYS_URLMONIKER = 6_u32
  URL_MK_LEGACY = 0_u32
  URL_MK_UNIFORM = 1_u32
  URL_MK_NO_CANONICALIZE = 2_u32
  FIEF_FLAG_FORCE_JITUI = 1_u32
  FIEF_FLAG_PEEK = 2_u32
  FIEF_FLAG_SKIP_INSTALLED_VERSION_CHECK = 4_u32
  FIEF_FLAG_RESERVED_0 = 8_u32
  FMFD_DEFAULT = 0_u32
  FMFD_URLASFILENAME = 1_u32
  FMFD_ENABLEMIMESNIFFING = 2_u32
  FMFD_IGNOREMIMETEXTPLAIN = 4_u32
  FMFD_SERVERMIME = 8_u32
  FMFD_RESPECTTEXTPLAIN = 16_u32
  FMFD_RETURNUPDATEDIMGMIMES = 32_u32
  FMFD_RESERVED_1 = 64_u32
  FMFD_RESERVED_2 = 128_u32
  UAS_EXACTLEGACY = 4096_u32
  URLMON_OPTION_USERAGENT = 268435457_u32
  URLMON_OPTION_USERAGENT_REFRESH = 268435458_u32
  URLMON_OPTION_URL_ENCODING = 268435460_u32
  URLMON_OPTION_USE_BINDSTRINGCREDS = 268435464_u32
  URLMON_OPTION_USE_BROWSERAPPSDOCUMENTS = 268435472_u32
  CF_NULL = 0_u32
  MK_S_ASYNCHRONOUS = 262632_i32
  S_ASYNCHRONOUS = 262632_i32
  E_PENDING = -2147483638_i32
  INET_E_INVALID_URL = -2146697214_i32
  INET_E_NO_SESSION = -2146697213_i32
  INET_E_CANNOT_CONNECT = -2146697212_i32
  INET_E_RESOURCE_NOT_FOUND = -2146697211_i32
  INET_E_OBJECT_NOT_FOUND = -2146697210_i32
  INET_E_DATA_NOT_AVAILABLE = -2146697209_i32
  INET_E_DOWNLOAD_FAILURE = -2146697208_i32
  INET_E_AUTHENTICATION_REQUIRED = -2146697207_i32
  INET_E_NO_VALID_MEDIA = -2146697206_i32
  INET_E_CONNECTION_TIMEOUT = -2146697205_i32
  INET_E_INVALID_REQUEST = -2146697204_i32
  INET_E_UNKNOWN_PROTOCOL = -2146697203_i32
  INET_E_SECURITY_PROBLEM = -2146697202_i32
  INET_E_CANNOT_LOAD_DATA = -2146697201_i32
  INET_E_CANNOT_INSTANTIATE_OBJECT = -2146697200_i32
  INET_E_INVALID_CERTIFICATE = -2146697191_i32
  INET_E_REDIRECT_FAILED = -2146697196_i32
  INET_E_REDIRECT_TO_DIR = -2146697195_i32
  INET_E_CANNOT_LOCK_REQUEST = -2146697194_i32
  INET_E_USE_EXTEND_BINDING = -2146697193_i32
  INET_E_TERMINATED_BIND = -2146697192_i32
  INET_E_RESERVED_1 = -2146697190_i32
  INET_E_BLOCKED_REDIRECT_XSECURITYID = -2146697189_i32
  INET_E_DOMINJECTIONVALIDATION = -2146697188_i32
  INET_E_VTAB_SWITCH_FORCE_ENGINE = -2146697187_i32
  INET_E_HSTS_CERTIFICATE_ERROR = -2146697186_i32
  INET_E_RESERVED_2 = -2146697185_i32
  INET_E_RESERVED_3 = -2146697184_i32
  INET_E_RESERVED_4 = -2146697183_i32
  INET_E_RESERVED_5 = -2146697182_i32
  INET_E_ERROR_FIRST = -2146697214_i32
  INET_E_CODE_DOWNLOAD_DECLINED = -2146696960_i32
  INET_E_RESULT_DISPATCHED = -2146696704_i32
  INET_E_CANNOT_REPLACE_SFP_FILE = -2146696448_i32
  INET_E_CODE_INSTALL_SUPPRESSED = -2146696192_i32
  INET_E_CODE_INSTALL_BLOCKED_BY_HASH_POLICY = -2146695936_i32
  INET_E_DOWNLOAD_BLOCKED_BY_INPRIVATE = -2146695935_i32
  INET_E_CODE_INSTALL_BLOCKED_IMMERSIVE = -2146695934_i32
  INET_E_FORBIDFRAMING = -2146695933_i32
  INET_E_CODE_INSTALL_BLOCKED_ARM = -2146695932_i32
  INET_E_BLOCKED_PLUGGABLE_PROTOCOL = -2146695931_i32
  INET_E_BLOCKED_ENHANCEDPROTECTEDMODE = -2146695930_i32
  INET_E_CODE_INSTALL_BLOCKED_BITNESS = -2146695929_i32
  INET_E_DOWNLOAD_BLOCKED_BY_CSP = -2146695928_i32
  INET_E_ERROR_LAST = -2146695928_i32
  Uri_DISPLAY_NO_FRAGMENT = 1_u32
  Uri_PUNYCODE_IDN_HOST = 2_u32
  Uri_DISPLAY_IDN_HOST = 4_u32
  Uri_DISPLAY_NO_PUNYCODE = 8_u32
  Uri_ENCODING_USER_INFO_AND_PATH_IS_PERCENT_ENCODED_UTF8 = 1_u32
  Uri_ENCODING_USER_INFO_AND_PATH_IS_CP = 2_u32
  Uri_ENCODING_HOST_IS_IDN = 4_u32
  Uri_ENCODING_HOST_IS_PERCENT_ENCODED_UTF8 = 8_u32
  Uri_ENCODING_HOST_IS_PERCENT_ENCODED_CP = 16_u32
  Uri_ENCODING_QUERY_AND_FRAGMENT_IS_PERCENT_ENCODED_UTF8 = 32_u32
  Uri_ENCODING_QUERY_AND_FRAGMENT_IS_CP = 64_u32
  UriBuilder_USE_ORIGINAL_FLAGS = 1_u32
  WININETINFO_OPTION_LOCK_HANDLE = 65534_u32
  URLOSTRM_USECACHEDCOPY_ONLY = 1_u32
  URLOSTRM_USECACHEDCOPY = 2_u32
  URLOSTRM_GETNEWESTVERSION = 3_u32
  SET_FEATURE_ON_THREAD = 1_u32
  SET_FEATURE_ON_PROCESS = 2_u32
  SET_FEATURE_IN_REGISTRY = 4_u32
  SET_FEATURE_ON_THREAD_LOCALMACHINE = 8_u32
  SET_FEATURE_ON_THREAD_INTRANET = 16_u32
  SET_FEATURE_ON_THREAD_TRUSTED = 32_u32
  SET_FEATURE_ON_THREAD_INTERNET = 64_u32
  SET_FEATURE_ON_THREAD_RESTRICTED = 128_u32
  GET_FEATURE_FROM_THREAD = 1_u32
  GET_FEATURE_FROM_PROCESS = 2_u32
  GET_FEATURE_FROM_REGISTRY = 4_u32
  GET_FEATURE_FROM_THREAD_LOCALMACHINE = 8_u32
  GET_FEATURE_FROM_THREAD_INTRANET = 16_u32
  GET_FEATURE_FROM_THREAD_TRUSTED = 32_u32
  GET_FEATURE_FROM_THREAD_INTERNET = 64_u32
  GET_FEATURE_FROM_THREAD_RESTRICTED = 128_u32
  INET_E_USE_DEFAULT_PROTOCOLHANDLER = -2146697199_i32
  INET_E_USE_DEFAULT_SETTING = -2146697198_i32
  INET_E_DEFAULT_ACTION = -2146697199_i32
  INET_E_QUERYOPTION_UNKNOWN = -2146697197_i32
  INET_E_REDIRECTING = -2146697196_i32
  PROTOCOLFLAG_NO_PICS_CHECK = 1_u32
  MUTZ_NOSAVEDFILECHECK = 1_u32
  MUTZ_ISFILE = 2_u32
  MUTZ_ACCEPT_WILDCARD_SCHEME = 128_u32
  MUTZ_ENFORCERESTRICTED = 256_u32
  MUTZ_RESERVED = 512_u32
  MUTZ_REQUIRESAVEDFILECHECK = 1024_u32
  MUTZ_DONT_UNESCAPE = 2048_u32
  MUTZ_DONT_USE_CACHE = 4096_u32
  MUTZ_FORCE_INTRANET_FLAGS = 8192_u32
  MUTZ_IGNORE_ZONE_MAPPINGS = 16384_u32
  MAX_SIZE_SECURITY_ID = 512_u32
  URLACTION_MIN = 4096_u32
  URLACTION_DOWNLOAD_MIN = 4096_u32
  URLACTION_DOWNLOAD_SIGNED_ACTIVEX = 4097_u32
  URLACTION_DOWNLOAD_UNSIGNED_ACTIVEX = 4100_u32
  URLACTION_DOWNLOAD_CURR_MAX = 4100_u32
  URLACTION_DOWNLOAD_MAX = 4607_u32
  URLACTION_ACTIVEX_MIN = 4608_u32
  URLACTION_ACTIVEX_RUN = 4608_u32
  URLPOLICY_ACTIVEX_CHECK_LIST = 65536_u32
  URLACTION_ACTIVEX_OVERRIDE_OBJECT_SAFETY = 4609_u32
  URLACTION_ACTIVEX_OVERRIDE_DATA_SAFETY = 4610_u32
  URLACTION_ACTIVEX_OVERRIDE_SCRIPT_SAFETY = 4611_u32
  URLACTION_SCRIPT_OVERRIDE_SAFETY = 5121_u32
  URLACTION_ACTIVEX_CONFIRM_NOOBJECTSAFETY = 4612_u32
  URLACTION_ACTIVEX_TREATASUNTRUSTED = 4613_u32
  URLACTION_ACTIVEX_NO_WEBOC_SCRIPT = 4614_u32
  URLACTION_ACTIVEX_OVERRIDE_REPURPOSEDETECTION = 4615_u32
  URLACTION_ACTIVEX_OVERRIDE_OPTIN = 4616_u32
  URLACTION_ACTIVEX_SCRIPTLET_RUN = 4617_u32
  URLACTION_ACTIVEX_DYNSRC_VIDEO_AND_ANIMATION = 4618_u32
  URLACTION_ACTIVEX_OVERRIDE_DOMAINLIST = 4619_u32
  URLACTION_ACTIVEX_ALLOW_TDC = 4620_u32
  URLACTION_ACTIVEX_CURR_MAX = 4620_u32
  URLACTION_ACTIVEX_MAX = 5119_u32
  URLACTION_SCRIPT_MIN = 5120_u32
  URLACTION_SCRIPT_RUN = 5120_u32
  URLACTION_SCRIPT_JAVA_USE = 5122_u32
  URLACTION_SCRIPT_SAFE_ACTIVEX = 5125_u32
  URLACTION_CROSS_DOMAIN_DATA = 5126_u32
  URLACTION_SCRIPT_PASTE = 5127_u32
  URLACTION_ALLOW_XDOMAIN_SUBFRAME_RESIZE = 5128_u32
  URLACTION_SCRIPT_XSSFILTER = 5129_u32
  URLACTION_SCRIPT_NAVIGATE = 5130_u32
  URLACTION_PLUGGABLE_PROTOCOL_XHR = 5131_u32
  URLACTION_ALLOW_VBSCRIPT_IE = 5132_u32
  URLACTION_ALLOW_JSCRIPT_IE = 5133_u32
  URLACTION_SCRIPT_CURR_MAX = 5133_u32
  URLACTION_SCRIPT_MAX = 5631_u32
  URLACTION_HTML_MIN = 5632_u32
  URLACTION_HTML_SUBMIT_FORMS = 5633_u32
  URLACTION_HTML_SUBMIT_FORMS_FROM = 5634_u32
  URLACTION_HTML_SUBMIT_FORMS_TO = 5635_u32
  URLACTION_HTML_FONT_DOWNLOAD = 5636_u32
  URLACTION_HTML_JAVA_RUN = 5637_u32
  URLACTION_HTML_USERDATA_SAVE = 5638_u32
  URLACTION_HTML_SUBFRAME_NAVIGATE = 5639_u32
  URLACTION_HTML_META_REFRESH = 5640_u32
  URLACTION_HTML_MIXED_CONTENT = 5641_u32
  URLACTION_HTML_INCLUDE_FILE_PATH = 5642_u32
  URLACTION_HTML_ALLOW_INJECTED_DYNAMIC_HTML = 5643_u32
  URLACTION_HTML_REQUIRE_UTF8_DOCUMENT_CODEPAGE = 5644_u32
  URLACTION_HTML_ALLOW_CROSS_DOMAIN_CANVAS = 5645_u32
  URLACTION_HTML_ALLOW_WINDOW_CLOSE = 5646_u32
  URLACTION_HTML_ALLOW_CROSS_DOMAIN_WEBWORKER = 5647_u32
  URLACTION_HTML_ALLOW_CROSS_DOMAIN_TEXTTRACK = 5648_u32
  URLACTION_HTML_ALLOW_INDEXEDDB = 5649_u32
  URLACTION_HTML_MAX = 6143_u32
  URLACTION_SHELL_MIN = 6144_u32
  URLACTION_SHELL_INSTALL_DTITEMS = 6144_u32
  URLACTION_SHELL_MOVE_OR_COPY = 6146_u32
  URLACTION_SHELL_FILE_DOWNLOAD = 6147_u32
  URLACTION_SHELL_VERB = 6148_u32
  URLACTION_SHELL_WEBVIEW_VERB = 6149_u32
  URLACTION_SHELL_SHELLEXECUTE = 6150_u32
  URLACTION_SHELL_EXECUTE_HIGHRISK = 6150_u32
  URLACTION_SHELL_EXECUTE_MODRISK = 6151_u32
  URLACTION_SHELL_EXECUTE_LOWRISK = 6152_u32
  URLACTION_SHELL_POPUPMGR = 6153_u32
  URLACTION_SHELL_RTF_OBJECTS_LOAD = 6154_u32
  URLACTION_SHELL_ENHANCED_DRAGDROP_SECURITY = 6155_u32
  URLACTION_SHELL_EXTENSIONSECURITY = 6156_u32
  URLACTION_SHELL_SECURE_DRAGSOURCE = 6157_u32
  URLACTION_SHELL_REMOTEQUERY = 6158_u32
  URLACTION_SHELL_PREVIEW = 6159_u32
  URLACTION_SHELL_SHARE = 6160_u32
  URLACTION_SHELL_ALLOW_CROSS_SITE_SHARE = 6161_u32
  URLACTION_SHELL_TOCTOU_RISK = 6162_u32
  URLACTION_SHELL_CURR_MAX = 6162_u32
  URLACTION_SHELL_MAX = 6655_u32
  URLACTION_NETWORK_MIN = 6656_u32
  URLACTION_CREDENTIALS_USE = 6656_u32
  URLPOLICY_CREDENTIALS_SILENT_LOGON_OK = 0_u32
  URLPOLICY_CREDENTIALS_MUST_PROMPT_USER = 65536_u32
  URLPOLICY_CREDENTIALS_CONDITIONAL_PROMPT = 131072_u32
  URLPOLICY_CREDENTIALS_ANONYMOUS_ONLY = 196608_u32
  URLACTION_AUTHENTICATE_CLIENT = 6657_u32
  URLPOLICY_AUTHENTICATE_CLEARTEXT_OK = 0_u32
  URLPOLICY_AUTHENTICATE_CHALLENGE_RESPONSE = 65536_u32
  URLPOLICY_AUTHENTICATE_MUTUAL_ONLY = 196608_u32
  URLACTION_COOKIES = 6658_u32
  URLACTION_COOKIES_SESSION = 6659_u32
  URLACTION_CLIENT_CERT_PROMPT = 6660_u32
  URLACTION_COOKIES_THIRD_PARTY = 6661_u32
  URLACTION_COOKIES_SESSION_THIRD_PARTY = 6662_u32
  URLACTION_COOKIES_ENABLED = 6672_u32
  URLACTION_NETWORK_CURR_MAX = 6672_u32
  URLACTION_NETWORK_MAX = 7167_u32
  URLACTION_JAVA_MIN = 7168_u32
  URLACTION_JAVA_PERMISSIONS = 7168_u32
  URLPOLICY_JAVA_PROHIBIT = 0_u32
  URLPOLICY_JAVA_HIGH = 65536_u32
  URLPOLICY_JAVA_MEDIUM = 131072_u32
  URLPOLICY_JAVA_LOW = 196608_u32
  URLPOLICY_JAVA_CUSTOM = 8388608_u32
  URLACTION_JAVA_CURR_MAX = 7168_u32
  URLACTION_JAVA_MAX = 7423_u32
  URLACTION_INFODELIVERY_MIN = 7424_u32
  URLACTION_INFODELIVERY_NO_ADDING_CHANNELS = 7424_u32
  URLACTION_INFODELIVERY_NO_EDITING_CHANNELS = 7425_u32
  URLACTION_INFODELIVERY_NO_REMOVING_CHANNELS = 7426_u32
  URLACTION_INFODELIVERY_NO_ADDING_SUBSCRIPTIONS = 7427_u32
  URLACTION_INFODELIVERY_NO_EDITING_SUBSCRIPTIONS = 7428_u32
  URLACTION_INFODELIVERY_NO_REMOVING_SUBSCRIPTIONS = 7429_u32
  URLACTION_INFODELIVERY_NO_CHANNEL_LOGGING = 7430_u32
  URLACTION_INFODELIVERY_CURR_MAX = 7430_u32
  URLACTION_INFODELIVERY_MAX = 7679_u32
  URLACTION_CHANNEL_SOFTDIST_MIN = 7680_u32
  URLACTION_CHANNEL_SOFTDIST_PERMISSIONS = 7685_u32
  URLPOLICY_CHANNEL_SOFTDIST_PROHIBIT = 65536_u32
  URLPOLICY_CHANNEL_SOFTDIST_PRECACHE = 131072_u32
  URLPOLICY_CHANNEL_SOFTDIST_AUTOINSTALL = 196608_u32
  URLACTION_CHANNEL_SOFTDIST_MAX = 7935_u32
  URLACTION_DOTNET_USERCONTROLS = 8197_u32
  URLACTION_BEHAVIOR_MIN = 8192_u32
  URLACTION_BEHAVIOR_RUN = 8192_u32
  URLPOLICY_BEHAVIOR_CHECK_LIST = 65536_u32
  URLACTION_FEATURE_MIN = 8448_u32
  URLACTION_FEATURE_MIME_SNIFFING = 8448_u32
  URLACTION_FEATURE_ZONE_ELEVATION = 8449_u32
  URLACTION_FEATURE_WINDOW_RESTRICTIONS = 8450_u32
  URLACTION_FEATURE_SCRIPT_STATUS_BAR = 8451_u32
  URLACTION_FEATURE_FORCE_ADDR_AND_STATUS = 8452_u32
  URLACTION_FEATURE_BLOCK_INPUT_PROMPTS = 8453_u32
  URLACTION_FEATURE_DATA_BINDING = 8454_u32
  URLACTION_FEATURE_CROSSDOMAIN_FOCUS_CHANGE = 8455_u32
  URLACTION_AUTOMATIC_DOWNLOAD_UI_MIN = 8704_u32
  URLACTION_AUTOMATIC_DOWNLOAD_UI = 8704_u32
  URLACTION_AUTOMATIC_ACTIVEX_UI = 8705_u32
  URLACTION_ALLOW_RESTRICTEDPROTOCOLS = 8960_u32
  URLACTION_ALLOW_APEVALUATION = 8961_u32
  URLACTION_ALLOW_XHR_EVALUATION = 8962_u32
  URLACTION_WINDOWS_BROWSER_APPLICATIONS = 9216_u32
  URLACTION_XPS_DOCUMENTS = 9217_u32
  URLACTION_LOOSE_XAML = 9218_u32
  URLACTION_LOWRIGHTS = 9472_u32
  URLACTION_WINFX_SETUP = 9728_u32
  URLACTION_INPRIVATE_BLOCKING = 9984_u32
  URLACTION_ALLOW_AUDIO_VIDEO = 9985_u32
  URLACTION_ALLOW_ACTIVEX_FILTERING = 9986_u32
  URLACTION_ALLOW_STRUCTURED_STORAGE_SNIFFING = 9987_u32
  URLACTION_ALLOW_AUDIO_VIDEO_PLUGINS = 9988_u32
  URLACTION_ALLOW_ZONE_ELEVATION_VIA_OPT_OUT = 9989_u32
  URLACTION_ALLOW_ZONE_ELEVATION_OPT_OUT_ADDITION = 9990_u32
  URLACTION_ALLOW_CROSSDOMAIN_DROP_WITHIN_WINDOW = 9992_u32
  URLACTION_ALLOW_CROSSDOMAIN_DROP_ACROSS_WINDOWS = 9993_u32
  URLACTION_ALLOW_CROSSDOMAIN_APPCACHE_MANIFEST = 9994_u32
  URLACTION_ALLOW_RENDER_LEGACY_DXTFILTERS = 9995_u32
  URLACTION_ALLOW_ANTIMALWARE_SCANNING_OF_ACTIVEX = 9996_u32
  URLACTION_ALLOW_CSS_EXPRESSIONS = 9997_u32
  URLPOLICY_ALLOW = 0_u32
  URLPOLICY_QUERY = 1_u32
  URLPOLICY_DISALLOW = 3_u32
  URLPOLICY_NOTIFY_ON_ALLOW = 16_u32
  URLPOLICY_NOTIFY_ON_DISALLOW = 32_u32
  URLPOLICY_LOG_ON_ALLOW = 64_u32
  URLPOLICY_LOG_ON_DISALLOW = 128_u32
  URLPOLICY_MASK_PERMISSIONS = 15_u32
  URLPOLICY_DONTCHECKDLGBOX = 256_u32
  URLZONE_ESC_FLAG = 256_u32
  SECURITY_IE_STATE_GREEN = 0_u32
  SECURITY_IE_STATE_RED = 1_u32
  SOFTDIST_FLAG_USAGE_EMAIL = 1_u32
  SOFTDIST_FLAG_USAGE_PRECACHE = 2_u32
  SOFTDIST_FLAG_USAGE_AUTOINSTALL = 4_u32
  SOFTDIST_FLAG_DELETE_SUBSCRIPTION = 8_u32
  SOFTDIST_ADSTATE_NONE = 0_u32
  SOFTDIST_ADSTATE_AVAILABLE = 1_u32
  SOFTDIST_ADSTATE_DOWNLOADED = 2_u32
  SOFTDIST_ADSTATE_INSTALLED = 3_u32
  CONFIRMSAFETYACTION_LOADOBJECT = 1_u32

  enum IEObjectType
    IE_EPM_OBJECT_EVENT = 0_i32
    IE_EPM_OBJECT_MUTEX = 1_i32
    IE_EPM_OBJECT_SEMAPHORE = 2_i32
    IE_EPM_OBJECT_SHARED_MEMORY = 3_i32
    IE_EPM_OBJECT_WAITABLE_TIMER = 4_i32
    IE_EPM_OBJECT_FILE = 5_i32
    IE_EPM_OBJECT_NAMED_PIPE = 6_i32
    IE_EPM_OBJECT_REGISTRY = 7_i32
  end
  enum MONIKERPROPERTY
    MIMETYPEPROP = 0_i32
    USE_SRC_URL = 1_i32
    CLASSIDPROP = 2_i32
    TRUSTEDDOWNLOADPROP = 3_i32
    POPUPLEVELPROP = 4_i32
  end
  enum BINDVERB
    BINDVERB_GET = 0_i32
    BINDVERB_POST = 1_i32
    BINDVERB_PUT = 2_i32
    BINDVERB_CUSTOM = 3_i32
    BINDVERB_RESERVED1 = 4_i32
  end
  enum BINDF
    BINDF_ASYNCHRONOUS = 1_i32
    BINDF_ASYNCSTORAGE = 2_i32
    BINDF_NOPROGRESSIVERENDERING = 4_i32
    BINDF_OFFLINEOPERATION = 8_i32
    BINDF_GETNEWESTVERSION = 16_i32
    BINDF_NOWRITECACHE = 32_i32
    BINDF_NEEDFILE = 64_i32
    BINDF_PULLDATA = 128_i32
    BINDF_IGNORESECURITYPROBLEM = 256_i32
    BINDF_RESYNCHRONIZE = 512_i32
    BINDF_HYPERLINK = 1024_i32
    BINDF_NO_UI = 2048_i32
    BINDF_SILENTOPERATION = 4096_i32
    BINDF_PRAGMA_NO_CACHE = 8192_i32
    BINDF_GETCLASSOBJECT = 16384_i32
    BINDF_RESERVED_1 = 32768_i32
    BINDF_FREE_THREADED = 65536_i32
    BINDF_DIRECT_READ = 131072_i32
    BINDF_FORMS_SUBMIT = 262144_i32
    BINDF_GETFROMCACHE_IF_NET_FAIL = 524288_i32
    BINDF_FROMURLMON = 1048576_i32
    BINDF_FWD_BACK = 2097152_i32
    BINDF_PREFERDEFAULTHANDLER = 4194304_i32
    BINDF_ENFORCERESTRICTED = 8388608_i32
    BINDF_RESERVED_2 = -2147483648_i32
    BINDF_RESERVED_3 = 16777216_i32
    BINDF_RESERVED_4 = 33554432_i32
    BINDF_RESERVED_5 = 67108864_i32
    BINDF_RESERVED_6 = 134217728_i32
    BINDF_RESERVED_7 = 1073741824_i32
    BINDF_RESERVED_8 = 536870912_i32
  end
  enum URL_ENCODING
    URL_ENCODING_NONE = 0_i32
    URL_ENCODING_ENABLE_UTF8 = 268435456_i32
    URL_ENCODING_DISABLE_UTF8 = 536870912_i32
  end
  enum BINDINFO_OPTIONS
    BINDINFO_OPTIONS_WININETFLAG = 65536_i32
    BINDINFO_OPTIONS_ENABLE_UTF8 = 131072_i32
    BINDINFO_OPTIONS_DISABLE_UTF8 = 262144_i32
    BINDINFO_OPTIONS_USE_IE_ENCODING = 524288_i32
    BINDINFO_OPTIONS_BINDTOOBJECT = 1048576_i32
    BINDINFO_OPTIONS_SECURITYOPTOUT = 2097152_i32
    BINDINFO_OPTIONS_IGNOREMIMETEXTPLAIN = 4194304_i32
    BINDINFO_OPTIONS_USEBINDSTRINGCREDS = 8388608_i32
    BINDINFO_OPTIONS_IGNOREHTTPHTTPSREDIRECTS = 16777216_i32
    BINDINFO_OPTIONS_IGNORE_SSLERRORS_ONCE = 33554432_i32
    BINDINFO_WPC_DOWNLOADBLOCKED = 134217728_i32
    BINDINFO_WPC_LOGGING_ENABLED = 268435456_i32
    BINDINFO_OPTIONS_ALLOWCONNECTDATA = 536870912_i32
    BINDINFO_OPTIONS_DISABLEAUTOREDIRECTS = 1073741824_i32
    BINDINFO_OPTIONS_SHDOCVW_NAVIGATE = -2147483648_i32
  end
  enum BSCF
    BSCF_FIRSTDATANOTIFICATION = 1_i32
    BSCF_INTERMEDIATEDATANOTIFICATION = 2_i32
    BSCF_LASTDATANOTIFICATION = 4_i32
    BSCF_DATAFULLYAVAILABLE = 8_i32
    BSCF_AVAILABLEDATASIZEUNKNOWN = 16_i32
    BSCF_SKIPDRAINDATAFORFILEURLS = 32_i32
    BSCF_64BITLENGTHDOWNLOAD = 64_i32
  end
  enum BINDSTATUS
    BINDSTATUS_FINDINGRESOURCE = 1_i32
    BINDSTATUS_CONNECTING = 2_i32
    BINDSTATUS_REDIRECTING = 3_i32
    BINDSTATUS_BEGINDOWNLOADDATA = 4_i32
    BINDSTATUS_DOWNLOADINGDATA = 5_i32
    BINDSTATUS_ENDDOWNLOADDATA = 6_i32
    BINDSTATUS_BEGINDOWNLOADCOMPONENTS = 7_i32
    BINDSTATUS_INSTALLINGCOMPONENTS = 8_i32
    BINDSTATUS_ENDDOWNLOADCOMPONENTS = 9_i32
    BINDSTATUS_USINGCACHEDCOPY = 10_i32
    BINDSTATUS_SENDINGREQUEST = 11_i32
    BINDSTATUS_CLASSIDAVAILABLE = 12_i32
    BINDSTATUS_MIMETYPEAVAILABLE = 13_i32
    BINDSTATUS_CACHEFILENAMEAVAILABLE = 14_i32
    BINDSTATUS_BEGINSYNCOPERATION = 15_i32
    BINDSTATUS_ENDSYNCOPERATION = 16_i32
    BINDSTATUS_BEGINUPLOADDATA = 17_i32
    BINDSTATUS_UPLOADINGDATA = 18_i32
    BINDSTATUS_ENDUPLOADDATA = 19_i32
    BINDSTATUS_PROTOCOLCLASSID = 20_i32
    BINDSTATUS_ENCODING = 21_i32
    BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE = 22_i32
    BINDSTATUS_CLASSINSTALLLOCATION = 23_i32
    BINDSTATUS_DECODING = 24_i32
    BINDSTATUS_LOADINGMIMEHANDLER = 25_i32
    BINDSTATUS_CONTENTDISPOSITIONATTACH = 26_i32
    BINDSTATUS_FILTERREPORTMIMETYPE = 27_i32
    BINDSTATUS_CLSIDCANINSTANTIATE = 28_i32
    BINDSTATUS_IUNKNOWNAVAILABLE = 29_i32
    BINDSTATUS_DIRECTBIND = 30_i32
    BINDSTATUS_RAWMIMETYPE = 31_i32
    BINDSTATUS_PROXYDETECTING = 32_i32
    BINDSTATUS_ACCEPTRANGES = 33_i32
    BINDSTATUS_COOKIE_SENT = 34_i32
    BINDSTATUS_COMPACT_POLICY_RECEIVED = 35_i32
    BINDSTATUS_COOKIE_SUPPRESSED = 36_i32
    BINDSTATUS_COOKIE_STATE_UNKNOWN = 37_i32
    BINDSTATUS_COOKIE_STATE_ACCEPT = 38_i32
    BINDSTATUS_COOKIE_STATE_REJECT = 39_i32
    BINDSTATUS_COOKIE_STATE_PROMPT = 40_i32
    BINDSTATUS_COOKIE_STATE_LEASH = 41_i32
    BINDSTATUS_COOKIE_STATE_DOWNGRADE = 42_i32
    BINDSTATUS_POLICY_HREF = 43_i32
    BINDSTATUS_P3P_HEADER = 44_i32
    BINDSTATUS_SESSION_COOKIE_RECEIVED = 45_i32
    BINDSTATUS_PERSISTENT_COOKIE_RECEIVED = 46_i32
    BINDSTATUS_SESSION_COOKIES_ALLOWED = 47_i32
    BINDSTATUS_CACHECONTROL = 48_i32
    BINDSTATUS_CONTENTDISPOSITIONFILENAME = 49_i32
    BINDSTATUS_MIMETEXTPLAINMISMATCH = 50_i32
    BINDSTATUS_PUBLISHERAVAILABLE = 51_i32
    BINDSTATUS_DISPLAYNAMEAVAILABLE = 52_i32
    BINDSTATUS_SSLUX_NAVBLOCKED = 53_i32
    BINDSTATUS_SERVER_MIMETYPEAVAILABLE = 54_i32
    BINDSTATUS_SNIFFED_CLASSIDAVAILABLE = 55_i32
    BINDSTATUS_64BIT_PROGRESS = 56_i32
    BINDSTATUS_LAST = 56_i32
    BINDSTATUS_RESERVED_0 = 57_i32
    BINDSTATUS_RESERVED_1 = 58_i32
    BINDSTATUS_RESERVED_2 = 59_i32
    BINDSTATUS_RESERVED_3 = 60_i32
    BINDSTATUS_RESERVED_4 = 61_i32
    BINDSTATUS_RESERVED_5 = 62_i32
    BINDSTATUS_RESERVED_6 = 63_i32
    BINDSTATUS_RESERVED_7 = 64_i32
    BINDSTATUS_RESERVED_8 = 65_i32
    BINDSTATUS_RESERVED_9 = 66_i32
    BINDSTATUS_RESERVED_A = 67_i32
    BINDSTATUS_RESERVED_B = 68_i32
    BINDSTATUS_RESERVED_C = 69_i32
    BINDSTATUS_RESERVED_D = 70_i32
    BINDSTATUS_RESERVED_E = 71_i32
    BINDSTATUS_RESERVED_F = 72_i32
    BINDSTATUS_RESERVED_10 = 73_i32
    BINDSTATUS_RESERVED_11 = 74_i32
    BINDSTATUS_RESERVED_12 = 75_i32
    BINDSTATUS_RESERVED_13 = 76_i32
    BINDSTATUS_RESERVED_14 = 77_i32
    BINDSTATUS_LAST_PRIVATE = 77_i32
  end
  enum BINDF2
    BINDF2_DISABLEBASICOVERHTTP = 1_i32
    BINDF2_DISABLEAUTOCOOKIEHANDLING = 2_i32
    BINDF2_READ_DATA_GREATER_THAN_4GB = 4_i32
    BINDF2_DISABLE_HTTP_REDIRECT_XSECURITYID = 8_i32
    BINDF2_SETDOWNLOADMODE = 32_i32
    BINDF2_DISABLE_HTTP_REDIRECT_CACHING = 64_i32
    BINDF2_KEEP_CALLBACK_MODULE_LOADED = 128_i32
    BINDF2_ALLOW_PROXY_CRED_PROMPT = 256_i32
    BINDF2_RESERVED_17 = 512_i32
    BINDF2_RESERVED_16 = 1024_i32
    BINDF2_RESERVED_15 = 2048_i32
    BINDF2_RESERVED_14 = 4096_i32
    BINDF2_RESERVED_13 = 8192_i32
    BINDF2_RESERVED_12 = 16384_i32
    BINDF2_RESERVED_11 = 32768_i32
    BINDF2_RESERVED_10 = 65536_i32
    BINDF2_RESERVED_F = 131072_i32
    BINDF2_RESERVED_E = 262144_i32
    BINDF2_RESERVED_D = 524288_i32
    BINDF2_RESERVED_C = 1048576_i32
    BINDF2_RESERVED_B = 2097152_i32
    BINDF2_RESERVED_A = 4194304_i32
    BINDF2_RESERVED_9 = 8388608_i32
    BINDF2_RESERVED_8 = 16777216_i32
    BINDF2_RESERVED_7 = 33554432_i32
    BINDF2_RESERVED_6 = 67108864_i32
    BINDF2_RESERVED_5 = 134217728_i32
    BINDF2_RESERVED_4 = 268435456_i32
    BINDF2_RESERVED_3 = 536870912_i32
    BINDF2_RESERVED_2 = 1073741824_i32
    BINDF2_RESERVED_1 = -2147483648_i32
  end
  enum AUTHENTICATEF
    AUTHENTICATEF_PROXY = 1_i32
    AUTHENTICATEF_BASIC = 2_i32
    AUTHENTICATEF_HTTP = 4_i32
  end
  enum CIP_STATUS
    CIP_DISK_FULL = 0_i32
    CIP_ACCESS_DENIED = 1_i32
    CIP_NEWER_VERSION_EXISTS = 2_i32
    CIP_OLDER_VERSION_EXISTS = 3_i32
    CIP_NAME_CONFLICT = 4_i32
    CIP_TRUST_VERIFICATION_COMPONENT_MISSING = 5_i32
    CIP_EXE_SELF_REGISTERATION_TIMEOUT = 6_i32
    CIP_UNSAFE_TO_ABORT = 7_i32
    CIP_NEED_REBOOT = 8_i32
    CIP_NEED_REBOOT_UI_PERMISSION = 9_i32
  end
  enum Uri_HOST_TYPE
    Uri_HOST_UNKNOWN = 0_i32
    Uri_HOST_DNS = 1_i32
    Uri_HOST_IPV4 = 2_i32
    Uri_HOST_IPV6 = 3_i32
    Uri_HOST_IDN = 4_i32
  end
  enum BINDSTRING
    BINDSTRING_HEADERS = 1_i32
    BINDSTRING_ACCEPT_MIMES = 2_i32
    BINDSTRING_EXTRA_URL = 3_i32
    BINDSTRING_LANGUAGE = 4_i32
    BINDSTRING_USERNAME = 5_i32
    BINDSTRING_PASSWORD = 6_i32
    BINDSTRING_UA_PIXELS = 7_i32
    BINDSTRING_UA_COLOR = 8_i32
    BINDSTRING_OS = 9_i32
    BINDSTRING_USER_AGENT = 10_i32
    BINDSTRING_ACCEPT_ENCODINGS = 11_i32
    BINDSTRING_POST_COOKIE = 12_i32
    BINDSTRING_POST_DATA_MIME = 13_i32
    BINDSTRING_URL = 14_i32
    BINDSTRING_IID = 15_i32
    BINDSTRING_FLAG_BIND_TO_OBJECT = 16_i32
    BINDSTRING_PTR_BIND_CONTEXT = 17_i32
    BINDSTRING_XDR_ORIGIN = 18_i32
    BINDSTRING_DOWNLOADPATH = 19_i32
    BINDSTRING_ROOTDOC_URL = 20_i32
    BINDSTRING_INITIAL_FILENAME = 21_i32
    BINDSTRING_PROXY_USERNAME = 22_i32
    BINDSTRING_PROXY_PASSWORD = 23_i32
    BINDSTRING_ENTERPRISE_ID = 24_i32
    BINDSTRING_DOC_URL = 25_i32
    BINDSTRING_SAMESITE_COOKIE_LEVEL = 26_i32
  end
  enum PI_FLAGS
    PI_PARSE_URL = 1_i32
    PI_FILTER_MODE = 2_i32
    PI_FORCE_ASYNC = 4_i32
    PI_USE_WORKERTHREAD = 8_i32
    PI_MIMEVERIFICATION = 16_i32
    PI_CLSIDLOOKUP = 32_i32
    PI_DATAPROGRESS = 64_i32
    PI_SYNCHRONOUS = 128_i32
    PI_APARTMENTTHREADED = 256_i32
    PI_CLASSINSTALL = 512_i32
    PI_PASSONBINDCTX = 8192_i32
    PI_NOMIMEHANDLER = 32768_i32
    PI_LOADAPPDIRECT = 16384_i32
    PD_FORCE_SWITCH = 65536_i32
    PI_PREFERDEFAULTHANDLER = 131072_i32
  end
  enum OIBDG_FLAGS
    OIBDG_APARTMENTTHREADED = 256_i32
    OIBDG_DATAONLY = 4096_i32
  end
  enum PARSEACTION
    PARSE_CANONICALIZE = 1_i32
    PARSE_FRIENDLY = 2_i32
    PARSE_SECURITY_URL = 3_i32
    PARSE_ROOTDOCUMENT = 4_i32
    PARSE_DOCUMENT = 5_i32
    PARSE_ANCHOR = 6_i32
    PARSE_ENCODE_IS_UNESCAPE = 7_i32
    PARSE_DECODE_IS_ESCAPE = 8_i32
    PARSE_PATH_FROM_URL = 9_i32
    PARSE_URL_FROM_PATH = 10_i32
    PARSE_MIME = 11_i32
    PARSE_SERVER = 12_i32
    PARSE_SCHEMA = 13_i32
    PARSE_SITE = 14_i32
    PARSE_DOMAIN = 15_i32
    PARSE_LOCATION = 16_i32
    PARSE_SECURITY_DOMAIN = 17_i32
    PARSE_ESCAPE = 18_i32
    PARSE_UNESCAPE = 19_i32
  end
  enum PSUACTION
    PSU_DEFAULT = 1_i32
    PSU_SECURITY_URL_ONLY = 2_i32
  end
  enum QUERYOPTION
    QUERY_EXPIRATION_DATE = 1_i32
    QUERY_TIME_OF_LAST_CHANGE = 2_i32
    QUERY_CONTENT_ENCODING = 3_i32
    QUERY_CONTENT_TYPE = 4_i32
    QUERY_REFRESH = 5_i32
    QUERY_RECOMBINE = 6_i32
    QUERY_CAN_NAVIGATE = 7_i32
    QUERY_USES_NETWORK = 8_i32
    QUERY_IS_CACHED = 9_i32
    QUERY_IS_INSTALLEDENTRY = 10_i32
    QUERY_IS_CACHED_OR_MAPPED = 11_i32
    QUERY_USES_CACHE = 12_i32
    QUERY_IS_SECURE = 13_i32
    QUERY_IS_SAFE = 14_i32
    QUERY_USES_HISTORYFOLDER = 15_i32
    QUERY_IS_CACHED_AND_USABLE_OFFLINE = 16_i32
  end
  enum INTERNETFEATURELIST
    FEATURE_OBJECT_CACHING = 0_i32
    FEATURE_ZONE_ELEVATION = 1_i32
    FEATURE_MIME_HANDLING = 2_i32
    FEATURE_MIME_SNIFFING = 3_i32
    FEATURE_WINDOW_RESTRICTIONS = 4_i32
    FEATURE_WEBOC_POPUPMANAGEMENT = 5_i32
    FEATURE_BEHAVIORS = 6_i32
    FEATURE_DISABLE_MK_PROTOCOL = 7_i32
    FEATURE_LOCALMACHINE_LOCKDOWN = 8_i32
    FEATURE_SECURITYBAND = 9_i32
    FEATURE_RESTRICT_ACTIVEXINSTALL = 10_i32
    FEATURE_VALIDATE_NAVIGATE_URL = 11_i32
    FEATURE_RESTRICT_FILEDOWNLOAD = 12_i32
    FEATURE_ADDON_MANAGEMENT = 13_i32
    FEATURE_PROTOCOL_LOCKDOWN = 14_i32
    FEATURE_HTTP_USERNAME_PASSWORD_DISABLE = 15_i32
    FEATURE_SAFE_BINDTOOBJECT = 16_i32
    FEATURE_UNC_SAVEDFILECHECK = 17_i32
    FEATURE_GET_URL_DOM_FILEPATH_UNENCODED = 18_i32
    FEATURE_TABBED_BROWSING = 19_i32
    FEATURE_SSLUX = 20_i32
    FEATURE_DISABLE_NAVIGATION_SOUNDS = 21_i32
    FEATURE_DISABLE_LEGACY_COMPRESSION = 22_i32
    FEATURE_FORCE_ADDR_AND_STATUS = 23_i32
    FEATURE_XMLHTTP = 24_i32
    FEATURE_DISABLE_TELNET_PROTOCOL = 25_i32
    FEATURE_FEEDS = 26_i32
    FEATURE_BLOCK_INPUT_PROMPTS = 27_i32
    FEATURE_ENTRY_COUNT = 28_i32
  end
  enum PUAF
    PUAF_DEFAULT = 0_i32
    PUAF_NOUI = 1_i32
    PUAF_ISFILE = 2_i32
    PUAF_WARN_IF_DENIED = 4_i32
    PUAF_FORCEUI_FOREGROUND = 8_i32
    PUAF_CHECK_TIFS = 16_i32
    PUAF_DONTCHECKBOXINDIALOG = 32_i32
    PUAF_TRUSTED = 64_i32
    PUAF_ACCEPT_WILDCARD_SCHEME = 128_i32
    PUAF_ENFORCERESTRICTED = 256_i32
    PUAF_NOSAVEDFILECHECK = 512_i32
    PUAF_REQUIRESAVEDFILECHECK = 1024_i32
    PUAF_DONT_USE_CACHE = 4096_i32
    PUAF_RESERVED1 = 8192_i32
    PUAF_RESERVED2 = 16384_i32
    PUAF_LMZ_UNLOCKED = 65536_i32
    PUAF_LMZ_LOCKED = 131072_i32
    PUAF_DEFAULTZONEPOL = 262144_i32
    PUAF_NPL_USE_LOCKED_IF_RESTRICTED = 524288_i32
    PUAF_NOUIIFLOCKED = 1048576_i32
    PUAF_DRAGPROTOCOLCHECK = 2097152_i32
  end
  enum PUAFOUT
    PUAFOUT_DEFAULT = 0_i32
    PUAFOUT_ISLOCKZONEPOLICY = 1_i32
  end
  enum SZM_FLAGS
    SZM_CREATE = 0_i32
    SZM_DELETE = 1_i32
  end
  enum URLZONE
    URLZONE_INVALID = -1_i32
    URLZONE_PREDEFINED_MIN = 0_i32
    URLZONE_LOCAL_MACHINE = 0_i32
    URLZONE_INTRANET = 1_i32
    URLZONE_TRUSTED = 2_i32
    URLZONE_INTERNET = 3_i32
    URLZONE_UNTRUSTED = 4_i32
    URLZONE_PREDEFINED_MAX = 999_i32
    URLZONE_USER_MIN = 1000_i32
    URLZONE_USER_MAX = 10000_i32
  end
  enum URLTEMPLATE
    URLTEMPLATE_CUSTOM = 0_i32
    URLTEMPLATE_PREDEFINED_MIN = 65536_i32
    URLTEMPLATE_LOW = 65536_i32
    URLTEMPLATE_MEDLOW = 66816_i32
    URLTEMPLATE_MEDIUM = 69632_i32
    URLTEMPLATE_MEDHIGH = 70912_i32
    URLTEMPLATE_HIGH = 73728_i32
    URLTEMPLATE_PREDEFINED_MAX = 131072_i32
  end
  enum INET_ZONE_MANAGER_CONSTANTS
    MAX_ZONE_PATH = 260_i32
    MAX_ZONE_DESCRIPTION = 200_i32
  end
  enum ZAFLAGS
    ZAFLAGS_CUSTOM_EDIT = 1_i32
    ZAFLAGS_ADD_SITES = 2_i32
    ZAFLAGS_REQUIRE_VERIFICATION = 4_i32
    ZAFLAGS_INCLUDE_PROXY_OVERRIDE = 8_i32
    ZAFLAGS_INCLUDE_INTRANET_SITES = 16_i32
    ZAFLAGS_NO_UI = 32_i32
    ZAFLAGS_SUPPORTS_VERIFICATION = 64_i32
    ZAFLAGS_UNC_AS_INTRANET = 128_i32
    ZAFLAGS_DETECT_INTRANET = 256_i32
    ZAFLAGS_USE_LOCKED_ZONES = 65536_i32
    ZAFLAGS_VERIFY_TEMPLATE_SETTINGS = 131072_i32
    ZAFLAGS_NO_CACHE = 262144_i32
  end
  enum URLZONEREG
    URLZONEREG_DEFAULT = 0_i32
    URLZONEREG_HKLM = 1_i32
    URLZONEREG_HKCU = 2_i32
  end
  enum BINDHANDLETYPES
    BINDHANDLETYPES_APPCACHE = 0_i32
    BINDHANDLETYPES_DEPENDENCY = 1_i32
    BINDHANDLETYPES_COUNT = 2_i32
  end

  @[Extern]
  struct REMSECURITY_ATTRIBUTES
    property nLength : UInt32
    property lpSecurityDescriptor : UInt32
    property bInheritHandle : Win32cr::Foundation::BOOL
    def initialize(@nLength : UInt32, @lpSecurityDescriptor : UInt32, @bInheritHandle : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct RemBINDINFO
    property cbSize : UInt32
    property szExtraInfo : Win32cr::Foundation::PWSTR
    property grfBindInfoF : UInt32
    property dwBindVerb : UInt32
    property szCustomVerb : Win32cr::Foundation::PWSTR
    property cbstgmedData : UInt32
    property dwOptions : UInt32
    property dwOptionsFlags : UInt32
    property dwCodePage : UInt32
    property securityAttributes : Win32cr::System::Com::Urlmon::REMSECURITY_ATTRIBUTES
    property iid : LibC::GUID
    property pUnk : Void*
    property dwReserved : UInt32
    def initialize(@cbSize : UInt32, @szExtraInfo : Win32cr::Foundation::PWSTR, @grfBindInfoF : UInt32, @dwBindVerb : UInt32, @szCustomVerb : Win32cr::Foundation::PWSTR, @cbstgmedData : UInt32, @dwOptions : UInt32, @dwOptionsFlags : UInt32, @dwCodePage : UInt32, @securityAttributes : Win32cr::System::Com::Urlmon::REMSECURITY_ATTRIBUTES, @iid : LibC::GUID, @pUnk : Void*, @dwReserved : UInt32)
    end
  end

  @[Extern]
  struct RemFORMATETC
    property cfFormat : UInt32
    property ptd : UInt32
    property dwAspect : UInt32
    property lindex : Int32
    property tymed : UInt32
    def initialize(@cfFormat : UInt32, @ptd : UInt32, @dwAspect : UInt32, @lindex : Int32, @tymed : UInt32)
    end
  end

  @[Extern]
  struct PROTOCOLDATA
    property grfFlags : UInt32
    property dwState : UInt32
    property pData : Void*
    property cbData : UInt32
    def initialize(@grfFlags : UInt32, @dwState : UInt32, @pData : Void*, @cbData : UInt32)
    end
  end

  @[Extern]
  struct StartParam
    property iid : LibC::GUID
    property pIBindCtx : Void*
    property pItf : Void*
    def initialize(@iid : LibC::GUID, @pIBindCtx : Void*, @pItf : Void*)
    end
  end

  @[Extern]
  struct ZONEATTRIBUTES
    property cbSize : UInt32
    property szDisplayName : UInt16[260]
    property szDescription : UInt16[200]
    property szIconPath : UInt16[260]
    property dwTemplateMinLevel : UInt32
    property dwTemplateRecommended : UInt32
    property dwTemplateCurrentLevel : UInt32
    property dwFlags : UInt32
    def initialize(@cbSize : UInt32, @szDisplayName : UInt16[260], @szDescription : UInt16[200], @szIconPath : UInt16[260], @dwTemplateMinLevel : UInt32, @dwTemplateRecommended : UInt32, @dwTemplateCurrentLevel : UInt32, @dwFlags : UInt32)
    end
  end

  @[Extern]
  struct CODEBASEHOLD
    property cbSize : UInt32
    property szDistUnit : Win32cr::Foundation::PWSTR
    property szCodeBase : Win32cr::Foundation::PWSTR
    property dwVersionMS : UInt32
    property dwVersionLS : UInt32
    property dwStyle : UInt32
    def initialize(@cbSize : UInt32, @szDistUnit : Win32cr::Foundation::PWSTR, @szCodeBase : Win32cr::Foundation::PWSTR, @dwVersionMS : UInt32, @dwVersionLS : UInt32, @dwStyle : UInt32)
    end
  end

  @[Extern]
  struct SOFTDISTINFO
    property cbSize : UInt32
    property dwFlags : UInt32
    property dwAdState : UInt32
    property szTitle : Win32cr::Foundation::PWSTR
    property szAbstract : Win32cr::Foundation::PWSTR
    property szHREF : Win32cr::Foundation::PWSTR
    property dwInstalledVersionMS : UInt32
    property dwInstalledVersionLS : UInt32
    property dwUpdateVersionMS : UInt32
    property dwUpdateVersionLS : UInt32
    property dwAdvertisedVersionMS : UInt32
    property dwAdvertisedVersionLS : UInt32
    property dwReserved : UInt32
    def initialize(@cbSize : UInt32, @dwFlags : UInt32, @dwAdState : UInt32, @szTitle : Win32cr::Foundation::PWSTR, @szAbstract : Win32cr::Foundation::PWSTR, @szHREF : Win32cr::Foundation::PWSTR, @dwInstalledVersionMS : UInt32, @dwInstalledVersionLS : UInt32, @dwUpdateVersionMS : UInt32, @dwUpdateVersionLS : UInt32, @dwAdvertisedVersionMS : UInt32, @dwAdvertisedVersionLS : UInt32, @dwReserved : UInt32)
    end
  end

  @[Extern]
  struct PROTOCOLFILTERDATA
    property cbSize : UInt32
    property pProtocolSink : Void*
    property pProtocol : Void*
    property pUnk : Void*
    property dwFilterFlags : UInt32
    def initialize(@cbSize : UInt32, @pProtocolSink : Void*, @pProtocol : Void*, @pUnk : Void*, @dwFilterFlags : UInt32)
    end
  end

  @[Extern]
  struct DATAINFO
    property ulTotalSize : UInt32
    property ulavrPacketSize : UInt32
    property ulConnectSpeed : UInt32
    property ulProcessorSpeed : UInt32
    def initialize(@ulTotalSize : UInt32, @ulavrPacketSize : UInt32, @ulConnectSpeed : UInt32, @ulProcessorSpeed : UInt32)
    end
  end

  @[Extern]
  struct HIT_LOGGING_INFO
    property dwStructSize : UInt32
    property lpszLoggedUrlName : Win32cr::Foundation::PSTR
    property start_time : Win32cr::Foundation::SYSTEMTIME
    property end_time : Win32cr::Foundation::SYSTEMTIME
    property lpszExtendedInfo : Win32cr::Foundation::PSTR
    def initialize(@dwStructSize : UInt32, @lpszLoggedUrlName : Win32cr::Foundation::PSTR, @start_time : Win32cr::Foundation::SYSTEMTIME, @end_time : Win32cr::Foundation::SYSTEMTIME, @lpszExtendedInfo : Win32cr::Foundation::PSTR)
    end
  end

  @[Extern]
  struct CONFIRMSAFETY
    property clsid : LibC::GUID
    property pUnk : Void*
    property dwFlags : UInt32
    def initialize(@clsid : LibC::GUID, @pUnk : Void*, @dwFlags : UInt32)
    end
  end

  @[Extern]
  struct PROTOCOL_ARGUMENT
    property szMethod : Win32cr::Foundation::PWSTR
    property szTargetUrl : Win32cr::Foundation::PWSTR
    def initialize(@szMethod : Win32cr::Foundation::PWSTR, @szTargetUrl : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  record IPersistMonikerVtbl,
    query_interface : Proc(IPersistMoniker*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPersistMoniker*, UInt32),
    release : Proc(IPersistMoniker*, UInt32),
    get_class_id : Proc(IPersistMoniker*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    is_dirty : Proc(IPersistMoniker*, Win32cr::Foundation::HRESULT),
    load : Proc(IPersistMoniker*, Win32cr::Foundation::BOOL, Void*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    save : Proc(IPersistMoniker*, Void*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    save_completed : Proc(IPersistMoniker*, Void*, Void*, Win32cr::Foundation::HRESULT),
    get_cur_moniker : Proc(IPersistMoniker*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPersistMoniker, lpVtbl : IPersistMonikerVtbl* do
    GUID = LibC::GUID.new(0x79eac9c9_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IPersistMoniker*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPersistMoniker*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPersistMoniker*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_class_id(this : IPersistMoniker*, pClassID : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_class_id.call(this, pClassID)
    end
    def is_dirty(this : IPersistMoniker*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_dirty.call(this)
    end
    def load(this : IPersistMoniker*, fFullyAvailable : Win32cr::Foundation::BOOL, pimkName : Void*, pibc : Void*, grfMode : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.load.call(this, fFullyAvailable, pimkName, pibc, grfMode)
    end
    def save(this : IPersistMoniker*, pimkName : Void*, pbc : Void*, fRemember : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.save.call(this, pimkName, pbc, fRemember)
    end
    def save_completed(this : IPersistMoniker*, pimkName : Void*, pibc : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.save_completed.call(this, pimkName, pibc)
    end
    def get_cur_moniker(this : IPersistMoniker*, ppimkName : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cur_moniker.call(this, ppimkName)
    end

  end

  @[Extern]
  record IMonikerPropVtbl,
    query_interface : Proc(IMonikerProp*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IMonikerProp*, UInt32),
    release : Proc(IMonikerProp*, UInt32),
    put_property : Proc(IMonikerProp*, Win32cr::System::Com::Urlmon::MONIKERPROPERTY, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IMonikerProp, lpVtbl : IMonikerPropVtbl* do
    GUID = LibC::GUID.new(0xa5ca5f7f_u32, 0x1847_u16, 0x4d87_u16, StaticArray[0x9c_u8, 0x5b_u8, 0x91_u8, 0x85_u8, 0x9_u8, 0xf7_u8, 0x51_u8, 0x1d_u8])
    def query_interface(this : IMonikerProp*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IMonikerProp*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IMonikerProp*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def put_property(this : IMonikerProp*, mkp : Win32cr::System::Com::Urlmon::MONIKERPROPERTY, val : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_property.call(this, mkp, val)
    end

  end

  @[Extern]
  record IBindProtocolVtbl,
    query_interface : Proc(IBindProtocol*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IBindProtocol*, UInt32),
    release : Proc(IBindProtocol*, UInt32),
    create_binding : Proc(IBindProtocol*, Win32cr::Foundation::PWSTR, Void*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IBindProtocol, lpVtbl : IBindProtocolVtbl* do
    GUID = LibC::GUID.new(0x79eac9cd_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IBindProtocol*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IBindProtocol*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IBindProtocol*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_binding(this : IBindProtocol*, szUrl : Win32cr::Foundation::PWSTR, pbc : Void*, ppb : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_binding.call(this, szUrl, pbc, ppb)
    end

  end

  @[Extern]
  record IHttpNegotiateVtbl,
    query_interface : Proc(IHttpNegotiate*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IHttpNegotiate*, UInt32),
    release : Proc(IHttpNegotiate*, UInt32),
    beginning_transaction : Proc(IHttpNegotiate*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    on_response : Proc(IHttpNegotiate*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IHttpNegotiate, lpVtbl : IHttpNegotiateVtbl* do
    GUID = LibC::GUID.new(0x79eac9d2_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IHttpNegotiate*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IHttpNegotiate*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IHttpNegotiate*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def beginning_transaction(this : IHttpNegotiate*, szURL : Win32cr::Foundation::PWSTR, szHeaders : Win32cr::Foundation::PWSTR, dwReserved : UInt32, pszAdditionalHeaders : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.beginning_transaction.call(this, szURL, szHeaders, dwReserved, pszAdditionalHeaders)
    end
    def on_response(this : IHttpNegotiate*, dwResponseCode : UInt32, szResponseHeaders : Win32cr::Foundation::PWSTR, szRequestHeaders : Win32cr::Foundation::PWSTR, pszAdditionalRequestHeaders : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_response.call(this, dwResponseCode, szResponseHeaders, szRequestHeaders, pszAdditionalRequestHeaders)
    end

  end

  @[Extern]
  record IHttpNegotiate2Vtbl,
    query_interface : Proc(IHttpNegotiate2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IHttpNegotiate2*, UInt32),
    release : Proc(IHttpNegotiate2*, UInt32),
    beginning_transaction : Proc(IHttpNegotiate2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    on_response : Proc(IHttpNegotiate2*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_root_security_id : Proc(IHttpNegotiate2*, UInt8*, UInt32*, LibC::UIntPtrT, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IHttpNegotiate2, lpVtbl : IHttpNegotiate2Vtbl* do
    GUID = LibC::GUID.new(0x4f9f9fcb_u32, 0xe0f4_u16, 0x48eb_u16, StaticArray[0xb7_u8, 0xab_u8, 0xfa_u8, 0x2e_u8, 0xa9_u8, 0x36_u8, 0x5c_u8, 0xb4_u8])
    def query_interface(this : IHttpNegotiate2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IHttpNegotiate2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IHttpNegotiate2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def beginning_transaction(this : IHttpNegotiate2*, szURL : Win32cr::Foundation::PWSTR, szHeaders : Win32cr::Foundation::PWSTR, dwReserved : UInt32, pszAdditionalHeaders : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.beginning_transaction.call(this, szURL, szHeaders, dwReserved, pszAdditionalHeaders)
    end
    def on_response(this : IHttpNegotiate2*, dwResponseCode : UInt32, szResponseHeaders : Win32cr::Foundation::PWSTR, szRequestHeaders : Win32cr::Foundation::PWSTR, pszAdditionalRequestHeaders : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_response.call(this, dwResponseCode, szResponseHeaders, szRequestHeaders, pszAdditionalRequestHeaders)
    end
    def get_root_security_id(this : IHttpNegotiate2*, pbSecurityId : UInt8*, pcbSecurityId : UInt32*, dwReserved : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_root_security_id.call(this, pbSecurityId, pcbSecurityId, dwReserved)
    end

  end

  @[Extern]
  record IHttpNegotiate3Vtbl,
    query_interface : Proc(IHttpNegotiate3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IHttpNegotiate3*, UInt32),
    release : Proc(IHttpNegotiate3*, UInt32),
    beginning_transaction : Proc(IHttpNegotiate3*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    on_response : Proc(IHttpNegotiate3*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_root_security_id : Proc(IHttpNegotiate3*, UInt8*, UInt32*, LibC::UIntPtrT, Win32cr::Foundation::HRESULT),
    get_serialized_client_cert_context : Proc(IHttpNegotiate3*, UInt8**, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IHttpNegotiate3, lpVtbl : IHttpNegotiate3Vtbl* do
    GUID = LibC::GUID.new(0x57b6c80a_u32, 0x34c2_u16, 0x4602_u16, StaticArray[0xbc_u8, 0x26_u8, 0x66_u8, 0xa0_u8, 0x2f_u8, 0xc5_u8, 0x71_u8, 0x53_u8])
    def query_interface(this : IHttpNegotiate3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IHttpNegotiate3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IHttpNegotiate3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def beginning_transaction(this : IHttpNegotiate3*, szURL : Win32cr::Foundation::PWSTR, szHeaders : Win32cr::Foundation::PWSTR, dwReserved : UInt32, pszAdditionalHeaders : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.beginning_transaction.call(this, szURL, szHeaders, dwReserved, pszAdditionalHeaders)
    end
    def on_response(this : IHttpNegotiate3*, dwResponseCode : UInt32, szResponseHeaders : Win32cr::Foundation::PWSTR, szRequestHeaders : Win32cr::Foundation::PWSTR, pszAdditionalRequestHeaders : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_response.call(this, dwResponseCode, szResponseHeaders, szRequestHeaders, pszAdditionalRequestHeaders)
    end
    def get_root_security_id(this : IHttpNegotiate3*, pbSecurityId : UInt8*, pcbSecurityId : UInt32*, dwReserved : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_root_security_id.call(this, pbSecurityId, pcbSecurityId, dwReserved)
    end
    def get_serialized_client_cert_context(this : IHttpNegotiate3*, ppbCert : UInt8**, pcbCert : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_serialized_client_cert_context.call(this, ppbCert, pcbCert)
    end

  end

  @[Extern]
  record IWinInetFileStreamVtbl,
    query_interface : Proc(IWinInetFileStream*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWinInetFileStream*, UInt32),
    release : Proc(IWinInetFileStream*, UInt32),
    set_handle_for_unlock : Proc(IWinInetFileStream*, LibC::UIntPtrT, LibC::UIntPtrT, Win32cr::Foundation::HRESULT),
    set_delete_file : Proc(IWinInetFileStream*, LibC::UIntPtrT, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWinInetFileStream, lpVtbl : IWinInetFileStreamVtbl* do
    GUID = LibC::GUID.new(0xf134c4b7_u32, 0xb1f8_u16, 0x4e75_u16, StaticArray[0xb8_u8, 0x86_u8, 0x74_u8, 0xb9_u8, 0x9_u8, 0x43_u8, 0xbe_u8, 0xcb_u8])
    def query_interface(this : IWinInetFileStream*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWinInetFileStream*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWinInetFileStream*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_handle_for_unlock(this : IWinInetFileStream*, hWinInetLockHandle : LibC::UIntPtrT, dwReserved : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_handle_for_unlock.call(this, hWinInetLockHandle, dwReserved)
    end
    def set_delete_file(this : IWinInetFileStream*, dwReserved : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_delete_file.call(this, dwReserved)
    end

  end

  @[Extern]
  record IWindowForBindingUIVtbl,
    query_interface : Proc(IWindowForBindingUI*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWindowForBindingUI*, UInt32),
    release : Proc(IWindowForBindingUI*, UInt32),
    get_window : Proc(IWindowForBindingUI*, LibC::GUID*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWindowForBindingUI, lpVtbl : IWindowForBindingUIVtbl* do
    GUID = LibC::GUID.new(0x79eac9d5_u32, 0xbafa_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IWindowForBindingUI*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWindowForBindingUI*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWindowForBindingUI*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IWindowForBindingUI*, rguidReason : LibC::GUID*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, rguidReason, phwnd)
    end

  end

  @[Extern]
  record ICodeInstallVtbl,
    query_interface : Proc(ICodeInstall*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICodeInstall*, UInt32),
    release : Proc(ICodeInstall*, UInt32),
    get_window : Proc(ICodeInstall*, LibC::GUID*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    on_code_install_problem : Proc(ICodeInstall*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICodeInstall, lpVtbl : ICodeInstallVtbl* do
    GUID = LibC::GUID.new(0x79eac9d1_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : ICodeInstall*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICodeInstall*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICodeInstall*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : ICodeInstall*, rguidReason : LibC::GUID*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, rguidReason, phwnd)
    end
    def on_code_install_problem(this : ICodeInstall*, ulStatusCode : UInt32, szDestination : Win32cr::Foundation::PWSTR, szSource : Win32cr::Foundation::PWSTR, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_code_install_problem.call(this, ulStatusCode, szDestination, szSource, dwReserved)
    end

  end

  @[Extern]
  record IUriContainerVtbl,
    query_interface : Proc(IUriContainer*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IUriContainer*, UInt32),
    release : Proc(IUriContainer*, UInt32),
    get_i_uri : Proc(IUriContainer*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IUriContainer, lpVtbl : IUriContainerVtbl* do
    GUID = LibC::GUID.new(0xa158a630_u32, 0xed6f_u16, 0x45fb_u16, StaticArray[0xb9_u8, 0x87_u8, 0xf6_u8, 0x86_u8, 0x76_u8, 0xf5_u8, 0x77_u8, 0x52_u8])
    def query_interface(this : IUriContainer*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IUriContainer*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IUriContainer*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_i_uri(this : IUriContainer*, ppIUri : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_uri.call(this, ppIUri)
    end

  end

  @[Extern]
  record IUriBuilderFactoryVtbl,
    query_interface : Proc(IUriBuilderFactory*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IUriBuilderFactory*, UInt32),
    release : Proc(IUriBuilderFactory*, UInt32),
    create_i_uri_builder : Proc(IUriBuilderFactory*, UInt32, LibC::UIntPtrT, Void**, Win32cr::Foundation::HRESULT),
    create_initialized_i_uri_builder : Proc(IUriBuilderFactory*, UInt32, LibC::UIntPtrT, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IUriBuilderFactory, lpVtbl : IUriBuilderFactoryVtbl* do
    GUID = LibC::GUID.new(0xe982ce48_u32, 0xb96_u16, 0x440c_u16, StaticArray[0xbc_u8, 0x37_u8, 0xc_u8, 0x86_u8, 0x9b_u8, 0x27_u8, 0xa2_u8, 0x9e_u8])
    def query_interface(this : IUriBuilderFactory*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IUriBuilderFactory*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IUriBuilderFactory*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_i_uri_builder(this : IUriBuilderFactory*, dwFlags : UInt32, dwReserved : LibC::UIntPtrT, ppIUriBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_i_uri_builder.call(this, dwFlags, dwReserved, ppIUriBuilder)
    end
    def create_initialized_i_uri_builder(this : IUriBuilderFactory*, dwFlags : UInt32, dwReserved : LibC::UIntPtrT, ppIUriBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_initialized_i_uri_builder.call(this, dwFlags, dwReserved, ppIUriBuilder)
    end

  end

  @[Extern]
  record IWinInetInfoVtbl,
    query_interface : Proc(IWinInetInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWinInetInfo*, UInt32),
    release : Proc(IWinInetInfo*, UInt32),
    query_option : Proc(IWinInetInfo*, UInt32, Void*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWinInetInfo, lpVtbl : IWinInetInfoVtbl* do
    GUID = LibC::GUID.new(0x79eac9d6_u32, 0xbafa_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IWinInetInfo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWinInetInfo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWinInetInfo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def query_option(this : IWinInetInfo*, dwOption : UInt32, pBuffer : Void*, pcbBuf : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_option.call(this, dwOption, pBuffer, pcbBuf)
    end

  end

  @[Extern]
  record IHttpSecurityVtbl,
    query_interface : Proc(IHttpSecurity*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IHttpSecurity*, UInt32),
    release : Proc(IHttpSecurity*, UInt32),
    get_window : Proc(IHttpSecurity*, LibC::GUID*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    on_security_problem : Proc(IHttpSecurity*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IHttpSecurity, lpVtbl : IHttpSecurityVtbl* do
    GUID = LibC::GUID.new(0x79eac9d7_u32, 0xbafa_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IHttpSecurity*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IHttpSecurity*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IHttpSecurity*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IHttpSecurity*, rguidReason : LibC::GUID*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, rguidReason, phwnd)
    end
    def on_security_problem(this : IHttpSecurity*, dwProblem : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_security_problem.call(this, dwProblem)
    end

  end

  @[Extern]
  record IWinInetHttpInfoVtbl,
    query_interface : Proc(IWinInetHttpInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWinInetHttpInfo*, UInt32),
    release : Proc(IWinInetHttpInfo*, UInt32),
    query_option : Proc(IWinInetHttpInfo*, UInt32, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    query_info : Proc(IWinInetHttpInfo*, UInt32, Void*, UInt32*, UInt32*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWinInetHttpInfo, lpVtbl : IWinInetHttpInfoVtbl* do
    GUID = LibC::GUID.new(0x79eac9d8_u32, 0xbafa_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IWinInetHttpInfo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWinInetHttpInfo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWinInetHttpInfo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def query_option(this : IWinInetHttpInfo*, dwOption : UInt32, pBuffer : Void*, pcbBuf : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_option.call(this, dwOption, pBuffer, pcbBuf)
    end
    def query_info(this : IWinInetHttpInfo*, dwOption : UInt32, pBuffer : Void*, pcbBuf : UInt32*, pdwFlags : UInt32*, pdwReserved : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_info.call(this, dwOption, pBuffer, pcbBuf, pdwFlags, pdwReserved)
    end

  end

  @[Extern]
  record IWinInetHttpTimeoutsVtbl,
    query_interface : Proc(IWinInetHttpTimeouts*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWinInetHttpTimeouts*, UInt32),
    release : Proc(IWinInetHttpTimeouts*, UInt32),
    get_request_timeouts : Proc(IWinInetHttpTimeouts*, UInt32*, UInt32*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWinInetHttpTimeouts, lpVtbl : IWinInetHttpTimeoutsVtbl* do
    GUID = LibC::GUID.new(0xf286fa56_u32, 0xc1fd_u16, 0x4270_u16, StaticArray[0x8e_u8, 0x67_u8, 0xb3_u8, 0xeb_u8, 0x79_u8, 0xa_u8, 0x81_u8, 0xe8_u8])
    def query_interface(this : IWinInetHttpTimeouts*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWinInetHttpTimeouts*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWinInetHttpTimeouts*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_request_timeouts(this : IWinInetHttpTimeouts*, pdwConnectTimeout : UInt32*, pdwSendTimeout : UInt32*, pdwReceiveTimeout : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_request_timeouts.call(this, pdwConnectTimeout, pdwSendTimeout, pdwReceiveTimeout)
    end

  end

  @[Extern]
  record IWinInetCacheHintsVtbl,
    query_interface : Proc(IWinInetCacheHints*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWinInetCacheHints*, UInt32),
    release : Proc(IWinInetCacheHints*, UInt32),
    set_cache_extension : Proc(IWinInetCacheHints*, Win32cr::Foundation::PWSTR, Void*, UInt32*, UInt32*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWinInetCacheHints, lpVtbl : IWinInetCacheHintsVtbl* do
    GUID = LibC::GUID.new(0xdd1ec3b3_u32, 0x8391_u16, 0x4fdb_u16, StaticArray[0xa9_u8, 0xe6_u8, 0x34_u8, 0x7c_u8, 0x3c_u8, 0xaa_u8, 0xa7_u8, 0xdd_u8])
    def query_interface(this : IWinInetCacheHints*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWinInetCacheHints*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWinInetCacheHints*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_cache_extension(this : IWinInetCacheHints*, pwzExt : Win32cr::Foundation::PWSTR, pszCacheFile : Void*, pcbCacheFile : UInt32*, pdwWinInetError : UInt32*, pdwReserved : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cache_extension.call(this, pwzExt, pszCacheFile, pcbCacheFile, pdwWinInetError, pdwReserved)
    end

  end

  @[Extern]
  record IWinInetCacheHints2Vtbl,
    query_interface : Proc(IWinInetCacheHints2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWinInetCacheHints2*, UInt32),
    release : Proc(IWinInetCacheHints2*, UInt32),
    set_cache_extension : Proc(IWinInetCacheHints2*, Win32cr::Foundation::PWSTR, Void*, UInt32*, UInt32*, UInt32*, Win32cr::Foundation::HRESULT),
    set_cache_extension2 : Proc(IWinInetCacheHints2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32*, UInt32*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWinInetCacheHints2, lpVtbl : IWinInetCacheHints2Vtbl* do
    GUID = LibC::GUID.new(0x7857aeac_u32, 0xd31f_u16, 0x49bf_u16, StaticArray[0x88_u8, 0x4e_u8, 0xdd_u8, 0x46_u8, 0xdf_u8, 0x36_u8, 0x78_u8, 0xa_u8])
    def query_interface(this : IWinInetCacheHints2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWinInetCacheHints2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWinInetCacheHints2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_cache_extension(this : IWinInetCacheHints2*, pwzExt : Win32cr::Foundation::PWSTR, pszCacheFile : Void*, pcbCacheFile : UInt32*, pdwWinInetError : UInt32*, pdwReserved : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cache_extension.call(this, pwzExt, pszCacheFile, pcbCacheFile, pdwWinInetError, pdwReserved)
    end
    def set_cache_extension2(this : IWinInetCacheHints2*, pwzExt : Win32cr::Foundation::PWSTR, pwzCacheFile : Win32cr::Foundation::PWSTR, pcchCacheFile : UInt32*, pdwWinInetError : UInt32*, pdwReserved : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cache_extension2.call(this, pwzExt, pwzCacheFile, pcchCacheFile, pdwWinInetError, pdwReserved)
    end

  end

  @[Extern]
  record IInternetVtbl,
    query_interface : Proc(IInternet*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternet*, UInt32),
    release : Proc(IInternet*, UInt32)


  @[Extern]
  record IInternet, lpVtbl : IInternetVtbl* do
    GUID = LibC::GUID.new(0x79eac9e0_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IInternet*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternet*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternet*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end

  end

  @[Extern]
  record IInternetBindInfoVtbl,
    query_interface : Proc(IInternetBindInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetBindInfo*, UInt32),
    release : Proc(IInternetBindInfo*, UInt32),
    get_bind_info : Proc(IInternetBindInfo*, UInt32*, Win32cr::System::Com::BINDINFO*, Win32cr::Foundation::HRESULT),
    get_bind_string : Proc(IInternetBindInfo*, UInt32, Win32cr::Foundation::PWSTR*, UInt32, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetBindInfo, lpVtbl : IInternetBindInfoVtbl* do
    GUID = LibC::GUID.new(0x79eac9e1_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IInternetBindInfo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetBindInfo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetBindInfo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_bind_info(this : IInternetBindInfo*, grfBINDF : UInt32*, pbindinfo : Win32cr::System::Com::BINDINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_bind_info.call(this, grfBINDF, pbindinfo)
    end
    def get_bind_string(this : IInternetBindInfo*, ulStringType : UInt32, ppwzStr : Win32cr::Foundation::PWSTR*, cEl : UInt32, pcElFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_bind_string.call(this, ulStringType, ppwzStr, cEl, pcElFetched)
    end

  end

  @[Extern]
  record IInternetBindInfoExVtbl,
    query_interface : Proc(IInternetBindInfoEx*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetBindInfoEx*, UInt32),
    release : Proc(IInternetBindInfoEx*, UInt32),
    get_bind_info : Proc(IInternetBindInfoEx*, UInt32*, Win32cr::System::Com::BINDINFO*, Win32cr::Foundation::HRESULT),
    get_bind_string : Proc(IInternetBindInfoEx*, UInt32, Win32cr::Foundation::PWSTR*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_bind_info_ex : Proc(IInternetBindInfoEx*, UInt32*, Win32cr::System::Com::BINDINFO*, UInt32*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetBindInfoEx, lpVtbl : IInternetBindInfoExVtbl* do
    GUID = LibC::GUID.new(0xa3e015b7_u32, 0xa82c_u16, 0x4dcd_u16, StaticArray[0xa1_u8, 0x50_u8, 0x56_u8, 0x9a_u8, 0xee_u8, 0xed_u8, 0x36_u8, 0xab_u8])
    def query_interface(this : IInternetBindInfoEx*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetBindInfoEx*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetBindInfoEx*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_bind_info(this : IInternetBindInfoEx*, grfBINDF : UInt32*, pbindinfo : Win32cr::System::Com::BINDINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_bind_info.call(this, grfBINDF, pbindinfo)
    end
    def get_bind_string(this : IInternetBindInfoEx*, ulStringType : UInt32, ppwzStr : Win32cr::Foundation::PWSTR*, cEl : UInt32, pcElFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_bind_string.call(this, ulStringType, ppwzStr, cEl, pcElFetched)
    end
    def get_bind_info_ex(this : IInternetBindInfoEx*, grfBINDF : UInt32*, pbindinfo : Win32cr::System::Com::BINDINFO*, grfBINDF2 : UInt32*, pdwReserved : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_bind_info_ex.call(this, grfBINDF, pbindinfo, grfBINDF2, pdwReserved)
    end

  end

  @[Extern]
  record IInternetProtocolRootVtbl,
    query_interface : Proc(IInternetProtocolRoot*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetProtocolRoot*, UInt32),
    release : Proc(IInternetProtocolRoot*, UInt32),
    start : Proc(IInternetProtocolRoot*, Win32cr::Foundation::PWSTR, Void*, Void*, UInt32, Win32cr::Foundation::HANDLE_PTR, Win32cr::Foundation::HRESULT),
    continue : Proc(IInternetProtocolRoot*, Win32cr::System::Com::Urlmon::PROTOCOLDATA*, Win32cr::Foundation::HRESULT),
    abort : Proc(IInternetProtocolRoot*, Win32cr::Foundation::HRESULT, UInt32, Win32cr::Foundation::HRESULT),
    terminate : Proc(IInternetProtocolRoot*, UInt32, Win32cr::Foundation::HRESULT),
    suspend : Proc(IInternetProtocolRoot*, Win32cr::Foundation::HRESULT),
    resume : Proc(IInternetProtocolRoot*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetProtocolRoot, lpVtbl : IInternetProtocolRootVtbl* do
    GUID = LibC::GUID.new(0x79eac9e3_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IInternetProtocolRoot*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetProtocolRoot*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetProtocolRoot*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def start(this : IInternetProtocolRoot*, szUrl : Win32cr::Foundation::PWSTR, pOIProtSink : Void*, pOIBindInfo : Void*, grfPI : UInt32, dwReserved : Win32cr::Foundation::HANDLE_PTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start.call(this, szUrl, pOIProtSink, pOIBindInfo, grfPI, dwReserved)
    end
    def continue(this : IInternetProtocolRoot*, pProtocolData : Win32cr::System::Com::Urlmon::PROTOCOLDATA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.continue.call(this, pProtocolData)
    end
    def abort(this : IInternetProtocolRoot*, hrReason : Win32cr::Foundation::HRESULT, dwOptions : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.abort.call(this, hrReason, dwOptions)
    end
    def terminate(this : IInternetProtocolRoot*, dwOptions : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.terminate.call(this, dwOptions)
    end
    def suspend(this : IInternetProtocolRoot*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.suspend.call(this)
    end
    def resume(this : IInternetProtocolRoot*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resume.call(this)
    end

  end

  @[Extern]
  record IInternetProtocolVtbl,
    query_interface : Proc(IInternetProtocol*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetProtocol*, UInt32),
    release : Proc(IInternetProtocol*, UInt32),
    start : Proc(IInternetProtocol*, Win32cr::Foundation::PWSTR, Void*, Void*, UInt32, Win32cr::Foundation::HANDLE_PTR, Win32cr::Foundation::HRESULT),
    continue : Proc(IInternetProtocol*, Win32cr::System::Com::Urlmon::PROTOCOLDATA*, Win32cr::Foundation::HRESULT),
    abort : Proc(IInternetProtocol*, Win32cr::Foundation::HRESULT, UInt32, Win32cr::Foundation::HRESULT),
    terminate : Proc(IInternetProtocol*, UInt32, Win32cr::Foundation::HRESULT),
    suspend : Proc(IInternetProtocol*, Win32cr::Foundation::HRESULT),
    resume : Proc(IInternetProtocol*, Win32cr::Foundation::HRESULT),
    read : Proc(IInternetProtocol*, Void*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    seek : Proc(IInternetProtocol*, Win32cr::Foundation::LARGE_INTEGER, UInt32, Win32cr::Foundation::ULARGE_INTEGER*, Win32cr::Foundation::HRESULT),
    lock_request : Proc(IInternetProtocol*, UInt32, Win32cr::Foundation::HRESULT),
    unlock_request : Proc(IInternetProtocol*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetProtocol, lpVtbl : IInternetProtocolVtbl* do
    GUID = LibC::GUID.new(0x79eac9e4_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IInternetProtocol*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetProtocol*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetProtocol*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def start(this : IInternetProtocol*, szUrl : Win32cr::Foundation::PWSTR, pOIProtSink : Void*, pOIBindInfo : Void*, grfPI : UInt32, dwReserved : Win32cr::Foundation::HANDLE_PTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start.call(this, szUrl, pOIProtSink, pOIBindInfo, grfPI, dwReserved)
    end
    def continue(this : IInternetProtocol*, pProtocolData : Win32cr::System::Com::Urlmon::PROTOCOLDATA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.continue.call(this, pProtocolData)
    end
    def abort(this : IInternetProtocol*, hrReason : Win32cr::Foundation::HRESULT, dwOptions : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.abort.call(this, hrReason, dwOptions)
    end
    def terminate(this : IInternetProtocol*, dwOptions : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.terminate.call(this, dwOptions)
    end
    def suspend(this : IInternetProtocol*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.suspend.call(this)
    end
    def resume(this : IInternetProtocol*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resume.call(this)
    end
    def read(this : IInternetProtocol*, pv : Void*, cb : UInt32, pcbRead : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read.call(this, pv, cb, pcbRead)
    end
    def seek(this : IInternetProtocol*, dlibMove : Win32cr::Foundation::LARGE_INTEGER, dwOrigin : UInt32, plibNewPosition : Win32cr::Foundation::ULARGE_INTEGER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.seek.call(this, dlibMove, dwOrigin, plibNewPosition)
    end
    def lock_request(this : IInternetProtocol*, dwOptions : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.lock_request.call(this, dwOptions)
    end
    def unlock_request(this : IInternetProtocol*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unlock_request.call(this)
    end

  end

  @[Extern]
  record IInternetProtocolExVtbl,
    query_interface : Proc(IInternetProtocolEx*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetProtocolEx*, UInt32),
    release : Proc(IInternetProtocolEx*, UInt32),
    start : Proc(IInternetProtocolEx*, Win32cr::Foundation::PWSTR, Void*, Void*, UInt32, Win32cr::Foundation::HANDLE_PTR, Win32cr::Foundation::HRESULT),
    continue : Proc(IInternetProtocolEx*, Win32cr::System::Com::Urlmon::PROTOCOLDATA*, Win32cr::Foundation::HRESULT),
    abort : Proc(IInternetProtocolEx*, Win32cr::Foundation::HRESULT, UInt32, Win32cr::Foundation::HRESULT),
    terminate : Proc(IInternetProtocolEx*, UInt32, Win32cr::Foundation::HRESULT),
    suspend : Proc(IInternetProtocolEx*, Win32cr::Foundation::HRESULT),
    resume : Proc(IInternetProtocolEx*, Win32cr::Foundation::HRESULT),
    read : Proc(IInternetProtocolEx*, Void*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    seek : Proc(IInternetProtocolEx*, Win32cr::Foundation::LARGE_INTEGER, UInt32, Win32cr::Foundation::ULARGE_INTEGER*, Win32cr::Foundation::HRESULT),
    lock_request : Proc(IInternetProtocolEx*, UInt32, Win32cr::Foundation::HRESULT),
    unlock_request : Proc(IInternetProtocolEx*, Win32cr::Foundation::HRESULT),
    start_ex : Proc(IInternetProtocolEx*, Void*, Void*, Void*, UInt32, Win32cr::Foundation::HANDLE_PTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetProtocolEx, lpVtbl : IInternetProtocolExVtbl* do
    GUID = LibC::GUID.new(0xc7a98e66_u32, 0x1010_u16, 0x492c_u16, StaticArray[0xa1_u8, 0xc8_u8, 0xc8_u8, 0x9_u8, 0xe1_u8, 0xf7_u8, 0x59_u8, 0x5_u8])
    def query_interface(this : IInternetProtocolEx*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetProtocolEx*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetProtocolEx*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def start(this : IInternetProtocolEx*, szUrl : Win32cr::Foundation::PWSTR, pOIProtSink : Void*, pOIBindInfo : Void*, grfPI : UInt32, dwReserved : Win32cr::Foundation::HANDLE_PTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start.call(this, szUrl, pOIProtSink, pOIBindInfo, grfPI, dwReserved)
    end
    def continue(this : IInternetProtocolEx*, pProtocolData : Win32cr::System::Com::Urlmon::PROTOCOLDATA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.continue.call(this, pProtocolData)
    end
    def abort(this : IInternetProtocolEx*, hrReason : Win32cr::Foundation::HRESULT, dwOptions : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.abort.call(this, hrReason, dwOptions)
    end
    def terminate(this : IInternetProtocolEx*, dwOptions : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.terminate.call(this, dwOptions)
    end
    def suspend(this : IInternetProtocolEx*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.suspend.call(this)
    end
    def resume(this : IInternetProtocolEx*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resume.call(this)
    end
    def read(this : IInternetProtocolEx*, pv : Void*, cb : UInt32, pcbRead : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read.call(this, pv, cb, pcbRead)
    end
    def seek(this : IInternetProtocolEx*, dlibMove : Win32cr::Foundation::LARGE_INTEGER, dwOrigin : UInt32, plibNewPosition : Win32cr::Foundation::ULARGE_INTEGER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.seek.call(this, dlibMove, dwOrigin, plibNewPosition)
    end
    def lock_request(this : IInternetProtocolEx*, dwOptions : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.lock_request.call(this, dwOptions)
    end
    def unlock_request(this : IInternetProtocolEx*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unlock_request.call(this)
    end
    def start_ex(this : IInternetProtocolEx*, pUri : Void*, pOIProtSink : Void*, pOIBindInfo : Void*, grfPI : UInt32, dwReserved : Win32cr::Foundation::HANDLE_PTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start_ex.call(this, pUri, pOIProtSink, pOIBindInfo, grfPI, dwReserved)
    end

  end

  @[Extern]
  record IInternetProtocolSinkVtbl,
    query_interface : Proc(IInternetProtocolSink*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetProtocolSink*, UInt32),
    release : Proc(IInternetProtocolSink*, UInt32),
    switch : Proc(IInternetProtocolSink*, Win32cr::System::Com::Urlmon::PROTOCOLDATA*, Win32cr::Foundation::HRESULT),
    report_progress : Proc(IInternetProtocolSink*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    report_data : Proc(IInternetProtocolSink*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    report_result : Proc(IInternetProtocolSink*, Win32cr::Foundation::HRESULT, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetProtocolSink, lpVtbl : IInternetProtocolSinkVtbl* do
    GUID = LibC::GUID.new(0x79eac9e5_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IInternetProtocolSink*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetProtocolSink*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetProtocolSink*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def switch(this : IInternetProtocolSink*, pProtocolData : Win32cr::System::Com::Urlmon::PROTOCOLDATA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.switch.call(this, pProtocolData)
    end
    def report_progress(this : IInternetProtocolSink*, ulStatusCode : UInt32, szStatusText : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.report_progress.call(this, ulStatusCode, szStatusText)
    end
    def report_data(this : IInternetProtocolSink*, grfBSCF : UInt32, ulProgress : UInt32, ulProgressMax : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.report_data.call(this, grfBSCF, ulProgress, ulProgressMax)
    end
    def report_result(this : IInternetProtocolSink*, hrResult : Win32cr::Foundation::HRESULT, dwError : UInt32, szResult : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.report_result.call(this, hrResult, dwError, szResult)
    end

  end

  @[Extern]
  record IInternetProtocolSinkStackableVtbl,
    query_interface : Proc(IInternetProtocolSinkStackable*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetProtocolSinkStackable*, UInt32),
    release : Proc(IInternetProtocolSinkStackable*, UInt32),
    switch_sink : Proc(IInternetProtocolSinkStackable*, Void*, Win32cr::Foundation::HRESULT),
    commit_switch : Proc(IInternetProtocolSinkStackable*, Win32cr::Foundation::HRESULT),
    rollback_switch : Proc(IInternetProtocolSinkStackable*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetProtocolSinkStackable, lpVtbl : IInternetProtocolSinkStackableVtbl* do
    GUID = LibC::GUID.new(0x79eac9f0_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IInternetProtocolSinkStackable*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetProtocolSinkStackable*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetProtocolSinkStackable*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def switch_sink(this : IInternetProtocolSinkStackable*, pOIProtSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.switch_sink.call(this, pOIProtSink)
    end
    def commit_switch(this : IInternetProtocolSinkStackable*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.commit_switch.call(this)
    end
    def rollback_switch(this : IInternetProtocolSinkStackable*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.rollback_switch.call(this)
    end

  end

  @[Extern]
  record IInternetSessionVtbl,
    query_interface : Proc(IInternetSession*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetSession*, UInt32),
    release : Proc(IInternetSession*, UInt32),
    register_name_space : Proc(IInternetSession*, Void*, LibC::GUID*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::PWSTR*, UInt32, Win32cr::Foundation::HRESULT),
    unregister_name_space : Proc(IInternetSession*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    register_mime_filter : Proc(IInternetSession*, Void*, LibC::GUID*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    unregister_mime_filter : Proc(IInternetSession*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    create_binding : Proc(IInternetSession*, Void*, Win32cr::Foundation::PWSTR, Void*, Void**, Void**, UInt32, Win32cr::Foundation::HRESULT),
    set_session_option : Proc(IInternetSession*, UInt32, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_session_option : Proc(IInternetSession*, UInt32, Void*, UInt32*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetSession, lpVtbl : IInternetSessionVtbl* do
    GUID = LibC::GUID.new(0x79eac9e7_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IInternetSession*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetSession*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetSession*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def register_name_space(this : IInternetSession*, pCF : Void*, rclsid : LibC::GUID*, pwzProtocol : Win32cr::Foundation::PWSTR, cPatterns : UInt32, ppwzPatterns : Win32cr::Foundation::PWSTR*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_name_space.call(this, pCF, rclsid, pwzProtocol, cPatterns, ppwzPatterns, dwReserved)
    end
    def unregister_name_space(this : IInternetSession*, pCF : Void*, pszProtocol : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_name_space.call(this, pCF, pszProtocol)
    end
    def register_mime_filter(this : IInternetSession*, pCF : Void*, rclsid : LibC::GUID*, pwzType : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_mime_filter.call(this, pCF, rclsid, pwzType)
    end
    def unregister_mime_filter(this : IInternetSession*, pCF : Void*, pwzType : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_mime_filter.call(this, pCF, pwzType)
    end
    def create_binding(this : IInternetSession*, pBC : Void*, szUrl : Win32cr::Foundation::PWSTR, pUnkOuter : Void*, ppUnk : Void**, ppOInetProt : Void**, dwOption : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_binding.call(this, pBC, szUrl, pUnkOuter, ppUnk, ppOInetProt, dwOption)
    end
    def set_session_option(this : IInternetSession*, dwOption : UInt32, pBuffer : Void*, dwBufferLength : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_session_option.call(this, dwOption, pBuffer, dwBufferLength, dwReserved)
    end
    def get_session_option(this : IInternetSession*, dwOption : UInt32, pBuffer : Void*, pdwBufferLength : UInt32*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_session_option.call(this, dwOption, pBuffer, pdwBufferLength, dwReserved)
    end

  end

  @[Extern]
  record IInternetThreadSwitchVtbl,
    query_interface : Proc(IInternetThreadSwitch*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetThreadSwitch*, UInt32),
    release : Proc(IInternetThreadSwitch*, UInt32),
    prepare : Proc(IInternetThreadSwitch*, Win32cr::Foundation::HRESULT),
    continue : Proc(IInternetThreadSwitch*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetThreadSwitch, lpVtbl : IInternetThreadSwitchVtbl* do
    GUID = LibC::GUID.new(0x79eac9e8_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IInternetThreadSwitch*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetThreadSwitch*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetThreadSwitch*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def prepare(this : IInternetThreadSwitch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.prepare.call(this)
    end
    def continue(this : IInternetThreadSwitch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.continue.call(this)
    end

  end

  @[Extern]
  record IInternetPriorityVtbl,
    query_interface : Proc(IInternetPriority*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetPriority*, UInt32),
    release : Proc(IInternetPriority*, UInt32),
    set_priority : Proc(IInternetPriority*, Int32, Win32cr::Foundation::HRESULT),
    get_priority : Proc(IInternetPriority*, Int32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetPriority, lpVtbl : IInternetPriorityVtbl* do
    GUID = LibC::GUID.new(0x79eac9eb_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IInternetPriority*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetPriority*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetPriority*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_priority(this : IInternetPriority*, nPriority : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_priority.call(this, nPriority)
    end
    def get_priority(this : IInternetPriority*, pnPriority : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_priority.call(this, pnPriority)
    end

  end

  @[Extern]
  record IInternetProtocolInfoVtbl,
    query_interface : Proc(IInternetProtocolInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetProtocolInfo*, UInt32),
    release : Proc(IInternetProtocolInfo*, UInt32),
    parse_url : Proc(IInternetProtocolInfo*, Win32cr::Foundation::PWSTR, Win32cr::System::Com::Urlmon::PARSEACTION, UInt32, Win32cr::Foundation::PWSTR, UInt32, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    combine_url : Proc(IInternetProtocolInfo*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::PWSTR, UInt32, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    compare_url : Proc(IInternetProtocolInfo*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    query_info : Proc(IInternetProtocolInfo*, Win32cr::Foundation::PWSTR, Win32cr::System::Com::Urlmon::QUERYOPTION, UInt32, Void*, UInt32, UInt32*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetProtocolInfo, lpVtbl : IInternetProtocolInfoVtbl* do
    GUID = LibC::GUID.new(0x79eac9ec_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IInternetProtocolInfo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetProtocolInfo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetProtocolInfo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def parse_url(this : IInternetProtocolInfo*, pwzUrl : Win32cr::Foundation::PWSTR, parse_action : Win32cr::System::Com::Urlmon::PARSEACTION, dwParseFlags : UInt32, pwzResult : Win32cr::Foundation::PWSTR, cchResult : UInt32, pcchResult : UInt32*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.parse_url.call(this, pwzUrl, parse_action, dwParseFlags, pwzResult, cchResult, pcchResult, dwReserved)
    end
    def combine_url(this : IInternetProtocolInfo*, pwzBaseUrl : Win32cr::Foundation::PWSTR, pwzRelativeUrl : Win32cr::Foundation::PWSTR, dwCombineFlags : UInt32, pwzResult : Win32cr::Foundation::PWSTR, cchResult : UInt32, pcchResult : UInt32*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.combine_url.call(this, pwzBaseUrl, pwzRelativeUrl, dwCombineFlags, pwzResult, cchResult, pcchResult, dwReserved)
    end
    def compare_url(this : IInternetProtocolInfo*, pwzUrl1 : Win32cr::Foundation::PWSTR, pwzUrl2 : Win32cr::Foundation::PWSTR, dwCompareFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compare_url.call(this, pwzUrl1, pwzUrl2, dwCompareFlags)
    end
    def query_info(this : IInternetProtocolInfo*, pwzUrl : Win32cr::Foundation::PWSTR, ouery_option : Win32cr::System::Com::Urlmon::QUERYOPTION, dwQueryFlags : UInt32, pBuffer : Void*, cbBuffer : UInt32, pcbBuf : UInt32*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_info.call(this, pwzUrl, ouery_option, dwQueryFlags, pBuffer, cbBuffer, pcbBuf, dwReserved)
    end

  end

  @[Extern]
  record IInternetSecurityMgrSiteVtbl,
    query_interface : Proc(IInternetSecurityMgrSite*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetSecurityMgrSite*, UInt32),
    release : Proc(IInternetSecurityMgrSite*, UInt32),
    get_window : Proc(IInternetSecurityMgrSite*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    enable_modeless : Proc(IInternetSecurityMgrSite*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetSecurityMgrSite, lpVtbl : IInternetSecurityMgrSiteVtbl* do
    GUID = LibC::GUID.new(0x79eac9ed_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IInternetSecurityMgrSite*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetSecurityMgrSite*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetSecurityMgrSite*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IInternetSecurityMgrSite*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, phwnd)
    end
    def enable_modeless(this : IInternetSecurityMgrSite*, fEnable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_modeless.call(this, fEnable)
    end

  end

  @[Extern]
  record IInternetSecurityManagerVtbl,
    query_interface : Proc(IInternetSecurityManager*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetSecurityManager*, UInt32),
    release : Proc(IInternetSecurityManager*, UInt32),
    set_security_site : Proc(IInternetSecurityManager*, Void*, Win32cr::Foundation::HRESULT),
    get_security_site : Proc(IInternetSecurityManager*, Void**, Win32cr::Foundation::HRESULT),
    map_url_to_zone : Proc(IInternetSecurityManager*, Win32cr::Foundation::PWSTR, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    get_security_id : Proc(IInternetSecurityManager*, Win32cr::Foundation::PWSTR, UInt8*, UInt32*, LibC::UIntPtrT, Win32cr::Foundation::HRESULT),
    process_url_action : Proc(IInternetSecurityManager*, Win32cr::Foundation::PWSTR, UInt32, UInt8*, UInt32, UInt8*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    query_custom_policy : Proc(IInternetSecurityManager*, Win32cr::Foundation::PWSTR, LibC::GUID*, UInt8**, UInt32*, UInt8*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    set_zone_mapping : Proc(IInternetSecurityManager*, UInt32, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_zone_mappings : Proc(IInternetSecurityManager*, UInt32, Void**, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetSecurityManager, lpVtbl : IInternetSecurityManagerVtbl* do
    GUID = LibC::GUID.new(0x79eac9ee_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IInternetSecurityManager*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetSecurityManager*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetSecurityManager*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_security_site(this : IInternetSecurityManager*, pSite : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_security_site.call(this, pSite)
    end
    def get_security_site(this : IInternetSecurityManager*, ppSite : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_security_site.call(this, ppSite)
    end
    def map_url_to_zone(this : IInternetSecurityManager*, pwszUrl : Win32cr::Foundation::PWSTR, pdwZone : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.map_url_to_zone.call(this, pwszUrl, pdwZone, dwFlags)
    end
    def get_security_id(this : IInternetSecurityManager*, pwszUrl : Win32cr::Foundation::PWSTR, pbSecurityId : UInt8*, pcbSecurityId : UInt32*, dwReserved : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_security_id.call(this, pwszUrl, pbSecurityId, pcbSecurityId, dwReserved)
    end
    def process_url_action(this : IInternetSecurityManager*, pwszUrl : Win32cr::Foundation::PWSTR, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, pContext : UInt8*, cbContext : UInt32, dwFlags : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.process_url_action.call(this, pwszUrl, dwAction, pPolicy, cbPolicy, pContext, cbContext, dwFlags, dwReserved)
    end
    def query_custom_policy(this : IInternetSecurityManager*, pwszUrl : Win32cr::Foundation::PWSTR, guidKey : LibC::GUID*, ppPolicy : UInt8**, pcbPolicy : UInt32*, pContext : UInt8*, cbContext : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_custom_policy.call(this, pwszUrl, guidKey, ppPolicy, pcbPolicy, pContext, cbContext, dwReserved)
    end
    def set_zone_mapping(this : IInternetSecurityManager*, dwZone : UInt32, lpszPattern : Win32cr::Foundation::PWSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_zone_mapping.call(this, dwZone, lpszPattern, dwFlags)
    end
    def get_zone_mappings(this : IInternetSecurityManager*, dwZone : UInt32, ppenumString : Void**, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_mappings.call(this, dwZone, ppenumString, dwFlags)
    end

  end

  @[Extern]
  record IInternetSecurityManagerExVtbl,
    query_interface : Proc(IInternetSecurityManagerEx*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetSecurityManagerEx*, UInt32),
    release : Proc(IInternetSecurityManagerEx*, UInt32),
    set_security_site : Proc(IInternetSecurityManagerEx*, Void*, Win32cr::Foundation::HRESULT),
    get_security_site : Proc(IInternetSecurityManagerEx*, Void**, Win32cr::Foundation::HRESULT),
    map_url_to_zone : Proc(IInternetSecurityManagerEx*, Win32cr::Foundation::PWSTR, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    get_security_id : Proc(IInternetSecurityManagerEx*, Win32cr::Foundation::PWSTR, UInt8*, UInt32*, LibC::UIntPtrT, Win32cr::Foundation::HRESULT),
    process_url_action : Proc(IInternetSecurityManagerEx*, Win32cr::Foundation::PWSTR, UInt32, UInt8*, UInt32, UInt8*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    query_custom_policy : Proc(IInternetSecurityManagerEx*, Win32cr::Foundation::PWSTR, LibC::GUID*, UInt8**, UInt32*, UInt8*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    set_zone_mapping : Proc(IInternetSecurityManagerEx*, UInt32, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_zone_mappings : Proc(IInternetSecurityManagerEx*, UInt32, Void**, UInt32, Win32cr::Foundation::HRESULT),
    process_url_action_ex : Proc(IInternetSecurityManagerEx*, Win32cr::Foundation::PWSTR, UInt32, UInt8*, UInt32, UInt8*, UInt32, UInt32, UInt32, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetSecurityManagerEx, lpVtbl : IInternetSecurityManagerExVtbl* do
    GUID = LibC::GUID.new(0xf164edf1_u32, 0xcc7c_u16, 0x4f0d_u16, StaticArray[0x9a_u8, 0x94_u8, 0x34_u8, 0x22_u8, 0x26_u8, 0x25_u8, 0xc3_u8, 0x93_u8])
    def query_interface(this : IInternetSecurityManagerEx*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetSecurityManagerEx*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetSecurityManagerEx*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_security_site(this : IInternetSecurityManagerEx*, pSite : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_security_site.call(this, pSite)
    end
    def get_security_site(this : IInternetSecurityManagerEx*, ppSite : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_security_site.call(this, ppSite)
    end
    def map_url_to_zone(this : IInternetSecurityManagerEx*, pwszUrl : Win32cr::Foundation::PWSTR, pdwZone : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.map_url_to_zone.call(this, pwszUrl, pdwZone, dwFlags)
    end
    def get_security_id(this : IInternetSecurityManagerEx*, pwszUrl : Win32cr::Foundation::PWSTR, pbSecurityId : UInt8*, pcbSecurityId : UInt32*, dwReserved : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_security_id.call(this, pwszUrl, pbSecurityId, pcbSecurityId, dwReserved)
    end
    def process_url_action(this : IInternetSecurityManagerEx*, pwszUrl : Win32cr::Foundation::PWSTR, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, pContext : UInt8*, cbContext : UInt32, dwFlags : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.process_url_action.call(this, pwszUrl, dwAction, pPolicy, cbPolicy, pContext, cbContext, dwFlags, dwReserved)
    end
    def query_custom_policy(this : IInternetSecurityManagerEx*, pwszUrl : Win32cr::Foundation::PWSTR, guidKey : LibC::GUID*, ppPolicy : UInt8**, pcbPolicy : UInt32*, pContext : UInt8*, cbContext : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_custom_policy.call(this, pwszUrl, guidKey, ppPolicy, pcbPolicy, pContext, cbContext, dwReserved)
    end
    def set_zone_mapping(this : IInternetSecurityManagerEx*, dwZone : UInt32, lpszPattern : Win32cr::Foundation::PWSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_zone_mapping.call(this, dwZone, lpszPattern, dwFlags)
    end
    def get_zone_mappings(this : IInternetSecurityManagerEx*, dwZone : UInt32, ppenumString : Void**, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_mappings.call(this, dwZone, ppenumString, dwFlags)
    end
    def process_url_action_ex(this : IInternetSecurityManagerEx*, pwszUrl : Win32cr::Foundation::PWSTR, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, pContext : UInt8*, cbContext : UInt32, dwFlags : UInt32, dwReserved : UInt32, pdwOutFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.process_url_action_ex.call(this, pwszUrl, dwAction, pPolicy, cbPolicy, pContext, cbContext, dwFlags, dwReserved, pdwOutFlags)
    end

  end

  @[Extern]
  record IInternetSecurityManagerEx2Vtbl,
    query_interface : Proc(IInternetSecurityManagerEx2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetSecurityManagerEx2*, UInt32),
    release : Proc(IInternetSecurityManagerEx2*, UInt32),
    set_security_site : Proc(IInternetSecurityManagerEx2*, Void*, Win32cr::Foundation::HRESULT),
    get_security_site : Proc(IInternetSecurityManagerEx2*, Void**, Win32cr::Foundation::HRESULT),
    map_url_to_zone : Proc(IInternetSecurityManagerEx2*, Win32cr::Foundation::PWSTR, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    get_security_id : Proc(IInternetSecurityManagerEx2*, Win32cr::Foundation::PWSTR, UInt8*, UInt32*, LibC::UIntPtrT, Win32cr::Foundation::HRESULT),
    process_url_action : Proc(IInternetSecurityManagerEx2*, Win32cr::Foundation::PWSTR, UInt32, UInt8*, UInt32, UInt8*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    query_custom_policy : Proc(IInternetSecurityManagerEx2*, Win32cr::Foundation::PWSTR, LibC::GUID*, UInt8**, UInt32*, UInt8*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    set_zone_mapping : Proc(IInternetSecurityManagerEx2*, UInt32, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_zone_mappings : Proc(IInternetSecurityManagerEx2*, UInt32, Void**, UInt32, Win32cr::Foundation::HRESULT),
    process_url_action_ex : Proc(IInternetSecurityManagerEx2*, Win32cr::Foundation::PWSTR, UInt32, UInt8*, UInt32, UInt8*, UInt32, UInt32, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    map_url_to_zone_ex2 : Proc(IInternetSecurityManagerEx2*, Void*, UInt32*, UInt32, Win32cr::Foundation::PWSTR*, UInt32*, Win32cr::Foundation::HRESULT),
    process_url_action_ex2 : Proc(IInternetSecurityManagerEx2*, Void*, UInt32, UInt8*, UInt32, UInt8*, UInt32, UInt32, LibC::UIntPtrT, UInt32*, Win32cr::Foundation::HRESULT),
    get_security_id_ex2 : Proc(IInternetSecurityManagerEx2*, Void*, UInt8*, UInt32*, LibC::UIntPtrT, Win32cr::Foundation::HRESULT),
    query_custom_policy_ex2 : Proc(IInternetSecurityManagerEx2*, Void*, LibC::GUID*, UInt8**, UInt32*, UInt8*, UInt32, LibC::UIntPtrT, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetSecurityManagerEx2, lpVtbl : IInternetSecurityManagerEx2Vtbl* do
    GUID = LibC::GUID.new(0xf1e50292_u32, 0xa795_u16, 0x4117_u16, StaticArray[0x8e_u8, 0x9_u8, 0x2b_u8, 0x56_u8, 0xa_u8, 0x72_u8, 0xac_u8, 0x60_u8])
    def query_interface(this : IInternetSecurityManagerEx2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetSecurityManagerEx2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetSecurityManagerEx2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_security_site(this : IInternetSecurityManagerEx2*, pSite : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_security_site.call(this, pSite)
    end
    def get_security_site(this : IInternetSecurityManagerEx2*, ppSite : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_security_site.call(this, ppSite)
    end
    def map_url_to_zone(this : IInternetSecurityManagerEx2*, pwszUrl : Win32cr::Foundation::PWSTR, pdwZone : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.map_url_to_zone.call(this, pwszUrl, pdwZone, dwFlags)
    end
    def get_security_id(this : IInternetSecurityManagerEx2*, pwszUrl : Win32cr::Foundation::PWSTR, pbSecurityId : UInt8*, pcbSecurityId : UInt32*, dwReserved : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_security_id.call(this, pwszUrl, pbSecurityId, pcbSecurityId, dwReserved)
    end
    def process_url_action(this : IInternetSecurityManagerEx2*, pwszUrl : Win32cr::Foundation::PWSTR, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, pContext : UInt8*, cbContext : UInt32, dwFlags : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.process_url_action.call(this, pwszUrl, dwAction, pPolicy, cbPolicy, pContext, cbContext, dwFlags, dwReserved)
    end
    def query_custom_policy(this : IInternetSecurityManagerEx2*, pwszUrl : Win32cr::Foundation::PWSTR, guidKey : LibC::GUID*, ppPolicy : UInt8**, pcbPolicy : UInt32*, pContext : UInt8*, cbContext : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_custom_policy.call(this, pwszUrl, guidKey, ppPolicy, pcbPolicy, pContext, cbContext, dwReserved)
    end
    def set_zone_mapping(this : IInternetSecurityManagerEx2*, dwZone : UInt32, lpszPattern : Win32cr::Foundation::PWSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_zone_mapping.call(this, dwZone, lpszPattern, dwFlags)
    end
    def get_zone_mappings(this : IInternetSecurityManagerEx2*, dwZone : UInt32, ppenumString : Void**, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_mappings.call(this, dwZone, ppenumString, dwFlags)
    end
    def process_url_action_ex(this : IInternetSecurityManagerEx2*, pwszUrl : Win32cr::Foundation::PWSTR, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, pContext : UInt8*, cbContext : UInt32, dwFlags : UInt32, dwReserved : UInt32, pdwOutFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.process_url_action_ex.call(this, pwszUrl, dwAction, pPolicy, cbPolicy, pContext, cbContext, dwFlags, dwReserved, pdwOutFlags)
    end
    def map_url_to_zone_ex2(this : IInternetSecurityManagerEx2*, pUri : Void*, pdwZone : UInt32*, dwFlags : UInt32, ppwszMappedUrl : Win32cr::Foundation::PWSTR*, pdwOutFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.map_url_to_zone_ex2.call(this, pUri, pdwZone, dwFlags, ppwszMappedUrl, pdwOutFlags)
    end
    def process_url_action_ex2(this : IInternetSecurityManagerEx2*, pUri : Void*, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, pContext : UInt8*, cbContext : UInt32, dwFlags : UInt32, dwReserved : LibC::UIntPtrT, pdwOutFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.process_url_action_ex2.call(this, pUri, dwAction, pPolicy, cbPolicy, pContext, cbContext, dwFlags, dwReserved, pdwOutFlags)
    end
    def get_security_id_ex2(this : IInternetSecurityManagerEx2*, pUri : Void*, pbSecurityId : UInt8*, pcbSecurityId : UInt32*, dwReserved : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_security_id_ex2.call(this, pUri, pbSecurityId, pcbSecurityId, dwReserved)
    end
    def query_custom_policy_ex2(this : IInternetSecurityManagerEx2*, pUri : Void*, guidKey : LibC::GUID*, ppPolicy : UInt8**, pcbPolicy : UInt32*, pContext : UInt8*, cbContext : UInt32, dwReserved : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_custom_policy_ex2.call(this, pUri, guidKey, ppPolicy, pcbPolicy, pContext, cbContext, dwReserved)
    end

  end

  @[Extern]
  record IZoneIdentifierVtbl,
    query_interface : Proc(IZoneIdentifier*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IZoneIdentifier*, UInt32),
    release : Proc(IZoneIdentifier*, UInt32),
    get_id : Proc(IZoneIdentifier*, UInt32*, Win32cr::Foundation::HRESULT),
    set_id : Proc(IZoneIdentifier*, UInt32, Win32cr::Foundation::HRESULT),
    remove : Proc(IZoneIdentifier*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IZoneIdentifier, lpVtbl : IZoneIdentifierVtbl* do
    GUID = LibC::GUID.new(0xcd45f185_u32, 0x1b21_u16, 0x48e2_u16, StaticArray[0x96_u8, 0x7b_u8, 0xea_u8, 0xd7_u8, 0x43_u8, 0xa8_u8, 0x91_u8, 0x4e_u8])
    def query_interface(this : IZoneIdentifier*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IZoneIdentifier*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IZoneIdentifier*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_id(this : IZoneIdentifier*, pdwZone : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_id.call(this, pdwZone)
    end
    def set_id(this : IZoneIdentifier*, dwZone : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_id.call(this, dwZone)
    end
    def remove(this : IZoneIdentifier*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove.call(this)
    end

  end

  @[Extern]
  record IZoneIdentifier2Vtbl,
    query_interface : Proc(IZoneIdentifier2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IZoneIdentifier2*, UInt32),
    release : Proc(IZoneIdentifier2*, UInt32),
    get_id : Proc(IZoneIdentifier2*, UInt32*, Win32cr::Foundation::HRESULT),
    set_id : Proc(IZoneIdentifier2*, UInt32, Win32cr::Foundation::HRESULT),
    remove : Proc(IZoneIdentifier2*, Win32cr::Foundation::HRESULT),
    get_last_writer_package_family_name : Proc(IZoneIdentifier2*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    set_last_writer_package_family_name : Proc(IZoneIdentifier2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    remove_last_writer_package_family_name : Proc(IZoneIdentifier2*, Win32cr::Foundation::HRESULT),
    get_app_zone_id : Proc(IZoneIdentifier2*, UInt32*, Win32cr::Foundation::HRESULT),
    set_app_zone_id : Proc(IZoneIdentifier2*, UInt32, Win32cr::Foundation::HRESULT),
    remove_app_zone_id : Proc(IZoneIdentifier2*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IZoneIdentifier2, lpVtbl : IZoneIdentifier2Vtbl* do
    GUID = LibC::GUID.new(0xeb5e760c_u32, 0x9ef_u16, 0x45c0_u16, StaticArray[0xb5_u8, 0x10_u8, 0x70_u8, 0x83_u8, 0xc_u8, 0xe3_u8, 0x1e_u8, 0x6a_u8])
    def query_interface(this : IZoneIdentifier2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IZoneIdentifier2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IZoneIdentifier2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_id(this : IZoneIdentifier2*, pdwZone : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_id.call(this, pdwZone)
    end
    def set_id(this : IZoneIdentifier2*, dwZone : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_id.call(this, dwZone)
    end
    def remove(this : IZoneIdentifier2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove.call(this)
    end
    def get_last_writer_package_family_name(this : IZoneIdentifier2*, packageFamilyName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_last_writer_package_family_name.call(this, packageFamilyName)
    end
    def set_last_writer_package_family_name(this : IZoneIdentifier2*, packageFamilyName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_last_writer_package_family_name.call(this, packageFamilyName)
    end
    def remove_last_writer_package_family_name(this : IZoneIdentifier2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_last_writer_package_family_name.call(this)
    end
    def get_app_zone_id(this : IZoneIdentifier2*, zone : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_app_zone_id.call(this, zone)
    end
    def set_app_zone_id(this : IZoneIdentifier2*, zone : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_app_zone_id.call(this, zone)
    end
    def remove_app_zone_id(this : IZoneIdentifier2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_app_zone_id.call(this)
    end

  end

  @[Extern]
  record IInternetHostSecurityManagerVtbl,
    query_interface : Proc(IInternetHostSecurityManager*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetHostSecurityManager*, UInt32),
    release : Proc(IInternetHostSecurityManager*, UInt32),
    get_security_id : Proc(IInternetHostSecurityManager*, UInt8*, UInt32*, LibC::UIntPtrT, Win32cr::Foundation::HRESULT),
    process_url_action : Proc(IInternetHostSecurityManager*, UInt32, UInt8*, UInt32, UInt8*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    query_custom_policy : Proc(IInternetHostSecurityManager*, LibC::GUID*, UInt8**, UInt32*, UInt8*, UInt32, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetHostSecurityManager, lpVtbl : IInternetHostSecurityManagerVtbl* do
    GUID = LibC::GUID.new(0x3af280b6_u32, 0xcb3f_u16, 0x11d0_u16, StaticArray[0x89_u8, 0x1e_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0xbf_u8, 0xc4_u8])
    def query_interface(this : IInternetHostSecurityManager*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetHostSecurityManager*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetHostSecurityManager*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_security_id(this : IInternetHostSecurityManager*, pbSecurityId : UInt8*, pcbSecurityId : UInt32*, dwReserved : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_security_id.call(this, pbSecurityId, pcbSecurityId, dwReserved)
    end
    def process_url_action(this : IInternetHostSecurityManager*, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, pContext : UInt8*, cbContext : UInt32, dwFlags : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.process_url_action.call(this, dwAction, pPolicy, cbPolicy, pContext, cbContext, dwFlags, dwReserved)
    end
    def query_custom_policy(this : IInternetHostSecurityManager*, guidKey : LibC::GUID*, ppPolicy : UInt8**, pcbPolicy : UInt32*, pContext : UInt8*, cbContext : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_custom_policy.call(this, guidKey, ppPolicy, pcbPolicy, pContext, cbContext, dwReserved)
    end

  end

  @[Extern]
  record IInternetZoneManagerVtbl,
    query_interface : Proc(IInternetZoneManager*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetZoneManager*, UInt32),
    release : Proc(IInternetZoneManager*, UInt32),
    get_zone_attributes : Proc(IInternetZoneManager*, UInt32, Win32cr::System::Com::Urlmon::ZONEATTRIBUTES*, Win32cr::Foundation::HRESULT),
    set_zone_attributes : Proc(IInternetZoneManager*, UInt32, Win32cr::System::Com::Urlmon::ZONEATTRIBUTES*, Win32cr::Foundation::HRESULT),
    get_zone_custom_policy : Proc(IInternetZoneManager*, UInt32, LibC::GUID*, UInt8**, UInt32*, Win32cr::System::Com::Urlmon::URLZONEREG, Win32cr::Foundation::HRESULT),
    set_zone_custom_policy : Proc(IInternetZoneManager*, UInt32, LibC::GUID*, UInt8*, UInt32, Win32cr::System::Com::Urlmon::URLZONEREG, Win32cr::Foundation::HRESULT),
    get_zone_action_policy : Proc(IInternetZoneManager*, UInt32, UInt32, UInt8*, UInt32, Win32cr::System::Com::Urlmon::URLZONEREG, Win32cr::Foundation::HRESULT),
    set_zone_action_policy : Proc(IInternetZoneManager*, UInt32, UInt32, UInt8*, UInt32, Win32cr::System::Com::Urlmon::URLZONEREG, Win32cr::Foundation::HRESULT),
    prompt_action : Proc(IInternetZoneManager*, UInt32, Win32cr::Foundation::HWND, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    log_action : Proc(IInternetZoneManager*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    create_zone_enumerator : Proc(IInternetZoneManager*, UInt32*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    get_zone_at : Proc(IInternetZoneManager*, UInt32, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    destroy_zone_enumerator : Proc(IInternetZoneManager*, UInt32, Win32cr::Foundation::HRESULT),
    copy_template_policies_to_zone : Proc(IInternetZoneManager*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetZoneManager, lpVtbl : IInternetZoneManagerVtbl* do
    GUID = LibC::GUID.new(0x79eac9ef_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IInternetZoneManager*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetZoneManager*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetZoneManager*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_zone_attributes(this : IInternetZoneManager*, dwZone : UInt32, pZoneAttributes : Win32cr::System::Com::Urlmon::ZONEATTRIBUTES*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_attributes.call(this, dwZone, pZoneAttributes)
    end
    def set_zone_attributes(this : IInternetZoneManager*, dwZone : UInt32, pZoneAttributes : Win32cr::System::Com::Urlmon::ZONEATTRIBUTES*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_zone_attributes.call(this, dwZone, pZoneAttributes)
    end
    def get_zone_custom_policy(this : IInternetZoneManager*, dwZone : UInt32, guidKey : LibC::GUID*, ppPolicy : UInt8**, pcbPolicy : UInt32*, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_custom_policy.call(this, dwZone, guidKey, ppPolicy, pcbPolicy, urlZoneReg)
    end
    def set_zone_custom_policy(this : IInternetZoneManager*, dwZone : UInt32, guidKey : LibC::GUID*, pPolicy : UInt8*, cbPolicy : UInt32, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_zone_custom_policy.call(this, dwZone, guidKey, pPolicy, cbPolicy, urlZoneReg)
    end
    def get_zone_action_policy(this : IInternetZoneManager*, dwZone : UInt32, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_action_policy.call(this, dwZone, dwAction, pPolicy, cbPolicy, urlZoneReg)
    end
    def set_zone_action_policy(this : IInternetZoneManager*, dwZone : UInt32, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_zone_action_policy.call(this, dwZone, dwAction, pPolicy, cbPolicy, urlZoneReg)
    end
    def prompt_action(this : IInternetZoneManager*, dwAction : UInt32, hwndParent : Win32cr::Foundation::HWND, pwszUrl : Win32cr::Foundation::PWSTR, pwszText : Win32cr::Foundation::PWSTR, dwPromptFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.prompt_action.call(this, dwAction, hwndParent, pwszUrl, pwszText, dwPromptFlags)
    end
    def log_action(this : IInternetZoneManager*, dwAction : UInt32, pwszUrl : Win32cr::Foundation::PWSTR, pwszText : Win32cr::Foundation::PWSTR, dwLogFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.log_action.call(this, dwAction, pwszUrl, pwszText, dwLogFlags)
    end
    def create_zone_enumerator(this : IInternetZoneManager*, pdwEnum : UInt32*, pdwCount : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_zone_enumerator.call(this, pdwEnum, pdwCount, dwFlags)
    end
    def get_zone_at(this : IInternetZoneManager*, dwEnum : UInt32, dwIndex : UInt32, pdwZone : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_at.call(this, dwEnum, dwIndex, pdwZone)
    end
    def destroy_zone_enumerator(this : IInternetZoneManager*, dwEnum : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.destroy_zone_enumerator.call(this, dwEnum)
    end
    def copy_template_policies_to_zone(this : IInternetZoneManager*, dwTemplate : UInt32, dwZone : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_template_policies_to_zone.call(this, dwTemplate, dwZone, dwReserved)
    end

  end

  @[Extern]
  record IInternetZoneManagerExVtbl,
    query_interface : Proc(IInternetZoneManagerEx*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetZoneManagerEx*, UInt32),
    release : Proc(IInternetZoneManagerEx*, UInt32),
    get_zone_attributes : Proc(IInternetZoneManagerEx*, UInt32, Win32cr::System::Com::Urlmon::ZONEATTRIBUTES*, Win32cr::Foundation::HRESULT),
    set_zone_attributes : Proc(IInternetZoneManagerEx*, UInt32, Win32cr::System::Com::Urlmon::ZONEATTRIBUTES*, Win32cr::Foundation::HRESULT),
    get_zone_custom_policy : Proc(IInternetZoneManagerEx*, UInt32, LibC::GUID*, UInt8**, UInt32*, Win32cr::System::Com::Urlmon::URLZONEREG, Win32cr::Foundation::HRESULT),
    set_zone_custom_policy : Proc(IInternetZoneManagerEx*, UInt32, LibC::GUID*, UInt8*, UInt32, Win32cr::System::Com::Urlmon::URLZONEREG, Win32cr::Foundation::HRESULT),
    get_zone_action_policy : Proc(IInternetZoneManagerEx*, UInt32, UInt32, UInt8*, UInt32, Win32cr::System::Com::Urlmon::URLZONEREG, Win32cr::Foundation::HRESULT),
    set_zone_action_policy : Proc(IInternetZoneManagerEx*, UInt32, UInt32, UInt8*, UInt32, Win32cr::System::Com::Urlmon::URLZONEREG, Win32cr::Foundation::HRESULT),
    prompt_action : Proc(IInternetZoneManagerEx*, UInt32, Win32cr::Foundation::HWND, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    log_action : Proc(IInternetZoneManagerEx*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    create_zone_enumerator : Proc(IInternetZoneManagerEx*, UInt32*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    get_zone_at : Proc(IInternetZoneManagerEx*, UInt32, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    destroy_zone_enumerator : Proc(IInternetZoneManagerEx*, UInt32, Win32cr::Foundation::HRESULT),
    copy_template_policies_to_zone : Proc(IInternetZoneManagerEx*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_zone_action_policy_ex : Proc(IInternetZoneManagerEx*, UInt32, UInt32, UInt8*, UInt32, Win32cr::System::Com::Urlmon::URLZONEREG, UInt32, Win32cr::Foundation::HRESULT),
    set_zone_action_policy_ex : Proc(IInternetZoneManagerEx*, UInt32, UInt32, UInt8*, UInt32, Win32cr::System::Com::Urlmon::URLZONEREG, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetZoneManagerEx, lpVtbl : IInternetZoneManagerExVtbl* do
    GUID = LibC::GUID.new(0xa4c23339_u32, 0x8e06_u16, 0x431e_u16, StaticArray[0x9b_u8, 0xf4_u8, 0x7e_u8, 0x71_u8, 0x1c_u8, 0x8_u8, 0x56_u8, 0x48_u8])
    def query_interface(this : IInternetZoneManagerEx*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetZoneManagerEx*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetZoneManagerEx*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_zone_attributes(this : IInternetZoneManagerEx*, dwZone : UInt32, pZoneAttributes : Win32cr::System::Com::Urlmon::ZONEATTRIBUTES*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_attributes.call(this, dwZone, pZoneAttributes)
    end
    def set_zone_attributes(this : IInternetZoneManagerEx*, dwZone : UInt32, pZoneAttributes : Win32cr::System::Com::Urlmon::ZONEATTRIBUTES*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_zone_attributes.call(this, dwZone, pZoneAttributes)
    end
    def get_zone_custom_policy(this : IInternetZoneManagerEx*, dwZone : UInt32, guidKey : LibC::GUID*, ppPolicy : UInt8**, pcbPolicy : UInt32*, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_custom_policy.call(this, dwZone, guidKey, ppPolicy, pcbPolicy, urlZoneReg)
    end
    def set_zone_custom_policy(this : IInternetZoneManagerEx*, dwZone : UInt32, guidKey : LibC::GUID*, pPolicy : UInt8*, cbPolicy : UInt32, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_zone_custom_policy.call(this, dwZone, guidKey, pPolicy, cbPolicy, urlZoneReg)
    end
    def get_zone_action_policy(this : IInternetZoneManagerEx*, dwZone : UInt32, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_action_policy.call(this, dwZone, dwAction, pPolicy, cbPolicy, urlZoneReg)
    end
    def set_zone_action_policy(this : IInternetZoneManagerEx*, dwZone : UInt32, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_zone_action_policy.call(this, dwZone, dwAction, pPolicy, cbPolicy, urlZoneReg)
    end
    def prompt_action(this : IInternetZoneManagerEx*, dwAction : UInt32, hwndParent : Win32cr::Foundation::HWND, pwszUrl : Win32cr::Foundation::PWSTR, pwszText : Win32cr::Foundation::PWSTR, dwPromptFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.prompt_action.call(this, dwAction, hwndParent, pwszUrl, pwszText, dwPromptFlags)
    end
    def log_action(this : IInternetZoneManagerEx*, dwAction : UInt32, pwszUrl : Win32cr::Foundation::PWSTR, pwszText : Win32cr::Foundation::PWSTR, dwLogFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.log_action.call(this, dwAction, pwszUrl, pwszText, dwLogFlags)
    end
    def create_zone_enumerator(this : IInternetZoneManagerEx*, pdwEnum : UInt32*, pdwCount : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_zone_enumerator.call(this, pdwEnum, pdwCount, dwFlags)
    end
    def get_zone_at(this : IInternetZoneManagerEx*, dwEnum : UInt32, dwIndex : UInt32, pdwZone : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_at.call(this, dwEnum, dwIndex, pdwZone)
    end
    def destroy_zone_enumerator(this : IInternetZoneManagerEx*, dwEnum : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.destroy_zone_enumerator.call(this, dwEnum)
    end
    def copy_template_policies_to_zone(this : IInternetZoneManagerEx*, dwTemplate : UInt32, dwZone : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_template_policies_to_zone.call(this, dwTemplate, dwZone, dwReserved)
    end
    def get_zone_action_policy_ex(this : IInternetZoneManagerEx*, dwZone : UInt32, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_action_policy_ex.call(this, dwZone, dwAction, pPolicy, cbPolicy, urlZoneReg, dwFlags)
    end
    def set_zone_action_policy_ex(this : IInternetZoneManagerEx*, dwZone : UInt32, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_zone_action_policy_ex.call(this, dwZone, dwAction, pPolicy, cbPolicy, urlZoneReg, dwFlags)
    end

  end

  @[Extern]
  record IInternetZoneManagerEx2Vtbl,
    query_interface : Proc(IInternetZoneManagerEx2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInternetZoneManagerEx2*, UInt32),
    release : Proc(IInternetZoneManagerEx2*, UInt32),
    get_zone_attributes : Proc(IInternetZoneManagerEx2*, UInt32, Win32cr::System::Com::Urlmon::ZONEATTRIBUTES*, Win32cr::Foundation::HRESULT),
    set_zone_attributes : Proc(IInternetZoneManagerEx2*, UInt32, Win32cr::System::Com::Urlmon::ZONEATTRIBUTES*, Win32cr::Foundation::HRESULT),
    get_zone_custom_policy : Proc(IInternetZoneManagerEx2*, UInt32, LibC::GUID*, UInt8**, UInt32*, Win32cr::System::Com::Urlmon::URLZONEREG, Win32cr::Foundation::HRESULT),
    set_zone_custom_policy : Proc(IInternetZoneManagerEx2*, UInt32, LibC::GUID*, UInt8*, UInt32, Win32cr::System::Com::Urlmon::URLZONEREG, Win32cr::Foundation::HRESULT),
    get_zone_action_policy : Proc(IInternetZoneManagerEx2*, UInt32, UInt32, UInt8*, UInt32, Win32cr::System::Com::Urlmon::URLZONEREG, Win32cr::Foundation::HRESULT),
    set_zone_action_policy : Proc(IInternetZoneManagerEx2*, UInt32, UInt32, UInt8*, UInt32, Win32cr::System::Com::Urlmon::URLZONEREG, Win32cr::Foundation::HRESULT),
    prompt_action : Proc(IInternetZoneManagerEx2*, UInt32, Win32cr::Foundation::HWND, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    log_action : Proc(IInternetZoneManagerEx2*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    create_zone_enumerator : Proc(IInternetZoneManagerEx2*, UInt32*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    get_zone_at : Proc(IInternetZoneManagerEx2*, UInt32, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    destroy_zone_enumerator : Proc(IInternetZoneManagerEx2*, UInt32, Win32cr::Foundation::HRESULT),
    copy_template_policies_to_zone : Proc(IInternetZoneManagerEx2*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_zone_action_policy_ex : Proc(IInternetZoneManagerEx2*, UInt32, UInt32, UInt8*, UInt32, Win32cr::System::Com::Urlmon::URLZONEREG, UInt32, Win32cr::Foundation::HRESULT),
    set_zone_action_policy_ex : Proc(IInternetZoneManagerEx2*, UInt32, UInt32, UInt8*, UInt32, Win32cr::System::Com::Urlmon::URLZONEREG, UInt32, Win32cr::Foundation::HRESULT),
    get_zone_attributes_ex : Proc(IInternetZoneManagerEx2*, UInt32, Win32cr::System::Com::Urlmon::ZONEATTRIBUTES*, UInt32, Win32cr::Foundation::HRESULT),
    get_zone_security_state : Proc(IInternetZoneManagerEx2*, UInt32, Win32cr::Foundation::BOOL, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_ie_security_state : Proc(IInternetZoneManagerEx2*, Win32cr::Foundation::BOOL, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    fix_unsecure_settings : Proc(IInternetZoneManagerEx2*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInternetZoneManagerEx2, lpVtbl : IInternetZoneManagerEx2Vtbl* do
    GUID = LibC::GUID.new(0xedc17559_u32, 0xdd5d_u16, 0x4846_u16, StaticArray[0x8e_u8, 0xef_u8, 0x8b_u8, 0xec_u8, 0xba_u8, 0x5a_u8, 0x4a_u8, 0xbf_u8])
    def query_interface(this : IInternetZoneManagerEx2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInternetZoneManagerEx2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInternetZoneManagerEx2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_zone_attributes(this : IInternetZoneManagerEx2*, dwZone : UInt32, pZoneAttributes : Win32cr::System::Com::Urlmon::ZONEATTRIBUTES*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_attributes.call(this, dwZone, pZoneAttributes)
    end
    def set_zone_attributes(this : IInternetZoneManagerEx2*, dwZone : UInt32, pZoneAttributes : Win32cr::System::Com::Urlmon::ZONEATTRIBUTES*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_zone_attributes.call(this, dwZone, pZoneAttributes)
    end
    def get_zone_custom_policy(this : IInternetZoneManagerEx2*, dwZone : UInt32, guidKey : LibC::GUID*, ppPolicy : UInt8**, pcbPolicy : UInt32*, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_custom_policy.call(this, dwZone, guidKey, ppPolicy, pcbPolicy, urlZoneReg)
    end
    def set_zone_custom_policy(this : IInternetZoneManagerEx2*, dwZone : UInt32, guidKey : LibC::GUID*, pPolicy : UInt8*, cbPolicy : UInt32, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_zone_custom_policy.call(this, dwZone, guidKey, pPolicy, cbPolicy, urlZoneReg)
    end
    def get_zone_action_policy(this : IInternetZoneManagerEx2*, dwZone : UInt32, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_action_policy.call(this, dwZone, dwAction, pPolicy, cbPolicy, urlZoneReg)
    end
    def set_zone_action_policy(this : IInternetZoneManagerEx2*, dwZone : UInt32, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_zone_action_policy.call(this, dwZone, dwAction, pPolicy, cbPolicy, urlZoneReg)
    end
    def prompt_action(this : IInternetZoneManagerEx2*, dwAction : UInt32, hwndParent : Win32cr::Foundation::HWND, pwszUrl : Win32cr::Foundation::PWSTR, pwszText : Win32cr::Foundation::PWSTR, dwPromptFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.prompt_action.call(this, dwAction, hwndParent, pwszUrl, pwszText, dwPromptFlags)
    end
    def log_action(this : IInternetZoneManagerEx2*, dwAction : UInt32, pwszUrl : Win32cr::Foundation::PWSTR, pwszText : Win32cr::Foundation::PWSTR, dwLogFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.log_action.call(this, dwAction, pwszUrl, pwszText, dwLogFlags)
    end
    def create_zone_enumerator(this : IInternetZoneManagerEx2*, pdwEnum : UInt32*, pdwCount : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_zone_enumerator.call(this, pdwEnum, pdwCount, dwFlags)
    end
    def get_zone_at(this : IInternetZoneManagerEx2*, dwEnum : UInt32, dwIndex : UInt32, pdwZone : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_at.call(this, dwEnum, dwIndex, pdwZone)
    end
    def destroy_zone_enumerator(this : IInternetZoneManagerEx2*, dwEnum : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.destroy_zone_enumerator.call(this, dwEnum)
    end
    def copy_template_policies_to_zone(this : IInternetZoneManagerEx2*, dwTemplate : UInt32, dwZone : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_template_policies_to_zone.call(this, dwTemplate, dwZone, dwReserved)
    end
    def get_zone_action_policy_ex(this : IInternetZoneManagerEx2*, dwZone : UInt32, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_action_policy_ex.call(this, dwZone, dwAction, pPolicy, cbPolicy, urlZoneReg, dwFlags)
    end
    def set_zone_action_policy_ex(this : IInternetZoneManagerEx2*, dwZone : UInt32, dwAction : UInt32, pPolicy : UInt8*, cbPolicy : UInt32, urlZoneReg : Win32cr::System::Com::Urlmon::URLZONEREG, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_zone_action_policy_ex.call(this, dwZone, dwAction, pPolicy, cbPolicy, urlZoneReg, dwFlags)
    end
    def get_zone_attributes_ex(this : IInternetZoneManagerEx2*, dwZone : UInt32, pZoneAttributes : Win32cr::System::Com::Urlmon::ZONEATTRIBUTES*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_attributes_ex.call(this, dwZone, pZoneAttributes, dwFlags)
    end
    def get_zone_security_state(this : IInternetZoneManagerEx2*, dwZoneIndex : UInt32, fRespectPolicy : Win32cr::Foundation::BOOL, pdwState : UInt32*, pfPolicyEncountered : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_zone_security_state.call(this, dwZoneIndex, fRespectPolicy, pdwState, pfPolicyEncountered)
    end
    def get_ie_security_state(this : IInternetZoneManagerEx2*, fRespectPolicy : Win32cr::Foundation::BOOL, pdwState : UInt32*, pfPolicyEncountered : Win32cr::Foundation::BOOL*, fNoCache : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ie_security_state.call(this, fRespectPolicy, pdwState, pfPolicyEncountered, fNoCache)
    end
    def fix_unsecure_settings(this : IInternetZoneManagerEx2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.fix_unsecure_settings.call(this)
    end

  end

  @[Extern]
  record ISoftDistExtVtbl,
    query_interface : Proc(ISoftDistExt*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISoftDistExt*, UInt32),
    release : Proc(ISoftDistExt*, UInt32),
    process_soft_dist : Proc(ISoftDistExt*, Win32cr::Foundation::PWSTR, Void*, Win32cr::System::Com::Urlmon::SOFTDISTINFO*, Win32cr::Foundation::HRESULT),
    get_first_code_base : Proc(ISoftDistExt*, Win32cr::Foundation::PWSTR*, UInt32*, Win32cr::Foundation::HRESULT),
    get_next_code_base : Proc(ISoftDistExt*, Win32cr::Foundation::PWSTR*, UInt32*, Win32cr::Foundation::HRESULT),
    async_install_distribution_unit : Proc(ISoftDistExt*, Void*, Void*, UInt32, Win32cr::System::Com::Urlmon::CODEBASEHOLD*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISoftDistExt, lpVtbl : ISoftDistExtVtbl* do
    GUID = LibC::GUID.new(0xb15b8dc1_u32, 0xc7e1_u16, 0x11d0_u16, StaticArray[0x86_u8, 0x80_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xcb_u8, 0x71_u8])
    def query_interface(this : ISoftDistExt*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISoftDistExt*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISoftDistExt*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def process_soft_dist(this : ISoftDistExt*, szCDFURL : Win32cr::Foundation::PWSTR, pSoftDistElement : Void*, lpsdi : Win32cr::System::Com::Urlmon::SOFTDISTINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.process_soft_dist.call(this, szCDFURL, pSoftDistElement, lpsdi)
    end
    def get_first_code_base(this : ISoftDistExt*, szCodeBase : Win32cr::Foundation::PWSTR*, dwMaxSize : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_first_code_base.call(this, szCodeBase, dwMaxSize)
    end
    def get_next_code_base(this : ISoftDistExt*, szCodeBase : Win32cr::Foundation::PWSTR*, dwMaxSize : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_next_code_base.call(this, szCodeBase, dwMaxSize)
    end
    def async_install_distribution_unit(this : ISoftDistExt*, pbc : Void*, pvReserved : Void*, flags : UInt32, lpcbh : Win32cr::System::Com::Urlmon::CODEBASEHOLD*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.async_install_distribution_unit.call(this, pbc, pvReserved, flags, lpcbh)
    end

  end

  @[Extern]
  record ICatalogFileInfoVtbl,
    query_interface : Proc(ICatalogFileInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICatalogFileInfo*, UInt32),
    release : Proc(ICatalogFileInfo*, UInt32),
    get_catalog_file : Proc(ICatalogFileInfo*, Win32cr::Foundation::PSTR*, Win32cr::Foundation::HRESULT),
    get_java_trust : Proc(ICatalogFileInfo*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICatalogFileInfo, lpVtbl : ICatalogFileInfoVtbl* do
    GUID = LibC::GUID.new(0x711c7600_u32, 0x6b48_u16, 0x11d1_u16, StaticArray[0xb4_u8, 0x3_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xb9_u8, 0x2a_u8, 0xf1_u8])
    def query_interface(this : ICatalogFileInfo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICatalogFileInfo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICatalogFileInfo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_catalog_file(this : ICatalogFileInfo*, ppszCatalogFile : Win32cr::Foundation::PSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_catalog_file.call(this, ppszCatalogFile)
    end
    def get_java_trust(this : ICatalogFileInfo*, ppJavaTrust : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_java_trust.call(this, ppJavaTrust)
    end

  end

  @[Extern]
  record IDataFilterVtbl,
    query_interface : Proc(IDataFilter*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDataFilter*, UInt32),
    release : Proc(IDataFilter*, UInt32),
    do_encode : Proc(IDataFilter*, UInt32, Int32, UInt8*, Int32, UInt8*, Int32, Int32*, Int32*, UInt32, Win32cr::Foundation::HRESULT),
    do_decode : Proc(IDataFilter*, UInt32, Int32, UInt8*, Int32, UInt8*, Int32, Int32*, Int32*, UInt32, Win32cr::Foundation::HRESULT),
    set_encoding_level : Proc(IDataFilter*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDataFilter, lpVtbl : IDataFilterVtbl* do
    GUID = LibC::GUID.new(0x69d14c80_u32, 0xc18e_u16, 0x11d0_u16, StaticArray[0xa9_u8, 0xce_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0x94_u8, 0x23_u8, 0x11_u8])
    def query_interface(this : IDataFilter*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDataFilter*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDataFilter*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def do_encode(this : IDataFilter*, dwFlags : UInt32, lInBufferSize : Int32, pbInBuffer : UInt8*, lOutBufferSize : Int32, pbOutBuffer : UInt8*, lInBytesAvailable : Int32, plInBytesRead : Int32*, plOutBytesWritten : Int32*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.do_encode.call(this, dwFlags, lInBufferSize, pbInBuffer, lOutBufferSize, pbOutBuffer, lInBytesAvailable, plInBytesRead, plOutBytesWritten, dwReserved)
    end
    def do_decode(this : IDataFilter*, dwFlags : UInt32, lInBufferSize : Int32, pbInBuffer : UInt8*, lOutBufferSize : Int32, pbOutBuffer : UInt8*, lInBytesAvailable : Int32, plInBytesRead : Int32*, plOutBytesWritten : Int32*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.do_decode.call(this, dwFlags, lInBufferSize, pbInBuffer, lOutBufferSize, pbOutBuffer, lInBytesAvailable, plInBytesRead, plOutBytesWritten, dwReserved)
    end
    def set_encoding_level(this : IDataFilter*, dwEncLevel : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_encoding_level.call(this, dwEncLevel)
    end

  end

  @[Extern]
  record IEncodingFilterFactoryVtbl,
    query_interface : Proc(IEncodingFilterFactory*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEncodingFilterFactory*, UInt32),
    release : Proc(IEncodingFilterFactory*, UInt32),
    find_best_filter : Proc(IEncodingFilterFactory*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::System::Com::Urlmon::DATAINFO, Void**, Win32cr::Foundation::HRESULT),
    get_default_filter : Proc(IEncodingFilterFactory*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEncodingFilterFactory, lpVtbl : IEncodingFilterFactoryVtbl* do
    GUID = LibC::GUID.new(0x70bdde00_u32, 0xc18e_u16, 0x11d0_u16, StaticArray[0xa9_u8, 0xce_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0x94_u8, 0x23_u8, 0x11_u8])
    def query_interface(this : IEncodingFilterFactory*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEncodingFilterFactory*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEncodingFilterFactory*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def find_best_filter(this : IEncodingFilterFactory*, pwzCodeIn : Win32cr::Foundation::PWSTR, pwzCodeOut : Win32cr::Foundation::PWSTR, info : Win32cr::System::Com::Urlmon::DATAINFO, ppDF : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_best_filter.call(this, pwzCodeIn, pwzCodeOut, info, ppDF)
    end
    def get_default_filter(this : IEncodingFilterFactory*, pwzCodeIn : Win32cr::Foundation::PWSTR, pwzCodeOut : Win32cr::Foundation::PWSTR, ppDF : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_filter.call(this, pwzCodeIn, pwzCodeOut, ppDF)
    end

  end

  @[Extern]
  record IWrappedProtocolVtbl,
    query_interface : Proc(IWrappedProtocol*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWrappedProtocol*, UInt32),
    release : Proc(IWrappedProtocol*, UInt32),
    get_wrapper_code : Proc(IWrappedProtocol*, Int32*, LibC::UIntPtrT, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWrappedProtocol, lpVtbl : IWrappedProtocolVtbl* do
    GUID = LibC::GUID.new(0x53c84785_u32, 0x8425_u16, 0x4dc5_u16, StaticArray[0x97_u8, 0x1b_u8, 0xe5_u8, 0x8d_u8, 0x9c_u8, 0x19_u8, 0xf9_u8, 0xb6_u8])
    def query_interface(this : IWrappedProtocol*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWrappedProtocol*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWrappedProtocol*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_wrapper_code(this : IWrappedProtocol*, pnCode : Int32*, dwReserved : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_wrapper_code.call(this, pnCode, dwReserved)
    end

  end

  @[Extern]
  record IGetBindHandleVtbl,
    query_interface : Proc(IGetBindHandle*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IGetBindHandle*, UInt32),
    release : Proc(IGetBindHandle*, UInt32),
    get_bind_handle : Proc(IGetBindHandle*, Win32cr::System::Com::Urlmon::BINDHANDLETYPES, Win32cr::Foundation::HANDLE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IGetBindHandle, lpVtbl : IGetBindHandleVtbl* do
    GUID = LibC::GUID.new(0xaf0ff408_u32, 0x129d_u16, 0x4b20_u16, StaticArray[0x91_u8, 0xf0_u8, 0x2_u8, 0xbd_u8, 0x23_u8, 0xd8_u8, 0x83_u8, 0x52_u8])
    def query_interface(this : IGetBindHandle*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IGetBindHandle*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IGetBindHandle*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_bind_handle(this : IGetBindHandle*, enumRequestedHandle : Win32cr::System::Com::Urlmon::BINDHANDLETYPES, pRetHandle : Win32cr::Foundation::HANDLE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_bind_handle.call(this, enumRequestedHandle, pRetHandle)
    end

  end

  @[Extern]
  record IBindCallbackRedirectVtbl,
    query_interface : Proc(IBindCallbackRedirect*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IBindCallbackRedirect*, UInt32),
    release : Proc(IBindCallbackRedirect*, UInt32),
    redirect : Proc(IBindCallbackRedirect*, Win32cr::Foundation::PWSTR, Int16*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IBindCallbackRedirect, lpVtbl : IBindCallbackRedirectVtbl* do
    GUID = LibC::GUID.new(0x11c81bc2_u32, 0x121e_u16, 0x4ed5_u16, StaticArray[0xb9_u8, 0xc4_u8, 0xb4_u8, 0x30_u8, 0xbd_u8, 0x54_u8, 0xf2_u8, 0xc0_u8])
    def query_interface(this : IBindCallbackRedirect*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IBindCallbackRedirect*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IBindCallbackRedirect*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def redirect(this : IBindCallbackRedirect*, lpcUrl : Win32cr::Foundation::PWSTR, vbCancel : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.redirect.call(this, lpcUrl, vbCancel)
    end

  end

  @[Extern]
  record IBindHttpSecurityVtbl,
    query_interface : Proc(IBindHttpSecurity*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IBindHttpSecurity*, UInt32),
    release : Proc(IBindHttpSecurity*, UInt32),
    get_ignore_cert_mask : Proc(IBindHttpSecurity*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IBindHttpSecurity, lpVtbl : IBindHttpSecurityVtbl* do
    GUID = LibC::GUID.new(0xa9eda967_u32, 0xf50e_u16, 0x4a33_u16, StaticArray[0xb3_u8, 0x58_u8, 0x20_u8, 0x6f_u8, 0x6e_u8, 0xf3_u8, 0x8_u8, 0x6d_u8])
    def query_interface(this : IBindHttpSecurity*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IBindHttpSecurity*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IBindHttpSecurity*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_ignore_cert_mask(this : IBindHttpSecurity*, pdwIgnoreCertMask : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ignore_cert_mask.call(this, pdwIgnoreCertMask)
    end

  end

  @[Link("urlmon")]
  lib C
    fun CreateURLMoniker(pMkCtx : Void*, szURL : Win32cr::Foundation::PWSTR, ppmk : Void**) : Win32cr::Foundation::HRESULT

    fun CreateURLMonikerEx(pMkCtx : Void*, szURL : Win32cr::Foundation::PWSTR, ppmk : Void**, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    fun GetClassURL(szURL : Win32cr::Foundation::PWSTR, pClsID : LibC::GUID*) : Win32cr::Foundation::HRESULT

    fun CreateAsyncBindCtx(reserved : UInt32, pBSCb : Void*, pEFetc : Void*, ppBC : Void**) : Win32cr::Foundation::HRESULT

    fun CreateURLMonikerEx2(pMkCtx : Void*, pUri : Void*, ppmk : Void**, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    fun CreateAsyncBindCtxEx(pbc : Void*, dwOptions : UInt32, pBSCb : Void*, pEnum : Void*, ppBC : Void**, reserved : UInt32) : Win32cr::Foundation::HRESULT

    fun MkParseDisplayNameEx(pbc : Void*, szDisplayName : Win32cr::Foundation::PWSTR, pchEaten : UInt32*, ppmk : Void**) : Win32cr::Foundation::HRESULT

    fun RegisterBindStatusCallback(pBC : Void*, pBSCb : Void*, ppBSCBPrev : Void**, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun RevokeBindStatusCallback(pBC : Void*, pBSCb : Void*) : Win32cr::Foundation::HRESULT

    fun GetClassFileOrMime(pBC : Void*, szFilename : Win32cr::Foundation::PWSTR, pBuffer : Void*, cbSize : UInt32, szMime : Win32cr::Foundation::PWSTR, dwReserved : UInt32, pclsid : LibC::GUID*) : Win32cr::Foundation::HRESULT

    fun IsValidURL(pBC : Void*, szURL : Win32cr::Foundation::PWSTR, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun CoGetClassObjectFromURL(rCLASSID : LibC::GUID*, szCODE : Win32cr::Foundation::PWSTR, dwFileVersionMS : UInt32, dwFileVersionLS : UInt32, szTYPE : Win32cr::Foundation::PWSTR, pBindCtx : Void*, dwClsContext : Win32cr::System::Com::CLSCTX, pvReserved : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    fun IEInstallScope(pdwScope : UInt32*) : Win32cr::Foundation::HRESULT

    fun FaultInIEFeature(hWnd : Win32cr::Foundation::HWND, pClassSpec : Win32cr::System::Com::Uclsspec*, pQuery : Win32cr::System::Com::QUERYCONTEXT*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    fun GetComponentIDFromCLSSPEC(pClassspec : Win32cr::System::Com::Uclsspec*, ppszComponentID : Win32cr::Foundation::PSTR*) : Win32cr::Foundation::HRESULT

    fun IsAsyncMoniker(pmk : Void*) : Win32cr::Foundation::HRESULT

    fun RegisterMediaTypes(ctypes : UInt32, rgszTypes : Win32cr::Foundation::PSTR*, rgcfTypes : UInt16*) : Win32cr::Foundation::HRESULT

    fun FindMediaType(rgszTypes : Win32cr::Foundation::PSTR, rgcfTypes : UInt16*) : Win32cr::Foundation::HRESULT

    fun CreateFormatEnumerator(cfmtetc : UInt32, rgfmtetc : Win32cr::System::Com::FORMATETC*, ppenumfmtetc : Void**) : Win32cr::Foundation::HRESULT

    fun RegisterFormatEnumerator(pBC : Void*, pEFetc : Void*, reserved : UInt32) : Win32cr::Foundation::HRESULT

    fun RevokeFormatEnumerator(pBC : Void*, pEFetc : Void*) : Win32cr::Foundation::HRESULT

    fun RegisterMediaTypeClass(pBC : Void*, ctypes : UInt32, rgszTypes : Win32cr::Foundation::PSTR*, rgclsID : LibC::GUID*, reserved : UInt32) : Win32cr::Foundation::HRESULT

    fun FindMediaTypeClass(pBC : Void*, szType : Win32cr::Foundation::PSTR, pclsID : LibC::GUID*, reserved : UInt32) : Win32cr::Foundation::HRESULT

    fun UrlMkSetSessionOption(dwOption : UInt32, pBuffer : Void*, dwBufferLength : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun UrlMkGetSessionOption(dwOption : UInt32, pBuffer : Void*, dwBufferLength : UInt32, pdwBufferLengthOut : UInt32*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun FindMimeFromData(pBC : Void*, pwzUrl : Win32cr::Foundation::PWSTR, pBuffer : Void*, cbSize : UInt32, pwzMimeProposed : Win32cr::Foundation::PWSTR, dwMimeFlags : UInt32, ppwzMimeOut : Win32cr::Foundation::PWSTR*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun ObtainUserAgentString(dwOption : UInt32, pszUAOut : UInt8*, cbSize : UInt32*) : Win32cr::Foundation::HRESULT

    fun CompareSecurityIds(pbSecurityId1 : UInt8*, dwLen1 : UInt32, pbSecurityId2 : UInt8*, dwLen2 : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun CompatFlagsFromClsid(pclsid : LibC::GUID*, pdwCompatFlags : UInt32*, pdwMiscStatusFlags : UInt32*) : Win32cr::Foundation::HRESULT

    fun SetAccessForIEAppContainer(hObject : Win32cr::Foundation::HANDLE, ieObjectType : Win32cr::System::Com::Urlmon::IEObjectType, dwAccessMask : UInt32) : Win32cr::Foundation::HRESULT

    fun HlinkSimpleNavigateToString(szTarget : Win32cr::Foundation::PWSTR, szLocation : Win32cr::Foundation::PWSTR, szTargetFrameName : Win32cr::Foundation::PWSTR, pUnk : Void*, pbc : Void*, param5 : Void*, grfHLNF : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun HlinkSimpleNavigateToMoniker(pmkTarget : Void*, szLocation : Win32cr::Foundation::PWSTR, szTargetFrameName : Win32cr::Foundation::PWSTR, pUnk : Void*, pbc : Void*, param5 : Void*, grfHLNF : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun URLOpenStreamA(param0 : Void*, param1 : Win32cr::Foundation::PSTR, param2 : UInt32, param3 : Void*) : Win32cr::Foundation::HRESULT

    fun URLOpenStreamW(param0 : Void*, param1 : Win32cr::Foundation::PWSTR, param2 : UInt32, param3 : Void*) : Win32cr::Foundation::HRESULT

    fun URLOpenPullStreamA(param0 : Void*, param1 : Win32cr::Foundation::PSTR, param2 : UInt32, param3 : Void*) : Win32cr::Foundation::HRESULT

    fun URLOpenPullStreamW(param0 : Void*, param1 : Win32cr::Foundation::PWSTR, param2 : UInt32, param3 : Void*) : Win32cr::Foundation::HRESULT

    fun URLDownloadToFileA(param0 : Void*, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::Foundation::PSTR, param3 : UInt32, param4 : Void*) : Win32cr::Foundation::HRESULT

    fun URLDownloadToFileW(param0 : Void*, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::Foundation::PWSTR, param3 : UInt32, param4 : Void*) : Win32cr::Foundation::HRESULT

    fun URLDownloadToCacheFileA(param0 : Void*, param1 : Win32cr::Foundation::PSTR, param2 : UInt8*, cchFileName : UInt32, param4 : UInt32, param5 : Void*) : Win32cr::Foundation::HRESULT

    fun URLDownloadToCacheFileW(param0 : Void*, param1 : Win32cr::Foundation::PWSTR, param2 : UInt16*, cchFileName : UInt32, param4 : UInt32, param5 : Void*) : Win32cr::Foundation::HRESULT

    fun URLOpenBlockingStreamA(param0 : Void*, param1 : Win32cr::Foundation::PSTR, param2 : Void**, param3 : UInt32, param4 : Void*) : Win32cr::Foundation::HRESULT

    fun URLOpenBlockingStreamW(param0 : Void*, param1 : Win32cr::Foundation::PWSTR, param2 : Void**, param3 : UInt32, param4 : Void*) : Win32cr::Foundation::HRESULT

    fun HlinkGoBack(pUnk : Void*) : Win32cr::Foundation::HRESULT

    fun HlinkGoForward(pUnk : Void*) : Win32cr::Foundation::HRESULT

    fun HlinkNavigateString(pUnk : Void*, szTarget : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    fun HlinkNavigateMoniker(pUnk : Void*, pmkTarget : Void*) : Win32cr::Foundation::HRESULT

    fun CoInternetParseUrl(pwzUrl : Win32cr::Foundation::PWSTR, parse_action : Win32cr::System::Com::Urlmon::PARSEACTION, dwFlags : UInt32, pszResult : UInt16*, cchResult : UInt32, pcchResult : UInt32*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun CoInternetParseIUri(pIUri : Void*, parse_action : Win32cr::System::Com::Urlmon::PARSEACTION, dwFlags : UInt32, pwzResult : UInt16*, cchResult : UInt32, pcchResult : UInt32*, dwReserved : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT

    fun CoInternetCombineUrl(pwzBaseUrl : Win32cr::Foundation::PWSTR, pwzRelativeUrl : Win32cr::Foundation::PWSTR, dwCombineFlags : UInt32, pszResult : UInt16*, cchResult : UInt32, pcchResult : UInt32*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun CoInternetCombineUrlEx(pBaseUri : Void*, pwzRelativeUrl : Win32cr::Foundation::PWSTR, dwCombineFlags : UInt32, ppCombinedUri : Void**, dwReserved : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT

    fun CoInternetCombineIUri(pBaseUri : Void*, pRelativeUri : Void*, dwCombineFlags : UInt32, ppCombinedUri : Void**, dwReserved : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT

    fun CoInternetCompareUrl(pwzUrl1 : Win32cr::Foundation::PWSTR, pwzUrl2 : Win32cr::Foundation::PWSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    fun CoInternetGetProtocolFlags(pwzUrl : Win32cr::Foundation::PWSTR, pdwFlags : UInt32*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun CoInternetQueryInfo(pwzUrl : Win32cr::Foundation::PWSTR, query_options : Win32cr::System::Com::Urlmon::QUERYOPTION, dwQueryFlags : UInt32, pvBuffer : Void*, cbBuffer : UInt32, pcbBuffer : UInt32*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun CoInternetGetSession(dwSessionMode : UInt32, ppIInternetSession : Void**, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun CoInternetGetSecurityUrl(pwszUrl : Win32cr::Foundation::PWSTR, ppwszSecUrl : Win32cr::Foundation::PWSTR*, psuAction : Win32cr::System::Com::Urlmon::PSUACTION, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun CoInternetGetSecurityUrlEx(pUri : Void*, ppSecUri : Void**, psuAction : Win32cr::System::Com::Urlmon::PSUACTION, dwReserved : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT

    fun CoInternetSetFeatureEnabled(feature_entry : Win32cr::System::Com::Urlmon::INTERNETFEATURELIST, dwFlags : UInt32, fEnable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT

    fun CoInternetIsFeatureEnabled(feature_entry : Win32cr::System::Com::Urlmon::INTERNETFEATURELIST, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    fun CoInternetIsFeatureEnabledForUrl(feature_entry : Win32cr::System::Com::Urlmon::INTERNETFEATURELIST, dwFlags : UInt32, szURL : Win32cr::Foundation::PWSTR, pSecMgr : Void*) : Win32cr::Foundation::HRESULT

    fun CoInternetIsFeatureEnabledForIUri(feature_entry : Win32cr::System::Com::Urlmon::INTERNETFEATURELIST, dwFlags : UInt32, pIUri : Void*, pSecMgr : Void*) : Win32cr::Foundation::HRESULT

    fun CoInternetIsFeatureZoneElevationEnabled(szFromURL : Win32cr::Foundation::PWSTR, szToURL : Win32cr::Foundation::PWSTR, pSecMgr : Void*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    fun CopyStgMedium(pcstgmedSrc : Win32cr::System::Com::STGMEDIUM*, pstgmedDest : Win32cr::System::Com::STGMEDIUM*) : Win32cr::Foundation::HRESULT

    fun CopyBindInfo(pcbiSrc : Win32cr::System::Com::BINDINFO*, pbiDest : Win32cr::System::Com::BINDINFO*) : Win32cr::Foundation::HRESULT

    fun ReleaseBindInfo(pbindinfo : Win32cr::System::Com::BINDINFO*) : Void

    fun IEGetUserPrivateNamespaceName : Win32cr::Foundation::PWSTR

    fun CoInternetCreateSecurityManager(pSP : Void*, ppSM : Void**, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun CoInternetCreateZoneManager(pSP : Void*, ppZM : Void**, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    fun GetSoftwareUpdateInfo(szDistUnit : Win32cr::Foundation::PWSTR, psdi : Win32cr::System::Com::Urlmon::SOFTDISTINFO*) : Win32cr::Foundation::HRESULT

    fun SetSoftwareUpdateAdvertisementState(szDistUnit : Win32cr::Foundation::PWSTR, dwAdState : UInt32, dwAdvertisedVersionMS : UInt32, dwAdvertisedVersionLS : UInt32) : Win32cr::Foundation::HRESULT

    fun IsLoggingEnabledA(pszUrl : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    fun IsLoggingEnabledW(pwszUrl : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    fun WriteHitLogging(lpLogginginfo : Win32cr::System::Com::Urlmon::HIT_LOGGING_INFO*) : Win32cr::Foundation::BOOL

  end
end