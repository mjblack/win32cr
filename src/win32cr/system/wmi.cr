require "./com.cr"
require "./../foundation.cr"

module Win32cr::System::Wmi
  alias MI_MethodDecl_Invoke = Proc(Void*, Win32cr::System::Wmi::MI_Context*, UInt16*, UInt16*, UInt16*, Win32cr::System::Wmi::MI_Instance*, Win32cr::System::Wmi::MI_Instance*, Void)*

  alias MI_ProviderFT_Load = Proc(Void**, Win32cr::System::Wmi::MI_Module_Self*, Win32cr::System::Wmi::MI_Context*, Void)*

  alias MI_ProviderFT_Unload = Proc(Void*, Win32cr::System::Wmi::MI_Context*, Void)*

  alias MI_ProviderFT_GetInstance = Proc(Void*, Win32cr::System::Wmi::MI_Context*, UInt16*, UInt16*, Win32cr::System::Wmi::MI_Instance*, Win32cr::System::Wmi::MI_PropertySet*, Void)*

  alias MI_ProviderFT_EnumerateInstances = Proc(Void*, Win32cr::System::Wmi::MI_Context*, UInt16*, UInt16*, Win32cr::System::Wmi::MI_PropertySet*, UInt8, Win32cr::System::Wmi::MI_Filter*, Void)*

  alias MI_ProviderFT_CreateInstance = Proc(Void*, Win32cr::System::Wmi::MI_Context*, UInt16*, UInt16*, Win32cr::System::Wmi::MI_Instance*, Void)*

  alias MI_ProviderFT_ModifyInstance = Proc(Void*, Win32cr::System::Wmi::MI_Context*, UInt16*, UInt16*, Win32cr::System::Wmi::MI_Instance*, Win32cr::System::Wmi::MI_PropertySet*, Void)*

  alias MI_ProviderFT_DeleteInstance = Proc(Void*, Win32cr::System::Wmi::MI_Context*, UInt16*, UInt16*, Win32cr::System::Wmi::MI_Instance*, Void)*

  alias MI_ProviderFT_AssociatorInstances = Proc(Void*, Win32cr::System::Wmi::MI_Context*, UInt16*, UInt16*, Win32cr::System::Wmi::MI_Instance*, UInt16*, UInt16*, UInt16*, Win32cr::System::Wmi::MI_PropertySet*, UInt8, Win32cr::System::Wmi::MI_Filter*, Void)*

  alias MI_ProviderFT_ReferenceInstances = Proc(Void*, Win32cr::System::Wmi::MI_Context*, UInt16*, UInt16*, Win32cr::System::Wmi::MI_Instance*, UInt16*, Win32cr::System::Wmi::MI_PropertySet*, UInt8, Win32cr::System::Wmi::MI_Filter*, Void)*

  alias MI_ProviderFT_EnableIndications = Proc(Void*, Win32cr::System::Wmi::MI_Context*, UInt16*, UInt16*, Void)*

  alias MI_ProviderFT_DisableIndications = Proc(Void*, Win32cr::System::Wmi::MI_Context*, UInt16*, UInt16*, Void)*

  alias MI_ProviderFT_Subscribe = Proc(Void*, Win32cr::System::Wmi::MI_Context*, UInt16*, UInt16*, Win32cr::System::Wmi::MI_Filter*, UInt16*, UInt64, Void**, Void)*

  alias MI_ProviderFT_Unsubscribe = Proc(Void*, Win32cr::System::Wmi::MI_Context*, UInt16*, UInt16*, UInt64, Void*, Void)*

  alias MI_ProviderFT_Invoke = Proc(Void*, Win32cr::System::Wmi::MI_Context*, UInt16*, UInt16*, UInt16*, Win32cr::System::Wmi::MI_Instance*, Win32cr::System::Wmi::MI_Instance*, Void)*

  alias MI_Module_Load = Proc(Win32cr::System::Wmi::MI_Module_Self**, Win32cr::System::Wmi::MI_Context*, Void)*

  alias MI_Module_Unload = Proc(Win32cr::System::Wmi::MI_Module_Self*, Win32cr::System::Wmi::MI_Context*, Void)*

  alias MI_CancelCallback = Proc(Win32cr::System::Wmi::MI_CancellationReason, Void*, Void)*

  alias MI_MainFunction = Proc(Win32cr::System::Wmi::MI_Server*, Win32cr::System::Wmi::MI_Module*)*

  alias MI_OperationCallback_PromptUser = Proc(Win32cr::System::Wmi::MI_Operation*, Void*, UInt16*, Win32cr::System::Wmi::MI_PromptType, LibC::IntPtrT, Void)*

  alias MI_OperationCallback_WriteError = Proc(Win32cr::System::Wmi::MI_Operation*, Void*, Win32cr::System::Wmi::MI_Instance*, LibC::IntPtrT, Void)*

  alias MI_OperationCallback_WriteMessage = Proc(Win32cr::System::Wmi::MI_Operation*, Void*, UInt32, UInt16*, Void)*

  alias MI_OperationCallback_WriteProgress = Proc(Win32cr::System::Wmi::MI_Operation*, Void*, UInt16*, UInt16*, UInt16*, UInt32, UInt32, Void)*

  alias MI_OperationCallback_Instance = Proc(Win32cr::System::Wmi::MI_Operation*, Void*, Win32cr::System::Wmi::MI_Instance*, UInt8, Win32cr::System::Wmi::MI_Result, UInt16*, Win32cr::System::Wmi::MI_Instance*, LibC::IntPtrT, Void)*

  alias MI_OperationCallback_StreamedParameter = Proc(Win32cr::System::Wmi::MI_Operation*, Void*, UInt16*, Win32cr::System::Wmi::MI_Type, Win32cr::System::Wmi::MI_Value*, LibC::IntPtrT, Void)*

  alias MI_OperationCallback_Indication = Proc(Win32cr::System::Wmi::MI_Operation*, Void*, Win32cr::System::Wmi::MI_Instance*, UInt16*, UInt16*, UInt8, Win32cr::System::Wmi::MI_Result, UInt16*, Win32cr::System::Wmi::MI_Instance*, LibC::IntPtrT, Void)*

  alias MI_OperationCallback_Class = Proc(Win32cr::System::Wmi::MI_Operation*, Void*, Win32cr::System::Wmi::MI_Class*, UInt8, Win32cr::System::Wmi::MI_Result, UInt16*, Win32cr::System::Wmi::MI_Instance*, LibC::IntPtrT, Void)*

  alias MI_Deserializer_ClassObjectNeeded = Proc(Void*, UInt16*, UInt16*, UInt16*, Win32cr::System::Wmi::MI_Class**, Win32cr::System::Wmi::MI_Result)*

  MI_FLAG_ANY = 127_u32
  MI_FLAG_VERSION = 469762048_u32
  MI_FLAG_ADOPT = 2147483648_u32
  MI_CHAR_TYPE = 2_u32
  MI_FLAG_CLASS = 1_u32
  MI_FLAG_METHOD = 2_u32
  MI_FLAG_PROPERTY = 4_u32
  MI_FLAG_PARAMETER = 8_u32
  MI_FLAG_ASSOCIATION = 16_u32
  MI_FLAG_INDICATION = 32_u32
  MI_FLAG_REFERENCE = 64_u32
  MI_FLAG_ENABLEOVERRIDE = 128_u32
  MI_FLAG_DISABLEOVERRIDE = 256_u32
  MI_FLAG_RESTRICTED = 512_u32
  MI_FLAG_TOSUBCLASS = 1024_u32
  MI_FLAG_TRANSLATABLE = 2048_u32
  MI_FLAG_KEY = 4096_u32
  MI_FLAG_IN = 8192_u32
  MI_FLAG_OUT = 16384_u32
  MI_FLAG_REQUIRED = 32768_u32
  MI_FLAG_STATIC = 65536_u32
  MI_FLAG_ABSTRACT = 131072_u32
  MI_FLAG_TERMINAL = 262144_u32
  MI_FLAG_EXPENSIVE = 524288_u32
  MI_FLAG_STREAM = 1048576_u32
  MI_FLAG_READONLY = 2097152_u32
  MI_FLAG_EXTENDED = 4096_u32
  MI_FLAG_NOT_MODIFIED = 33554432_u32
  MI_FLAG_NULL = 536870912_u32
  MI_FLAG_BORROW = 1073741824_u32
  MI_MODULE_FLAG_STANDARD_QUALIFIERS = 1_u32
  MI_MODULE_FLAG_DESCRIPTIONS = 2_u32
  MI_MODULE_FLAG_VALUES = 4_u32
  MI_MODULE_FLAG_MAPPING_STRINGS = 8_u32
  MI_MODULE_FLAG_BOOLEANS = 16_u32
  MI_MODULE_FLAG_CPLUSPLUS = 32_u32
  MI_MODULE_FLAG_LOCALIZED = 64_u32
  MI_MODULE_FLAG_FILTER_SUPPORT = 128_u32
  MI_MAX_LOCALE_SIZE = 128_u32
  MI_WRITEMESSAGE_CHANNEL_WARNING = 0_u32
  MI_WRITEMESSAGE_CHANNEL_VERBOSE = 1_u32
  MI_WRITEMESSAGE_CHANNEL_DEBUG = 2_u32
  MI_CALL_VERSION = 1_u32
  MI_OPERATIONFLAGS_MANUAL_ACK_RESULTS = 1_u32
  MI_OPERATIONFLAGS_NO_RTTI = 1024_u32
  MI_OPERATIONFLAGS_BASIC_RTTI = 2_u32
  MI_OPERATIONFLAGS_STANDARD_RTTI = 2048_u32
  MI_OPERATIONFLAGS_FULL_RTTI = 4_u32
  MI_OPERATIONFLAGS_DEFAULT_RTTI = 0_u32
  MI_OPERATIONFLAGS_LOCALIZED_QUALIFIERS = 8_u32
  MI_OPERATIONFLAGS_EXPENSIVE_PROPERTIES = 64_u32
  MI_OPERATIONFLAGS_POLYMORPHISM_SHALLOW = 128_u32
  MI_OPERATIONFLAGS_POLYMORPHISM_DEEP_BASE_PROPS_ONLY = 384_u32
  MI_OPERATIONFLAGS_REPORT_OPERATION_STARTED = 512_u32
  MI_SUBSCRIBE_BOOKMARK_OLDEST = "MI_SUBSCRIBE_BOOKMARK_OLDEST"
  MI_SUBSCRIBE_BOOKMARK_NEWEST = "MI_SUBSCRIBE_BOOKMARK_NEWEST"
  MI_SERIALIZER_FLAGS_CLASS_DEEP = 1_u32
  MI_SERIALIZER_FLAGS_INSTANCE_WITH_CLASS = 1_u32
  WBEMS_DISPID_DERIVATION = 23_u32
  WBEMS_DISPID_OBJECT_READY = 1_u32
  WBEMS_DISPID_COMPLETED = 2_u32
  WBEMS_DISPID_PROGRESS = 3_u32
  WBEMS_DISPID_OBJECT_PUT = 4_u32
  WBEMS_DISPID_CONNECTION_READY = 5_u32

  CLSID_WbemDefPath = LibC::GUID.new(0xcf4cc405_u32, 0xe2c5_u16, 0x4ddd_u16, StaticArray[0xb3_u8, 0xce_u8, 0x5e_u8, 0x75_u8, 0x82_u8, 0xd8_u8, 0xc9_u8, 0xfa_u8])

  CLSID_WbemQuery = LibC::GUID.new(0xeac8a024_u32, 0x21e2_u16, 0x4523_u16, StaticArray[0xad_u8, 0x73_u8, 0xa7_u8, 0x1a_u8, 0xa_u8, 0xa2_u8, 0xf5_u8, 0x6a_u8])

  CLSID_WbemLocator = LibC::GUID.new(0x4590f811_u32, 0x1d3a_u16, 0x11d0_u16, StaticArray[0x89_u8, 0x1f_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0x2e_u8, 0x24_u8])

  CLSID_WbemContext = LibC::GUID.new(0x674b6698_u32, 0xee92_u16, 0x11d0_u16, StaticArray[0xad_u8, 0x71_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])

  CLSID_UnsecuredApartment = LibC::GUID.new(0x49bd2028_u32, 0x1523_u16, 0x11d1_u16, StaticArray[0xad_u8, 0x79_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])

  CLSID_WbemClassObject = LibC::GUID.new(0x9a653086_u32, 0x174f_u16, 0x11d2_u16, StaticArray[0xb5_u8, 0xf9_u8, 0x0_u8, 0x10_u8, 0x4b_u8, 0x70_u8, 0x3e_u8, 0xfd_u8])

  CLSID_MofCompiler = LibC::GUID.new(0x6daf9757_u32, 0x2e37_u16, 0x11d2_u16, StaticArray[0xae_u8, 0xc9_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])

  CLSID_WbemStatusCodeText = LibC::GUID.new(0xeb87e1bd_u32, 0x3233_u16, 0x11d2_u16, StaticArray[0xae_u8, 0xc9_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])

  CLSID_WbemBackupRestore = LibC::GUID.new(0xc49e32c6_u32, 0xbc8b_u16, 0x11d2_u16, StaticArray[0x85_u8, 0xd4_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x83_u8, 0x4_u8])

  CLSID_WbemRefresher = LibC::GUID.new(0xc71566f2_u32, 0x561e_u16, 0x11d1_u16, StaticArray[0xad_u8, 0x87_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])

  CLSID_WbemObjectTextSrc = LibC::GUID.new(0x8d1c559d_u32, 0x84f0_u16, 0x4bb3_u16, StaticArray[0xa7_u8, 0xd5_u8, 0x56_u8, 0xa7_u8, 0x43_u8, 0x5a_u8, 0x9b_u8, 0xa6_u8])

  CLSID_WbemAdministrativeLocator = LibC::GUID.new(0xcb8555cc_u32, 0x9128_u16, 0x11d1_u16, StaticArray[0xad_u8, 0x9b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])

  CLSID_WbemAuthenticatedLocator = LibC::GUID.new(0xcd184336_u32, 0x9128_u16, 0x11d1_u16, StaticArray[0xad_u8, 0x9b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])

  CLSID_WbemUnauthenticatedLocator = LibC::GUID.new(0x443e7b79_u32, 0xde31_u16, 0x11d2_u16, StaticArray[0xb3_u8, 0x40_u8, 0x0_u8, 0x10_u8, 0x4b_u8, 0xcc_u8, 0x4b_u8, 0x4a_u8])

  CLSID_WbemDecoupledRegistrar = LibC::GUID.new(0x4cfc7932_u32, 0xf9d_u16, 0x4bef_u16, StaticArray[0x9c_u8, 0x32_u8, 0x8e_u8, 0xa2_u8, 0xa6_u8, 0xb5_u8, 0x6f_u8, 0xcb_u8])

  CLSID_WbemDecoupledBasicEventProvider = LibC::GUID.new(0xf5f75737_u32, 0x2843_u16, 0x4f22_u16, StaticArray[0x93_u8, 0x3d_u8, 0xc7_u8, 0x6a_u8, 0x97_u8, 0xcd_u8, 0xa6_u8, 0x2f_u8])

  CLSID_SWbemLocator = LibC::GUID.new(0x76a64158_u32, 0xcb41_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x2_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemNamedValueSet = LibC::GUID.new(0x9aed384e_u32, 0xce8b_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x5_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemObjectPath = LibC::GUID.new(0x5791bc26_u32, 0xce9c_u16, 0x11d1_u16, StaticArray[0x97_u8, 0xbf_u8, 0x0_u8, 0x0_u8, 0xf8_u8, 0x1e_u8, 0x84_u8, 0x9c_u8])

  CLSID_SWbemLastError = LibC::GUID.new(0xc2feeeac_u32, 0xcfcd_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x5_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemSink = LibC::GUID.new(0x75718c9a_u32, 0xf029_u16, 0x11d1_u16, StaticArray[0xa1_u8, 0xac_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0xc2_u8, 0x23_u8])

  CLSID_SWbemDateTime = LibC::GUID.new(0x47dfbe54_u32, 0xcf76_u16, 0x11d3_u16, StaticArray[0xb3_u8, 0x8f_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x47_u8, 0x3a_u8])

  CLSID_SWbemRefresher = LibC::GUID.new(0xd269bf5c_u32, 0xd9c1_u16, 0x11d3_u16, StaticArray[0xb3_u8, 0x8f_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x47_u8, 0x3a_u8])

  CLSID_SWbemServices = LibC::GUID.new(0x4b83d63_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemServicesEx = LibC::GUID.new(0x62e522dc_u32, 0x8cf3_u16, 0x40a8_u16, StaticArray[0x8b_u8, 0x2e_u8, 0x37_u8, 0xd5_u8, 0x95_u8, 0x65_u8, 0x1e_u8, 0x40_u8])

  CLSID_SWbemObject = LibC::GUID.new(0x4b83d62_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemObjectEx = LibC::GUID.new(0xd6bdafb2_u32, 0x9435_u16, 0x491f_u16, StaticArray[0xbb_u8, 0x87_u8, 0x6a_u8, 0xa0_u8, 0xf0_u8, 0xbc_u8, 0x31_u8, 0xa2_u8])

  CLSID_SWbemObjectSet = LibC::GUID.new(0x4b83d61_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemNamedValue = LibC::GUID.new(0x4b83d60_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemQualifier = LibC::GUID.new(0x4b83d5f_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemQualifierSet = LibC::GUID.new(0x4b83d5e_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemProperty = LibC::GUID.new(0x4b83d5d_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemPropertySet = LibC::GUID.new(0x4b83d5c_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemMethod = LibC::GUID.new(0x4b83d5b_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemMethodSet = LibC::GUID.new(0x4b83d5a_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemEventSource = LibC::GUID.new(0x4b83d58_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemSecurity = LibC::GUID.new(0xb54d66e9_u32, 0x2287_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemPrivilege = LibC::GUID.new(0x26ee67bc_u32, 0x5804_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x4a_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemPrivilegeSet = LibC::GUID.new(0x26ee67be_u32, 0x5804_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x4a_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])

  CLSID_SWbemRefreshableItem = LibC::GUID.new(0x8c6854bc_u32, 0xde4b_u16, 0x11d3_u16, StaticArray[0xb3_u8, 0x90_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x47_u8, 0x3a_u8])

  CLSID_WMIExtension = LibC::GUID.new(0xf0975afe_u32, 0x5c7f_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x74_u8, 0x0_u8, 0x10_u8, 0x4b_u8, 0x2a_u8, 0xfb_u8, 0x41_u8])

  CLSID_WbemLevel1Login = LibC::GUID.new(0x8bc3f05e_u32, 0xd86b_u16, 0x11d0_u16, StaticArray[0xa0_u8, 0x75_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])

  CLSID_WbemLocalAddrRes = LibC::GUID.new(0xa1044801_u32, 0x8f7e_u16, 0x11d1_u16, StaticArray[0x9e_u8, 0x7c_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc3_u8, 0x24_u8, 0xa8_u8])

  CLSID_WbemUninitializedClassObject = LibC::GUID.new(0x7a0227f6_u32, 0x7108_u16, 0x11d1_u16, StaticArray[0xad_u8, 0x90_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])

  CLSID_WbemDCOMTransport = LibC::GUID.new(0xf7ce2e13_u32, 0x8c90_u16, 0x11d1_u16, StaticArray[0x9e_u8, 0x7b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc3_u8, 0x24_u8, 0xa8_u8])

  enum MI_Result
    MI_RESULT_OK = 0_i32
    MI_RESULT_FAILED = 1_i32
    MI_RESULT_ACCESS_DENIED = 2_i32
    MI_RESULT_INVALID_NAMESPACE = 3_i32
    MI_RESULT_INVALID_PARAMETER = 4_i32
    MI_RESULT_INVALID_CLASS = 5_i32
    MI_RESULT_NOT_FOUND = 6_i32
    MI_RESULT_NOT_SUPPORTED = 7_i32
    MI_RESULT_CLASS_HAS_CHILDREN = 8_i32
    MI_RESULT_CLASS_HAS_INSTANCES = 9_i32
    MI_RESULT_INVALID_SUPERCLASS = 10_i32
    MI_RESULT_ALREADY_EXISTS = 11_i32
    MI_RESULT_NO_SUCH_PROPERTY = 12_i32
    MI_RESULT_TYPE_MISMATCH = 13_i32
    MI_RESULT_QUERY_LANGUAGE_NOT_SUPPORTED = 14_i32
    MI_RESULT_INVALID_QUERY = 15_i32
    MI_RESULT_METHOD_NOT_AVAILABLE = 16_i32
    MI_RESULT_METHOD_NOT_FOUND = 17_i32
    MI_RESULT_NAMESPACE_NOT_EMPTY = 20_i32
    MI_RESULT_INVALID_ENUMERATION_CONTEXT = 21_i32
    MI_RESULT_INVALID_OPERATION_TIMEOUT = 22_i32
    MI_RESULT_PULL_HAS_BEEN_ABANDONED = 23_i32
    MI_RESULT_PULL_CANNOT_BE_ABANDONED = 24_i32
    MI_RESULT_FILTERED_ENUMERATION_NOT_SUPPORTED = 25_i32
    MI_RESULT_CONTINUATION_ON_ERROR_NOT_SUPPORTED = 26_i32
    MI_RESULT_SERVER_LIMITS_EXCEEDED = 27_i32
    MI_RESULT_SERVER_IS_SHUTTING_DOWN = 28_i32
  end
  enum MI_ErrorCategory
    MI_ERRORCATEGORY_NOT_SPECIFIED = 0_i32
    MI_ERRORCATEGORY_OPEN_ERROR = 1_i32
    MI_ERRORCATEGORY_CLOS_EERROR = 2_i32
    MI_ERRORCATEGORY_DEVICE_ERROR = 3_i32
    MI_ERRORCATEGORY_DEADLOCK_DETECTED = 4_i32
    MI_ERRORCATEGORY_INVALID_ARGUMENT = 5_i32
    MI_ERRORCATEGORY_INVALID_DATA = 6_i32
    MI_ERRORCATEGORY_INVALID_OPERATION = 7_i32
    MI_ERRORCATEGORY_INVALID_RESULT = 8_i32
    MI_ERRORCATEGORY_INVALID_TYPE = 9_i32
    MI_ERRORCATEGORY_METADATA_ERROR = 10_i32
    MI_ERRORCATEGORY_NOT_IMPLEMENTED = 11_i32
    MI_ERRORCATEGORY_NOT_INSTALLED = 12_i32
    MI_ERRORCATEGORY_OBJECT_NOT_FOUND = 13_i32
    MI_ERRORCATEGORY_OPERATION_STOPPED = 14_i32
    MI_ERRORCATEGORY_OPERATION_TIMEOUT = 15_i32
    MI_ERRORCATEGORY_SYNTAX_ERROR = 16_i32
    MI_ERRORCATEGORY_PARSER_ERROR = 17_i32
    MI_ERRORCATEGORY_ACCESS_DENIED = 18_i32
    MI_ERRORCATEGORY_RESOURCE_BUSY = 19_i32
    MI_ERRORCATEGORY_RESOURCE_EXISTS = 20_i32
    MI_ERRORCATEGORY_RESOURCE_UNAVAILABLE = 21_i32
    MI_ERRORCATEGORY_READ_ERROR = 22_i32
    MI_ERRORCATEGORY_WRITE_ERROR = 23_i32
    MI_ERRORCATEGORY_FROM_STDERR = 24_i32
    MI_ERRORCATEGORY_SECURITY_ERROR = 25_i32
    MI_ERRORCATEGORY_PROTOCOL_ERROR = 26_i32
    MI_ERRORCATEGORY_CONNECTION_ERROR = 27_i32
    MI_ERRORCATEGORY_AUTHENTICATION_ERROR = 28_i32
    MI_ERRORCATEGORY_LIMITS_EXCEEDED = 29_i32
    MI_ERRORCATEGORY_QUOTA_EXCEEDED = 30_i32
    MI_ERRORCATEGORY_NOT_ENABLED = 31_i32
  end
  enum MI_PromptType
    MI_PROMPTTYPE_NORMAL = 0_i32
    MI_PROMPTTYPE_CRITICAL = 1_i32
  end
  enum MI_CallbackMode
    MI_CALLBACKMODE_REPORT = 0_i32
    MI_CALLBACKMODE_INQUIRE = 1_i32
    MI_CALLBACKMODE_IGNORE = 2_i32
  end
  enum MI_ProviderArchitecture
    MI_PROVIDER_ARCHITECTURE_32BIT = 0_i32
    MI_PROVIDER_ARCHITECTURE_64BIT = 1_i32
  end
  enum MI_Type
    MI_BOOLEAN = 0_i32
    MI_UINT8 = 1_i32
    MI_SINT8 = 2_i32
    MI_UINT16 = 3_i32
    MI_SINT16 = 4_i32
    MI_UINT32 = 5_i32
    MI_SINT32 = 6_i32
    MI_UINT64 = 7_i32
    MI_SINT64 = 8_i32
    MI_REAL32 = 9_i32
    MI_REAL64 = 10_i32
    MI_CHAR16 = 11_i32
    MI_DATETIME = 12_i32
    MI_STRING = 13_i32
    MI_REFERENCE = 14_i32
    MI_INSTANCE = 15_i32
    MI_BOOLEANA = 16_i32
    MI_UINT8A = 17_i32
    MI_SINT8A = 18_i32
    MI_UINT16A = 19_i32
    MI_SINT16A = 20_i32
    MI_UINT32A = 21_i32
    MI_SINT32A = 22_i32
    MI_UINT64A = 23_i32
    MI_SINT64A = 24_i32
    MI_REAL32A = 25_i32
    MI_REAL64A = 26_i32
    MI_CHAR16A = 27_i32
    MI_DATETIMEA = 28_i32
    MI_STRINGA = 29_i32
    MI_REFERENCEA = 30_i32
    MI_INSTANCEA = 31_i32
    MI_ARRAY = 16_i32
  end
  enum MI_LocaleType
    MI_LOCALE_TYPE_REQUESTED_UI = 0_i32
    MI_LOCALE_TYPE_REQUESTED_DATA = 1_i32
    MI_LOCALE_TYPE_CLOSEST_UI = 2_i32
    MI_LOCALE_TYPE_CLOSEST_DATA = 3_i32
  end
  enum MI_CancellationReason
    MI_REASON_NONE = 0_i32
    MI_REASON_TIMEOUT = 1_i32
    MI_REASON_SHUTDOWN = 2_i32
    MI_REASON_SERVICESTOP = 3_i32
  end
  enum MI_OperationCallback_ResponseType
    MI_OperationCallback_ResponseType_No = 0_i32
    MI_OperationCallback_ResponseType_Yes = 1_i32
    MI_OperationCallback_ResponseType_NoToAll = 2_i32
    MI_OperationCallback_ResponseType_YesToAll = 3_i32
  end
  enum MI_SubscriptionDeliveryType
    MI_SubscriptionDeliveryType_Pull = 1_i32
    MI_SubscriptionDeliveryType_Push = 2_i32
  end
  enum MI_DestinationOptions_ImpersonationType
    MI_DestinationOptions_ImpersonationType_Default = 0_i32
    MI_DestinationOptions_ImpersonationType_None = 1_i32
    MI_DestinationOptions_ImpersonationType_Identify = 2_i32
    MI_DestinationOptions_ImpersonationType_Impersonate = 3_i32
    MI_DestinationOptions_ImpersonationType_Delegate = 4_i32
  end
  enum WBEM_PATH_STATUS_FLAG
    WBEMPATH_INFO_ANON_LOCAL_MACHINE = 1_i32
    WBEMPATH_INFO_HAS_MACHINE_NAME = 2_i32
    WBEMPATH_INFO_IS_CLASS_REF = 4_i32
    WBEMPATH_INFO_IS_INST_REF = 8_i32
    WBEMPATH_INFO_HAS_SUBSCOPES = 16_i32
    WBEMPATH_INFO_IS_COMPOUND = 32_i32
    WBEMPATH_INFO_HAS_V2_REF_PATHS = 64_i32
    WBEMPATH_INFO_HAS_IMPLIED_KEY = 128_i32
    WBEMPATH_INFO_CONTAINS_SINGLETON = 256_i32
    WBEMPATH_INFO_V1_COMPLIANT = 512_i32
    WBEMPATH_INFO_V2_COMPLIANT = 1024_i32
    WBEMPATH_INFO_CIM_COMPLIANT = 2048_i32
    WBEMPATH_INFO_IS_SINGLETON = 4096_i32
    WBEMPATH_INFO_IS_PARENT = 8192_i32
    WBEMPATH_INFO_SERVER_NAMESPACE_ONLY = 16384_i32
    WBEMPATH_INFO_NATIVE_PATH = 32768_i32
    WBEMPATH_INFO_WMI_PATH = 65536_i32
    WBEMPATH_INFO_PATH_HAD_SERVER = 131072_i32
  end
  enum WBEM_PATH_CREATE_FLAG
    WBEMPATH_CREATE_ACCEPT_RELATIVE = 1_i32
    WBEMPATH_CREATE_ACCEPT_ABSOLUTE = 2_i32
    WBEMPATH_CREATE_ACCEPT_ALL = 4_i32
    WBEMPATH_TREAT_SINGLE_IDENT_AS_NS = 8_i32
  end
  enum WBEM_GET_TEXT_FLAGS
    WBEMPATH_COMPRESSED = 1_i32
    WBEMPATH_GET_RELATIVE_ONLY = 2_i32
    WBEMPATH_GET_SERVER_TOO = 4_i32
    WBEMPATH_GET_SERVER_AND_NAMESPACE_ONLY = 8_i32
    WBEMPATH_GET_NAMESPACE_ONLY = 16_i32
    WBEMPATH_GET_ORIGINAL = 32_i32
  end
  enum WBEM_GET_KEY_FLAGS
    WBEMPATH_TEXT = 1_i32
    WBEMPATH_QUOTEDTEXT = 2_i32
  end
  enum WMIQ_ANALYSIS_TYPE
    WMIQ_ANALYSIS_RPN_SEQUENCE = 1_i32
    WMIQ_ANALYSIS_ASSOC_QUERY = 2_i32
    WMIQ_ANALYSIS_PROP_ANALYSIS_MATRIX = 3_i32
    WMIQ_ANALYSIS_QUERY_TEXT = 4_i32
    WMIQ_ANALYSIS_RESERVED = 134217728_i32
  end
  enum WMIQ_RPN_TOKEN_FLAGS
    WMIQ_RPN_TOKEN_EXPRESSION = 1_i32
    WMIQ_RPN_TOKEN_AND = 2_i32
    WMIQ_RPN_TOKEN_OR = 3_i32
    WMIQ_RPN_TOKEN_NOT = 4_i32
    WMIQ_RPN_OP_UNDEFINED = 0_i32
    WMIQ_RPN_OP_EQ = 1_i32
    WMIQ_RPN_OP_NE = 2_i32
    WMIQ_RPN_OP_GE = 3_i32
    WMIQ_RPN_OP_LE = 4_i32
    WMIQ_RPN_OP_LT = 5_i32
    WMIQ_RPN_OP_GT = 6_i32
    WMIQ_RPN_OP_LIKE = 7_i32
    WMIQ_RPN_OP_ISA = 8_i32
    WMIQ_RPN_OP_ISNOTA = 9_i32
    WMIQ_RPN_OP_ISNULL = 10_i32
    WMIQ_RPN_OP_ISNOTNULL = 11_i32
    WMIQ_RPN_LEFT_PROPERTY_NAME = 1_i32
    WMIQ_RPN_RIGHT_PROPERTY_NAME = 2_i32
    WMIQ_RPN_CONST2 = 4_i32
    WMIQ_RPN_CONST = 8_i32
    WMIQ_RPN_RELOP = 16_i32
    WMIQ_RPN_LEFT_FUNCTION = 32_i32
    WMIQ_RPN_RIGHT_FUNCTION = 64_i32
    WMIQ_RPN_GET_TOKEN_TYPE = 1_i32
    WMIQ_RPN_GET_EXPR_SHAPE = 2_i32
    WMIQ_RPN_GET_LEFT_FUNCTION = 3_i32
    WMIQ_RPN_GET_RIGHT_FUNCTION = 4_i32
    WMIQ_RPN_GET_RELOP = 5_i32
    WMIQ_RPN_NEXT_TOKEN = 1_i32
    WMIQ_RPN_FROM_UNARY = 1_i32
    WMIQ_RPN_FROM_PATH = 2_i32
    WMIQ_RPN_FROM_CLASS_LIST = 4_i32
    WMIQ_RPN_FROM_MULTIPLE = 8_i32
  end
  enum WMIQ_ASSOCQ_FLAGS
    WMIQ_ASSOCQ_ASSOCIATORS = 1_i32
    WMIQ_ASSOCQ_REFERENCES = 2_i32
    WMIQ_ASSOCQ_RESULTCLASS = 4_i32
    WMIQ_ASSOCQ_ASSOCCLASS = 8_i32
    WMIQ_ASSOCQ_ROLE = 16_i32
    WMIQ_ASSOCQ_RESULTROLE = 32_i32
    WMIQ_ASSOCQ_REQUIREDQUALIFIER = 64_i32
    WMIQ_ASSOCQ_REQUIREDASSOCQUALIFIER = 128_i32
    WMIQ_ASSOCQ_CLASSDEFSONLY = 256_i32
    WMIQ_ASSOCQ_KEYSONLY = 512_i32
    WMIQ_ASSOCQ_SCHEMAONLY = 1024_i32
    WMIQ_ASSOCQ_CLASSREFSONLY = 2048_i32
  end
  enum WMIQ_LANGUAGE_FEATURES
    WMIQ_LF1_BASIC_SELECT = 1_i32
    WMIQ_LF2_CLASS_NAME_IN_QUERY = 2_i32
    WMIQ_LF3_STRING_CASE_FUNCTIONS = 3_i32
    WMIQ_LF4_PROP_TO_PROP_TESTS = 4_i32
    WMIQ_LF5_COUNT_STAR = 5_i32
    WMIQ_LF6_ORDER_BY = 6_i32
    WMIQ_LF7_DISTINCT = 7_i32
    WMIQ_LF8_ISA = 8_i32
    WMIQ_LF9_THIS = 9_i32
    WMIQ_LF10_COMPEX_SUBEXPRESSIONS = 10_i32
    WMIQ_LF11_ALIASING = 11_i32
    WMIQ_LF12_GROUP_BY_HAVING = 12_i32
    WMIQ_LF13_WMI_WITHIN = 13_i32
    WMIQ_LF14_SQL_WRITE_OPERATIONS = 14_i32
    WMIQ_LF15_GO = 15_i32
    WMIQ_LF16_SINGLE_LEVEL_TRANSACTIONS = 16_i32
    WMIQ_LF17_QUALIFIED_NAMES = 17_i32
    WMIQ_LF18_ASSOCIATONS = 18_i32
    WMIQ_LF19_SYSTEM_PROPERTIES = 19_i32
    WMIQ_LF20_EXTENDED_SYSTEM_PROPERTIES = 20_i32
    WMIQ_LF21_SQL89_JOINS = 21_i32
    WMIQ_LF22_SQL92_JOINS = 22_i32
    WMIQ_LF23_SUBSELECTS = 23_i32
    WMIQ_LF24_UMI_EXTENSIONS = 24_i32
    WMIQ_LF25_DATEPART = 25_i32
    WMIQ_LF26_LIKE = 26_i32
    WMIQ_LF27_CIM_TEMPORAL_CONSTRUCTS = 27_i32
    WMIQ_LF28_STANDARD_AGGREGATES = 28_i32
    WMIQ_LF29_MULTI_LEVEL_ORDER_BY = 29_i32
    WMIQ_LF30_WMI_PRAGMAS = 30_i32
    WMIQ_LF31_QUALIFIER_TESTS = 31_i32
    WMIQ_LF32_SP_EXECUTE = 32_i32
    WMIQ_LF33_ARRAY_ACCESS = 33_i32
    WMIQ_LF34_UNION = 34_i32
    WMIQ_LF35_COMPLEX_SELECT_TARGET = 35_i32
    WMIQ_LF36_REFERENCE_TESTS = 36_i32
    WMIQ_LF37_SELECT_INTO = 37_i32
    WMIQ_LF38_BASIC_DATETIME_TESTS = 38_i32
    WMIQ_LF39_COUNT_COLUMN = 39_i32
    WMIQ_LF40_BETWEEN = 40_i32
    WMIQ_LF_LAST = 40_i32
  end
  enum WMIQ_RPNQ_FEATURE
    WMIQ_RPNF_WHERE_CLAUSE_PRESENT = 1_i32
    WMIQ_RPNF_QUERY_IS_CONJUNCTIVE = 2_i32
    WMIQ_RPNF_QUERY_IS_DISJUNCTIVE = 4_i32
    WMIQ_RPNF_PROJECTION = 8_i32
    WMIQ_RPNF_FEATURE_SELECT_STAR = 16_i32
    WMIQ_RPNF_EQUALITY_TESTS_ONLY = 32_i32
    WMIQ_RPNF_COUNT_STAR = 64_i32
    WMIQ_RPNF_QUALIFIED_NAMES_USED = 128_i32
    WMIQ_RPNF_SYSPROP_CLASS_USED = 256_i32
    WMIQ_RPNF_PROP_TO_PROP_TESTS = 512_i32
    WMIQ_RPNF_ORDER_BY = 1024_i32
    WMIQ_RPNF_ISA_USED = 2048_i32
    WMIQ_RPNF_GROUP_BY_HAVING = 4096_i32
    WMIQ_RPNF_ARRAY_ACCESS_USED = 8192_i32
  end
  enum WBEM_GENUS_TYPE
    WBEM_GENUS_CLASS = 1_i32
    WBEM_GENUS_INSTANCE = 2_i32
  end
  enum WBEM_CHANGE_FLAG_TYPE
    WBEM_FLAG_CREATE_OR_UPDATE = 0_i32
    WBEM_FLAG_UPDATE_ONLY = 1_i32
    WBEM_FLAG_CREATE_ONLY = 2_i32
    WBEM_FLAG_UPDATE_COMPATIBLE = 0_i32
    WBEM_FLAG_UPDATE_SAFE_MODE = 32_i32
    WBEM_FLAG_UPDATE_FORCE_MODE = 64_i32
    WBEM_MASK_UPDATE_MODE = 96_i32
    WBEM_FLAG_ADVISORY = 65536_i32
  end
  enum WBEM_GENERIC_FLAG_TYPE
    WBEM_FLAG_RETURN_IMMEDIATELY = 16_i32
    WBEM_FLAG_RETURN_WBEM_COMPLETE = 0_i32
    WBEM_FLAG_BIDIRECTIONAL = 0_i32
    WBEM_FLAG_FORWARD_ONLY = 32_i32
    WBEM_FLAG_NO_ERROR_OBJECT = 64_i32
    WBEM_FLAG_RETURN_ERROR_OBJECT = 0_i32
    WBEM_FLAG_SEND_STATUS = 128_i32
    WBEM_FLAG_DONT_SEND_STATUS = 0_i32
    WBEM_FLAG_ENSURE_LOCATABLE = 256_i32
    WBEM_FLAG_DIRECT_READ = 512_i32
    WBEM_FLAG_SEND_ONLY_SELECTED = 0_i32
    WBEM_RETURN_WHEN_COMPLETE = 0_i32
    WBEM_RETURN_IMMEDIATELY = 16_i32
    WBEM_MASK_RESERVED_FLAGS = 126976_i32
    WBEM_FLAG_USE_AMENDED_QUALIFIERS = 131072_i32
    WBEM_FLAG_STRONG_VALIDATION = 1048576_i32
  end
  enum WBEM_STATUS_TYPE
    WBEM_STATUS_COMPLETE = 0_i32
    WBEM_STATUS_REQUIREMENTS = 1_i32
    WBEM_STATUS_PROGRESS = 2_i32
    WBEM_STATUS_LOGGING_INFORMATION = 256_i32
    WBEM_STATUS_LOGGING_INFORMATION_PROVIDER = 512_i32
    WBEM_STATUS_LOGGING_INFORMATION_HOST = 1024_i32
    WBEM_STATUS_LOGGING_INFORMATION_REPOSITORY = 2048_i32
    WBEM_STATUS_LOGGING_INFORMATION_ESS = 4096_i32
  end
  enum WBEM_TIMEOUT_TYPE
    WBEM_NO_WAIT = 0_i32
    WBEM_INFINITE = -1_i32
  end
  enum WBEM_CONDITION_FLAG_TYPE
    WBEM_FLAG_ALWAYS = 0_i32
    WBEM_FLAG_ONLY_IF_TRUE = 1_i32
    WBEM_FLAG_ONLY_IF_FALSE = 2_i32
    WBEM_FLAG_ONLY_IF_IDENTICAL = 3_i32
    WBEM_MASK_PRIMARY_CONDITION = 3_i32
    WBEM_FLAG_KEYS_ONLY = 4_i32
    WBEM_FLAG_REFS_ONLY = 8_i32
    WBEM_FLAG_LOCAL_ONLY = 16_i32
    WBEM_FLAG_PROPAGATED_ONLY = 32_i32
    WBEM_FLAG_SYSTEM_ONLY = 48_i32
    WBEM_FLAG_NONSYSTEM_ONLY = 64_i32
    WBEM_MASK_CONDITION_ORIGIN = 112_i32
    WBEM_FLAG_CLASS_OVERRIDES_ONLY = 256_i32
    WBEM_FLAG_CLASS_LOCAL_AND_OVERRIDES = 512_i32
    WBEM_MASK_CLASS_CONDITION = 768_i32
  end
  enum WBEM_FLAVOR_TYPE
    WBEM_FLAVOR_DONT_PROPAGATE = 0_i32
    WBEM_FLAVOR_FLAG_PROPAGATE_TO_INSTANCE = 1_i32
    WBEM_FLAVOR_FLAG_PROPAGATE_TO_DERIVED_CLASS = 2_i32
    WBEM_FLAVOR_MASK_PROPAGATION = 15_i32
    WBEM_FLAVOR_OVERRIDABLE = 0_i32
    WBEM_FLAVOR_NOT_OVERRIDABLE = 16_i32
    WBEM_FLAVOR_MASK_PERMISSIONS = 16_i32
    WBEM_FLAVOR_ORIGIN_LOCAL = 0_i32
    WBEM_FLAVOR_ORIGIN_PROPAGATED = 32_i32
    WBEM_FLAVOR_ORIGIN_SYSTEM = 64_i32
    WBEM_FLAVOR_MASK_ORIGIN = 96_i32
    WBEM_FLAVOR_NOT_AMENDED = 0_i32
    WBEM_FLAVOR_AMENDED = 128_i32
    WBEM_FLAVOR_MASK_AMENDED = 128_i32
  end
  enum WBEM_QUERY_FLAG_TYPE
    WBEM_FLAG_DEEP = 0_i32
    WBEM_FLAG_SHALLOW = 1_i32
    WBEM_FLAG_PROTOTYPE = 2_i32
  end
  enum WBEM_SECURITY_FLAGS
    WBEM_ENABLE = 1_i32
    WBEM_METHOD_EXECUTE = 2_i32
    WBEM_FULL_WRITE_REP = 4_i32
    WBEM_PARTIAL_WRITE_REP = 8_i32
    WBEM_WRITE_PROVIDER = 16_i32
    WBEM_REMOTE_ACCESS = 32_i32
    WBEM_RIGHT_SUBSCRIBE = 64_i32
    WBEM_RIGHT_PUBLISH = 128_i32
  end
  enum WBEM_LIMITATION_FLAG_TYPE
    WBEM_FLAG_EXCLUDE_OBJECT_QUALIFIERS = 16_i32
    WBEM_FLAG_EXCLUDE_PROPERTY_QUALIFIERS = 32_i32
  end
  enum WBEM_TEXT_FLAG_TYPE
    WBEM_FLAG_NO_FLAVORS = 1_i32
  end
  enum WBEM_COMPARISON_FLAG
    WBEM_COMPARISON_INCLUDE_ALL = 0_i32
    WBEM_FLAG_IGNORE_QUALIFIERS = 1_i32
    WBEM_FLAG_IGNORE_OBJECT_SOURCE = 2_i32
    WBEM_FLAG_IGNORE_DEFAULT_VALUES = 4_i32
    WBEM_FLAG_IGNORE_CLASS = 8_i32
    WBEM_FLAG_IGNORE_CASE = 16_i32
    WBEM_FLAG_IGNORE_FLAVOR = 32_i32
  end
  enum WBEM_LOCKING
    WBEM_FLAG_ALLOW_READ = 1_i32
  end
  enum CIMTYPE_ENUMERATION
    CIM_ILLEGAL = 4095_i32
    CIM_EMPTY = 0_i32
    CIM_SINT8 = 16_i32
    CIM_UINT8 = 17_i32
    CIM_SINT16 = 2_i32
    CIM_UINT16 = 18_i32
    CIM_SINT32 = 3_i32
    CIM_UINT32 = 19_i32
    CIM_SINT64 = 20_i32
    CIM_UINT64 = 21_i32
    CIM_REAL32 = 4_i32
    CIM_REAL64 = 5_i32
    CIM_BOOLEAN = 11_i32
    CIM_STRING = 8_i32
    CIM_DATETIME = 101_i32
    CIM_REFERENCE = 102_i32
    CIM_CHAR16 = 103_i32
    CIM_OBJECT = 13_i32
    CIM_FLAG_ARRAY = 8192_i32
  end
  enum WBEM_BACKUP_RESTORE_FLAGS
    WBEM_FLAG_BACKUP_RESTORE_DEFAULT = 0_i32
    WBEM_FLAG_BACKUP_RESTORE_FORCE_SHUTDOWN = 1_i32
  end
  enum WBEM_REFRESHER_FLAGS
    WBEM_FLAG_REFRESH_AUTO_RECONNECT = 0_i32
    WBEM_FLAG_REFRESH_NO_AUTO_RECONNECT = 1_i32
  end
  enum WBEM_SHUTDOWN_FLAGS
    WBEM_SHUTDOWN_UNLOAD_COMPONENT = 1_i32
    WBEM_SHUTDOWN_WMI = 2_i32
    WBEM_SHUTDOWN_OS = 3_i32
  end
  enum WBEMSTATUS_FORMAT
    WBEMSTATUS_FORMAT_NEWLINE = 0_i32
    WBEMSTATUS_FORMAT_NO_NEWLINE = 1_i32
  end
  enum WBEM_LIMITS
    WBEM_MAX_IDENTIFIER = 4096_i32
    WBEM_MAX_QUERY = 16384_i32
    WBEM_MAX_PATH = 8192_i32
    WBEM_MAX_OBJECT_NESTING = 64_i32
    WBEM_MAX_USER_PROPERTIES = 1024_i32
  end
  enum WBEMSTATUS
    WBEM_NO_ERROR = 0_i32
    WBEM_S_NO_ERROR = 0_i32
    WBEM_S_SAME = 0_i32
    WBEM_S_FALSE = 1_i32
    WBEM_S_ALREADY_EXISTS = 262145_i32
    WBEM_S_RESET_TO_DEFAULT = 262146_i32
    WBEM_S_DIFFERENT = 262147_i32
    WBEM_S_TIMEDOUT = 262148_i32
    WBEM_S_NO_MORE_DATA = 262149_i32
    WBEM_S_OPERATION_CANCELLED = 262150_i32
    WBEM_S_PENDING = 262151_i32
    WBEM_S_DUPLICATE_OBJECTS = 262152_i32
    WBEM_S_ACCESS_DENIED = 262153_i32
    WBEM_S_PARTIAL_RESULTS = 262160_i32
    WBEM_S_SOURCE_NOT_AVAILABLE = 262167_i32
    WBEM_E_FAILED = -2147217407_i32
    WBEM_E_NOT_FOUND = -2147217406_i32
    WBEM_E_ACCESS_DENIED = -2147217405_i32
    WBEM_E_PROVIDER_FAILURE = -2147217404_i32
    WBEM_E_TYPE_MISMATCH = -2147217403_i32
    WBEM_E_OUT_OF_MEMORY = -2147217402_i32
    WBEM_E_INVALID_CONTEXT = -2147217401_i32
    WBEM_E_INVALID_PARAMETER = -2147217400_i32
    WBEM_E_NOT_AVAILABLE = -2147217399_i32
    WBEM_E_CRITICAL_ERROR = -2147217398_i32
    WBEM_E_INVALID_STREAM = -2147217397_i32
    WBEM_E_NOT_SUPPORTED = -2147217396_i32
    WBEM_E_INVALID_SUPERCLASS = -2147217395_i32
    WBEM_E_INVALID_NAMESPACE = -2147217394_i32
    WBEM_E_INVALID_OBJECT = -2147217393_i32
    WBEM_E_INVALID_CLASS = -2147217392_i32
    WBEM_E_PROVIDER_NOT_FOUND = -2147217391_i32
    WBEM_E_INVALID_PROVIDER_REGISTRATION = -2147217390_i32
    WBEM_E_PROVIDER_LOAD_FAILURE = -2147217389_i32
    WBEM_E_INITIALIZATION_FAILURE = -2147217388_i32
    WBEM_E_TRANSPORT_FAILURE = -2147217387_i32
    WBEM_E_INVALID_OPERATION = -2147217386_i32
    WBEM_E_INVALID_QUERY = -2147217385_i32
    WBEM_E_INVALID_QUERY_TYPE = -2147217384_i32
    WBEM_E_ALREADY_EXISTS = -2147217383_i32
    WBEM_E_OVERRIDE_NOT_ALLOWED = -2147217382_i32
    WBEM_E_PROPAGATED_QUALIFIER = -2147217381_i32
    WBEM_E_PROPAGATED_PROPERTY = -2147217380_i32
    WBEM_E_UNEXPECTED = -2147217379_i32
    WBEM_E_ILLEGAL_OPERATION = -2147217378_i32
    WBEM_E_CANNOT_BE_KEY = -2147217377_i32
    WBEM_E_INCOMPLETE_CLASS = -2147217376_i32
    WBEM_E_INVALID_SYNTAX = -2147217375_i32
    WBEM_E_NONDECORATED_OBJECT = -2147217374_i32
    WBEM_E_READ_ONLY = -2147217373_i32
    WBEM_E_PROVIDER_NOT_CAPABLE = -2147217372_i32
    WBEM_E_CLASS_HAS_CHILDREN = -2147217371_i32
    WBEM_E_CLASS_HAS_INSTANCES = -2147217370_i32
    WBEM_E_QUERY_NOT_IMPLEMENTED = -2147217369_i32
    WBEM_E_ILLEGAL_NULL = -2147217368_i32
    WBEM_E_INVALID_QUALIFIER_TYPE = -2147217367_i32
    WBEM_E_INVALID_PROPERTY_TYPE = -2147217366_i32
    WBEM_E_VALUE_OUT_OF_RANGE = -2147217365_i32
    WBEM_E_CANNOT_BE_SINGLETON = -2147217364_i32
    WBEM_E_INVALID_CIM_TYPE = -2147217363_i32
    WBEM_E_INVALID_METHOD = -2147217362_i32
    WBEM_E_INVALID_METHOD_PARAMETERS = -2147217361_i32
    WBEM_E_SYSTEM_PROPERTY = -2147217360_i32
    WBEM_E_INVALID_PROPERTY = -2147217359_i32
    WBEM_E_CALL_CANCELLED = -2147217358_i32
    WBEM_E_SHUTTING_DOWN = -2147217357_i32
    WBEM_E_PROPAGATED_METHOD = -2147217356_i32
    WBEM_E_UNSUPPORTED_PARAMETER = -2147217355_i32
    WBEM_E_MISSING_PARAMETER_ID = -2147217354_i32
    WBEM_E_INVALID_PARAMETER_ID = -2147217353_i32
    WBEM_E_NONCONSECUTIVE_PARAMETER_IDS = -2147217352_i32
    WBEM_E_PARAMETER_ID_ON_RETVAL = -2147217351_i32
    WBEM_E_INVALID_OBJECT_PATH = -2147217350_i32
    WBEM_E_OUT_OF_DISK_SPACE = -2147217349_i32
    WBEM_E_BUFFER_TOO_SMALL = -2147217348_i32
    WBEM_E_UNSUPPORTED_PUT_EXTENSION = -2147217347_i32
    WBEM_E_UNKNOWN_OBJECT_TYPE = -2147217346_i32
    WBEM_E_UNKNOWN_PACKET_TYPE = -2147217345_i32
    WBEM_E_MARSHAL_VERSION_MISMATCH = -2147217344_i32
    WBEM_E_MARSHAL_INVALID_SIGNATURE = -2147217343_i32
    WBEM_E_INVALID_QUALIFIER = -2147217342_i32
    WBEM_E_INVALID_DUPLICATE_PARAMETER = -2147217341_i32
    WBEM_E_TOO_MUCH_DATA = -2147217340_i32
    WBEM_E_SERVER_TOO_BUSY = -2147217339_i32
    WBEM_E_INVALID_FLAVOR = -2147217338_i32
    WBEM_E_CIRCULAR_REFERENCE = -2147217337_i32
    WBEM_E_UNSUPPORTED_CLASS_UPDATE = -2147217336_i32
    WBEM_E_CANNOT_CHANGE_KEY_INHERITANCE = -2147217335_i32
    WBEM_E_CANNOT_CHANGE_INDEX_INHERITANCE = -2147217328_i32
    WBEM_E_TOO_MANY_PROPERTIES = -2147217327_i32
    WBEM_E_UPDATE_TYPE_MISMATCH = -2147217326_i32
    WBEM_E_UPDATE_OVERRIDE_NOT_ALLOWED = -2147217325_i32
    WBEM_E_UPDATE_PROPAGATED_METHOD = -2147217324_i32
    WBEM_E_METHOD_NOT_IMPLEMENTED = -2147217323_i32
    WBEM_E_METHOD_DISABLED = -2147217322_i32
    WBEM_E_REFRESHER_BUSY = -2147217321_i32
    WBEM_E_UNPARSABLE_QUERY = -2147217320_i32
    WBEM_E_NOT_EVENT_CLASS = -2147217319_i32
    WBEM_E_MISSING_GROUP_WITHIN = -2147217318_i32
    WBEM_E_MISSING_AGGREGATION_LIST = -2147217317_i32
    WBEM_E_PROPERTY_NOT_AN_OBJECT = -2147217316_i32
    WBEM_E_AGGREGATING_BY_OBJECT = -2147217315_i32
    WBEM_E_UNINTERPRETABLE_PROVIDER_QUERY = -2147217313_i32
    WBEM_E_BACKUP_RESTORE_WINMGMT_RUNNING = -2147217312_i32
    WBEM_E_QUEUE_OVERFLOW = -2147217311_i32
    WBEM_E_PRIVILEGE_NOT_HELD = -2147217310_i32
    WBEM_E_INVALID_OPERATOR = -2147217309_i32
    WBEM_E_LOCAL_CREDENTIALS = -2147217308_i32
    WBEM_E_CANNOT_BE_ABSTRACT = -2147217307_i32
    WBEM_E_AMENDED_OBJECT = -2147217306_i32
    WBEM_E_CLIENT_TOO_SLOW = -2147217305_i32
    WBEM_E_NULL_SECURITY_DESCRIPTOR = -2147217304_i32
    WBEM_E_TIMED_OUT = -2147217303_i32
    WBEM_E_INVALID_ASSOCIATION = -2147217302_i32
    WBEM_E_AMBIGUOUS_OPERATION = -2147217301_i32
    WBEM_E_QUOTA_VIOLATION = -2147217300_i32
    WBEM_E_RESERVED_001 = -2147217299_i32
    WBEM_E_RESERVED_002 = -2147217298_i32
    WBEM_E_UNSUPPORTED_LOCALE = -2147217297_i32
    WBEM_E_HANDLE_OUT_OF_DATE = -2147217296_i32
    WBEM_E_CONNECTION_FAILED = -2147217295_i32
    WBEM_E_INVALID_HANDLE_REQUEST = -2147217294_i32
    WBEM_E_PROPERTY_NAME_TOO_WIDE = -2147217293_i32
    WBEM_E_CLASS_NAME_TOO_WIDE = -2147217292_i32
    WBEM_E_METHOD_NAME_TOO_WIDE = -2147217291_i32
    WBEM_E_QUALIFIER_NAME_TOO_WIDE = -2147217290_i32
    WBEM_E_RERUN_COMMAND = -2147217289_i32
    WBEM_E_DATABASE_VER_MISMATCH = -2147217288_i32
    WBEM_E_VETO_DELETE = -2147217287_i32
    WBEM_E_VETO_PUT = -2147217286_i32
    WBEM_E_INVALID_LOCALE = -2147217280_i32
    WBEM_E_PROVIDER_SUSPENDED = -2147217279_i32
    WBEM_E_SYNCHRONIZATION_REQUIRED = -2147217278_i32
    WBEM_E_NO_SCHEMA = -2147217277_i32
    WBEM_E_PROVIDER_ALREADY_REGISTERED = -2147217276_i32
    WBEM_E_PROVIDER_NOT_REGISTERED = -2147217275_i32
    WBEM_E_FATAL_TRANSPORT_ERROR = -2147217274_i32
    WBEM_E_ENCRYPTED_CONNECTION_REQUIRED = -2147217273_i32
    WBEM_E_PROVIDER_TIMED_OUT = -2147217272_i32
    WBEM_E_NO_KEY = -2147217271_i32
    WBEM_E_PROVIDER_DISABLED = -2147217270_i32
    WBEMESS_E_REGISTRATION_TOO_BROAD = -2147213311_i32
    WBEMESS_E_REGISTRATION_TOO_PRECISE = -2147213310_i32
    WBEMESS_E_AUTHZ_NOT_PRIVILEGED = -2147213309_i32
    WBEMMOF_E_EXPECTED_QUALIFIER_NAME = -2147205119_i32
    WBEMMOF_E_EXPECTED_SEMI = -2147205118_i32
    WBEMMOF_E_EXPECTED_OPEN_BRACE = -2147205117_i32
    WBEMMOF_E_EXPECTED_CLOSE_BRACE = -2147205116_i32
    WBEMMOF_E_EXPECTED_CLOSE_BRACKET = -2147205115_i32
    WBEMMOF_E_EXPECTED_CLOSE_PAREN = -2147205114_i32
    WBEMMOF_E_ILLEGAL_CONSTANT_VALUE = -2147205113_i32
    WBEMMOF_E_EXPECTED_TYPE_IDENTIFIER = -2147205112_i32
    WBEMMOF_E_EXPECTED_OPEN_PAREN = -2147205111_i32
    WBEMMOF_E_UNRECOGNIZED_TOKEN = -2147205110_i32
    WBEMMOF_E_UNRECOGNIZED_TYPE = -2147205109_i32
    WBEMMOF_E_EXPECTED_PROPERTY_NAME = -2147205108_i32
    WBEMMOF_E_TYPEDEF_NOT_SUPPORTED = -2147205107_i32
    WBEMMOF_E_UNEXPECTED_ALIAS = -2147205106_i32
    WBEMMOF_E_UNEXPECTED_ARRAY_INIT = -2147205105_i32
    WBEMMOF_E_INVALID_AMENDMENT_SYNTAX = -2147205104_i32
    WBEMMOF_E_INVALID_DUPLICATE_AMENDMENT = -2147205103_i32
    WBEMMOF_E_INVALID_PRAGMA = -2147205102_i32
    WBEMMOF_E_INVALID_NAMESPACE_SYNTAX = -2147205101_i32
    WBEMMOF_E_EXPECTED_CLASS_NAME = -2147205100_i32
    WBEMMOF_E_TYPE_MISMATCH = -2147205099_i32
    WBEMMOF_E_EXPECTED_ALIAS_NAME = -2147205098_i32
    WBEMMOF_E_INVALID_CLASS_DECLARATION = -2147205097_i32
    WBEMMOF_E_INVALID_INSTANCE_DECLARATION = -2147205096_i32
    WBEMMOF_E_EXPECTED_DOLLAR = -2147205095_i32
    WBEMMOF_E_CIMTYPE_QUALIFIER = -2147205094_i32
    WBEMMOF_E_DUPLICATE_PROPERTY = -2147205093_i32
    WBEMMOF_E_INVALID_NAMESPACE_SPECIFICATION = -2147205092_i32
    WBEMMOF_E_OUT_OF_RANGE = -2147205091_i32
    WBEMMOF_E_INVALID_FILE = -2147205090_i32
    WBEMMOF_E_ALIASES_IN_EMBEDDED = -2147205089_i32
    WBEMMOF_E_NULL_ARRAY_ELEM = -2147205088_i32
    WBEMMOF_E_DUPLICATE_QUALIFIER = -2147205087_i32
    WBEMMOF_E_EXPECTED_FLAVOR_TYPE = -2147205086_i32
    WBEMMOF_E_INCOMPATIBLE_FLAVOR_TYPES = -2147205085_i32
    WBEMMOF_E_MULTIPLE_ALIASES = -2147205084_i32
    WBEMMOF_E_INCOMPATIBLE_FLAVOR_TYPES2 = -2147205083_i32
    WBEMMOF_E_NO_ARRAYS_RETURNED = -2147205082_i32
    WBEMMOF_E_MUST_BE_IN_OR_OUT = -2147205081_i32
    WBEMMOF_E_INVALID_FLAGS_SYNTAX = -2147205080_i32
    WBEMMOF_E_EXPECTED_BRACE_OR_BAD_TYPE = -2147205079_i32
    WBEMMOF_E_UNSUPPORTED_CIMV22_QUAL_VALUE = -2147205078_i32
    WBEMMOF_E_UNSUPPORTED_CIMV22_DATA_TYPE = -2147205077_i32
    WBEMMOF_E_INVALID_DELETEINSTANCE_SYNTAX = -2147205076_i32
    WBEMMOF_E_INVALID_QUALIFIER_SYNTAX = -2147205075_i32
    WBEMMOF_E_QUALIFIER_USED_OUTSIDE_SCOPE = -2147205074_i32
    WBEMMOF_E_ERROR_CREATING_TEMP_FILE = -2147205073_i32
    WBEMMOF_E_ERROR_INVALID_INCLUDE_FILE = -2147205072_i32
    WBEMMOF_E_INVALID_DELETECLASS_SYNTAX = -2147205071_i32
  end
  enum WMI_OBJ_TEXT
    WMI_OBJ_TEXT_CIM_DTD_2_0 = 1_i32
    WMI_OBJ_TEXT_WMI_DTD_2_0 = 2_i32
    WMI_OBJ_TEXT_WMI_EXT1 = 3_i32
    WMI_OBJ_TEXT_WMI_EXT2 = 4_i32
    WMI_OBJ_TEXT_WMI_EXT3 = 5_i32
    WMI_OBJ_TEXT_WMI_EXT4 = 6_i32
    WMI_OBJ_TEXT_WMI_EXT5 = 7_i32
    WMI_OBJ_TEXT_WMI_EXT6 = 8_i32
    WMI_OBJ_TEXT_WMI_EXT7 = 9_i32
    WMI_OBJ_TEXT_WMI_EXT8 = 10_i32
    WMI_OBJ_TEXT_WMI_EXT9 = 11_i32
    WMI_OBJ_TEXT_WMI_EXT10 = 12_i32
    WMI_OBJ_TEXT_LAST = 13_i32
  end
  enum WBEM_COMPILER_OPTIONS
    WBEM_FLAG_CHECK_ONLY = 1_i32
    WBEM_FLAG_AUTORECOVER = 2_i32
    WBEM_FLAG_WMI_CHECK = 4_i32
    WBEM_FLAG_CONSOLE_PRINT = 8_i32
    WBEM_FLAG_DONT_ADD_TO_LIST = 16_i32
    WBEM_FLAG_SPLIT_FILES = 32_i32
    WBEM_FLAG_STORE_FILE = 256_i32
  end
  enum WBEM_CONNECT_OPTIONS
    WBEM_FLAG_CONNECT_REPOSITORY_ONLY = 64_i32
    WBEM_FLAG_CONNECT_USE_MAX_WAIT = 128_i32
    WBEM_FLAG_CONNECT_PROVIDERS = 256_i32
  end
  enum WBEM_UNSECAPP_FLAG_TYPE
    WBEM_FLAG_UNSECAPP_DEFAULT_CHECK_ACCESS = 0_i32
    WBEM_FLAG_UNSECAPP_CHECK_ACCESS = 1_i32
    WBEM_FLAG_UNSECAPP_DONT_CHECK_ACCESS = 2_i32
  end
  enum WBEM_INFORMATION_FLAG_TYPE
    WBEM_FLAG_SHORT_NAME = 1_i32
    WBEM_FLAG_LONG_NAME = 2_i32
  end
  enum WBEM_PROVIDER_REQUIREMENTS_TYPE
    WBEM_REQUIREMENTS_START_POSTFILTER = 0_i32
    WBEM_REQUIREMENTS_STOP_POSTFILTER = 1_i32
    WBEM_REQUIREMENTS_RECHECK_SUBSCRIPTIONS = 2_i32
  end
  enum WBEM_EXTRA_RETURN_CODES
    WBEM_S_INITIALIZED = 0_i32
    WBEM_S_LIMITED_SERVICE = 274433_i32
    WBEM_S_INDIRECTLY_UPDATED = 274434_i32
    WBEM_S_SUBJECT_TO_SDS = 274435_i32
    WBEM_E_RETRY_LATER = -2147209215_i32
    WBEM_E_RESOURCE_CONTENTION = -2147209214_i32
  end
  enum WBEM_PROVIDER_FLAGS
    WBEM_FLAG_OWNER_UPDATE = 65536_i32
  end
  enum WBEM_BATCH_TYPE
    WBEM_FLAG_BATCH_IF_NEEDED = 0_i32
    WBEM_FLAG_MUST_BATCH = 1_i32
    WBEM_FLAG_MUST_NOT_BATCH = 2_i32
  end
  enum WbemChangeFlagEnum
    Wbemchangeflagcreateorupdate = 0_i32
    Wbemchangeflagupdateonly = 1_i32
    Wbemchangeflagcreateonly = 2_i32
    Wbemchangeflagupdatecompatible = 0_i32
    Wbemchangeflagupdatesafemode = 32_i32
    Wbemchangeflagupdateforcemode = 64_i32
    Wbemchangeflagstrongvalidation = 128_i32
    Wbemchangeflagadvisory = 65536_i32
  end
  enum WbemFlagEnum
    Wbemflagreturnimmediately = 16_i32
    Wbemflagreturnwhencomplete = 0_i32
    Wbemflagbidirectional = 0_i32
    Wbemflagforwardonly = 32_i32
    Wbemflagnoerrorobject = 64_i32
    Wbemflagreturnerrorobject = 0_i32
    Wbemflagsendstatus = 128_i32
    Wbemflagdontsendstatus = 0_i32
    Wbemflagensurelocatable = 256_i32
    Wbemflagdirectread = 512_i32
    Wbemflagsendonlyselected = 0_i32
    Wbemflaguseamendedqualifiers = 131072_i32
    Wbemflaggetdefault = 0_i32
    Wbemflagspawninstance = 1_i32
    Wbemflagusecurrenttime = 1_i32
  end
  enum WbemQueryFlagEnum
    Wbemqueryflagdeep = 0_i32
    Wbemqueryflagshallow = 1_i32
    Wbemqueryflagprototype = 2_i32
  end
  enum WbemTextFlagEnum
    Wbemtextflagnoflavors = 1_i32
  end
  enum WbemTimeout
    Wbemtimeoutinfinite = -1_i32
  end
  enum WbemComparisonFlagEnum
    Wbemcomparisonflagincludeall = 0_i32
    Wbemcomparisonflagignorequalifiers = 1_i32
    Wbemcomparisonflagignoreobjectsource = 2_i32
    Wbemcomparisonflagignoredefaultvalues = 4_i32
    Wbemcomparisonflagignoreclass = 8_i32
    Wbemcomparisonflagignorecase = 16_i32
    Wbemcomparisonflagignoreflavor = 32_i32
  end
  enum WbemCimtypeEnum
    Wbemcimtypesint8 = 16_i32
    Wbemcimtypeuint8 = 17_i32
    Wbemcimtypesint16 = 2_i32
    Wbemcimtypeuint16 = 18_i32
    Wbemcimtypesint32 = 3_i32
    Wbemcimtypeuint32 = 19_i32
    Wbemcimtypesint64 = 20_i32
    Wbemcimtypeuint64 = 21_i32
    Wbemcimtypereal32 = 4_i32
    Wbemcimtypereal64 = 5_i32
    Wbemcimtypeboolean = 11_i32
    Wbemcimtypestring = 8_i32
    Wbemcimtypedatetime = 101_i32
    Wbemcimtypereference = 102_i32
    Wbemcimtypechar16 = 103_i32
    Wbemcimtypeobject = 13_i32
  end
  enum WbemErrorEnum
    Wbemnoerr = 0_i32
    Wbemerrfailed = -2147217407_i32
    Wbemerrnotfound = -2147217406_i32
    Wbemerraccessdenied = -2147217405_i32
    Wbemerrproviderfailure = -2147217404_i32
    Wbemerrtypemismatch = -2147217403_i32
    Wbemerroutofmemory = -2147217402_i32
    Wbemerrinvalidcontext = -2147217401_i32
    Wbemerrinvalidparameter = -2147217400_i32
    Wbemerrnotavailable = -2147217399_i32
    Wbemerrcriticalerror = -2147217398_i32
    Wbemerrinvalidstream = -2147217397_i32
    Wbemerrnotsupported = -2147217396_i32
    Wbemerrinvalidsuperclass = -2147217395_i32
    Wbemerrinvalidnamespace = -2147217394_i32
    Wbemerrinvalidobject = -2147217393_i32
    Wbemerrinvalidclass = -2147217392_i32
    Wbemerrprovidernotfound = -2147217391_i32
    Wbemerrinvalidproviderregistration = -2147217390_i32
    Wbemerrproviderloadfailure = -2147217389_i32
    Wbemerrinitializationfailure = -2147217388_i32
    Wbemerrtransportfailure = -2147217387_i32
    Wbemerrinvalidoperation = -2147217386_i32
    Wbemerrinvalidquery = -2147217385_i32
    Wbemerrinvalidquerytype = -2147217384_i32
    Wbemerralreadyexists = -2147217383_i32
    Wbemerroverridenotallowed = -2147217382_i32
    Wbemerrpropagatedqualifier = -2147217381_i32
    Wbemerrpropagatedproperty = -2147217380_i32
    Wbemerrunexpected = -2147217379_i32
    Wbemerrillegaloperation = -2147217378_i32
    Wbemerrcannotbekey = -2147217377_i32
    Wbemerrincompleteclass = -2147217376_i32
    Wbemerrinvalidsyntax = -2147217375_i32
    Wbemerrnondecoratedobject = -2147217374_i32
    Wbemerrreadonly = -2147217373_i32
    Wbemerrprovidernotcapable = -2147217372_i32
    Wbemerrclasshaschildren = -2147217371_i32
    Wbemerrclasshasinstances = -2147217370_i32
    Wbemerrquerynotimplemented = -2147217369_i32
    Wbemerrillegalnull = -2147217368_i32
    Wbemerrinvalidqualifiertype = -2147217367_i32
    Wbemerrinvalidpropertytype = -2147217366_i32
    Wbemerrvalueoutofrange = -2147217365_i32
    Wbemerrcannotbesingleton = -2147217364_i32
    Wbemerrinvalidcimtype = -2147217363_i32
    Wbemerrinvalidmethod = -2147217362_i32
    Wbemerrinvalidmethodparameters = -2147217361_i32
    Wbemerrsystemproperty = -2147217360_i32
    Wbemerrinvalidproperty = -2147217359_i32
    Wbemerrcallcancelled = -2147217358_i32
    Wbemerrshuttingdown = -2147217357_i32
    Wbemerrpropagatedmethod = -2147217356_i32
    Wbemerrunsupportedparameter = -2147217355_i32
    Wbemerrmissingparameter = -2147217354_i32
    Wbemerrinvalidparameterid = -2147217353_i32
    Wbemerrnonconsecutiveparameterids = -2147217352_i32
    Wbemerrparameteridonretval = -2147217351_i32
    Wbemerrinvalidobjectpath = -2147217350_i32
    Wbemerroutofdiskspace = -2147217349_i32
    Wbemerrbuffertoosmall = -2147217348_i32
    Wbemerrunsupportedputextension = -2147217347_i32
    Wbemerrunknownobjecttype = -2147217346_i32
    Wbemerrunknownpackettype = -2147217345_i32
    Wbemerrmarshalversionmismatch = -2147217344_i32
    Wbemerrmarshalinvalidsignature = -2147217343_i32
    Wbemerrinvalidqualifier = -2147217342_i32
    Wbemerrinvalidduplicateparameter = -2147217341_i32
    Wbemerrtoomuchdata = -2147217340_i32
    Wbemerrservertoobusy = -2147217339_i32
    Wbemerrinvalidflavor = -2147217338_i32
    Wbemerrcircularreference = -2147217337_i32
    Wbemerrunsupportedclassupdate = -2147217336_i32
    Wbemerrcannotchangekeyinheritance = -2147217335_i32
    Wbemerrcannotchangeindexinheritance = -2147217328_i32
    Wbemerrtoomanyproperties = -2147217327_i32
    Wbemerrupdatetypemismatch = -2147217326_i32
    Wbemerrupdateoverridenotallowed = -2147217325_i32
    Wbemerrupdatepropagatedmethod = -2147217324_i32
    Wbemerrmethodnotimplemented = -2147217323_i32
    Wbemerrmethoddisabled = -2147217322_i32
    Wbemerrrefresherbusy = -2147217321_i32
    Wbemerrunparsablequery = -2147217320_i32
    Wbemerrnoteventclass = -2147217319_i32
    Wbemerrmissinggroupwithin = -2147217318_i32
    Wbemerrmissingaggregationlist = -2147217317_i32
    Wbemerrpropertynotanobject = -2147217316_i32
    Wbemerraggregatingbyobject = -2147217315_i32
    Wbemerruninterpretableproviderquery = -2147217313_i32
    Wbemerrbackuprestorewinmgmtrunning = -2147217312_i32
    Wbemerrqueueoverflow = -2147217311_i32
    Wbemerrprivilegenotheld = -2147217310_i32
    Wbemerrinvalidoperator = -2147217309_i32
    Wbemerrlocalcredentials = -2147217308_i32
    Wbemerrcannotbeabstract = -2147217307_i32
    Wbemerramendedobject = -2147217306_i32
    Wbemerrclienttooslow = -2147217305_i32
    Wbemerrnullsecuritydescriptor = -2147217304_i32
    Wbemerrtimeout = -2147217303_i32
    Wbemerrinvalidassociation = -2147217302_i32
    Wbemerrambiguousoperation = -2147217301_i32
    Wbemerrquotaviolation = -2147217300_i32
    Wbemerrtransactionconflict = -2147217299_i32
    Wbemerrforcedrollback = -2147217298_i32
    Wbemerrunsupportedlocale = -2147217297_i32
    Wbemerrhandleoutofdate = -2147217296_i32
    Wbemerrconnectionfailed = -2147217295_i32
    Wbemerrinvalidhandlerequest = -2147217294_i32
    Wbemerrpropertynametoowide = -2147217293_i32
    Wbemerrclassnametoowide = -2147217292_i32
    Wbemerrmethodnametoowide = -2147217291_i32
    Wbemerrqualifiernametoowide = -2147217290_i32
    Wbemerrreruncommand = -2147217289_i32
    Wbemerrdatabasevermismatch = -2147217288_i32
    Wbemerrvetoput = -2147217287_i32
    Wbemerrvetodelete = -2147217286_i32
    Wbemerrinvalidlocale = -2147217280_i32
    Wbemerrprovidersuspended = -2147217279_i32
    Wbemerrsynchronizationrequired = -2147217278_i32
    Wbemerrnoschema = -2147217277_i32
    Wbemerrprovideralreadyregistered = -2147217276_i32
    Wbemerrprovidernotregistered = -2147217275_i32
    Wbemerrfataltransporterror = -2147217274_i32
    Wbemerrencryptedconnectionrequired = -2147217273_i32
    Wbemerrregistrationtoobroad = -2147213311_i32
    Wbemerrregistrationtooprecise = -2147213310_i32
    Wbemerrtimedout = -2147209215_i32
    Wbemerrresettodefault = -2147209214_i32
  end
  enum WbemAuthenticationLevelEnum
    Wbemauthenticationleveldefault = 0_i32
    Wbemauthenticationlevelnone = 1_i32
    Wbemauthenticationlevelconnect = 2_i32
    Wbemauthenticationlevelcall = 3_i32
    Wbemauthenticationlevelpkt = 4_i32
    Wbemauthenticationlevelpktintegrity = 5_i32
    Wbemauthenticationlevelpktprivacy = 6_i32
  end
  enum WbemImpersonationLevelEnum
    Wbemimpersonationlevelanonymous = 1_i32
    Wbemimpersonationlevelidentify = 2_i32
    Wbemimpersonationlevelimpersonate = 3_i32
    Wbemimpersonationleveldelegate = 4_i32
  end
  enum WbemPrivilegeEnum
    Wbemprivilegecreatetoken = 1_i32
    Wbemprivilegeprimarytoken = 2_i32
    Wbemprivilegelockmemory = 3_i32
    Wbemprivilegeincreasequota = 4_i32
    Wbemprivilegemachineaccount = 5_i32
    Wbemprivilegetcb = 6_i32
    Wbemprivilegesecurity = 7_i32
    Wbemprivilegetakeownership = 8_i32
    Wbemprivilegeloaddriver = 9_i32
    Wbemprivilegesystemprofile = 10_i32
    Wbemprivilegesystemtime = 11_i32
    Wbemprivilegeprofilesingleprocess = 12_i32
    Wbemprivilegeincreasebasepriority = 13_i32
    Wbemprivilegecreatepagefile = 14_i32
    Wbemprivilegecreatepermanent = 15_i32
    Wbemprivilegebackup = 16_i32
    Wbemprivilegerestore = 17_i32
    Wbemprivilegeshutdown = 18_i32
    Wbemprivilegedebug = 19_i32
    Wbemprivilegeaudit = 20_i32
    Wbemprivilegesystemenvironment = 21_i32
    Wbemprivilegechangenotify = 22_i32
    Wbemprivilegeremoteshutdown = 23_i32
    Wbemprivilegeundock = 24_i32
    Wbemprivilegesyncagent = 25_i32
    Wbemprivilegeenabledelegation = 26_i32
    Wbemprivilegemanagevolume = 27_i32
  end
  enum WbemObjectTextFormatEnum
    Wbemobjecttextformatcimdtd20 = 1_i32
    Wbemobjecttextformatwmidtd20 = 2_i32
  end
  enum WbemConnectOptionsEnum
    Wbemconnectflagusemaxwait = 128_i32
  end
  enum WBEM_LOGIN_TYPE_
    WBEM_FLAG_INPROC_LOGIN = 0_i32
    WBEM_FLAG_LOCAL_LOGIN = 1_i32
    WBEM_FLAG_REMOTE_LOGIN = 2_i32
    WBEM_AUTHENTICATION_METHOD_MASK = 15_i32
    WBEM_FLAG_USE_MULTIPLE_CHALLENGES = 16_i32
  end

  @[Extern]
  record MI_Timestamp,
    year : UInt32,
    month : UInt32,
    day : UInt32,
    hour : UInt32,
    minute : UInt32,
    second : UInt32,
    microseconds : UInt32,
    utc : Int32

  @[Extern]
  record MI_Interval,
    days : UInt32,
    hours : UInt32,
    minutes : UInt32,
    seconds : UInt32,
    microseconds : UInt32,
    __padding1 : UInt32,
    __padding2 : UInt32,
    __padding3 : UInt32

  @[Extern]
  record MI_Datetime,
    isTimestamp : UInt32,
    u : U_e__union_ do

    # Nested Type U_e__union_
    @[Extern(union: true)]
    record U_e__union_,
      timestamp : Win32cr::System::Wmi::MI_Timestamp,
      interval : Win32cr::System::Wmi::MI_Interval

  end

  @[Extern]
  record MI_BooleanA,
    data : UInt8*,
    size : UInt32

  @[Extern]
  record MI_Uint8A,
    data : UInt8*,
    size : UInt32

  @[Extern]
  record MI_Sint8A,
    data : Int8*,
    size : UInt32

  @[Extern]
  record MI_Uint16A,
    data : UInt16*,
    size : UInt32

  @[Extern]
  record MI_Sint16A,
    data : Int16*,
    size : UInt32

  @[Extern]
  record MI_Uint32A,
    data : UInt32*,
    size : UInt32

  @[Extern]
  record MI_Sint32A,
    data : Int32*,
    size : UInt32

  @[Extern]
  record MI_Uint64A,
    data : UInt64*,
    size : UInt32

  @[Extern]
  record MI_Sint64A,
    data : Int64*,
    size : UInt32

  @[Extern]
  record MI_Real32A,
    data : Float32*,
    size : UInt32

  @[Extern]
  record MI_Real64A,
    data : Float64*,
    size : UInt32

  @[Extern]
  record MI_Char16A,
    data : UInt16*,
    size : UInt32

  @[Extern]
  record MI_DatetimeA,
    data : Win32cr::System::Wmi::MI_Datetime*,
    size : UInt32

  @[Extern]
  record MI_StringA,
    data : UInt16**,
    size : UInt32

  @[Extern]
  record MI_ReferenceA,
    data : Win32cr::System::Wmi::MI_Instance**,
    size : UInt32

  @[Extern]
  record MI_InstanceA,
    data : Win32cr::System::Wmi::MI_Instance**,
    size : UInt32

  @[Extern]
  record MI_Array,
    data : Void*,
    size : UInt32

  @[Extern]
  record MI_ConstBooleanA,
    data : UInt8*,
    size : UInt32

  @[Extern]
  record MI_ConstUint8A,
    data : UInt8*,
    size : UInt32

  @[Extern]
  record MI_ConstSint8A,
    data : Int8*,
    size : UInt32

  @[Extern]
  record MI_ConstUint16A,
    data : UInt16*,
    size : UInt32

  @[Extern]
  record MI_ConstSint16A,
    data : Int16*,
    size : UInt32

  @[Extern]
  record MI_ConstUint32A,
    data : UInt32*,
    size : UInt32

  @[Extern]
  record MI_ConstSint32A,
    data : Int32*,
    size : UInt32

  @[Extern]
  record MI_ConstUint64A,
    data : UInt64*,
    size : UInt32

  @[Extern]
  record MI_ConstSint64A,
    data : Int64*,
    size : UInt32

  @[Extern]
  record MI_ConstReal32A,
    data : Float32*,
    size : UInt32

  @[Extern]
  record MI_ConstReal64A,
    data : Float64*,
    size : UInt32

  @[Extern]
  record MI_ConstChar16A,
    data : UInt16*,
    size : UInt32

  @[Extern]
  record MI_ConstDatetimeA,
    data : Win32cr::System::Wmi::MI_Datetime*,
    size : UInt32

  @[Extern]
  record MI_ConstStringA,
    data : UInt16**,
    size : UInt32

  @[Extern]
  record MI_ConstReferenceA,
    data : Win32cr::System::Wmi::MI_Instance**,
    size : UInt32

  @[Extern]
  record MI_ConstInstanceA,
    data : Win32cr::System::Wmi::MI_Instance**,
    size : UInt32

  @[Extern(union: true)]
  record MI_Value,
    boolean : UInt8,
    uint8 : UInt8,
    sint8 : Int8,
    uint16 : UInt16,
    sint16 : Int16,
    uint32 : UInt32,
    sint32 : Int32,
    uint64 : UInt64,
    sint64 : Int64,
    real32 : Float32,
    real64 : Float64,
    char16 : UInt16,
    datetime : Win32cr::System::Wmi::MI_Datetime,
    string : UInt16*,
    instance : Win32cr::System::Wmi::MI_Instance*,
    reference : Win32cr::System::Wmi::MI_Instance*,
    booleana : Win32cr::System::Wmi::MI_BooleanA,
    uint8a : Win32cr::System::Wmi::MI_Uint8A,
    sint8a : Win32cr::System::Wmi::MI_Sint8A,
    uint16a : Win32cr::System::Wmi::MI_Uint16A,
    sint16a : Win32cr::System::Wmi::MI_Sint16A,
    uint32a : Win32cr::System::Wmi::MI_Uint32A,
    sint32a : Win32cr::System::Wmi::MI_Sint32A,
    uint64a : Win32cr::System::Wmi::MI_Uint64A,
    sint64a : Win32cr::System::Wmi::MI_Sint64A,
    real32a : Win32cr::System::Wmi::MI_Real32A,
    real64a : Win32cr::System::Wmi::MI_Real64A,
    char16a : Win32cr::System::Wmi::MI_Char16A,
    datetimea : Win32cr::System::Wmi::MI_DatetimeA,
    stringa : Win32cr::System::Wmi::MI_StringA,
    referencea : Win32cr::System::Wmi::MI_ReferenceA,
    instancea : Win32cr::System::Wmi::MI_InstanceA,
    array : Win32cr::System::Wmi::MI_Array

  @[Extern]
  record MI_BooleanField,
    value : UInt8,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Sint8Field,
    value : Int8,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Uint8Field,
    value : UInt8,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Sint16Field,
    value : Int16,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Uint16Field,
    value : UInt16,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Sint32Field,
    value : Int32,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Uint32Field,
    value : UInt32,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Sint64Field,
    value : Int64,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Uint64Field,
    value : UInt64,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Real32Field,
    value : Float32,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Real64Field,
    value : Float64,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Char16Field,
    value : UInt16,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_DatetimeField,
    value : Win32cr::System::Wmi::MI_Datetime,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_StringField,
    value : UInt16*,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ReferenceField,
    value : Win32cr::System::Wmi::MI_Instance*,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_InstanceField,
    value : Win32cr::System::Wmi::MI_Instance*,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_BooleanAField,
    value : Win32cr::System::Wmi::MI_BooleanA,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Uint8AField,
    value : Win32cr::System::Wmi::MI_Uint8A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Sint8AField,
    value : Win32cr::System::Wmi::MI_Sint8A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Uint16AField,
    value : Win32cr::System::Wmi::MI_Uint16A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Sint16AField,
    value : Win32cr::System::Wmi::MI_Sint16A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Uint32AField,
    value : Win32cr::System::Wmi::MI_Uint32A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Sint32AField,
    value : Win32cr::System::Wmi::MI_Sint32A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Uint64AField,
    value : Win32cr::System::Wmi::MI_Uint64A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Sint64AField,
    value : Win32cr::System::Wmi::MI_Sint64A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Real32AField,
    value : Win32cr::System::Wmi::MI_Real32A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Real64AField,
    value : Win32cr::System::Wmi::MI_Real64A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_Char16AField,
    value : Win32cr::System::Wmi::MI_Char16A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_DatetimeAField,
    value : Win32cr::System::Wmi::MI_DatetimeA,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_StringAField,
    value : Win32cr::System::Wmi::MI_StringA,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ReferenceAField,
    value : Win32cr::System::Wmi::MI_ReferenceA,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_InstanceAField,
    value : Win32cr::System::Wmi::MI_InstanceA,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ArrayField,
    value : Win32cr::System::Wmi::MI_Array,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstBooleanField,
    value : UInt8,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstSint8Field,
    value : Int8,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstUint8Field,
    value : UInt8,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstSint16Field,
    value : Int16,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstUint16Field,
    value : UInt16,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstSint32Field,
    value : Int32,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstUint32Field,
    value : UInt32,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstSint64Field,
    value : Int64,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstUint64Field,
    value : UInt64,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstReal32Field,
    value : Float32,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstReal64Field,
    value : Float64,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstChar16Field,
    value : UInt16,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstDatetimeField,
    value : Win32cr::System::Wmi::MI_Datetime,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstStringField,
    value : UInt16*,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstReferenceField,
    value : Win32cr::System::Wmi::MI_Instance*,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstInstanceField,
    value : Win32cr::System::Wmi::MI_Instance*,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstBooleanAField,
    value : Win32cr::System::Wmi::MI_ConstBooleanA,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstUint8AField,
    value : Win32cr::System::Wmi::MI_ConstUint8A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstSint8AField,
    value : Win32cr::System::Wmi::MI_ConstSint8A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstUint16AField,
    value : Win32cr::System::Wmi::MI_ConstUint16A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstSint16AField,
    value : Win32cr::System::Wmi::MI_ConstSint16A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstUint32AField,
    value : Win32cr::System::Wmi::MI_ConstUint32A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstSint32AField,
    value : Win32cr::System::Wmi::MI_ConstSint32A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstUint64AField,
    value : Win32cr::System::Wmi::MI_ConstUint64A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstSint64AField,
    value : Win32cr::System::Wmi::MI_ConstSint64A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstReal32AField,
    value : Win32cr::System::Wmi::MI_ConstReal32A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstReal64AField,
    value : Win32cr::System::Wmi::MI_ConstReal64A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstChar16AField,
    value : Win32cr::System::Wmi::MI_ConstChar16A,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstDatetimeAField,
    value : Win32cr::System::Wmi::MI_ConstDatetimeA,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstStringAField,
    value : Win32cr::System::Wmi::MI_ConstStringA,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstReferenceAField,
    value : Win32cr::System::Wmi::MI_ConstReferenceA,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ConstInstanceAField,
    value : Win32cr::System::Wmi::MI_ConstInstanceA,
    exists : UInt8,
    flags : UInt8

  @[Extern]
  record MI_ServerFT,
    get_version : LibC::IntPtrT,
    get_system_name : LibC::IntPtrT

  @[Extern]
  record MI_Server,
    serverFT : Win32cr::System::Wmi::MI_ServerFT*,
    contextFT : Win32cr::System::Wmi::MI_ContextFT*,
    instanceFT : Win32cr::System::Wmi::MI_InstanceFT*,
    propertySetFT : Win32cr::System::Wmi::MI_PropertySetFT*,
    filterFT : Win32cr::System::Wmi::MI_FilterFT*

  @[Extern]
  record MI_FilterFT,
    evaluate : LibC::IntPtrT,
    get_expression : LibC::IntPtrT

  @[Extern]
  record MI_Filter,
    ft : Win32cr::System::Wmi::MI_FilterFT*,
    reserved : LibC::IntPtrT[3]

  @[Extern]
  record MI_PropertySetFT,
    get_element_count : LibC::IntPtrT,
    contains_element : LibC::IntPtrT,
    add_element : LibC::IntPtrT,
    get_element_at : LibC::IntPtrT,
    clear : LibC::IntPtrT,
    destruct : LibC::IntPtrT,
    delete : LibC::IntPtrT,
    clone : LibC::IntPtrT

  @[Extern]
  record MI_PropertySet,
    ft : Win32cr::System::Wmi::MI_PropertySetFT*,
    reserved : LibC::IntPtrT[3]

  @[Extern]
  record MI_ObjectDecl,
    flags : UInt32,
    code : UInt32,
    name : UInt16*,
    qualifiers : Win32cr::System::Wmi::MI_Qualifier**,
    numQualifiers : UInt32,
    properties : Win32cr::System::Wmi::MI_PropertyDecl**,
    numProperties : UInt32,
    size : UInt32

  @[Extern]
  record MI_ClassDecl,
    flags : UInt32,
    code : UInt32,
    name : UInt16*,
    qualifiers : Win32cr::System::Wmi::MI_Qualifier**,
    numQualifiers : UInt32,
    properties : Win32cr::System::Wmi::MI_PropertyDecl**,
    numProperties : UInt32,
    size : UInt32,
    superClass : UInt16*,
    superClassDecl : Win32cr::System::Wmi::MI_ClassDecl*,
    methods : Win32cr::System::Wmi::MI_MethodDecl**,
    numMethods : UInt32,
    schema : Win32cr::System::Wmi::MI_SchemaDecl*,
    providerFT : Win32cr::System::Wmi::MI_ProviderFT*,
    owningClass : Win32cr::System::Wmi::MI_Class*

  @[Extern]
  record MI_FeatureDecl,
    flags : UInt32,
    code : UInt32,
    name : UInt16*,
    qualifiers : Win32cr::System::Wmi::MI_Qualifier**,
    numQualifiers : UInt32

  @[Extern]
  record MI_ParameterDecl,
    flags : UInt32,
    code : UInt32,
    name : UInt16*,
    qualifiers : Win32cr::System::Wmi::MI_Qualifier**,
    numQualifiers : UInt32,
    type__ : UInt32,
    className : UInt16*,
    subscript : UInt32,
    offset : UInt32

  @[Extern]
  record MI_PropertyDecl,
    flags : UInt32,
    code : UInt32,
    name : UInt16*,
    qualifiers : Win32cr::System::Wmi::MI_Qualifier**,
    numQualifiers : UInt32,
    type__ : UInt32,
    className : UInt16*,
    subscript : UInt32,
    offset : UInt32,
    origin : UInt16*,
    propagator : UInt16*,
    value : Void*

  @[Extern]
  record MI_MethodDecl,
    flags : UInt32,
    code : UInt32,
    name : UInt16*,
    qualifiers : Win32cr::System::Wmi::MI_Qualifier**,
    numQualifiers : UInt32,
    parameters : Win32cr::System::Wmi::MI_ParameterDecl**,
    numParameters : UInt32,
    size : UInt32,
    returnType : UInt32,
    origin : UInt16*,
    propagator : UInt16*,
    schema : Win32cr::System::Wmi::MI_SchemaDecl*,
    function : Win32cr::System::Wmi::MI_MethodDecl_Invoke

  @[Extern]
  record MI_QualifierDecl,
    name : UInt16*,
    type__ : UInt32,
    scope : UInt32,
    flavor : UInt32,
    subscript : UInt32,
    value : Void*

  @[Extern]
  record MI_Qualifier,
    name : UInt16*,
    type__ : UInt32,
    flavor : UInt32,
    value : Void*

  @[Extern]
  record MI_SchemaDecl,
    qualifierDecls : Win32cr::System::Wmi::MI_QualifierDecl**,
    numQualifierDecls : UInt32,
    classDecls : Win32cr::System::Wmi::MI_ClassDecl**,
    numClassDecls : UInt32

  @[Extern]
  record MI_Module_Self
  @[Extern]
  record MI_ProviderFT,
    load : Win32cr::System::Wmi::MI_ProviderFT_Load,
    unload : Win32cr::System::Wmi::MI_ProviderFT_Unload,
    get_instance : Win32cr::System::Wmi::MI_ProviderFT_GetInstance,
    enumerate_instances : Win32cr::System::Wmi::MI_ProviderFT_EnumerateInstances,
    create_instance : Win32cr::System::Wmi::MI_ProviderFT_CreateInstance,
    modify_instance : Win32cr::System::Wmi::MI_ProviderFT_ModifyInstance,
    delete_instance : Win32cr::System::Wmi::MI_ProviderFT_DeleteInstance,
    associator_instances : Win32cr::System::Wmi::MI_ProviderFT_AssociatorInstances,
    reference_instances : Win32cr::System::Wmi::MI_ProviderFT_ReferenceInstances,
    enable_indications : Win32cr::System::Wmi::MI_ProviderFT_EnableIndications,
    disable_indications : Win32cr::System::Wmi::MI_ProviderFT_DisableIndications,
    subscribe : Win32cr::System::Wmi::MI_ProviderFT_Subscribe,
    unsubscribe : Win32cr::System::Wmi::MI_ProviderFT_Unsubscribe,
    invoke : Win32cr::System::Wmi::MI_ProviderFT_Invoke

  @[Extern]
  record MI_Module,
    version : UInt32,
    generatorVersion : UInt32,
    flags : UInt32,
    charSize : UInt32,
    schemaDecl : Win32cr::System::Wmi::MI_SchemaDecl*,
    load : Win32cr::System::Wmi::MI_Module_Load,
    unload : Win32cr::System::Wmi::MI_Module_Unload,
    dynamicProviderFT : Win32cr::System::Wmi::MI_ProviderFT*

  @[Extern]
  record MI_InstanceFT,
    clone : LibC::IntPtrT,
    destruct : LibC::IntPtrT,
    delete : LibC::IntPtrT,
    is_a : LibC::IntPtrT,
    get_class_name_a : LibC::IntPtrT,
    set_name_space : LibC::IntPtrT,
    get_name_space : LibC::IntPtrT,
    get_element_count : LibC::IntPtrT,
    add_element : LibC::IntPtrT,
    set_element : LibC::IntPtrT,
    set_element_at : LibC::IntPtrT,
    get_element : LibC::IntPtrT,
    get_element_at : LibC::IntPtrT,
    clear_element : LibC::IntPtrT,
    clear_element_at : LibC::IntPtrT,
    get_server_name : LibC::IntPtrT,
    set_server_name : LibC::IntPtrT,
    get_class : LibC::IntPtrT

  @[Extern]
  record MI_InstanceExFT,
    parent : Win32cr::System::Wmi::MI_InstanceFT,
    normalize : LibC::IntPtrT

  @[Extern]
  record MI_Instance,
    ft : Win32cr::System::Wmi::MI_InstanceFT*,
    classDecl : Win32cr::System::Wmi::MI_ClassDecl*,
    serverName : UInt16*,
    nameSpace : UInt16*,
    reserved : LibC::IntPtrT[4]

  @[Extern]
  record MI_ContextFT,
    post_result : LibC::IntPtrT,
    post_instance : LibC::IntPtrT,
    post_indication : LibC::IntPtrT,
    construct_instance : LibC::IntPtrT,
    construct_parameters : LibC::IntPtrT,
    new_instance : LibC::IntPtrT,
    new_dynamic_instance : LibC::IntPtrT,
    new_parameters : LibC::IntPtrT,
    canceled : LibC::IntPtrT,
    get_locale : LibC::IntPtrT,
    register_cancel : LibC::IntPtrT,
    request_unload : LibC::IntPtrT,
    refuse_unload : LibC::IntPtrT,
    get_local_session : LibC::IntPtrT,
    set_string_option : LibC::IntPtrT,
    get_string_option : LibC::IntPtrT,
    get_number_option : LibC::IntPtrT,
    get_custom_option : LibC::IntPtrT,
    get_custom_option_count : LibC::IntPtrT,
    get_custom_option_at : LibC::IntPtrT,
    write_message : LibC::IntPtrT,
    write_progress : LibC::IntPtrT,
    write_stream_parameter : LibC::IntPtrT,
    write_cim_error : LibC::IntPtrT,
    prompt_user : LibC::IntPtrT,
    should_process : LibC::IntPtrT,
    should_continue : LibC::IntPtrT,
    post_error : LibC::IntPtrT,
    post_cim_error : LibC::IntPtrT,
    write_error : LibC::IntPtrT

  @[Extern]
  record MI_Context,
    ft : Win32cr::System::Wmi::MI_ContextFT*,
    reserved : LibC::IntPtrT[3]

  @[Extern]
  record MI_QualifierSetFT,
    get_qualifier_count : LibC::IntPtrT,
    get_qualifier_at : LibC::IntPtrT,
    get_qualifier : LibC::IntPtrT

  @[Extern]
  record MI_QualifierSet,
    reserved1 : UInt64,
    reserved2 : LibC::IntPtrT,
    ft : Win32cr::System::Wmi::MI_QualifierSetFT*

  @[Extern]
  record MI_ParameterSetFT,
    get_method_return_type : LibC::IntPtrT,
    get_parameter_count : LibC::IntPtrT,
    get_parameter_at : LibC::IntPtrT,
    get_parameter : LibC::IntPtrT

  @[Extern]
  record MI_ParameterSet,
    reserved1 : UInt64,
    reserved2 : LibC::IntPtrT,
    ft : Win32cr::System::Wmi::MI_ParameterSetFT*

  @[Extern]
  record MI_ClassFT,
    get_class_name_a : LibC::IntPtrT,
    get_name_space : LibC::IntPtrT,
    get_server_name : LibC::IntPtrT,
    get_element_count : LibC::IntPtrT,
    get_element : LibC::IntPtrT,
    get_element_at : LibC::IntPtrT,
    get_class_qualifier_set : LibC::IntPtrT,
    get_method_count : LibC::IntPtrT,
    get_method_at : LibC::IntPtrT,
    get_method : LibC::IntPtrT,
    get_parent_class_name : LibC::IntPtrT,
    get_parent_class : LibC::IntPtrT,
    delete : LibC::IntPtrT,
    clone : LibC::IntPtrT

  @[Extern]
  record MI_Class,
    ft : Win32cr::System::Wmi::MI_ClassFT*,
    classDecl : Win32cr::System::Wmi::MI_ClassDecl*,
    namespaceName : UInt16*,
    serverName : UInt16*,
    reserved : LibC::IntPtrT[4]

  @[Extern]
  record MI_OperationCallbacks,
    callbackContext : Void*,
    promptUser : Win32cr::System::Wmi::MI_OperationCallback_PromptUser,
    writeError : Win32cr::System::Wmi::MI_OperationCallback_WriteError,
    writeMessage : Win32cr::System::Wmi::MI_OperationCallback_WriteMessage,
    writeProgress : Win32cr::System::Wmi::MI_OperationCallback_WriteProgress,
    instanceResult : Win32cr::System::Wmi::MI_OperationCallback_Instance,
    indicationResult : Win32cr::System::Wmi::MI_OperationCallback_Indication,
    classResult : Win32cr::System::Wmi::MI_OperationCallback_Class,
    streamedParameterResult : Win32cr::System::Wmi::MI_OperationCallback_StreamedParameter

  @[Extern]
  record MI_SessionCallbacks,
    callbackContext : Void*,
    writeMessage : LibC::IntPtrT,
    writeError : LibC::IntPtrT

  @[Extern]
  record MI_UsernamePasswordCreds,
    domain : UInt16*,
    username : UInt16*,
    password : UInt16*

  @[Extern]
  record MI_UserCredentials,
    authenticationType : UInt16*,
    credentials : Credentials_e__union_ do

    # Nested Type Credentials_e__union_
    @[Extern(union: true)]
    record Credentials_e__union_,
      usernamePassword : Win32cr::System::Wmi::MI_UsernamePasswordCreds,
      certificateThumbprint : UInt16*

  end

  @[Extern]
  record MI_SubscriptionDeliveryOptionsFT,
    set_string : LibC::IntPtrT,
    set_number : LibC::IntPtrT,
    set_date_time : LibC::IntPtrT,
    set_interval : LibC::IntPtrT,
    add_credentials : LibC::IntPtrT,
    delete : LibC::IntPtrT,
    get_string : LibC::IntPtrT,
    get_number : LibC::IntPtrT,
    get_date_time : LibC::IntPtrT,
    get_interval : LibC::IntPtrT,
    get_option_count : LibC::IntPtrT,
    get_option_at : LibC::IntPtrT,
    get_option : LibC::IntPtrT,
    get_credentials_count : LibC::IntPtrT,
    get_credentials_at : LibC::IntPtrT,
    get_credentials_password_at : LibC::IntPtrT,
    clone : LibC::IntPtrT

  @[Extern]
  record MI_SubscriptionDeliveryOptions,
    reserved1 : UInt64,
    reserved2 : LibC::IntPtrT,
    ft : Win32cr::System::Wmi::MI_SubscriptionDeliveryOptionsFT*

  @[Extern]
  record MI_Serializer,
    reserved1 : UInt64,
    reserved2 : LibC::IntPtrT

  @[Extern]
  record MI_Deserializer,
    reserved1 : UInt64,
    reserved2 : LibC::IntPtrT

  @[Extern]
  record MI_SerializerFT,
    close : LibC::IntPtrT,
    serialize_class : LibC::IntPtrT,
    serialize_instance : LibC::IntPtrT

  @[Extern]
  record MI_DeserializerFT,
    close : LibC::IntPtrT,
    deserialize_class : LibC::IntPtrT,
    class_get_class_name : LibC::IntPtrT,
    class_get_parent_class_name : LibC::IntPtrT,
    deserialize_instance : LibC::IntPtrT,
    instance_get_class_name : LibC::IntPtrT

  @[Extern]
  record MI_ApplicationFT,
    close : LibC::IntPtrT,
    new_session : LibC::IntPtrT,
    new_hosted_provider : LibC::IntPtrT,
    new_instance : LibC::IntPtrT,
    new_destination_options : LibC::IntPtrT,
    new_operation_options : LibC::IntPtrT,
    new_subscription_delivery_options : LibC::IntPtrT,
    new_serializer : LibC::IntPtrT,
    new_deserializer : LibC::IntPtrT,
    new_instance_from_class : LibC::IntPtrT,
    new_class : LibC::IntPtrT

  @[Extern]
  record MI_HostedProviderFT,
    close : LibC::IntPtrT,
    get_application : LibC::IntPtrT

  @[Extern]
  record MI_SessionFT,
    close : LibC::IntPtrT,
    get_application : LibC::IntPtrT,
    get_instance : LibC::IntPtrT,
    modify_instance : LibC::IntPtrT,
    create_instance : LibC::IntPtrT,
    delete_instance : LibC::IntPtrT,
    invoke : LibC::IntPtrT,
    enumerate_instances : LibC::IntPtrT,
    query_instances : LibC::IntPtrT,
    associator_instances : LibC::IntPtrT,
    reference_instances : LibC::IntPtrT,
    subscribe : LibC::IntPtrT,
    get_class : LibC::IntPtrT,
    enumerate_classes : LibC::IntPtrT,
    test_connection : LibC::IntPtrT

  @[Extern]
  record MI_OperationFT,
    close : LibC::IntPtrT,
    cancel : LibC::IntPtrT,
    get_session : LibC::IntPtrT,
    get_instance : LibC::IntPtrT,
    get_indication : LibC::IntPtrT,
    get_class : LibC::IntPtrT

  @[Extern]
  record MI_DestinationOptionsFT,
    delete : LibC::IntPtrT,
    set_string : LibC::IntPtrT,
    set_number : LibC::IntPtrT,
    add_credentials : LibC::IntPtrT,
    get_string : LibC::IntPtrT,
    get_number : LibC::IntPtrT,
    get_option_count : LibC::IntPtrT,
    get_option_at : LibC::IntPtrT,
    get_option : LibC::IntPtrT,
    get_credentials_count : LibC::IntPtrT,
    get_credentials_at : LibC::IntPtrT,
    get_credentials_password_at : LibC::IntPtrT,
    clone : LibC::IntPtrT,
    set_interval : LibC::IntPtrT,
    get_interval : LibC::IntPtrT

  @[Extern]
  record MI_OperationOptionsFT,
    delete : LibC::IntPtrT,
    set_string : LibC::IntPtrT,
    set_number : LibC::IntPtrT,
    set_custom_option : LibC::IntPtrT,
    get_string : LibC::IntPtrT,
    get_number : LibC::IntPtrT,
    get_option_count : LibC::IntPtrT,
    get_option_at : LibC::IntPtrT,
    get_option : LibC::IntPtrT,
    get_enabled_channels : LibC::IntPtrT,
    clone : LibC::IntPtrT,
    set_interval : LibC::IntPtrT,
    get_interval : LibC::IntPtrT

  @[Extern]
  record MI_Application,
    reserved1 : UInt64,
    reserved2 : LibC::IntPtrT,
    ft : Win32cr::System::Wmi::MI_ApplicationFT*

  @[Extern]
  record MI_Session,
    reserved1 : UInt64,
    reserved2 : LibC::IntPtrT,
    ft : Win32cr::System::Wmi::MI_SessionFT*

  @[Extern]
  record MI_Operation,
    reserved1 : UInt64,
    reserved2 : LibC::IntPtrT,
    ft : Win32cr::System::Wmi::MI_OperationFT*

  @[Extern]
  record MI_HostedProvider,
    reserved1 : UInt64,
    reserved2 : LibC::IntPtrT,
    ft : Win32cr::System::Wmi::MI_HostedProviderFT*

  @[Extern]
  record MI_DestinationOptions,
    reserved1 : UInt64,
    reserved2 : LibC::IntPtrT,
    ft : Win32cr::System::Wmi::MI_DestinationOptionsFT*

  @[Extern]
  record MI_OperationOptions,
    reserved1 : UInt64,
    reserved2 : LibC::IntPtrT,
    ft : Win32cr::System::Wmi::MI_OperationOptionsFT*

  @[Extern]
  record MI_UtilitiesFT,
    map_error_to_mi_error_category : LibC::IntPtrT,
    cim_error_from_error_code : LibC::IntPtrT

  @[Extern]
  record MI_ClientFT_V1,
    applicationFT : Win32cr::System::Wmi::MI_ApplicationFT*,
    sessionFT : Win32cr::System::Wmi::MI_SessionFT*,
    operationFT : Win32cr::System::Wmi::MI_OperationFT*,
    hostedProviderFT : Win32cr::System::Wmi::MI_HostedProviderFT*,
    serializerFT : Win32cr::System::Wmi::MI_SerializerFT*,
    deserializerFT : Win32cr::System::Wmi::MI_DeserializerFT*,
    subscribeDeliveryOptionsFT : Win32cr::System::Wmi::MI_SubscriptionDeliveryOptionsFT*,
    destinationOptionsFT : Win32cr::System::Wmi::MI_DestinationOptionsFT*,
    operationOptionsFT : Win32cr::System::Wmi::MI_OperationOptionsFT*,
    utilitiesFT : Win32cr::System::Wmi::MI_UtilitiesFT*

  @[Extern]
  record SWbemQueryQualifiedName,
    m_uVersion : UInt32,
    m_uTokenType : UInt32,
    m_uNameListSize : UInt32,
    m_ppszNameList : Win32cr::Foundation::PWSTR*,
    m_bArraysUsed : Win32cr::Foundation::BOOL,
    m_pbArrayElUsed : Win32cr::Foundation::BOOL*,
    m_puArrayIndex : UInt32*

  @[Extern(union: true)]
  record SWbemRpnConst,
    m_pszStrVal : Win32cr::Foundation::PWSTR,
    m_bBoolVal : Win32cr::Foundation::BOOL,
    m_lLongVal : Int32,
    m_uLongVal : UInt32,
    m_dblVal : Float64,
    m_lVal64 : Int64,
    m_uVal64 : Int64

  @[Extern]
  record SWbemRpnQueryToken,
    m_uVersion : UInt32,
    m_uTokenType : UInt32,
    m_uSubexpressionShape : UInt32,
    m_uOperator : UInt32,
    m_pRightIdent : Win32cr::System::Wmi::SWbemQueryQualifiedName*,
    m_pLeftIdent : Win32cr::System::Wmi::SWbemQueryQualifiedName*,
    m_uConstApparentType : UInt32,
    m_Const : Win32cr::System::Wmi::SWbemRpnConst,
    m_uConst2ApparentType : UInt32,
    m_Const2 : Win32cr::System::Wmi::SWbemRpnConst,
    m_pszRightFunc : Win32cr::Foundation::PWSTR,
    m_pszLeftFunc : Win32cr::Foundation::PWSTR

  @[Extern]
  record SWbemRpnTokenList,
    m_uVersion : UInt32,
    m_uTokenType : UInt32,
    m_uNumTokens : UInt32

  @[Extern]
  record SWbemRpnEncodedQuery,
    m_uVersion : UInt32,
    m_uTokenType : UInt32,
    m_uParsedFeatureMask : UInt64,
    m_uDetectedArraySize : UInt32,
    m_puDetectedFeatures : UInt32*,
    m_uSelectListSize : UInt32,
    m_ppSelectList : Win32cr::System::Wmi::SWbemQueryQualifiedName**,
    m_uFromTargetType : UInt32,
    m_pszOptionalFromPath : Win32cr::Foundation::PWSTR,
    m_uFromListSize : UInt32,
    m_ppszFromList : Win32cr::Foundation::PWSTR*,
    m_uWhereClauseSize : UInt32,
    m_ppRpnWhereClause : Win32cr::System::Wmi::SWbemRpnQueryToken**,
    m_dblWithinPolling : Float64,
    m_dblWithinWindow : Float64,
    m_uOrderByListSize : UInt32,
    m_ppszOrderByList : Win32cr::Foundation::PWSTR*,
    m_uOrderDirectionEl : UInt32*

  @[Extern]
  record SWbemAnalysisMatrix,
    m_uVersion : UInt32,
    m_uMatrixType : UInt32,
    m_pszProperty : Win32cr::Foundation::PWSTR,
    m_uPropertyType : UInt32,
    m_uEntries : UInt32,
    m_pValues : Void**,
    m_pbTruthTable : Win32cr::Foundation::BOOL*

  @[Extern]
  record SWbemAnalysisMatrixList,
    m_uVersion : UInt32,
    m_uMatrixType : UInt32,
    m_uNumMatrices : UInt32,
    m_pMatrices : Win32cr::System::Wmi::SWbemAnalysisMatrix*

  @[Extern]
  record SWbemAssocQueryInf,
    m_uVersion : UInt32,
    m_uAnalysisType : UInt32,
    m_uFeatureMask : UInt32,
    m_pPath : Void*,
    m_pszPath : Win32cr::Foundation::PWSTR,
    m_pszQueryText : Win32cr::Foundation::PWSTR,
    m_pszResultClass : Win32cr::Foundation::PWSTR,
    m_pszAssocClass : Win32cr::Foundation::PWSTR,
    m_pszRole : Win32cr::Foundation::PWSTR,
    m_pszResultRole : Win32cr::Foundation::PWSTR,
    m_pszRequiredQualifier : Win32cr::Foundation::PWSTR,
    m_pszRequiredAssocQualifier : Win32cr::Foundation::PWSTR

  @[Extern]
  record WBEM_COMPILE_STATUS_INFO,
    lPhaseError : Int32,
    hRes : Win32cr::Foundation::HRESULT,
    object_num : Int32,
    first_line : Int32,
    last_line : Int32,
    dwOutFlags : UInt32

  @[Extern]
  record IWbemPathKeyListVtbl,
    query_interface : Proc(IWbemPathKeyList*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemPathKeyList*, UInt32),
    release : Proc(IWbemPathKeyList*, UInt32),
    get_count : Proc(IWbemPathKeyList*, UInt32*, Win32cr::Foundation::HRESULT),
    set_key : Proc(IWbemPathKeyList*, Win32cr::Foundation::PWSTR, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_key2 : Proc(IWbemPathKeyList*, Win32cr::Foundation::PWSTR, UInt32, UInt32, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_key : Proc(IWbemPathKeyList*, UInt32, UInt32, UInt32*, UInt16*, UInt32*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    get_key2 : Proc(IWbemPathKeyList*, UInt32, UInt32, UInt32*, UInt16*, Win32cr::System::Com::VARIANT*, UInt32*, Win32cr::Foundation::HRESULT),
    remove_key : Proc(IWbemPathKeyList*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    remove_all_keys : Proc(IWbemPathKeyList*, UInt32, Win32cr::Foundation::HRESULT),
    make_singleton : Proc(IWbemPathKeyList*, UInt8, Win32cr::Foundation::HRESULT),
    get_info : Proc(IWbemPathKeyList*, UInt32, UInt64*, Win32cr::Foundation::HRESULT),
    get_text : Proc(IWbemPathKeyList*, Int32, UInt32*, UInt16*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("9ae62877-7544-4bb0-aa26-a13824659ed6")]
  record IWbemPathKeyList, lpVtbl : IWbemPathKeyListVtbl* do
    GUID = LibC::GUID.new(0x9ae62877_u32, 0x7544_u16, 0x4bb0_u16, StaticArray[0xaa_u8, 0x26_u8, 0xa1_u8, 0x38_u8, 0x24_u8, 0x65_u8, 0x9e_u8, 0xd6_u8])
    def query_interface(this : IWbemPathKeyList*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemPathKeyList*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemPathKeyList*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_count(this : IWbemPathKeyList*, puKeyCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_count.call(this, puKeyCount)
    end
    def set_key(this : IWbemPathKeyList*, wszName : Win32cr::Foundation::PWSTR, uFlags : UInt32, uCimType : UInt32, pKeyVal : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_key.call(this, wszName, uFlags, uCimType, pKeyVal)
    end
    def set_key2(this : IWbemPathKeyList*, wszName : Win32cr::Foundation::PWSTR, uFlags : UInt32, uCimType : UInt32, pKeyVal : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_key2.call(this, wszName, uFlags, uCimType, pKeyVal)
    end
    def get_key(this : IWbemPathKeyList*, uKeyIx : UInt32, uFlags : UInt32, puNameBufSize : UInt32*, pszKeyName : UInt16*, puKeyValBufSize : UInt32*, pKeyVal : Void*, puApparentCimType : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_key.call(this, uKeyIx, uFlags, puNameBufSize, pszKeyName, puKeyValBufSize, pKeyVal, puApparentCimType)
    end
    def get_key2(this : IWbemPathKeyList*, uKeyIx : UInt32, uFlags : UInt32, puNameBufSize : UInt32*, pszKeyName : UInt16*, pKeyValue : Win32cr::System::Com::VARIANT*, puApparentCimType : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_key2.call(this, uKeyIx, uFlags, puNameBufSize, pszKeyName, pKeyValue, puApparentCimType)
    end
    def remove_key(this : IWbemPathKeyList*, wszName : Win32cr::Foundation::PWSTR, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_key.call(this, wszName, uFlags)
    end
    def remove_all_keys(this : IWbemPathKeyList*, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_all_keys.call(this, uFlags)
    end
    def make_singleton(this : IWbemPathKeyList*, bSet : UInt8) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.make_singleton.call(this, bSet)
    end
    def get_info(this : IWbemPathKeyList*, uRequestedInfo : UInt32, puResponse : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_info.call(this, uRequestedInfo, puResponse)
    end
    def get_text(this : IWbemPathKeyList*, lFlags : Int32, puBuffLength : UInt32*, pszText : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_text.call(this, lFlags, puBuffLength, pszText)
    end

  end

  @[Extern]
  record IWbemPathVtbl,
    query_interface : Proc(IWbemPath*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemPath*, UInt32),
    release : Proc(IWbemPath*, UInt32),
    set_text : Proc(IWbemPath*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_text : Proc(IWbemPath*, Int32, UInt32*, UInt16*, Win32cr::Foundation::HRESULT),
    get_info : Proc(IWbemPath*, UInt32, UInt64*, Win32cr::Foundation::HRESULT),
    set_server : Proc(IWbemPath*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_server : Proc(IWbemPath*, UInt32*, UInt16*, Win32cr::Foundation::HRESULT),
    get_namespace_count : Proc(IWbemPath*, UInt32*, Win32cr::Foundation::HRESULT),
    set_namespace_at : Proc(IWbemPath*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_namespace_at : Proc(IWbemPath*, UInt32, UInt32*, UInt16*, Win32cr::Foundation::HRESULT),
    remove_namespace_at : Proc(IWbemPath*, UInt32, Win32cr::Foundation::HRESULT),
    remove_all_namespaces : Proc(IWbemPath*, Win32cr::Foundation::HRESULT),
    get_scope_count : Proc(IWbemPath*, UInt32*, Win32cr::Foundation::HRESULT),
    set_scope : Proc(IWbemPath*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_scope_from_text : Proc(IWbemPath*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_scope : Proc(IWbemPath*, UInt32, UInt32*, UInt16*, Void**, Win32cr::Foundation::HRESULT),
    get_scope_as_text : Proc(IWbemPath*, UInt32, UInt32*, UInt16*, Win32cr::Foundation::HRESULT),
    remove_scope : Proc(IWbemPath*, UInt32, Win32cr::Foundation::HRESULT),
    remove_all_scopes : Proc(IWbemPath*, Win32cr::Foundation::HRESULT),
    set_class_name : Proc(IWbemPath*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_class_name : Proc(IWbemPath*, UInt32*, UInt16*, Win32cr::Foundation::HRESULT),
    get_key_list : Proc(IWbemPath*, Void**, Win32cr::Foundation::HRESULT),
    create_class_part : Proc(IWbemPath*, Int32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    delete_class_part : Proc(IWbemPath*, Int32, Win32cr::Foundation::HRESULT),
    is_relative : Proc(IWbemPath*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL),
    is_relative_or_child : Proc(IWbemPath*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Int32, Win32cr::Foundation::BOOL),
    is_local : Proc(IWbemPath*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL),
    is_same_class_name : Proc(IWbemPath*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL)


  @[Extern]
  #@[Com("3bc15af2-736c-477e-9e51-238af8667dcc")]
  record IWbemPath, lpVtbl : IWbemPathVtbl* do
    GUID = LibC::GUID.new(0x3bc15af2_u32, 0x736c_u16, 0x477e_u16, StaticArray[0x9e_u8, 0x51_u8, 0x23_u8, 0x8a_u8, 0xf8_u8, 0x66_u8, 0x7d_u8, 0xcc_u8])
    def query_interface(this : IWbemPath*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemPath*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemPath*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_text(this : IWbemPath*, uMode : UInt32, pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_text.call(this, uMode, pszPath)
    end
    def get_text(this : IWbemPath*, lFlags : Int32, puBuffLength : UInt32*, pszText : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_text.call(this, lFlags, puBuffLength, pszText)
    end
    def get_info(this : IWbemPath*, uRequestedInfo : UInt32, puResponse : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_info.call(this, uRequestedInfo, puResponse)
    end
    def set_server(this : IWbemPath*, name : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_server.call(this, name)
    end
    def get_server(this : IWbemPath*, puNameBufLength : UInt32*, pName : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_server.call(this, puNameBufLength, pName)
    end
    def get_namespace_count(this : IWbemPath*, puCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_namespace_count.call(this, puCount)
    end
    def set_namespace_at(this : IWbemPath*, uIndex : UInt32, pszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_namespace_at.call(this, uIndex, pszName)
    end
    def get_namespace_at(this : IWbemPath*, uIndex : UInt32, puNameBufLength : UInt32*, pName : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_namespace_at.call(this, uIndex, puNameBufLength, pName)
    end
    def remove_namespace_at(this : IWbemPath*, uIndex : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_namespace_at.call(this, uIndex)
    end
    def remove_all_namespaces(this : IWbemPath*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_all_namespaces.call(this)
    end
    def get_scope_count(this : IWbemPath*, puCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_scope_count.call(this, puCount)
    end
    def set_scope(this : IWbemPath*, uIndex : UInt32, pszClass : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_scope.call(this, uIndex, pszClass)
    end
    def set_scope_from_text(this : IWbemPath*, uIndex : UInt32, pszText : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_scope_from_text.call(this, uIndex, pszText)
    end
    def get_scope(this : IWbemPath*, uIndex : UInt32, puClassNameBufSize : UInt32*, pszClass : UInt16*, pKeyList : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_scope.call(this, uIndex, puClassNameBufSize, pszClass, pKeyList)
    end
    def get_scope_as_text(this : IWbemPath*, uIndex : UInt32, puTextBufSize : UInt32*, pszText : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_scope_as_text.call(this, uIndex, puTextBufSize, pszText)
    end
    def remove_scope(this : IWbemPath*, uIndex : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_scope.call(this, uIndex)
    end
    def remove_all_scopes(this : IWbemPath*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_all_scopes.call(this)
    end
    def set_class_name(this : IWbemPath*, name : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_class_name.call(this, name)
    end
    def get_class_name(this : IWbemPath*, puBuffLength : UInt32*, pszName : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_class_name.call(this, puBuffLength, pszName)
    end
    def get_key_list(this : IWbemPath*, pOut : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_key_list.call(this, pOut)
    end
    def create_class_part(this : IWbemPath*, lFlags : Int32, name : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_class_part.call(this, lFlags, name)
    end
    def delete_class_part(this : IWbemPath*, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_class_part.call(this, lFlags)
    end
    def is_relative(this : IWbemPath*, wszMachine : Win32cr::Foundation::PWSTR, wszNamespace : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_relative.call(this, wszMachine, wszNamespace)
    end
    def is_relative_or_child(this : IWbemPath*, wszMachine : Win32cr::Foundation::PWSTR, wszNamespace : Win32cr::Foundation::PWSTR, lFlags : Int32) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_relative_or_child.call(this, wszMachine, wszNamespace, lFlags)
    end
    def is_local(this : IWbemPath*, wszMachine : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_local.call(this, wszMachine)
    end
    def is_same_class_name(this : IWbemPath*, wszClass : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_same_class_name.call(this, wszClass)
    end

  end

  @[Extern]
  record IWbemQueryVtbl,
    query_interface : Proc(IWbemQuery*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemQuery*, UInt32),
    release : Proc(IWbemQuery*, UInt32),
    empty : Proc(IWbemQuery*, Win32cr::Foundation::HRESULT),
    set_language_features : Proc(IWbemQuery*, UInt32, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    test_language_features : Proc(IWbemQuery*, UInt32, UInt32*, UInt32*, Win32cr::Foundation::HRESULT),
    parse : Proc(IWbemQuery*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_analysis : Proc(IWbemQuery*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    free_memory : Proc(IWbemQuery*, Void*, Win32cr::Foundation::HRESULT),
    get_query_info : Proc(IWbemQuery*, UInt32, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("81166f58-dd98-11d3-a120-00105a1f515a")]
  record IWbemQuery, lpVtbl : IWbemQueryVtbl* do
    GUID = LibC::GUID.new(0x81166f58_u32, 0xdd98_u16, 0x11d3_u16, StaticArray[0xa1_u8, 0x20_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x51_u8, 0x5a_u8])
    def query_interface(this : IWbemQuery*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemQuery*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemQuery*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def empty(this : IWbemQuery*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.empty.call(this)
    end
    def set_language_features(this : IWbemQuery*, uFlags : UInt32, uArraySize : UInt32, puFeatures : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_language_features.call(this, uFlags, uArraySize, puFeatures)
    end
    def test_language_features(this : IWbemQuery*, uFlags : UInt32, uArraySize : UInt32*, puFeatures : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.test_language_features.call(this, uFlags, uArraySize, puFeatures)
    end
    def parse(this : IWbemQuery*, pszLang : Win32cr::Foundation::PWSTR, pszQuery : Win32cr::Foundation::PWSTR, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.parse.call(this, pszLang, pszQuery, uFlags)
    end
    def get_analysis(this : IWbemQuery*, uAnalysisType : UInt32, uFlags : UInt32, pAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_analysis.call(this, uAnalysisType, uFlags, pAnalysis)
    end
    def free_memory(this : IWbemQuery*, pMem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.free_memory.call(this, pMem)
    end
    def get_query_info(this : IWbemQuery*, uAnalysisType : UInt32, uInfoId : UInt32, uBufSize : UInt32, pDestBuf : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_query_info.call(this, uAnalysisType, uInfoId, uBufSize, pDestBuf)
    end

  end

  @[Extern]
  record IWbemClassObjectVtbl,
    query_interface : Proc(IWbemClassObject*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemClassObject*, UInt32),
    release : Proc(IWbemClassObject*, UInt32),
    get_qualifier_set : Proc(IWbemClassObject*, Void**, Win32cr::Foundation::HRESULT),
    get : Proc(IWbemClassObject*, Win32cr::Foundation::PWSTR, Int32, Win32cr::System::Com::VARIANT*, Int32*, Int32*, Win32cr::Foundation::HRESULT),
    put : Proc(IWbemClassObject*, Win32cr::Foundation::PWSTR, Int32, Win32cr::System::Com::VARIANT*, Int32, Win32cr::Foundation::HRESULT),
    delete : Proc(IWbemClassObject*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_names : Proc(IWbemClassObject*, Win32cr::Foundation::PWSTR, Int32, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::SAFEARRAY**, Win32cr::Foundation::HRESULT),
    begin_enumeration : Proc(IWbemClassObject*, Int32, Win32cr::Foundation::HRESULT),
    next__ : Proc(IWbemClassObject*, Int32, Win32cr::Foundation::BSTR*, Win32cr::System::Com::VARIANT*, Int32*, Int32*, Win32cr::Foundation::HRESULT),
    end_enumeration : Proc(IWbemClassObject*, Win32cr::Foundation::HRESULT),
    get_property_qualifier_set : Proc(IWbemClassObject*, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    clone : Proc(IWbemClassObject*, Void**, Win32cr::Foundation::HRESULT),
    get_object_text : Proc(IWbemClassObject*, Int32, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    spawn_derived_class : Proc(IWbemClassObject*, Int32, Void**, Win32cr::Foundation::HRESULT),
    spawn_instance : Proc(IWbemClassObject*, Int32, Void**, Win32cr::Foundation::HRESULT),
    compare_to : Proc(IWbemClassObject*, Int32, Void*, Win32cr::Foundation::HRESULT),
    get_property_origin : Proc(IWbemClassObject*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    inherits_from : Proc(IWbemClassObject*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_method : Proc(IWbemClassObject*, Win32cr::Foundation::PWSTR, Int32, Void**, Void**, Win32cr::Foundation::HRESULT),
    put_method : Proc(IWbemClassObject*, Win32cr::Foundation::PWSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    delete_method : Proc(IWbemClassObject*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    begin_method_enumeration : Proc(IWbemClassObject*, Int32, Win32cr::Foundation::HRESULT),
    next_method : Proc(IWbemClassObject*, Int32, Win32cr::Foundation::BSTR*, Void**, Void**, Win32cr::Foundation::HRESULT),
    end_method_enumeration : Proc(IWbemClassObject*, Win32cr::Foundation::HRESULT),
    get_method_qualifier_set : Proc(IWbemClassObject*, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    get_method_origin : Proc(IWbemClassObject*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("dc12a681-737f-11cf-884d-00aa004b2e24")]
  record IWbemClassObject, lpVtbl : IWbemClassObjectVtbl* do
    GUID = LibC::GUID.new(0xdc12a681_u32, 0x737f_u16, 0x11cf_u16, StaticArray[0x88_u8, 0x4d_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0x2e_u8, 0x24_u8])
    def query_interface(this : IWbemClassObject*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemClassObject*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemClassObject*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_qualifier_set(this : IWbemClassObject*, ppQualSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_qualifier_set.call(this, ppQualSet)
    end
    def get(this : IWbemClassObject*, wszName : Win32cr::Foundation::PWSTR, lFlags : Int32, pVal : Win32cr::System::Com::VARIANT*, pType : Int32*, plFlavor : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get.call(this, wszName, lFlags, pVal, pType, plFlavor)
    end
    def put(this : IWbemClassObject*, wszName : Win32cr::Foundation::PWSTR, lFlags : Int32, pVal : Win32cr::System::Com::VARIANT*, type__ : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put.call(this, wszName, lFlags, pVal, type__)
    end
    def delete(this : IWbemClassObject*, wszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete.call(this, wszName)
    end
    def get_names(this : IWbemClassObject*, wszQualifierName : Win32cr::Foundation::PWSTR, lFlags : Int32, pQualifierVal : Win32cr::System::Com::VARIANT*, pNames : Win32cr::System::Com::SAFEARRAY**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_names.call(this, wszQualifierName, lFlags, pQualifierVal, pNames)
    end
    def begin_enumeration(this : IWbemClassObject*, lEnumFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.begin_enumeration.call(this, lEnumFlags)
    end
    def next__(this : IWbemClassObject*, lFlags : Int32, strName : Win32cr::Foundation::BSTR*, pVal : Win32cr::System::Com::VARIANT*, pType : Int32*, plFlavor : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, lFlags, strName, pVal, pType, plFlavor)
    end
    def end_enumeration(this : IWbemClassObject*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.end_enumeration.call(this)
    end
    def get_property_qualifier_set(this : IWbemClassObject*, wszProperty : Win32cr::Foundation::PWSTR, ppQualSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_qualifier_set.call(this, wszProperty, ppQualSet)
    end
    def clone(this : IWbemClassObject*, ppCopy : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppCopy)
    end
    def get_object_text(this : IWbemClassObject*, lFlags : Int32, pstrObjectText : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object_text.call(this, lFlags, pstrObjectText)
    end
    def spawn_derived_class(this : IWbemClassObject*, lFlags : Int32, ppNewClass : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.spawn_derived_class.call(this, lFlags, ppNewClass)
    end
    def spawn_instance(this : IWbemClassObject*, lFlags : Int32, ppNewInstance : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.spawn_instance.call(this, lFlags, ppNewInstance)
    end
    def compare_to(this : IWbemClassObject*, lFlags : Int32, pCompareTo : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compare_to.call(this, lFlags, pCompareTo)
    end
    def get_property_origin(this : IWbemClassObject*, wszName : Win32cr::Foundation::PWSTR, pstrClassName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_origin.call(this, wszName, pstrClassName)
    end
    def inherits_from(this : IWbemClassObject*, strAncestor : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.inherits_from.call(this, strAncestor)
    end
    def get_method(this : IWbemClassObject*, wszName : Win32cr::Foundation::PWSTR, lFlags : Int32, ppInSignature : Void**, ppOutSignature : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_method.call(this, wszName, lFlags, ppInSignature, ppOutSignature)
    end
    def put_method(this : IWbemClassObject*, wszName : Win32cr::Foundation::PWSTR, lFlags : Int32, pInSignature : Void*, pOutSignature : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_method.call(this, wszName, lFlags, pInSignature, pOutSignature)
    end
    def delete_method(this : IWbemClassObject*, wszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_method.call(this, wszName)
    end
    def begin_method_enumeration(this : IWbemClassObject*, lEnumFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.begin_method_enumeration.call(this, lEnumFlags)
    end
    def next_method(this : IWbemClassObject*, lFlags : Int32, pstrName : Win32cr::Foundation::BSTR*, ppInSignature : Void**, ppOutSignature : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next_method.call(this, lFlags, pstrName, ppInSignature, ppOutSignature)
    end
    def end_method_enumeration(this : IWbemClassObject*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.end_method_enumeration.call(this)
    end
    def get_method_qualifier_set(this : IWbemClassObject*, wszMethod : Win32cr::Foundation::PWSTR, ppQualSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_method_qualifier_set.call(this, wszMethod, ppQualSet)
    end
    def get_method_origin(this : IWbemClassObject*, wszMethodName : Win32cr::Foundation::PWSTR, pstrClassName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_method_origin.call(this, wszMethodName, pstrClassName)
    end

  end

  @[Extern]
  record IWbemObjectAccessVtbl,
    query_interface : Proc(IWbemObjectAccess*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemObjectAccess*, UInt32),
    release : Proc(IWbemObjectAccess*, UInt32),
    get_qualifier_set : Proc(IWbemObjectAccess*, Void**, Win32cr::Foundation::HRESULT),
    get : Proc(IWbemObjectAccess*, Win32cr::Foundation::PWSTR, Int32, Win32cr::System::Com::VARIANT*, Int32*, Int32*, Win32cr::Foundation::HRESULT),
    put : Proc(IWbemObjectAccess*, Win32cr::Foundation::PWSTR, Int32, Win32cr::System::Com::VARIANT*, Int32, Win32cr::Foundation::HRESULT),
    delete : Proc(IWbemObjectAccess*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_names : Proc(IWbemObjectAccess*, Win32cr::Foundation::PWSTR, Int32, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::SAFEARRAY**, Win32cr::Foundation::HRESULT),
    begin_enumeration : Proc(IWbemObjectAccess*, Int32, Win32cr::Foundation::HRESULT),
    next__ : Proc(IWbemObjectAccess*, Int32, Win32cr::Foundation::BSTR*, Win32cr::System::Com::VARIANT*, Int32*, Int32*, Win32cr::Foundation::HRESULT),
    end_enumeration : Proc(IWbemObjectAccess*, Win32cr::Foundation::HRESULT),
    get_property_qualifier_set : Proc(IWbemObjectAccess*, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    clone : Proc(IWbemObjectAccess*, Void**, Win32cr::Foundation::HRESULT),
    get_object_text : Proc(IWbemObjectAccess*, Int32, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    spawn_derived_class : Proc(IWbemObjectAccess*, Int32, Void**, Win32cr::Foundation::HRESULT),
    spawn_instance : Proc(IWbemObjectAccess*, Int32, Void**, Win32cr::Foundation::HRESULT),
    compare_to : Proc(IWbemObjectAccess*, Int32, Void*, Win32cr::Foundation::HRESULT),
    get_property_origin : Proc(IWbemObjectAccess*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    inherits_from : Proc(IWbemObjectAccess*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_method : Proc(IWbemObjectAccess*, Win32cr::Foundation::PWSTR, Int32, Void**, Void**, Win32cr::Foundation::HRESULT),
    put_method : Proc(IWbemObjectAccess*, Win32cr::Foundation::PWSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    delete_method : Proc(IWbemObjectAccess*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    begin_method_enumeration : Proc(IWbemObjectAccess*, Int32, Win32cr::Foundation::HRESULT),
    next_method : Proc(IWbemObjectAccess*, Int32, Win32cr::Foundation::BSTR*, Void**, Void**, Win32cr::Foundation::HRESULT),
    end_method_enumeration : Proc(IWbemObjectAccess*, Win32cr::Foundation::HRESULT),
    get_method_qualifier_set : Proc(IWbemObjectAccess*, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    get_method_origin : Proc(IWbemObjectAccess*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_property_handle : Proc(IWbemObjectAccess*, Win32cr::Foundation::PWSTR, Int32*, Int32*, Win32cr::Foundation::HRESULT),
    write_property_value : Proc(IWbemObjectAccess*, Int32, Int32, UInt8*, Win32cr::Foundation::HRESULT),
    read_property_value : Proc(IWbemObjectAccess*, Int32, Int32, Int32*, UInt8*, Win32cr::Foundation::HRESULT),
    read_dword : Proc(IWbemObjectAccess*, Int32, UInt32*, Win32cr::Foundation::HRESULT),
    write_dword : Proc(IWbemObjectAccess*, Int32, UInt32, Win32cr::Foundation::HRESULT),
    read_qword : Proc(IWbemObjectAccess*, Int32, UInt64*, Win32cr::Foundation::HRESULT),
    write_qword : Proc(IWbemObjectAccess*, Int32, UInt64, Win32cr::Foundation::HRESULT),
    get_property_info_by_handle : Proc(IWbemObjectAccess*, Int32, Win32cr::Foundation::BSTR*, Int32*, Win32cr::Foundation::HRESULT),
    lock : Proc(IWbemObjectAccess*, Int32, Win32cr::Foundation::HRESULT),
    unlock : Proc(IWbemObjectAccess*, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("49353c9a-516b-11d1-aea6-00c04fb68820")]
  record IWbemObjectAccess, lpVtbl : IWbemObjectAccessVtbl* do
    GUID = LibC::GUID.new(0x49353c9a_u32, 0x516b_u16, 0x11d1_u16, StaticArray[0xae_u8, 0xa6_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
    def query_interface(this : IWbemObjectAccess*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemObjectAccess*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemObjectAccess*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_qualifier_set(this : IWbemObjectAccess*, ppQualSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_qualifier_set.call(this, ppQualSet)
    end
    def get(this : IWbemObjectAccess*, wszName : Win32cr::Foundation::PWSTR, lFlags : Int32, pVal : Win32cr::System::Com::VARIANT*, pType : Int32*, plFlavor : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get.call(this, wszName, lFlags, pVal, pType, plFlavor)
    end
    def put(this : IWbemObjectAccess*, wszName : Win32cr::Foundation::PWSTR, lFlags : Int32, pVal : Win32cr::System::Com::VARIANT*, type__ : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put.call(this, wszName, lFlags, pVal, type__)
    end
    def delete(this : IWbemObjectAccess*, wszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete.call(this, wszName)
    end
    def get_names(this : IWbemObjectAccess*, wszQualifierName : Win32cr::Foundation::PWSTR, lFlags : Int32, pQualifierVal : Win32cr::System::Com::VARIANT*, pNames : Win32cr::System::Com::SAFEARRAY**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_names.call(this, wszQualifierName, lFlags, pQualifierVal, pNames)
    end
    def begin_enumeration(this : IWbemObjectAccess*, lEnumFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.begin_enumeration.call(this, lEnumFlags)
    end
    def next__(this : IWbemObjectAccess*, lFlags : Int32, strName : Win32cr::Foundation::BSTR*, pVal : Win32cr::System::Com::VARIANT*, pType : Int32*, plFlavor : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, lFlags, strName, pVal, pType, plFlavor)
    end
    def end_enumeration(this : IWbemObjectAccess*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.end_enumeration.call(this)
    end
    def get_property_qualifier_set(this : IWbemObjectAccess*, wszProperty : Win32cr::Foundation::PWSTR, ppQualSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_qualifier_set.call(this, wszProperty, ppQualSet)
    end
    def clone(this : IWbemObjectAccess*, ppCopy : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppCopy)
    end
    def get_object_text(this : IWbemObjectAccess*, lFlags : Int32, pstrObjectText : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object_text.call(this, lFlags, pstrObjectText)
    end
    def spawn_derived_class(this : IWbemObjectAccess*, lFlags : Int32, ppNewClass : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.spawn_derived_class.call(this, lFlags, ppNewClass)
    end
    def spawn_instance(this : IWbemObjectAccess*, lFlags : Int32, ppNewInstance : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.spawn_instance.call(this, lFlags, ppNewInstance)
    end
    def compare_to(this : IWbemObjectAccess*, lFlags : Int32, pCompareTo : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compare_to.call(this, lFlags, pCompareTo)
    end
    def get_property_origin(this : IWbemObjectAccess*, wszName : Win32cr::Foundation::PWSTR, pstrClassName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_origin.call(this, wszName, pstrClassName)
    end
    def inherits_from(this : IWbemObjectAccess*, strAncestor : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.inherits_from.call(this, strAncestor)
    end
    def get_method(this : IWbemObjectAccess*, wszName : Win32cr::Foundation::PWSTR, lFlags : Int32, ppInSignature : Void**, ppOutSignature : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_method.call(this, wszName, lFlags, ppInSignature, ppOutSignature)
    end
    def put_method(this : IWbemObjectAccess*, wszName : Win32cr::Foundation::PWSTR, lFlags : Int32, pInSignature : Void*, pOutSignature : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_method.call(this, wszName, lFlags, pInSignature, pOutSignature)
    end
    def delete_method(this : IWbemObjectAccess*, wszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_method.call(this, wszName)
    end
    def begin_method_enumeration(this : IWbemObjectAccess*, lEnumFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.begin_method_enumeration.call(this, lEnumFlags)
    end
    def next_method(this : IWbemObjectAccess*, lFlags : Int32, pstrName : Win32cr::Foundation::BSTR*, ppInSignature : Void**, ppOutSignature : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next_method.call(this, lFlags, pstrName, ppInSignature, ppOutSignature)
    end
    def end_method_enumeration(this : IWbemObjectAccess*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.end_method_enumeration.call(this)
    end
    def get_method_qualifier_set(this : IWbemObjectAccess*, wszMethod : Win32cr::Foundation::PWSTR, ppQualSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_method_qualifier_set.call(this, wszMethod, ppQualSet)
    end
    def get_method_origin(this : IWbemObjectAccess*, wszMethodName : Win32cr::Foundation::PWSTR, pstrClassName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_method_origin.call(this, wszMethodName, pstrClassName)
    end
    def get_property_handle(this : IWbemObjectAccess*, wszPropertyName : Win32cr::Foundation::PWSTR, pType : Int32*, plHandle : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_handle.call(this, wszPropertyName, pType, plHandle)
    end
    def write_property_value(this : IWbemObjectAccess*, lHandle : Int32, lNumBytes : Int32, aData : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_property_value.call(this, lHandle, lNumBytes, aData)
    end
    def read_property_value(this : IWbemObjectAccess*, lHandle : Int32, lBufferSize : Int32, plNumBytes : Int32*, aData : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read_property_value.call(this, lHandle, lBufferSize, plNumBytes, aData)
    end
    def read_dword(this : IWbemObjectAccess*, lHandle : Int32, pdw : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read_dword.call(this, lHandle, pdw)
    end
    def write_dword(this : IWbemObjectAccess*, lHandle : Int32, dw : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_dword.call(this, lHandle, dw)
    end
    def read_qword(this : IWbemObjectAccess*, lHandle : Int32, pqw : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read_qword.call(this, lHandle, pqw)
    end
    def write_qword(this : IWbemObjectAccess*, lHandle : Int32, pw : UInt64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_qword.call(this, lHandle, pw)
    end
    def get_property_info_by_handle(this : IWbemObjectAccess*, lHandle : Int32, pstrName : Win32cr::Foundation::BSTR*, pType : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_info_by_handle.call(this, lHandle, pstrName, pType)
    end
    def lock(this : IWbemObjectAccess*, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.lock.call(this, lFlags)
    end
    def unlock(this : IWbemObjectAccess*, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unlock.call(this, lFlags)
    end

  end

  @[Extern]
  record IWbemQualifierSetVtbl,
    query_interface : Proc(IWbemQualifierSet*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemQualifierSet*, UInt32),
    release : Proc(IWbemQualifierSet*, UInt32),
    get : Proc(IWbemQualifierSet*, Win32cr::Foundation::PWSTR, Int32, Win32cr::System::Com::VARIANT*, Int32*, Win32cr::Foundation::HRESULT),
    put : Proc(IWbemQualifierSet*, Win32cr::Foundation::PWSTR, Win32cr::System::Com::VARIANT*, Int32, Win32cr::Foundation::HRESULT),
    delete : Proc(IWbemQualifierSet*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_names : Proc(IWbemQualifierSet*, Int32, Win32cr::System::Com::SAFEARRAY**, Win32cr::Foundation::HRESULT),
    begin_enumeration : Proc(IWbemQualifierSet*, Int32, Win32cr::Foundation::HRESULT),
    next__ : Proc(IWbemQualifierSet*, Int32, Win32cr::Foundation::BSTR*, Win32cr::System::Com::VARIANT*, Int32*, Win32cr::Foundation::HRESULT),
    end_enumeration : Proc(IWbemQualifierSet*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("dc12a680-737f-11cf-884d-00aa004b2e24")]
  record IWbemQualifierSet, lpVtbl : IWbemQualifierSetVtbl* do
    GUID = LibC::GUID.new(0xdc12a680_u32, 0x737f_u16, 0x11cf_u16, StaticArray[0x88_u8, 0x4d_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0x2e_u8, 0x24_u8])
    def query_interface(this : IWbemQualifierSet*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemQualifierSet*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemQualifierSet*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get(this : IWbemQualifierSet*, wszName : Win32cr::Foundation::PWSTR, lFlags : Int32, pVal : Win32cr::System::Com::VARIANT*, plFlavor : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get.call(this, wszName, lFlags, pVal, plFlavor)
    end
    def put(this : IWbemQualifierSet*, wszName : Win32cr::Foundation::PWSTR, pVal : Win32cr::System::Com::VARIANT*, lFlavor : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put.call(this, wszName, pVal, lFlavor)
    end
    def delete(this : IWbemQualifierSet*, wszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete.call(this, wszName)
    end
    def get_names(this : IWbemQualifierSet*, lFlags : Int32, pNames : Win32cr::System::Com::SAFEARRAY**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_names.call(this, lFlags, pNames)
    end
    def begin_enumeration(this : IWbemQualifierSet*, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.begin_enumeration.call(this, lFlags)
    end
    def next__(this : IWbemQualifierSet*, lFlags : Int32, pstrName : Win32cr::Foundation::BSTR*, pVal : Win32cr::System::Com::VARIANT*, plFlavor : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, lFlags, pstrName, pVal, plFlavor)
    end
    def end_enumeration(this : IWbemQualifierSet*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.end_enumeration.call(this)
    end

  end

  @[Extern]
  record IWbemServicesVtbl,
    query_interface : Proc(IWbemServices*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemServices*, UInt32),
    release : Proc(IWbemServices*, UInt32),
    open_namespace : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Void**, Win32cr::Foundation::HRESULT),
    cancel_async_call : Proc(IWbemServices*, Void*, Win32cr::Foundation::HRESULT),
    query_object_sink : Proc(IWbemServices*, Int32, Void**, Win32cr::Foundation::HRESULT),
    get_object : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Void**, Win32cr::Foundation::HRESULT),
    get_object_async : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    put_class : Proc(IWbemServices*, Void*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    put_class_async : Proc(IWbemServices*, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    delete_class : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    delete_class_async : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    create_class_enum : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_class_enum_async : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    put_instance : Proc(IWbemServices*, Void*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    put_instance_async : Proc(IWbemServices*, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    delete_instance : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    delete_instance_async : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    create_instance_enum : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_instance_enum_async : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    exec_query : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    exec_query_async : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    exec_notification_query : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    exec_notification_query_async : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    exec_method : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Void**, Void**, Win32cr::Foundation::HRESULT),
    exec_method_async : Proc(IWbemServices*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("9556dc99-828c-11cf-a37e-00aa003240c7")]
  record IWbemServices, lpVtbl : IWbemServicesVtbl* do
    GUID = LibC::GUID.new(0x9556dc99_u32, 0x828c_u16, 0x11cf_u16, StaticArray[0xa3_u8, 0x7e_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x32_u8, 0x40_u8, 0xc7_u8])
    def query_interface(this : IWbemServices*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemServices*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemServices*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def open_namespace(this : IWbemServices*, strNamespace : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, ppWorkingNamespace : Void**, ppResult : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_namespace.call(this, strNamespace, lFlags, pCtx, ppWorkingNamespace, ppResult)
    end
    def cancel_async_call(this : IWbemServices*, pSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cancel_async_call.call(this, pSink)
    end
    def query_object_sink(this : IWbemServices*, lFlags : Int32, ppResponseHandler : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_object_sink.call(this, lFlags, ppResponseHandler)
    end
    def get_object(this : IWbemServices*, strObjectPath : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, ppObject : Void**, ppCallResult : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object.call(this, strObjectPath, lFlags, pCtx, ppObject, ppCallResult)
    end
    def get_object_async(this : IWbemServices*, strObjectPath : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, pResponseHandler : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object_async.call(this, strObjectPath, lFlags, pCtx, pResponseHandler)
    end
    def put_class(this : IWbemServices*, pObject : Void*, lFlags : Int32, pCtx : Void*, ppCallResult : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_class.call(this, pObject, lFlags, pCtx, ppCallResult)
    end
    def put_class_async(this : IWbemServices*, pObject : Void*, lFlags : Int32, pCtx : Void*, pResponseHandler : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_class_async.call(this, pObject, lFlags, pCtx, pResponseHandler)
    end
    def delete_class(this : IWbemServices*, strClass : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, ppCallResult : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_class.call(this, strClass, lFlags, pCtx, ppCallResult)
    end
    def delete_class_async(this : IWbemServices*, strClass : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, pResponseHandler : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_class_async.call(this, strClass, lFlags, pCtx, pResponseHandler)
    end
    def create_class_enum(this : IWbemServices*, strSuperclass : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_class_enum.call(this, strSuperclass, lFlags, pCtx, ppEnum)
    end
    def create_class_enum_async(this : IWbemServices*, strSuperclass : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, pResponseHandler : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_class_enum_async.call(this, strSuperclass, lFlags, pCtx, pResponseHandler)
    end
    def put_instance(this : IWbemServices*, pInst : Void*, lFlags : Int32, pCtx : Void*, ppCallResult : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_instance.call(this, pInst, lFlags, pCtx, ppCallResult)
    end
    def put_instance_async(this : IWbemServices*, pInst : Void*, lFlags : Int32, pCtx : Void*, pResponseHandler : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_instance_async.call(this, pInst, lFlags, pCtx, pResponseHandler)
    end
    def delete_instance(this : IWbemServices*, strObjectPath : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, ppCallResult : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_instance.call(this, strObjectPath, lFlags, pCtx, ppCallResult)
    end
    def delete_instance_async(this : IWbemServices*, strObjectPath : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, pResponseHandler : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_instance_async.call(this, strObjectPath, lFlags, pCtx, pResponseHandler)
    end
    def create_instance_enum(this : IWbemServices*, strFilter : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_instance_enum.call(this, strFilter, lFlags, pCtx, ppEnum)
    end
    def create_instance_enum_async(this : IWbemServices*, strFilter : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, pResponseHandler : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_instance_enum_async.call(this, strFilter, lFlags, pCtx, pResponseHandler)
    end
    def exec_query(this : IWbemServices*, strQueryLanguage : Win32cr::Foundation::BSTR, strQuery : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_query.call(this, strQueryLanguage, strQuery, lFlags, pCtx, ppEnum)
    end
    def exec_query_async(this : IWbemServices*, strQueryLanguage : Win32cr::Foundation::BSTR, strQuery : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, pResponseHandler : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_query_async.call(this, strQueryLanguage, strQuery, lFlags, pCtx, pResponseHandler)
    end
    def exec_notification_query(this : IWbemServices*, strQueryLanguage : Win32cr::Foundation::BSTR, strQuery : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_notification_query.call(this, strQueryLanguage, strQuery, lFlags, pCtx, ppEnum)
    end
    def exec_notification_query_async(this : IWbemServices*, strQueryLanguage : Win32cr::Foundation::BSTR, strQuery : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, pResponseHandler : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_notification_query_async.call(this, strQueryLanguage, strQuery, lFlags, pCtx, pResponseHandler)
    end
    def exec_method(this : IWbemServices*, strObjectPath : Win32cr::Foundation::BSTR, strMethodName : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, pInParams : Void*, ppOutParams : Void**, ppCallResult : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_method.call(this, strObjectPath, strMethodName, lFlags, pCtx, pInParams, ppOutParams, ppCallResult)
    end
    def exec_method_async(this : IWbemServices*, strObjectPath : Win32cr::Foundation::BSTR, strMethodName : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, pInParams : Void*, pResponseHandler : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_method_async.call(this, strObjectPath, strMethodName, lFlags, pCtx, pInParams, pResponseHandler)
    end

  end

  @[Extern]
  record IWbemLocatorVtbl,
    query_interface : Proc(IWbemLocator*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemLocator*, UInt32),
    release : Proc(IWbemLocator*, UInt32),
    connect_server : Proc(IWbemLocator*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Win32cr::Foundation::BSTR, Void*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("dc12a687-737f-11cf-884d-00aa004b2e24")]
  record IWbemLocator, lpVtbl : IWbemLocatorVtbl* do
    GUID = LibC::GUID.new(0xdc12a687_u32, 0x737f_u16, 0x11cf_u16, StaticArray[0x88_u8, 0x4d_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0x2e_u8, 0x24_u8])
    def query_interface(this : IWbemLocator*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemLocator*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemLocator*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def connect_server(this : IWbemLocator*, strNetworkResource : Win32cr::Foundation::BSTR, strUser : Win32cr::Foundation::BSTR, strPassword : Win32cr::Foundation::BSTR, strLocale : Win32cr::Foundation::BSTR, lSecurityFlags : Int32, strAuthority : Win32cr::Foundation::BSTR, pCtx : Void*, ppNamespace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.connect_server.call(this, strNetworkResource, strUser, strPassword, strLocale, lSecurityFlags, strAuthority, pCtx, ppNamespace)
    end

  end

  @[Extern]
  record IWbemObjectSinkVtbl,
    query_interface : Proc(IWbemObjectSink*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemObjectSink*, UInt32),
    release : Proc(IWbemObjectSink*, UInt32),
    indicate : Proc(IWbemObjectSink*, Int32, Void**, Win32cr::Foundation::HRESULT),
    set_status : Proc(IWbemObjectSink*, Int32, Win32cr::Foundation::HRESULT, Win32cr::Foundation::BSTR, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("7c857801-7381-11cf-884d-00aa004b2e24")]
  record IWbemObjectSink, lpVtbl : IWbemObjectSinkVtbl* do
    GUID = LibC::GUID.new(0x7c857801_u32, 0x7381_u16, 0x11cf_u16, StaticArray[0x88_u8, 0x4d_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0x2e_u8, 0x24_u8])
    def query_interface(this : IWbemObjectSink*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemObjectSink*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemObjectSink*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def indicate(this : IWbemObjectSink*, lObjectCount : Int32, apObjArray : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.indicate.call(this, lObjectCount, apObjArray)
    end
    def set_status(this : IWbemObjectSink*, lFlags : Int32, hResult : Win32cr::Foundation::HRESULT, strParam : Win32cr::Foundation::BSTR, pObjParam : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_status.call(this, lFlags, hResult, strParam, pObjParam)
    end

  end

  @[Extern]
  record IEnumWbemClassObjectVtbl,
    query_interface : Proc(IEnumWbemClassObject*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumWbemClassObject*, UInt32),
    release : Proc(IEnumWbemClassObject*, UInt32),
    reset : Proc(IEnumWbemClassObject*, Win32cr::Foundation::HRESULT),
    next__ : Proc(IEnumWbemClassObject*, Int32, UInt32, Void**, UInt32*, Win32cr::Foundation::HRESULT),
    next_async : Proc(IEnumWbemClassObject*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumWbemClassObject*, Void**, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumWbemClassObject*, Int32, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("027947e1-d731-11ce-a357-000000000001")]
  record IEnumWbemClassObject, lpVtbl : IEnumWbemClassObjectVtbl* do
    GUID = LibC::GUID.new(0x27947e1_u32, 0xd731_u16, 0x11ce_u16, StaticArray[0xa3_u8, 0x57_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x1_u8])
    def query_interface(this : IEnumWbemClassObject*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumWbemClassObject*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumWbemClassObject*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def reset(this : IEnumWbemClassObject*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def next__(this : IEnumWbemClassObject*, lTimeout : Int32, uCount : UInt32, apObjects : Void**, puReturned : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, lTimeout, uCount, apObjects, puReturned)
    end
    def next_async(this : IEnumWbemClassObject*, uCount : UInt32, pSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next_async.call(this, uCount, pSink)
    end
    def clone(this : IEnumWbemClassObject*, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppEnum)
    end
    def skip(this : IEnumWbemClassObject*, lTimeout : Int32, nCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, lTimeout, nCount)
    end

  end

  @[Extern]
  record IWbemCallResultVtbl,
    query_interface : Proc(IWbemCallResult*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemCallResult*, UInt32),
    release : Proc(IWbemCallResult*, UInt32),
    get_result_object : Proc(IWbemCallResult*, Int32, Void**, Win32cr::Foundation::HRESULT),
    get_result_string : Proc(IWbemCallResult*, Int32, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_result_services : Proc(IWbemCallResult*, Int32, Void**, Win32cr::Foundation::HRESULT),
    get_call_status : Proc(IWbemCallResult*, Int32, Int32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("44aca675-e8fc-11d0-a07c-00c04fb68820")]
  record IWbemCallResult, lpVtbl : IWbemCallResultVtbl* do
    GUID = LibC::GUID.new(0x44aca675_u32, 0xe8fc_u16, 0x11d0_u16, StaticArray[0xa0_u8, 0x7c_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
    def query_interface(this : IWbemCallResult*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemCallResult*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemCallResult*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_result_object(this : IWbemCallResult*, lTimeout : Int32, ppResultObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_result_object.call(this, lTimeout, ppResultObject)
    end
    def get_result_string(this : IWbemCallResult*, lTimeout : Int32, pstrResultString : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_result_string.call(this, lTimeout, pstrResultString)
    end
    def get_result_services(this : IWbemCallResult*, lTimeout : Int32, ppServices : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_result_services.call(this, lTimeout, ppServices)
    end
    def get_call_status(this : IWbemCallResult*, lTimeout : Int32, plStatus : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_call_status.call(this, lTimeout, plStatus)
    end

  end

  @[Extern]
  record IWbemContextVtbl,
    query_interface : Proc(IWbemContext*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemContext*, UInt32),
    release : Proc(IWbemContext*, UInt32),
    clone : Proc(IWbemContext*, Void**, Win32cr::Foundation::HRESULT),
    get_names : Proc(IWbemContext*, Int32, Win32cr::System::Com::SAFEARRAY**, Win32cr::Foundation::HRESULT),
    begin_enumeration : Proc(IWbemContext*, Int32, Win32cr::Foundation::HRESULT),
    next__ : Proc(IWbemContext*, Int32, Win32cr::Foundation::BSTR*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    end_enumeration : Proc(IWbemContext*, Win32cr::Foundation::HRESULT),
    set_value : Proc(IWbemContext*, Win32cr::Foundation::PWSTR, Int32, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_value : Proc(IWbemContext*, Win32cr::Foundation::PWSTR, Int32, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    delete_value : Proc(IWbemContext*, Win32cr::Foundation::PWSTR, Int32, Win32cr::Foundation::HRESULT),
    delete_all : Proc(IWbemContext*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("44aca674-e8fc-11d0-a07c-00c04fb68820")]
  record IWbemContext, lpVtbl : IWbemContextVtbl* do
    GUID = LibC::GUID.new(0x44aca674_u32, 0xe8fc_u16, 0x11d0_u16, StaticArray[0xa0_u8, 0x7c_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
    def query_interface(this : IWbemContext*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemContext*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemContext*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def clone(this : IWbemContext*, ppNewCopy : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppNewCopy)
    end
    def get_names(this : IWbemContext*, lFlags : Int32, pNames : Win32cr::System::Com::SAFEARRAY**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_names.call(this, lFlags, pNames)
    end
    def begin_enumeration(this : IWbemContext*, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.begin_enumeration.call(this, lFlags)
    end
    def next__(this : IWbemContext*, lFlags : Int32, pstrName : Win32cr::Foundation::BSTR*, pValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, lFlags, pstrName, pValue)
    end
    def end_enumeration(this : IWbemContext*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.end_enumeration.call(this)
    end
    def set_value(this : IWbemContext*, wszName : Win32cr::Foundation::PWSTR, lFlags : Int32, pValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_value.call(this, wszName, lFlags, pValue)
    end
    def get_value(this : IWbemContext*, wszName : Win32cr::Foundation::PWSTR, lFlags : Int32, pValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_value.call(this, wszName, lFlags, pValue)
    end
    def delete_value(this : IWbemContext*, wszName : Win32cr::Foundation::PWSTR, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_value.call(this, wszName, lFlags)
    end
    def delete_all(this : IWbemContext*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_all.call(this)
    end

  end

  @[Extern]
  record IUnsecuredApartmentVtbl,
    query_interface : Proc(IUnsecuredApartment*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IUnsecuredApartment*, UInt32),
    release : Proc(IUnsecuredApartment*, UInt32),
    create_object_stub : Proc(IUnsecuredApartment*, Void*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("1cfaba8c-1523-11d1-ad79-00c04fd8fdff")]
  record IUnsecuredApartment, lpVtbl : IUnsecuredApartmentVtbl* do
    GUID = LibC::GUID.new(0x1cfaba8c_u32, 0x1523_u16, 0x11d1_u16, StaticArray[0xad_u8, 0x79_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
    def query_interface(this : IUnsecuredApartment*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IUnsecuredApartment*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IUnsecuredApartment*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_object_stub(this : IUnsecuredApartment*, pObject : Void*, ppStub : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_object_stub.call(this, pObject, ppStub)
    end

  end

  @[Extern]
  record IWbemUnsecuredApartmentVtbl,
    query_interface : Proc(IWbemUnsecuredApartment*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemUnsecuredApartment*, UInt32),
    release : Proc(IWbemUnsecuredApartment*, UInt32),
    create_object_stub : Proc(IWbemUnsecuredApartment*, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_sink_stub : Proc(IWbemUnsecuredApartment*, Void*, UInt32, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("31739d04-3471-4cf4-9a7c-57a44ae71956")]
  record IWbemUnsecuredApartment, lpVtbl : IWbemUnsecuredApartmentVtbl* do
    GUID = LibC::GUID.new(0x31739d04_u32, 0x3471_u16, 0x4cf4_u16, StaticArray[0x9a_u8, 0x7c_u8, 0x57_u8, 0xa4_u8, 0x4a_u8, 0xe7_u8, 0x19_u8, 0x56_u8])
    def query_interface(this : IWbemUnsecuredApartment*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemUnsecuredApartment*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemUnsecuredApartment*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_object_stub(this : IWbemUnsecuredApartment*, pObject : Void*, ppStub : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_object_stub.call(this, pObject, ppStub)
    end
    def create_sink_stub(this : IWbemUnsecuredApartment*, pSink : Void*, dwFlags : UInt32, wszReserved : Win32cr::Foundation::PWSTR, ppStub : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_sink_stub.call(this, pSink, dwFlags, wszReserved, ppStub)
    end

  end

  @[Extern]
  record IWbemStatusCodeTextVtbl,
    query_interface : Proc(IWbemStatusCodeText*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemStatusCodeText*, UInt32),
    release : Proc(IWbemStatusCodeText*, UInt32),
    get_error_code_text : Proc(IWbemStatusCodeText*, Win32cr::Foundation::HRESULT, UInt32, Int32, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_facility_code_text : Proc(IWbemStatusCodeText*, Win32cr::Foundation::HRESULT, UInt32, Int32, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("eb87e1bc-3233-11d2-aec9-00c04fb68820")]
  record IWbemStatusCodeText, lpVtbl : IWbemStatusCodeTextVtbl* do
    GUID = LibC::GUID.new(0xeb87e1bc_u32, 0x3233_u16, 0x11d2_u16, StaticArray[0xae_u8, 0xc9_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
    def query_interface(this : IWbemStatusCodeText*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemStatusCodeText*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemStatusCodeText*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_error_code_text(this : IWbemStatusCodeText*, hRes : Win32cr::Foundation::HRESULT, locale_id : UInt32, lFlags : Int32, message_text : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_error_code_text.call(this, hRes, locale_id, lFlags, message_text)
    end
    def get_facility_code_text(this : IWbemStatusCodeText*, hRes : Win32cr::Foundation::HRESULT, locale_id : UInt32, lFlags : Int32, message_text : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_facility_code_text.call(this, hRes, locale_id, lFlags, message_text)
    end

  end

  @[Extern]
  record IWbemBackupRestoreVtbl,
    query_interface : Proc(IWbemBackupRestore*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemBackupRestore*, UInt32),
    release : Proc(IWbemBackupRestore*, UInt32),
    backup : Proc(IWbemBackupRestore*, Win32cr::Foundation::PWSTR, Int32, Win32cr::Foundation::HRESULT),
    restore : Proc(IWbemBackupRestore*, Win32cr::Foundation::PWSTR, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("c49e32c7-bc8b-11d2-85d4-00105a1f8304")]
  record IWbemBackupRestore, lpVtbl : IWbemBackupRestoreVtbl* do
    GUID = LibC::GUID.new(0xc49e32c7_u32, 0xbc8b_u16, 0x11d2_u16, StaticArray[0x85_u8, 0xd4_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x83_u8, 0x4_u8])
    def query_interface(this : IWbemBackupRestore*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemBackupRestore*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemBackupRestore*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def backup(this : IWbemBackupRestore*, strBackupToFile : Win32cr::Foundation::PWSTR, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.backup.call(this, strBackupToFile, lFlags)
    end
    def restore(this : IWbemBackupRestore*, strRestoreFromFile : Win32cr::Foundation::PWSTR, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.restore.call(this, strRestoreFromFile, lFlags)
    end

  end

  @[Extern]
  record IWbemBackupRestoreExVtbl,
    query_interface : Proc(IWbemBackupRestoreEx*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemBackupRestoreEx*, UInt32),
    release : Proc(IWbemBackupRestoreEx*, UInt32),
    backup : Proc(IWbemBackupRestoreEx*, Win32cr::Foundation::PWSTR, Int32, Win32cr::Foundation::HRESULT),
    restore : Proc(IWbemBackupRestoreEx*, Win32cr::Foundation::PWSTR, Int32, Win32cr::Foundation::HRESULT),
    pause : Proc(IWbemBackupRestoreEx*, Win32cr::Foundation::HRESULT),
    resume : Proc(IWbemBackupRestoreEx*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("a359dec5-e813-4834-8a2a-ba7f1d777d76")]
  record IWbemBackupRestoreEx, lpVtbl : IWbemBackupRestoreExVtbl* do
    GUID = LibC::GUID.new(0xa359dec5_u32, 0xe813_u16, 0x4834_u16, StaticArray[0x8a_u8, 0x2a_u8, 0xba_u8, 0x7f_u8, 0x1d_u8, 0x77_u8, 0x7d_u8, 0x76_u8])
    def query_interface(this : IWbemBackupRestoreEx*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemBackupRestoreEx*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemBackupRestoreEx*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def backup(this : IWbemBackupRestoreEx*, strBackupToFile : Win32cr::Foundation::PWSTR, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.backup.call(this, strBackupToFile, lFlags)
    end
    def restore(this : IWbemBackupRestoreEx*, strRestoreFromFile : Win32cr::Foundation::PWSTR, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.restore.call(this, strRestoreFromFile, lFlags)
    end
    def pause(this : IWbemBackupRestoreEx*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.pause.call(this)
    end
    def resume(this : IWbemBackupRestoreEx*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resume.call(this)
    end

  end

  @[Extern]
  record IWbemRefresherVtbl,
    query_interface : Proc(IWbemRefresher*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemRefresher*, UInt32),
    release : Proc(IWbemRefresher*, UInt32),
    refresh : Proc(IWbemRefresher*, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("49353c99-516b-11d1-aea6-00c04fb68820")]
  record IWbemRefresher, lpVtbl : IWbemRefresherVtbl* do
    GUID = LibC::GUID.new(0x49353c99_u32, 0x516b_u16, 0x11d1_u16, StaticArray[0xae_u8, 0xa6_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
    def query_interface(this : IWbemRefresher*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemRefresher*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemRefresher*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def refresh(this : IWbemRefresher*, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh.call(this, lFlags)
    end

  end

  @[Extern]
  record IWbemHiPerfEnumVtbl,
    query_interface : Proc(IWbemHiPerfEnum*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemHiPerfEnum*, UInt32),
    release : Proc(IWbemHiPerfEnum*, UInt32),
    add_objects : Proc(IWbemHiPerfEnum*, Int32, UInt32, Int32*, Void**, Win32cr::Foundation::HRESULT),
    remove_objects : Proc(IWbemHiPerfEnum*, Int32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    get_objects : Proc(IWbemHiPerfEnum*, Int32, UInt32, Void**, UInt32*, Win32cr::Foundation::HRESULT),
    remove_all : Proc(IWbemHiPerfEnum*, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("2705c288-79ae-11d2-b348-00105a1f8177")]
  record IWbemHiPerfEnum, lpVtbl : IWbemHiPerfEnumVtbl* do
    GUID = LibC::GUID.new(0x2705c288_u32, 0x79ae_u16, 0x11d2_u16, StaticArray[0xb3_u8, 0x48_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x81_u8, 0x77_u8])
    def query_interface(this : IWbemHiPerfEnum*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemHiPerfEnum*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemHiPerfEnum*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_objects(this : IWbemHiPerfEnum*, lFlags : Int32, uNumObjects : UInt32, apIds : Int32*, apObj : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_objects.call(this, lFlags, uNumObjects, apIds, apObj)
    end
    def remove_objects(this : IWbemHiPerfEnum*, lFlags : Int32, uNumObjects : UInt32, apIds : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_objects.call(this, lFlags, uNumObjects, apIds)
    end
    def get_objects(this : IWbemHiPerfEnum*, lFlags : Int32, uNumObjects : UInt32, apObj : Void**, puReturned : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_objects.call(this, lFlags, uNumObjects, apObj, puReturned)
    end
    def remove_all(this : IWbemHiPerfEnum*, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_all.call(this, lFlags)
    end

  end

  @[Extern]
  record IWbemConfigureRefresherVtbl,
    query_interface : Proc(IWbemConfigureRefresher*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemConfigureRefresher*, UInt32),
    release : Proc(IWbemConfigureRefresher*, UInt32),
    add_object_by_path : Proc(IWbemConfigureRefresher*, Void*, Win32cr::Foundation::PWSTR, Int32, Void*, Void**, Int32*, Win32cr::Foundation::HRESULT),
    add_object_by_template : Proc(IWbemConfigureRefresher*, Void*, Void*, Int32, Void*, Void**, Int32*, Win32cr::Foundation::HRESULT),
    add_refresher : Proc(IWbemConfigureRefresher*, Void*, Int32, Int32*, Win32cr::Foundation::HRESULT),
    remove : Proc(IWbemConfigureRefresher*, Int32, Int32, Win32cr::Foundation::HRESULT),
    add_enum : Proc(IWbemConfigureRefresher*, Void*, Win32cr::Foundation::PWSTR, Int32, Void*, Void**, Int32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("49353c92-516b-11d1-aea6-00c04fb68820")]
  record IWbemConfigureRefresher, lpVtbl : IWbemConfigureRefresherVtbl* do
    GUID = LibC::GUID.new(0x49353c92_u32, 0x516b_u16, 0x11d1_u16, StaticArray[0xae_u8, 0xa6_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
    def query_interface(this : IWbemConfigureRefresher*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemConfigureRefresher*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemConfigureRefresher*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_object_by_path(this : IWbemConfigureRefresher*, pNamespace : Void*, wszPath : Win32cr::Foundation::PWSTR, lFlags : Int32, pContext : Void*, ppRefreshable : Void**, plId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_object_by_path.call(this, pNamespace, wszPath, lFlags, pContext, ppRefreshable, plId)
    end
    def add_object_by_template(this : IWbemConfigureRefresher*, pNamespace : Void*, pTemplate : Void*, lFlags : Int32, pContext : Void*, ppRefreshable : Void**, plId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_object_by_template.call(this, pNamespace, pTemplate, lFlags, pContext, ppRefreshable, plId)
    end
    def add_refresher(this : IWbemConfigureRefresher*, pRefresher : Void*, lFlags : Int32, plId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_refresher.call(this, pRefresher, lFlags, plId)
    end
    def remove(this : IWbemConfigureRefresher*, lId : Int32, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove.call(this, lId, lFlags)
    end
    def add_enum(this : IWbemConfigureRefresher*, pNamespace : Void*, wszClassName : Win32cr::Foundation::PWSTR, lFlags : Int32, pContext : Void*, ppEnum : Void**, plId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_enum.call(this, pNamespace, wszClassName, lFlags, pContext, ppEnum, plId)
    end

  end

  @[Extern]
  record IWbemObjectSinkExVtbl,
    query_interface : Proc(IWbemObjectSinkEx*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemObjectSinkEx*, UInt32),
    release : Proc(IWbemObjectSinkEx*, UInt32),
    indicate : Proc(IWbemObjectSinkEx*, Int32, Void**, Win32cr::Foundation::HRESULT),
    set_status : Proc(IWbemObjectSinkEx*, Int32, Win32cr::Foundation::HRESULT, Win32cr::Foundation::BSTR, Void*, Win32cr::Foundation::HRESULT),
    write_message : Proc(IWbemObjectSinkEx*, UInt32, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    write_error : Proc(IWbemObjectSinkEx*, Void*, UInt8*, Win32cr::Foundation::HRESULT),
    prompt_user : Proc(IWbemObjectSinkEx*, Win32cr::Foundation::BSTR, UInt8, UInt8*, Win32cr::Foundation::HRESULT),
    write_progress : Proc(IWbemObjectSinkEx*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    write_stream_parameter : Proc(IWbemObjectSinkEx*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, UInt32, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("e7d35cfa-348b-485e-b524-252725d697ca")]
  record IWbemObjectSinkEx, lpVtbl : IWbemObjectSinkExVtbl* do
    GUID = LibC::GUID.new(0xe7d35cfa_u32, 0x348b_u16, 0x485e_u16, StaticArray[0xb5_u8, 0x24_u8, 0x25_u8, 0x27_u8, 0x25_u8, 0xd6_u8, 0x97_u8, 0xca_u8])
    def query_interface(this : IWbemObjectSinkEx*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemObjectSinkEx*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemObjectSinkEx*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def indicate(this : IWbemObjectSinkEx*, lObjectCount : Int32, apObjArray : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.indicate.call(this, lObjectCount, apObjArray)
    end
    def set_status(this : IWbemObjectSinkEx*, lFlags : Int32, hResult : Win32cr::Foundation::HRESULT, strParam : Win32cr::Foundation::BSTR, pObjParam : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_status.call(this, lFlags, hResult, strParam, pObjParam)
    end
    def write_message(this : IWbemObjectSinkEx*, uChannel : UInt32, strMessage : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_message.call(this, uChannel, strMessage)
    end
    def write_error(this : IWbemObjectSinkEx*, pObjError : Void*, puReturned : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_error.call(this, pObjError, puReturned)
    end
    def prompt_user(this : IWbemObjectSinkEx*, strMessage : Win32cr::Foundation::BSTR, uPromptType : UInt8, puReturned : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.prompt_user.call(this, strMessage, uPromptType, puReturned)
    end
    def write_progress(this : IWbemObjectSinkEx*, strActivity : Win32cr::Foundation::BSTR, strCurrentOperation : Win32cr::Foundation::BSTR, strStatusDescription : Win32cr::Foundation::BSTR, uPercentComplete : UInt32, uSecondsRemaining : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_progress.call(this, strActivity, strCurrentOperation, strStatusDescription, uPercentComplete, uSecondsRemaining)
    end
    def write_stream_parameter(this : IWbemObjectSinkEx*, strName : Win32cr::Foundation::BSTR, vtValue : Win32cr::System::Com::VARIANT*, ulType : UInt32, ulFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_stream_parameter.call(this, strName, vtValue, ulType, ulFlags)
    end

  end

  @[Extern]
  record IWbemShutdownVtbl,
    query_interface : Proc(IWbemShutdown*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemShutdown*, UInt32),
    release : Proc(IWbemShutdown*, UInt32),
    shutdown : Proc(IWbemShutdown*, Int32, UInt32, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("b7b31df9-d515-11d3-a11c-00105a1f515a")]
  record IWbemShutdown, lpVtbl : IWbemShutdownVtbl* do
    GUID = LibC::GUID.new(0xb7b31df9_u32, 0xd515_u16, 0x11d3_u16, StaticArray[0xa1_u8, 0x1c_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x51_u8, 0x5a_u8])
    def query_interface(this : IWbemShutdown*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemShutdown*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemShutdown*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def shutdown(this : IWbemShutdown*, uReason : Int32, uMaxMilliseconds : UInt32, pCtx : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.shutdown.call(this, uReason, uMaxMilliseconds, pCtx)
    end

  end

  @[Extern]
  record IWbemObjectTextSrcVtbl,
    query_interface : Proc(IWbemObjectTextSrc*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemObjectTextSrc*, UInt32),
    release : Proc(IWbemObjectTextSrc*, UInt32),
    get_text : Proc(IWbemObjectTextSrc*, Int32, Void*, UInt32, Void*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    create_from_text : Proc(IWbemObjectTextSrc*, Int32, Win32cr::Foundation::BSTR, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("bfbf883a-cad7-11d3-a11b-00105a1f515a")]
  record IWbemObjectTextSrc, lpVtbl : IWbemObjectTextSrcVtbl* do
    GUID = LibC::GUID.new(0xbfbf883a_u32, 0xcad7_u16, 0x11d3_u16, StaticArray[0xa1_u8, 0x1b_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x51_u8, 0x5a_u8])
    def query_interface(this : IWbemObjectTextSrc*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemObjectTextSrc*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemObjectTextSrc*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_text(this : IWbemObjectTextSrc*, lFlags : Int32, pObj : Void*, uObjTextFormat : UInt32, pCtx : Void*, strText : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_text.call(this, lFlags, pObj, uObjTextFormat, pCtx, strText)
    end
    def create_from_text(this : IWbemObjectTextSrc*, lFlags : Int32, strText : Win32cr::Foundation::BSTR, uObjTextFormat : UInt32, pCtx : Void*, pNewObj : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_from_text.call(this, lFlags, strText, uObjTextFormat, pCtx, pNewObj)
    end

  end

  @[Extern]
  record IMofCompilerVtbl,
    query_interface : Proc(IMofCompiler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IMofCompiler*, UInt32),
    release : Proc(IMofCompiler*, UInt32),
    compile_file : Proc(IMofCompiler*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Int32, Int32, Int32, Win32cr::System::Wmi::WBEM_COMPILE_STATUS_INFO*, Win32cr::Foundation::HRESULT),
    compile_buffer : Proc(IMofCompiler*, Int32, UInt8*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Int32, Int32, Int32, Win32cr::System::Wmi::WBEM_COMPILE_STATUS_INFO*, Win32cr::Foundation::HRESULT),
    create_bmof : Proc(IMofCompiler*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Int32, Int32, Int32, Win32cr::System::Wmi::WBEM_COMPILE_STATUS_INFO*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("6daf974e-2e37-11d2-aec9-00c04fb68820")]
  record IMofCompiler, lpVtbl : IMofCompilerVtbl* do
    GUID = LibC::GUID.new(0x6daf974e_u32, 0x2e37_u16, 0x11d2_u16, StaticArray[0xae_u8, 0xc9_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
    def query_interface(this : IMofCompiler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IMofCompiler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IMofCompiler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def compile_file(this : IMofCompiler*, file_name : Win32cr::Foundation::PWSTR, server_and_namespace : Win32cr::Foundation::PWSTR, user : Win32cr::Foundation::PWSTR, authority : Win32cr::Foundation::PWSTR, password : Win32cr::Foundation::PWSTR, lOptionFlags : Int32, lClassFlags : Int32, lInstanceFlags : Int32, pInfo : Win32cr::System::Wmi::WBEM_COMPILE_STATUS_INFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compile_file.call(this, file_name, server_and_namespace, user, authority, password, lOptionFlags, lClassFlags, lInstanceFlags, pInfo)
    end
    def compile_buffer(this : IMofCompiler*, buff_size : Int32, pBuffer : UInt8*, server_and_namespace : Win32cr::Foundation::PWSTR, user : Win32cr::Foundation::PWSTR, authority : Win32cr::Foundation::PWSTR, password : Win32cr::Foundation::PWSTR, lOptionFlags : Int32, lClassFlags : Int32, lInstanceFlags : Int32, pInfo : Win32cr::System::Wmi::WBEM_COMPILE_STATUS_INFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compile_buffer.call(this, buff_size, pBuffer, server_and_namespace, user, authority, password, lOptionFlags, lClassFlags, lInstanceFlags, pInfo)
    end
    def create_bmof(this : IMofCompiler*, text_file_name : Win32cr::Foundation::PWSTR, bmof_file_name : Win32cr::Foundation::PWSTR, server_and_namespace : Win32cr::Foundation::PWSTR, lOptionFlags : Int32, lClassFlags : Int32, lInstanceFlags : Int32, pInfo : Win32cr::System::Wmi::WBEM_COMPILE_STATUS_INFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_bmof.call(this, text_file_name, bmof_file_name, server_and_namespace, lOptionFlags, lClassFlags, lInstanceFlags, pInfo)
    end

  end

  @[Extern]
  record IWbemPropertyProviderVtbl,
    query_interface : Proc(IWbemPropertyProvider*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemPropertyProvider*, UInt32),
    release : Proc(IWbemPropertyProvider*, UInt32),
    get_property : Proc(IWbemPropertyProvider*, Int32, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    put_property : Proc(IWbemPropertyProvider*, Int32, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("ce61e841-65bc-11d0-b6bd-00aa003240c7")]
  record IWbemPropertyProvider, lpVtbl : IWbemPropertyProviderVtbl* do
    GUID = LibC::GUID.new(0xce61e841_u32, 0x65bc_u16, 0x11d0_u16, StaticArray[0xb6_u8, 0xbd_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x32_u8, 0x40_u8, 0xc7_u8])
    def query_interface(this : IWbemPropertyProvider*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemPropertyProvider*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemPropertyProvider*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_property(this : IWbemPropertyProvider*, lFlags : Int32, strLocale : Win32cr::Foundation::BSTR, strClassMapping : Win32cr::Foundation::BSTR, strInstMapping : Win32cr::Foundation::BSTR, strPropMapping : Win32cr::Foundation::BSTR, pvValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property.call(this, lFlags, strLocale, strClassMapping, strInstMapping, strPropMapping, pvValue)
    end
    def put_property(this : IWbemPropertyProvider*, lFlags : Int32, strLocale : Win32cr::Foundation::BSTR, strClassMapping : Win32cr::Foundation::BSTR, strInstMapping : Win32cr::Foundation::BSTR, strPropMapping : Win32cr::Foundation::BSTR, pvValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_property.call(this, lFlags, strLocale, strClassMapping, strInstMapping, strPropMapping, pvValue)
    end

  end

  @[Extern]
  record IWbemUnboundObjectSinkVtbl,
    query_interface : Proc(IWbemUnboundObjectSink*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemUnboundObjectSink*, UInt32),
    release : Proc(IWbemUnboundObjectSink*, UInt32),
    indicate_to_consumer : Proc(IWbemUnboundObjectSink*, Void*, Int32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("e246107b-b06e-11d0-ad61-00c04fd8fdff")]
  record IWbemUnboundObjectSink, lpVtbl : IWbemUnboundObjectSinkVtbl* do
    GUID = LibC::GUID.new(0xe246107b_u32, 0xb06e_u16, 0x11d0_u16, StaticArray[0xad_u8, 0x61_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
    def query_interface(this : IWbemUnboundObjectSink*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemUnboundObjectSink*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemUnboundObjectSink*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def indicate_to_consumer(this : IWbemUnboundObjectSink*, pLogicalConsumer : Void*, lNumObjects : Int32, apObjects : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.indicate_to_consumer.call(this, pLogicalConsumer, lNumObjects, apObjects)
    end

  end

  @[Extern]
  record IWbemEventProviderVtbl,
    query_interface : Proc(IWbemEventProvider*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemEventProvider*, UInt32),
    release : Proc(IWbemEventProvider*, UInt32),
    provide_events : Proc(IWbemEventProvider*, Void*, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("e245105b-b06e-11d0-ad61-00c04fd8fdff")]
  record IWbemEventProvider, lpVtbl : IWbemEventProviderVtbl* do
    GUID = LibC::GUID.new(0xe245105b_u32, 0xb06e_u16, 0x11d0_u16, StaticArray[0xad_u8, 0x61_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
    def query_interface(this : IWbemEventProvider*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemEventProvider*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemEventProvider*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def provide_events(this : IWbemEventProvider*, pSink : Void*, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.provide_events.call(this, pSink, lFlags)
    end

  end

  @[Extern]
  record IWbemEventProviderQuerySinkVtbl,
    query_interface : Proc(IWbemEventProviderQuerySink*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemEventProviderQuerySink*, UInt32),
    release : Proc(IWbemEventProviderQuerySink*, UInt32),
    new_query : Proc(IWbemEventProviderQuerySink*, UInt32, UInt16*, UInt16*, Win32cr::Foundation::HRESULT),
    cancel_query : Proc(IWbemEventProviderQuerySink*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("580acaf8-fa1c-11d0-ad72-00c04fd8fdff")]
  record IWbemEventProviderQuerySink, lpVtbl : IWbemEventProviderQuerySinkVtbl* do
    GUID = LibC::GUID.new(0x580acaf8_u32, 0xfa1c_u16, 0x11d0_u16, StaticArray[0xad_u8, 0x72_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
    def query_interface(this : IWbemEventProviderQuerySink*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemEventProviderQuerySink*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemEventProviderQuerySink*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def new_query(this : IWbemEventProviderQuerySink*, dwId : UInt32, wszQueryLanguage : UInt16*, wszQuery : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.new_query.call(this, dwId, wszQueryLanguage, wszQuery)
    end
    def cancel_query(this : IWbemEventProviderQuerySink*, dwId : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cancel_query.call(this, dwId)
    end

  end

  @[Extern]
  record IWbemEventProviderSecurityVtbl,
    query_interface : Proc(IWbemEventProviderSecurity*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemEventProviderSecurity*, UInt32),
    release : Proc(IWbemEventProviderSecurity*, UInt32),
    access_check : Proc(IWbemEventProviderSecurity*, UInt16*, UInt16*, Int32, UInt8*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("631f7d96-d993-11d2-b339-00105a1f4aaf")]
  record IWbemEventProviderSecurity, lpVtbl : IWbemEventProviderSecurityVtbl* do
    GUID = LibC::GUID.new(0x631f7d96_u32, 0xd993_u16, 0x11d2_u16, StaticArray[0xb3_u8, 0x39_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x4a_u8, 0xaf_u8])
    def query_interface(this : IWbemEventProviderSecurity*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemEventProviderSecurity*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemEventProviderSecurity*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def access_check(this : IWbemEventProviderSecurity*, wszQueryLanguage : UInt16*, wszQuery : UInt16*, lSidLength : Int32, pSid : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.access_check.call(this, wszQueryLanguage, wszQuery, lSidLength, pSid)
    end

  end

  @[Extern]
  record IWbemEventConsumerProviderVtbl,
    query_interface : Proc(IWbemEventConsumerProvider*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemEventConsumerProvider*, UInt32),
    release : Proc(IWbemEventConsumerProvider*, UInt32),
    find_consumer : Proc(IWbemEventConsumerProvider*, Void*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("e246107a-b06e-11d0-ad61-00c04fd8fdff")]
  record IWbemEventConsumerProvider, lpVtbl : IWbemEventConsumerProviderVtbl* do
    GUID = LibC::GUID.new(0xe246107a_u32, 0xb06e_u16, 0x11d0_u16, StaticArray[0xad_u8, 0x61_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
    def query_interface(this : IWbemEventConsumerProvider*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemEventConsumerProvider*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemEventConsumerProvider*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def find_consumer(this : IWbemEventConsumerProvider*, pLogicalConsumer : Void*, ppConsumer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_consumer.call(this, pLogicalConsumer, ppConsumer)
    end

  end

  @[Extern]
  record IWbemProviderInitSinkVtbl,
    query_interface : Proc(IWbemProviderInitSink*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemProviderInitSink*, UInt32),
    release : Proc(IWbemProviderInitSink*, UInt32),
    set_status : Proc(IWbemProviderInitSink*, Int32, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("1be41571-91dd-11d1-aeb2-00c04fb68820")]
  record IWbemProviderInitSink, lpVtbl : IWbemProviderInitSinkVtbl* do
    GUID = LibC::GUID.new(0x1be41571_u32, 0x91dd_u16, 0x11d1_u16, StaticArray[0xae_u8, 0xb2_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
    def query_interface(this : IWbemProviderInitSink*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemProviderInitSink*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemProviderInitSink*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_status(this : IWbemProviderInitSink*, lStatus : Int32, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_status.call(this, lStatus, lFlags)
    end

  end

  @[Extern]
  record IWbemProviderInitVtbl,
    query_interface : Proc(IWbemProviderInit*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemProviderInit*, UInt32),
    release : Proc(IWbemProviderInit*, UInt32),
    initialize__ : Proc(IWbemProviderInit*, Win32cr::Foundation::PWSTR, Int32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void*, Void*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("1be41572-91dd-11d1-aeb2-00c04fb68820")]
  record IWbemProviderInit, lpVtbl : IWbemProviderInitVtbl* do
    GUID = LibC::GUID.new(0x1be41572_u32, 0x91dd_u16, 0x11d1_u16, StaticArray[0xae_u8, 0xb2_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
    def query_interface(this : IWbemProviderInit*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemProviderInit*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemProviderInit*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IWbemProviderInit*, wszUser : Win32cr::Foundation::PWSTR, lFlags : Int32, wszNamespace : Win32cr::Foundation::PWSTR, wszLocale : Win32cr::Foundation::PWSTR, pNamespace : Void*, pCtx : Void*, pInitSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, wszUser, lFlags, wszNamespace, wszLocale, pNamespace, pCtx, pInitSink)
    end

  end

  @[Extern]
  record IWbemHiPerfProviderVtbl,
    query_interface : Proc(IWbemHiPerfProvider*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemHiPerfProvider*, UInt32),
    release : Proc(IWbemHiPerfProvider*, UInt32),
    query_instances : Proc(IWbemHiPerfProvider*, Void*, Win32cr::Foundation::PWSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    create_refresher : Proc(IWbemHiPerfProvider*, Void*, Int32, Void**, Win32cr::Foundation::HRESULT),
    create_refreshable_object : Proc(IWbemHiPerfProvider*, Void*, Void*, Void*, Int32, Void*, Void**, Int32*, Win32cr::Foundation::HRESULT),
    stop_refreshing : Proc(IWbemHiPerfProvider*, Void*, Int32, Int32, Win32cr::Foundation::HRESULT),
    create_refreshable_enum : Proc(IWbemHiPerfProvider*, Void*, Win32cr::Foundation::PWSTR, Void*, Int32, Void*, Void*, Int32*, Win32cr::Foundation::HRESULT),
    get_objects : Proc(IWbemHiPerfProvider*, Void*, Int32, Void**, Int32, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("49353c93-516b-11d1-aea6-00c04fb68820")]
  record IWbemHiPerfProvider, lpVtbl : IWbemHiPerfProviderVtbl* do
    GUID = LibC::GUID.new(0x49353c93_u32, 0x516b_u16, 0x11d1_u16, StaticArray[0xae_u8, 0xa6_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
    def query_interface(this : IWbemHiPerfProvider*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemHiPerfProvider*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemHiPerfProvider*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def query_instances(this : IWbemHiPerfProvider*, pNamespace : Void*, wszClass : Win32cr::Foundation::PWSTR, lFlags : Int32, pCtx : Void*, pSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_instances.call(this, pNamespace, wszClass, lFlags, pCtx, pSink)
    end
    def create_refresher(this : IWbemHiPerfProvider*, pNamespace : Void*, lFlags : Int32, ppRefresher : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_refresher.call(this, pNamespace, lFlags, ppRefresher)
    end
    def create_refreshable_object(this : IWbemHiPerfProvider*, pNamespace : Void*, pTemplate : Void*, pRefresher : Void*, lFlags : Int32, pContext : Void*, ppRefreshable : Void**, plId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_refreshable_object.call(this, pNamespace, pTemplate, pRefresher, lFlags, pContext, ppRefreshable, plId)
    end
    def stop_refreshing(this : IWbemHiPerfProvider*, pRefresher : Void*, lId : Int32, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop_refreshing.call(this, pRefresher, lId, lFlags)
    end
    def create_refreshable_enum(this : IWbemHiPerfProvider*, pNamespace : Void*, wszClass : Win32cr::Foundation::PWSTR, pRefresher : Void*, lFlags : Int32, pContext : Void*, pHiPerfEnum : Void*, plId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_refreshable_enum.call(this, pNamespace, wszClass, pRefresher, lFlags, pContext, pHiPerfEnum, plId)
    end
    def get_objects(this : IWbemHiPerfProvider*, pNamespace : Void*, lNumObjects : Int32, apObj : Void**, lFlags : Int32, pContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_objects.call(this, pNamespace, lNumObjects, apObj, lFlags, pContext)
    end

  end

  @[Extern]
  record IWbemDecoupledRegistrarVtbl,
    query_interface : Proc(IWbemDecoupledRegistrar*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemDecoupledRegistrar*, UInt32),
    release : Proc(IWbemDecoupledRegistrar*, UInt32),
    register : Proc(IWbemDecoupledRegistrar*, Int32, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT),
    un_register : Proc(IWbemDecoupledRegistrar*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("1005cbcf-e64f-4646-bcd3-3a089d8a84b4")]
  record IWbemDecoupledRegistrar, lpVtbl : IWbemDecoupledRegistrarVtbl* do
    GUID = LibC::GUID.new(0x1005cbcf_u32, 0xe64f_u16, 0x4646_u16, StaticArray[0xbc_u8, 0xd3_u8, 0x3a_u8, 0x8_u8, 0x9d_u8, 0x8a_u8, 0x84_u8, 0xb4_u8])
    def query_interface(this : IWbemDecoupledRegistrar*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemDecoupledRegistrar*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemDecoupledRegistrar*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def register(this : IWbemDecoupledRegistrar*, a_Flags : Int32, a_Context : Void*, a_User : Win32cr::Foundation::PWSTR, a_Locale : Win32cr::Foundation::PWSTR, a_Scope : Win32cr::Foundation::PWSTR, a_Registration : Win32cr::Foundation::PWSTR, pIUnknown : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register.call(this, a_Flags, a_Context, a_User, a_Locale, a_Scope, a_Registration, pIUnknown)
    end
    def un_register(this : IWbemDecoupledRegistrar*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.un_register.call(this)
    end

  end

  @[Extern]
  record IWbemProviderIdentityVtbl,
    query_interface : Proc(IWbemProviderIdentity*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemProviderIdentity*, UInt32),
    release : Proc(IWbemProviderIdentity*, UInt32),
    set_registration_object : Proc(IWbemProviderIdentity*, Int32, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("631f7d97-d993-11d2-b339-00105a1f4aaf")]
  record IWbemProviderIdentity, lpVtbl : IWbemProviderIdentityVtbl* do
    GUID = LibC::GUID.new(0x631f7d97_u32, 0xd993_u16, 0x11d2_u16, StaticArray[0xb3_u8, 0x39_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x4a_u8, 0xaf_u8])
    def query_interface(this : IWbemProviderIdentity*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemProviderIdentity*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemProviderIdentity*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_registration_object(this : IWbemProviderIdentity*, lFlags : Int32, pProvReg : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_registration_object.call(this, lFlags, pProvReg)
    end

  end

  @[Extern]
  record IWbemDecoupledBasicEventProviderVtbl,
    query_interface : Proc(IWbemDecoupledBasicEventProvider*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemDecoupledBasicEventProvider*, UInt32),
    release : Proc(IWbemDecoupledBasicEventProvider*, UInt32),
    register : Proc(IWbemDecoupledBasicEventProvider*, Int32, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT),
    un_register : Proc(IWbemDecoupledBasicEventProvider*, Win32cr::Foundation::HRESULT),
    get_sink : Proc(IWbemDecoupledBasicEventProvider*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_service : Proc(IWbemDecoupledBasicEventProvider*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("86336d20-ca11-4786-9ef1-bc8a946b42fc")]
  record IWbemDecoupledBasicEventProvider, lpVtbl : IWbemDecoupledBasicEventProviderVtbl* do
    GUID = LibC::GUID.new(0x86336d20_u32, 0xca11_u16, 0x4786_u16, StaticArray[0x9e_u8, 0xf1_u8, 0xbc_u8, 0x8a_u8, 0x94_u8, 0x6b_u8, 0x42_u8, 0xfc_u8])
    def query_interface(this : IWbemDecoupledBasicEventProvider*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemDecoupledBasicEventProvider*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemDecoupledBasicEventProvider*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def register(this : IWbemDecoupledBasicEventProvider*, a_Flags : Int32, a_Context : Void*, a_User : Win32cr::Foundation::PWSTR, a_Locale : Win32cr::Foundation::PWSTR, a_Scope : Win32cr::Foundation::PWSTR, a_Registration : Win32cr::Foundation::PWSTR, pIUnknown : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register.call(this, a_Flags, a_Context, a_User, a_Locale, a_Scope, a_Registration, pIUnknown)
    end
    def un_register(this : IWbemDecoupledBasicEventProvider*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.un_register.call(this)
    end
    def get_sink(this : IWbemDecoupledBasicEventProvider*, a_Flags : Int32, a_Context : Void*, a_Sink : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_sink.call(this, a_Flags, a_Context, a_Sink)
    end
    def get_service(this : IWbemDecoupledBasicEventProvider*, a_Flags : Int32, a_Context : Void*, a_Service : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_service.call(this, a_Flags, a_Context, a_Service)
    end

  end

  @[Extern]
  record IWbemEventSinkVtbl,
    query_interface : Proc(IWbemEventSink*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemEventSink*, UInt32),
    release : Proc(IWbemEventSink*, UInt32),
    indicate : Proc(IWbemEventSink*, Int32, Void**, Win32cr::Foundation::HRESULT),
    set_status : Proc(IWbemEventSink*, Int32, Win32cr::Foundation::HRESULT, Win32cr::Foundation::BSTR, Void*, Win32cr::Foundation::HRESULT),
    set_sink_security : Proc(IWbemEventSink*, Int32, UInt8*, Win32cr::Foundation::HRESULT),
    is_active : Proc(IWbemEventSink*, Win32cr::Foundation::HRESULT),
    get_restricted_sink : Proc(IWbemEventSink*, Int32, Win32cr::Foundation::PWSTR*, Void*, Void**, Win32cr::Foundation::HRESULT),
    set_batching_parameters : Proc(IWbemEventSink*, Int32, UInt32, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("3ae0080a-7e3a-4366-bf89-0feedc931659")]
  record IWbemEventSink, lpVtbl : IWbemEventSinkVtbl* do
    GUID = LibC::GUID.new(0x3ae0080a_u32, 0x7e3a_u16, 0x4366_u16, StaticArray[0xbf_u8, 0x89_u8, 0xf_u8, 0xee_u8, 0xdc_u8, 0x93_u8, 0x16_u8, 0x59_u8])
    def query_interface(this : IWbemEventSink*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemEventSink*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemEventSink*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def indicate(this : IWbemEventSink*, lObjectCount : Int32, apObjArray : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.indicate.call(this, lObjectCount, apObjArray)
    end
    def set_status(this : IWbemEventSink*, lFlags : Int32, hResult : Win32cr::Foundation::HRESULT, strParam : Win32cr::Foundation::BSTR, pObjParam : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_status.call(this, lFlags, hResult, strParam, pObjParam)
    end
    def set_sink_security(this : IWbemEventSink*, lSDLength : Int32, pSD : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_sink_security.call(this, lSDLength, pSD)
    end
    def is_active(this : IWbemEventSink*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_active.call(this)
    end
    def get_restricted_sink(this : IWbemEventSink*, lNumQueries : Int32, awszQueries : Win32cr::Foundation::PWSTR*, pCallback : Void*, ppSink : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_restricted_sink.call(this, lNumQueries, awszQueries, pCallback, ppSink)
    end
    def set_batching_parameters(this : IWbemEventSink*, lFlags : Int32, dwMaxBufferSize : UInt32, dwMaxSendLatency : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_batching_parameters.call(this, lFlags, dwMaxBufferSize, dwMaxSendLatency)
    end

  end

  @[Extern]
  record ISWbemServicesVtbl,
    query_interface : Proc(ISWbemServices*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemServices*, UInt32),
    release : Proc(ISWbemServices*, UInt32),
    get_type_info_count : Proc(ISWbemServices*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemServices*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemServices*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemServices*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get : Proc(ISWbemServices*, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_async : Proc(ISWbemServices*, Void*, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    delete : Proc(ISWbemServices*, Win32cr::Foundation::BSTR, Int32, Void*, Win32cr::Foundation::HRESULT),
    delete_async : Proc(ISWbemServices*, Void*, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    instances_of : Proc(ISWbemServices*, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    instances_of_async : Proc(ISWbemServices*, Void*, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    subclasses_of : Proc(ISWbemServices*, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    subclasses_of_async : Proc(ISWbemServices*, Void*, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    exec_query : Proc(ISWbemServices*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    exec_query_async : Proc(ISWbemServices*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    associators_of : Proc(ISWbemServices*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    associators_of_async : Proc(ISWbemServices*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    references_to : Proc(ISWbemServices*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    references_to_async : Proc(ISWbemServices*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    exec_notification_query : Proc(ISWbemServices*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    exec_notification_query_async : Proc(ISWbemServices*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    exec_method : Proc(ISWbemServices*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Void*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    exec_method_async : Proc(ISWbemServices*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    get_Security_ : Proc(ISWbemServices*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("76a6415c-cb41-11d1-8b02-00600806d9b6")]
  record ISWbemServices, lpVtbl : ISWbemServicesVtbl* do
    GUID = LibC::GUID.new(0x76a6415c_u32, 0xcb41_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x2_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemServices*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemServices*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemServices*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemServices*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemServices*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemServices*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemServices*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get(this : ISWbemServices*, strObjectPath : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get.call(this, strObjectPath, iFlags, objWbemNamedValueSet, objWbemObject)
    end
    def get_async(this : ISWbemServices*, objWbemSink : Void*, strObjectPath : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_async.call(this, objWbemSink, strObjectPath, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def delete(this : ISWbemServices*, strObjectPath : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete.call(this, strObjectPath, iFlags, objWbemNamedValueSet)
    end
    def delete_async(this : ISWbemServices*, objWbemSink : Void*, strObjectPath : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_async.call(this, objWbemSink, strObjectPath, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def instances_of(this : ISWbemServices*, strClass : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.instances_of.call(this, strClass, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def instances_of_async(this : ISWbemServices*, objWbemSink : Void*, strClass : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.instances_of_async.call(this, objWbemSink, strClass, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def subclasses_of(this : ISWbemServices*, strSuperclass : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.subclasses_of.call(this, strSuperclass, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def subclasses_of_async(this : ISWbemServices*, objWbemSink : Void*, strSuperclass : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.subclasses_of_async.call(this, objWbemSink, strSuperclass, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def exec_query(this : ISWbemServices*, strQuery : Win32cr::Foundation::BSTR, strQueryLanguage : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_query.call(this, strQuery, strQueryLanguage, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def exec_query_async(this : ISWbemServices*, objWbemSink : Void*, strQuery : Win32cr::Foundation::BSTR, strQueryLanguage : Win32cr::Foundation::BSTR, lFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_query_async.call(this, objWbemSink, strQuery, strQueryLanguage, lFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def associators_of(this : ISWbemServices*, strObjectPath : Win32cr::Foundation::BSTR, strAssocClass : Win32cr::Foundation::BSTR, strResultClass : Win32cr::Foundation::BSTR, strResultRole : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredAssocQualifier : Win32cr::Foundation::BSTR, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.associators_of.call(this, strObjectPath, strAssocClass, strResultClass, strResultRole, strRole, bClassesOnly, bSchemaOnly, strRequiredAssocQualifier, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def associators_of_async(this : ISWbemServices*, objWbemSink : Void*, strObjectPath : Win32cr::Foundation::BSTR, strAssocClass : Win32cr::Foundation::BSTR, strResultClass : Win32cr::Foundation::BSTR, strResultRole : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredAssocQualifier : Win32cr::Foundation::BSTR, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.associators_of_async.call(this, objWbemSink, strObjectPath, strAssocClass, strResultClass, strResultRole, strRole, bClassesOnly, bSchemaOnly, strRequiredAssocQualifier, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def references_to(this : ISWbemServices*, strObjectPath : Win32cr::Foundation::BSTR, strResultClass : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.references_to.call(this, strObjectPath, strResultClass, strRole, bClassesOnly, bSchemaOnly, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def references_to_async(this : ISWbemServices*, objWbemSink : Void*, strObjectPath : Win32cr::Foundation::BSTR, strResultClass : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.references_to_async.call(this, objWbemSink, strObjectPath, strResultClass, strRole, bClassesOnly, bSchemaOnly, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def exec_notification_query(this : ISWbemServices*, strQuery : Win32cr::Foundation::BSTR, strQueryLanguage : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemEventSource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_notification_query.call(this, strQuery, strQueryLanguage, iFlags, objWbemNamedValueSet, objWbemEventSource)
    end
    def exec_notification_query_async(this : ISWbemServices*, objWbemSink : Void*, strQuery : Win32cr::Foundation::BSTR, strQueryLanguage : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_notification_query_async.call(this, objWbemSink, strQuery, strQueryLanguage, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def exec_method(this : ISWbemServices*, strObjectPath : Win32cr::Foundation::BSTR, strMethodName : Win32cr::Foundation::BSTR, objWbemInParameters : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemOutParameters : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_method.call(this, strObjectPath, strMethodName, objWbemInParameters, iFlags, objWbemNamedValueSet, objWbemOutParameters)
    end
    def exec_method_async(this : ISWbemServices*, objWbemSink : Void*, strObjectPath : Win32cr::Foundation::BSTR, strMethodName : Win32cr::Foundation::BSTR, objWbemInParameters : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_method_async.call(this, objWbemSink, strObjectPath, strMethodName, objWbemInParameters, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def get_Security_(this : ISWbemServices*, objWbemSecurity : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Security_.call(this, objWbemSecurity)
    end

  end

  @[Extern]
  record ISWbemLocatorVtbl,
    query_interface : Proc(ISWbemLocator*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemLocator*, UInt32),
    release : Proc(ISWbemLocator*, UInt32),
    get_type_info_count : Proc(ISWbemLocator*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemLocator*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemLocator*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemLocator*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    connect_server : Proc(ISWbemLocator*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_Security_ : Proc(ISWbemLocator*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("76a6415b-cb41-11d1-8b02-00600806d9b6")]
  record ISWbemLocator, lpVtbl : ISWbemLocatorVtbl* do
    GUID = LibC::GUID.new(0x76a6415b_u32, 0xcb41_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x2_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemLocator*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemLocator*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemLocator*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemLocator*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemLocator*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemLocator*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemLocator*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def connect_server(this : ISWbemLocator*, strServer : Win32cr::Foundation::BSTR, strNamespace : Win32cr::Foundation::BSTR, strUser : Win32cr::Foundation::BSTR, strPassword : Win32cr::Foundation::BSTR, strLocale : Win32cr::Foundation::BSTR, strAuthority : Win32cr::Foundation::BSTR, iSecurityFlags : Int32, objWbemNamedValueSet : Void*, objWbemServices : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.connect_server.call(this, strServer, strNamespace, strUser, strPassword, strLocale, strAuthority, iSecurityFlags, objWbemNamedValueSet, objWbemServices)
    end
    def get_Security_(this : ISWbemLocator*, objWbemSecurity : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Security_.call(this, objWbemSecurity)
    end

  end

  @[Extern]
  record ISWbemObjectVtbl,
    query_interface : Proc(ISWbemObject*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemObject*, UInt32),
    release : Proc(ISWbemObject*, UInt32),
    get_type_info_count : Proc(ISWbemObject*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemObject*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemObject*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemObject*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    put_ : Proc(ISWbemObject*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    put_async_ : Proc(ISWbemObject*, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    delete_ : Proc(ISWbemObject*, Int32, Void*, Win32cr::Foundation::HRESULT),
    delete_async_ : Proc(ISWbemObject*, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    instances_ : Proc(ISWbemObject*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    instances_async_ : Proc(ISWbemObject*, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    subclasses_ : Proc(ISWbemObject*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    subclasses_async_ : Proc(ISWbemObject*, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    associators_ : Proc(ISWbemObject*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    associators_async_ : Proc(ISWbemObject*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    references_ : Proc(ISWbemObject*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    references_async_ : Proc(ISWbemObject*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    exec_method_ : Proc(ISWbemObject*, Win32cr::Foundation::BSTR, Void*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    exec_method_async_ : Proc(ISWbemObject*, Void*, Win32cr::Foundation::BSTR, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    clone_ : Proc(ISWbemObject*, Void**, Win32cr::Foundation::HRESULT),
    get_object_text_ : Proc(ISWbemObject*, Int32, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    spawn_derived_class_ : Proc(ISWbemObject*, Int32, Void**, Win32cr::Foundation::HRESULT),
    spawn_instance_ : Proc(ISWbemObject*, Int32, Void**, Win32cr::Foundation::HRESULT),
    compare_to_ : Proc(ISWbemObject*, Void*, Int32, Int16*, Win32cr::Foundation::HRESULT),
    get_Qualifiers_ : Proc(ISWbemObject*, Void**, Win32cr::Foundation::HRESULT),
    get_Properties_ : Proc(ISWbemObject*, Void**, Win32cr::Foundation::HRESULT),
    get_Methods_ : Proc(ISWbemObject*, Void**, Win32cr::Foundation::HRESULT),
    get_Derivation_ : Proc(ISWbemObject*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_Path_ : Proc(ISWbemObject*, Void**, Win32cr::Foundation::HRESULT),
    get_Security_ : Proc(ISWbemObject*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("76a6415a-cb41-11d1-8b02-00600806d9b6")]
  record ISWbemObject, lpVtbl : ISWbemObjectVtbl* do
    GUID = LibC::GUID.new(0x76a6415a_u32, 0xcb41_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x2_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemObject*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemObject*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemObject*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemObject*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemObject*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemObject*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemObject*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def put_(this : ISWbemObject*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectPath : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_.call(this, iFlags, objWbemNamedValueSet, objWbemObjectPath)
    end
    def put_async_(this : ISWbemObject*, objWbemSink : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_async_.call(this, objWbemSink, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def delete_(this : ISWbemObject*, iFlags : Int32, objWbemNamedValueSet : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_.call(this, iFlags, objWbemNamedValueSet)
    end
    def delete_async_(this : ISWbemObject*, objWbemSink : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_async_.call(this, objWbemSink, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def instances_(this : ISWbemObject*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.instances_.call(this, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def instances_async_(this : ISWbemObject*, objWbemSink : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.instances_async_.call(this, objWbemSink, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def subclasses_(this : ISWbemObject*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.subclasses_.call(this, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def subclasses_async_(this : ISWbemObject*, objWbemSink : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.subclasses_async_.call(this, objWbemSink, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def associators_(this : ISWbemObject*, strAssocClass : Win32cr::Foundation::BSTR, strResultClass : Win32cr::Foundation::BSTR, strResultRole : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredAssocQualifier : Win32cr::Foundation::BSTR, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.associators_.call(this, strAssocClass, strResultClass, strResultRole, strRole, bClassesOnly, bSchemaOnly, strRequiredAssocQualifier, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def associators_async_(this : ISWbemObject*, objWbemSink : Void*, strAssocClass : Win32cr::Foundation::BSTR, strResultClass : Win32cr::Foundation::BSTR, strResultRole : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredAssocQualifier : Win32cr::Foundation::BSTR, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.associators_async_.call(this, objWbemSink, strAssocClass, strResultClass, strResultRole, strRole, bClassesOnly, bSchemaOnly, strRequiredAssocQualifier, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def references_(this : ISWbemObject*, strResultClass : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.references_.call(this, strResultClass, strRole, bClassesOnly, bSchemaOnly, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def references_async_(this : ISWbemObject*, objWbemSink : Void*, strResultClass : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.references_async_.call(this, objWbemSink, strResultClass, strRole, bClassesOnly, bSchemaOnly, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def exec_method_(this : ISWbemObject*, strMethodName : Win32cr::Foundation::BSTR, objWbemInParameters : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemOutParameters : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_method_.call(this, strMethodName, objWbemInParameters, iFlags, objWbemNamedValueSet, objWbemOutParameters)
    end
    def exec_method_async_(this : ISWbemObject*, objWbemSink : Void*, strMethodName : Win32cr::Foundation::BSTR, objWbemInParameters : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_method_async_.call(this, objWbemSink, strMethodName, objWbemInParameters, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def clone_(this : ISWbemObject*, objWbemObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone_.call(this, objWbemObject)
    end
    def get_object_text_(this : ISWbemObject*, iFlags : Int32, strObjectText : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object_text_.call(this, iFlags, strObjectText)
    end
    def spawn_derived_class_(this : ISWbemObject*, iFlags : Int32, objWbemObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.spawn_derived_class_.call(this, iFlags, objWbemObject)
    end
    def spawn_instance_(this : ISWbemObject*, iFlags : Int32, objWbemObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.spawn_instance_.call(this, iFlags, objWbemObject)
    end
    def compare_to_(this : ISWbemObject*, objWbemObject : Void*, iFlags : Int32, bResult : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compare_to_.call(this, objWbemObject, iFlags, bResult)
    end
    def get_Qualifiers_(this : ISWbemObject*, objWbemQualifierSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Qualifiers_.call(this, objWbemQualifierSet)
    end
    def get_Properties_(this : ISWbemObject*, objWbemPropertySet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Properties_.call(this, objWbemPropertySet)
    end
    def get_Methods_(this : ISWbemObject*, objWbemMethodSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Methods_.call(this, objWbemMethodSet)
    end
    def get_Derivation_(this : ISWbemObject*, strClassNameArray : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Derivation_.call(this, strClassNameArray)
    end
    def get_Path_(this : ISWbemObject*, objWbemObjectPath : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Path_.call(this, objWbemObjectPath)
    end
    def get_Security_(this : ISWbemObject*, objWbemSecurity : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Security_.call(this, objWbemSecurity)
    end

  end

  @[Extern]
  record ISWbemObjectSetVtbl,
    query_interface : Proc(ISWbemObjectSet*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemObjectSet*, UInt32),
    release : Proc(ISWbemObjectSet*, UInt32),
    get_type_info_count : Proc(ISWbemObjectSet*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemObjectSet*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemObjectSet*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemObjectSet*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get__NewEnum : Proc(ISWbemObjectSet*, Void**, Win32cr::Foundation::HRESULT),
    item : Proc(ISWbemObjectSet*, Win32cr::Foundation::BSTR, Int32, Void**, Win32cr::Foundation::HRESULT),
    get_Count : Proc(ISWbemObjectSet*, Int32*, Win32cr::Foundation::HRESULT),
    get_Security_ : Proc(ISWbemObjectSet*, Void**, Win32cr::Foundation::HRESULT),
    item_index : Proc(ISWbemObjectSet*, Int32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("76a6415f-cb41-11d1-8b02-00600806d9b6")]
  record ISWbemObjectSet, lpVtbl : ISWbemObjectSetVtbl* do
    GUID = LibC::GUID.new(0x76a6415f_u32, 0xcb41_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x2_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemObjectSet*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemObjectSet*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemObjectSet*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemObjectSet*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemObjectSet*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemObjectSet*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemObjectSet*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get__NewEnum(this : ISWbemObjectSet*, pUnk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get__NewEnum.call(this, pUnk)
    end
    def item(this : ISWbemObjectSet*, strObjectPath : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item.call(this, strObjectPath, iFlags, objWbemObject)
    end
    def get_Count(this : ISWbemObjectSet*, iCount : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Count.call(this, iCount)
    end
    def get_Security_(this : ISWbemObjectSet*, objWbemSecurity : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Security_.call(this, objWbemSecurity)
    end
    def item_index(this : ISWbemObjectSet*, lIndex : Int32, objWbemObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item_index.call(this, lIndex, objWbemObject)
    end

  end

  @[Extern]
  record ISWbemNamedValueVtbl,
    query_interface : Proc(ISWbemNamedValue*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemNamedValue*, UInt32),
    release : Proc(ISWbemNamedValue*, UInt32),
    get_type_info_count : Proc(ISWbemNamedValue*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemNamedValue*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemNamedValue*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemNamedValue*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Value : Proc(ISWbemNamedValue*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    put_Value : Proc(ISWbemNamedValue*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_Name : Proc(ISWbemNamedValue*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("76a64164-cb41-11d1-8b02-00600806d9b6")]
  record ISWbemNamedValue, lpVtbl : ISWbemNamedValueVtbl* do
    GUID = LibC::GUID.new(0x76a64164_u32, 0xcb41_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x2_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemNamedValue*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemNamedValue*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemNamedValue*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemNamedValue*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemNamedValue*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemNamedValue*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemNamedValue*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Value(this : ISWbemNamedValue*, varValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Value.call(this, varValue)
    end
    def put_Value(this : ISWbemNamedValue*, varValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Value.call(this, varValue)
    end
    def get_Name(this : ISWbemNamedValue*, strName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Name.call(this, strName)
    end

  end

  @[Extern]
  record ISWbemNamedValueSetVtbl,
    query_interface : Proc(ISWbemNamedValueSet*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemNamedValueSet*, UInt32),
    release : Proc(ISWbemNamedValueSet*, UInt32),
    get_type_info_count : Proc(ISWbemNamedValueSet*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemNamedValueSet*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemNamedValueSet*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemNamedValueSet*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get__NewEnum : Proc(ISWbemNamedValueSet*, Void**, Win32cr::Foundation::HRESULT),
    item : Proc(ISWbemNamedValueSet*, Win32cr::Foundation::BSTR, Int32, Void**, Win32cr::Foundation::HRESULT),
    get_Count : Proc(ISWbemNamedValueSet*, Int32*, Win32cr::Foundation::HRESULT),
    add : Proc(ISWbemNamedValueSet*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Int32, Void**, Win32cr::Foundation::HRESULT),
    remove : Proc(ISWbemNamedValueSet*, Win32cr::Foundation::BSTR, Int32, Win32cr::Foundation::HRESULT),
    clone : Proc(ISWbemNamedValueSet*, Void**, Win32cr::Foundation::HRESULT),
    delete_all : Proc(ISWbemNamedValueSet*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("cf2376ea-ce8c-11d1-8b05-00600806d9b6")]
  record ISWbemNamedValueSet, lpVtbl : ISWbemNamedValueSetVtbl* do
    GUID = LibC::GUID.new(0xcf2376ea_u32, 0xce8c_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x5_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemNamedValueSet*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemNamedValueSet*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemNamedValueSet*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemNamedValueSet*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemNamedValueSet*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemNamedValueSet*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemNamedValueSet*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get__NewEnum(this : ISWbemNamedValueSet*, pUnk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get__NewEnum.call(this, pUnk)
    end
    def item(this : ISWbemNamedValueSet*, strName : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValue : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item.call(this, strName, iFlags, objWbemNamedValue)
    end
    def get_Count(this : ISWbemNamedValueSet*, iCount : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Count.call(this, iCount)
    end
    def add(this : ISWbemNamedValueSet*, strName : Win32cr::Foundation::BSTR, varValue : Win32cr::System::Com::VARIANT*, iFlags : Int32, objWbemNamedValue : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add.call(this, strName, varValue, iFlags, objWbemNamedValue)
    end
    def remove(this : ISWbemNamedValueSet*, strName : Win32cr::Foundation::BSTR, iFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove.call(this, strName, iFlags)
    end
    def clone(this : ISWbemNamedValueSet*, objWbemNamedValueSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, objWbemNamedValueSet)
    end
    def delete_all(this : ISWbemNamedValueSet*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_all.call(this)
    end

  end

  @[Extern]
  record ISWbemQualifierVtbl,
    query_interface : Proc(ISWbemQualifier*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemQualifier*, UInt32),
    release : Proc(ISWbemQualifier*, UInt32),
    get_type_info_count : Proc(ISWbemQualifier*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemQualifier*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemQualifier*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemQualifier*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Value : Proc(ISWbemQualifier*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    put_Value : Proc(ISWbemQualifier*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_Name : Proc(ISWbemQualifier*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_IsLocal : Proc(ISWbemQualifier*, Int16*, Win32cr::Foundation::HRESULT),
    get_PropagatesToSubclass : Proc(ISWbemQualifier*, Int16*, Win32cr::Foundation::HRESULT),
    put_PropagatesToSubclass : Proc(ISWbemQualifier*, Int16, Win32cr::Foundation::HRESULT),
    get_PropagatesToInstance : Proc(ISWbemQualifier*, Int16*, Win32cr::Foundation::HRESULT),
    put_PropagatesToInstance : Proc(ISWbemQualifier*, Int16, Win32cr::Foundation::HRESULT),
    get_IsOverridable : Proc(ISWbemQualifier*, Int16*, Win32cr::Foundation::HRESULT),
    put_IsOverridable : Proc(ISWbemQualifier*, Int16, Win32cr::Foundation::HRESULT),
    get_IsAmended : Proc(ISWbemQualifier*, Int16*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("79b05932-d3b7-11d1-8b06-00600806d9b6")]
  record ISWbemQualifier, lpVtbl : ISWbemQualifierVtbl* do
    GUID = LibC::GUID.new(0x79b05932_u32, 0xd3b7_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x6_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemQualifier*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemQualifier*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemQualifier*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemQualifier*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemQualifier*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemQualifier*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemQualifier*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Value(this : ISWbemQualifier*, varValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Value.call(this, varValue)
    end
    def put_Value(this : ISWbemQualifier*, varValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Value.call(this, varValue)
    end
    def get_Name(this : ISWbemQualifier*, strName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Name.call(this, strName)
    end
    def get_IsLocal(this : ISWbemQualifier*, bIsLocal : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsLocal.call(this, bIsLocal)
    end
    def get_PropagatesToSubclass(this : ISWbemQualifier*, bPropagatesToSubclass : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_PropagatesToSubclass.call(this, bPropagatesToSubclass)
    end
    def put_PropagatesToSubclass(this : ISWbemQualifier*, bPropagatesToSubclass : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_PropagatesToSubclass.call(this, bPropagatesToSubclass)
    end
    def get_PropagatesToInstance(this : ISWbemQualifier*, bPropagatesToInstance : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_PropagatesToInstance.call(this, bPropagatesToInstance)
    end
    def put_PropagatesToInstance(this : ISWbemQualifier*, bPropagatesToInstance : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_PropagatesToInstance.call(this, bPropagatesToInstance)
    end
    def get_IsOverridable(this : ISWbemQualifier*, bIsOverridable : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsOverridable.call(this, bIsOverridable)
    end
    def put_IsOverridable(this : ISWbemQualifier*, bIsOverridable : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_IsOverridable.call(this, bIsOverridable)
    end
    def get_IsAmended(this : ISWbemQualifier*, bIsAmended : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsAmended.call(this, bIsAmended)
    end

  end

  @[Extern]
  record ISWbemQualifierSetVtbl,
    query_interface : Proc(ISWbemQualifierSet*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemQualifierSet*, UInt32),
    release : Proc(ISWbemQualifierSet*, UInt32),
    get_type_info_count : Proc(ISWbemQualifierSet*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemQualifierSet*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemQualifierSet*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemQualifierSet*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get__NewEnum : Proc(ISWbemQualifierSet*, Void**, Win32cr::Foundation::HRESULT),
    item : Proc(ISWbemQualifierSet*, Win32cr::Foundation::BSTR, Int32, Void**, Win32cr::Foundation::HRESULT),
    get_Count : Proc(ISWbemQualifierSet*, Int32*, Win32cr::Foundation::HRESULT),
    add : Proc(ISWbemQualifierSet*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Int16, Int16, Int16, Int32, Void**, Win32cr::Foundation::HRESULT),
    remove : Proc(ISWbemQualifierSet*, Win32cr::Foundation::BSTR, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("9b16ed16-d3df-11d1-8b08-00600806d9b6")]
  record ISWbemQualifierSet, lpVtbl : ISWbemQualifierSetVtbl* do
    GUID = LibC::GUID.new(0x9b16ed16_u32, 0xd3df_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x8_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemQualifierSet*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemQualifierSet*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemQualifierSet*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemQualifierSet*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemQualifierSet*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemQualifierSet*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemQualifierSet*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get__NewEnum(this : ISWbemQualifierSet*, pUnk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get__NewEnum.call(this, pUnk)
    end
    def item(this : ISWbemQualifierSet*, name : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemQualifier : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item.call(this, name, iFlags, objWbemQualifier)
    end
    def get_Count(this : ISWbemQualifierSet*, iCount : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Count.call(this, iCount)
    end
    def add(this : ISWbemQualifierSet*, strName : Win32cr::Foundation::BSTR, varVal : Win32cr::System::Com::VARIANT*, bPropagatesToSubclass : Int16, bPropagatesToInstance : Int16, bIsOverridable : Int16, iFlags : Int32, objWbemQualifier : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add.call(this, strName, varVal, bPropagatesToSubclass, bPropagatesToInstance, bIsOverridable, iFlags, objWbemQualifier)
    end
    def remove(this : ISWbemQualifierSet*, strName : Win32cr::Foundation::BSTR, iFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove.call(this, strName, iFlags)
    end

  end

  @[Extern]
  record ISWbemPropertyVtbl,
    query_interface : Proc(ISWbemProperty*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemProperty*, UInt32),
    release : Proc(ISWbemProperty*, UInt32),
    get_type_info_count : Proc(ISWbemProperty*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemProperty*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemProperty*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemProperty*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Value : Proc(ISWbemProperty*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    put_Value : Proc(ISWbemProperty*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_Name : Proc(ISWbemProperty*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_IsLocal : Proc(ISWbemProperty*, Int16*, Win32cr::Foundation::HRESULT),
    get_Origin : Proc(ISWbemProperty*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_CIMType : Proc(ISWbemProperty*, Win32cr::System::Wmi::WbemCimtypeEnum*, Win32cr::Foundation::HRESULT),
    get_Qualifiers_ : Proc(ISWbemProperty*, Void**, Win32cr::Foundation::HRESULT),
    get_IsArray : Proc(ISWbemProperty*, Int16*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("1a388f98-d4ba-11d1-8b09-00600806d9b6")]
  record ISWbemProperty, lpVtbl : ISWbemPropertyVtbl* do
    GUID = LibC::GUID.new(0x1a388f98_u32, 0xd4ba_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x9_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemProperty*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemProperty*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemProperty*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemProperty*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemProperty*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemProperty*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemProperty*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Value(this : ISWbemProperty*, varValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Value.call(this, varValue)
    end
    def put_Value(this : ISWbemProperty*, varValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Value.call(this, varValue)
    end
    def get_Name(this : ISWbemProperty*, strName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Name.call(this, strName)
    end
    def get_IsLocal(this : ISWbemProperty*, bIsLocal : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsLocal.call(this, bIsLocal)
    end
    def get_Origin(this : ISWbemProperty*, strOrigin : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Origin.call(this, strOrigin)
    end
    def get_CIMType(this : ISWbemProperty*, iCimType : Win32cr::System::Wmi::WbemCimtypeEnum*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_CIMType.call(this, iCimType)
    end
    def get_Qualifiers_(this : ISWbemProperty*, objWbemQualifierSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Qualifiers_.call(this, objWbemQualifierSet)
    end
    def get_IsArray(this : ISWbemProperty*, bIsArray : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsArray.call(this, bIsArray)
    end

  end

  @[Extern]
  record ISWbemPropertySetVtbl,
    query_interface : Proc(ISWbemPropertySet*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemPropertySet*, UInt32),
    release : Proc(ISWbemPropertySet*, UInt32),
    get_type_info_count : Proc(ISWbemPropertySet*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemPropertySet*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemPropertySet*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemPropertySet*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get__NewEnum : Proc(ISWbemPropertySet*, Void**, Win32cr::Foundation::HRESULT),
    item : Proc(ISWbemPropertySet*, Win32cr::Foundation::BSTR, Int32, Void**, Win32cr::Foundation::HRESULT),
    get_Count : Proc(ISWbemPropertySet*, Int32*, Win32cr::Foundation::HRESULT),
    add : Proc(ISWbemPropertySet*, Win32cr::Foundation::BSTR, Win32cr::System::Wmi::WbemCimtypeEnum, Int16, Int32, Void**, Win32cr::Foundation::HRESULT),
    remove : Proc(ISWbemPropertySet*, Win32cr::Foundation::BSTR, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("dea0a7b2-d4ba-11d1-8b09-00600806d9b6")]
  record ISWbemPropertySet, lpVtbl : ISWbemPropertySetVtbl* do
    GUID = LibC::GUID.new(0xdea0a7b2_u32, 0xd4ba_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x9_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemPropertySet*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemPropertySet*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemPropertySet*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemPropertySet*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemPropertySet*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemPropertySet*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemPropertySet*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get__NewEnum(this : ISWbemPropertySet*, pUnk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get__NewEnum.call(this, pUnk)
    end
    def item(this : ISWbemPropertySet*, strName : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemProperty : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item.call(this, strName, iFlags, objWbemProperty)
    end
    def get_Count(this : ISWbemPropertySet*, iCount : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Count.call(this, iCount)
    end
    def add(this : ISWbemPropertySet*, strName : Win32cr::Foundation::BSTR, iCIMType : Win32cr::System::Wmi::WbemCimtypeEnum, bIsArray : Int16, iFlags : Int32, objWbemProperty : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add.call(this, strName, iCIMType, bIsArray, iFlags, objWbemProperty)
    end
    def remove(this : ISWbemPropertySet*, strName : Win32cr::Foundation::BSTR, iFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove.call(this, strName, iFlags)
    end

  end

  @[Extern]
  record ISWbemMethodVtbl,
    query_interface : Proc(ISWbemMethod*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemMethod*, UInt32),
    release : Proc(ISWbemMethod*, UInt32),
    get_type_info_count : Proc(ISWbemMethod*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemMethod*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemMethod*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemMethod*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Name : Proc(ISWbemMethod*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Origin : Proc(ISWbemMethod*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_InParameters : Proc(ISWbemMethod*, Void**, Win32cr::Foundation::HRESULT),
    get_OutParameters : Proc(ISWbemMethod*, Void**, Win32cr::Foundation::HRESULT),
    get_Qualifiers_ : Proc(ISWbemMethod*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("422e8e90-d955-11d1-8b09-00600806d9b6")]
  record ISWbemMethod, lpVtbl : ISWbemMethodVtbl* do
    GUID = LibC::GUID.new(0x422e8e90_u32, 0xd955_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x9_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemMethod*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemMethod*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemMethod*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemMethod*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemMethod*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemMethod*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemMethod*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Name(this : ISWbemMethod*, strName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Name.call(this, strName)
    end
    def get_Origin(this : ISWbemMethod*, strOrigin : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Origin.call(this, strOrigin)
    end
    def get_InParameters(this : ISWbemMethod*, objWbemInParameters : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_InParameters.call(this, objWbemInParameters)
    end
    def get_OutParameters(this : ISWbemMethod*, objWbemOutParameters : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_OutParameters.call(this, objWbemOutParameters)
    end
    def get_Qualifiers_(this : ISWbemMethod*, objWbemQualifierSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Qualifiers_.call(this, objWbemQualifierSet)
    end

  end

  @[Extern]
  record ISWbemMethodSetVtbl,
    query_interface : Proc(ISWbemMethodSet*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemMethodSet*, UInt32),
    release : Proc(ISWbemMethodSet*, UInt32),
    get_type_info_count : Proc(ISWbemMethodSet*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemMethodSet*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemMethodSet*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemMethodSet*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get__NewEnum : Proc(ISWbemMethodSet*, Void**, Win32cr::Foundation::HRESULT),
    item : Proc(ISWbemMethodSet*, Win32cr::Foundation::BSTR, Int32, Void**, Win32cr::Foundation::HRESULT),
    get_Count : Proc(ISWbemMethodSet*, Int32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("c93ba292-d955-11d1-8b09-00600806d9b6")]
  record ISWbemMethodSet, lpVtbl : ISWbemMethodSetVtbl* do
    GUID = LibC::GUID.new(0xc93ba292_u32, 0xd955_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x9_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemMethodSet*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemMethodSet*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemMethodSet*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemMethodSet*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemMethodSet*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemMethodSet*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemMethodSet*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get__NewEnum(this : ISWbemMethodSet*, pUnk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get__NewEnum.call(this, pUnk)
    end
    def item(this : ISWbemMethodSet*, strName : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemMethod : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item.call(this, strName, iFlags, objWbemMethod)
    end
    def get_Count(this : ISWbemMethodSet*, iCount : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Count.call(this, iCount)
    end

  end

  @[Extern]
  record ISWbemEventSourceVtbl,
    query_interface : Proc(ISWbemEventSource*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemEventSource*, UInt32),
    release : Proc(ISWbemEventSource*, UInt32),
    get_type_info_count : Proc(ISWbemEventSource*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemEventSource*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemEventSource*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemEventSource*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    next_event : Proc(ISWbemEventSource*, Int32, Void**, Win32cr::Foundation::HRESULT),
    get_Security_ : Proc(ISWbemEventSource*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("27d54d92-0ebe-11d2-8b22-00600806d9b6")]
  record ISWbemEventSource, lpVtbl : ISWbemEventSourceVtbl* do
    GUID = LibC::GUID.new(0x27d54d92_u32, 0xebe_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x22_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemEventSource*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemEventSource*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemEventSource*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemEventSource*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemEventSource*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemEventSource*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemEventSource*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def next_event(this : ISWbemEventSource*, iTimeoutMs : Int32, objWbemObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next_event.call(this, iTimeoutMs, objWbemObject)
    end
    def get_Security_(this : ISWbemEventSource*, objWbemSecurity : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Security_.call(this, objWbemSecurity)
    end

  end

  @[Extern]
  record ISWbemObjectPathVtbl,
    query_interface : Proc(ISWbemObjectPath*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemObjectPath*, UInt32),
    release : Proc(ISWbemObjectPath*, UInt32),
    get_type_info_count : Proc(ISWbemObjectPath*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemObjectPath*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemObjectPath*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemObjectPath*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Path : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Path : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_RelPath : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_RelPath : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Server : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Server : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Namespace : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Namespace : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_ParentNamespace : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_DisplayName : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_DisplayName : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Class : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Class : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_IsClass : Proc(ISWbemObjectPath*, Int16*, Win32cr::Foundation::HRESULT),
    set_as_class : Proc(ISWbemObjectPath*, Win32cr::Foundation::HRESULT),
    get_IsSingleton : Proc(ISWbemObjectPath*, Int16*, Win32cr::Foundation::HRESULT),
    set_as_singleton : Proc(ISWbemObjectPath*, Win32cr::Foundation::HRESULT),
    get_Keys : Proc(ISWbemObjectPath*, Void**, Win32cr::Foundation::HRESULT),
    get_Security_ : Proc(ISWbemObjectPath*, Void**, Win32cr::Foundation::HRESULT),
    get_Locale : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Locale : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Authority : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Authority : Proc(ISWbemObjectPath*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("5791bc27-ce9c-11d1-97bf-0000f81e849c")]
  record ISWbemObjectPath, lpVtbl : ISWbemObjectPathVtbl* do
    GUID = LibC::GUID.new(0x5791bc27_u32, 0xce9c_u16, 0x11d1_u16, StaticArray[0x97_u8, 0xbf_u8, 0x0_u8, 0x0_u8, 0xf8_u8, 0x1e_u8, 0x84_u8, 0x9c_u8])
    def query_interface(this : ISWbemObjectPath*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemObjectPath*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemObjectPath*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemObjectPath*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemObjectPath*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemObjectPath*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemObjectPath*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Path(this : ISWbemObjectPath*, strPath : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Path.call(this, strPath)
    end
    def put_Path(this : ISWbemObjectPath*, strPath : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Path.call(this, strPath)
    end
    def get_RelPath(this : ISWbemObjectPath*, strRelPath : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_RelPath.call(this, strRelPath)
    end
    def put_RelPath(this : ISWbemObjectPath*, strRelPath : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_RelPath.call(this, strRelPath)
    end
    def get_Server(this : ISWbemObjectPath*, strServer : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Server.call(this, strServer)
    end
    def put_Server(this : ISWbemObjectPath*, strServer : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Server.call(this, strServer)
    end
    def get_Namespace(this : ISWbemObjectPath*, strNamespace : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Namespace.call(this, strNamespace)
    end
    def put_Namespace(this : ISWbemObjectPath*, strNamespace : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Namespace.call(this, strNamespace)
    end
    def get_ParentNamespace(this : ISWbemObjectPath*, strParentNamespace : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ParentNamespace.call(this, strParentNamespace)
    end
    def get_DisplayName(this : ISWbemObjectPath*, strDisplayName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_DisplayName.call(this, strDisplayName)
    end
    def put_DisplayName(this : ISWbemObjectPath*, strDisplayName : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_DisplayName.call(this, strDisplayName)
    end
    def get_Class(this : ISWbemObjectPath*, strClass : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Class.call(this, strClass)
    end
    def put_Class(this : ISWbemObjectPath*, strClass : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Class.call(this, strClass)
    end
    def get_IsClass(this : ISWbemObjectPath*, bIsClass : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsClass.call(this, bIsClass)
    end
    def set_as_class(this : ISWbemObjectPath*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_as_class.call(this)
    end
    def get_IsSingleton(this : ISWbemObjectPath*, bIsSingleton : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsSingleton.call(this, bIsSingleton)
    end
    def set_as_singleton(this : ISWbemObjectPath*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_as_singleton.call(this)
    end
    def get_Keys(this : ISWbemObjectPath*, objWbemNamedValueSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Keys.call(this, objWbemNamedValueSet)
    end
    def get_Security_(this : ISWbemObjectPath*, objWbemSecurity : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Security_.call(this, objWbemSecurity)
    end
    def get_Locale(this : ISWbemObjectPath*, strLocale : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Locale.call(this, strLocale)
    end
    def put_Locale(this : ISWbemObjectPath*, strLocale : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Locale.call(this, strLocale)
    end
    def get_Authority(this : ISWbemObjectPath*, strAuthority : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Authority.call(this, strAuthority)
    end
    def put_Authority(this : ISWbemObjectPath*, strAuthority : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Authority.call(this, strAuthority)
    end

  end

  @[Extern]
  record ISWbemLastErrorVtbl,
    query_interface : Proc(ISWbemLastError*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemLastError*, UInt32),
    release : Proc(ISWbemLastError*, UInt32),
    get_type_info_count : Proc(ISWbemLastError*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemLastError*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemLastError*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemLastError*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    put_ : Proc(ISWbemLastError*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    put_async_ : Proc(ISWbemLastError*, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    delete_ : Proc(ISWbemLastError*, Int32, Void*, Win32cr::Foundation::HRESULT),
    delete_async_ : Proc(ISWbemLastError*, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    instances_ : Proc(ISWbemLastError*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    instances_async_ : Proc(ISWbemLastError*, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    subclasses_ : Proc(ISWbemLastError*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    subclasses_async_ : Proc(ISWbemLastError*, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    associators_ : Proc(ISWbemLastError*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    associators_async_ : Proc(ISWbemLastError*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    references_ : Proc(ISWbemLastError*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    references_async_ : Proc(ISWbemLastError*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    exec_method_ : Proc(ISWbemLastError*, Win32cr::Foundation::BSTR, Void*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    exec_method_async_ : Proc(ISWbemLastError*, Void*, Win32cr::Foundation::BSTR, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    clone_ : Proc(ISWbemLastError*, Void**, Win32cr::Foundation::HRESULT),
    get_object_text_ : Proc(ISWbemLastError*, Int32, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    spawn_derived_class_ : Proc(ISWbemLastError*, Int32, Void**, Win32cr::Foundation::HRESULT),
    spawn_instance_ : Proc(ISWbemLastError*, Int32, Void**, Win32cr::Foundation::HRESULT),
    compare_to_ : Proc(ISWbemLastError*, Void*, Int32, Int16*, Win32cr::Foundation::HRESULT),
    get_Qualifiers_ : Proc(ISWbemLastError*, Void**, Win32cr::Foundation::HRESULT),
    get_Properties_ : Proc(ISWbemLastError*, Void**, Win32cr::Foundation::HRESULT),
    get_Methods_ : Proc(ISWbemLastError*, Void**, Win32cr::Foundation::HRESULT),
    get_Derivation_ : Proc(ISWbemLastError*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_Path_ : Proc(ISWbemLastError*, Void**, Win32cr::Foundation::HRESULT),
    get_Security_ : Proc(ISWbemLastError*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("d962db84-d4bb-11d1-8b09-00600806d9b6")]
  record ISWbemLastError, lpVtbl : ISWbemLastErrorVtbl* do
    GUID = LibC::GUID.new(0xd962db84_u32, 0xd4bb_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x9_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemLastError*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemLastError*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemLastError*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemLastError*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemLastError*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemLastError*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemLastError*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def put_(this : ISWbemLastError*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectPath : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_.call(this, iFlags, objWbemNamedValueSet, objWbemObjectPath)
    end
    def put_async_(this : ISWbemLastError*, objWbemSink : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_async_.call(this, objWbemSink, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def delete_(this : ISWbemLastError*, iFlags : Int32, objWbemNamedValueSet : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_.call(this, iFlags, objWbemNamedValueSet)
    end
    def delete_async_(this : ISWbemLastError*, objWbemSink : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_async_.call(this, objWbemSink, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def instances_(this : ISWbemLastError*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.instances_.call(this, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def instances_async_(this : ISWbemLastError*, objWbemSink : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.instances_async_.call(this, objWbemSink, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def subclasses_(this : ISWbemLastError*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.subclasses_.call(this, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def subclasses_async_(this : ISWbemLastError*, objWbemSink : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.subclasses_async_.call(this, objWbemSink, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def associators_(this : ISWbemLastError*, strAssocClass : Win32cr::Foundation::BSTR, strResultClass : Win32cr::Foundation::BSTR, strResultRole : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredAssocQualifier : Win32cr::Foundation::BSTR, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.associators_.call(this, strAssocClass, strResultClass, strResultRole, strRole, bClassesOnly, bSchemaOnly, strRequiredAssocQualifier, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def associators_async_(this : ISWbemLastError*, objWbemSink : Void*, strAssocClass : Win32cr::Foundation::BSTR, strResultClass : Win32cr::Foundation::BSTR, strResultRole : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredAssocQualifier : Win32cr::Foundation::BSTR, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.associators_async_.call(this, objWbemSink, strAssocClass, strResultClass, strResultRole, strRole, bClassesOnly, bSchemaOnly, strRequiredAssocQualifier, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def references_(this : ISWbemLastError*, strResultClass : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.references_.call(this, strResultClass, strRole, bClassesOnly, bSchemaOnly, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def references_async_(this : ISWbemLastError*, objWbemSink : Void*, strResultClass : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.references_async_.call(this, objWbemSink, strResultClass, strRole, bClassesOnly, bSchemaOnly, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def exec_method_(this : ISWbemLastError*, strMethodName : Win32cr::Foundation::BSTR, objWbemInParameters : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemOutParameters : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_method_.call(this, strMethodName, objWbemInParameters, iFlags, objWbemNamedValueSet, objWbemOutParameters)
    end
    def exec_method_async_(this : ISWbemLastError*, objWbemSink : Void*, strMethodName : Win32cr::Foundation::BSTR, objWbemInParameters : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_method_async_.call(this, objWbemSink, strMethodName, objWbemInParameters, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def clone_(this : ISWbemLastError*, objWbemObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone_.call(this, objWbemObject)
    end
    def get_object_text_(this : ISWbemLastError*, iFlags : Int32, strObjectText : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object_text_.call(this, iFlags, strObjectText)
    end
    def spawn_derived_class_(this : ISWbemLastError*, iFlags : Int32, objWbemObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.spawn_derived_class_.call(this, iFlags, objWbemObject)
    end
    def spawn_instance_(this : ISWbemLastError*, iFlags : Int32, objWbemObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.spawn_instance_.call(this, iFlags, objWbemObject)
    end
    def compare_to_(this : ISWbemLastError*, objWbemObject : Void*, iFlags : Int32, bResult : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compare_to_.call(this, objWbemObject, iFlags, bResult)
    end
    def get_Qualifiers_(this : ISWbemLastError*, objWbemQualifierSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Qualifiers_.call(this, objWbemQualifierSet)
    end
    def get_Properties_(this : ISWbemLastError*, objWbemPropertySet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Properties_.call(this, objWbemPropertySet)
    end
    def get_Methods_(this : ISWbemLastError*, objWbemMethodSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Methods_.call(this, objWbemMethodSet)
    end
    def get_Derivation_(this : ISWbemLastError*, strClassNameArray : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Derivation_.call(this, strClassNameArray)
    end
    def get_Path_(this : ISWbemLastError*, objWbemObjectPath : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Path_.call(this, objWbemObjectPath)
    end
    def get_Security_(this : ISWbemLastError*, objWbemSecurity : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Security_.call(this, objWbemSecurity)
    end

  end

  @[Extern]
  record ISWbemSinkEventsVtbl,
    query_interface : Proc(ISWbemSinkEvents*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemSinkEvents*, UInt32),
    release : Proc(ISWbemSinkEvents*, UInt32),
    get_type_info_count : Proc(ISWbemSinkEvents*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemSinkEvents*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemSinkEvents*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemSinkEvents*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("75718ca0-f029-11d1-a1ac-00c04fb6c223")]
  record ISWbemSinkEvents, lpVtbl : ISWbemSinkEventsVtbl* do
    GUID = LibC::GUID.new(0x75718ca0_u32, 0xf029_u16, 0x11d1_u16, StaticArray[0xa1_u8, 0xac_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0xc2_u8, 0x23_u8])
    def query_interface(this : ISWbemSinkEvents*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemSinkEvents*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemSinkEvents*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemSinkEvents*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemSinkEvents*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemSinkEvents*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemSinkEvents*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end

  end

  @[Extern]
  record ISWbemSinkVtbl,
    query_interface : Proc(ISWbemSink*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemSink*, UInt32),
    release : Proc(ISWbemSink*, UInt32),
    get_type_info_count : Proc(ISWbemSink*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemSink*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemSink*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemSink*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    cancel : Proc(ISWbemSink*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("75718c9f-f029-11d1-a1ac-00c04fb6c223")]
  record ISWbemSink, lpVtbl : ISWbemSinkVtbl* do
    GUID = LibC::GUID.new(0x75718c9f_u32, 0xf029_u16, 0x11d1_u16, StaticArray[0xa1_u8, 0xac_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0xc2_u8, 0x23_u8])
    def query_interface(this : ISWbemSink*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemSink*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemSink*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemSink*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemSink*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemSink*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemSink*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def cancel(this : ISWbemSink*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cancel.call(this)
    end

  end

  @[Extern]
  record ISWbemSecurityVtbl,
    query_interface : Proc(ISWbemSecurity*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemSecurity*, UInt32),
    release : Proc(ISWbemSecurity*, UInt32),
    get_type_info_count : Proc(ISWbemSecurity*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemSecurity*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemSecurity*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemSecurity*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_ImpersonationLevel : Proc(ISWbemSecurity*, Win32cr::System::Wmi::WbemImpersonationLevelEnum*, Win32cr::Foundation::HRESULT),
    put_ImpersonationLevel : Proc(ISWbemSecurity*, Win32cr::System::Wmi::WbemImpersonationLevelEnum, Win32cr::Foundation::HRESULT),
    get_AuthenticationLevel : Proc(ISWbemSecurity*, Win32cr::System::Wmi::WbemAuthenticationLevelEnum*, Win32cr::Foundation::HRESULT),
    put_AuthenticationLevel : Proc(ISWbemSecurity*, Win32cr::System::Wmi::WbemAuthenticationLevelEnum, Win32cr::Foundation::HRESULT),
    get_Privileges : Proc(ISWbemSecurity*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("b54d66e6-2287-11d2-8b33-00600806d9b6")]
  record ISWbemSecurity, lpVtbl : ISWbemSecurityVtbl* do
    GUID = LibC::GUID.new(0xb54d66e6_u32, 0x2287_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemSecurity*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemSecurity*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemSecurity*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemSecurity*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemSecurity*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemSecurity*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemSecurity*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_ImpersonationLevel(this : ISWbemSecurity*, iImpersonationLevel : Win32cr::System::Wmi::WbemImpersonationLevelEnum*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ImpersonationLevel.call(this, iImpersonationLevel)
    end
    def put_ImpersonationLevel(this : ISWbemSecurity*, iImpersonationLevel : Win32cr::System::Wmi::WbemImpersonationLevelEnum) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_ImpersonationLevel.call(this, iImpersonationLevel)
    end
    def get_AuthenticationLevel(this : ISWbemSecurity*, iAuthenticationLevel : Win32cr::System::Wmi::WbemAuthenticationLevelEnum*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_AuthenticationLevel.call(this, iAuthenticationLevel)
    end
    def put_AuthenticationLevel(this : ISWbemSecurity*, iAuthenticationLevel : Win32cr::System::Wmi::WbemAuthenticationLevelEnum) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_AuthenticationLevel.call(this, iAuthenticationLevel)
    end
    def get_Privileges(this : ISWbemSecurity*, objWbemPrivilegeSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Privileges.call(this, objWbemPrivilegeSet)
    end

  end

  @[Extern]
  record ISWbemPrivilegeVtbl,
    query_interface : Proc(ISWbemPrivilege*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemPrivilege*, UInt32),
    release : Proc(ISWbemPrivilege*, UInt32),
    get_type_info_count : Proc(ISWbemPrivilege*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemPrivilege*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemPrivilege*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemPrivilege*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_IsEnabled : Proc(ISWbemPrivilege*, Int16*, Win32cr::Foundation::HRESULT),
    put_IsEnabled : Proc(ISWbemPrivilege*, Int16, Win32cr::Foundation::HRESULT),
    get_Name : Proc(ISWbemPrivilege*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_DisplayName : Proc(ISWbemPrivilege*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Identifier : Proc(ISWbemPrivilege*, Win32cr::System::Wmi::WbemPrivilegeEnum*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("26ee67bd-5804-11d2-8b4a-00600806d9b6")]
  record ISWbemPrivilege, lpVtbl : ISWbemPrivilegeVtbl* do
    GUID = LibC::GUID.new(0x26ee67bd_u32, 0x5804_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x4a_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemPrivilege*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemPrivilege*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemPrivilege*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemPrivilege*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemPrivilege*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemPrivilege*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemPrivilege*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_IsEnabled(this : ISWbemPrivilege*, bIsEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsEnabled.call(this, bIsEnabled)
    end
    def put_IsEnabled(this : ISWbemPrivilege*, bIsEnabled : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_IsEnabled.call(this, bIsEnabled)
    end
    def get_Name(this : ISWbemPrivilege*, strDisplayName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Name.call(this, strDisplayName)
    end
    def get_DisplayName(this : ISWbemPrivilege*, strDisplayName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_DisplayName.call(this, strDisplayName)
    end
    def get_Identifier(this : ISWbemPrivilege*, iPrivilege : Win32cr::System::Wmi::WbemPrivilegeEnum*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Identifier.call(this, iPrivilege)
    end

  end

  @[Extern]
  record ISWbemPrivilegeSetVtbl,
    query_interface : Proc(ISWbemPrivilegeSet*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemPrivilegeSet*, UInt32),
    release : Proc(ISWbemPrivilegeSet*, UInt32),
    get_type_info_count : Proc(ISWbemPrivilegeSet*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemPrivilegeSet*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemPrivilegeSet*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemPrivilegeSet*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get__NewEnum : Proc(ISWbemPrivilegeSet*, Void**, Win32cr::Foundation::HRESULT),
    item : Proc(ISWbemPrivilegeSet*, Win32cr::System::Wmi::WbemPrivilegeEnum, Void**, Win32cr::Foundation::HRESULT),
    get_Count : Proc(ISWbemPrivilegeSet*, Int32*, Win32cr::Foundation::HRESULT),
    add : Proc(ISWbemPrivilegeSet*, Win32cr::System::Wmi::WbemPrivilegeEnum, Int16, Void**, Win32cr::Foundation::HRESULT),
    remove : Proc(ISWbemPrivilegeSet*, Win32cr::System::Wmi::WbemPrivilegeEnum, Win32cr::Foundation::HRESULT),
    delete_all : Proc(ISWbemPrivilegeSet*, Win32cr::Foundation::HRESULT),
    add_as_string : Proc(ISWbemPrivilegeSet*, Win32cr::Foundation::BSTR, Int16, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("26ee67bf-5804-11d2-8b4a-00600806d9b6")]
  record ISWbemPrivilegeSet, lpVtbl : ISWbemPrivilegeSetVtbl* do
    GUID = LibC::GUID.new(0x26ee67bf_u32, 0x5804_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x4a_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
    def query_interface(this : ISWbemPrivilegeSet*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemPrivilegeSet*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemPrivilegeSet*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemPrivilegeSet*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemPrivilegeSet*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemPrivilegeSet*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemPrivilegeSet*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get__NewEnum(this : ISWbemPrivilegeSet*, pUnk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get__NewEnum.call(this, pUnk)
    end
    def item(this : ISWbemPrivilegeSet*, iPrivilege : Win32cr::System::Wmi::WbemPrivilegeEnum, objWbemPrivilege : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item.call(this, iPrivilege, objWbemPrivilege)
    end
    def get_Count(this : ISWbemPrivilegeSet*, iCount : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Count.call(this, iCount)
    end
    def add(this : ISWbemPrivilegeSet*, iPrivilege : Win32cr::System::Wmi::WbemPrivilegeEnum, bIsEnabled : Int16, objWbemPrivilege : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add.call(this, iPrivilege, bIsEnabled, objWbemPrivilege)
    end
    def remove(this : ISWbemPrivilegeSet*, iPrivilege : Win32cr::System::Wmi::WbemPrivilegeEnum) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove.call(this, iPrivilege)
    end
    def delete_all(this : ISWbemPrivilegeSet*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_all.call(this)
    end
    def add_as_string(this : ISWbemPrivilegeSet*, strPrivilege : Win32cr::Foundation::BSTR, bIsEnabled : Int16, objWbemPrivilege : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_as_string.call(this, strPrivilege, bIsEnabled, objWbemPrivilege)
    end

  end

  @[Extern]
  record ISWbemServicesExVtbl,
    query_interface : Proc(ISWbemServicesEx*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemServicesEx*, UInt32),
    release : Proc(ISWbemServicesEx*, UInt32),
    get_type_info_count : Proc(ISWbemServicesEx*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemServicesEx*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemServicesEx*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemServicesEx*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get : Proc(ISWbemServicesEx*, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_async : Proc(ISWbemServicesEx*, Void*, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    delete : Proc(ISWbemServicesEx*, Win32cr::Foundation::BSTR, Int32, Void*, Win32cr::Foundation::HRESULT),
    delete_async : Proc(ISWbemServicesEx*, Void*, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    instances_of : Proc(ISWbemServicesEx*, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    instances_of_async : Proc(ISWbemServicesEx*, Void*, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    subclasses_of : Proc(ISWbemServicesEx*, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    subclasses_of_async : Proc(ISWbemServicesEx*, Void*, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    exec_query : Proc(ISWbemServicesEx*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    exec_query_async : Proc(ISWbemServicesEx*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    associators_of : Proc(ISWbemServicesEx*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    associators_of_async : Proc(ISWbemServicesEx*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    references_to : Proc(ISWbemServicesEx*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    references_to_async : Proc(ISWbemServicesEx*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    exec_notification_query : Proc(ISWbemServicesEx*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    exec_notification_query_async : Proc(ISWbemServicesEx*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    exec_method : Proc(ISWbemServicesEx*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Void*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    exec_method_async : Proc(ISWbemServicesEx*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    get_Security_ : Proc(ISWbemServicesEx*, Void**, Win32cr::Foundation::HRESULT),
    put : Proc(ISWbemServicesEx*, Void*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    put_async : Proc(ISWbemServicesEx*, Void*, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("d2f68443-85dc-427e-91d8-366554cc754c")]
  record ISWbemServicesEx, lpVtbl : ISWbemServicesExVtbl* do
    GUID = LibC::GUID.new(0xd2f68443_u32, 0x85dc_u16, 0x427e_u16, StaticArray[0x91_u8, 0xd8_u8, 0x36_u8, 0x65_u8, 0x54_u8, 0xcc_u8, 0x75_u8, 0x4c_u8])
    def query_interface(this : ISWbemServicesEx*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemServicesEx*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemServicesEx*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemServicesEx*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemServicesEx*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemServicesEx*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemServicesEx*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get(this : ISWbemServicesEx*, strObjectPath : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get.call(this, strObjectPath, iFlags, objWbemNamedValueSet, objWbemObject)
    end
    def get_async(this : ISWbemServicesEx*, objWbemSink : Void*, strObjectPath : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_async.call(this, objWbemSink, strObjectPath, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def delete(this : ISWbemServicesEx*, strObjectPath : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete.call(this, strObjectPath, iFlags, objWbemNamedValueSet)
    end
    def delete_async(this : ISWbemServicesEx*, objWbemSink : Void*, strObjectPath : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_async.call(this, objWbemSink, strObjectPath, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def instances_of(this : ISWbemServicesEx*, strClass : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.instances_of.call(this, strClass, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def instances_of_async(this : ISWbemServicesEx*, objWbemSink : Void*, strClass : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.instances_of_async.call(this, objWbemSink, strClass, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def subclasses_of(this : ISWbemServicesEx*, strSuperclass : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.subclasses_of.call(this, strSuperclass, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def subclasses_of_async(this : ISWbemServicesEx*, objWbemSink : Void*, strSuperclass : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.subclasses_of_async.call(this, objWbemSink, strSuperclass, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def exec_query(this : ISWbemServicesEx*, strQuery : Win32cr::Foundation::BSTR, strQueryLanguage : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_query.call(this, strQuery, strQueryLanguage, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def exec_query_async(this : ISWbemServicesEx*, objWbemSink : Void*, strQuery : Win32cr::Foundation::BSTR, strQueryLanguage : Win32cr::Foundation::BSTR, lFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_query_async.call(this, objWbemSink, strQuery, strQueryLanguage, lFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def associators_of(this : ISWbemServicesEx*, strObjectPath : Win32cr::Foundation::BSTR, strAssocClass : Win32cr::Foundation::BSTR, strResultClass : Win32cr::Foundation::BSTR, strResultRole : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredAssocQualifier : Win32cr::Foundation::BSTR, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.associators_of.call(this, strObjectPath, strAssocClass, strResultClass, strResultRole, strRole, bClassesOnly, bSchemaOnly, strRequiredAssocQualifier, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def associators_of_async(this : ISWbemServicesEx*, objWbemSink : Void*, strObjectPath : Win32cr::Foundation::BSTR, strAssocClass : Win32cr::Foundation::BSTR, strResultClass : Win32cr::Foundation::BSTR, strResultRole : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredAssocQualifier : Win32cr::Foundation::BSTR, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.associators_of_async.call(this, objWbemSink, strObjectPath, strAssocClass, strResultClass, strResultRole, strRole, bClassesOnly, bSchemaOnly, strRequiredAssocQualifier, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def references_to(this : ISWbemServicesEx*, strObjectPath : Win32cr::Foundation::BSTR, strResultClass : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.references_to.call(this, strObjectPath, strResultClass, strRole, bClassesOnly, bSchemaOnly, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def references_to_async(this : ISWbemServicesEx*, objWbemSink : Void*, strObjectPath : Win32cr::Foundation::BSTR, strResultClass : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.references_to_async.call(this, objWbemSink, strObjectPath, strResultClass, strRole, bClassesOnly, bSchemaOnly, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def exec_notification_query(this : ISWbemServicesEx*, strQuery : Win32cr::Foundation::BSTR, strQueryLanguage : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemEventSource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_notification_query.call(this, strQuery, strQueryLanguage, iFlags, objWbemNamedValueSet, objWbemEventSource)
    end
    def exec_notification_query_async(this : ISWbemServicesEx*, objWbemSink : Void*, strQuery : Win32cr::Foundation::BSTR, strQueryLanguage : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_notification_query_async.call(this, objWbemSink, strQuery, strQueryLanguage, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def exec_method(this : ISWbemServicesEx*, strObjectPath : Win32cr::Foundation::BSTR, strMethodName : Win32cr::Foundation::BSTR, objWbemInParameters : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemOutParameters : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_method.call(this, strObjectPath, strMethodName, objWbemInParameters, iFlags, objWbemNamedValueSet, objWbemOutParameters)
    end
    def exec_method_async(this : ISWbemServicesEx*, objWbemSink : Void*, strObjectPath : Win32cr::Foundation::BSTR, strMethodName : Win32cr::Foundation::BSTR, objWbemInParameters : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_method_async.call(this, objWbemSink, strObjectPath, strMethodName, objWbemInParameters, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def get_Security_(this : ISWbemServicesEx*, objWbemSecurity : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Security_.call(this, objWbemSecurity)
    end
    def put(this : ISWbemServicesEx*, objWbemObject : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectPath : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put.call(this, objWbemObject, iFlags, objWbemNamedValueSet, objWbemObjectPath)
    end
    def put_async(this : ISWbemServicesEx*, objWbemSink : Void*, objWbemObject : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_async.call(this, objWbemSink, objWbemObject, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end

  end

  @[Extern]
  record ISWbemObjectExVtbl,
    query_interface : Proc(ISWbemObjectEx*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemObjectEx*, UInt32),
    release : Proc(ISWbemObjectEx*, UInt32),
    get_type_info_count : Proc(ISWbemObjectEx*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemObjectEx*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemObjectEx*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemObjectEx*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    put_ : Proc(ISWbemObjectEx*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    put_async_ : Proc(ISWbemObjectEx*, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    delete_ : Proc(ISWbemObjectEx*, Int32, Void*, Win32cr::Foundation::HRESULT),
    delete_async_ : Proc(ISWbemObjectEx*, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    instances_ : Proc(ISWbemObjectEx*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    instances_async_ : Proc(ISWbemObjectEx*, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    subclasses_ : Proc(ISWbemObjectEx*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    subclasses_async_ : Proc(ISWbemObjectEx*, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    associators_ : Proc(ISWbemObjectEx*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    associators_async_ : Proc(ISWbemObjectEx*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    references_ : Proc(ISWbemObjectEx*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    references_async_ : Proc(ISWbemObjectEx*, Void*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int16, Int16, Win32cr::Foundation::BSTR, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    exec_method_ : Proc(ISWbemObjectEx*, Win32cr::Foundation::BSTR, Void*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    exec_method_async_ : Proc(ISWbemObjectEx*, Void*, Win32cr::Foundation::BSTR, Void*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    clone_ : Proc(ISWbemObjectEx*, Void**, Win32cr::Foundation::HRESULT),
    get_object_text_ : Proc(ISWbemObjectEx*, Int32, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    spawn_derived_class_ : Proc(ISWbemObjectEx*, Int32, Void**, Win32cr::Foundation::HRESULT),
    spawn_instance_ : Proc(ISWbemObjectEx*, Int32, Void**, Win32cr::Foundation::HRESULT),
    compare_to_ : Proc(ISWbemObjectEx*, Void*, Int32, Int16*, Win32cr::Foundation::HRESULT),
    get_Qualifiers_ : Proc(ISWbemObjectEx*, Void**, Win32cr::Foundation::HRESULT),
    get_Properties_ : Proc(ISWbemObjectEx*, Void**, Win32cr::Foundation::HRESULT),
    get_Methods_ : Proc(ISWbemObjectEx*, Void**, Win32cr::Foundation::HRESULT),
    get_Derivation_ : Proc(ISWbemObjectEx*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_Path_ : Proc(ISWbemObjectEx*, Void**, Win32cr::Foundation::HRESULT),
    get_Security_ : Proc(ISWbemObjectEx*, Void**, Win32cr::Foundation::HRESULT),
    refresh_ : Proc(ISWbemObjectEx*, Int32, Void*, Win32cr::Foundation::HRESULT),
    get_SystemProperties_ : Proc(ISWbemObjectEx*, Void**, Win32cr::Foundation::HRESULT),
    get_text_ : Proc(ISWbemObjectEx*, Win32cr::System::Wmi::WbemObjectTextFormatEnum, Int32, Void*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    set_from_text_ : Proc(ISWbemObjectEx*, Win32cr::Foundation::BSTR, Win32cr::System::Wmi::WbemObjectTextFormatEnum, Int32, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("269ad56a-8a67-4129-bc8c-0506dcfe9880")]
  record ISWbemObjectEx, lpVtbl : ISWbemObjectExVtbl* do
    GUID = LibC::GUID.new(0x269ad56a_u32, 0x8a67_u16, 0x4129_u16, StaticArray[0xbc_u8, 0x8c_u8, 0x5_u8, 0x6_u8, 0xdc_u8, 0xfe_u8, 0x98_u8, 0x80_u8])
    def query_interface(this : ISWbemObjectEx*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemObjectEx*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemObjectEx*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemObjectEx*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemObjectEx*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemObjectEx*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemObjectEx*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def put_(this : ISWbemObjectEx*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectPath : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_.call(this, iFlags, objWbemNamedValueSet, objWbemObjectPath)
    end
    def put_async_(this : ISWbemObjectEx*, objWbemSink : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_async_.call(this, objWbemSink, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def delete_(this : ISWbemObjectEx*, iFlags : Int32, objWbemNamedValueSet : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_.call(this, iFlags, objWbemNamedValueSet)
    end
    def delete_async_(this : ISWbemObjectEx*, objWbemSink : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_async_.call(this, objWbemSink, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def instances_(this : ISWbemObjectEx*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.instances_.call(this, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def instances_async_(this : ISWbemObjectEx*, objWbemSink : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.instances_async_.call(this, objWbemSink, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def subclasses_(this : ISWbemObjectEx*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.subclasses_.call(this, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def subclasses_async_(this : ISWbemObjectEx*, objWbemSink : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.subclasses_async_.call(this, objWbemSink, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def associators_(this : ISWbemObjectEx*, strAssocClass : Win32cr::Foundation::BSTR, strResultClass : Win32cr::Foundation::BSTR, strResultRole : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredAssocQualifier : Win32cr::Foundation::BSTR, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.associators_.call(this, strAssocClass, strResultClass, strResultRole, strRole, bClassesOnly, bSchemaOnly, strRequiredAssocQualifier, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def associators_async_(this : ISWbemObjectEx*, objWbemSink : Void*, strAssocClass : Win32cr::Foundation::BSTR, strResultClass : Win32cr::Foundation::BSTR, strResultRole : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredAssocQualifier : Win32cr::Foundation::BSTR, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.associators_async_.call(this, objWbemSink, strAssocClass, strResultClass, strResultRole, strRole, bClassesOnly, bSchemaOnly, strRequiredAssocQualifier, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def references_(this : ISWbemObjectEx*, strResultClass : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.references_.call(this, strResultClass, strRole, bClassesOnly, bSchemaOnly, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemObjectSet)
    end
    def references_async_(this : ISWbemObjectEx*, objWbemSink : Void*, strResultClass : Win32cr::Foundation::BSTR, strRole : Win32cr::Foundation::BSTR, bClassesOnly : Int16, bSchemaOnly : Int16, strRequiredQualifier : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.references_async_.call(this, objWbemSink, strResultClass, strRole, bClassesOnly, bSchemaOnly, strRequiredQualifier, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def exec_method_(this : ISWbemObjectEx*, strMethodName : Win32cr::Foundation::BSTR, objWbemInParameters : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemOutParameters : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_method_.call(this, strMethodName, objWbemInParameters, iFlags, objWbemNamedValueSet, objWbemOutParameters)
    end
    def exec_method_async_(this : ISWbemObjectEx*, objWbemSink : Void*, strMethodName : Win32cr::Foundation::BSTR, objWbemInParameters : Void*, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemAsyncContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_method_async_.call(this, objWbemSink, strMethodName, objWbemInParameters, iFlags, objWbemNamedValueSet, objWbemAsyncContext)
    end
    def clone_(this : ISWbemObjectEx*, objWbemObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone_.call(this, objWbemObject)
    end
    def get_object_text_(this : ISWbemObjectEx*, iFlags : Int32, strObjectText : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object_text_.call(this, iFlags, strObjectText)
    end
    def spawn_derived_class_(this : ISWbemObjectEx*, iFlags : Int32, objWbemObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.spawn_derived_class_.call(this, iFlags, objWbemObject)
    end
    def spawn_instance_(this : ISWbemObjectEx*, iFlags : Int32, objWbemObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.spawn_instance_.call(this, iFlags, objWbemObject)
    end
    def compare_to_(this : ISWbemObjectEx*, objWbemObject : Void*, iFlags : Int32, bResult : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compare_to_.call(this, objWbemObject, iFlags, bResult)
    end
    def get_Qualifiers_(this : ISWbemObjectEx*, objWbemQualifierSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Qualifiers_.call(this, objWbemQualifierSet)
    end
    def get_Properties_(this : ISWbemObjectEx*, objWbemPropertySet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Properties_.call(this, objWbemPropertySet)
    end
    def get_Methods_(this : ISWbemObjectEx*, objWbemMethodSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Methods_.call(this, objWbemMethodSet)
    end
    def get_Derivation_(this : ISWbemObjectEx*, strClassNameArray : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Derivation_.call(this, strClassNameArray)
    end
    def get_Path_(this : ISWbemObjectEx*, objWbemObjectPath : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Path_.call(this, objWbemObjectPath)
    end
    def get_Security_(this : ISWbemObjectEx*, objWbemSecurity : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Security_.call(this, objWbemSecurity)
    end
    def refresh_(this : ISWbemObjectEx*, iFlags : Int32, objWbemNamedValueSet : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_.call(this, iFlags, objWbemNamedValueSet)
    end
    def get_SystemProperties_(this : ISWbemObjectEx*, objWbemPropertySet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_SystemProperties_.call(this, objWbemPropertySet)
    end
    def get_text_(this : ISWbemObjectEx*, iObjectTextFormat : Win32cr::System::Wmi::WbemObjectTextFormatEnum, iFlags : Int32, objWbemNamedValueSet : Void*, bsText : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_text_.call(this, iObjectTextFormat, iFlags, objWbemNamedValueSet, bsText)
    end
    def set_from_text_(this : ISWbemObjectEx*, bsText : Win32cr::Foundation::BSTR, iObjectTextFormat : Win32cr::System::Wmi::WbemObjectTextFormatEnum, iFlags : Int32, objWbemNamedValueSet : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_from_text_.call(this, bsText, iObjectTextFormat, iFlags, objWbemNamedValueSet)
    end

  end

  @[Extern]
  record ISWbemDateTimeVtbl,
    query_interface : Proc(ISWbemDateTime*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemDateTime*, UInt32),
    release : Proc(ISWbemDateTime*, UInt32),
    get_type_info_count : Proc(ISWbemDateTime*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemDateTime*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemDateTime*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemDateTime*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Value : Proc(ISWbemDateTime*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Value : Proc(ISWbemDateTime*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Year : Proc(ISWbemDateTime*, Int32*, Win32cr::Foundation::HRESULT),
    put_Year : Proc(ISWbemDateTime*, Int32, Win32cr::Foundation::HRESULT),
    get_YearSpecified : Proc(ISWbemDateTime*, Int16*, Win32cr::Foundation::HRESULT),
    put_YearSpecified : Proc(ISWbemDateTime*, Int16, Win32cr::Foundation::HRESULT),
    get_Month : Proc(ISWbemDateTime*, Int32*, Win32cr::Foundation::HRESULT),
    put_Month : Proc(ISWbemDateTime*, Int32, Win32cr::Foundation::HRESULT),
    get_MonthSpecified : Proc(ISWbemDateTime*, Int16*, Win32cr::Foundation::HRESULT),
    put_MonthSpecified : Proc(ISWbemDateTime*, Int16, Win32cr::Foundation::HRESULT),
    get_Day : Proc(ISWbemDateTime*, Int32*, Win32cr::Foundation::HRESULT),
    put_Day : Proc(ISWbemDateTime*, Int32, Win32cr::Foundation::HRESULT),
    get_DaySpecified : Proc(ISWbemDateTime*, Int16*, Win32cr::Foundation::HRESULT),
    put_DaySpecified : Proc(ISWbemDateTime*, Int16, Win32cr::Foundation::HRESULT),
    get_Hours : Proc(ISWbemDateTime*, Int32*, Win32cr::Foundation::HRESULT),
    put_Hours : Proc(ISWbemDateTime*, Int32, Win32cr::Foundation::HRESULT),
    get_HoursSpecified : Proc(ISWbemDateTime*, Int16*, Win32cr::Foundation::HRESULT),
    put_HoursSpecified : Proc(ISWbemDateTime*, Int16, Win32cr::Foundation::HRESULT),
    get_Minutes : Proc(ISWbemDateTime*, Int32*, Win32cr::Foundation::HRESULT),
    put_Minutes : Proc(ISWbemDateTime*, Int32, Win32cr::Foundation::HRESULT),
    get_MinutesSpecified : Proc(ISWbemDateTime*, Int16*, Win32cr::Foundation::HRESULT),
    put_MinutesSpecified : Proc(ISWbemDateTime*, Int16, Win32cr::Foundation::HRESULT),
    get_Seconds : Proc(ISWbemDateTime*, Int32*, Win32cr::Foundation::HRESULT),
    put_Seconds : Proc(ISWbemDateTime*, Int32, Win32cr::Foundation::HRESULT),
    get_SecondsSpecified : Proc(ISWbemDateTime*, Int16*, Win32cr::Foundation::HRESULT),
    put_SecondsSpecified : Proc(ISWbemDateTime*, Int16, Win32cr::Foundation::HRESULT),
    get_Microseconds : Proc(ISWbemDateTime*, Int32*, Win32cr::Foundation::HRESULT),
    put_Microseconds : Proc(ISWbemDateTime*, Int32, Win32cr::Foundation::HRESULT),
    get_MicrosecondsSpecified : Proc(ISWbemDateTime*, Int16*, Win32cr::Foundation::HRESULT),
    put_MicrosecondsSpecified : Proc(ISWbemDateTime*, Int16, Win32cr::Foundation::HRESULT),
    get_UTC : Proc(ISWbemDateTime*, Int32*, Win32cr::Foundation::HRESULT),
    put_UTC : Proc(ISWbemDateTime*, Int32, Win32cr::Foundation::HRESULT),
    get_UTCSpecified : Proc(ISWbemDateTime*, Int16*, Win32cr::Foundation::HRESULT),
    put_UTCSpecified : Proc(ISWbemDateTime*, Int16, Win32cr::Foundation::HRESULT),
    get_IsInterval : Proc(ISWbemDateTime*, Int16*, Win32cr::Foundation::HRESULT),
    put_IsInterval : Proc(ISWbemDateTime*, Int16, Win32cr::Foundation::HRESULT),
    get_var_date : Proc(ISWbemDateTime*, Int16, Float64*, Win32cr::Foundation::HRESULT),
    set_var_date : Proc(ISWbemDateTime*, Float64, Int16, Win32cr::Foundation::HRESULT),
    get_file_time : Proc(ISWbemDateTime*, Int16, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    set_file_time : Proc(ISWbemDateTime*, Win32cr::Foundation::BSTR, Int16, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("5e97458a-cf77-11d3-b38f-00105a1f473a")]
  record ISWbemDateTime, lpVtbl : ISWbemDateTimeVtbl* do
    GUID = LibC::GUID.new(0x5e97458a_u32, 0xcf77_u16, 0x11d3_u16, StaticArray[0xb3_u8, 0x8f_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x47_u8, 0x3a_u8])
    def query_interface(this : ISWbemDateTime*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemDateTime*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemDateTime*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemDateTime*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemDateTime*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemDateTime*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemDateTime*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Value(this : ISWbemDateTime*, strValue : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Value.call(this, strValue)
    end
    def put_Value(this : ISWbemDateTime*, strValue : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Value.call(this, strValue)
    end
    def get_Year(this : ISWbemDateTime*, iYear : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Year.call(this, iYear)
    end
    def put_Year(this : ISWbemDateTime*, iYear : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Year.call(this, iYear)
    end
    def get_YearSpecified(this : ISWbemDateTime*, bYearSpecified : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_YearSpecified.call(this, bYearSpecified)
    end
    def put_YearSpecified(this : ISWbemDateTime*, bYearSpecified : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_YearSpecified.call(this, bYearSpecified)
    end
    def get_Month(this : ISWbemDateTime*, iMonth : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Month.call(this, iMonth)
    end
    def put_Month(this : ISWbemDateTime*, iMonth : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Month.call(this, iMonth)
    end
    def get_MonthSpecified(this : ISWbemDateTime*, bMonthSpecified : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_MonthSpecified.call(this, bMonthSpecified)
    end
    def put_MonthSpecified(this : ISWbemDateTime*, bMonthSpecified : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_MonthSpecified.call(this, bMonthSpecified)
    end
    def get_Day(this : ISWbemDateTime*, iDay : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Day.call(this, iDay)
    end
    def put_Day(this : ISWbemDateTime*, iDay : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Day.call(this, iDay)
    end
    def get_DaySpecified(this : ISWbemDateTime*, bDaySpecified : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_DaySpecified.call(this, bDaySpecified)
    end
    def put_DaySpecified(this : ISWbemDateTime*, bDaySpecified : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_DaySpecified.call(this, bDaySpecified)
    end
    def get_Hours(this : ISWbemDateTime*, iHours : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Hours.call(this, iHours)
    end
    def put_Hours(this : ISWbemDateTime*, iHours : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Hours.call(this, iHours)
    end
    def get_HoursSpecified(this : ISWbemDateTime*, bHoursSpecified : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_HoursSpecified.call(this, bHoursSpecified)
    end
    def put_HoursSpecified(this : ISWbemDateTime*, bHoursSpecified : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_HoursSpecified.call(this, bHoursSpecified)
    end
    def get_Minutes(this : ISWbemDateTime*, iMinutes : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Minutes.call(this, iMinutes)
    end
    def put_Minutes(this : ISWbemDateTime*, iMinutes : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Minutes.call(this, iMinutes)
    end
    def get_MinutesSpecified(this : ISWbemDateTime*, bMinutesSpecified : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_MinutesSpecified.call(this, bMinutesSpecified)
    end
    def put_MinutesSpecified(this : ISWbemDateTime*, bMinutesSpecified : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_MinutesSpecified.call(this, bMinutesSpecified)
    end
    def get_Seconds(this : ISWbemDateTime*, iSeconds : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Seconds.call(this, iSeconds)
    end
    def put_Seconds(this : ISWbemDateTime*, iSeconds : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Seconds.call(this, iSeconds)
    end
    def get_SecondsSpecified(this : ISWbemDateTime*, bSecondsSpecified : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_SecondsSpecified.call(this, bSecondsSpecified)
    end
    def put_SecondsSpecified(this : ISWbemDateTime*, bSecondsSpecified : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_SecondsSpecified.call(this, bSecondsSpecified)
    end
    def get_Microseconds(this : ISWbemDateTime*, iMicroseconds : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Microseconds.call(this, iMicroseconds)
    end
    def put_Microseconds(this : ISWbemDateTime*, iMicroseconds : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Microseconds.call(this, iMicroseconds)
    end
    def get_MicrosecondsSpecified(this : ISWbemDateTime*, bMicrosecondsSpecified : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_MicrosecondsSpecified.call(this, bMicrosecondsSpecified)
    end
    def put_MicrosecondsSpecified(this : ISWbemDateTime*, bMicrosecondsSpecified : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_MicrosecondsSpecified.call(this, bMicrosecondsSpecified)
    end
    def get_UTC(this : ISWbemDateTime*, iUTC : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_UTC.call(this, iUTC)
    end
    def put_UTC(this : ISWbemDateTime*, iUTC : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_UTC.call(this, iUTC)
    end
    def get_UTCSpecified(this : ISWbemDateTime*, bUTCSpecified : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_UTCSpecified.call(this, bUTCSpecified)
    end
    def put_UTCSpecified(this : ISWbemDateTime*, bUTCSpecified : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_UTCSpecified.call(this, bUTCSpecified)
    end
    def get_IsInterval(this : ISWbemDateTime*, bIsInterval : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsInterval.call(this, bIsInterval)
    end
    def put_IsInterval(this : ISWbemDateTime*, bIsInterval : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_IsInterval.call(this, bIsInterval)
    end
    def get_var_date(this : ISWbemDateTime*, bIsLocal : Int16, dVarDate : Float64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_var_date.call(this, bIsLocal, dVarDate)
    end
    def set_var_date(this : ISWbemDateTime*, dVarDate : Float64, bIsLocal : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_var_date.call(this, dVarDate, bIsLocal)
    end
    def get_file_time(this : ISWbemDateTime*, bIsLocal : Int16, strFileTime : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_time.call(this, bIsLocal, strFileTime)
    end
    def set_file_time(this : ISWbemDateTime*, strFileTime : Win32cr::Foundation::BSTR, bIsLocal : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_time.call(this, strFileTime, bIsLocal)
    end

  end

  @[Extern]
  record ISWbemRefresherVtbl,
    query_interface : Proc(ISWbemRefresher*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemRefresher*, UInt32),
    release : Proc(ISWbemRefresher*, UInt32),
    get_type_info_count : Proc(ISWbemRefresher*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemRefresher*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemRefresher*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemRefresher*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get__NewEnum : Proc(ISWbemRefresher*, Void**, Win32cr::Foundation::HRESULT),
    item : Proc(ISWbemRefresher*, Int32, Void**, Win32cr::Foundation::HRESULT),
    get_Count : Proc(ISWbemRefresher*, Int32*, Win32cr::Foundation::HRESULT),
    add : Proc(ISWbemRefresher*, Void*, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    add_enum : Proc(ISWbemRefresher*, Void*, Win32cr::Foundation::BSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    remove : Proc(ISWbemRefresher*, Int32, Int32, Win32cr::Foundation::HRESULT),
    refresh : Proc(ISWbemRefresher*, Int32, Win32cr::Foundation::HRESULT),
    get_AutoReconnect : Proc(ISWbemRefresher*, Int16*, Win32cr::Foundation::HRESULT),
    put_AutoReconnect : Proc(ISWbemRefresher*, Int16, Win32cr::Foundation::HRESULT),
    delete_all : Proc(ISWbemRefresher*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("14d8250e-d9c2-11d3-b38f-00105a1f473a")]
  record ISWbemRefresher, lpVtbl : ISWbemRefresherVtbl* do
    GUID = LibC::GUID.new(0x14d8250e_u32, 0xd9c2_u16, 0x11d3_u16, StaticArray[0xb3_u8, 0x8f_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x47_u8, 0x3a_u8])
    def query_interface(this : ISWbemRefresher*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemRefresher*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemRefresher*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemRefresher*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemRefresher*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemRefresher*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemRefresher*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get__NewEnum(this : ISWbemRefresher*, pUnk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get__NewEnum.call(this, pUnk)
    end
    def item(this : ISWbemRefresher*, iIndex : Int32, objWbemRefreshableItem : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item.call(this, iIndex, objWbemRefreshableItem)
    end
    def get_Count(this : ISWbemRefresher*, iCount : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Count.call(this, iCount)
    end
    def add(this : ISWbemRefresher*, objWbemServices : Void*, bsInstancePath : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemRefreshableItem : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add.call(this, objWbemServices, bsInstancePath, iFlags, objWbemNamedValueSet, objWbemRefreshableItem)
    end
    def add_enum(this : ISWbemRefresher*, objWbemServices : Void*, bsClassName : Win32cr::Foundation::BSTR, iFlags : Int32, objWbemNamedValueSet : Void*, objWbemRefreshableItem : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_enum.call(this, objWbemServices, bsClassName, iFlags, objWbemNamedValueSet, objWbemRefreshableItem)
    end
    def remove(this : ISWbemRefresher*, iIndex : Int32, iFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove.call(this, iIndex, iFlags)
    end
    def refresh(this : ISWbemRefresher*, iFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh.call(this, iFlags)
    end
    def get_AutoReconnect(this : ISWbemRefresher*, bCount : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_AutoReconnect.call(this, bCount)
    end
    def put_AutoReconnect(this : ISWbemRefresher*, bCount : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_AutoReconnect.call(this, bCount)
    end
    def delete_all(this : ISWbemRefresher*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_all.call(this)
    end

  end

  @[Extern]
  record ISWbemRefreshableItemVtbl,
    query_interface : Proc(ISWbemRefreshableItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISWbemRefreshableItem*, UInt32),
    release : Proc(ISWbemRefreshableItem*, UInt32),
    get_type_info_count : Proc(ISWbemRefreshableItem*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(ISWbemRefreshableItem*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(ISWbemRefreshableItem*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(ISWbemRefreshableItem*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Index : Proc(ISWbemRefreshableItem*, Int32*, Win32cr::Foundation::HRESULT),
    get_Refresher : Proc(ISWbemRefreshableItem*, Void**, Win32cr::Foundation::HRESULT),
    get_IsSet : Proc(ISWbemRefreshableItem*, Int16*, Win32cr::Foundation::HRESULT),
    get_Object : Proc(ISWbemRefreshableItem*, Void**, Win32cr::Foundation::HRESULT),
    get_ObjectSet : Proc(ISWbemRefreshableItem*, Void**, Win32cr::Foundation::HRESULT),
    remove : Proc(ISWbemRefreshableItem*, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("5ad4bf92-daab-11d3-b38f-00105a1f473a")]
  record ISWbemRefreshableItem, lpVtbl : ISWbemRefreshableItemVtbl* do
    GUID = LibC::GUID.new(0x5ad4bf92_u32, 0xdaab_u16, 0x11d3_u16, StaticArray[0xb3_u8, 0x8f_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x47_u8, 0x3a_u8])
    def query_interface(this : ISWbemRefreshableItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISWbemRefreshableItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISWbemRefreshableItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : ISWbemRefreshableItem*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : ISWbemRefreshableItem*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : ISWbemRefreshableItem*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : ISWbemRefreshableItem*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Index(this : ISWbemRefreshableItem*, iIndex : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Index.call(this, iIndex)
    end
    def get_Refresher(this : ISWbemRefreshableItem*, objWbemRefresher : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Refresher.call(this, objWbemRefresher)
    end
    def get_IsSet(this : ISWbemRefreshableItem*, bIsSet : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsSet.call(this, bIsSet)
    end
    def get_Object(this : ISWbemRefreshableItem*, objWbemObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Object.call(this, objWbemObject)
    end
    def get_ObjectSet(this : ISWbemRefreshableItem*, objWbemObjectSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ObjectSet.call(this, objWbemObjectSet)
    end
    def remove(this : ISWbemRefreshableItem*, iFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove.call(this, iFlags)
    end

  end

  @[Extern]
  record IWMIExtensionVtbl,
    query_interface : Proc(IWMIExtension*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWMIExtension*, UInt32),
    release : Proc(IWMIExtension*, UInt32),
    get_type_info_count : Proc(IWMIExtension*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IWMIExtension*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IWMIExtension*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IWMIExtension*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_WMIObjectPath : Proc(IWMIExtension*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_wmi_object : Proc(IWMIExtension*, Void**, Win32cr::Foundation::HRESULT),
    get_wmi_services : Proc(IWMIExtension*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("adc1f06e-5c7e-11d2-8b74-00104b2afb41")]
  record IWMIExtension, lpVtbl : IWMIExtensionVtbl* do
    GUID = LibC::GUID.new(0xadc1f06e_u32, 0x5c7e_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x74_u8, 0x0_u8, 0x10_u8, 0x4b_u8, 0x2a_u8, 0xfb_u8, 0x41_u8])
    def query_interface(this : IWMIExtension*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWMIExtension*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWMIExtension*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IWMIExtension*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IWMIExtension*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IWMIExtension*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IWMIExtension*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_WMIObjectPath(this : IWMIExtension*, strWMIObjectPath : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_WMIObjectPath.call(this, strWMIObjectPath)
    end
    def get_wmi_object(this : IWMIExtension*, objWMIObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_wmi_object.call(this, objWMIObject)
    end
    def get_wmi_services(this : IWMIExtension*, objWMIServices : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_wmi_services.call(this, objWMIServices)
    end

  end

  @[Extern]
  record IWbemTransportVtbl,
    query_interface : Proc(IWbemTransport*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemTransport*, UInt32),
    release : Proc(IWbemTransport*, UInt32),
    initialize__ : Proc(IWbemTransport*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("553fe584-2156-11d0-b6ae-00aa003240c7")]
  record IWbemTransport, lpVtbl : IWbemTransportVtbl* do
    GUID = LibC::GUID.new(0x553fe584_u32, 0x2156_u16, 0x11d0_u16, StaticArray[0xb6_u8, 0xae_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x32_u8, 0x40_u8, 0xc7_u8])
    def query_interface(this : IWbemTransport*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemTransport*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemTransport*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IWbemTransport*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this)
    end

  end

  @[Extern]
  record IWbemLevel1LoginVtbl,
    query_interface : Proc(IWbemLevel1Login*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemLevel1Login*, UInt32),
    release : Proc(IWbemLevel1Login*, UInt32),
    establish_position : Proc(IWbemLevel1Login*, Win32cr::Foundation::PWSTR, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    request_challenge : Proc(IWbemLevel1Login*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt8*, Win32cr::Foundation::HRESULT),
    wbem_login : Proc(IWbemLevel1Login*, Win32cr::Foundation::PWSTR, UInt8*, Int32, Void*, Void**, Win32cr::Foundation::HRESULT),
    ntlm_login : Proc(IWbemLevel1Login*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Int32, Void*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("f309ad18-d86a-11d0-a075-00c04fb68820")]
  record IWbemLevel1Login, lpVtbl : IWbemLevel1LoginVtbl* do
    GUID = LibC::GUID.new(0xf309ad18_u32, 0xd86a_u16, 0x11d0_u16, StaticArray[0xa0_u8, 0x75_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
    def query_interface(this : IWbemLevel1Login*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemLevel1Login*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemLevel1Login*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def establish_position(this : IWbemLevel1Login*, wszLocaleList : Win32cr::Foundation::PWSTR, dwNumLocales : UInt32, reserved : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.establish_position.call(this, wszLocaleList, dwNumLocales, reserved)
    end
    def request_challenge(this : IWbemLevel1Login*, wszNetworkResource : Win32cr::Foundation::PWSTR, wszUser : Win32cr::Foundation::PWSTR, nonce : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.request_challenge.call(this, wszNetworkResource, wszUser, nonce)
    end
    def wbem_login(this : IWbemLevel1Login*, wszPreferredLocale : Win32cr::Foundation::PWSTR, access_token : UInt8*, lFlags : Int32, pCtx : Void*, ppNamespace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.wbem_login.call(this, wszPreferredLocale, access_token, lFlags, pCtx, ppNamespace)
    end
    def ntlm_login(this : IWbemLevel1Login*, wszNetworkResource : Win32cr::Foundation::PWSTR, wszPreferredLocale : Win32cr::Foundation::PWSTR, lFlags : Int32, pCtx : Void*, ppNamespace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ntlm_login.call(this, wszNetworkResource, wszPreferredLocale, lFlags, pCtx, ppNamespace)
    end

  end

  @[Extern]
  record IWbemConnectorLoginVtbl,
    query_interface : Proc(IWbemConnectorLogin*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemConnectorLogin*, UInt32),
    release : Proc(IWbemConnectorLogin*, UInt32),
    connector_login : Proc(IWbemConnectorLogin*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Int32, Void*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("d8ec9cb1-b135-4f10-8b1b-c7188bb0d186")]
  record IWbemConnectorLogin, lpVtbl : IWbemConnectorLoginVtbl* do
    GUID = LibC::GUID.new(0xd8ec9cb1_u32, 0xb135_u16, 0x4f10_u16, StaticArray[0x8b_u8, 0x1b_u8, 0xc7_u8, 0x18_u8, 0x8b_u8, 0xb0_u8, 0xd1_u8, 0x86_u8])
    def query_interface(this : IWbemConnectorLogin*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemConnectorLogin*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemConnectorLogin*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def connector_login(this : IWbemConnectorLogin*, wszNetworkResource : Win32cr::Foundation::PWSTR, wszPreferredLocale : Win32cr::Foundation::PWSTR, lFlags : Int32, pCtx : Void*, riid : LibC::GUID*, pInterface : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.connector_login.call(this, wszNetworkResource, wszPreferredLocale, lFlags, pCtx, riid, pInterface)
    end

  end

  @[Extern]
  record IWbemAddressResolutionVtbl,
    query_interface : Proc(IWbemAddressResolution*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemAddressResolution*, UInt32),
    release : Proc(IWbemAddressResolution*, UInt32),
    resolve : Proc(IWbemAddressResolution*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32*, UInt8**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("f7ce2e12-8c90-11d1-9e7b-00c04fc324a8")]
  record IWbemAddressResolution, lpVtbl : IWbemAddressResolutionVtbl* do
    GUID = LibC::GUID.new(0xf7ce2e12_u32, 0x8c90_u16, 0x11d1_u16, StaticArray[0x9e_u8, 0x7b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc3_u8, 0x24_u8, 0xa8_u8])
    def query_interface(this : IWbemAddressResolution*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemAddressResolution*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemAddressResolution*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def resolve(this : IWbemAddressResolution*, wszNamespacePath : Win32cr::Foundation::PWSTR, wszAddressType : Win32cr::Foundation::PWSTR, pdwAddressLength : UInt32*, pabBinaryAddress : UInt8**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resolve.call(this, wszNamespacePath, wszAddressType, pdwAddressLength, pabBinaryAddress)
    end

  end

  @[Extern]
  record IWbemClientTransportVtbl,
    query_interface : Proc(IWbemClientTransport*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemClientTransport*, UInt32),
    release : Proc(IWbemClientTransport*, UInt32),
    connect_server : Proc(IWbemClientTransport*, Win32cr::Foundation::BSTR, UInt32, UInt8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Win32cr::Foundation::BSTR, Void*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("f7ce2e11-8c90-11d1-9e7b-00c04fc324a8")]
  record IWbemClientTransport, lpVtbl : IWbemClientTransportVtbl* do
    GUID = LibC::GUID.new(0xf7ce2e11_u32, 0x8c90_u16, 0x11d1_u16, StaticArray[0x9e_u8, 0x7b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc3_u8, 0x24_u8, 0xa8_u8])
    def query_interface(this : IWbemClientTransport*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemClientTransport*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemClientTransport*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def connect_server(this : IWbemClientTransport*, strAddressType : Win32cr::Foundation::BSTR, dwBinaryAddressLength : UInt32, abBinaryAddress : UInt8*, strNetworkResource : Win32cr::Foundation::BSTR, strUser : Win32cr::Foundation::BSTR, strPassword : Win32cr::Foundation::BSTR, strLocale : Win32cr::Foundation::BSTR, lSecurityFlags : Int32, strAuthority : Win32cr::Foundation::BSTR, pCtx : Void*, ppNamespace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.connect_server.call(this, strAddressType, dwBinaryAddressLength, abBinaryAddress, strNetworkResource, strUser, strPassword, strLocale, lSecurityFlags, strAuthority, pCtx, ppNamespace)
    end

  end

  @[Extern]
  record IWbemClientConnectionTransportVtbl,
    query_interface : Proc(IWbemClientConnectionTransport*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemClientConnectionTransport*, UInt32),
    release : Proc(IWbemClientConnectionTransport*, UInt32),
    open : Proc(IWbemClientConnectionTransport*, Win32cr::Foundation::BSTR, UInt32, UInt8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, LibC::GUID*, Void**, Void**, Win32cr::Foundation::HRESULT),
    open_async : Proc(IWbemClientConnectionTransport*, Win32cr::Foundation::BSTR, UInt32, UInt8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32, Void*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    cancel : Proc(IWbemClientConnectionTransport*, Int32, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("a889c72a-fcc1-4a9e-af61-ed071333fb5b")]
  record IWbemClientConnectionTransport, lpVtbl : IWbemClientConnectionTransportVtbl* do
    GUID = LibC::GUID.new(0xa889c72a_u32, 0xfcc1_u16, 0x4a9e_u16, StaticArray[0xaf_u8, 0x61_u8, 0xed_u8, 0x7_u8, 0x13_u8, 0x33_u8, 0xfb_u8, 0x5b_u8])
    def query_interface(this : IWbemClientConnectionTransport*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemClientConnectionTransport*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemClientConnectionTransport*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def open(this : IWbemClientConnectionTransport*, strAddressType : Win32cr::Foundation::BSTR, dwBinaryAddressLength : UInt32, abBinaryAddress : UInt8*, strObject : Win32cr::Foundation::BSTR, strUser : Win32cr::Foundation::BSTR, strPassword : Win32cr::Foundation::BSTR, strLocale : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, riid : LibC::GUID*, pInterface : Void**, pCallRes : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open.call(this, strAddressType, dwBinaryAddressLength, abBinaryAddress, strObject, strUser, strPassword, strLocale, lFlags, pCtx, riid, pInterface, pCallRes)
    end
    def open_async(this : IWbemClientConnectionTransport*, strAddressType : Win32cr::Foundation::BSTR, dwBinaryAddressLength : UInt32, abBinaryAddress : UInt8*, strObject : Win32cr::Foundation::BSTR, strUser : Win32cr::Foundation::BSTR, strPassword : Win32cr::Foundation::BSTR, strLocale : Win32cr::Foundation::BSTR, lFlags : Int32, pCtx : Void*, riid : LibC::GUID*, pResponseHandler : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_async.call(this, strAddressType, dwBinaryAddressLength, abBinaryAddress, strObject, strUser, strPassword, strLocale, lFlags, pCtx, riid, pResponseHandler)
    end
    def cancel(this : IWbemClientConnectionTransport*, lFlags : Int32, pHandler : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cancel.call(this, lFlags, pHandler)
    end

  end

  @[Extern]
  record IWbemConstructClassObjectVtbl,
    query_interface : Proc(IWbemConstructClassObject*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWbemConstructClassObject*, UInt32),
    release : Proc(IWbemConstructClassObject*, UInt32),
    set_inheritance_chain : Proc(IWbemConstructClassObject*, Int32, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    set_property_origin : Proc(IWbemConstructClassObject*, Win32cr::Foundation::PWSTR, Int32, Win32cr::Foundation::HRESULT),
    set_method_origin : Proc(IWbemConstructClassObject*, Win32cr::Foundation::PWSTR, Int32, Win32cr::Foundation::HRESULT),
    set_server_namespace : Proc(IWbemConstructClassObject*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("9ef76194-70d5-11d1-ad90-00c04fd8fdff")]
  record IWbemConstructClassObject, lpVtbl : IWbemConstructClassObjectVtbl* do
    GUID = LibC::GUID.new(0x9ef76194_u32, 0x70d5_u16, 0x11d1_u16, StaticArray[0xad_u8, 0x90_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
    def query_interface(this : IWbemConstructClassObject*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWbemConstructClassObject*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWbemConstructClassObject*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_inheritance_chain(this : IWbemConstructClassObject*, lNumAntecedents : Int32, awszAntecedents : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_inheritance_chain.call(this, lNumAntecedents, awszAntecedents)
    end
    def set_property_origin(this : IWbemConstructClassObject*, wszPropertyName : Win32cr::Foundation::PWSTR, lOriginIndex : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_property_origin.call(this, wszPropertyName, lOriginIndex)
    end
    def set_method_origin(this : IWbemConstructClassObject*, wszMethodName : Win32cr::Foundation::PWSTR, lOriginIndex : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_method_origin.call(this, wszMethodName, lOriginIndex)
    end
    def set_server_namespace(this : IWbemConstructClassObject*, wszServer : Win32cr::Foundation::PWSTR, wszNamespace : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_server_namespace.call(this, wszServer, wszNamespace)
    end

  end

  @[Link("mi")]
  lib C
    fun MI_Application_InitializeV1(flags : UInt32, applicationID : UInt16*, extendedError : Win32cr::System::Wmi::MI_Instance**, application : Win32cr::System::Wmi::MI_Application*) : Win32cr::System::Wmi::MI_Result

  end
end