require "../system/com.cr"
require "../foundation.cr"
require "../ui/windowsandmessaging.cr"
require "../graphics/gdi.cr"
require "../system/com/structuredstorage.cr"
require "../media.cr"
require "../ui/controls/dialogs.cr"
require "../ui/controls.cr"

@[Link("delayimp")]
@[Link("user32")]
@[Link(ldflags: "/IGNORE:4199")]
@[Link(ldflags: "/DELAYLOAD:oleaut32.dll")]
@[Link(ldflags: "/DELAYLOAD:ole32.dll")]
@[Link(ldflags: "/DELAYLOAD:api-ms-win-core-marshal-l1-1-0.dll")]
@[Link(ldflags: "/DELAYLOAD:oledlg.dll")]
lib LibWin32
  CTL_E_ILLEGALFUNCTIONCALL = -2146828283_i32
  CONNECT_E_FIRST = -2147220992_i32
  SELFREG_E_FIRST = -2147220992_i32
  PERPROP_E_FIRST = -2147220992_i32
  OLECMDERR_E_FIRST = -2147221248_i32
  OLECMDERR_E_DISABLED = -2147221247_i32
  OLECMDERR_E_NOHELP = -2147221246_i32
  OLECMDERR_E_CANCELED = -2147221245_i32
  OLECMDERR_E_UNKNOWNGROUP = -2147221244_i32
  CONNECT_E_NOCONNECTION = -2147220992_i32
  CONNECT_E_ADVISELIMIT = -2147220991_i32
  CONNECT_E_CANNOTCONNECT = -2147220990_i32
  CONNECT_E_OVERRIDDEN = -2147220989_i32
  SELFREG_E_TYPELIB = -2147220992_i32
  SELFREG_E_CLASS = -2147220991_i32
  PERPROP_E_NOPAGEAVAILABLE = -2147220992_i32
  CLSID_CFontPropPage = "0be35200-8f91-11ce-9de3-00aa004bb851"
  CLSID_CColorPropPage = "0be35201-8f91-11ce-9de3-00aa004bb851"
  CLSID_CPicturePropPage = "0be35202-8f91-11ce-9de3-00aa004bb851"
  CLSID_PersistPropset = "fb8f0821-0164-101b-84ed-08002b2ec713"
  CLSID_ConvertVBX = "fb8f0822-0164-101b-84ed-08002b2ec713"
  CLSID_StdFont = "0be35203-8f91-11ce-9de3-00aa004bb851"
  CLSID_StdPicture = "0be35204-8f91-11ce-9de3-00aa004bb851"
  GUID_HIMETRIC = "66504300-be0f-101a-8bbb-00aa00300cab"
  GUID_COLOR = "66504301-be0f-101a-8bbb-00aa00300cab"
  GUID_XPOSPIXEL = "66504302-be0f-101a-8bbb-00aa00300cab"
  GUID_YPOSPIXEL = "66504303-be0f-101a-8bbb-00aa00300cab"
  GUID_XSIZEPIXEL = "66504304-be0f-101a-8bbb-00aa00300cab"
  GUID_YSIZEPIXEL = "66504305-be0f-101a-8bbb-00aa00300cab"
  GUID_XPOS = "66504306-be0f-101a-8bbb-00aa00300cab"
  GUID_YPOS = "66504307-be0f-101a-8bbb-00aa00300cab"
  GUID_XSIZE = "66504308-be0f-101a-8bbb-00aa00300cab"
  GUID_YSIZE = "66504309-be0f-101a-8bbb-00aa00300cab"
  GUID_TRISTATE = "6650430a-be0f-101a-8bbb-00aa00300cab"
  GUID_OPTIONVALUEEXCLUSIVE = "6650430b-be0f-101a-8bbb-00aa00300cab"
  GUID_CHECKVALUEEXCLUSIVE = "6650430c-be0f-101a-8bbb-00aa00300cab"
  GUID_FONTNAME = "6650430d-be0f-101a-8bbb-00aa00300cab"
  GUID_FONTSIZE = "6650430e-be0f-101a-8bbb-00aa00300cab"
  GUID_FONTBOLD = "6650430f-be0f-101a-8bbb-00aa00300cab"
  GUID_FONTITALIC = "66504310-be0f-101a-8bbb-00aa00300cab"
  GUID_FONTUNDERSCORE = "66504311-be0f-101a-8bbb-00aa00300cab"
  GUID_FONTSTRIKETHROUGH = "66504312-be0f-101a-8bbb-00aa00300cab"
  GUID_HANDLE = "66504313-be0f-101a-8bbb-00aa00300cab"
  PICTYPE_UNINITIALIZED = -1_i32
  PICTYPE_NONE = 0_u32
  PICTYPE_BITMAP = 1_u32
  PICTYPE_METAFILE = 2_u32
  PICTYPE_ICON = 3_u32
  PICTYPE_ENHMETAFILE = 4_u32
  CONNECT_E_LAST = -2147220977_i32
  CONNECT_S_FIRST = 262656_i32
  CONNECT_S_LAST = 262671_i32
  SELFREG_E_LAST = -2147220977_i32
  SELFREG_S_FIRST = 262656_i32
  SELFREG_S_LAST = 262671_i32
  PERPROP_E_LAST = -2147220977_i32
  PERPROP_S_FIRST = 262656_i32
  PERPROP_S_LAST = 262671_i32
  OLEIVERB_PROPERTIES = -7_i32
  VT_STREAMED_PROPSET = 73_u32
  VT_STORED_PROPSET = 74_u32
  VT_BLOB_PROPSET = 75_u32
  VT_VERBOSE_ENUM = 76_u32
  OCM__BASE = 8192_u32
  LP_DEFAULT = 0_u32
  LP_MONOCHROME = 1_u32
  LP_VGACOLOR = 2_u32
  LP_COLOR = 4_u32
  DISPID_AUTOSIZE = -500_i32
  DISPID_BACKCOLOR = -501_i32
  DISPID_BACKSTYLE = -502_i32
  DISPID_BORDERCOLOR = -503_i32
  DISPID_BORDERSTYLE = -504_i32
  DISPID_BORDERWIDTH = -505_i32
  DISPID_DRAWMODE = -507_i32
  DISPID_DRAWSTYLE = -508_i32
  DISPID_DRAWWIDTH = -509_i32
  DISPID_FILLCOLOR = -510_i32
  DISPID_FILLSTYLE = -511_i32
  DISPID_FONT = -512_i32
  DISPID_FORECOLOR = -513_i32
  DISPID_ENABLED = -514_i32
  DISPID_HWND = -515_i32
  DISPID_TABSTOP = -516_i32
  DISPID_TEXT = -517_i32
  DISPID_CAPTION = -518_i32
  DISPID_BORDERVISIBLE = -519_i32
  DISPID_APPEARANCE = -520_i32
  DISPID_MOUSEPOINTER = -521_i32
  DISPID_MOUSEICON = -522_i32
  DISPID_PICTURE = -523_i32
  DISPID_VALID = -524_i32
  DISPID_READYSTATE = -525_i32
  DISPID_LISTINDEX = -526_i32
  DISPID_SELECTED = -527_i32
  DISPID_LIST = -528_i32
  DISPID_COLUMN = -529_i32
  DISPID_LISTCOUNT = -531_i32
  DISPID_MULTISELECT = -532_i32
  DISPID_MAXLENGTH = -533_i32
  DISPID_PASSWORDCHAR = -534_i32
  DISPID_SCROLLBARS = -535_i32
  DISPID_WORDWRAP = -536_i32
  DISPID_MULTILINE = -537_i32
  DISPID_NUMBEROFROWS = -538_i32
  DISPID_NUMBEROFCOLUMNS = -539_i32
  DISPID_DISPLAYSTYLE = -540_i32
  DISPID_GROUPNAME = -541_i32
  DISPID_IMEMODE = -542_i32
  DISPID_ACCELERATOR = -543_i32
  DISPID_ENTERKEYBEHAVIOR = -544_i32
  DISPID_TABKEYBEHAVIOR = -545_i32
  DISPID_SELTEXT = -546_i32
  DISPID_SELSTART = -547_i32
  DISPID_SELLENGTH = -548_i32
  DISPID_REFRESH = -550_i32
  DISPID_DOCLICK = -551_i32
  DISPID_ABOUTBOX = -552_i32
  DISPID_ADDITEM = -553_i32
  DISPID_CLEAR = -554_i32
  DISPID_REMOVEITEM = -555_i32
  DISPID_CLICK = -600_i32
  DISPID_DBLCLICK = -601_i32
  DISPID_KEYDOWN = -602_i32
  DISPID_KEYPRESS = -603_i32
  DISPID_KEYUP = -604_i32
  DISPID_MOUSEDOWN = -605_i32
  DISPID_MOUSEMOVE = -606_i32
  DISPID_MOUSEUP = -607_i32
  DISPID_ERROREVENT = -608_i32
  DISPID_READYSTATECHANGE = -609_i32
  DISPID_CLICK_VALUE = -610_i32
  DISPID_RIGHTTOLEFT = -611_i32
  DISPID_TOPTOBOTTOM = -612_i32
  DISPID_THIS = -613_i32
  DISPID_AMBIENT_BACKCOLOR = -701_i32
  DISPID_AMBIENT_DISPLAYNAME = -702_i32
  DISPID_AMBIENT_FONT = -703_i32
  DISPID_AMBIENT_FORECOLOR = -704_i32
  DISPID_AMBIENT_LOCALEID = -705_i32
  DISPID_AMBIENT_MESSAGEREFLECT = -706_i32
  DISPID_AMBIENT_SCALEUNITS = -707_i32
  DISPID_AMBIENT_TEXTALIGN = -708_i32
  DISPID_AMBIENT_USERMODE = -709_i32
  DISPID_AMBIENT_UIDEAD = -710_i32
  DISPID_AMBIENT_SHOWGRABHANDLES = -711_i32
  DISPID_AMBIENT_SHOWHATCHING = -712_i32
  DISPID_AMBIENT_DISPLAYASDEFAULT = -713_i32
  DISPID_AMBIENT_SUPPORTSMNEMONICS = -714_i32
  DISPID_AMBIENT_AUTOCLIP = -715_i32
  DISPID_AMBIENT_APPEARANCE = -716_i32
  DISPID_AMBIENT_CODEPAGE = -725_i32
  DISPID_AMBIENT_PALETTE = -726_i32
  DISPID_AMBIENT_CHARSET = -727_i32
  DISPID_AMBIENT_TRANSFERPRIORITY = -728_i32
  DISPID_AMBIENT_RIGHTTOLEFT = -732_i32
  DISPID_AMBIENT_TOPTOBOTTOM = -733_i32
  DISPID_Name = -800_i32
  DISPID_Delete = -801_i32
  DISPID_Object = -802_i32
  DISPID_Parent = -803_i32
  DISPID_FONT_NAME = 0_u32
  DISPID_FONT_SIZE = 2_u32
  DISPID_FONT_BOLD = 3_u32
  DISPID_FONT_ITALIC = 4_u32
  DISPID_FONT_UNDER = 5_u32
  DISPID_FONT_STRIKE = 6_u32
  DISPID_FONT_WEIGHT = 7_u32
  DISPID_FONT_CHARSET = 8_u32
  DISPID_FONT_CHANGED = 9_u32
  DISPID_PICT_HANDLE = 0_u32
  DISPID_PICT_HPAL = 2_u32
  DISPID_PICT_TYPE = 3_u32
  DISPID_PICT_WIDTH = 4_u32
  DISPID_PICT_HEIGHT = 5_u32
  DISPID_PICT_RENDER = 6_u32
  GC_WCH_SIBLING = 1_i32
  TIFLAGS_EXTENDDISPATCHONLY = 1_u32
  OLECMDERR_E_NOTSUPPORTED = -2147221248_i32
  MSOCMDERR_E_FIRST = -2147221248_i32
  MSOCMDERR_E_NOTSUPPORTED = -2147221248_i32
  MSOCMDERR_E_DISABLED = -2147221247_i32
  MSOCMDERR_E_NOHELP = -2147221246_i32
  MSOCMDERR_E_CANCELED = -2147221245_i32
  MSOCMDERR_E_UNKNOWNGROUP = -2147221244_i32
  OLECMD_TASKDLGID_ONBEFOREUNLOAD = 1_u32
  OLECMDARGINDEX_SHOWPAGEACTIONMENU_HWND = 0_u32
  OLECMDARGINDEX_SHOWPAGEACTIONMENU_X = 1_u32
  OLECMDARGINDEX_SHOWPAGEACTIONMENU_Y = 2_u32
  OLECMDARGINDEX_ACTIVEXINSTALL_PUBLISHER = 0_u32
  OLECMDARGINDEX_ACTIVEXINSTALL_DISPLAYNAME = 1_u32
  OLECMDARGINDEX_ACTIVEXINSTALL_CLSID = 2_u32
  OLECMDARGINDEX_ACTIVEXINSTALL_INSTALLSCOPE = 3_u32
  OLECMDARGINDEX_ACTIVEXINSTALL_SOURCEURL = 4_u32
  INSTALL_SCOPE_INVALID = 0_u32
  INSTALL_SCOPE_MACHINE = 1_u32
  INSTALL_SCOPE_USER = 2_u32
  MK_ALT = 32_u32
  DROPEFFECT_NONE = 0_u32
  DROPEFFECT_COPY = 1_u32
  DROPEFFECT_MOVE = 2_u32
  DROPEFFECT_LINK = 4_u32
  DROPEFFECT_SCROLL = 2147483648_u32
  DD_DEFSCROLLINSET = 11_u32
  DD_DEFSCROLLDELAY = 50_u32
  DD_DEFSCROLLINTERVAL = 50_u32
  DD_DEFDRAGDELAY = 200_u32
  DD_DEFDRAGMINDIST = 2_u32
  OT_LINK = 1_i32
  OT_EMBEDDED = 2_i32
  OT_STATIC = 3_i32
  OLEVERB_PRIMARY = 0_u32
  OF_SET = 1_u32
  OF_GET = 2_u32
  OF_HANDLER = 4_u32
  WIN32 = 100_u32
  OLEIVERB_PRIMARY = 0_i32
  OLEIVERB_SHOW = -1_i32
  OLEIVERB_OPEN = -2_i32
  OLEIVERB_HIDE = -3_i32
  OLEIVERB_UIACTIVATE = -4_i32
  OLEIVERB_INPLACEACTIVATE = -5_i32
  OLEIVERB_DISCARDUNDOSTATE = -6_i32
  EMBDHLP_INPROC_HANDLER = 0_i32
  EMBDHLP_INPROC_SERVER = 1_i32
  EMBDHLP_CREATENOW = 0_i32
  EMBDHLP_DELAYCREATE = 65536_i32
  OLECREATE_LEAVERUNNING = 1_u32
  IDC_OLEUIHELP = 99_u32
  IDC_IO_CREATENEW = 2100_u32
  IDC_IO_CREATEFROMFILE = 2101_u32
  IDC_IO_LINKFILE = 2102_u32
  IDC_IO_OBJECTTYPELIST = 2103_u32
  IDC_IO_DISPLAYASICON = 2104_u32
  IDC_IO_CHANGEICON = 2105_u32
  IDC_IO_FILE = 2106_u32
  IDC_IO_FILEDISPLAY = 2107_u32
  IDC_IO_RESULTIMAGE = 2108_u32
  IDC_IO_RESULTTEXT = 2109_u32
  IDC_IO_ICONDISPLAY = 2110_u32
  IDC_IO_OBJECTTYPETEXT = 2111_u32
  IDC_IO_FILETEXT = 2112_u32
  IDC_IO_FILETYPE = 2113_u32
  IDC_IO_INSERTCONTROL = 2114_u32
  IDC_IO_ADDCONTROL = 2115_u32
  IDC_IO_CONTROLTYPELIST = 2116_u32
  IDC_PS_PASTE = 500_u32
  IDC_PS_PASTELINK = 501_u32
  IDC_PS_SOURCETEXT = 502_u32
  IDC_PS_PASTELIST = 503_u32
  IDC_PS_PASTELINKLIST = 504_u32
  IDC_PS_DISPLAYLIST = 505_u32
  IDC_PS_DISPLAYASICON = 506_u32
  IDC_PS_ICONDISPLAY = 507_u32
  IDC_PS_CHANGEICON = 508_u32
  IDC_PS_RESULTIMAGE = 509_u32
  IDC_PS_RESULTTEXT = 510_u32
  IDC_CI_GROUP = 120_u32
  IDC_CI_CURRENT = 121_u32
  IDC_CI_CURRENTICON = 122_u32
  IDC_CI_DEFAULT = 123_u32
  IDC_CI_DEFAULTICON = 124_u32
  IDC_CI_FROMFILE = 125_u32
  IDC_CI_FROMFILEEDIT = 126_u32
  IDC_CI_ICONLIST = 127_u32
  IDC_CI_LABEL = 128_u32
  IDC_CI_LABELEDIT = 129_u32
  IDC_CI_BROWSE = 130_u32
  IDC_CI_ICONDISPLAY = 131_u32
  IDC_CV_OBJECTTYPE = 150_u32
  IDC_CV_DISPLAYASICON = 152_u32
  IDC_CV_CHANGEICON = 153_u32
  IDC_CV_ACTIVATELIST = 154_u32
  IDC_CV_CONVERTTO = 155_u32
  IDC_CV_ACTIVATEAS = 156_u32
  IDC_CV_RESULTTEXT = 157_u32
  IDC_CV_CONVERTLIST = 158_u32
  IDC_CV_ICONDISPLAY = 165_u32
  IDC_EL_CHANGESOURCE = 201_u32
  IDC_EL_AUTOMATIC = 202_u32
  IDC_EL_CANCELLINK = 209_u32
  IDC_EL_UPDATENOW = 210_u32
  IDC_EL_OPENSOURCE = 211_u32
  IDC_EL_MANUAL = 212_u32
  IDC_EL_LINKSOURCE = 216_u32
  IDC_EL_LINKTYPE = 217_u32
  IDC_EL_LINKSLISTBOX = 206_u32
  IDC_EL_COL1 = 220_u32
  IDC_EL_COL2 = 221_u32
  IDC_EL_COL3 = 222_u32
  IDC_BZ_RETRY = 600_u32
  IDC_BZ_ICON = 601_u32
  IDC_BZ_MESSAGE1 = 602_u32
  IDC_BZ_SWITCHTO = 604_u32
  IDC_UL_METER = 1029_u32
  IDC_UL_STOP = 1030_u32
  IDC_UL_PERCENT = 1031_u32
  IDC_UL_PROGRESS = 1032_u32
  IDC_PU_LINKS = 900_u32
  IDC_PU_TEXT = 901_u32
  IDC_PU_CONVERT = 902_u32
  IDC_PU_ICON = 908_u32
  IDC_GP_OBJECTNAME = 1009_u32
  IDC_GP_OBJECTTYPE = 1010_u32
  IDC_GP_OBJECTSIZE = 1011_u32
  IDC_GP_CONVERT = 1013_u32
  IDC_GP_OBJECTICON = 1014_u32
  IDC_GP_OBJECTLOCATION = 1022_u32
  IDC_VP_PERCENT = 1000_u32
  IDC_VP_CHANGEICON = 1001_u32
  IDC_VP_EDITABLE = 1002_u32
  IDC_VP_ASICON = 1003_u32
  IDC_VP_RELATIVE = 1005_u32
  IDC_VP_SPIN = 1006_u32
  IDC_VP_SCALETXT = 1034_u32
  IDC_VP_ICONDISPLAY = 1021_u32
  IDC_VP_RESULTIMAGE = 1033_u32
  IDC_LP_OPENSOURCE = 1006_u32
  IDC_LP_UPDATENOW = 1007_u32
  IDC_LP_BREAKLINK = 1008_u32
  IDC_LP_LINKSOURCE = 1012_u32
  IDC_LP_CHANGESOURCE = 1015_u32
  IDC_LP_AUTOMATIC = 1016_u32
  IDC_LP_MANUAL = 1017_u32
  IDC_LP_DATE = 1018_u32
  IDC_LP_TIME = 1019_u32
  IDD_INSERTOBJECT = 1000_u32
  IDD_CHANGEICON = 1001_u32
  IDD_CONVERT = 1002_u32
  IDD_PASTESPECIAL = 1003_u32
  IDD_EDITLINKS = 1004_u32
  IDD_BUSY = 1006_u32
  IDD_UPDATELINKS = 1007_u32
  IDD_CHANGESOURCE = 1009_u32
  IDD_INSERTFILEBROWSE = 1010_u32
  IDD_CHANGEICONBROWSE = 1011_u32
  IDD_CONVERTONLY = 1012_u32
  IDD_CHANGESOURCE4 = 1013_u32
  IDD_GNRLPROPS = 1100_u32
  IDD_VIEWPROPS = 1101_u32
  IDD_LINKPROPS = 1102_u32
  IDD_CONVERT4 = 1103_u32
  IDD_CONVERTONLY4 = 1104_u32
  IDD_EDITLINKS4 = 1105_u32
  IDD_GNRLPROPS4 = 1106_u32
  IDD_LINKPROPS4 = 1107_u32
  IDD_PASTESPECIAL4 = 1108_u32
  IDD_CANNOTUPDATELINK = 1008_u32
  IDD_LINKSOURCEUNAVAILABLE = 1020_u32
  IDD_SERVERNOTFOUND = 1023_u32
  IDD_OUTOFMEMORY = 1024_u32
  IDD_SERVERNOTREGW = 1021_u32
  IDD_LINKTYPECHANGEDW = 1022_u32
  IDD_SERVERNOTREGA = 1025_u32
  IDD_LINKTYPECHANGEDA = 1026_u32
  IDD_SERVERNOTREG = 1021_u32
  IDD_LINKTYPECHANGED = 1022_u32
  ID_BROWSE_CHANGEICON = 1_u32
  ID_BROWSE_INSERTFILE = 2_u32
  ID_BROWSE_ADDCONTROL = 3_u32
  ID_BROWSE_CHANGESOURCE = 4_u32
  OLEUI_FALSE = 0_u32
  OLEUI_SUCCESS = 1_u32
  OLEUI_OK = 1_u32
  OLEUI_CANCEL = 2_u32
  OLEUI_ERR_STANDARDMIN = 100_u32
  OLEUI_ERR_OLEMEMALLOC = 100_u32
  OLEUI_ERR_STRUCTURENULL = 101_u32
  OLEUI_ERR_STRUCTUREINVALID = 102_u32
  OLEUI_ERR_CBSTRUCTINCORRECT = 103_u32
  OLEUI_ERR_HWNDOWNERINVALID = 104_u32
  OLEUI_ERR_LPSZCAPTIONINVALID = 105_u32
  OLEUI_ERR_LPFNHOOKINVALID = 106_u32
  OLEUI_ERR_HINSTANCEINVALID = 107_u32
  OLEUI_ERR_LPSZTEMPLATEINVALID = 108_u32
  OLEUI_ERR_HRESOURCEINVALID = 109_u32
  OLEUI_ERR_FINDTEMPLATEFAILURE = 110_u32
  OLEUI_ERR_LOADTEMPLATEFAILURE = 111_u32
  OLEUI_ERR_DIALOGFAILURE = 112_u32
  OLEUI_ERR_LOCALMEMALLOC = 113_u32
  OLEUI_ERR_GLOBALMEMALLOC = 114_u32
  OLEUI_ERR_LOADSTRING = 115_u32
  OLEUI_ERR_STANDARDMAX = 116_u32
  IOF_SHOWHELP = 1_i32
  IOF_SELECTCREATENEW = 2_i32
  IOF_SELECTCREATEFROMFILE = 4_i32
  IOF_CHECKLINK = 8_i32
  IOF_CHECKDISPLAYASICON = 16_i32
  IOF_CREATENEWOBJECT = 32_i32
  IOF_CREATEFILEOBJECT = 64_i32
  IOF_CREATELINKOBJECT = 128_i32
  IOF_DISABLELINK = 256_i32
  IOF_VERIFYSERVERSEXIST = 512_i32
  IOF_DISABLEDISPLAYASICON = 1024_i32
  IOF_HIDECHANGEICON = 2048_i32
  IOF_SHOWINSERTCONTROL = 4096_i32
  IOF_SELECTCREATECONTROL = 8192_i32
  OLEUI_IOERR_LPSZFILEINVALID = 116_u32
  OLEUI_IOERR_LPSZLABELINVALID = 117_u32
  OLEUI_IOERR_HICONINVALID = 118_u32
  OLEUI_IOERR_LPFORMATETCINVALID = 119_u32
  OLEUI_IOERR_PPVOBJINVALID = 120_u32
  OLEUI_IOERR_LPIOLECLIENTSITEINVALID = 121_u32
  OLEUI_IOERR_LPISTORAGEINVALID = 122_u32
  OLEUI_IOERR_SCODEHASERROR = 123_u32
  OLEUI_IOERR_LPCLSIDEXCLUDEINVALID = 124_u32
  OLEUI_IOERR_CCHFILEINVALID = 125_u32
  PS_MAXLINKTYPES = 8_u32
  PSF_SHOWHELP = 1_i32
  PSF_SELECTPASTE = 2_i32
  PSF_SELECTPASTELINK = 4_i32
  PSF_CHECKDISPLAYASICON = 8_i32
  PSF_DISABLEDISPLAYASICON = 16_i32
  PSF_HIDECHANGEICON = 32_i32
  PSF_STAYONCLIPBOARDCHANGE = 64_i32
  PSF_NOREFRESHDATAOBJECT = 128_i32
  OLEUI_IOERR_SRCDATAOBJECTINVALID = 116_u32
  OLEUI_IOERR_ARRPASTEENTRIESINVALID = 117_u32
  OLEUI_IOERR_ARRLINKTYPESINVALID = 118_u32
  OLEUI_PSERR_CLIPBOARDCHANGED = 119_u32
  OLEUI_PSERR_GETCLIPBOARDFAILED = 120_u32
  OLEUI_ELERR_LINKCNTRNULL = 116_u32
  OLEUI_ELERR_LINKCNTRINVALID = 117_u32
  ELF_SHOWHELP = 1_i32
  ELF_DISABLEUPDATENOW = 2_i32
  ELF_DISABLEOPENSOURCE = 4_i32
  ELF_DISABLECHANGESOURCE = 8_i32
  ELF_DISABLECANCELLINK = 16_i32
  CIF_SHOWHELP = 1_i32
  CIF_SELECTCURRENT = 2_i32
  CIF_SELECTDEFAULT = 4_i32
  CIF_SELECTFROMFILE = 8_i32
  CIF_USEICONEXE = 16_i32
  OLEUI_CIERR_MUSTHAVECLSID = 116_u32
  OLEUI_CIERR_MUSTHAVECURRENTMETAFILE = 117_u32
  OLEUI_CIERR_SZICONEXEINVALID = 118_u32
  CF_SHOWHELPBUTTON = 1_i32
  CF_SETCONVERTDEFAULT = 2_i32
  CF_SETACTIVATEDEFAULT = 4_i32
  CF_SELECTCONVERTTO = 8_i32
  CF_SELECTACTIVATEAS = 16_i32
  CF_DISABLEDISPLAYASICON = 32_i32
  CF_DISABLEACTIVATEAS = 64_i32
  CF_HIDECHANGEICON = 128_i32
  CF_CONVERTONLY = 256_i32
  OLEUI_CTERR_CLASSIDINVALID = 117_u32
  OLEUI_CTERR_DVASPECTINVALID = 118_u32
  OLEUI_CTERR_CBFORMATINVALID = 119_u32
  OLEUI_CTERR_HMETAPICTINVALID = 120_u32
  OLEUI_CTERR_STRINGINVALID = 121_u32
  BZ_DISABLECANCELBUTTON = 1_i32
  BZ_DISABLESWITCHTOBUTTON = 2_i32
  BZ_DISABLERETRYBUTTON = 4_i32
  BZ_NOTRESPONDINGDIALOG = 8_i32
  OLEUI_BZERR_HTASKINVALID = 116_u32
  OLEUI_BZ_SWITCHTOSELECTED = 117_u32
  OLEUI_BZ_RETRYSELECTED = 118_u32
  OLEUI_BZ_CALLUNBLOCKED = 119_u32
  CSF_SHOWHELP = 1_i32
  CSF_VALIDSOURCE = 2_i32
  CSF_ONLYGETSOURCE = 4_i32
  CSF_EXPLORER = 8_i32
  OLEUI_CSERR_LINKCNTRNULL = 116_u32
  OLEUI_CSERR_LINKCNTRINVALID = 117_u32
  OLEUI_CSERR_FROMNOTNULL = 118_u32
  OLEUI_CSERR_TONOTNULL = 119_u32
  OLEUI_CSERR_SOURCENULL = 120_u32
  OLEUI_CSERR_SOURCEINVALID = 121_u32
  OLEUI_CSERR_SOURCEPARSERROR = 122_u32
  OLEUI_CSERR_SOURCEPARSEERROR = 122_u32
  VPF_SELECTRELATIVE = 1_i32
  VPF_DISABLERELATIVE = 2_i32
  VPF_DISABLESCALE = 4_i32
  OPF_OBJECTISLINK = 1_i32
  OPF_NOFILLDEFAULT = 2_i32
  OPF_SHOWHELP = 4_i32
  OPF_DISABLECONVERT = 8_i32
  OLEUI_OPERR_SUBPROPNULL = 116_u32
  OLEUI_OPERR_SUBPROPINVALID = 117_u32
  OLEUI_OPERR_PROPSHEETNULL = 118_u32
  OLEUI_OPERR_PROPSHEETINVALID = 119_u32
  OLEUI_OPERR_SUPPROP = 120_u32
  OLEUI_OPERR_PROPSINVALID = 121_u32
  OLEUI_OPERR_PAGESINCORRECT = 122_u32
  OLEUI_OPERR_INVALIDPAGES = 123_u32
  OLEUI_OPERR_NOTSUPPORTED = 124_u32
  OLEUI_OPERR_DLGPROCNOTNULL = 125_u32
  OLEUI_OPERR_LPARAMNOTZERO = 126_u32
  OLEUI_GPERR_STRINGINVALID = 127_u32
  OLEUI_GPERR_CLASSIDINVALID = 128_u32
  OLEUI_GPERR_LPCLSIDEXCLUDEINVALID = 129_u32
  OLEUI_GPERR_CBFORMATINVALID = 130_u32
  OLEUI_VPERR_METAPICTINVALID = 131_u32
  OLEUI_VPERR_DVASPECTINVALID = 132_u32
  OLEUI_LPERR_LINKCNTRNULL = 133_u32
  OLEUI_LPERR_LINKCNTRINVALID = 134_u32
  OLEUI_OPERR_PROPERTYSHEET = 135_u32
  OLEUI_OPERR_OBJINFOINVALID = 136_u32
  OLEUI_OPERR_LINKINFOINVALID = 137_u32
  OLEUI_QUERY_GETCLASSID = 65280_u32
  OLEUI_QUERY_LINKBROKEN = 65281_u32
  FADF_AUTO = 1_u32
  FADF_STATIC = 2_u32
  FADF_EMBEDDED = 4_u32
  FADF_FIXEDSIZE = 16_u32
  FADF_RECORD = 32_u32
  FADF_HAVEIID = 64_u32
  FADF_HAVEVARTYPE = 128_u32
  FADF_BSTR = 256_u32
  FADF_UNKNOWN = 512_u32
  FADF_DISPATCH = 1024_u32
  FADF_VARIANT = 2048_u32
  FADF_RESERVED = 61448_u32
  PARAMFLAG_NONE = 0_u32
  PARAMFLAG_FIN = 1_u32
  PARAMFLAG_FOUT = 2_u32
  PARAMFLAG_FLCID = 4_u32
  PARAMFLAG_FRETVAL = 8_u32
  PARAMFLAG_FOPT = 16_u32
  PARAMFLAG_FHASDEFAULT = 32_u32
  PARAMFLAG_FHASCUSTDATA = 64_u32
  IDLFLAG_NONE = 0_u32
  IDLFLAG_FIN = 1_u32
  IDLFLAG_FOUT = 2_u32
  IDLFLAG_FLCID = 4_u32
  IDLFLAG_FRETVAL = 8_u32
  IMPLTYPEFLAG_FDEFAULT = 1_u32
  IMPLTYPEFLAG_FSOURCE = 2_u32
  IMPLTYPEFLAG_FRESTRICTED = 4_u32
  IMPLTYPEFLAG_FDEFAULTVTABLE = 8_u32
  DISPID_UNKNOWN = -1_i32
  DISPID_VALUE = 0_u32
  DISPID_PROPERTYPUT = -3_i32
  DISPID_NEWENUM = -4_i32
  DISPID_EVALUATE = -5_i32
  DISPID_CONSTRUCTOR = -6_i32
  DISPID_DESTRUCTOR = -7_i32
  DISPID_COLLECT = -8_i32
  STDOLE_MAJORVERNUM = 1_u32
  STDOLE_MINORVERNUM = 0_u32
  STDOLE_LCID = 0_u32
  STDOLE2_MAJORVERNUM = 2_u32
  STDOLE2_MINORVERNUM = 0_u32
  STDOLE2_LCID = 0_u32
  VARIANT_NOVALUEPROP = 1_u32
  VARIANT_ALPHABOOL = 2_u32
  VARIANT_NOUSEROVERRIDE = 4_u32
  VARIANT_CALENDAR_HIJRI = 8_u32
  VARIANT_LOCALBOOL = 16_u32
  VARIANT_CALENDAR_THAI = 32_u32
  VARIANT_CALENDAR_GREGORIAN = 64_u32
  VARIANT_USE_NLS = 128_u32
  LOCALE_USE_NLS = 268435456_u32
  VTDATEGRE_MAX = 2958465_u32
  VTDATEGRE_MIN = -657434_i32
  NUMPRS_LEADING_WHITE = 1_u32
  NUMPRS_TRAILING_WHITE = 2_u32
  NUMPRS_LEADING_PLUS = 4_u32
  NUMPRS_TRAILING_PLUS = 8_u32
  NUMPRS_LEADING_MINUS = 16_u32
  NUMPRS_TRAILING_MINUS = 32_u32
  NUMPRS_HEX_OCT = 64_u32
  NUMPRS_PARENS = 128_u32
  NUMPRS_DECIMAL = 256_u32
  NUMPRS_THOUSANDS = 512_u32
  NUMPRS_CURRENCY = 1024_u32
  NUMPRS_EXPONENT = 2048_u32
  NUMPRS_USE_ALL = 4096_u32
  NUMPRS_STD = 8191_u32
  NUMPRS_NEG = 65536_u32
  NUMPRS_INEXACT = 131072_u32
  VARCMP_LT = 0_u32
  VARCMP_EQ = 1_u32
  VARCMP_GT = 2_u32
  VARCMP_NULL = 3_u32
  MEMBERID_NIL = -1_i32
  ID_DEFAULTINST = -2_i32
  DISPATCH_METHOD = 1_u32
  DISPATCH_PROPERTYGET = 2_u32
  DISPATCH_PROPERTYPUT = 4_u32
  DISPATCH_PROPERTYPUTREF = 8_u32
  LOAD_TLB_AS_32BIT = 32_u32
  LOAD_TLB_AS_64BIT = 64_u32
  ACTIVEOBJECT_STRONG = 0_u32
  ACTIVEOBJECT_WEAK = 1_u32
  DISPATCH_CONSTRUCT = 16384_u32
  DISPID_STARTENUM = -1_i32
  SID_VariantConversion = "1f101481-bccd-11d0-9336-00a0c90dcaa9"
  SID_GetCaller = "4717cc40-bcb9-11d0-9336-00a0c90dcaa9"
  SID_ProvideRuntimeContext = "74a5040c-dd0c-48f0-ac85-194c3259180a"

  alias LPFNOLEUIHOOK = Proc(LibC::HANDLE, UInt32, LibC::UINT_PTR, LPARAM, UInt32)


  enum UPDFCACHE_FLAGS : UInt32
    UPDFCACHE_ALL = 2147483647
    UPDFCACHE_ALLBUTNODATACACHE = 2147483646
    UPDFCACHE_NORMALCACHE = 8
    UPDFCACHE_IFBLANK = 16
    UPDFCACHE_ONLYIFBLANK = 2147483648
    UPDFCACHE_NODATACACHE = 1
    UPDFCACHE_ONSAVECACHE = 2
    UPDFCACHE_ONSTOPCACHE = 4
    UPDFCACHE_IFBLANKORONSAVECACHE = 18
  end

  enum ENUM_CONTROLS_WHICH_FLAGS : UInt32
    GCW_WCH_SIBLING = 1
    GC_WCH_CONTAINER = 2
    GC_WCH_CONTAINED = 3
    GC_WCH_ALL = 4
    GC_WCH_FREVERSEDIR = 134217728
    GC_WCH_FONLYAFTER = 268435456
    GC_WCH_FONLYBEFORE = 536870912
    GC_WCH_FSELECTED = 1073741824
  end

  enum MULTICLASSINFO_FLAGS : UInt32
    MULTICLASSINFO_GETTYPEINFO = 1
    MULTICLASSINFO_GETNUMRESERVEDDISPIDS = 2
    MULTICLASSINFO_GETIIDPRIMARY = 4
    MULTICLASSINFO_GETIIDSOURCE = 8
  end

  enum VARENUM : Int32
    VT_EMPTY = 0
    VT_NULL = 1
    VT_I2 = 2
    VT_I4 = 3
    VT_R4 = 4
    VT_R8 = 5
    VT_CY = 6
    VT_DATE = 7
    VT_BSTR = 8
    VT_DISPATCH = 9
    VT_ERROR = 10
    VT_BOOL = 11
    VT_VARIANT = 12
    VT_UNKNOWN = 13
    VT_DECIMAL = 14
    VT_I1 = 16
    VT_UI1 = 17
    VT_UI2 = 18
    VT_UI4 = 19
    VT_I8 = 20
    VT_UI8 = 21
    VT_INT = 22
    VT_UINT = 23
    VT_VOID = 24
    VT_HRESULT = 25
    VT_PTR = 26
    VT_SAFEARRAY = 27
    VT_CARRAY = 28
    VT_USERDEFINED = 29
    VT_LPSTR = 30
    VT_LPWSTR = 31
    VT_RECORD = 36
    VT_INT_PTR = 37
    VT_UINT_PTR = 38
    VT_FILETIME = 64
    VT_BLOB = 65
    VT_STREAM = 66
    VT_STORAGE = 67
    VT_STREAMED_OBJECT = 68
    VT_STORED_OBJECT = 69
    VT_BLOB_OBJECT = 70
    VT_CF = 71
    VT_CLSID = 72
    VT_VERSIONED_STREAM = 73
    VT_BSTR_BLOB = 4095
    VT_VECTOR = 4096
    VT_ARRAY = 8192
    VT_BYREF = 16384
    VT_RESERVED = 32768
    VT_ILLEGAL = 65535
    VT_ILLEGALMASKED = 4095
    VT_TYPEMASK = 4095
  end

  enum SF_TYPE : Int32
    SF_ERROR = 10
    SF_I1 = 16
    SF_I2 = 2
    SF_I4 = 3
    SF_I8 = 20
    SF_BSTR = 8
    SF_UNKNOWN = 13
    SF_DISPATCH = 9
    SF_VARIANT = 12
    SF_RECORD = 36
    SF_HAVEIID = 32781
  end

  enum TYPEFLAGS : Int32
    TYPEFLAG_FAPPOBJECT = 1
    TYPEFLAG_FCANCREATE = 2
    TYPEFLAG_FLICENSED = 4
    TYPEFLAG_FPREDECLID = 8
    TYPEFLAG_FHIDDEN = 16
    TYPEFLAG_FCONTROL = 32
    TYPEFLAG_FDUAL = 64
    TYPEFLAG_FNONEXTENSIBLE = 128
    TYPEFLAG_FOLEAUTOMATION = 256
    TYPEFLAG_FRESTRICTED = 512
    TYPEFLAG_FAGGREGATABLE = 1024
    TYPEFLAG_FREPLACEABLE = 2048
    TYPEFLAG_FDISPATCHABLE = 4096
    TYPEFLAG_FREVERSEBIND = 8192
    TYPEFLAG_FPROXY = 16384
  end

  enum FUNCFLAGS : Int32
    FUNCFLAG_FRESTRICTED = 1
    FUNCFLAG_FSOURCE = 2
    FUNCFLAG_FBINDABLE = 4
    FUNCFLAG_FREQUESTEDIT = 8
    FUNCFLAG_FDISPLAYBIND = 16
    FUNCFLAG_FDEFAULTBIND = 32
    FUNCFLAG_FHIDDEN = 64
    FUNCFLAG_FUSESGETLASTERROR = 128
    FUNCFLAG_FDEFAULTCOLLELEM = 256
    FUNCFLAG_FUIDEFAULT = 512
    FUNCFLAG_FNONBROWSABLE = 1024
    FUNCFLAG_FREPLACEABLE = 2048
    FUNCFLAG_FIMMEDIATEBIND = 4096
  end

  enum VARFLAGS : Int32
    VARFLAG_FREADONLY = 1
    VARFLAG_FSOURCE = 2
    VARFLAG_FBINDABLE = 4
    VARFLAG_FREQUESTEDIT = 8
    VARFLAG_FDISPLAYBIND = 16
    VARFLAG_FDEFAULTBIND = 32
    VARFLAG_FHIDDEN = 64
    VARFLAG_FRESTRICTED = 128
    VARFLAG_FDEFAULTCOLLELEM = 256
    VARFLAG_FUIDEFAULT = 512
    VARFLAG_FNONBROWSABLE = 1024
    VARFLAG_FREPLACEABLE = 2048
    VARFLAG_FIMMEDIATEBIND = 4096
  end

  enum LIBFLAGS : Int32
    LIBFLAG_FRESTRICTED = 1
    LIBFLAG_FCONTROL = 2
    LIBFLAG_FHIDDEN = 4
    LIBFLAG_FHASDISKIMAGE = 8
  end

  enum CHANGEKIND : Int32
    CHANGEKIND_ADDMEMBER = 0
    CHANGEKIND_DELETEMEMBER = 1
    CHANGEKIND_SETNAMES = 2
    CHANGEKIND_SETDOCUMENTATION = 3
    CHANGEKIND_GENERAL = 4
    CHANGEKIND_INVALIDATE = 5
    CHANGEKIND_CHANGEFAILED = 6
    CHANGEKIND_MAX = 7
  end

  enum DISCARDCACHE : Int32
    DISCARDCACHE_SAVEIFDIRTY = 0
    DISCARDCACHE_NOSAVE = 1
  end

  enum OLEGETMONIKER : Int32
    OLEGETMONIKER_ONLYIFTHERE = 1
    OLEGETMONIKER_FORCEASSIGN = 2
    OLEGETMONIKER_UNASSIGN = 3
    OLEGETMONIKER_TEMPFORUSER = 4
  end

  enum OLEWHICHMK : Int32
    OLEWHICHMK_CONTAINER = 1
    OLEWHICHMK_OBJREL = 2
    OLEWHICHMK_OBJFULL = 3
  end

  enum USERCLASSTYPE : Int32
    USERCLASSTYPE_FULL = 1
    USERCLASSTYPE_SHORT = 2
    USERCLASSTYPE_APPNAME = 3
  end

  enum OLEMISC : Int32
    OLEMISC_RECOMPOSEONRESIZE = 1
    OLEMISC_ONLYICONIC = 2
    OLEMISC_INSERTNOTREPLACE = 4
    OLEMISC_STATIC = 8
    OLEMISC_CANTLINKINSIDE = 16
    OLEMISC_CANLINKBYOLE1 = 32
    OLEMISC_ISLINKOBJECT = 64
    OLEMISC_INSIDEOUT = 128
    OLEMISC_ACTIVATEWHENVISIBLE = 256
    OLEMISC_RENDERINGISDEVICEINDEPENDENT = 512
    OLEMISC_INVISIBLEATRUNTIME = 1024
    OLEMISC_ALWAYSRUN = 2048
    OLEMISC_ACTSLIKEBUTTON = 4096
    OLEMISC_ACTSLIKELABEL = 8192
    OLEMISC_NOUIACTIVATE = 16384
    OLEMISC_ALIGNABLE = 32768
    OLEMISC_SIMPLEFRAME = 65536
    OLEMISC_SETCLIENTSITEFIRST = 131072
    OLEMISC_IMEMODE = 262144
    OLEMISC_IGNOREACTIVATEWHENVISIBLE = 524288
    OLEMISC_WANTSTOMENUMERGE = 1048576
    OLEMISC_SUPPORTSMULTILEVELUNDO = 2097152
  end

  enum OLECLOSE : Int32
    OLECLOSE_SAVEIFDIRTY = 0
    OLECLOSE_NOSAVE = 1
    OLECLOSE_PROMPTSAVE = 2
  end

  enum OLERENDER : Int32
    OLERENDER_NONE = 0
    OLERENDER_DRAW = 1
    OLERENDER_FORMAT = 2
    OLERENDER_ASIS = 3
  end

  enum OLEUPDATE : Int32
    OLEUPDATE_ALWAYS = 1
    OLEUPDATE_ONCALL = 3
  end

  enum OLELINKBIND : Int32
    OLELINKBIND_EVENIFCLASSDIFF = 1
  end

  enum BINDSPEED : Int32
    BINDSPEED_INDEFINITE = 1
    BINDSPEED_MODERATE = 2
    BINDSPEED_IMMEDIATE = 3
  end

  enum OLECONTF : Int32
    OLECONTF_EMBEDDINGS = 1
    OLECONTF_LINKS = 2
    OLECONTF_OTHERS = 4
    OLECONTF_ONLYUSER = 8
    OLECONTF_ONLYIFRUNNING = 16
  end

  enum OLEVERBATTRIB : Int32
    OLEVERBATTRIB_NEVERDIRTIES = 1
    OLEVERBATTRIB_ONCONTAINERMENU = 2
  end

  enum REGKIND : Int32
    REGKIND_DEFAULT = 0
    REGKIND_REGISTER = 1
    REGKIND_NONE = 2
  end

  enum UASFLAGS : Int32
    UAS_NORMAL = 0
    UAS_BLOCKED = 1
    UAS_NOPARENTENABLE = 2
    UAS_MASK = 3
  end

  enum READYSTATE : Int32
    READYSTATE_UNINITIALIZED = 0
    READYSTATE_LOADING = 1
    READYSTATE_LOADED = 2
    READYSTATE_INTERACTIVE = 3
    READYSTATE_COMPLETE = 4
  end

  enum GUIDKIND : Int32
    GUIDKIND_DEFAULT_SOURCE_DISP_IID = 1
  end

  enum CTRLINFO : Int32
    CTRLINFO_EATS_RETURN = 1
    CTRLINFO_EATS_ESCAPE = 2
  end

  enum XFORMCOORDS : Int32
    XFORMCOORDS_POSITION = 1
    XFORMCOORDS_SIZE = 2
    XFORMCOORDS_HIMETRICTOCONTAINER = 4
    XFORMCOORDS_CONTAINERTOHIMETRIC = 8
    XFORMCOORDS_EVENTCOMPAT = 16
  end

  enum PROPPAGESTATUS : Int32
    PROPPAGESTATUS_DIRTY = 1
    PROPPAGESTATUS_VALIDATE = 2
    PROPPAGESTATUS_CLEAN = 4
  end

  enum PictureAttributes : Int32
    PICTURE_SCALABLE = 1
    PICTURE_TRANSPARENT = 2
  end

  enum ACTIVATEFLAGS : Int32
    ACTIVATE_WINDOWLESS = 1
  end

  enum OLEDCFLAGS : Int32
    OLEDC_NODRAW = 1
    OLEDC_PAINTBKGND = 2
    OLEDC_OFFSCREEN = 4
  end

  enum VIEWSTATUS : Int32
    VIEWSTATUS_OPAQUE = 1
    VIEWSTATUS_SOLIDBKGND = 2
    VIEWSTATUS_DVASPECTOPAQUE = 4
    VIEWSTATUS_DVASPECTTRANSPARENT = 8
    VIEWSTATUS_SURFACE = 16
    VIEWSTATUS_3DSURFACE = 32
  end

  enum HITRESULT : Int32
    HITRESULT_OUTSIDE = 0
    HITRESULT_TRANSPARENT = 1
    HITRESULT_CLOSE = 2
    HITRESULT_HIT = 3
  end

  enum DVASPECT2 : Int32
    DVASPECT_OPAQUE = 16
    DVASPECT_TRANSPARENT = 32
  end

  enum ExtentMode : Int32
    DVEXTENT_CONTENT = 0
    DVEXTENT_INTEGRAL = 1
  end

  enum AspectInfoFlag : Int32
    DVASPECTINFOFLAG_CANOPTIMIZE = 1
  end

  enum POINTERINACTIVE : Int32
    POINTERINACTIVE_ACTIVATEONENTRY = 1
    POINTERINACTIVE_DEACTIVATEONLEAVE = 2
    POINTERINACTIVE_ACTIVATEONDRAG = 4
  end

  enum PROPBAG2_TYPE : Int32
    PROPBAG2_TYPE_UNDEFINED = 0
    PROPBAG2_TYPE_DATA = 1
    PROPBAG2_TYPE_URL = 2
    PROPBAG2_TYPE_OBJECT = 3
    PROPBAG2_TYPE_STREAM = 4
    PROPBAG2_TYPE_STORAGE = 5
    PROPBAG2_TYPE_MONIKER = 6
  end

  enum QACONTAINERFLAGS : Int32
    QACONTAINER_SHOWHATCHING = 1
    QACONTAINER_SHOWGRABHANDLES = 2
    QACONTAINER_USERMODE = 4
    QACONTAINER_DISPLAYASDEFAULT = 8
    QACONTAINER_UIDEAD = 16
    QACONTAINER_AUTOCLIP = 32
    QACONTAINER_MESSAGEREFLECT = 64
    QACONTAINER_SUPPORTSMNEMONICS = 128
  end

  enum OLE_TRISTATE : Int32
    Triunchecked = 0
    Trichecked = 1
    Trigray = 2
  end

  enum DOCMISC : Int32
    DOCMISC_CANCREATEMULTIPLEVIEWS = 1
    DOCMISC_SUPPORTCOMPLEXRECTANGLES = 2
    DOCMISC_CANTOPENEDIT = 4
    DOCMISC_NOFILESUPPORT = 8
  end

  enum PRINTFLAG : UInt32
    PRINTFLAG_MAYBOTHERUSER = 1
    PRINTFLAG_PROMPTUSER = 2
    PRINTFLAG_USERMAYCHANGEPRINTER = 4
    PRINTFLAG_RECOMPOSETODEVICE = 8
    PRINTFLAG_DONTACTUALLYPRINT = 16
    PRINTFLAG_FORCEPROPERTIES = 32
    PRINTFLAG_PRINTTOFILE = 64
  end

  enum OLECMDF : Int32
    OLECMDF_SUPPORTED = 1
    OLECMDF_ENABLED = 2
    OLECMDF_LATCHED = 4
    OLECMDF_NINCHED = 8
    OLECMDF_INVISIBLE = 16
    OLECMDF_DEFHIDEONCTXTMENU = 32
  end

  enum OLECMDTEXTF : Int32
    OLECMDTEXTF_NONE = 0
    OLECMDTEXTF_NAME = 1
    OLECMDTEXTF_STATUS = 2
  end

  enum OLECMDEXECOPT : Int32
    OLECMDEXECOPT_DODEFAULT = 0
    OLECMDEXECOPT_PROMPTUSER = 1
    OLECMDEXECOPT_DONTPROMPTUSER = 2
    OLECMDEXECOPT_SHOWHELP = 3
  end

  enum OLECMDID : Int32
    OLECMDID_OPEN = 1
    OLECMDID_NEW = 2
    OLECMDID_SAVE = 3
    OLECMDID_SAVEAS = 4
    OLECMDID_SAVECOPYAS = 5
    OLECMDID_PRINT = 6
    OLECMDID_PRINTPREVIEW = 7
    OLECMDID_PAGESETUP = 8
    OLECMDID_SPELL = 9
    OLECMDID_PROPERTIES = 10
    OLECMDID_CUT = 11
    OLECMDID_COPY = 12
    OLECMDID_PASTE = 13
    OLECMDID_PASTESPECIAL = 14
    OLECMDID_UNDO = 15
    OLECMDID_REDO = 16
    OLECMDID_SELECTALL = 17
    OLECMDID_CLEARSELECTION = 18
    OLECMDID_ZOOM = 19
    OLECMDID_GETZOOMRANGE = 20
    OLECMDID_UPDATECOMMANDS = 21
    OLECMDID_REFRESH = 22
    OLECMDID_STOP = 23
    OLECMDID_HIDETOOLBARS = 24
    OLECMDID_SETPROGRESSMAX = 25
    OLECMDID_SETPROGRESSPOS = 26
    OLECMDID_SETPROGRESSTEXT = 27
    OLECMDID_SETTITLE = 28
    OLECMDID_SETDOWNLOADSTATE = 29
    OLECMDID_STOPDOWNLOAD = 30
    OLECMDID_ONTOOLBARACTIVATED = 31
    OLECMDID_FIND = 32
    OLECMDID_DELETE = 33
    OLECMDID_HTTPEQUIV = 34
    OLECMDID_HTTPEQUIV_DONE = 35
    OLECMDID_ENABLE_INTERACTION = 36
    OLECMDID_ONUNLOAD = 37
    OLECMDID_PROPERTYBAG2 = 38
    OLECMDID_PREREFRESH = 39
    OLECMDID_SHOWSCRIPTERROR = 40
    OLECMDID_SHOWMESSAGE = 41
    OLECMDID_SHOWFIND = 42
    OLECMDID_SHOWPAGESETUP = 43
    OLECMDID_SHOWPRINT = 44
    OLECMDID_CLOSE = 45
    OLECMDID_ALLOWUILESSSAVEAS = 46
    OLECMDID_DONTDOWNLOADCSS = 47
    OLECMDID_UPDATEPAGESTATUS = 48
    OLECMDID_PRINT2 = 49
    OLECMDID_PRINTPREVIEW2 = 50
    OLECMDID_SETPRINTTEMPLATE = 51
    OLECMDID_GETPRINTTEMPLATE = 52
    OLECMDID_PAGEACTIONBLOCKED = 55
    OLECMDID_PAGEACTIONUIQUERY = 56
    OLECMDID_FOCUSVIEWCONTROLS = 57
    OLECMDID_FOCUSVIEWCONTROLSQUERY = 58
    OLECMDID_SHOWPAGEACTIONMENU = 59
    OLECMDID_ADDTRAVELENTRY = 60
    OLECMDID_UPDATETRAVELENTRY = 61
    OLECMDID_UPDATEBACKFORWARDSTATE = 62
    OLECMDID_OPTICAL_ZOOM = 63
    OLECMDID_OPTICAL_GETZOOMRANGE = 64
    OLECMDID_WINDOWSTATECHANGED = 65
    OLECMDID_ACTIVEXINSTALLSCOPE = 66
    OLECMDID_UPDATETRAVELENTRY_DATARECOVERY = 67
    OLECMDID_SHOWTASKDLG = 68
    OLECMDID_POPSTATEEVENT = 69
    OLECMDID_VIEWPORT_MODE = 70
    OLECMDID_LAYOUT_VIEWPORT_WIDTH = 71
    OLECMDID_VISUAL_VIEWPORT_EXCLUDE_BOTTOM = 72
    OLECMDID_USER_OPTICAL_ZOOM = 73
    OLECMDID_PAGEAVAILABLE = 74
    OLECMDID_GETUSERSCALABLE = 75
    OLECMDID_UPDATE_CARET = 76
    OLECMDID_ENABLE_VISIBILITY = 77
    OLECMDID_MEDIA_PLAYBACK = 78
    OLECMDID_SETFAVICON = 79
    OLECMDID_SET_HOST_FULLSCREENMODE = 80
    OLECMDID_EXITFULLSCREEN = 81
    OLECMDID_SCROLLCOMPLETE = 82
    OLECMDID_ONBEFOREUNLOAD = 83
    OLECMDID_SHOWMESSAGE_BLOCKABLE = 84
    OLECMDID_SHOWTASKDLG_BLOCKABLE = 85
  end

  enum MEDIAPLAYBACK_STATE : Int32
    MEDIAPLAYBACK_RESUME = 0
    MEDIAPLAYBACK_PAUSE = 1
    MEDIAPLAYBACK_PAUSE_AND_SUSPEND = 2
    MEDIAPLAYBACK_RESUME_FROM_SUSPEND = 3
  end

  enum IGNOREMIME : Int32
    IGNOREMIME_PROMPT = 1
    IGNOREMIME_TEXT = 2
  end

  enum WPCSETTING : Int32
    WPCSETTING_LOGGING_ENABLED = 1
    WPCSETTING_FILEDOWNLOAD_BLOCKED = 2
  end

  enum OLECMDID_REFRESHFLAG : Int32
    OLECMDIDF_REFRESH_NORMAL = 0
    OLECMDIDF_REFRESH_IFEXPIRED = 1
    OLECMDIDF_REFRESH_CONTINUE = 2
    OLECMDIDF_REFRESH_COMPLETELY = 3
    OLECMDIDF_REFRESH_NO_CACHE = 4
    OLECMDIDF_REFRESH_RELOAD = 5
    OLECMDIDF_REFRESH_LEVELMASK = 255
    OLECMDIDF_REFRESH_CLEARUSERINPUT = 4096
    OLECMDIDF_REFRESH_PROMPTIFOFFLINE = 8192
    OLECMDIDF_REFRESH_THROUGHSCRIPT = 16384
    OLECMDIDF_REFRESH_SKIPBEFOREUNLOADEVENT = 32768
    OLECMDIDF_REFRESH_PAGEACTION_ACTIVEXINSTALL = 65536
    OLECMDIDF_REFRESH_PAGEACTION_FILEDOWNLOAD = 131072
    OLECMDIDF_REFRESH_PAGEACTION_LOCALMACHINE = 262144
    OLECMDIDF_REFRESH_PAGEACTION_POPUPWINDOW = 524288
    OLECMDIDF_REFRESH_PAGEACTION_PROTLOCKDOWNLOCALMACHINE = 1048576
    OLECMDIDF_REFRESH_PAGEACTION_PROTLOCKDOWNTRUSTED = 2097152
    OLECMDIDF_REFRESH_PAGEACTION_PROTLOCKDOWNINTRANET = 4194304
    OLECMDIDF_REFRESH_PAGEACTION_PROTLOCKDOWNINTERNET = 8388608
    OLECMDIDF_REFRESH_PAGEACTION_PROTLOCKDOWNRESTRICTED = 16777216
    OLECMDIDF_REFRESH_PAGEACTION_MIXEDCONTENT = 33554432
    OLECMDIDF_REFRESH_PAGEACTION_INVALID_CERT = 67108864
    OLECMDIDF_REFRESH_PAGEACTION_ALLOW_VERSION = 134217728
  end

  enum OLECMDID_PAGEACTIONFLAG : Int32
    OLECMDIDF_PAGEACTION_FILEDOWNLOAD = 1
    OLECMDIDF_PAGEACTION_ACTIVEXINSTALL = 2
    OLECMDIDF_PAGEACTION_ACTIVEXTRUSTFAIL = 4
    OLECMDIDF_PAGEACTION_ACTIVEXUSERDISABLE = 8
    OLECMDIDF_PAGEACTION_ACTIVEXDISALLOW = 16
    OLECMDIDF_PAGEACTION_ACTIVEXUNSAFE = 32
    OLECMDIDF_PAGEACTION_POPUPWINDOW = 64
    OLECMDIDF_PAGEACTION_LOCALMACHINE = 128
    OLECMDIDF_PAGEACTION_MIMETEXTPLAIN = 256
    OLECMDIDF_PAGEACTION_SCRIPTNAVIGATE = 512
    OLECMDIDF_PAGEACTION_SCRIPTNAVIGATE_ACTIVEXINSTALL = 512
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNLOCALMACHINE = 1024
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNTRUSTED = 2048
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNINTRANET = 4096
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNINTERNET = 8192
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNRESTRICTED = 16384
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNDENY = 32768
    OLECMDIDF_PAGEACTION_POPUPALLOWED = 65536
    OLECMDIDF_PAGEACTION_SCRIPTPROMPT = 131072
    OLECMDIDF_PAGEACTION_ACTIVEXUSERAPPROVAL = 262144
    OLECMDIDF_PAGEACTION_MIXEDCONTENT = 524288
    OLECMDIDF_PAGEACTION_INVALID_CERT = 1048576
    OLECMDIDF_PAGEACTION_INTRANETZONEREQUEST = 2097152
    OLECMDIDF_PAGEACTION_XSSFILTERED = 4194304
    OLECMDIDF_PAGEACTION_SPOOFABLEIDNHOST = 8388608
    OLECMDIDF_PAGEACTION_ACTIVEX_EPM_INCOMPATIBLE = 16777216
    OLECMDIDF_PAGEACTION_SCRIPTNAVIGATE_ACTIVEXUSERAPPROVAL = 33554432
    OLECMDIDF_PAGEACTION_WPCBLOCKED = 67108864
    OLECMDIDF_PAGEACTION_WPCBLOCKED_ACTIVEX = 134217728
    OLECMDIDF_PAGEACTION_EXTENSION_COMPAT_BLOCKED = 268435456
    OLECMDIDF_PAGEACTION_NORESETACTIVEX = 536870912
    OLECMDIDF_PAGEACTION_GENERIC_STATE = 1073741824
    OLECMDIDF_PAGEACTION_RESET = -2147483648
  end

  enum OLECMDID_BROWSERSTATEFLAG : Int32
    OLECMDIDF_BROWSERSTATE_EXTENSIONSOFF = 1
    OLECMDIDF_BROWSERSTATE_IESECURITY = 2
    OLECMDIDF_BROWSERSTATE_PROTECTEDMODE_OFF = 4
    OLECMDIDF_BROWSERSTATE_RESET = 8
    OLECMDIDF_BROWSERSTATE_REQUIRESACTIVEX = 16
    OLECMDIDF_BROWSERSTATE_DESKTOPHTMLDIALOG = 32
    OLECMDIDF_BROWSERSTATE_BLOCKEDVERSION = 64
  end

  enum OLECMDID_OPTICAL_ZOOMFLAG : Int32
    OLECMDIDF_OPTICAL_ZOOM_NOPERSIST = 1
    OLECMDIDF_OPTICAL_ZOOM_NOLAYOUT = 16
    OLECMDIDF_OPTICAL_ZOOM_NOTRANSIENT = 32
    OLECMDIDF_OPTICAL_ZOOM_RELOADFORNEWTAB = 64
  end

  enum PAGEACTION_UI : Int32
    PAGEACTION_UI_DEFAULT = 0
    PAGEACTION_UI_MODAL = 1
    PAGEACTION_UI_MODELESS = 2
    PAGEACTION_UI_SILENT = 3
  end

  enum OLECMDID_WINDOWSTATE_FLAG : Int32
    OLECMDIDF_WINDOWSTATE_USERVISIBLE = 1
    OLECMDIDF_WINDOWSTATE_ENABLED = 2
    OLECMDIDF_WINDOWSTATE_USERVISIBLE_VALID = 65536
    OLECMDIDF_WINDOWSTATE_ENABLED_VALID = 131072
  end

  enum OLECMDID_VIEWPORT_MODE_FLAG : Int32
    OLECMDIDF_VIEWPORTMODE_FIXED_LAYOUT_WIDTH = 1
    OLECMDIDF_VIEWPORTMODE_EXCLUDE_VISUAL_BOTTOM = 2
    OLECMDIDF_VIEWPORTMODE_FIXED_LAYOUT_WIDTH_VALID = 65536
    OLECMDIDF_VIEWPORTMODE_EXCLUDE_VISUAL_BOTTOM_VALID = 131072
  end

  enum OLEUIPASTEFLAG : Int32
    OLEUIPASTE_ENABLEICON = 2048
    OLEUIPASTE_PASTEONLY = 0
    OLEUIPASTE_PASTE = 512
    OLEUIPASTE_LINKANYTYPE = 1024
    OLEUIPASTE_LINKTYPE1 = 1
    OLEUIPASTE_LINKTYPE2 = 2
    OLEUIPASTE_LINKTYPE3 = 4
    OLEUIPASTE_LINKTYPE4 = 8
    OLEUIPASTE_LINKTYPE5 = 16
    OLEUIPASTE_LINKTYPE6 = 32
    OLEUIPASTE_LINKTYPE7 = 64
    OLEUIPASTE_LINKTYPE8 = 128
  end

  union Wiresafearray_union_u_e__Struct
    bstr_str : Wiresafearr_bstr
    unknown_str : Wiresafearr_unknown
    dispatch_str : Wiresafearr_dispatch
    variant_str : Wiresafearr_variant
    record_str : Wiresafearr_brecord
    have_iid_str : Wiresafearr_haveiid
    byte_str : BYTE_SIZEDARR
    word_str : SHORT_SIZEDARR
    long_str : LONG_SIZEDARR
    hyper_str : HYPER_SIZEDARR
  end
  union Wirevariant_Anonymous_e__Union
    ll_val : Int64
    l_val : Int32
    b_val : UInt8
    i_val : Int16
    flt_val : Float32
    dbl_val : Float64
    bool_val : Int16
    scode : Int32
    cy_val : CY
    date : Float64
    bstr_val : FLAGGED_WORD_BLOB*
    punk_val : IUnknown
    pdisp_val : IDispatch
    parray : Wiresafearray**
    brec_val : Wirebrecord*
    pb_val : UInt8*
    pi_val : Int16*
    pl_val : Int32*
    pll_val : Int64*
    pflt_val : Float32*
    pdbl_val : Float64*
    pbool_val : Int16*
    pscode : Int32*
    pcy_val : CY*
    pdate : Float64*
    pbstr_val : FLAGGED_WORD_BLOB**
    ppunk_val : IUnknown*
    ppdisp_val : IDispatch*
    pparray : Wiresafearray***
    pvar_val : Wirevariant**
    c_val : CHAR
    ui_val : UInt16
    ul_val : UInt32
    ull_val : UInt64
    int_val : Int32
    uint_val : UInt32
    dec_val : DECIMAL
    pdec_val : DECIMAL*
    pc_val : PSTR
    pui_val : UInt16*
    pul_val : UInt32*
    pull_val : UInt64*
    pint_val : Int32*
    puint_val : UInt32*
  end
  union PICTDESC_Anonymous_e__Union
    bmp : PICTDESC_Anonymous_e__Union_bmp_e__Struct
    wmf : PICTDESC_Anonymous_e__Union_wmf_e__Struct
    icon : PICTDESC_Anonymous_e__Union_icon_e__Struct
    emf : PICTDESC_Anonymous_e__Union_emf_e__Struct
  end

  struct Wiresafearr_bstr
    size : UInt32
    a_bstr : FLAGGED_WORD_BLOB**
  end
  struct Wiresafearr_unknown
    size : UInt32
    ap_unknown : IUnknown*
  end
  struct Wiresafearr_dispatch
    size : UInt32
    ap_dispatch : IDispatch*
  end
  struct Wiresafearr_variant
    size : UInt32
    a_variant : Wirevariant**
  end
  struct Wiresafearr_brecord
    size : UInt32
    a_record : Wirebrecord**
  end
  struct Wiresafearr_haveiid
    size : UInt32
    ap_unknown : IUnknown*
    iid : Guid
  end
  struct Wiresafearray_union
    sf_type : UInt32
    u : Wiresafearray_union_u_e__Struct
  end
  struct Wiresafearray
    c_dims : UInt16
    f_features : UInt16
    cb_elements : UInt32
    c_locks : UInt32
    u_array_structs : Wiresafearray_union
    rgsabound : SAFEARRAYBOUND[0]*
  end
  struct Wirebrecord
    f_flags : UInt32
    cl_size : UInt32
    p_rec_info : IRecordInfo
    p_record : UInt8*
  end
  struct Wirevariant
    cl_size : UInt32
    rpc_reserved : UInt32
    vt : UInt16
    w_reserved1 : UInt16
    w_reserved2 : UInt16
    w_reserved3 : UInt16
    anonymous : Wirevariant_Anonymous_e__Union
  end
  struct ARRAYDESC
    tdesc_elem : TYPEDESC
    c_dims : UInt16
    rgbounds : SAFEARRAYBOUND[0]*
  end
  struct PARAMDESCEX
    c_bytes : UInt32
    var_default_value : VARIANT
  end
  struct PARAMDESC
    pparamdescex : PARAMDESCEX*
    w_param_flags : UInt16
  end
  struct CLEANLOCALSTORAGE
    p_interface : IUnknown
    p_storage : Void*
    flags : UInt32
  end
  struct OBJECTDESCRIPTOR
    cb_size : UInt32
    clsid : Guid
    dw_draw_aspect : UInt32
    sizel : SIZE
    pointl : POINTL
    dw_status : UInt32
    dw_full_user_type_name : UInt32
    dw_src_of_copy : UInt32
  end
  struct OIFI
    cb : UInt32
    f_mdi_app : LibC::BOOL
    hwnd_frame : HANDLE
    haccel : HANDLE
    c_accel_entries : UInt32
  end
  struct OleMenuGroupWidths
    width : Int32[6]*
  end
  struct OLEVERB
    l_verb : Int32
    lpsz_verb_name : LibC::LPWSTR
    fu_flags : UInt32
    grf_attribs : UInt32
  end
  struct NUMPARSE
    c_dig : Int32
    dw_in_flags : UInt32
    dw_out_flags : UInt32
    cch_used : Int32
    n_base_shift : Int32
    n_pwr10 : Int32
  end
  struct UDATE
    st : SYSTEMTIME
    w_day_of_year : UInt16
  end
  struct PARAMDATA
    sz_name : LibC::LPWSTR
    vt : UInt16
  end
  struct METHODDATA
    sz_name : LibC::LPWSTR
    ppdata : PARAMDATA*
    dispid : Int32
    i_meth : UInt32
    cc : CALLCONV
    c_args : UInt32
    w_flags : UInt16
    vt_return : UInt16
  end
  struct INTERFACEDATA
    pmethdata : METHODDATA*
    c_members : UInt32
  end
  struct LICINFO
    cb_lic_info : Int32
    f_runtime_key_avail : LibC::BOOL
    f_lic_verified : LibC::BOOL
  end
  struct CONTROLINFO
    cb : UInt32
    h_accel : HANDLE
    c_accel : UInt16
    dw_flags : UInt32
  end
  struct POINTF
    x : Float32
    y : Float32
  end
  struct PROPPAGEINFO
    cb : UInt32
    psz_title : LibC::LPWSTR
    size : SIZE
    psz_doc_string : LibC::LPWSTR
    psz_help_file : LibC::LPWSTR
    dw_help_context : UInt32
  end
  struct CAUUID
    c_elems : UInt32
    p_elems : Guid*
  end
  struct ExtentInfo
    cb : UInt32
    dw_extent_mode : UInt32
    sizel_proposed : SIZE
  end
  struct AspectInfo
    cb : UInt32
    dw_flags : UInt32
  end
  struct CALPOLESTR
    c_elems : UInt32
    p_elems : LibC::LPWSTR*
  end
  struct CADWORD
    c_elems : UInt32
    p_elems : UInt32*
  end
  struct QACONTAINER
    cb_size : UInt32
    p_client_site : IOleClientSite
    p_advise_sink : IAdviseSinkEx
    p_property_notify_sink : IPropertyNotifySink
    p_unk_event_sink : IUnknown
    dw_ambient_flags : UInt32
    color_fore : UInt32
    color_back : UInt32
    p_font : IFont
    p_undo_mgr : IOleUndoManager
    dw_appearance : UInt32
    lcid : Int32
    hpal : HPALETTE
    p_bind_host : IBindHost
    p_ole_control_site : IOleControlSite
    p_service_provider : IServiceProvider
  end
  struct QACONTROL
    cb_size : UInt32
    dw_misc_status : UInt32
    dw_view_status : UInt32
    dw_event_cookie : UInt32
    dw_prop_notify_cookie : UInt32
    dw_pointer_activation_policy : UInt32
  end
  struct OCPFIPARAMS
    cb_struct_size : UInt32
    h_wnd_owner : HANDLE
    x : Int32
    y : Int32
    lpsz_caption : LibC::LPWSTR
    c_objects : UInt32
    lplp_unk : IUnknown*
    c_pages : UInt32
    lp_pages : Guid*
    lcid : UInt32
    dispid_initial_property : Int32
  end
  struct FONTDESC
    cb_sizeofstruct : UInt32
    lpstr_name : LibC::LPWSTR
    cy_size : CY
    s_weight : Int16
    s_charset : Int16
    f_italic : LibC::BOOL
    f_underline : LibC::BOOL
    f_strikethrough : LibC::BOOL
  end
  struct PICTDESC
    cb_sizeofstruct : UInt32
    pic_type : UInt32
    anonymous : PICTDESC_Anonymous_e__Union
  end
  struct PICTDESC_Anonymous_e__Union_icon_e__Struct
    hicon : HANDLE
  end
  struct PICTDESC_Anonymous_e__Union_bmp_e__Struct
    hbitmap : HBITMAP
    hpal : HPALETTE
  end
  struct PICTDESC_Anonymous_e__Union_wmf_e__Struct
    hmeta : HMETAFILE
    x_ext : Int32
    y_ext : Int32
  end
  struct PICTDESC_Anonymous_e__Union_emf_e__Struct
    hemf : HENHMETAFILE
  end
  struct PAGERANGE
    n_from_page : Int32
    n_to_page : Int32
  end
  struct PAGESET
    cb_struct : UInt32
    f_odd_pages : LibC::BOOL
    f_even_pages : LibC::BOOL
    c_page_range : UInt32
    rg_pages : PAGERANGE[0]*
  end
  struct OLECMD
    cmd_id : UInt32
    cmdf : UInt32
  end
  struct OLECMDTEXT
    cmdtextf : UInt32
    cw_actual : UInt32
    cw_buf : UInt32
    rgwz : Char[0]*
  end
  struct OLEUIINSERTOBJECTW
    cb_struct : UInt32
    dw_flags : UInt32
    h_wnd_owner : HANDLE
    lpsz_caption : LibC::LPWSTR
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    h_instance : HINSTANCE
    lpsz_template : LibC::LPWSTR
    h_resource : HRSRC
    clsid : Guid
    lpsz_file : LibC::LPWSTR
    cch_file : UInt32
    c_clsid_exclude : UInt32
    lp_clsid_exclude : Guid*
    iid : Guid
    ole_render : UInt32
    lp_format_etc : FORMATETC*
    lp_i_ole_client_site : IOleClientSite
    lp_i_storage : IStorage
    ppv_obj : Void**
    sc : Int32
    h_meta_pict : LibC::IntPtrT
  end
  struct OLEUIINSERTOBJECTA
    cb_struct : UInt32
    dw_flags : UInt32
    h_wnd_owner : HANDLE
    lpsz_caption : PSTR
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    h_instance : HINSTANCE
    lpsz_template : PSTR
    h_resource : HRSRC
    clsid : Guid
    lpsz_file : PSTR
    cch_file : UInt32
    c_clsid_exclude : UInt32
    lp_clsid_exclude : Guid*
    iid : Guid
    ole_render : UInt32
    lp_format_etc : FORMATETC*
    lp_i_ole_client_site : IOleClientSite
    lp_i_storage : IStorage
    ppv_obj : Void**
    sc : Int32
    h_meta_pict : LibC::IntPtrT
  end
  struct OLEUIPASTEENTRYW
    fmtetc : FORMATETC
    lpstr_format_name : LibC::LPWSTR
    lpstr_result_text : LibC::LPWSTR
    dw_flags : UInt32
    dw_scratch_space : UInt32
  end
  struct OLEUIPASTEENTRYA
    fmtetc : FORMATETC
    lpstr_format_name : PSTR
    lpstr_result_text : PSTR
    dw_flags : UInt32
    dw_scratch_space : UInt32
  end
  struct OLEUIPASTESPECIALW
    cb_struct : UInt32
    dw_flags : UInt32
    h_wnd_owner : HANDLE
    lpsz_caption : LibC::LPWSTR
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    h_instance : HINSTANCE
    lpsz_template : LibC::LPWSTR
    h_resource : HRSRC
    lp_src_data_obj : IDataObject
    arr_paste_entries : OLEUIPASTEENTRYW*
    c_paste_entries : Int32
    arr_link_types : UInt32*
    c_link_types : Int32
    c_clsid_exclude : UInt32
    lp_clsid_exclude : Guid*
    n_selected_index : Int32
    f_link : LibC::BOOL
    h_meta_pict : LibC::IntPtrT
    sizel : SIZE
  end
  struct OLEUIPASTESPECIALA
    cb_struct : UInt32
    dw_flags : UInt32
    h_wnd_owner : HANDLE
    lpsz_caption : PSTR
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    h_instance : HINSTANCE
    lpsz_template : PSTR
    h_resource : HRSRC
    lp_src_data_obj : IDataObject
    arr_paste_entries : OLEUIPASTEENTRYA*
    c_paste_entries : Int32
    arr_link_types : UInt32*
    c_link_types : Int32
    c_clsid_exclude : UInt32
    lp_clsid_exclude : Guid*
    n_selected_index : Int32
    f_link : LibC::BOOL
    h_meta_pict : LibC::IntPtrT
    sizel : SIZE
  end
  struct OLEUIEDITLINKSW
    cb_struct : UInt32
    dw_flags : UInt32
    h_wnd_owner : HANDLE
    lpsz_caption : LibC::LPWSTR
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    h_instance : HINSTANCE
    lpsz_template : LibC::LPWSTR
    h_resource : HRSRC
    lp_ole_ui_link_container : IOleUILinkContainerW
  end
  struct OLEUIEDITLINKSA
    cb_struct : UInt32
    dw_flags : UInt32
    h_wnd_owner : HANDLE
    lpsz_caption : PSTR
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    h_instance : HINSTANCE
    lpsz_template : PSTR
    h_resource : HRSRC
    lp_ole_ui_link_container : IOleUILinkContainerA
  end
  struct OLEUICHANGEICONW
    cb_struct : UInt32
    dw_flags : UInt32
    h_wnd_owner : HANDLE
    lpsz_caption : LibC::LPWSTR
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    h_instance : HINSTANCE
    lpsz_template : LibC::LPWSTR
    h_resource : HRSRC
    h_meta_pict : LibC::IntPtrT
    clsid : Guid
    sz_icon_exe : Char[260]*
    cch_icon_exe : Int32
  end
  struct OLEUICHANGEICONA
    cb_struct : UInt32
    dw_flags : UInt32
    h_wnd_owner : HANDLE
    lpsz_caption : PSTR
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    h_instance : HINSTANCE
    lpsz_template : PSTR
    h_resource : HRSRC
    h_meta_pict : LibC::IntPtrT
    clsid : Guid
    sz_icon_exe : CHAR[260]*
    cch_icon_exe : Int32
  end
  struct OLEUICONVERTW
    cb_struct : UInt32
    dw_flags : UInt32
    h_wnd_owner : HANDLE
    lpsz_caption : LibC::LPWSTR
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    h_instance : HINSTANCE
    lpsz_template : LibC::LPWSTR
    h_resource : HRSRC
    clsid : Guid
    clsid_convert_default : Guid
    clsid_activate_default : Guid
    clsid_new : Guid
    dv_aspect : UInt32
    w_format : UInt16
    f_is_linked_object : LibC::BOOL
    h_meta_pict : LibC::IntPtrT
    lpsz_user_type : LibC::LPWSTR
    f_objects_icon_changed : LibC::BOOL
    lpsz_def_label : LibC::LPWSTR
    c_clsid_exclude : UInt32
    lp_clsid_exclude : Guid*
  end
  struct OLEUICONVERTA
    cb_struct : UInt32
    dw_flags : UInt32
    h_wnd_owner : HANDLE
    lpsz_caption : PSTR
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    h_instance : HINSTANCE
    lpsz_template : PSTR
    h_resource : HRSRC
    clsid : Guid
    clsid_convert_default : Guid
    clsid_activate_default : Guid
    clsid_new : Guid
    dv_aspect : UInt32
    w_format : UInt16
    f_is_linked_object : LibC::BOOL
    h_meta_pict : LibC::IntPtrT
    lpsz_user_type : PSTR
    f_objects_icon_changed : LibC::BOOL
    lpsz_def_label : PSTR
    c_clsid_exclude : UInt32
    lp_clsid_exclude : Guid*
  end
  struct OLEUIBUSYW
    cb_struct : UInt32
    dw_flags : UInt32
    h_wnd_owner : HANDLE
    lpsz_caption : LibC::LPWSTR
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    h_instance : HINSTANCE
    lpsz_template : LibC::LPWSTR
    h_resource : HRSRC
    h_task : HTASK
    lph_wnd_dialog : HANDLE*
  end
  struct OLEUIBUSYA
    cb_struct : UInt32
    dw_flags : UInt32
    h_wnd_owner : HANDLE
    lpsz_caption : PSTR
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    h_instance : HINSTANCE
    lpsz_template : PSTR
    h_resource : HRSRC
    h_task : HTASK
    lph_wnd_dialog : HANDLE*
  end
  struct OLEUICHANGESOURCEW
    cb_struct : UInt32
    dw_flags : UInt32
    h_wnd_owner : HANDLE
    lpsz_caption : LibC::LPWSTR
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    h_instance : HINSTANCE
    lpsz_template : LibC::LPWSTR
    h_resource : HRSRC
    lp_ofn : OPENFILENAMEW*
    dw_reserved1 : UInt32[4]*
    lp_ole_ui_link_container : IOleUILinkContainerW
    dw_link : UInt32
    lpsz_display_name : LibC::LPWSTR
    n_file_length : UInt32
    lpsz_from : LibC::LPWSTR
    lpsz_to : LibC::LPWSTR
  end
  struct OLEUICHANGESOURCEA
    cb_struct : UInt32
    dw_flags : UInt32
    h_wnd_owner : HANDLE
    lpsz_caption : PSTR
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    h_instance : HINSTANCE
    lpsz_template : PSTR
    h_resource : HRSRC
    lp_ofn : OPENFILENAMEA*
    dw_reserved1 : UInt32[4]*
    lp_ole_ui_link_container : IOleUILinkContainerA
    dw_link : UInt32
    lpsz_display_name : PSTR
    n_file_length : UInt32
    lpsz_from : PSTR
    lpsz_to : PSTR
  end
  struct OLEUIGNRLPROPSW
    cb_struct : UInt32
    dw_flags : UInt32
    dw_reserved1 : UInt32[2]*
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    dw_reserved2 : UInt32[3]*
    lp_op : OLEUIOBJECTPROPSW*
  end
  struct OLEUIGNRLPROPSA
    cb_struct : UInt32
    dw_flags : UInt32
    dw_reserved1 : UInt32[2]*
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    dw_reserved2 : UInt32[3]*
    lp_op : OLEUIOBJECTPROPSA*
  end
  struct OLEUIVIEWPROPSW
    cb_struct : UInt32
    dw_flags : UInt32
    dw_reserved1 : UInt32[2]*
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    dw_reserved2 : UInt32[3]*
    lp_op : OLEUIOBJECTPROPSW*
    n_scale_min : Int32
    n_scale_max : Int32
  end
  struct OLEUIVIEWPROPSA
    cb_struct : UInt32
    dw_flags : UInt32
    dw_reserved1 : UInt32[2]*
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    dw_reserved2 : UInt32[3]*
    lp_op : OLEUIOBJECTPROPSA*
    n_scale_min : Int32
    n_scale_max : Int32
  end
  struct OLEUILINKPROPSW
    cb_struct : UInt32
    dw_flags : UInt32
    dw_reserved1 : UInt32[2]*
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    dw_reserved2 : UInt32[3]*
    lp_op : OLEUIOBJECTPROPSW*
  end
  struct OLEUILINKPROPSA
    cb_struct : UInt32
    dw_flags : UInt32
    dw_reserved1 : UInt32[2]*
    lpfn_hook : LPFNOLEUIHOOK
    l_cust_data : LPARAM
    dw_reserved2 : UInt32[3]*
    lp_op : OLEUIOBJECTPROPSA*
  end
  struct OLEUIOBJECTPROPSW
    cb_struct : UInt32
    dw_flags : UInt32
    lp_ps : PROPSHEETHEADERW_V2*
    dw_object : UInt32
    lp_obj_info : IOleUIObjInfoW
    dw_link : UInt32
    lp_link_info : IOleUILinkInfoW
    lp_gp : OLEUIGNRLPROPSW*
    lp_vp : OLEUIVIEWPROPSW*
    lp_lp : OLEUILINKPROPSW*
  end
  struct OLEUIOBJECTPROPSA
    cb_struct : UInt32
    dw_flags : UInt32
    lp_ps : PROPSHEETHEADERA_V2*
    dw_object : UInt32
    lp_obj_info : IOleUIObjInfoA
    dw_link : UInt32
    lp_link_info : IOleUILinkInfoA
    lp_gp : OLEUIGNRLPROPSA*
    lp_vp : OLEUIVIEWPROPSA*
    lp_lp : OLEUILINKPROPSA*
  end


  struct ICreateTypeInfoVTbl
    query_interface : Proc(ICreateTypeInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(ICreateTypeInfo*, UInt32)
    release : Proc(ICreateTypeInfo*, UInt32)
    set_guid : Proc(ICreateTypeInfo*, Guid*, HRESULT)
    set_type_flags : Proc(ICreateTypeInfo*, UInt32, HRESULT)
    set_doc_string : Proc(ICreateTypeInfo*, LibC::LPWSTR, HRESULT)
    set_help_context : Proc(ICreateTypeInfo*, UInt32, HRESULT)
    set_version : Proc(ICreateTypeInfo*, UInt16, UInt16, HRESULT)
    add_ref_type_info : Proc(ICreateTypeInfo*, ITypeInfo, UInt32*, HRESULT)
    add_func_desc : Proc(ICreateTypeInfo*, UInt32, FUNCDESC*, HRESULT)
    add_impl_type : Proc(ICreateTypeInfo*, UInt32, UInt32, HRESULT)
    set_impl_type_flags : Proc(ICreateTypeInfo*, UInt32, Int32, HRESULT)
    set_alignment : Proc(ICreateTypeInfo*, UInt16, HRESULT)
    set_schema : Proc(ICreateTypeInfo*, LibC::LPWSTR, HRESULT)
    add_var_desc : Proc(ICreateTypeInfo*, UInt32, VARDESC*, HRESULT)
    set_func_and_param_names : Proc(ICreateTypeInfo*, UInt32, LibC::LPWSTR*, UInt32, HRESULT)
    set_var_name : Proc(ICreateTypeInfo*, UInt32, LibC::LPWSTR, HRESULT)
    set_type_desc_alias : Proc(ICreateTypeInfo*, TYPEDESC*, HRESULT)
    define_func_as_dll_entry : Proc(ICreateTypeInfo*, UInt32, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    set_func_doc_string : Proc(ICreateTypeInfo*, UInt32, LibC::LPWSTR, HRESULT)
    set_var_doc_string : Proc(ICreateTypeInfo*, UInt32, LibC::LPWSTR, HRESULT)
    set_func_help_context : Proc(ICreateTypeInfo*, UInt32, UInt32, HRESULT)
    set_var_help_context : Proc(ICreateTypeInfo*, UInt32, UInt32, HRESULT)
    set_mops : Proc(ICreateTypeInfo*, UInt32, UInt8*, HRESULT)
    set_type_idldesc : Proc(ICreateTypeInfo*, IDLDESC*, HRESULT)
    lay_out : Proc(ICreateTypeInfo*, HRESULT)
  end

  struct ICreateTypeInfo
    lpVtbl : ICreateTypeInfoVTbl*
  end

  struct ICreateTypeInfo2VTbl
    query_interface : Proc(ICreateTypeInfo2*, Guid*, Void**, HRESULT)
    add_ref : Proc(ICreateTypeInfo2*, UInt32)
    release : Proc(ICreateTypeInfo2*, UInt32)
    set_guid : Proc(ICreateTypeInfo2*, Guid*, HRESULT)
    set_type_flags : Proc(ICreateTypeInfo2*, UInt32, HRESULT)
    set_doc_string : Proc(ICreateTypeInfo2*, LibC::LPWSTR, HRESULT)
    set_help_context : Proc(ICreateTypeInfo2*, UInt32, HRESULT)
    set_version : Proc(ICreateTypeInfo2*, UInt16, UInt16, HRESULT)
    add_ref_type_info : Proc(ICreateTypeInfo2*, ITypeInfo, UInt32*, HRESULT)
    add_func_desc : Proc(ICreateTypeInfo2*, UInt32, FUNCDESC*, HRESULT)
    add_impl_type : Proc(ICreateTypeInfo2*, UInt32, UInt32, HRESULT)
    set_impl_type_flags : Proc(ICreateTypeInfo2*, UInt32, Int32, HRESULT)
    set_alignment : Proc(ICreateTypeInfo2*, UInt16, HRESULT)
    set_schema : Proc(ICreateTypeInfo2*, LibC::LPWSTR, HRESULT)
    add_var_desc : Proc(ICreateTypeInfo2*, UInt32, VARDESC*, HRESULT)
    set_func_and_param_names : Proc(ICreateTypeInfo2*, UInt32, LibC::LPWSTR*, UInt32, HRESULT)
    set_var_name : Proc(ICreateTypeInfo2*, UInt32, LibC::LPWSTR, HRESULT)
    set_type_desc_alias : Proc(ICreateTypeInfo2*, TYPEDESC*, HRESULT)
    define_func_as_dll_entry : Proc(ICreateTypeInfo2*, UInt32, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    set_func_doc_string : Proc(ICreateTypeInfo2*, UInt32, LibC::LPWSTR, HRESULT)
    set_var_doc_string : Proc(ICreateTypeInfo2*, UInt32, LibC::LPWSTR, HRESULT)
    set_func_help_context : Proc(ICreateTypeInfo2*, UInt32, UInt32, HRESULT)
    set_var_help_context : Proc(ICreateTypeInfo2*, UInt32, UInt32, HRESULT)
    set_mops : Proc(ICreateTypeInfo2*, UInt32, UInt8*, HRESULT)
    set_type_idldesc : Proc(ICreateTypeInfo2*, IDLDESC*, HRESULT)
    lay_out : Proc(ICreateTypeInfo2*, HRESULT)
    delete_func_desc : Proc(ICreateTypeInfo2*, UInt32, HRESULT)
    delete_func_desc_by_mem_id : Proc(ICreateTypeInfo2*, Int32, INVOKEKIND, HRESULT)
    delete_var_desc : Proc(ICreateTypeInfo2*, UInt32, HRESULT)
    delete_var_desc_by_mem_id : Proc(ICreateTypeInfo2*, Int32, HRESULT)
    delete_impl_type : Proc(ICreateTypeInfo2*, UInt32, HRESULT)
    set_cust_data : Proc(ICreateTypeInfo2*, Guid*, VARIANT*, HRESULT)
    set_func_cust_data : Proc(ICreateTypeInfo2*, UInt32, Guid*, VARIANT*, HRESULT)
    set_param_cust_data : Proc(ICreateTypeInfo2*, UInt32, UInt32, Guid*, VARIANT*, HRESULT)
    set_var_cust_data : Proc(ICreateTypeInfo2*, UInt32, Guid*, VARIANT*, HRESULT)
    set_impl_type_cust_data : Proc(ICreateTypeInfo2*, UInt32, Guid*, VARIANT*, HRESULT)
    set_help_string_context : Proc(ICreateTypeInfo2*, UInt32, HRESULT)
    set_func_help_string_context : Proc(ICreateTypeInfo2*, UInt32, UInt32, HRESULT)
    set_var_help_string_context : Proc(ICreateTypeInfo2*, UInt32, UInt32, HRESULT)
    invalidate : Proc(ICreateTypeInfo2*, HRESULT)
    set_name : Proc(ICreateTypeInfo2*, LibC::LPWSTR, HRESULT)
  end

  struct ICreateTypeInfo2
    lpVtbl : ICreateTypeInfo2VTbl*
  end

  struct ICreateTypeLibVTbl
    query_interface : Proc(ICreateTypeLib*, Guid*, Void**, HRESULT)
    add_ref : Proc(ICreateTypeLib*, UInt32)
    release : Proc(ICreateTypeLib*, UInt32)
    create_type_info : Proc(ICreateTypeLib*, LibC::LPWSTR, TYPEKIND, ICreateTypeInfo*, HRESULT)
    set_name : Proc(ICreateTypeLib*, LibC::LPWSTR, HRESULT)
    set_version : Proc(ICreateTypeLib*, UInt16, UInt16, HRESULT)
    set_guid : Proc(ICreateTypeLib*, Guid*, HRESULT)
    set_doc_string : Proc(ICreateTypeLib*, LibC::LPWSTR, HRESULT)
    set_help_file_name : Proc(ICreateTypeLib*, LibC::LPWSTR, HRESULT)
    set_help_context : Proc(ICreateTypeLib*, UInt32, HRESULT)
    set_lcid : Proc(ICreateTypeLib*, UInt32, HRESULT)
    set_lib_flags : Proc(ICreateTypeLib*, UInt32, HRESULT)
    save_all_changes : Proc(ICreateTypeLib*, HRESULT)
  end

  struct ICreateTypeLib
    lpVtbl : ICreateTypeLibVTbl*
  end

  struct ICreateTypeLib2VTbl
    query_interface : Proc(ICreateTypeLib2*, Guid*, Void**, HRESULT)
    add_ref : Proc(ICreateTypeLib2*, UInt32)
    release : Proc(ICreateTypeLib2*, UInt32)
    create_type_info : Proc(ICreateTypeLib2*, LibC::LPWSTR, TYPEKIND, ICreateTypeInfo*, HRESULT)
    set_name : Proc(ICreateTypeLib2*, LibC::LPWSTR, HRESULT)
    set_version : Proc(ICreateTypeLib2*, UInt16, UInt16, HRESULT)
    set_guid : Proc(ICreateTypeLib2*, Guid*, HRESULT)
    set_doc_string : Proc(ICreateTypeLib2*, LibC::LPWSTR, HRESULT)
    set_help_file_name : Proc(ICreateTypeLib2*, LibC::LPWSTR, HRESULT)
    set_help_context : Proc(ICreateTypeLib2*, UInt32, HRESULT)
    set_lcid : Proc(ICreateTypeLib2*, UInt32, HRESULT)
    set_lib_flags : Proc(ICreateTypeLib2*, UInt32, HRESULT)
    save_all_changes : Proc(ICreateTypeLib2*, HRESULT)
    delete_type_info : Proc(ICreateTypeLib2*, LibC::LPWSTR, HRESULT)
    set_cust_data : Proc(ICreateTypeLib2*, Guid*, VARIANT*, HRESULT)
    set_help_string_context : Proc(ICreateTypeLib2*, UInt32, HRESULT)
    set_help_string_dll : Proc(ICreateTypeLib2*, LibC::LPWSTR, HRESULT)
  end

  struct ICreateTypeLib2
    lpVtbl : ICreateTypeLib2VTbl*
  end

  struct IEnumVARIANTVTbl
    query_interface : Proc(IEnumVARIANT*, Guid*, Void**, HRESULT)
    add_ref : Proc(IEnumVARIANT*, UInt32)
    release : Proc(IEnumVARIANT*, UInt32)
    next : Proc(IEnumVARIANT*, UInt32, VARIANT*, UInt32*, HRESULT)
    skip : Proc(IEnumVARIANT*, UInt32, HRESULT)
    reset : Proc(IEnumVARIANT*, HRESULT)
    clone : Proc(IEnumVARIANT*, IEnumVARIANT*, HRESULT)
  end

  struct IEnumVARIANT
    lpVtbl : IEnumVARIANTVTbl*
  end

  struct ITypeChangeEventsVTbl
    query_interface : Proc(ITypeChangeEvents*, Guid*, Void**, HRESULT)
    add_ref : Proc(ITypeChangeEvents*, UInt32)
    release : Proc(ITypeChangeEvents*, UInt32)
    request_type_change : Proc(ITypeChangeEvents*, CHANGEKIND, ITypeInfo, LibC::LPWSTR, Int32*, HRESULT)
    after_type_change : Proc(ITypeChangeEvents*, CHANGEKIND, ITypeInfo, LibC::LPWSTR, HRESULT)
  end

  struct ITypeChangeEvents
    lpVtbl : ITypeChangeEventsVTbl*
  end

  struct ICreateErrorInfoVTbl
    query_interface : Proc(ICreateErrorInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(ICreateErrorInfo*, UInt32)
    release : Proc(ICreateErrorInfo*, UInt32)
    set_guid : Proc(ICreateErrorInfo*, Guid*, HRESULT)
    set_source : Proc(ICreateErrorInfo*, LibC::LPWSTR, HRESULT)
    set_description : Proc(ICreateErrorInfo*, LibC::LPWSTR, HRESULT)
    set_help_file : Proc(ICreateErrorInfo*, LibC::LPWSTR, HRESULT)
    set_help_context : Proc(ICreateErrorInfo*, UInt32, HRESULT)
  end

  struct ICreateErrorInfo
    lpVtbl : ICreateErrorInfoVTbl*
  end

  struct ITypeFactoryVTbl
    query_interface : Proc(ITypeFactory*, Guid*, Void**, HRESULT)
    add_ref : Proc(ITypeFactory*, UInt32)
    release : Proc(ITypeFactory*, UInt32)
    create_from_type_info : Proc(ITypeFactory*, ITypeInfo, Guid*, IUnknown*, HRESULT)
  end

  struct ITypeFactory
    lpVtbl : ITypeFactoryVTbl*
  end

  struct ITypeMarshalVTbl
    query_interface : Proc(ITypeMarshal*, Guid*, Void**, HRESULT)
    add_ref : Proc(ITypeMarshal*, UInt32)
    release : Proc(ITypeMarshal*, UInt32)
    size : Proc(ITypeMarshal*, Void*, UInt32, Void*, UInt32*, HRESULT)
    marshal : Proc(ITypeMarshal*, Void*, UInt32, Void*, UInt32, UInt8*, UInt32*, HRESULT)
    unmarshal : Proc(ITypeMarshal*, Void*, UInt32, UInt32, UInt8*, UInt32*, HRESULT)
    free : Proc(ITypeMarshal*, Void*, HRESULT)
  end

  struct ITypeMarshal
    lpVtbl : ITypeMarshalVTbl*
  end

  struct IRecordInfoVTbl
    query_interface : Proc(IRecordInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IRecordInfo*, UInt32)
    release : Proc(IRecordInfo*, UInt32)
    record_init : Proc(IRecordInfo*, Void*, HRESULT)
    record_clear : Proc(IRecordInfo*, Void*, HRESULT)
    record_copy : Proc(IRecordInfo*, Void*, Void*, HRESULT)
    get_guid : Proc(IRecordInfo*, Guid*, HRESULT)
    get_name : Proc(IRecordInfo*, UInt8**, HRESULT)
    get_size : Proc(IRecordInfo*, UInt32*, HRESULT)
    get_type_info : Proc(IRecordInfo*, ITypeInfo*, HRESULT)
    get_field : Proc(IRecordInfo*, Void*, LibC::LPWSTR, VARIANT*, HRESULT)
    get_field_no_copy : Proc(IRecordInfo*, Void*, LibC::LPWSTR, VARIANT*, Void**, HRESULT)
    put_field : Proc(IRecordInfo*, UInt32, Void*, LibC::LPWSTR, VARIANT*, HRESULT)
    put_field_no_copy : Proc(IRecordInfo*, UInt32, Void*, LibC::LPWSTR, VARIANT*, HRESULT)
    get_field_names : Proc(IRecordInfo*, UInt32*, UInt8**, HRESULT)
    is_matching_type : Proc(IRecordInfo*, IRecordInfo, LibC::BOOL)
    record_create : Proc(IRecordInfo*, Void**)
    record_create_copy : Proc(IRecordInfo*, Void*, Void**, HRESULT)
    record_destroy : Proc(IRecordInfo*, Void*, HRESULT)
  end

  struct IRecordInfo
    lpVtbl : IRecordInfoVTbl*
  end

  struct IOleAdviseHolderVTbl
    query_interface : Proc(IOleAdviseHolder*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleAdviseHolder*, UInt32)
    release : Proc(IOleAdviseHolder*, UInt32)
    advise : Proc(IOleAdviseHolder*, IAdviseSink, UInt32*, HRESULT)
    unadvise : Proc(IOleAdviseHolder*, UInt32, HRESULT)
    enum_advise : Proc(IOleAdviseHolder*, IEnumSTATDATA*, HRESULT)
    send_on_rename : Proc(IOleAdviseHolder*, IMoniker, HRESULT)
    send_on_save : Proc(IOleAdviseHolder*, HRESULT)
    send_on_close : Proc(IOleAdviseHolder*, HRESULT)
  end

  struct IOleAdviseHolder
    lpVtbl : IOleAdviseHolderVTbl*
  end

  struct IOleCacheVTbl
    query_interface : Proc(IOleCache*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleCache*, UInt32)
    release : Proc(IOleCache*, UInt32)
    cache : Proc(IOleCache*, FORMATETC*, UInt32, UInt32*, HRESULT)
    uncache : Proc(IOleCache*, UInt32, HRESULT)
    enum_cache : Proc(IOleCache*, IEnumSTATDATA*, HRESULT)
    init_cache : Proc(IOleCache*, IDataObject, HRESULT)
    set_data : Proc(IOleCache*, FORMATETC*, STGMEDIUM*, LibC::BOOL, HRESULT)
  end

  struct IOleCache
    lpVtbl : IOleCacheVTbl*
  end

  struct IOleCache2VTbl
    query_interface : Proc(IOleCache2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleCache2*, UInt32)
    release : Proc(IOleCache2*, UInt32)
    cache : Proc(IOleCache2*, FORMATETC*, UInt32, UInt32*, HRESULT)
    uncache : Proc(IOleCache2*, UInt32, HRESULT)
    enum_cache : Proc(IOleCache2*, IEnumSTATDATA*, HRESULT)
    init_cache : Proc(IOleCache2*, IDataObject, HRESULT)
    set_data : Proc(IOleCache2*, FORMATETC*, STGMEDIUM*, LibC::BOOL, HRESULT)
    update_cache : Proc(IOleCache2*, IDataObject, UPDFCACHE_FLAGS, Void*, HRESULT)
    discard_cache : Proc(IOleCache2*, UInt32, HRESULT)
  end

  struct IOleCache2
    lpVtbl : IOleCache2VTbl*
  end

  struct IOleCacheControlVTbl
    query_interface : Proc(IOleCacheControl*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleCacheControl*, UInt32)
    release : Proc(IOleCacheControl*, UInt32)
    on_run : Proc(IOleCacheControl*, IDataObject, HRESULT)
    on_stop : Proc(IOleCacheControl*, HRESULT)
  end

  struct IOleCacheControl
    lpVtbl : IOleCacheControlVTbl*
  end

  struct IParseDisplayNameVTbl
    query_interface : Proc(IParseDisplayName*, Guid*, Void**, HRESULT)
    add_ref : Proc(IParseDisplayName*, UInt32)
    release : Proc(IParseDisplayName*, UInt32)
    parse_display_name : Proc(IParseDisplayName*, IBindCtx, LibC::LPWSTR, UInt32*, IMoniker*, HRESULT)
  end

  struct IParseDisplayName
    lpVtbl : IParseDisplayNameVTbl*
  end

  struct IOleContainerVTbl
    query_interface : Proc(IOleContainer*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleContainer*, UInt32)
    release : Proc(IOleContainer*, UInt32)
    parse_display_name : Proc(IOleContainer*, IBindCtx, LibC::LPWSTR, UInt32*, IMoniker*, HRESULT)
    enum_objects : Proc(IOleContainer*, UInt32, IEnumUnknown*, HRESULT)
    lock_container : Proc(IOleContainer*, LibC::BOOL, HRESULT)
  end

  struct IOleContainer
    lpVtbl : IOleContainerVTbl*
  end

  struct IOleClientSiteVTbl
    query_interface : Proc(IOleClientSite*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleClientSite*, UInt32)
    release : Proc(IOleClientSite*, UInt32)
    save_object : Proc(IOleClientSite*, HRESULT)
    get_moniker : Proc(IOleClientSite*, UInt32, UInt32, IMoniker*, HRESULT)
    get_container : Proc(IOleClientSite*, IOleContainer*, HRESULT)
    show_object : Proc(IOleClientSite*, HRESULT)
    on_show_window : Proc(IOleClientSite*, LibC::BOOL, HRESULT)
    request_new_object_layout : Proc(IOleClientSite*, HRESULT)
  end

  struct IOleClientSite
    lpVtbl : IOleClientSiteVTbl*
  end

  struct IOleObjectVTbl
    query_interface : Proc(IOleObject*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleObject*, UInt32)
    release : Proc(IOleObject*, UInt32)
    set_client_site : Proc(IOleObject*, IOleClientSite, HRESULT)
    get_client_site : Proc(IOleObject*, IOleClientSite*, HRESULT)
    set_host_names : Proc(IOleObject*, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    close : Proc(IOleObject*, UInt32, HRESULT)
    set_moniker : Proc(IOleObject*, UInt32, IMoniker, HRESULT)
    get_moniker : Proc(IOleObject*, UInt32, UInt32, IMoniker*, HRESULT)
    init_from_data : Proc(IOleObject*, IDataObject, LibC::BOOL, UInt32, HRESULT)
    get_clipboard_data : Proc(IOleObject*, UInt32, IDataObject*, HRESULT)
    do_verb : Proc(IOleObject*, Int32, MSG*, IOleClientSite, Int32, LibC::HANDLE, RECT*, HRESULT)
    enum_verbs : Proc(IOleObject*, IEnumOLEVERB*, HRESULT)
    update : Proc(IOleObject*, HRESULT)
    is_up_to_date : Proc(IOleObject*, HRESULT)
    get_user_class_id : Proc(IOleObject*, Guid*, HRESULT)
    get_user_type : Proc(IOleObject*, UInt32, LibC::LPWSTR*, HRESULT)
    set_extent : Proc(IOleObject*, UInt32, SIZE*, HRESULT)
    get_extent : Proc(IOleObject*, UInt32, SIZE*, HRESULT)
    advise : Proc(IOleObject*, IAdviseSink, UInt32*, HRESULT)
    unadvise : Proc(IOleObject*, UInt32, HRESULT)
    enum_advise : Proc(IOleObject*, IEnumSTATDATA*, HRESULT)
    get_misc_status : Proc(IOleObject*, UInt32, UInt32*, HRESULT)
    set_color_scheme : Proc(IOleObject*, LOGPALETTE*, HRESULT)
  end

  struct IOleObject
    lpVtbl : IOleObjectVTbl*
  end

  struct IOleWindowVTbl
    query_interface : Proc(IOleWindow*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleWindow*, UInt32)
    release : Proc(IOleWindow*, UInt32)
    get_window : Proc(IOleWindow*, HANDLE*, HRESULT)
    context_sensitive_help : Proc(IOleWindow*, LibC::BOOL, HRESULT)
  end

  struct IOleWindow
    lpVtbl : IOleWindowVTbl*
  end

  struct IOleLinkVTbl
    query_interface : Proc(IOleLink*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleLink*, UInt32)
    release : Proc(IOleLink*, UInt32)
    set_update_options : Proc(IOleLink*, UInt32, HRESULT)
    get_update_options : Proc(IOleLink*, UInt32*, HRESULT)
    set_source_moniker : Proc(IOleLink*, IMoniker, Guid*, HRESULT)
    get_source_moniker : Proc(IOleLink*, IMoniker*, HRESULT)
    set_source_display_name : Proc(IOleLink*, LibC::LPWSTR, HRESULT)
    get_source_display_name : Proc(IOleLink*, LibC::LPWSTR*, HRESULT)
    bind_to_source : Proc(IOleLink*, UInt32, IBindCtx, HRESULT)
    bind_if_running : Proc(IOleLink*, HRESULT)
    get_bound_source : Proc(IOleLink*, IUnknown*, HRESULT)
    unbind_source : Proc(IOleLink*, HRESULT)
    update : Proc(IOleLink*, IBindCtx, HRESULT)
  end

  struct IOleLink
    lpVtbl : IOleLinkVTbl*
  end

  struct IOleItemContainerVTbl
    query_interface : Proc(IOleItemContainer*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleItemContainer*, UInt32)
    release : Proc(IOleItemContainer*, UInt32)
    parse_display_name : Proc(IOleItemContainer*, IBindCtx, LibC::LPWSTR, UInt32*, IMoniker*, HRESULT)
    enum_objects : Proc(IOleItemContainer*, UInt32, IEnumUnknown*, HRESULT)
    lock_container : Proc(IOleItemContainer*, LibC::BOOL, HRESULT)
    get_object : Proc(IOleItemContainer*, LibC::LPWSTR, UInt32, IBindCtx, Guid*, Void**, HRESULT)
    get_object_storage : Proc(IOleItemContainer*, LibC::LPWSTR, IBindCtx, Guid*, Void**, HRESULT)
    is_running : Proc(IOleItemContainer*, LibC::LPWSTR, HRESULT)
  end

  struct IOleItemContainer
    lpVtbl : IOleItemContainerVTbl*
  end

  struct IOleInPlaceUIWindowVTbl
    query_interface : Proc(IOleInPlaceUIWindow*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleInPlaceUIWindow*, UInt32)
    release : Proc(IOleInPlaceUIWindow*, UInt32)
    get_window : Proc(IOleInPlaceUIWindow*, HANDLE*, HRESULT)
    context_sensitive_help : Proc(IOleInPlaceUIWindow*, LibC::BOOL, HRESULT)
    get_border : Proc(IOleInPlaceUIWindow*, RECT*, HRESULT)
    request_border_space : Proc(IOleInPlaceUIWindow*, RECT*, HRESULT)
    set_border_space : Proc(IOleInPlaceUIWindow*, RECT*, HRESULT)
    set_active_object : Proc(IOleInPlaceUIWindow*, IOleInPlaceActiveObject, LibC::LPWSTR, HRESULT)
  end

  struct IOleInPlaceUIWindow
    lpVtbl : IOleInPlaceUIWindowVTbl*
  end

  struct IOleInPlaceActiveObjectVTbl
    query_interface : Proc(IOleInPlaceActiveObject*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleInPlaceActiveObject*, UInt32)
    release : Proc(IOleInPlaceActiveObject*, UInt32)
    get_window : Proc(IOleInPlaceActiveObject*, HANDLE*, HRESULT)
    context_sensitive_help : Proc(IOleInPlaceActiveObject*, LibC::BOOL, HRESULT)
    translate_accelerator : Proc(IOleInPlaceActiveObject*, MSG*, HRESULT)
    on_frame_window_activate : Proc(IOleInPlaceActiveObject*, LibC::BOOL, HRESULT)
    on_doc_window_activate : Proc(IOleInPlaceActiveObject*, LibC::BOOL, HRESULT)
    resize_border : Proc(IOleInPlaceActiveObject*, RECT*, IOleInPlaceUIWindow, LibC::BOOL, HRESULT)
    enable_modeless : Proc(IOleInPlaceActiveObject*, LibC::BOOL, HRESULT)
  end

  struct IOleInPlaceActiveObject
    lpVtbl : IOleInPlaceActiveObjectVTbl*
  end

  struct IOleInPlaceFrameVTbl
    query_interface : Proc(IOleInPlaceFrame*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleInPlaceFrame*, UInt32)
    release : Proc(IOleInPlaceFrame*, UInt32)
    get_window : Proc(IOleInPlaceFrame*, HANDLE*, HRESULT)
    context_sensitive_help : Proc(IOleInPlaceFrame*, LibC::BOOL, HRESULT)
    get_border : Proc(IOleInPlaceFrame*, RECT*, HRESULT)
    request_border_space : Proc(IOleInPlaceFrame*, RECT*, HRESULT)
    set_border_space : Proc(IOleInPlaceFrame*, RECT*, HRESULT)
    set_active_object : Proc(IOleInPlaceFrame*, IOleInPlaceActiveObject, LibC::LPWSTR, HRESULT)
    insert_menus : Proc(IOleInPlaceFrame*, LibC::HANDLE, OleMenuGroupWidths*, HRESULT)
    set_menu : Proc(IOleInPlaceFrame*, LibC::HANDLE, LibC::IntPtrT, LibC::HANDLE, HRESULT)
    remove_menus : Proc(IOleInPlaceFrame*, LibC::HANDLE, HRESULT)
    set_status_text : Proc(IOleInPlaceFrame*, LibC::LPWSTR, HRESULT)
    enable_modeless : Proc(IOleInPlaceFrame*, LibC::BOOL, HRESULT)
    translate_accelerator : Proc(IOleInPlaceFrame*, MSG*, UInt16, HRESULT)
  end

  struct IOleInPlaceFrame
    lpVtbl : IOleInPlaceFrameVTbl*
  end

  struct IOleInPlaceObjectVTbl
    query_interface : Proc(IOleInPlaceObject*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleInPlaceObject*, UInt32)
    release : Proc(IOleInPlaceObject*, UInt32)
    get_window : Proc(IOleInPlaceObject*, HANDLE*, HRESULT)
    context_sensitive_help : Proc(IOleInPlaceObject*, LibC::BOOL, HRESULT)
    in_place_deactivate : Proc(IOleInPlaceObject*, HRESULT)
    ui_deactivate : Proc(IOleInPlaceObject*, HRESULT)
    set_object_rects : Proc(IOleInPlaceObject*, RECT*, RECT*, HRESULT)
    reactivate_and_undo : Proc(IOleInPlaceObject*, HRESULT)
  end

  struct IOleInPlaceObject
    lpVtbl : IOleInPlaceObjectVTbl*
  end

  struct IOleInPlaceSiteVTbl
    query_interface : Proc(IOleInPlaceSite*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleInPlaceSite*, UInt32)
    release : Proc(IOleInPlaceSite*, UInt32)
    get_window : Proc(IOleInPlaceSite*, HANDLE*, HRESULT)
    context_sensitive_help : Proc(IOleInPlaceSite*, LibC::BOOL, HRESULT)
    can_in_place_activate : Proc(IOleInPlaceSite*, HRESULT)
    on_in_place_activate : Proc(IOleInPlaceSite*, HRESULT)
    on_ui_activate : Proc(IOleInPlaceSite*, HRESULT)
    get_window_context : Proc(IOleInPlaceSite*, IOleInPlaceFrame*, IOleInPlaceUIWindow*, RECT*, RECT*, OIFI*, HRESULT)
    scroll : Proc(IOleInPlaceSite*, SIZE, HRESULT)
    on_ui_deactivate : Proc(IOleInPlaceSite*, LibC::BOOL, HRESULT)
    on_in_place_deactivate : Proc(IOleInPlaceSite*, HRESULT)
    discard_undo_state : Proc(IOleInPlaceSite*, HRESULT)
    deactivate_and_undo : Proc(IOleInPlaceSite*, HRESULT)
    on_pos_rect_change : Proc(IOleInPlaceSite*, RECT*, HRESULT)
  end

  struct IOleInPlaceSite
    lpVtbl : IOleInPlaceSiteVTbl*
  end

  struct IContinueVTbl
    query_interface : Proc(IContinue*, Guid*, Void**, HRESULT)
    add_ref : Proc(IContinue*, UInt32)
    release : Proc(IContinue*, UInt32)
    f_continue : Proc(IContinue*, HRESULT)
  end

  struct IContinue
    lpVtbl : IContinueVTbl*
  end

  struct IViewObjectVTbl
    query_interface : Proc(IViewObject*, Guid*, Void**, HRESULT)
    add_ref : Proc(IViewObject*, UInt32)
    release : Proc(IViewObject*, UInt32)
    draw : Proc(IViewObject*, UInt32, Int32, Void*, DVTARGETDEVICE*, HDC, HDC, RECTL*, RECTL*, LibC::IntPtrT, LibC::UINT_PTR, HRESULT)
    get_color_set : Proc(IViewObject*, UInt32, Int32, Void*, DVTARGETDEVICE*, HDC, LOGPALETTE**, HRESULT)
    freeze : Proc(IViewObject*, UInt32, Int32, Void*, UInt32*, HRESULT)
    unfreeze : Proc(IViewObject*, UInt32, HRESULT)
    set_advise : Proc(IViewObject*, UInt32, UInt32, IAdviseSink, HRESULT)
    get_advise : Proc(IViewObject*, UInt32*, UInt32*, IAdviseSink*, HRESULT)
  end

  struct IViewObject
    lpVtbl : IViewObjectVTbl*
  end

  struct IViewObject2VTbl
    query_interface : Proc(IViewObject2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IViewObject2*, UInt32)
    release : Proc(IViewObject2*, UInt32)
    draw : Proc(IViewObject2*, UInt32, Int32, Void*, DVTARGETDEVICE*, HDC, HDC, RECTL*, RECTL*, LibC::IntPtrT, LibC::UINT_PTR, HRESULT)
    get_color_set : Proc(IViewObject2*, UInt32, Int32, Void*, DVTARGETDEVICE*, HDC, LOGPALETTE**, HRESULT)
    freeze : Proc(IViewObject2*, UInt32, Int32, Void*, UInt32*, HRESULT)
    unfreeze : Proc(IViewObject2*, UInt32, HRESULT)
    set_advise : Proc(IViewObject2*, UInt32, UInt32, IAdviseSink, HRESULT)
    get_advise : Proc(IViewObject2*, UInt32*, UInt32*, IAdviseSink*, HRESULT)
    get_extent : Proc(IViewObject2*, UInt32, Int32, DVTARGETDEVICE*, SIZE*, HRESULT)
  end

  struct IViewObject2
    lpVtbl : IViewObject2VTbl*
  end

  struct IDropSourceVTbl
    query_interface : Proc(IDropSource*, Guid*, Void**, HRESULT)
    add_ref : Proc(IDropSource*, UInt32)
    release : Proc(IDropSource*, UInt32)
    query_continue_drag : Proc(IDropSource*, LibC::BOOL, UInt32, HRESULT)
    give_feedback : Proc(IDropSource*, UInt32, HRESULT)
  end

  struct IDropSource
    lpVtbl : IDropSourceVTbl*
  end

  struct IDropTargetVTbl
    query_interface : Proc(IDropTarget*, Guid*, Void**, HRESULT)
    add_ref : Proc(IDropTarget*, UInt32)
    release : Proc(IDropTarget*, UInt32)
    drag_enter : Proc(IDropTarget*, IDataObject, UInt32, POINTL, UInt32*, HRESULT)
    drag_over : Proc(IDropTarget*, UInt32, POINTL, UInt32*, HRESULT)
    drag_leave : Proc(IDropTarget*, HRESULT)
    drop : Proc(IDropTarget*, IDataObject, UInt32, POINTL, UInt32*, HRESULT)
  end

  struct IDropTarget
    lpVtbl : IDropTargetVTbl*
  end

  struct IDropSourceNotifyVTbl
    query_interface : Proc(IDropSourceNotify*, Guid*, Void**, HRESULT)
    add_ref : Proc(IDropSourceNotify*, UInt32)
    release : Proc(IDropSourceNotify*, UInt32)
    drag_enter_target : Proc(IDropSourceNotify*, LibC::HANDLE, HRESULT)
    drag_leave_target : Proc(IDropSourceNotify*, HRESULT)
  end

  struct IDropSourceNotify
    lpVtbl : IDropSourceNotifyVTbl*
  end

  struct IEnterpriseDropTargetVTbl
    query_interface : Proc(IEnterpriseDropTarget*, Guid*, Void**, HRESULT)
    add_ref : Proc(IEnterpriseDropTarget*, UInt32)
    release : Proc(IEnterpriseDropTarget*, UInt32)
    set_drop_source_enterprise_id : Proc(IEnterpriseDropTarget*, LibC::LPWSTR, HRESULT)
    is_evaluating_edp_policy : Proc(IEnterpriseDropTarget*, LibC::BOOL*, HRESULT)
  end

  struct IEnterpriseDropTarget
    lpVtbl : IEnterpriseDropTargetVTbl*
  end

  struct IEnumOLEVERBVTbl
    query_interface : Proc(IEnumOLEVERB*, Guid*, Void**, HRESULT)
    add_ref : Proc(IEnumOLEVERB*, UInt32)
    release : Proc(IEnumOLEVERB*, UInt32)
    next : Proc(IEnumOLEVERB*, UInt32, OLEVERB*, UInt32*, HRESULT)
    skip : Proc(IEnumOLEVERB*, UInt32, HRESULT)
    reset : Proc(IEnumOLEVERB*, HRESULT)
    clone : Proc(IEnumOLEVERB*, IEnumOLEVERB*, HRESULT)
  end

  struct IEnumOLEVERB
    lpVtbl : IEnumOLEVERBVTbl*
  end

  struct IClassFactory2VTbl
    query_interface : Proc(IClassFactory2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IClassFactory2*, UInt32)
    release : Proc(IClassFactory2*, UInt32)
    create_instance : Proc(IClassFactory2*, IUnknown, Guid*, Void**, HRESULT)
    lock_server : Proc(IClassFactory2*, LibC::BOOL, HRESULT)
    get_lic_info : Proc(IClassFactory2*, LICINFO*, HRESULT)
    request_lic_key : Proc(IClassFactory2*, UInt32, UInt8**, HRESULT)
    create_instance_lic : Proc(IClassFactory2*, IUnknown, IUnknown, Guid*, UInt8*, Void**, HRESULT)
  end

  struct IClassFactory2
    lpVtbl : IClassFactory2VTbl*
  end

  struct IProvideClassInfoVTbl
    query_interface : Proc(IProvideClassInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IProvideClassInfo*, UInt32)
    release : Proc(IProvideClassInfo*, UInt32)
    get_class_info : Proc(IProvideClassInfo*, ITypeInfo*, HRESULT)
  end

  struct IProvideClassInfo
    lpVtbl : IProvideClassInfoVTbl*
  end

  struct IProvideClassInfo2VTbl
    query_interface : Proc(IProvideClassInfo2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IProvideClassInfo2*, UInt32)
    release : Proc(IProvideClassInfo2*, UInt32)
    get_class_info : Proc(IProvideClassInfo2*, ITypeInfo*, HRESULT)
    get_guid : Proc(IProvideClassInfo2*, UInt32, Guid*, HRESULT)
  end

  struct IProvideClassInfo2
    lpVtbl : IProvideClassInfo2VTbl*
  end

  struct IProvideMultipleClassInfoVTbl
    query_interface : Proc(IProvideMultipleClassInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(IProvideMultipleClassInfo*, UInt32)
    release : Proc(IProvideMultipleClassInfo*, UInt32)
    get_class_info : Proc(IProvideMultipleClassInfo*, ITypeInfo*, HRESULT)
    get_guid : Proc(IProvideMultipleClassInfo*, UInt32, Guid*, HRESULT)
    get_multi_type_info_count : Proc(IProvideMultipleClassInfo*, UInt32*, HRESULT)
    get_info_of_index : Proc(IProvideMultipleClassInfo*, UInt32, MULTICLASSINFO_FLAGS, ITypeInfo*, UInt32*, UInt32*, Guid*, Guid*, HRESULT)
  end

  struct IProvideMultipleClassInfo
    lpVtbl : IProvideMultipleClassInfoVTbl*
  end

  struct IOleControlVTbl
    query_interface : Proc(IOleControl*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleControl*, UInt32)
    release : Proc(IOleControl*, UInt32)
    get_control_info : Proc(IOleControl*, CONTROLINFO*, HRESULT)
    on_mnemonic : Proc(IOleControl*, MSG*, HRESULT)
    on_ambient_property_change : Proc(IOleControl*, Int32, HRESULT)
    freeze_events : Proc(IOleControl*, LibC::BOOL, HRESULT)
  end

  struct IOleControl
    lpVtbl : IOleControlVTbl*
  end

  struct IOleControlSiteVTbl
    query_interface : Proc(IOleControlSite*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleControlSite*, UInt32)
    release : Proc(IOleControlSite*, UInt32)
    on_control_info_changed : Proc(IOleControlSite*, HRESULT)
    lock_in_place_active : Proc(IOleControlSite*, LibC::BOOL, HRESULT)
    get_extended_control : Proc(IOleControlSite*, IDispatch*, HRESULT)
    transform_coords : Proc(IOleControlSite*, POINTL*, POINTF*, XFORMCOORDS, HRESULT)
    translate_accelerator : Proc(IOleControlSite*, MSG*, UInt32, HRESULT)
    on_focus : Proc(IOleControlSite*, LibC::BOOL, HRESULT)
    show_property_frame : Proc(IOleControlSite*, HRESULT)
  end

  struct IOleControlSite
    lpVtbl : IOleControlSiteVTbl*
  end

  struct IPropertyPageVTbl
    query_interface : Proc(IPropertyPage*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPropertyPage*, UInt32)
    release : Proc(IPropertyPage*, UInt32)
    set_page_site : Proc(IPropertyPage*, IPropertyPageSite, HRESULT)
    activate : Proc(IPropertyPage*, LibC::HANDLE, RECT*, LibC::BOOL, HRESULT)
    deactivate : Proc(IPropertyPage*, HRESULT)
    get_page_info : Proc(IPropertyPage*, PROPPAGEINFO*, HRESULT)
    set_objects : Proc(IPropertyPage*, UInt32, IUnknown*, HRESULT)
    show : Proc(IPropertyPage*, UInt32, HRESULT)
    move : Proc(IPropertyPage*, RECT*, HRESULT)
    is_page_dirty : Proc(IPropertyPage*, HRESULT)
    apply : Proc(IPropertyPage*, HRESULT)
    help : Proc(IPropertyPage*, LibC::LPWSTR, HRESULT)
    translate_accelerator : Proc(IPropertyPage*, MSG*, HRESULT)
  end

  struct IPropertyPage
    lpVtbl : IPropertyPageVTbl*
  end

  struct IPropertyPage2VTbl
    query_interface : Proc(IPropertyPage2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPropertyPage2*, UInt32)
    release : Proc(IPropertyPage2*, UInt32)
    set_page_site : Proc(IPropertyPage2*, IPropertyPageSite, HRESULT)
    activate : Proc(IPropertyPage2*, LibC::HANDLE, RECT*, LibC::BOOL, HRESULT)
    deactivate : Proc(IPropertyPage2*, HRESULT)
    get_page_info : Proc(IPropertyPage2*, PROPPAGEINFO*, HRESULT)
    set_objects : Proc(IPropertyPage2*, UInt32, IUnknown*, HRESULT)
    show : Proc(IPropertyPage2*, UInt32, HRESULT)
    move : Proc(IPropertyPage2*, RECT*, HRESULT)
    is_page_dirty : Proc(IPropertyPage2*, HRESULT)
    apply : Proc(IPropertyPage2*, HRESULT)
    help : Proc(IPropertyPage2*, LibC::LPWSTR, HRESULT)
    translate_accelerator : Proc(IPropertyPage2*, MSG*, HRESULT)
    edit_property : Proc(IPropertyPage2*, Int32, HRESULT)
  end

  struct IPropertyPage2
    lpVtbl : IPropertyPage2VTbl*
  end

  struct IPropertyPageSiteVTbl
    query_interface : Proc(IPropertyPageSite*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPropertyPageSite*, UInt32)
    release : Proc(IPropertyPageSite*, UInt32)
    on_status_change : Proc(IPropertyPageSite*, PROPPAGESTATUS, HRESULT)
    get_locale_id : Proc(IPropertyPageSite*, UInt32*, HRESULT)
    get_page_container : Proc(IPropertyPageSite*, IUnknown*, HRESULT)
    translate_accelerator : Proc(IPropertyPageSite*, MSG*, HRESULT)
  end

  struct IPropertyPageSite
    lpVtbl : IPropertyPageSiteVTbl*
  end

  struct IPropertyNotifySinkVTbl
    query_interface : Proc(IPropertyNotifySink*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPropertyNotifySink*, UInt32)
    release : Proc(IPropertyNotifySink*, UInt32)
    on_changed : Proc(IPropertyNotifySink*, Int32, HRESULT)
    on_request_edit : Proc(IPropertyNotifySink*, Int32, HRESULT)
  end

  struct IPropertyNotifySink
    lpVtbl : IPropertyNotifySinkVTbl*
  end

  struct ISpecifyPropertyPagesVTbl
    query_interface : Proc(ISpecifyPropertyPages*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISpecifyPropertyPages*, UInt32)
    release : Proc(ISpecifyPropertyPages*, UInt32)
    get_pages : Proc(ISpecifyPropertyPages*, CAUUID*, HRESULT)
  end

  struct ISpecifyPropertyPages
    lpVtbl : ISpecifyPropertyPagesVTbl*
  end

  struct IPersistPropertyBagVTbl
    query_interface : Proc(IPersistPropertyBag*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPersistPropertyBag*, UInt32)
    release : Proc(IPersistPropertyBag*, UInt32)
    get_class_id : Proc(IPersistPropertyBag*, Guid*, HRESULT)
    init_new : Proc(IPersistPropertyBag*, HRESULT)
    load : Proc(IPersistPropertyBag*, IPropertyBag, IErrorLog, HRESULT)
    save : Proc(IPersistPropertyBag*, IPropertyBag, LibC::BOOL, LibC::BOOL, HRESULT)
  end

  struct IPersistPropertyBag
    lpVtbl : IPersistPropertyBagVTbl*
  end

  struct ISimpleFrameSiteVTbl
    query_interface : Proc(ISimpleFrameSite*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISimpleFrameSite*, UInt32)
    release : Proc(ISimpleFrameSite*, UInt32)
    pre_message_filter : Proc(ISimpleFrameSite*, LibC::HANDLE, UInt32, LibC::UINT_PTR, LPARAM, LRESULT*, UInt32*, HRESULT)
    post_message_filter : Proc(ISimpleFrameSite*, LibC::HANDLE, UInt32, LibC::UINT_PTR, LPARAM, LRESULT*, UInt32, HRESULT)
  end

  struct ISimpleFrameSite
    lpVtbl : ISimpleFrameSiteVTbl*
  end

  struct IFontVTbl
    query_interface : Proc(IFont*, Guid*, Void**, HRESULT)
    add_ref : Proc(IFont*, UInt32)
    release : Proc(IFont*, UInt32)
    get_name : Proc(IFont*, UInt8**, HRESULT)
    put_name : Proc(IFont*, UInt8*, HRESULT)
    get_size : Proc(IFont*, CY*, HRESULT)
    put_size : Proc(IFont*, CY, HRESULT)
    get_bold : Proc(IFont*, LibC::BOOL*, HRESULT)
    put_bold : Proc(IFont*, LibC::BOOL, HRESULT)
    get_italic : Proc(IFont*, LibC::BOOL*, HRESULT)
    put_italic : Proc(IFont*, LibC::BOOL, HRESULT)
    get_underline : Proc(IFont*, LibC::BOOL*, HRESULT)
    put_underline : Proc(IFont*, LibC::BOOL, HRESULT)
    get_strikethrough : Proc(IFont*, LibC::BOOL*, HRESULT)
    put_strikethrough : Proc(IFont*, LibC::BOOL, HRESULT)
    get_weight : Proc(IFont*, Int16*, HRESULT)
    put_weight : Proc(IFont*, Int16, HRESULT)
    get_charset : Proc(IFont*, Int16*, HRESULT)
    put_charset : Proc(IFont*, Int16, HRESULT)
    get_h_font : Proc(IFont*, HFONT*, HRESULT)
    clone : Proc(IFont*, IFont*, HRESULT)
    is_equal : Proc(IFont*, IFont, HRESULT)
    set_ratio : Proc(IFont*, Int32, Int32, HRESULT)
    query_text_metrics : Proc(IFont*, TEXTMETRICW*, HRESULT)
    add_ref_hfont : Proc(IFont*, HFONT, HRESULT)
    release_hfont : Proc(IFont*, HFONT, HRESULT)
    set_hdc : Proc(IFont*, HDC, HRESULT)
  end

  struct IFont
    lpVtbl : IFontVTbl*
  end

  struct IPictureVTbl
    query_interface : Proc(IPicture*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPicture*, UInt32)
    release : Proc(IPicture*, UInt32)
    get_handle : Proc(IPicture*, UInt32*, HRESULT)
    get_h_pal : Proc(IPicture*, UInt32*, HRESULT)
    get_type : Proc(IPicture*, Int16*, HRESULT)
    get_width : Proc(IPicture*, Int32*, HRESULT)
    get_height : Proc(IPicture*, Int32*, HRESULT)
    render : Proc(IPicture*, HDC, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, RECT*, HRESULT)
    set_h_pal : Proc(IPicture*, UInt32, HRESULT)
    get_cur_dc : Proc(IPicture*, HDC*, HRESULT)
    select_picture : Proc(IPicture*, HDC, HDC*, UInt32*, HRESULT)
    get_keep_original_format : Proc(IPicture*, LibC::BOOL*, HRESULT)
    put_keep_original_format : Proc(IPicture*, LibC::BOOL, HRESULT)
    picture_changed : Proc(IPicture*, HRESULT)
    save_as_file : Proc(IPicture*, IStream, LibC::BOOL, Int32*, HRESULT)
    get_attributes : Proc(IPicture*, UInt32*, HRESULT)
  end

  struct IPicture
    lpVtbl : IPictureVTbl*
  end

  struct IPicture2VTbl
    query_interface : Proc(IPicture2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPicture2*, UInt32)
    release : Proc(IPicture2*, UInt32)
    get_handle : Proc(IPicture2*, LibC::UINT_PTR*, HRESULT)
    get_h_pal : Proc(IPicture2*, LibC::UINT_PTR*, HRESULT)
    get_type : Proc(IPicture2*, Int16*, HRESULT)
    get_width : Proc(IPicture2*, Int32*, HRESULT)
    get_height : Proc(IPicture2*, Int32*, HRESULT)
    render : Proc(IPicture2*, HDC, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, RECT*, HRESULT)
    set_h_pal : Proc(IPicture2*, LibC::UINT_PTR, HRESULT)
    get_cur_dc : Proc(IPicture2*, HDC*, HRESULT)
    select_picture : Proc(IPicture2*, HDC, HDC*, LibC::UINT_PTR*, HRESULT)
    get_keep_original_format : Proc(IPicture2*, LibC::BOOL*, HRESULT)
    put_keep_original_format : Proc(IPicture2*, LibC::BOOL, HRESULT)
    picture_changed : Proc(IPicture2*, HRESULT)
    save_as_file : Proc(IPicture2*, IStream, LibC::BOOL, Int32*, HRESULT)
    get_attributes : Proc(IPicture2*, UInt32*, HRESULT)
  end

  struct IPicture2
    lpVtbl : IPicture2VTbl*
  end

  struct IFontEventsDispVTbl
    query_interface : Proc(IFontEventsDisp*, Guid*, Void**, HRESULT)
    add_ref : Proc(IFontEventsDisp*, UInt32)
    release : Proc(IFontEventsDisp*, UInt32)
    get_type_info_count : Proc(IFontEventsDisp*, UInt32*, HRESULT)
    get_type_info : Proc(IFontEventsDisp*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IFontEventsDisp*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IFontEventsDisp*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
  end

  struct IFontEventsDisp
    lpVtbl : IFontEventsDispVTbl*
  end

  struct IFontDispVTbl
    query_interface : Proc(IFontDisp*, Guid*, Void**, HRESULT)
    add_ref : Proc(IFontDisp*, UInt32)
    release : Proc(IFontDisp*, UInt32)
    get_type_info_count : Proc(IFontDisp*, UInt32*, HRESULT)
    get_type_info : Proc(IFontDisp*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IFontDisp*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IFontDisp*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
  end

  struct IFontDisp
    lpVtbl : IFontDispVTbl*
  end

  struct IPictureDispVTbl
    query_interface : Proc(IPictureDisp*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPictureDisp*, UInt32)
    release : Proc(IPictureDisp*, UInt32)
    get_type_info_count : Proc(IPictureDisp*, UInt32*, HRESULT)
    get_type_info : Proc(IPictureDisp*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IPictureDisp*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IPictureDisp*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
  end

  struct IPictureDisp
    lpVtbl : IPictureDispVTbl*
  end

  struct IOleInPlaceObjectWindowlessVTbl
    query_interface : Proc(IOleInPlaceObjectWindowless*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleInPlaceObjectWindowless*, UInt32)
    release : Proc(IOleInPlaceObjectWindowless*, UInt32)
    get_window : Proc(IOleInPlaceObjectWindowless*, HANDLE*, HRESULT)
    context_sensitive_help : Proc(IOleInPlaceObjectWindowless*, LibC::BOOL, HRESULT)
    in_place_deactivate : Proc(IOleInPlaceObjectWindowless*, HRESULT)
    ui_deactivate : Proc(IOleInPlaceObjectWindowless*, HRESULT)
    set_object_rects : Proc(IOleInPlaceObjectWindowless*, RECT*, RECT*, HRESULT)
    reactivate_and_undo : Proc(IOleInPlaceObjectWindowless*, HRESULT)
    on_window_message : Proc(IOleInPlaceObjectWindowless*, UInt32, LibC::UINT_PTR, LPARAM, LRESULT*, HRESULT)
    get_drop_target : Proc(IOleInPlaceObjectWindowless*, IDropTarget*, HRESULT)
  end

  struct IOleInPlaceObjectWindowless
    lpVtbl : IOleInPlaceObjectWindowlessVTbl*
  end

  struct IOleInPlaceSiteExVTbl
    query_interface : Proc(IOleInPlaceSiteEx*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleInPlaceSiteEx*, UInt32)
    release : Proc(IOleInPlaceSiteEx*, UInt32)
    get_window : Proc(IOleInPlaceSiteEx*, HANDLE*, HRESULT)
    context_sensitive_help : Proc(IOleInPlaceSiteEx*, LibC::BOOL, HRESULT)
    can_in_place_activate : Proc(IOleInPlaceSiteEx*, HRESULT)
    on_in_place_activate : Proc(IOleInPlaceSiteEx*, HRESULT)
    on_ui_activate : Proc(IOleInPlaceSiteEx*, HRESULT)
    get_window_context : Proc(IOleInPlaceSiteEx*, IOleInPlaceFrame*, IOleInPlaceUIWindow*, RECT*, RECT*, OIFI*, HRESULT)
    scroll : Proc(IOleInPlaceSiteEx*, SIZE, HRESULT)
    on_ui_deactivate : Proc(IOleInPlaceSiteEx*, LibC::BOOL, HRESULT)
    on_in_place_deactivate : Proc(IOleInPlaceSiteEx*, HRESULT)
    discard_undo_state : Proc(IOleInPlaceSiteEx*, HRESULT)
    deactivate_and_undo : Proc(IOleInPlaceSiteEx*, HRESULT)
    on_pos_rect_change : Proc(IOleInPlaceSiteEx*, RECT*, HRESULT)
    on_in_place_activate_ex : Proc(IOleInPlaceSiteEx*, LibC::BOOL*, UInt32, HRESULT)
    on_in_place_deactivate_ex : Proc(IOleInPlaceSiteEx*, LibC::BOOL, HRESULT)
    request_ui_activate : Proc(IOleInPlaceSiteEx*, HRESULT)
  end

  struct IOleInPlaceSiteEx
    lpVtbl : IOleInPlaceSiteExVTbl*
  end

  struct IOleInPlaceSiteWindowlessVTbl
    query_interface : Proc(IOleInPlaceSiteWindowless*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleInPlaceSiteWindowless*, UInt32)
    release : Proc(IOleInPlaceSiteWindowless*, UInt32)
    get_window : Proc(IOleInPlaceSiteWindowless*, HANDLE*, HRESULT)
    context_sensitive_help : Proc(IOleInPlaceSiteWindowless*, LibC::BOOL, HRESULT)
    can_in_place_activate : Proc(IOleInPlaceSiteWindowless*, HRESULT)
    on_in_place_activate : Proc(IOleInPlaceSiteWindowless*, HRESULT)
    on_ui_activate : Proc(IOleInPlaceSiteWindowless*, HRESULT)
    get_window_context : Proc(IOleInPlaceSiteWindowless*, IOleInPlaceFrame*, IOleInPlaceUIWindow*, RECT*, RECT*, OIFI*, HRESULT)
    scroll : Proc(IOleInPlaceSiteWindowless*, SIZE, HRESULT)
    on_ui_deactivate : Proc(IOleInPlaceSiteWindowless*, LibC::BOOL, HRESULT)
    on_in_place_deactivate : Proc(IOleInPlaceSiteWindowless*, HRESULT)
    discard_undo_state : Proc(IOleInPlaceSiteWindowless*, HRESULT)
    deactivate_and_undo : Proc(IOleInPlaceSiteWindowless*, HRESULT)
    on_pos_rect_change : Proc(IOleInPlaceSiteWindowless*, RECT*, HRESULT)
    on_in_place_activate_ex : Proc(IOleInPlaceSiteWindowless*, LibC::BOOL*, UInt32, HRESULT)
    on_in_place_deactivate_ex : Proc(IOleInPlaceSiteWindowless*, LibC::BOOL, HRESULT)
    request_ui_activate : Proc(IOleInPlaceSiteWindowless*, HRESULT)
    can_windowless_activate : Proc(IOleInPlaceSiteWindowless*, HRESULT)
    get_capture : Proc(IOleInPlaceSiteWindowless*, HRESULT)
    set_capture : Proc(IOleInPlaceSiteWindowless*, LibC::BOOL, HRESULT)
    get_focus : Proc(IOleInPlaceSiteWindowless*, HRESULT)
    set_focus : Proc(IOleInPlaceSiteWindowless*, LibC::BOOL, HRESULT)
    get_dc : Proc(IOleInPlaceSiteWindowless*, RECT*, UInt32, HDC*, HRESULT)
    release_dc : Proc(IOleInPlaceSiteWindowless*, HDC, HRESULT)
    invalidate_rect : Proc(IOleInPlaceSiteWindowless*, RECT*, LibC::BOOL, HRESULT)
    invalidate_rgn : Proc(IOleInPlaceSiteWindowless*, HRGN, LibC::BOOL, HRESULT)
    scroll_rect : Proc(IOleInPlaceSiteWindowless*, Int32, Int32, RECT*, RECT*, HRESULT)
    adjust_rect : Proc(IOleInPlaceSiteWindowless*, RECT*, HRESULT)
    on_def_window_message : Proc(IOleInPlaceSiteWindowless*, UInt32, LibC::UINT_PTR, LPARAM, LRESULT*, HRESULT)
  end

  struct IOleInPlaceSiteWindowless
    lpVtbl : IOleInPlaceSiteWindowlessVTbl*
  end

  struct IViewObjectExVTbl
    query_interface : Proc(IViewObjectEx*, Guid*, Void**, HRESULT)
    add_ref : Proc(IViewObjectEx*, UInt32)
    release : Proc(IViewObjectEx*, UInt32)
    draw : Proc(IViewObjectEx*, UInt32, Int32, Void*, DVTARGETDEVICE*, HDC, HDC, RECTL*, RECTL*, LibC::IntPtrT, LibC::UINT_PTR, HRESULT)
    get_color_set : Proc(IViewObjectEx*, UInt32, Int32, Void*, DVTARGETDEVICE*, HDC, LOGPALETTE**, HRESULT)
    freeze : Proc(IViewObjectEx*, UInt32, Int32, Void*, UInt32*, HRESULT)
    unfreeze : Proc(IViewObjectEx*, UInt32, HRESULT)
    set_advise : Proc(IViewObjectEx*, UInt32, UInt32, IAdviseSink, HRESULT)
    get_advise : Proc(IViewObjectEx*, UInt32*, UInt32*, IAdviseSink*, HRESULT)
    get_extent : Proc(IViewObjectEx*, UInt32, Int32, DVTARGETDEVICE*, SIZE*, HRESULT)
    get_rect : Proc(IViewObjectEx*, UInt32, RECTL*, HRESULT)
    get_view_status : Proc(IViewObjectEx*, UInt32*, HRESULT)
    query_hit_point : Proc(IViewObjectEx*, UInt32, RECT*, POINT, Int32, UInt32*, HRESULT)
    query_hit_rect : Proc(IViewObjectEx*, UInt32, RECT*, RECT*, Int32, UInt32*, HRESULT)
    get_natural_extent : Proc(IViewObjectEx*, DVASPECT, Int32, DVTARGETDEVICE*, HDC, ExtentInfo*, SIZE*, HRESULT)
  end

  struct IViewObjectEx
    lpVtbl : IViewObjectExVTbl*
  end

  struct IOleUndoUnitVTbl
    query_interface : Proc(IOleUndoUnit*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleUndoUnit*, UInt32)
    release : Proc(IOleUndoUnit*, UInt32)
    do : Proc(IOleUndoUnit*, IOleUndoManager, HRESULT)
    get_description : Proc(IOleUndoUnit*, UInt8**, HRESULT)
    get_unit_type : Proc(IOleUndoUnit*, Guid*, Int32*, HRESULT)
    on_next_add : Proc(IOleUndoUnit*, HRESULT)
  end

  struct IOleUndoUnit
    lpVtbl : IOleUndoUnitVTbl*
  end

  struct IOleParentUndoUnitVTbl
    query_interface : Proc(IOleParentUndoUnit*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleParentUndoUnit*, UInt32)
    release : Proc(IOleParentUndoUnit*, UInt32)
    do : Proc(IOleParentUndoUnit*, IOleUndoManager, HRESULT)
    get_description : Proc(IOleParentUndoUnit*, UInt8**, HRESULT)
    get_unit_type : Proc(IOleParentUndoUnit*, Guid*, Int32*, HRESULT)
    on_next_add : Proc(IOleParentUndoUnit*, HRESULT)
    open : Proc(IOleParentUndoUnit*, IOleParentUndoUnit, HRESULT)
    close : Proc(IOleParentUndoUnit*, IOleParentUndoUnit, LibC::BOOL, HRESULT)
    add : Proc(IOleParentUndoUnit*, IOleUndoUnit, HRESULT)
    find_unit : Proc(IOleParentUndoUnit*, IOleUndoUnit, HRESULT)
    get_parent_state : Proc(IOleParentUndoUnit*, UInt32*, HRESULT)
  end

  struct IOleParentUndoUnit
    lpVtbl : IOleParentUndoUnitVTbl*
  end

  struct IEnumOleUndoUnitsVTbl
    query_interface : Proc(IEnumOleUndoUnits*, Guid*, Void**, HRESULT)
    add_ref : Proc(IEnumOleUndoUnits*, UInt32)
    release : Proc(IEnumOleUndoUnits*, UInt32)
    next : Proc(IEnumOleUndoUnits*, UInt32, IOleUndoUnit*, UInt32*, HRESULT)
    skip : Proc(IEnumOleUndoUnits*, UInt32, HRESULT)
    reset : Proc(IEnumOleUndoUnits*, HRESULT)
    clone : Proc(IEnumOleUndoUnits*, IEnumOleUndoUnits*, HRESULT)
  end

  struct IEnumOleUndoUnits
    lpVtbl : IEnumOleUndoUnitsVTbl*
  end

  struct IOleUndoManagerVTbl
    query_interface : Proc(IOleUndoManager*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleUndoManager*, UInt32)
    release : Proc(IOleUndoManager*, UInt32)
    open : Proc(IOleUndoManager*, IOleParentUndoUnit, HRESULT)
    close : Proc(IOleUndoManager*, IOleParentUndoUnit, LibC::BOOL, HRESULT)
    add : Proc(IOleUndoManager*, IOleUndoUnit, HRESULT)
    get_open_parent_state : Proc(IOleUndoManager*, UInt32*, HRESULT)
    discard_from : Proc(IOleUndoManager*, IOleUndoUnit, HRESULT)
    undo_to : Proc(IOleUndoManager*, IOleUndoUnit, HRESULT)
    redo_to : Proc(IOleUndoManager*, IOleUndoUnit, HRESULT)
    enum_undoable : Proc(IOleUndoManager*, IEnumOleUndoUnits*, HRESULT)
    enum_redoable : Proc(IOleUndoManager*, IEnumOleUndoUnits*, HRESULT)
    get_last_undo_description : Proc(IOleUndoManager*, UInt8**, HRESULT)
    get_last_redo_description : Proc(IOleUndoManager*, UInt8**, HRESULT)
    enable : Proc(IOleUndoManager*, LibC::BOOL, HRESULT)
  end

  struct IOleUndoManager
    lpVtbl : IOleUndoManagerVTbl*
  end

  struct IPointerInactiveVTbl
    query_interface : Proc(IPointerInactive*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPointerInactive*, UInt32)
    release : Proc(IPointerInactive*, UInt32)
    get_activation_policy : Proc(IPointerInactive*, UInt32*, HRESULT)
    on_inactive_mouse_move : Proc(IPointerInactive*, RECT*, Int32, Int32, UInt32, HRESULT)
    on_inactive_set_cursor : Proc(IPointerInactive*, RECT*, Int32, Int32, UInt32, LibC::BOOL, HRESULT)
  end

  struct IPointerInactive
    lpVtbl : IPointerInactiveVTbl*
  end

  struct IObjectWithSiteVTbl
    query_interface : Proc(IObjectWithSite*, Guid*, Void**, HRESULT)
    add_ref : Proc(IObjectWithSite*, UInt32)
    release : Proc(IObjectWithSite*, UInt32)
    set_site : Proc(IObjectWithSite*, IUnknown, HRESULT)
    get_site : Proc(IObjectWithSite*, Guid*, Void**, HRESULT)
  end

  struct IObjectWithSite
    lpVtbl : IObjectWithSiteVTbl*
  end

  struct IPerPropertyBrowsingVTbl
    query_interface : Proc(IPerPropertyBrowsing*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPerPropertyBrowsing*, UInt32)
    release : Proc(IPerPropertyBrowsing*, UInt32)
    get_display_string : Proc(IPerPropertyBrowsing*, Int32, UInt8**, HRESULT)
    map_property_to_page : Proc(IPerPropertyBrowsing*, Int32, Guid*, HRESULT)
    get_predefined_strings : Proc(IPerPropertyBrowsing*, Int32, CALPOLESTR*, CADWORD*, HRESULT)
    get_predefined_value : Proc(IPerPropertyBrowsing*, Int32, UInt32, VARIANT*, HRESULT)
  end

  struct IPerPropertyBrowsing
    lpVtbl : IPerPropertyBrowsingVTbl*
  end

  struct IPersistPropertyBag2VTbl
    query_interface : Proc(IPersistPropertyBag2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPersistPropertyBag2*, UInt32)
    release : Proc(IPersistPropertyBag2*, UInt32)
    get_class_id : Proc(IPersistPropertyBag2*, Guid*, HRESULT)
    init_new : Proc(IPersistPropertyBag2*, HRESULT)
    load : Proc(IPersistPropertyBag2*, IPropertyBag2, IErrorLog, HRESULT)
    save : Proc(IPersistPropertyBag2*, IPropertyBag2, LibC::BOOL, LibC::BOOL, HRESULT)
    is_dirty : Proc(IPersistPropertyBag2*, HRESULT)
  end

  struct IPersistPropertyBag2
    lpVtbl : IPersistPropertyBag2VTbl*
  end

  struct IAdviseSinkExVTbl
    query_interface : Proc(IAdviseSinkEx*, Guid*, Void**, HRESULT)
    add_ref : Proc(IAdviseSinkEx*, UInt32)
    release : Proc(IAdviseSinkEx*, UInt32)
    on_data_change : Proc(IAdviseSinkEx*, FORMATETC*, STGMEDIUM*, Void)
    on_view_change : Proc(IAdviseSinkEx*, UInt32, Int32, Void)
    on_rename : Proc(IAdviseSinkEx*, IMoniker, Void)
    on_save : Proc(IAdviseSinkEx*, Void)
    on_close : Proc(IAdviseSinkEx*, Void)
    on_view_status_change : Proc(IAdviseSinkEx*, UInt32, Void)
  end

  struct IAdviseSinkEx
    lpVtbl : IAdviseSinkExVTbl*
  end

  struct IQuickActivateVTbl
    query_interface : Proc(IQuickActivate*, Guid*, Void**, HRESULT)
    add_ref : Proc(IQuickActivate*, UInt32)
    release : Proc(IQuickActivate*, UInt32)
    quick_activate : Proc(IQuickActivate*, QACONTAINER*, QACONTROL*, HRESULT)
    set_content_extent : Proc(IQuickActivate*, SIZE*, HRESULT)
    get_content_extent : Proc(IQuickActivate*, SIZE*, HRESULT)
  end

  struct IQuickActivate
    lpVtbl : IQuickActivateVTbl*
  end

  struct IVBGetControlVTbl
    query_interface : Proc(IVBGetControl*, Guid*, Void**, HRESULT)
    add_ref : Proc(IVBGetControl*, UInt32)
    release : Proc(IVBGetControl*, UInt32)
    enum_controls : Proc(IVBGetControl*, OLECONTF, ENUM_CONTROLS_WHICH_FLAGS, IEnumUnknown*, HRESULT)
  end

  struct IVBGetControl
    lpVtbl : IVBGetControlVTbl*
  end

  struct IGetOleObjectVTbl
    query_interface : Proc(IGetOleObject*, Guid*, Void**, HRESULT)
    add_ref : Proc(IGetOleObject*, UInt32)
    release : Proc(IGetOleObject*, UInt32)
    get_ole_object : Proc(IGetOleObject*, Guid*, Void**, HRESULT)
  end

  struct IGetOleObject
    lpVtbl : IGetOleObjectVTbl*
  end

  struct IVBFormatVTbl
    query_interface : Proc(IVBFormat*, Guid*, Void**, HRESULT)
    add_ref : Proc(IVBFormat*, UInt32)
    release : Proc(IVBFormat*, UInt32)
    format : Proc(IVBFormat*, VARIANT*, UInt8*, Void*, UInt16, Int32, Int16, UInt16, UInt16*, HRESULT)
  end

  struct IVBFormat
    lpVtbl : IVBFormatVTbl*
  end

  struct IGetVBAObjectVTbl
    query_interface : Proc(IGetVBAObject*, Guid*, Void**, HRESULT)
    add_ref : Proc(IGetVBAObject*, UInt32)
    release : Proc(IGetVBAObject*, UInt32)
    get_object : Proc(IGetVBAObject*, Guid*, Void**, UInt32, HRESULT)
  end

  struct IGetVBAObject
    lpVtbl : IGetVBAObjectVTbl*
  end

  struct IOleDocumentVTbl
    query_interface : Proc(IOleDocument*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleDocument*, UInt32)
    release : Proc(IOleDocument*, UInt32)
    create_view : Proc(IOleDocument*, IOleInPlaceSite, IStream, UInt32, IOleDocumentView*, HRESULT)
    get_doc_misc_status : Proc(IOleDocument*, UInt32*, HRESULT)
    enum_views : Proc(IOleDocument*, IEnumOleDocumentViews*, IOleDocumentView*, HRESULT)
  end

  struct IOleDocument
    lpVtbl : IOleDocumentVTbl*
  end

  struct IOleDocumentSiteVTbl
    query_interface : Proc(IOleDocumentSite*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleDocumentSite*, UInt32)
    release : Proc(IOleDocumentSite*, UInt32)
    activate_me : Proc(IOleDocumentSite*, IOleDocumentView, HRESULT)
  end

  struct IOleDocumentSite
    lpVtbl : IOleDocumentSiteVTbl*
  end

  struct IOleDocumentViewVTbl
    query_interface : Proc(IOleDocumentView*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleDocumentView*, UInt32)
    release : Proc(IOleDocumentView*, UInt32)
    set_in_place_site : Proc(IOleDocumentView*, IOleInPlaceSite, HRESULT)
    get_in_place_site : Proc(IOleDocumentView*, IOleInPlaceSite*, HRESULT)
    get_document : Proc(IOleDocumentView*, IUnknown*, HRESULT)
    set_rect : Proc(IOleDocumentView*, RECT*, HRESULT)
    get_rect : Proc(IOleDocumentView*, RECT*, HRESULT)
    set_rect_complex : Proc(IOleDocumentView*, RECT*, RECT*, RECT*, RECT*, HRESULT)
    show : Proc(IOleDocumentView*, LibC::BOOL, HRESULT)
    ui_activate : Proc(IOleDocumentView*, LibC::BOOL, HRESULT)
    open : Proc(IOleDocumentView*, HRESULT)
    close_view : Proc(IOleDocumentView*, UInt32, HRESULT)
    save_view_state : Proc(IOleDocumentView*, IStream, HRESULT)
    apply_view_state : Proc(IOleDocumentView*, IStream, HRESULT)
    clone : Proc(IOleDocumentView*, IOleInPlaceSite, IOleDocumentView*, HRESULT)
  end

  struct IOleDocumentView
    lpVtbl : IOleDocumentViewVTbl*
  end

  struct IEnumOleDocumentViewsVTbl
    query_interface : Proc(IEnumOleDocumentViews*, Guid*, Void**, HRESULT)
    add_ref : Proc(IEnumOleDocumentViews*, UInt32)
    release : Proc(IEnumOleDocumentViews*, UInt32)
    next : Proc(IEnumOleDocumentViews*, UInt32, IOleDocumentView*, UInt32*, HRESULT)
    skip : Proc(IEnumOleDocumentViews*, UInt32, HRESULT)
    reset : Proc(IEnumOleDocumentViews*, HRESULT)
    clone : Proc(IEnumOleDocumentViews*, IEnumOleDocumentViews*, HRESULT)
  end

  struct IEnumOleDocumentViews
    lpVtbl : IEnumOleDocumentViewsVTbl*
  end

  struct IContinueCallbackVTbl
    query_interface : Proc(IContinueCallback*, Guid*, Void**, HRESULT)
    add_ref : Proc(IContinueCallback*, UInt32)
    release : Proc(IContinueCallback*, UInt32)
    f_continue : Proc(IContinueCallback*, HRESULT)
    f_continue_printing : Proc(IContinueCallback*, Int32, Int32, LibC::LPWSTR, HRESULT)
  end

  struct IContinueCallback
    lpVtbl : IContinueCallbackVTbl*
  end

  struct IPrintVTbl
    query_interface : Proc(IPrint*, Guid*, Void**, HRESULT)
    add_ref : Proc(IPrint*, UInt32)
    release : Proc(IPrint*, UInt32)
    set_initial_page_num : Proc(IPrint*, Int32, HRESULT)
    get_page_info : Proc(IPrint*, Int32*, Int32*, HRESULT)
    print : Proc(IPrint*, UInt32, DVTARGETDEVICE**, PAGESET**, STGMEDIUM*, IContinueCallback, Int32, Int32*, Int32*, HRESULT)
  end

  struct IPrint
    lpVtbl : IPrintVTbl*
  end

  struct IOleCommandTargetVTbl
    query_interface : Proc(IOleCommandTarget*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleCommandTarget*, UInt32)
    release : Proc(IOleCommandTarget*, UInt32)
    query_status : Proc(IOleCommandTarget*, Guid*, UInt32, OLECMD*, OLECMDTEXT*, HRESULT)
    exec : Proc(IOleCommandTarget*, Guid*, UInt32, UInt32, VARIANT*, VARIANT*, HRESULT)
  end

  struct IOleCommandTarget
    lpVtbl : IOleCommandTargetVTbl*
  end

  struct IZoomEventsVTbl
    query_interface : Proc(IZoomEvents*, Guid*, Void**, HRESULT)
    add_ref : Proc(IZoomEvents*, UInt32)
    release : Proc(IZoomEvents*, UInt32)
    on_zoom_percent_changed : Proc(IZoomEvents*, UInt32, HRESULT)
  end

  struct IZoomEvents
    lpVtbl : IZoomEventsVTbl*
  end

  struct IProtectFocusVTbl
    query_interface : Proc(IProtectFocus*, Guid*, Void**, HRESULT)
    add_ref : Proc(IProtectFocus*, UInt32)
    release : Proc(IProtectFocus*, UInt32)
    allow_focus_change : Proc(IProtectFocus*, LibC::BOOL*, HRESULT)
  end

  struct IProtectFocus
    lpVtbl : IProtectFocusVTbl*
  end

  struct IProtectedModeMenuServicesVTbl
    query_interface : Proc(IProtectedModeMenuServices*, Guid*, Void**, HRESULT)
    add_ref : Proc(IProtectedModeMenuServices*, UInt32)
    release : Proc(IProtectedModeMenuServices*, UInt32)
    create_menu : Proc(IProtectedModeMenuServices*, HANDLE*, HRESULT)
    load_menu : Proc(IProtectedModeMenuServices*, LibC::LPWSTR, LibC::LPWSTR, HANDLE*, HRESULT)
    load_menu_id : Proc(IProtectedModeMenuServices*, LibC::LPWSTR, UInt16, HANDLE*, HRESULT)
  end

  struct IProtectedModeMenuServices
    lpVtbl : IProtectedModeMenuServicesVTbl*
  end

  struct IOleUILinkContainerWVTbl
    query_interface : Proc(IOleUILinkContainerW*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleUILinkContainerW*, UInt32)
    release : Proc(IOleUILinkContainerW*, UInt32)
    get_next_link : Proc(IOleUILinkContainerW*, UInt32, UInt32)
    set_link_update_options : Proc(IOleUILinkContainerW*, UInt32, UInt32, HRESULT)
    get_link_update_options : Proc(IOleUILinkContainerW*, UInt32, UInt32*, HRESULT)
    set_link_source : Proc(IOleUILinkContainerW*, UInt32, LibC::LPWSTR, UInt32, UInt32*, LibC::BOOL, HRESULT)
    get_link_source : Proc(IOleUILinkContainerW*, UInt32, LibC::LPWSTR*, UInt32*, LibC::LPWSTR*, LibC::LPWSTR*, LibC::BOOL*, LibC::BOOL*, HRESULT)
    open_link_source : Proc(IOleUILinkContainerW*, UInt32, HRESULT)
    update_link : Proc(IOleUILinkContainerW*, UInt32, LibC::BOOL, LibC::BOOL, HRESULT)
    cancel_link : Proc(IOleUILinkContainerW*, UInt32, HRESULT)
  end

  struct IOleUILinkContainerW
    lpVtbl : IOleUILinkContainerWVTbl*
  end

  struct IOleUILinkContainerAVTbl
    query_interface : Proc(IOleUILinkContainerA*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleUILinkContainerA*, UInt32)
    release : Proc(IOleUILinkContainerA*, UInt32)
    get_next_link : Proc(IOleUILinkContainerA*, UInt32, UInt32)
    set_link_update_options : Proc(IOleUILinkContainerA*, UInt32, UInt32, HRESULT)
    get_link_update_options : Proc(IOleUILinkContainerA*, UInt32, UInt32*, HRESULT)
    set_link_source : Proc(IOleUILinkContainerA*, UInt32, PSTR, UInt32, UInt32*, LibC::BOOL, HRESULT)
    get_link_source : Proc(IOleUILinkContainerA*, UInt32, PSTR*, UInt32*, PSTR*, PSTR*, LibC::BOOL*, LibC::BOOL*, HRESULT)
    open_link_source : Proc(IOleUILinkContainerA*, UInt32, HRESULT)
    update_link : Proc(IOleUILinkContainerA*, UInt32, LibC::BOOL, LibC::BOOL, HRESULT)
    cancel_link : Proc(IOleUILinkContainerA*, UInt32, HRESULT)
  end

  struct IOleUILinkContainerA
    lpVtbl : IOleUILinkContainerAVTbl*
  end

  struct IOleUIObjInfoWVTbl
    query_interface : Proc(IOleUIObjInfoW*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleUIObjInfoW*, UInt32)
    release : Proc(IOleUIObjInfoW*, UInt32)
    get_object_info : Proc(IOleUIObjInfoW*, UInt32, UInt32*, LibC::LPWSTR*, LibC::LPWSTR*, LibC::LPWSTR*, LibC::LPWSTR*, HRESULT)
    get_convert_info : Proc(IOleUIObjInfoW*, UInt32, Guid*, UInt16*, Guid*, Guid**, UInt32*, HRESULT)
    convert_object : Proc(IOleUIObjInfoW*, UInt32, Guid*, HRESULT)
    get_view_info : Proc(IOleUIObjInfoW*, UInt32, LibC::IntPtrT*, UInt32*, Int32*, HRESULT)
    set_view_info : Proc(IOleUIObjInfoW*, UInt32, LibC::IntPtrT, UInt32, Int32, LibC::BOOL, HRESULT)
  end

  struct IOleUIObjInfoW
    lpVtbl : IOleUIObjInfoWVTbl*
  end

  struct IOleUIObjInfoAVTbl
    query_interface : Proc(IOleUIObjInfoA*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleUIObjInfoA*, UInt32)
    release : Proc(IOleUIObjInfoA*, UInt32)
    get_object_info : Proc(IOleUIObjInfoA*, UInt32, UInt32*, PSTR*, PSTR*, PSTR*, PSTR*, HRESULT)
    get_convert_info : Proc(IOleUIObjInfoA*, UInt32, Guid*, UInt16*, Guid*, Guid**, UInt32*, HRESULT)
    convert_object : Proc(IOleUIObjInfoA*, UInt32, Guid*, HRESULT)
    get_view_info : Proc(IOleUIObjInfoA*, UInt32, LibC::IntPtrT*, UInt32*, Int32*, HRESULT)
    set_view_info : Proc(IOleUIObjInfoA*, UInt32, LibC::IntPtrT, UInt32, Int32, LibC::BOOL, HRESULT)
  end

  struct IOleUIObjInfoA
    lpVtbl : IOleUIObjInfoAVTbl*
  end

  struct IOleUILinkInfoWVTbl
    query_interface : Proc(IOleUILinkInfoW*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleUILinkInfoW*, UInt32)
    release : Proc(IOleUILinkInfoW*, UInt32)
    get_next_link : Proc(IOleUILinkInfoW*, UInt32, UInt32)
    set_link_update_options : Proc(IOleUILinkInfoW*, UInt32, UInt32, HRESULT)
    get_link_update_options : Proc(IOleUILinkInfoW*, UInt32, UInt32*, HRESULT)
    set_link_source : Proc(IOleUILinkInfoW*, UInt32, LibC::LPWSTR, UInt32, UInt32*, LibC::BOOL, HRESULT)
    get_link_source : Proc(IOleUILinkInfoW*, UInt32, LibC::LPWSTR*, UInt32*, LibC::LPWSTR*, LibC::LPWSTR*, LibC::BOOL*, LibC::BOOL*, HRESULT)
    open_link_source : Proc(IOleUILinkInfoW*, UInt32, HRESULT)
    update_link : Proc(IOleUILinkInfoW*, UInt32, LibC::BOOL, LibC::BOOL, HRESULT)
    cancel_link : Proc(IOleUILinkInfoW*, UInt32, HRESULT)
    get_last_update : Proc(IOleUILinkInfoW*, UInt32, FILETIME*, HRESULT)
  end

  struct IOleUILinkInfoW
    lpVtbl : IOleUILinkInfoWVTbl*
  end

  struct IOleUILinkInfoAVTbl
    query_interface : Proc(IOleUILinkInfoA*, Guid*, Void**, HRESULT)
    add_ref : Proc(IOleUILinkInfoA*, UInt32)
    release : Proc(IOleUILinkInfoA*, UInt32)
    get_next_link : Proc(IOleUILinkInfoA*, UInt32, UInt32)
    set_link_update_options : Proc(IOleUILinkInfoA*, UInt32, UInt32, HRESULT)
    get_link_update_options : Proc(IOleUILinkInfoA*, UInt32, UInt32*, HRESULT)
    set_link_source : Proc(IOleUILinkInfoA*, UInt32, PSTR, UInt32, UInt32*, LibC::BOOL, HRESULT)
    get_link_source : Proc(IOleUILinkInfoA*, UInt32, PSTR*, UInt32*, PSTR*, PSTR*, LibC::BOOL*, LibC::BOOL*, HRESULT)
    open_link_source : Proc(IOleUILinkInfoA*, UInt32, HRESULT)
    update_link : Proc(IOleUILinkInfoA*, UInt32, LibC::BOOL, LibC::BOOL, HRESULT)
    cancel_link : Proc(IOleUILinkInfoA*, UInt32, HRESULT)
    get_last_update : Proc(IOleUILinkInfoA*, UInt32, FILETIME*, HRESULT)
  end

  struct IOleUILinkInfoA
    lpVtbl : IOleUILinkInfoAVTbl*
  end

  struct IDispatchExVTbl
    query_interface : Proc(IDispatchEx*, Guid*, Void**, HRESULT)
    add_ref : Proc(IDispatchEx*, UInt32)
    release : Proc(IDispatchEx*, UInt32)
    get_type_info_count : Proc(IDispatchEx*, UInt32*, HRESULT)
    get_type_info : Proc(IDispatchEx*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IDispatchEx*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IDispatchEx*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_disp_id : Proc(IDispatchEx*, UInt8*, UInt32, Int32*, HRESULT)
    invoke_ex : Proc(IDispatchEx*, Int32, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, IServiceProvider, HRESULT)
    delete_member_by_name : Proc(IDispatchEx*, UInt8*, UInt32, HRESULT)
    delete_member_by_disp_id : Proc(IDispatchEx*, Int32, HRESULT)
    get_member_properties : Proc(IDispatchEx*, Int32, UInt32, UInt32*, HRESULT)
    get_member_name : Proc(IDispatchEx*, Int32, UInt8**, HRESULT)
    get_next_disp_id : Proc(IDispatchEx*, UInt32, Int32, Int32*, HRESULT)
    get_name_space_parent : Proc(IDispatchEx*, IUnknown*, HRESULT)
  end

  struct IDispatchEx
    lpVtbl : IDispatchExVTbl*
  end

  struct IDispErrorVTbl
    query_interface : Proc(IDispError*, Guid*, Void**, HRESULT)
    add_ref : Proc(IDispError*, UInt32)
    release : Proc(IDispError*, UInt32)
    query_error_info : Proc(IDispError*, Guid, IDispError*, HRESULT)
    get_next : Proc(IDispError*, IDispError*, HRESULT)
    get_hresult : Proc(IDispError*, HRESULT*, HRESULT)
    get_source : Proc(IDispError*, UInt8**, HRESULT)
    get_help_info : Proc(IDispError*, UInt8**, UInt32*, HRESULT)
    get_description : Proc(IDispError*, UInt8**, HRESULT)
  end

  struct IDispError
    lpVtbl : IDispErrorVTbl*
  end

  struct IVariantChangeTypeVTbl
    query_interface : Proc(IVariantChangeType*, Guid*, Void**, HRESULT)
    add_ref : Proc(IVariantChangeType*, UInt32)
    release : Proc(IVariantChangeType*, UInt32)
    change_type : Proc(IVariantChangeType*, VARIANT*, VARIANT*, UInt32, UInt16, HRESULT)
  end

  struct IVariantChangeType
    lpVtbl : IVariantChangeTypeVTbl*
  end

  struct IObjectIdentityVTbl
    query_interface : Proc(IObjectIdentity*, Guid*, Void**, HRESULT)
    add_ref : Proc(IObjectIdentity*, UInt32)
    release : Proc(IObjectIdentity*, UInt32)
    is_equal_object : Proc(IObjectIdentity*, IUnknown, HRESULT)
  end

  struct IObjectIdentity
    lpVtbl : IObjectIdentityVTbl*
  end

  struct ICanHandleExceptionVTbl
    query_interface : Proc(ICanHandleException*, Guid*, Void**, HRESULT)
    add_ref : Proc(ICanHandleException*, UInt32)
    release : Proc(ICanHandleException*, UInt32)
    can_handle_exception : Proc(ICanHandleException*, EXCEPINFO*, VARIANT*, HRESULT)
  end

  struct ICanHandleException
    lpVtbl : ICanHandleExceptionVTbl*
  end

  struct IProvideRuntimeContextVTbl
    query_interface : Proc(IProvideRuntimeContext*, Guid*, Void**, HRESULT)
    add_ref : Proc(IProvideRuntimeContext*, UInt32)
    release : Proc(IProvideRuntimeContext*, UInt32)
    get_current_source_context : Proc(IProvideRuntimeContext*, LibC::UINT_PTR*, Int16*, HRESULT)
  end

  struct IProvideRuntimeContext
    lpVtbl : IProvideRuntimeContextVTbl*
  end


  # Params # wdosdate : UInt16 [In],wdostime : UInt16 [In],pvtime : Float64* [In]
  fun DosDateTimeToVariantTime(wdosdate : UInt16, wdostime : UInt16, pvtime : Float64*) : Int32

  # Params # vtime : Float64 [In],pwdosdate : UInt16* [In],pwdostime : UInt16* [In]
  fun VariantTimeToDosDateTime(vtime : Float64, pwdosdate : UInt16*, pwdostime : UInt16*) : Int32

  # Params # lpsystemtime : SYSTEMTIME* [In],pvtime : Float64* [In]
  fun SystemTimeToVariantTime(lpsystemtime : SYSTEMTIME*, pvtime : Float64*) : Int32

  # Params # vtime : Float64 [In],lpsystemtime : SYSTEMTIME* [In]
  fun VariantTimeToSystemTime(vtime : Float64, lpsystemtime : SYSTEMTIME*) : Int32

  # Params # cdims : UInt32 [In],ppsaout : SAFEARRAY** [In]
  fun SafeArrayAllocDescriptor(cdims : UInt32, ppsaout : SAFEARRAY**) : HRESULT

  # Params # vt : UInt16 [In],cdims : UInt32 [In],ppsaout : SAFEARRAY** [In]
  fun SafeArrayAllocDescriptorEx(vt : UInt16, cdims : UInt32, ppsaout : SAFEARRAY**) : HRESULT

  # Params # psa : SAFEARRAY* [In]
  fun SafeArrayAllocData(psa : SAFEARRAY*) : HRESULT

  # Params # vt : UInt16 [In],cdims : UInt32 [In],rgsabound : SAFEARRAYBOUND* [In]
  fun SafeArrayCreate(vt : UInt16, cdims : UInt32, rgsabound : SAFEARRAYBOUND*) : SAFEARRAY*

  # Params # vt : UInt16 [In],cdims : UInt32 [In],rgsabound : SAFEARRAYBOUND* [In],pvextra : Void* [In]
  fun SafeArrayCreateEx(vt : UInt16, cdims : UInt32, rgsabound : SAFEARRAYBOUND*, pvextra : Void*) : SAFEARRAY*

  # Params # psasource : SAFEARRAY* [In],psatarget : SAFEARRAY* [In]
  fun SafeArrayCopyData(psasource : SAFEARRAY*, psatarget : SAFEARRAY*) : HRESULT

  # Params # psa : SAFEARRAY* [In]
  fun SafeArrayReleaseDescriptor(psa : SAFEARRAY*)

  # Params # psa : SAFEARRAY* [In]
  fun SafeArrayDestroyDescriptor(psa : SAFEARRAY*) : HRESULT

  # Params # pdata : Void* [In]
  fun SafeArrayReleaseData(pdata : Void*)

  # Params # psa : SAFEARRAY* [In]
  fun SafeArrayDestroyData(psa : SAFEARRAY*) : HRESULT

  # Params # psa : SAFEARRAY* [In],ppdatatorelease : Void** [In]
  fun SafeArrayAddRef(psa : SAFEARRAY*, ppdatatorelease : Void**) : HRESULT

  # Params # psa : SAFEARRAY* [In]
  fun SafeArrayDestroy(psa : SAFEARRAY*) : HRESULT

  # Params # psa : SAFEARRAY* [In],psaboundnew : SAFEARRAYBOUND* [In]
  fun SafeArrayRedim(psa : SAFEARRAY*, psaboundnew : SAFEARRAYBOUND*) : HRESULT

  # Params # psa : SAFEARRAY* [In]
  fun SafeArrayGetDim(psa : SAFEARRAY*) : UInt32

  # Params # psa : SAFEARRAY* [In]
  fun SafeArrayGetElemsize(psa : SAFEARRAY*) : UInt32

  # Params # psa : SAFEARRAY* [In],ndim : UInt32 [In],plubound : Int32* [In]
  fun SafeArrayGetUBound(psa : SAFEARRAY*, ndim : UInt32, plubound : Int32*) : HRESULT

  # Params # psa : SAFEARRAY* [In],ndim : UInt32 [In],pllbound : Int32* [In]
  fun SafeArrayGetLBound(psa : SAFEARRAY*, ndim : UInt32, pllbound : Int32*) : HRESULT

  # Params # psa : SAFEARRAY* [In]
  fun SafeArrayLock(psa : SAFEARRAY*) : HRESULT

  # Params # psa : SAFEARRAY* [In]
  fun SafeArrayUnlock(psa : SAFEARRAY*) : HRESULT

  # Params # psa : SAFEARRAY* [In],ppvdata : Void** [In]
  fun SafeArrayAccessData(psa : SAFEARRAY*, ppvdata : Void**) : HRESULT

  # Params # psa : SAFEARRAY* [In]
  fun SafeArrayUnaccessData(psa : SAFEARRAY*) : HRESULT

  # Params # psa : SAFEARRAY* [In],rgindices : Int32* [In],pv : Void* [In]
  fun SafeArrayGetElement(psa : SAFEARRAY*, rgindices : Int32*, pv : Void*) : HRESULT

  # Params # psa : SAFEARRAY* [In],rgindices : Int32* [In],pv : Void* [In]
  fun SafeArrayPutElement(psa : SAFEARRAY*, rgindices : Int32*, pv : Void*) : HRESULT

  # Params # psa : SAFEARRAY* [In],ppsaout : SAFEARRAY** [In]
  fun SafeArrayCopy(psa : SAFEARRAY*, ppsaout : SAFEARRAY**) : HRESULT

  # Params # psa : SAFEARRAY* [In],rgindices : Int32* [In],ppvdata : Void** [In]
  fun SafeArrayPtrOfIndex(psa : SAFEARRAY*, rgindices : Int32*, ppvdata : Void**) : HRESULT

  # Params # psa : SAFEARRAY* [In],prinfo : IRecordInfo [In]
  fun SafeArraySetRecordInfo(psa : SAFEARRAY*, prinfo : IRecordInfo) : HRESULT

  # Params # psa : SAFEARRAY* [In],prinfo : IRecordInfo* [In]
  fun SafeArrayGetRecordInfo(psa : SAFEARRAY*, prinfo : IRecordInfo*) : HRESULT

  # Params # psa : SAFEARRAY* [In],guid : Guid* [In]
  fun SafeArraySetIID(psa : SAFEARRAY*, guid : Guid*) : HRESULT

  # Params # psa : SAFEARRAY* [In],pguid : Guid* [In]
  fun SafeArrayGetIID(psa : SAFEARRAY*, pguid : Guid*) : HRESULT

  # Params # psa : SAFEARRAY* [In],pvt : UInt16* [In]
  fun SafeArrayGetVartype(psa : SAFEARRAY*, pvt : UInt16*) : HRESULT

  # Params # vt : UInt16 [In],llbound : Int32 [In],celements : UInt32 [In]
  fun SafeArrayCreateVector(vt : UInt16, llbound : Int32, celements : UInt32) : SAFEARRAY*

  # Params # vt : UInt16 [In],llbound : Int32 [In],celements : UInt32 [In],pvextra : Void* [In]
  fun SafeArrayCreateVectorEx(vt : UInt16, llbound : Int32, celements : UInt32, pvextra : Void*) : SAFEARRAY*

  # Params # pvarg : VARIANT* [In]
  fun VariantInit(pvarg : VARIANT*)

  # Params # pvarg : VARIANT* [In]
  fun VariantClear(pvarg : VARIANT*) : HRESULT

  # Params # pvargdest : VARIANT* [In],pvargsrc : VARIANT* [In]
  fun VariantCopy(pvargdest : VARIANT*, pvargsrc : VARIANT*) : HRESULT

  # Params # pvardest : VARIANT* [In],pvargsrc : VARIANT* [In]
  fun VariantCopyInd(pvardest : VARIANT*, pvargsrc : VARIANT*) : HRESULT

  # Params # pvargdest : VARIANT* [In],pvarsrc : VARIANT* [In],wflags : UInt16 [In],vt : UInt16 [In]
  fun VariantChangeType(pvargdest : VARIANT*, pvarsrc : VARIANT*, wflags : UInt16, vt : UInt16) : HRESULT

  # Params # pvargdest : VARIANT* [In],pvarsrc : VARIANT* [In],lcid : UInt32 [In],wflags : UInt16 [In],vt : UInt16 [In]
  fun VariantChangeTypeEx(pvargdest : VARIANT*, pvarsrc : VARIANT*, lcid : UInt32, wflags : UInt16, vt : UInt16) : HRESULT

  # Params # bstr : UInt8* [In],ppsa : SAFEARRAY** [In]
  fun VectorFromBstr(bstr : UInt8*, ppsa : SAFEARRAY**) : HRESULT

  # Params # psa : SAFEARRAY* [In],pbstr : UInt8** [In]
  fun BstrFromVector(psa : SAFEARRAY*, pbstr : UInt8**) : HRESULT

  # Params # sin : Int16 [In],pbout : UInt8* [In]
  fun VarUI1FromI2(sin : Int16, pbout : UInt8*) : HRESULT

  # Params # lin : Int32 [In],pbout : UInt8* [In]
  fun VarUI1FromI4(lin : Int32, pbout : UInt8*) : HRESULT

  # Params # i64in : Int64 [In],pbout : UInt8* [In]
  fun VarUI1FromI8(i64in : Int64, pbout : UInt8*) : HRESULT

  # Params # fltin : Float32 [In],pbout : UInt8* [In]
  fun VarUI1FromR4(fltin : Float32, pbout : UInt8*) : HRESULT

  # Params # dblin : Float64 [In],pbout : UInt8* [In]
  fun VarUI1FromR8(dblin : Float64, pbout : UInt8*) : HRESULT

  # Params # cyin : CY [In],pbout : UInt8* [In]
  fun VarUI1FromCy(cyin : CY, pbout : UInt8*) : HRESULT

  # Params # datein : Float64 [In],pbout : UInt8* [In]
  fun VarUI1FromDate(datein : Float64, pbout : UInt8*) : HRESULT

  # Params # strin : LibC::LPWSTR [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbout : UInt8* [In]
  fun VarUI1FromStr(strin : LibC::LPWSTR, lcid : UInt32, dwflags : UInt32, pbout : UInt8*) : HRESULT

  # Params # pdispin : IDispatch [In],lcid : UInt32 [In],pbout : UInt8* [In]
  fun VarUI1FromDisp(pdispin : IDispatch, lcid : UInt32, pbout : UInt8*) : HRESULT

  # Params # boolin : Int16 [In],pbout : UInt8* [In]
  fun VarUI1FromBool(boolin : Int16, pbout : UInt8*) : HRESULT

  # Params # cin : CHAR [In],pbout : UInt8* [In]
  fun VarUI1FromI1(cin : CHAR, pbout : UInt8*) : HRESULT

  # Params # uiin : UInt16 [In],pbout : UInt8* [In]
  fun VarUI1FromUI2(uiin : UInt16, pbout : UInt8*) : HRESULT

  # Params # ulin : UInt32 [In],pbout : UInt8* [In]
  fun VarUI1FromUI4(ulin : UInt32, pbout : UInt8*) : HRESULT

  # Params # ui64in : UInt64 [In],pbout : UInt8* [In]
  fun VarUI1FromUI8(ui64in : UInt64, pbout : UInt8*) : HRESULT

  # Params # pdecin : DECIMAL* [In],pbout : UInt8* [In]
  fun VarUI1FromDec(pdecin : DECIMAL*, pbout : UInt8*) : HRESULT

  # Params # bin : UInt8 [In],psout : Int16* [In]
  fun VarI2FromUI1(bin : UInt8, psout : Int16*) : HRESULT

  # Params # lin : Int32 [In],psout : Int16* [In]
  fun VarI2FromI4(lin : Int32, psout : Int16*) : HRESULT

  # Params # i64in : Int64 [In],psout : Int16* [In]
  fun VarI2FromI8(i64in : Int64, psout : Int16*) : HRESULT

  # Params # fltin : Float32 [In],psout : Int16* [In]
  fun VarI2FromR4(fltin : Float32, psout : Int16*) : HRESULT

  # Params # dblin : Float64 [In],psout : Int16* [In]
  fun VarI2FromR8(dblin : Float64, psout : Int16*) : HRESULT

  # Params # cyin : CY [In],psout : Int16* [In]
  fun VarI2FromCy(cyin : CY, psout : Int16*) : HRESULT

  # Params # datein : Float64 [In],psout : Int16* [In]
  fun VarI2FromDate(datein : Float64, psout : Int16*) : HRESULT

  # Params # strin : LibC::LPWSTR [In],lcid : UInt32 [In],dwflags : UInt32 [In],psout : Int16* [In]
  fun VarI2FromStr(strin : LibC::LPWSTR, lcid : UInt32, dwflags : UInt32, psout : Int16*) : HRESULT

  # Params # pdispin : IDispatch [In],lcid : UInt32 [In],psout : Int16* [In]
  fun VarI2FromDisp(pdispin : IDispatch, lcid : UInt32, psout : Int16*) : HRESULT

  # Params # boolin : Int16 [In],psout : Int16* [In]
  fun VarI2FromBool(boolin : Int16, psout : Int16*) : HRESULT

  # Params # cin : CHAR [In],psout : Int16* [In]
  fun VarI2FromI1(cin : CHAR, psout : Int16*) : HRESULT

  # Params # uiin : UInt16 [In],psout : Int16* [In]
  fun VarI2FromUI2(uiin : UInt16, psout : Int16*) : HRESULT

  # Params # ulin : UInt32 [In],psout : Int16* [In]
  fun VarI2FromUI4(ulin : UInt32, psout : Int16*) : HRESULT

  # Params # ui64in : UInt64 [In],psout : Int16* [In]
  fun VarI2FromUI8(ui64in : UInt64, psout : Int16*) : HRESULT

  # Params # pdecin : DECIMAL* [In],psout : Int16* [In]
  fun VarI2FromDec(pdecin : DECIMAL*, psout : Int16*) : HRESULT

  # Params # bin : UInt8 [In],plout : Int32* [In]
  fun VarI4FromUI1(bin : UInt8, plout : Int32*) : HRESULT

  # Params # sin : Int16 [In],plout : Int32* [In]
  fun VarI4FromI2(sin : Int16, plout : Int32*) : HRESULT

  # Params # i64in : Int64 [In],plout : Int32* [In]
  fun VarI4FromI8(i64in : Int64, plout : Int32*) : HRESULT

  # Params # fltin : Float32 [In],plout : Int32* [In]
  fun VarI4FromR4(fltin : Float32, plout : Int32*) : HRESULT

  # Params # dblin : Float64 [In],plout : Int32* [In]
  fun VarI4FromR8(dblin : Float64, plout : Int32*) : HRESULT

  # Params # cyin : CY [In],plout : Int32* [In]
  fun VarI4FromCy(cyin : CY, plout : Int32*) : HRESULT

  # Params # datein : Float64 [In],plout : Int32* [In]
  fun VarI4FromDate(datein : Float64, plout : Int32*) : HRESULT

  # Params # strin : LibC::LPWSTR [In],lcid : UInt32 [In],dwflags : UInt32 [In],plout : Int32* [In]
  fun VarI4FromStr(strin : LibC::LPWSTR, lcid : UInt32, dwflags : UInt32, plout : Int32*) : HRESULT

  # Params # pdispin : IDispatch [In],lcid : UInt32 [In],plout : Int32* [In]
  fun VarI4FromDisp(pdispin : IDispatch, lcid : UInt32, plout : Int32*) : HRESULT

  # Params # boolin : Int16 [In],plout : Int32* [In]
  fun VarI4FromBool(boolin : Int16, plout : Int32*) : HRESULT

  # Params # cin : CHAR [In],plout : Int32* [In]
  fun VarI4FromI1(cin : CHAR, plout : Int32*) : HRESULT

  # Params # uiin : UInt16 [In],plout : Int32* [In]
  fun VarI4FromUI2(uiin : UInt16, plout : Int32*) : HRESULT

  # Params # ulin : UInt32 [In],plout : Int32* [In]
  fun VarI4FromUI4(ulin : UInt32, plout : Int32*) : HRESULT

  # Params # ui64in : UInt64 [In],plout : Int32* [In]
  fun VarI4FromUI8(ui64in : UInt64, plout : Int32*) : HRESULT

  # Params # pdecin : DECIMAL* [In],plout : Int32* [In]
  fun VarI4FromDec(pdecin : DECIMAL*, plout : Int32*) : HRESULT

  # Params # bin : UInt8 [In],pi64out : Int64* [In]
  fun VarI8FromUI1(bin : UInt8, pi64out : Int64*) : HRESULT

  # Params # sin : Int16 [In],pi64out : Int64* [In]
  fun VarI8FromI2(sin : Int16, pi64out : Int64*) : HRESULT

  # Params # fltin : Float32 [In],pi64out : Int64* [In]
  fun VarI8FromR4(fltin : Float32, pi64out : Int64*) : HRESULT

  # Params # dblin : Float64 [In],pi64out : Int64* [In]
  fun VarI8FromR8(dblin : Float64, pi64out : Int64*) : HRESULT

  # Params # cyin : CY [In],pi64out : Int64* [In]
  fun VarI8FromCy(cyin : CY, pi64out : Int64*) : HRESULT

  # Params # datein : Float64 [In],pi64out : Int64* [In]
  fun VarI8FromDate(datein : Float64, pi64out : Int64*) : HRESULT

  # Params # strin : LibC::LPWSTR [In],lcid : UInt32 [In],dwflags : UInt32 [In],pi64out : Int64* [In]
  fun VarI8FromStr(strin : LibC::LPWSTR, lcid : UInt32, dwflags : UInt32, pi64out : Int64*) : HRESULT

  # Params # pdispin : IDispatch [In],lcid : UInt32 [In],pi64out : Int64* [In]
  fun VarI8FromDisp(pdispin : IDispatch, lcid : UInt32, pi64out : Int64*) : HRESULT

  # Params # boolin : Int16 [In],pi64out : Int64* [In]
  fun VarI8FromBool(boolin : Int16, pi64out : Int64*) : HRESULT

  # Params # cin : CHAR [In],pi64out : Int64* [In]
  fun VarI8FromI1(cin : CHAR, pi64out : Int64*) : HRESULT

  # Params # uiin : UInt16 [In],pi64out : Int64* [In]
  fun VarI8FromUI2(uiin : UInt16, pi64out : Int64*) : HRESULT

  # Params # ulin : UInt32 [In],pi64out : Int64* [In]
  fun VarI8FromUI4(ulin : UInt32, pi64out : Int64*) : HRESULT

  # Params # ui64in : UInt64 [In],pi64out : Int64* [In]
  fun VarI8FromUI8(ui64in : UInt64, pi64out : Int64*) : HRESULT

  # Params # pdecin : DECIMAL* [In],pi64out : Int64* [In]
  fun VarI8FromDec(pdecin : DECIMAL*, pi64out : Int64*) : HRESULT

  # Params # bin : UInt8 [In],pfltout : Float32* [In]
  fun VarR4FromUI1(bin : UInt8, pfltout : Float32*) : HRESULT

  # Params # sin : Int16 [In],pfltout : Float32* [In]
  fun VarR4FromI2(sin : Int16, pfltout : Float32*) : HRESULT

  # Params # lin : Int32 [In],pfltout : Float32* [In]
  fun VarR4FromI4(lin : Int32, pfltout : Float32*) : HRESULT

  # Params # i64in : Int64 [In],pfltout : Float32* [In]
  fun VarR4FromI8(i64in : Int64, pfltout : Float32*) : HRESULT

  # Params # dblin : Float64 [In],pfltout : Float32* [In]
  fun VarR4FromR8(dblin : Float64, pfltout : Float32*) : HRESULT

  # Params # cyin : CY [In],pfltout : Float32* [In]
  fun VarR4FromCy(cyin : CY, pfltout : Float32*) : HRESULT

  # Params # datein : Float64 [In],pfltout : Float32* [In]
  fun VarR4FromDate(datein : Float64, pfltout : Float32*) : HRESULT

  # Params # strin : LibC::LPWSTR [In],lcid : UInt32 [In],dwflags : UInt32 [In],pfltout : Float32* [In]
  fun VarR4FromStr(strin : LibC::LPWSTR, lcid : UInt32, dwflags : UInt32, pfltout : Float32*) : HRESULT

  # Params # pdispin : IDispatch [In],lcid : UInt32 [In],pfltout : Float32* [In]
  fun VarR4FromDisp(pdispin : IDispatch, lcid : UInt32, pfltout : Float32*) : HRESULT

  # Params # boolin : Int16 [In],pfltout : Float32* [In]
  fun VarR4FromBool(boolin : Int16, pfltout : Float32*) : HRESULT

  # Params # cin : CHAR [In],pfltout : Float32* [In]
  fun VarR4FromI1(cin : CHAR, pfltout : Float32*) : HRESULT

  # Params # uiin : UInt16 [In],pfltout : Float32* [In]
  fun VarR4FromUI2(uiin : UInt16, pfltout : Float32*) : HRESULT

  # Params # ulin : UInt32 [In],pfltout : Float32* [In]
  fun VarR4FromUI4(ulin : UInt32, pfltout : Float32*) : HRESULT

  # Params # ui64in : UInt64 [In],pfltout : Float32* [In]
  fun VarR4FromUI8(ui64in : UInt64, pfltout : Float32*) : HRESULT

  # Params # pdecin : DECIMAL* [In],pfltout : Float32* [In]
  fun VarR4FromDec(pdecin : DECIMAL*, pfltout : Float32*) : HRESULT

  # Params # bin : UInt8 [In],pdblout : Float64* [In]
  fun VarR8FromUI1(bin : UInt8, pdblout : Float64*) : HRESULT

  # Params # sin : Int16 [In],pdblout : Float64* [In]
  fun VarR8FromI2(sin : Int16, pdblout : Float64*) : HRESULT

  # Params # lin : Int32 [In],pdblout : Float64* [In]
  fun VarR8FromI4(lin : Int32, pdblout : Float64*) : HRESULT

  # Params # i64in : Int64 [In],pdblout : Float64* [In]
  fun VarR8FromI8(i64in : Int64, pdblout : Float64*) : HRESULT

  # Params # fltin : Float32 [In],pdblout : Float64* [In]
  fun VarR8FromR4(fltin : Float32, pdblout : Float64*) : HRESULT

  # Params # cyin : CY [In],pdblout : Float64* [In]
  fun VarR8FromCy(cyin : CY, pdblout : Float64*) : HRESULT

  # Params # datein : Float64 [In],pdblout : Float64* [In]
  fun VarR8FromDate(datein : Float64, pdblout : Float64*) : HRESULT

  # Params # strin : LibC::LPWSTR [In],lcid : UInt32 [In],dwflags : UInt32 [In],pdblout : Float64* [In]
  fun VarR8FromStr(strin : LibC::LPWSTR, lcid : UInt32, dwflags : UInt32, pdblout : Float64*) : HRESULT

  # Params # pdispin : IDispatch [In],lcid : UInt32 [In],pdblout : Float64* [In]
  fun VarR8FromDisp(pdispin : IDispatch, lcid : UInt32, pdblout : Float64*) : HRESULT

  # Params # boolin : Int16 [In],pdblout : Float64* [In]
  fun VarR8FromBool(boolin : Int16, pdblout : Float64*) : HRESULT

  # Params # cin : CHAR [In],pdblout : Float64* [In]
  fun VarR8FromI1(cin : CHAR, pdblout : Float64*) : HRESULT

  # Params # uiin : UInt16 [In],pdblout : Float64* [In]
  fun VarR8FromUI2(uiin : UInt16, pdblout : Float64*) : HRESULT

  # Params # ulin : UInt32 [In],pdblout : Float64* [In]
  fun VarR8FromUI4(ulin : UInt32, pdblout : Float64*) : HRESULT

  # Params # ui64in : UInt64 [In],pdblout : Float64* [In]
  fun VarR8FromUI8(ui64in : UInt64, pdblout : Float64*) : HRESULT

  # Params # pdecin : DECIMAL* [In],pdblout : Float64* [In]
  fun VarR8FromDec(pdecin : DECIMAL*, pdblout : Float64*) : HRESULT

  # Params # bin : UInt8 [In],pdateout : Float64* [In]
  fun VarDateFromUI1(bin : UInt8, pdateout : Float64*) : HRESULT

  # Params # sin : Int16 [In],pdateout : Float64* [In]
  fun VarDateFromI2(sin : Int16, pdateout : Float64*) : HRESULT

  # Params # lin : Int32 [In],pdateout : Float64* [In]
  fun VarDateFromI4(lin : Int32, pdateout : Float64*) : HRESULT

  # Params # i64in : Int64 [In],pdateout : Float64* [In]
  fun VarDateFromI8(i64in : Int64, pdateout : Float64*) : HRESULT

  # Params # fltin : Float32 [In],pdateout : Float64* [In]
  fun VarDateFromR4(fltin : Float32, pdateout : Float64*) : HRESULT

  # Params # dblin : Float64 [In],pdateout : Float64* [In]
  fun VarDateFromR8(dblin : Float64, pdateout : Float64*) : HRESULT

  # Params # cyin : CY [In],pdateout : Float64* [In]
  fun VarDateFromCy(cyin : CY, pdateout : Float64*) : HRESULT

  # Params # strin : LibC::LPWSTR [In],lcid : UInt32 [In],dwflags : UInt32 [In],pdateout : Float64* [In]
  fun VarDateFromStr(strin : LibC::LPWSTR, lcid : UInt32, dwflags : UInt32, pdateout : Float64*) : HRESULT

  # Params # pdispin : IDispatch [In],lcid : UInt32 [In],pdateout : Float64* [In]
  fun VarDateFromDisp(pdispin : IDispatch, lcid : UInt32, pdateout : Float64*) : HRESULT

  # Params # boolin : Int16 [In],pdateout : Float64* [In]
  fun VarDateFromBool(boolin : Int16, pdateout : Float64*) : HRESULT

  # Params # cin : CHAR [In],pdateout : Float64* [In]
  fun VarDateFromI1(cin : CHAR, pdateout : Float64*) : HRESULT

  # Params # uiin : UInt16 [In],pdateout : Float64* [In]
  fun VarDateFromUI2(uiin : UInt16, pdateout : Float64*) : HRESULT

  # Params # ulin : UInt32 [In],pdateout : Float64* [In]
  fun VarDateFromUI4(ulin : UInt32, pdateout : Float64*) : HRESULT

  # Params # ui64in : UInt64 [In],pdateout : Float64* [In]
  fun VarDateFromUI8(ui64in : UInt64, pdateout : Float64*) : HRESULT

  # Params # pdecin : DECIMAL* [In],pdateout : Float64* [In]
  fun VarDateFromDec(pdecin : DECIMAL*, pdateout : Float64*) : HRESULT

  # Params # bin : UInt8 [In],pcyout : CY* [In]
  fun VarCyFromUI1(bin : UInt8, pcyout : CY*) : HRESULT

  # Params # sin : Int16 [In],pcyout : CY* [In]
  fun VarCyFromI2(sin : Int16, pcyout : CY*) : HRESULT

  # Params # lin : Int32 [In],pcyout : CY* [In]
  fun VarCyFromI4(lin : Int32, pcyout : CY*) : HRESULT

  # Params # i64in : Int64 [In],pcyout : CY* [In]
  fun VarCyFromI8(i64in : Int64, pcyout : CY*) : HRESULT

  # Params # fltin : Float32 [In],pcyout : CY* [In]
  fun VarCyFromR4(fltin : Float32, pcyout : CY*) : HRESULT

  # Params # dblin : Float64 [In],pcyout : CY* [In]
  fun VarCyFromR8(dblin : Float64, pcyout : CY*) : HRESULT

  # Params # datein : Float64 [In],pcyout : CY* [In]
  fun VarCyFromDate(datein : Float64, pcyout : CY*) : HRESULT

  # Params # strin : LibC::LPWSTR [In],lcid : UInt32 [In],dwflags : UInt32 [In],pcyout : CY* [In]
  fun VarCyFromStr(strin : LibC::LPWSTR, lcid : UInt32, dwflags : UInt32, pcyout : CY*) : HRESULT

  # Params # pdispin : IDispatch [In],lcid : UInt32 [In],pcyout : CY* [In]
  fun VarCyFromDisp(pdispin : IDispatch, lcid : UInt32, pcyout : CY*) : HRESULT

  # Params # boolin : Int16 [In],pcyout : CY* [In]
  fun VarCyFromBool(boolin : Int16, pcyout : CY*) : HRESULT

  # Params # cin : CHAR [In],pcyout : CY* [In]
  fun VarCyFromI1(cin : CHAR, pcyout : CY*) : HRESULT

  # Params # uiin : UInt16 [In],pcyout : CY* [In]
  fun VarCyFromUI2(uiin : UInt16, pcyout : CY*) : HRESULT

  # Params # ulin : UInt32 [In],pcyout : CY* [In]
  fun VarCyFromUI4(ulin : UInt32, pcyout : CY*) : HRESULT

  # Params # ui64in : UInt64 [In],pcyout : CY* [In]
  fun VarCyFromUI8(ui64in : UInt64, pcyout : CY*) : HRESULT

  # Params # pdecin : DECIMAL* [In],pcyout : CY* [In]
  fun VarCyFromDec(pdecin : DECIMAL*, pcyout : CY*) : HRESULT

  # Params # bval : UInt8 [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarBstrFromUI1(bval : UInt8, lcid : UInt32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # ival : Int16 [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarBstrFromI2(ival : Int16, lcid : UInt32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # lin : Int32 [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarBstrFromI4(lin : Int32, lcid : UInt32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # i64in : Int64 [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarBstrFromI8(i64in : Int64, lcid : UInt32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # fltin : Float32 [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarBstrFromR4(fltin : Float32, lcid : UInt32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # dblin : Float64 [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarBstrFromR8(dblin : Float64, lcid : UInt32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # cyin : CY [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarBstrFromCy(cyin : CY, lcid : UInt32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # datein : Float64 [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarBstrFromDate(datein : Float64, lcid : UInt32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # pdispin : IDispatch [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarBstrFromDisp(pdispin : IDispatch, lcid : UInt32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # boolin : Int16 [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarBstrFromBool(boolin : Int16, lcid : UInt32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # cin : CHAR [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarBstrFromI1(cin : CHAR, lcid : UInt32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # uiin : UInt16 [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarBstrFromUI2(uiin : UInt16, lcid : UInt32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # ulin : UInt32 [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarBstrFromUI4(ulin : UInt32, lcid : UInt32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # ui64in : UInt64 [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarBstrFromUI8(ui64in : UInt64, lcid : UInt32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # pdecin : DECIMAL* [In],lcid : UInt32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarBstrFromDec(pdecin : DECIMAL*, lcid : UInt32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # bin : UInt8 [In],pboolout : Int16* [In]
  fun VarBoolFromUI1(bin : UInt8, pboolout : Int16*) : HRESULT

  # Params # sin : Int16 [In],pboolout : Int16* [In]
  fun VarBoolFromI2(sin : Int16, pboolout : Int16*) : HRESULT

  # Params # lin : Int32 [In],pboolout : Int16* [In]
  fun VarBoolFromI4(lin : Int32, pboolout : Int16*) : HRESULT

  # Params # i64in : Int64 [In],pboolout : Int16* [In]
  fun VarBoolFromI8(i64in : Int64, pboolout : Int16*) : HRESULT

  # Params # fltin : Float32 [In],pboolout : Int16* [In]
  fun VarBoolFromR4(fltin : Float32, pboolout : Int16*) : HRESULT

  # Params # dblin : Float64 [In],pboolout : Int16* [In]
  fun VarBoolFromR8(dblin : Float64, pboolout : Int16*) : HRESULT

  # Params # datein : Float64 [In],pboolout : Int16* [In]
  fun VarBoolFromDate(datein : Float64, pboolout : Int16*) : HRESULT

  # Params # cyin : CY [In],pboolout : Int16* [In]
  fun VarBoolFromCy(cyin : CY, pboolout : Int16*) : HRESULT

  # Params # strin : LibC::LPWSTR [In],lcid : UInt32 [In],dwflags : UInt32 [In],pboolout : Int16* [In]
  fun VarBoolFromStr(strin : LibC::LPWSTR, lcid : UInt32, dwflags : UInt32, pboolout : Int16*) : HRESULT

  # Params # pdispin : IDispatch [In],lcid : UInt32 [In],pboolout : Int16* [In]
  fun VarBoolFromDisp(pdispin : IDispatch, lcid : UInt32, pboolout : Int16*) : HRESULT

  # Params # cin : CHAR [In],pboolout : Int16* [In]
  fun VarBoolFromI1(cin : CHAR, pboolout : Int16*) : HRESULT

  # Params # uiin : UInt16 [In],pboolout : Int16* [In]
  fun VarBoolFromUI2(uiin : UInt16, pboolout : Int16*) : HRESULT

  # Params # ulin : UInt32 [In],pboolout : Int16* [In]
  fun VarBoolFromUI4(ulin : UInt32, pboolout : Int16*) : HRESULT

  # Params # i64in : UInt64 [In],pboolout : Int16* [In]
  fun VarBoolFromUI8(i64in : UInt64, pboolout : Int16*) : HRESULT

  # Params # pdecin : DECIMAL* [In],pboolout : Int16* [In]
  fun VarBoolFromDec(pdecin : DECIMAL*, pboolout : Int16*) : HRESULT

  # Params # bin : UInt8 [In],pcout : PSTR [In]
  fun VarI1FromUI1(bin : UInt8, pcout : PSTR) : HRESULT

  # Params # uiin : Int16 [In],pcout : PSTR [In]
  fun VarI1FromI2(uiin : Int16, pcout : PSTR) : HRESULT

  # Params # lin : Int32 [In],pcout : PSTR [In]
  fun VarI1FromI4(lin : Int32, pcout : PSTR) : HRESULT

  # Params # i64in : Int64 [In],pcout : PSTR [In]
  fun VarI1FromI8(i64in : Int64, pcout : PSTR) : HRESULT

  # Params # fltin : Float32 [In],pcout : PSTR [In]
  fun VarI1FromR4(fltin : Float32, pcout : PSTR) : HRESULT

  # Params # dblin : Float64 [In],pcout : PSTR [In]
  fun VarI1FromR8(dblin : Float64, pcout : PSTR) : HRESULT

  # Params # datein : Float64 [In],pcout : PSTR [In]
  fun VarI1FromDate(datein : Float64, pcout : PSTR) : HRESULT

  # Params # cyin : CY [In],pcout : PSTR [In]
  fun VarI1FromCy(cyin : CY, pcout : PSTR) : HRESULT

  # Params # strin : LibC::LPWSTR [In],lcid : UInt32 [In],dwflags : UInt32 [In],pcout : PSTR [In]
  fun VarI1FromStr(strin : LibC::LPWSTR, lcid : UInt32, dwflags : UInt32, pcout : PSTR) : HRESULT

  # Params # pdispin : IDispatch [In],lcid : UInt32 [In],pcout : PSTR [In]
  fun VarI1FromDisp(pdispin : IDispatch, lcid : UInt32, pcout : PSTR) : HRESULT

  # Params # boolin : Int16 [In],pcout : PSTR [In]
  fun VarI1FromBool(boolin : Int16, pcout : PSTR) : HRESULT

  # Params # uiin : UInt16 [In],pcout : PSTR [In]
  fun VarI1FromUI2(uiin : UInt16, pcout : PSTR) : HRESULT

  # Params # ulin : UInt32 [In],pcout : PSTR [In]
  fun VarI1FromUI4(ulin : UInt32, pcout : PSTR) : HRESULT

  # Params # i64in : UInt64 [In],pcout : PSTR [In]
  fun VarI1FromUI8(i64in : UInt64, pcout : PSTR) : HRESULT

  # Params # pdecin : DECIMAL* [In],pcout : PSTR [In]
  fun VarI1FromDec(pdecin : DECIMAL*, pcout : PSTR) : HRESULT

  # Params # bin : UInt8 [In],puiout : UInt16* [In]
  fun VarUI2FromUI1(bin : UInt8, puiout : UInt16*) : HRESULT

  # Params # uiin : Int16 [In],puiout : UInt16* [In]
  fun VarUI2FromI2(uiin : Int16, puiout : UInt16*) : HRESULT

  # Params # lin : Int32 [In],puiout : UInt16* [In]
  fun VarUI2FromI4(lin : Int32, puiout : UInt16*) : HRESULT

  # Params # i64in : Int64 [In],puiout : UInt16* [In]
  fun VarUI2FromI8(i64in : Int64, puiout : UInt16*) : HRESULT

  # Params # fltin : Float32 [In],puiout : UInt16* [In]
  fun VarUI2FromR4(fltin : Float32, puiout : UInt16*) : HRESULT

  # Params # dblin : Float64 [In],puiout : UInt16* [In]
  fun VarUI2FromR8(dblin : Float64, puiout : UInt16*) : HRESULT

  # Params # datein : Float64 [In],puiout : UInt16* [In]
  fun VarUI2FromDate(datein : Float64, puiout : UInt16*) : HRESULT

  # Params # cyin : CY [In],puiout : UInt16* [In]
  fun VarUI2FromCy(cyin : CY, puiout : UInt16*) : HRESULT

  # Params # strin : LibC::LPWSTR [In],lcid : UInt32 [In],dwflags : UInt32 [In],puiout : UInt16* [In]
  fun VarUI2FromStr(strin : LibC::LPWSTR, lcid : UInt32, dwflags : UInt32, puiout : UInt16*) : HRESULT

  # Params # pdispin : IDispatch [In],lcid : UInt32 [In],puiout : UInt16* [In]
  fun VarUI2FromDisp(pdispin : IDispatch, lcid : UInt32, puiout : UInt16*) : HRESULT

  # Params # boolin : Int16 [In],puiout : UInt16* [In]
  fun VarUI2FromBool(boolin : Int16, puiout : UInt16*) : HRESULT

  # Params # cin : CHAR [In],puiout : UInt16* [In]
  fun VarUI2FromI1(cin : CHAR, puiout : UInt16*) : HRESULT

  # Params # ulin : UInt32 [In],puiout : UInt16* [In]
  fun VarUI2FromUI4(ulin : UInt32, puiout : UInt16*) : HRESULT

  # Params # i64in : UInt64 [In],puiout : UInt16* [In]
  fun VarUI2FromUI8(i64in : UInt64, puiout : UInt16*) : HRESULT

  # Params # pdecin : DECIMAL* [In],puiout : UInt16* [In]
  fun VarUI2FromDec(pdecin : DECIMAL*, puiout : UInt16*) : HRESULT

  # Params # bin : UInt8 [In],pulout : UInt32* [In]
  fun VarUI4FromUI1(bin : UInt8, pulout : UInt32*) : HRESULT

  # Params # uiin : Int16 [In],pulout : UInt32* [In]
  fun VarUI4FromI2(uiin : Int16, pulout : UInt32*) : HRESULT

  # Params # lin : Int32 [In],pulout : UInt32* [In]
  fun VarUI4FromI4(lin : Int32, pulout : UInt32*) : HRESULT

  # Params # i64in : Int64 [In],plout : UInt32* [In]
  fun VarUI4FromI8(i64in : Int64, plout : UInt32*) : HRESULT

  # Params # fltin : Float32 [In],pulout : UInt32* [In]
  fun VarUI4FromR4(fltin : Float32, pulout : UInt32*) : HRESULT

  # Params # dblin : Float64 [In],pulout : UInt32* [In]
  fun VarUI4FromR8(dblin : Float64, pulout : UInt32*) : HRESULT

  # Params # datein : Float64 [In],pulout : UInt32* [In]
  fun VarUI4FromDate(datein : Float64, pulout : UInt32*) : HRESULT

  # Params # cyin : CY [In],pulout : UInt32* [In]
  fun VarUI4FromCy(cyin : CY, pulout : UInt32*) : HRESULT

  # Params # strin : LibC::LPWSTR [In],lcid : UInt32 [In],dwflags : UInt32 [In],pulout : UInt32* [In]
  fun VarUI4FromStr(strin : LibC::LPWSTR, lcid : UInt32, dwflags : UInt32, pulout : UInt32*) : HRESULT

  # Params # pdispin : IDispatch [In],lcid : UInt32 [In],pulout : UInt32* [In]
  fun VarUI4FromDisp(pdispin : IDispatch, lcid : UInt32, pulout : UInt32*) : HRESULT

  # Params # boolin : Int16 [In],pulout : UInt32* [In]
  fun VarUI4FromBool(boolin : Int16, pulout : UInt32*) : HRESULT

  # Params # cin : CHAR [In],pulout : UInt32* [In]
  fun VarUI4FromI1(cin : CHAR, pulout : UInt32*) : HRESULT

  # Params # uiin : UInt16 [In],pulout : UInt32* [In]
  fun VarUI4FromUI2(uiin : UInt16, pulout : UInt32*) : HRESULT

  # Params # ui64in : UInt64 [In],plout : UInt32* [In]
  fun VarUI4FromUI8(ui64in : UInt64, plout : UInt32*) : HRESULT

  # Params # pdecin : DECIMAL* [In],pulout : UInt32* [In]
  fun VarUI4FromDec(pdecin : DECIMAL*, pulout : UInt32*) : HRESULT

  # Params # bin : UInt8 [In],pi64out : UInt64* [In]
  fun VarUI8FromUI1(bin : UInt8, pi64out : UInt64*) : HRESULT

  # Params # sin : Int16 [In],pi64out : UInt64* [In]
  fun VarUI8FromI2(sin : Int16, pi64out : UInt64*) : HRESULT

  # Params # ui64in : Int64 [In],pi64out : UInt64* [In]
  fun VarUI8FromI8(ui64in : Int64, pi64out : UInt64*) : HRESULT

  # Params # fltin : Float32 [In],pi64out : UInt64* [In]
  fun VarUI8FromR4(fltin : Float32, pi64out : UInt64*) : HRESULT

  # Params # dblin : Float64 [In],pi64out : UInt64* [In]
  fun VarUI8FromR8(dblin : Float64, pi64out : UInt64*) : HRESULT

  # Params # cyin : CY [In],pi64out : UInt64* [In]
  fun VarUI8FromCy(cyin : CY, pi64out : UInt64*) : HRESULT

  # Params # datein : Float64 [In],pi64out : UInt64* [In]
  fun VarUI8FromDate(datein : Float64, pi64out : UInt64*) : HRESULT

  # Params # strin : LibC::LPWSTR [In],lcid : UInt32 [In],dwflags : UInt32 [In],pi64out : UInt64* [In]
  fun VarUI8FromStr(strin : LibC::LPWSTR, lcid : UInt32, dwflags : UInt32, pi64out : UInt64*) : HRESULT

  # Params # pdispin : IDispatch [In],lcid : UInt32 [In],pi64out : UInt64* [In]
  fun VarUI8FromDisp(pdispin : IDispatch, lcid : UInt32, pi64out : UInt64*) : HRESULT

  # Params # boolin : Int16 [In],pi64out : UInt64* [In]
  fun VarUI8FromBool(boolin : Int16, pi64out : UInt64*) : HRESULT

  # Params # cin : CHAR [In],pi64out : UInt64* [In]
  fun VarUI8FromI1(cin : CHAR, pi64out : UInt64*) : HRESULT

  # Params # uiin : UInt16 [In],pi64out : UInt64* [In]
  fun VarUI8FromUI2(uiin : UInt16, pi64out : UInt64*) : HRESULT

  # Params # ulin : UInt32 [In],pi64out : UInt64* [In]
  fun VarUI8FromUI4(ulin : UInt32, pi64out : UInt64*) : HRESULT

  # Params # pdecin : DECIMAL* [In],pi64out : UInt64* [In]
  fun VarUI8FromDec(pdecin : DECIMAL*, pi64out : UInt64*) : HRESULT

  # Params # bin : UInt8 [In],pdecout : DECIMAL* [In]
  fun VarDecFromUI1(bin : UInt8, pdecout : DECIMAL*) : HRESULT

  # Params # uiin : Int16 [In],pdecout : DECIMAL* [In]
  fun VarDecFromI2(uiin : Int16, pdecout : DECIMAL*) : HRESULT

  # Params # lin : Int32 [In],pdecout : DECIMAL* [In]
  fun VarDecFromI4(lin : Int32, pdecout : DECIMAL*) : HRESULT

  # Params # i64in : Int64 [In],pdecout : DECIMAL* [In]
  fun VarDecFromI8(i64in : Int64, pdecout : DECIMAL*) : HRESULT

  # Params # fltin : Float32 [In],pdecout : DECIMAL* [In]
  fun VarDecFromR4(fltin : Float32, pdecout : DECIMAL*) : HRESULT

  # Params # dblin : Float64 [In],pdecout : DECIMAL* [In]
  fun VarDecFromR8(dblin : Float64, pdecout : DECIMAL*) : HRESULT

  # Params # datein : Float64 [In],pdecout : DECIMAL* [In]
  fun VarDecFromDate(datein : Float64, pdecout : DECIMAL*) : HRESULT

  # Params # cyin : CY [In],pdecout : DECIMAL* [In]
  fun VarDecFromCy(cyin : CY, pdecout : DECIMAL*) : HRESULT

  # Params # strin : LibC::LPWSTR [In],lcid : UInt32 [In],dwflags : UInt32 [In],pdecout : DECIMAL* [In]
  fun VarDecFromStr(strin : LibC::LPWSTR, lcid : UInt32, dwflags : UInt32, pdecout : DECIMAL*) : HRESULT

  # Params # pdispin : IDispatch [In],lcid : UInt32 [In],pdecout : DECIMAL* [In]
  fun VarDecFromDisp(pdispin : IDispatch, lcid : UInt32, pdecout : DECIMAL*) : HRESULT

  # Params # boolin : Int16 [In],pdecout : DECIMAL* [In]
  fun VarDecFromBool(boolin : Int16, pdecout : DECIMAL*) : HRESULT

  # Params # cin : CHAR [In],pdecout : DECIMAL* [In]
  fun VarDecFromI1(cin : CHAR, pdecout : DECIMAL*) : HRESULT

  # Params # uiin : UInt16 [In],pdecout : DECIMAL* [In]
  fun VarDecFromUI2(uiin : UInt16, pdecout : DECIMAL*) : HRESULT

  # Params # ulin : UInt32 [In],pdecout : DECIMAL* [In]
  fun VarDecFromUI4(ulin : UInt32, pdecout : DECIMAL*) : HRESULT

  # Params # ui64in : UInt64 [In],pdecout : DECIMAL* [In]
  fun VarDecFromUI8(ui64in : UInt64, pdecout : DECIMAL*) : HRESULT

  # Params # strin : LibC::LPWSTR [In],lcid : UInt32 [In],dwflags : UInt32 [In],pnumprs : NUMPARSE* [In],rgbdig : UInt8* [In]
  fun VarParseNumFromStr(strin : LibC::LPWSTR, lcid : UInt32, dwflags : UInt32, pnumprs : NUMPARSE*, rgbdig : UInt8*) : HRESULT

  # Params # pnumprs : NUMPARSE* [In],rgbdig : UInt8* [In],dwvtbits : UInt32 [In],pvar : VARIANT* [In]
  fun VarNumFromParseNum(pnumprs : NUMPARSE*, rgbdig : UInt8*, dwvtbits : UInt32, pvar : VARIANT*) : HRESULT

  # Params # pvarleft : VARIANT* [In],pvarright : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarAdd(pvarleft : VARIANT*, pvarright : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarleft : VARIANT* [In],pvarright : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarAnd(pvarleft : VARIANT*, pvarright : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarleft : VARIANT* [In],pvarright : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarCat(pvarleft : VARIANT*, pvarright : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarleft : VARIANT* [In],pvarright : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarDiv(pvarleft : VARIANT*, pvarright : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarleft : VARIANT* [In],pvarright : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarEqv(pvarleft : VARIANT*, pvarright : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarleft : VARIANT* [In],pvarright : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarIdiv(pvarleft : VARIANT*, pvarright : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarleft : VARIANT* [In],pvarright : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarImp(pvarleft : VARIANT*, pvarright : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarleft : VARIANT* [In],pvarright : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarMod(pvarleft : VARIANT*, pvarright : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarleft : VARIANT* [In],pvarright : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarMul(pvarleft : VARIANT*, pvarright : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarleft : VARIANT* [In],pvarright : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarOr(pvarleft : VARIANT*, pvarright : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarleft : VARIANT* [In],pvarright : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarPow(pvarleft : VARIANT*, pvarright : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarleft : VARIANT* [In],pvarright : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarSub(pvarleft : VARIANT*, pvarright : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarleft : VARIANT* [In],pvarright : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarXor(pvarleft : VARIANT*, pvarright : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarin : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarAbs(pvarin : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarin : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarFix(pvarin : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarin : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarInt(pvarin : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarin : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarNeg(pvarin : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarin : VARIANT* [In],pvarresult : VARIANT* [In]
  fun VarNot(pvarin : VARIANT*, pvarresult : VARIANT*) : HRESULT

  # Params # pvarin : VARIANT* [In],cdecimals : Int32 [In],pvarresult : VARIANT* [In]
  fun VarRound(pvarin : VARIANT*, cdecimals : Int32, pvarresult : VARIANT*) : HRESULT

  # Params # pvarleft : VARIANT* [In],pvarright : VARIANT* [In],lcid : UInt32 [In],dwflags : UInt32 [In]
  fun VarCmp(pvarleft : VARIANT*, pvarright : VARIANT*, lcid : UInt32, dwflags : UInt32) : HRESULT

  # Params # pdecleft : DECIMAL* [In],pdecright : DECIMAL* [In],pdecresult : DECIMAL* [In]
  fun VarDecAdd(pdecleft : DECIMAL*, pdecright : DECIMAL*, pdecresult : DECIMAL*) : HRESULT

  # Params # pdecleft : DECIMAL* [In],pdecright : DECIMAL* [In],pdecresult : DECIMAL* [In]
  fun VarDecDiv(pdecleft : DECIMAL*, pdecright : DECIMAL*, pdecresult : DECIMAL*) : HRESULT

  # Params # pdecleft : DECIMAL* [In],pdecright : DECIMAL* [In],pdecresult : DECIMAL* [In]
  fun VarDecMul(pdecleft : DECIMAL*, pdecright : DECIMAL*, pdecresult : DECIMAL*) : HRESULT

  # Params # pdecleft : DECIMAL* [In],pdecright : DECIMAL* [In],pdecresult : DECIMAL* [In]
  fun VarDecSub(pdecleft : DECIMAL*, pdecright : DECIMAL*, pdecresult : DECIMAL*) : HRESULT

  # Params # pdecin : DECIMAL* [In],pdecresult : DECIMAL* [In]
  fun VarDecAbs(pdecin : DECIMAL*, pdecresult : DECIMAL*) : HRESULT

  # Params # pdecin : DECIMAL* [In],pdecresult : DECIMAL* [In]
  fun VarDecFix(pdecin : DECIMAL*, pdecresult : DECIMAL*) : HRESULT

  # Params # pdecin : DECIMAL* [In],pdecresult : DECIMAL* [In]
  fun VarDecInt(pdecin : DECIMAL*, pdecresult : DECIMAL*) : HRESULT

  # Params # pdecin : DECIMAL* [In],pdecresult : DECIMAL* [In]
  fun VarDecNeg(pdecin : DECIMAL*, pdecresult : DECIMAL*) : HRESULT

  # Params # pdecin : DECIMAL* [In],cdecimals : Int32 [In],pdecresult : DECIMAL* [In]
  fun VarDecRound(pdecin : DECIMAL*, cdecimals : Int32, pdecresult : DECIMAL*) : HRESULT

  # Params # pdecleft : DECIMAL* [In],pdecright : DECIMAL* [In]
  fun VarDecCmp(pdecleft : DECIMAL*, pdecright : DECIMAL*) : HRESULT

  # Params # pdecleft : DECIMAL* [In],dblright : Float64 [In]
  fun VarDecCmpR8(pdecleft : DECIMAL*, dblright : Float64) : HRESULT

  # Params # cyleft : CY [In],cyright : CY [In],pcyresult : CY* [In]
  fun VarCyAdd(cyleft : CY, cyright : CY, pcyresult : CY*) : HRESULT

  # Params # cyleft : CY [In],cyright : CY [In],pcyresult : CY* [In]
  fun VarCyMul(cyleft : CY, cyright : CY, pcyresult : CY*) : HRESULT

  # Params # cyleft : CY [In],lright : Int32 [In],pcyresult : CY* [In]
  fun VarCyMulI4(cyleft : CY, lright : Int32, pcyresult : CY*) : HRESULT

  # Params # cyleft : CY [In],lright : Int64 [In],pcyresult : CY* [In]
  fun VarCyMulI8(cyleft : CY, lright : Int64, pcyresult : CY*) : HRESULT

  # Params # cyleft : CY [In],cyright : CY [In],pcyresult : CY* [In]
  fun VarCySub(cyleft : CY, cyright : CY, pcyresult : CY*) : HRESULT

  # Params # cyin : CY [In],pcyresult : CY* [In]
  fun VarCyAbs(cyin : CY, pcyresult : CY*) : HRESULT

  # Params # cyin : CY [In],pcyresult : CY* [In]
  fun VarCyFix(cyin : CY, pcyresult : CY*) : HRESULT

  # Params # cyin : CY [In],pcyresult : CY* [In]
  fun VarCyInt(cyin : CY, pcyresult : CY*) : HRESULT

  # Params # cyin : CY [In],pcyresult : CY* [In]
  fun VarCyNeg(cyin : CY, pcyresult : CY*) : HRESULT

  # Params # cyin : CY [In],cdecimals : Int32 [In],pcyresult : CY* [In]
  fun VarCyRound(cyin : CY, cdecimals : Int32, pcyresult : CY*) : HRESULT

  # Params # cyleft : CY [In],cyright : CY [In]
  fun VarCyCmp(cyleft : CY, cyright : CY) : HRESULT

  # Params # cyleft : CY [In],dblright : Float64 [In]
  fun VarCyCmpR8(cyleft : CY, dblright : Float64) : HRESULT

  # Params # bstrleft : UInt8* [In],bstrright : UInt8* [In],pbstrresult : UInt16** [In]
  fun VarBstrCat(bstrleft : UInt8*, bstrright : UInt8*, pbstrresult : UInt16**) : HRESULT

  # Params # bstrleft : UInt8* [In],bstrright : UInt8* [In],lcid : UInt32 [In],dwflags : UInt32 [In]
  fun VarBstrCmp(bstrleft : UInt8*, bstrright : UInt8*, lcid : UInt32, dwflags : UInt32) : HRESULT

  # Params # dblleft : Float64 [In],dblright : Float64 [In],pdblresult : Float64* [In]
  fun VarR8Pow(dblleft : Float64, dblright : Float64, pdblresult : Float64*) : HRESULT

  # Params # fltleft : Float32 [In],dblright : Float64 [In]
  fun VarR4CmpR8(fltleft : Float32, dblright : Float64) : HRESULT

  # Params # dblin : Float64 [In],cdecimals : Int32 [In],pdblresult : Float64* [In]
  fun VarR8Round(dblin : Float64, cdecimals : Int32, pdblresult : Float64*) : HRESULT

  # Params # pudatein : UDATE* [In],dwflags : UInt32 [In],pdateout : Float64* [In]
  fun VarDateFromUdate(pudatein : UDATE*, dwflags : UInt32, pdateout : Float64*) : HRESULT

  # Params # pudatein : UDATE* [In],lcid : UInt32 [In],dwflags : UInt32 [In],pdateout : Float64* [In]
  fun VarDateFromUdateEx(pudatein : UDATE*, lcid : UInt32, dwflags : UInt32, pdateout : Float64*) : HRESULT

  # Params # datein : Float64 [In],dwflags : UInt32 [In],pudateout : UDATE* [In]
  fun VarUdateFromDate(datein : Float64, dwflags : UInt32, pudateout : UDATE*) : HRESULT

  # Params # lcid : UInt32 [In],prgp : LibC::LPWSTR** [In]
  fun GetAltMonthNames(lcid : UInt32, prgp : LibC::LPWSTR**) : HRESULT

  # Params # pvarin : VARIANT* [In],pstrformat : LibC::LPWSTR [In],ifirstday : Int32 [In],ifirstweek : Int32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarFormat(pvarin : VARIANT*, pstrformat : LibC::LPWSTR, ifirstday : Int32, ifirstweek : Int32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # pvarin : VARIANT* [In],inamedformat : Int32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarFormatDateTime(pvarin : VARIANT*, inamedformat : Int32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # pvarin : VARIANT* [In],inumdig : Int32 [In],iinclead : Int32 [In],iuseparens : Int32 [In],igroup : Int32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarFormatNumber(pvarin : VARIANT*, inumdig : Int32, iinclead : Int32, iuseparens : Int32, igroup : Int32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # pvarin : VARIANT* [In],inumdig : Int32 [In],iinclead : Int32 [In],iuseparens : Int32 [In],igroup : Int32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarFormatPercent(pvarin : VARIANT*, inumdig : Int32, iinclead : Int32, iuseparens : Int32, igroup : Int32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # pvarin : VARIANT* [In],inumdig : Int32 [In],iinclead : Int32 [In],iuseparens : Int32 [In],igroup : Int32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarFormatCurrency(pvarin : VARIANT*, inumdig : Int32, iinclead : Int32, iuseparens : Int32, igroup : Int32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # iweekday : Int32 [In],fabbrev : Int32 [In],ifirstday : Int32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarWeekdayName(iweekday : Int32, fabbrev : Int32, ifirstday : Int32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # imonth : Int32 [In],fabbrev : Int32 [In],dwflags : UInt32 [In],pbstrout : UInt8** [In]
  fun VarMonthName(imonth : Int32, fabbrev : Int32, dwflags : UInt32, pbstrout : UInt8**) : HRESULT

  # Params # pvarin : VARIANT* [In],pstrformat : LibC::LPWSTR [In],pbtokcur : UInt8* [In],dwflags : UInt32 [In],pbstrout : UInt8** [In],lcid : UInt32 [In]
  fun VarFormatFromTokens(pvarin : VARIANT*, pstrformat : LibC::LPWSTR, pbtokcur : UInt8*, dwflags : UInt32, pbstrout : UInt8**, lcid : UInt32) : HRESULT

  # Params # pstrformat : LibC::LPWSTR [In],rgbtok : UInt8* [In],cbtok : Int32 [In],ifirstday : Int32 [In],ifirstweek : Int32 [In],lcid : UInt32 [In],pcbactual : Int32* [In]
  fun VarTokenizeFormatString(pstrformat : LibC::LPWSTR, rgbtok : UInt8*, cbtok : Int32, ifirstday : Int32, ifirstweek : Int32, lcid : UInt32, pcbactual : Int32*) : HRESULT

  # Params # syskind : SYSKIND [In],lcid : UInt32 [In],szname : PSTR [In]
  fun LHashValOfNameSysA(syskind : SYSKIND, lcid : UInt32, szname : PSTR) : UInt32

  # Params # syskind : SYSKIND [In],lcid : UInt32 [In],szname : LibC::LPWSTR [In]
  fun LHashValOfNameSys(syskind : SYSKIND, lcid : UInt32, szname : LibC::LPWSTR) : UInt32

  # Params # szfile : LibC::LPWSTR [In],pptlib : ITypeLib* [In]
  fun LoadTypeLib(szfile : LibC::LPWSTR, pptlib : ITypeLib*) : HRESULT

  # Params # szfile : LibC::LPWSTR [In],regkind : REGKIND [In],pptlib : ITypeLib* [In]
  fun LoadTypeLibEx(szfile : LibC::LPWSTR, regkind : REGKIND, pptlib : ITypeLib*) : HRESULT

  # Params # rguid : Guid* [In],wvermajor : UInt16 [In],wverminor : UInt16 [In],lcid : UInt32 [In],pptlib : ITypeLib* [In]
  fun LoadRegTypeLib(rguid : Guid*, wvermajor : UInt16, wverminor : UInt16, lcid : UInt32, pptlib : ITypeLib*) : HRESULT

  # Params # guid : Guid* [In],wmaj : UInt16 [In],wmin : UInt16 [In],lcid : UInt32 [In],lpbstrpathname : UInt16** [In]
  fun QueryPathOfRegTypeLib(guid : Guid*, wmaj : UInt16, wmin : UInt16, lcid : UInt32, lpbstrpathname : UInt16**) : HRESULT

  # Params # ptlib : ITypeLib [In],szfullpath : LibC::LPWSTR [In],szhelpdir : LibC::LPWSTR [In]
  fun RegisterTypeLib(ptlib : ITypeLib, szfullpath : LibC::LPWSTR, szhelpdir : LibC::LPWSTR) : HRESULT

  # Params # libid : Guid* [In],wvermajor : UInt16 [In],wverminor : UInt16 [In],lcid : UInt32 [In],syskind : SYSKIND [In]
  fun UnRegisterTypeLib(libid : Guid*, wvermajor : UInt16, wverminor : UInt16, lcid : UInt32, syskind : SYSKIND) : HRESULT

  # Params # ptlib : ITypeLib [In],szfullpath : LibC::LPWSTR [In],szhelpdir : LibC::LPWSTR [In]
  fun RegisterTypeLibForUser(ptlib : ITypeLib, szfullpath : LibC::LPWSTR, szhelpdir : LibC::LPWSTR) : HRESULT

  # Params # libid : Guid* [In],wmajorvernum : UInt16 [In],wminorvernum : UInt16 [In],lcid : UInt32 [In],syskind : SYSKIND [In]
  fun UnRegisterTypeLibForUser(libid : Guid*, wmajorvernum : UInt16, wminorvernum : UInt16, lcid : UInt32, syskind : SYSKIND) : HRESULT

  # Params # syskind : SYSKIND [In],szfile : LibC::LPWSTR [In],ppctlib : ICreateTypeLib* [In]
  fun CreateTypeLib(syskind : SYSKIND, szfile : LibC::LPWSTR, ppctlib : ICreateTypeLib*) : HRESULT

  # Params # syskind : SYSKIND [In],szfile : LibC::LPWSTR [In],ppctlib : ICreateTypeLib2* [In]
  fun CreateTypeLib2(syskind : SYSKIND, szfile : LibC::LPWSTR, ppctlib : ICreateTypeLib2*) : HRESULT

  # Params # pdispparams : DISPPARAMS* [In],position : UInt32 [In],vttarg : UInt16 [In],pvarresult : VARIANT* [In],puargerr : UInt32* [In]
  fun DispGetParam(pdispparams : DISPPARAMS*, position : UInt32, vttarg : UInt16, pvarresult : VARIANT*, puargerr : UInt32*) : HRESULT

  # Params # ptinfo : ITypeInfo [In],rgsznames : LibC::LPWSTR* [In],cnames : UInt32 [In],rgdispid : Int32* [In]
  fun DispGetIDsOfNames(ptinfo : ITypeInfo, rgsznames : LibC::LPWSTR*, cnames : UInt32, rgdispid : Int32*) : HRESULT

  # Params # this : Void* [In],ptinfo : ITypeInfo [In],dispidmember : Int32 [In],wflags : UInt16 [In],pparams : DISPPARAMS* [In],pvarresult : VARIANT* [In],pexcepinfo : EXCEPINFO* [In],puargerr : UInt32* [In]
  fun DispInvoke(this : Void*, ptinfo : ITypeInfo, dispidmember : Int32, wflags : UInt16, pparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT

  # Params # pidata : INTERFACEDATA* [In],lcid : UInt32 [In],pptinfo : ITypeInfo* [In]
  fun CreateDispTypeInfo(pidata : INTERFACEDATA*, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT

  # Params # punkouter : IUnknown [In],pvthis : Void* [In],ptinfo : ITypeInfo [In],ppunkstddisp : IUnknown* [In]
  fun CreateStdDispatch(punkouter : IUnknown, pvthis : Void*, ptinfo : ITypeInfo, ppunkstddisp : IUnknown*) : HRESULT

  # Params # pvinstance : Void* [In],ovft : LibC::UINT_PTR [In],cc : CALLCONV [In],vtreturn : UInt16 [In],cactuals : UInt32 [In],prgvt : UInt16* [In],prgpvarg : VARIANT** [In],pvargresult : VARIANT* [In]
  fun DispCallFunc(pvinstance : Void*, ovft : LibC::UINT_PTR, cc : CALLCONV, vtreturn : UInt16, cactuals : UInt32, prgvt : UInt16*, prgpvarg : VARIANT**, pvargresult : VARIANT*) : HRESULT

  # Params # punk : IUnknown [In],rclsid : Guid* [In],dwflags : UInt32 [In],pdwregister : UInt32* [In]
  fun RegisterActiveObject(punk : IUnknown, rclsid : Guid*, dwflags : UInt32, pdwregister : UInt32*) : HRESULT

  # Params # dwregister : UInt32 [In],pvreserved : Void* [In]
  fun RevokeActiveObject(dwregister : UInt32, pvreserved : Void*) : HRESULT

  # Params # rclsid : Guid* [In],pvreserved : Void* [In],ppunk : IUnknown* [In]
  fun GetActiveObject(rclsid : Guid*, pvreserved : Void*, ppunk : IUnknown*) : HRESULT

  # Params # pperrinfo : ICreateErrorInfo* [In]
  fun CreateErrorInfo(pperrinfo : ICreateErrorInfo*) : HRESULT

  # Params # ptypeinfo : ITypeInfo [In],pprecinfo : IRecordInfo* [In]
  fun GetRecordInfoFromTypeInfo(ptypeinfo : ITypeInfo, pprecinfo : IRecordInfo*) : HRESULT

  # Params # rguidtypelib : Guid* [In],uvermajor : UInt32 [In],uverminor : UInt32 [In],lcid : UInt32 [In],rguidtypeinfo : Guid* [In],pprecinfo : IRecordInfo* [In]
  fun GetRecordInfoFromGuids(rguidtypelib : Guid*, uvermajor : UInt32, uverminor : UInt32, lcid : UInt32, rguidtypeinfo : Guid*, pprecinfo : IRecordInfo*) : HRESULT

  # Params # 
  fun OaBuildVersion : UInt32

  # Params # pcustdata : CUSTDATA* [In]
  fun ClearCustData(pcustdata : CUSTDATA*)

  # Params # 
  fun OaEnablePerUserTLibRegistration

  # Params # 
  fun OleBuildVersion : UInt32

  # Params # pvreserved : Void* [In]
  fun OleInitialize(pvreserved : Void*) : HRESULT

  # Params # 
  fun OleUninitialize

  # Params # psrcdataobject : IDataObject [In]
  fun OleQueryLinkFromData(psrcdataobject : IDataObject) : HRESULT

  # Params # psrcdataobject : IDataObject [In]
  fun OleQueryCreateFromData(psrcdataobject : IDataObject) : HRESULT

  # Params # rclsid : Guid* [In],riid : Guid* [In],renderopt : UInt32 [In],pformatetc : FORMATETC* [In],pclientsite : IOleClientSite [In],pstg : IStorage [In],ppvobj : Void** [In]
  fun OleCreate(rclsid : Guid*, riid : Guid*, renderopt : UInt32, pformatetc : FORMATETC*, pclientsite : IOleClientSite, pstg : IStorage, ppvobj : Void**) : HRESULT

  # Params # rclsid : Guid* [In],riid : Guid* [In],dwflags : UInt32 [In],renderopt : UInt32 [In],cformats : UInt32 [In],rgadvf : UInt32* [In],rgformatetc : FORMATETC* [In],lpadvisesink : IAdviseSink [In],rgdwconnection : UInt32* [In],pclientsite : IOleClientSite [In],pstg : IStorage [In],ppvobj : Void** [In]
  fun OleCreateEx(rclsid : Guid*, riid : Guid*, dwflags : UInt32, renderopt : UInt32, cformats : UInt32, rgadvf : UInt32*, rgformatetc : FORMATETC*, lpadvisesink : IAdviseSink, rgdwconnection : UInt32*, pclientsite : IOleClientSite, pstg : IStorage, ppvobj : Void**) : HRESULT

  # Params # psrcdataobj : IDataObject [In],riid : Guid* [In],renderopt : UInt32 [In],pformatetc : FORMATETC* [In],pclientsite : IOleClientSite [In],pstg : IStorage [In],ppvobj : Void** [In]
  fun OleCreateFromData(psrcdataobj : IDataObject, riid : Guid*, renderopt : UInt32, pformatetc : FORMATETC*, pclientsite : IOleClientSite, pstg : IStorage, ppvobj : Void**) : HRESULT

  # Params # psrcdataobj : IDataObject [In],riid : Guid* [In],dwflags : UInt32 [In],renderopt : UInt32 [In],cformats : UInt32 [In],rgadvf : UInt32* [In],rgformatetc : FORMATETC* [In],lpadvisesink : IAdviseSink [In],rgdwconnection : UInt32* [In],pclientsite : IOleClientSite [In],pstg : IStorage [In],ppvobj : Void** [In]
  fun OleCreateFromDataEx(psrcdataobj : IDataObject, riid : Guid*, dwflags : UInt32, renderopt : UInt32, cformats : UInt32, rgadvf : UInt32*, rgformatetc : FORMATETC*, lpadvisesink : IAdviseSink, rgdwconnection : UInt32*, pclientsite : IOleClientSite, pstg : IStorage, ppvobj : Void**) : HRESULT

  # Params # psrcdataobj : IDataObject [In],riid : Guid* [In],renderopt : UInt32 [In],pformatetc : FORMATETC* [In],pclientsite : IOleClientSite [In],pstg : IStorage [In],ppvobj : Void** [In]
  fun OleCreateLinkFromData(psrcdataobj : IDataObject, riid : Guid*, renderopt : UInt32, pformatetc : FORMATETC*, pclientsite : IOleClientSite, pstg : IStorage, ppvobj : Void**) : HRESULT

  # Params # psrcdataobj : IDataObject [In],riid : Guid* [In],dwflags : UInt32 [In],renderopt : UInt32 [In],cformats : UInt32 [In],rgadvf : UInt32* [In],rgformatetc : FORMATETC* [In],lpadvisesink : IAdviseSink [In],rgdwconnection : UInt32* [In],pclientsite : IOleClientSite [In],pstg : IStorage [In],ppvobj : Void** [In]
  fun OleCreateLinkFromDataEx(psrcdataobj : IDataObject, riid : Guid*, dwflags : UInt32, renderopt : UInt32, cformats : UInt32, rgadvf : UInt32*, rgformatetc : FORMATETC*, lpadvisesink : IAdviseSink, rgdwconnection : UInt32*, pclientsite : IOleClientSite, pstg : IStorage, ppvobj : Void**) : HRESULT

  # Params # psrcdataobj : IDataObject [In],iid : Guid* [In],renderopt : UInt32 [In],pformatetc : FORMATETC* [In],pclientsite : IOleClientSite [In],pstg : IStorage [In],ppvobj : Void** [In]
  fun OleCreateStaticFromData(psrcdataobj : IDataObject, iid : Guid*, renderopt : UInt32, pformatetc : FORMATETC*, pclientsite : IOleClientSite, pstg : IStorage, ppvobj : Void**) : HRESULT

  # Params # pmklinksrc : IMoniker [In],riid : Guid* [In],renderopt : UInt32 [In],lpformatetc : FORMATETC* [In],pclientsite : IOleClientSite [In],pstg : IStorage [In],ppvobj : Void** [In]
  fun OleCreateLink(pmklinksrc : IMoniker, riid : Guid*, renderopt : UInt32, lpformatetc : FORMATETC*, pclientsite : IOleClientSite, pstg : IStorage, ppvobj : Void**) : HRESULT

  # Params # pmklinksrc : IMoniker [In],riid : Guid* [In],dwflags : UInt32 [In],renderopt : UInt32 [In],cformats : UInt32 [In],rgadvf : UInt32* [In],rgformatetc : FORMATETC* [In],lpadvisesink : IAdviseSink [In],rgdwconnection : UInt32* [In],pclientsite : IOleClientSite [In],pstg : IStorage [In],ppvobj : Void** [In]
  fun OleCreateLinkEx(pmklinksrc : IMoniker, riid : Guid*, dwflags : UInt32, renderopt : UInt32, cformats : UInt32, rgadvf : UInt32*, rgformatetc : FORMATETC*, lpadvisesink : IAdviseSink, rgdwconnection : UInt32*, pclientsite : IOleClientSite, pstg : IStorage, ppvobj : Void**) : HRESULT

  # Params # lpszfilename : LibC::LPWSTR [In],riid : Guid* [In],renderopt : UInt32 [In],lpformatetc : FORMATETC* [In],pclientsite : IOleClientSite [In],pstg : IStorage [In],ppvobj : Void** [In]
  fun OleCreateLinkToFile(lpszfilename : LibC::LPWSTR, riid : Guid*, renderopt : UInt32, lpformatetc : FORMATETC*, pclientsite : IOleClientSite, pstg : IStorage, ppvobj : Void**) : HRESULT

  # Params # lpszfilename : LibC::LPWSTR [In],riid : Guid* [In],dwflags : UInt32 [In],renderopt : UInt32 [In],cformats : UInt32 [In],rgadvf : UInt32* [In],rgformatetc : FORMATETC* [In],lpadvisesink : IAdviseSink [In],rgdwconnection : UInt32* [In],pclientsite : IOleClientSite [In],pstg : IStorage [In],ppvobj : Void** [In]
  fun OleCreateLinkToFileEx(lpszfilename : LibC::LPWSTR, riid : Guid*, dwflags : UInt32, renderopt : UInt32, cformats : UInt32, rgadvf : UInt32*, rgformatetc : FORMATETC*, lpadvisesink : IAdviseSink, rgdwconnection : UInt32*, pclientsite : IOleClientSite, pstg : IStorage, ppvobj : Void**) : HRESULT

  # Params # rclsid : Guid* [In],lpszfilename : LibC::LPWSTR [In],riid : Guid* [In],renderopt : UInt32 [In],lpformatetc : FORMATETC* [In],pclientsite : IOleClientSite [In],pstg : IStorage [In],ppvobj : Void** [In]
  fun OleCreateFromFile(rclsid : Guid*, lpszfilename : LibC::LPWSTR, riid : Guid*, renderopt : UInt32, lpformatetc : FORMATETC*, pclientsite : IOleClientSite, pstg : IStorage, ppvobj : Void**) : HRESULT

  # Params # rclsid : Guid* [In],lpszfilename : LibC::LPWSTR [In],riid : Guid* [In],dwflags : UInt32 [In],renderopt : UInt32 [In],cformats : UInt32 [In],rgadvf : UInt32* [In],rgformatetc : FORMATETC* [In],lpadvisesink : IAdviseSink [In],rgdwconnection : UInt32* [In],pclientsite : IOleClientSite [In],pstg : IStorage [In],ppvobj : Void** [In]
  fun OleCreateFromFileEx(rclsid : Guid*, lpszfilename : LibC::LPWSTR, riid : Guid*, dwflags : UInt32, renderopt : UInt32, cformats : UInt32, rgadvf : UInt32*, rgformatetc : FORMATETC*, lpadvisesink : IAdviseSink, rgdwconnection : UInt32*, pclientsite : IOleClientSite, pstg : IStorage, ppvobj : Void**) : HRESULT

  # Params # pstg : IStorage [In],riid : Guid* [In],pclientsite : IOleClientSite [In],ppvobj : Void** [In]
  fun OleLoad(pstg : IStorage, riid : Guid*, pclientsite : IOleClientSite, ppvobj : Void**) : HRESULT

  # Params # pps : IPersistStorage [In],pstg : IStorage [In],fsameasload : LibC::BOOL [In]
  fun OleSave(pps : IPersistStorage, pstg : IStorage, fsameasload : LibC::BOOL) : HRESULT

  # Params # pstm : IStream [In],iidinterface : Guid* [In],ppvobj : Void** [In]
  fun OleLoadFromStream(pstm : IStream, iidinterface : Guid*, ppvobj : Void**) : HRESULT

  # Params # ppstm : IPersistStream [In],pstm : IStream [In]
  fun OleSaveToStream(ppstm : IPersistStream, pstm : IStream) : HRESULT

  # Params # punknown : IUnknown [In],fcontained : LibC::BOOL [In]
  fun OleSetContainedObject(punknown : IUnknown, fcontained : LibC::BOOL) : HRESULT

  # Params # punknown : IUnknown [In],fvisible : LibC::BOOL [In]
  fun OleNoteObjectVisible(punknown : IUnknown, fvisible : LibC::BOOL) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],pdroptarget : IDropTarget [In]
  fun RegisterDragDrop(hwnd : LibC::HANDLE, pdroptarget : IDropTarget) : HRESULT

  # Params # hwnd : LibC::HANDLE [In]
  fun RevokeDragDrop(hwnd : LibC::HANDLE) : HRESULT

  # Params # pdataobj : IDataObject [In],pdropsource : IDropSource [In],dwokeffects : UInt32 [In],pdweffect : UInt32* [In]
  fun DoDragDrop(pdataobj : IDataObject, pdropsource : IDropSource, dwokeffects : UInt32, pdweffect : UInt32*) : HRESULT

  # Params # pdataobj : IDataObject [In]
  fun OleSetClipboard(pdataobj : IDataObject) : HRESULT

  # Params # ppdataobj : IDataObject* [In]
  fun OleGetClipboard(ppdataobj : IDataObject*) : HRESULT

  # Params # dataobject : IDataObject* [In],dataenterpriseid : LibC::LPWSTR* [In],sourcedescription : LibC::LPWSTR* [In],targetdescription : LibC::LPWSTR* [In],datadescription : LibC::LPWSTR* [In]
  fun OleGetClipboardWithEnterpriseInfo(dataobject : IDataObject*, dataenterpriseid : LibC::LPWSTR*, sourcedescription : LibC::LPWSTR*, targetdescription : LibC::LPWSTR*, datadescription : LibC::LPWSTR*) : HRESULT

  # Params # 
  fun OleFlushClipboard : HRESULT

  # Params # pdataobj : IDataObject [In]
  fun OleIsCurrentClipboard(pdataobj : IDataObject) : HRESULT

  # Params # hmenucombined : LibC::HANDLE [In],lpmenuwidths : OleMenuGroupWidths* [In]
  fun OleCreateMenuDescriptor(hmenucombined : LibC::HANDLE, lpmenuwidths : OleMenuGroupWidths*) : LibC::IntPtrT

  # Params # holemenu : LibC::IntPtrT [In],hwndframe : LibC::HANDLE [In],hwndactiveobject : LibC::HANDLE [In],lpframe : IOleInPlaceFrame [In],lpactiveobj : IOleInPlaceActiveObject [In]
  fun OleSetMenuDescriptor(holemenu : LibC::IntPtrT, hwndframe : LibC::HANDLE, hwndactiveobject : LibC::HANDLE, lpframe : IOleInPlaceFrame, lpactiveobj : IOleInPlaceActiveObject) : HRESULT

  # Params # holemenu : LibC::IntPtrT [In]
  fun OleDestroyMenuDescriptor(holemenu : LibC::IntPtrT) : HRESULT

  # Params # lpframe : IOleInPlaceFrame [In],lpframeinfo : OIFI* [In],lpmsg : MSG* [In]
  fun OleTranslateAccelerator(lpframe : IOleInPlaceFrame, lpframeinfo : OIFI*, lpmsg : MSG*) : HRESULT

  # Params # hsrc : LibC::HANDLE [In],cfformat : UInt16 [In],uiflags : UInt32 [In]
  fun OleDuplicateData(hsrc : LibC::HANDLE, cfformat : UInt16, uiflags : UInt32) : LibC::HANDLE

  # Params # punknown : IUnknown [In],dwaspect : UInt32 [In],hdcdraw : HDC [In],lprcbounds : RECT* [In]
  fun OleDraw(punknown : IUnknown, dwaspect : UInt32, hdcdraw : HDC, lprcbounds : RECT*) : HRESULT

  # Params # punknown : IUnknown [In]
  fun OleRun(punknown : IUnknown) : HRESULT

  # Params # pobject : IOleObject [In]
  fun OleIsRunning(pobject : IOleObject) : LibC::BOOL

  # Params # punknown : IUnknown [In],flock : LibC::BOOL [In],flastunlockcloses : LibC::BOOL [In]
  fun OleLockRunning(punknown : IUnknown, flock : LibC::BOOL, flastunlockcloses : LibC::BOOL) : HRESULT

  # Params # param0 : STGMEDIUM* [In]
  fun ReleaseStgMedium(param0 : STGMEDIUM*)

  # Params # ppoaholder : IOleAdviseHolder* [In]
  fun CreateOleAdviseHolder(ppoaholder : IOleAdviseHolder*) : HRESULT

  # Params # clsid : Guid* [In],punkouter : IUnknown [In],riid : Guid* [In],lplpobj : Void** [In]
  fun OleCreateDefaultHandler(clsid : Guid*, punkouter : IUnknown, riid : Guid*, lplpobj : Void**) : HRESULT

  # Params # clsid : Guid* [In],punkouter : IUnknown [In],flags : UInt32 [In],pcf : IClassFactory [In],riid : Guid* [In],lplpobj : Void** [In]
  fun OleCreateEmbeddingHelper(clsid : Guid*, punkouter : IUnknown, flags : UInt32, pcf : IClassFactory, riid : Guid*, lplpobj : Void**) : HRESULT

  # Params # haccel : LibC::HANDLE [In],caccelentries : Int32 [In],lpmsg : MSG* [In],lpwcmd : UInt16* [In]
  fun IsAccelerator(haccel : LibC::HANDLE, caccelentries : Int32, lpmsg : MSG*, lpwcmd : UInt16*) : LibC::BOOL

  # Params # lpszpath : LibC::LPWSTR [In],fusefileaslabel : LibC::BOOL [In]
  fun OleGetIconOfFile(lpszpath : LibC::LPWSTR, fusefileaslabel : LibC::BOOL) : LibC::IntPtrT

  # Params # rclsid : Guid* [In],lpszlabel : LibC::LPWSTR [In],fusetypeaslabel : LibC::BOOL [In]
  fun OleGetIconOfClass(rclsid : Guid*, lpszlabel : LibC::LPWSTR, fusetypeaslabel : LibC::BOOL) : LibC::IntPtrT

  # Params # hicon : LibC::HANDLE [In],lpszlabel : LibC::LPWSTR [In],lpszsourcefile : LibC::LPWSTR [In],iiconindex : UInt32 [In]
  fun OleMetafilePictFromIconAndLabel(hicon : LibC::HANDLE, lpszlabel : LibC::LPWSTR, lpszsourcefile : LibC::LPWSTR, iiconindex : UInt32) : LibC::IntPtrT

  # Params # clsid : Guid* [In],dwformoftype : UInt32 [In],pszusertype : LibC::LPWSTR* [In]
  fun OleRegGetUserType(clsid : Guid*, dwformoftype : UInt32, pszusertype : LibC::LPWSTR*) : HRESULT

  # Params # clsid : Guid* [In],dwaspect : UInt32 [In],pdwstatus : UInt32* [In]
  fun OleRegGetMiscStatus(clsid : Guid*, dwaspect : UInt32, pdwstatus : UInt32*) : HRESULT

  # Params # clsid : Guid* [In],dwdirection : UInt32 [In],ppenum : IEnumFORMATETC* [In]
  fun OleRegEnumFormatEtc(clsid : Guid*, dwdirection : UInt32, ppenum : IEnumFORMATETC*) : HRESULT

  # Params # clsid : Guid* [In],ppenum : IEnumOLEVERB* [In]
  fun OleRegEnumVerbs(clsid : Guid*, ppenum : IEnumOLEVERB*) : HRESULT

  # Params # pstg : IStorage [In],pclsidnew : Guid* [In]
  fun OleDoAutoConvert(pstg : IStorage, pclsidnew : Guid*) : HRESULT

  # Params # clsidold : Guid* [In],pclsidnew : Guid* [In]
  fun OleGetAutoConvert(clsidold : Guid*, pclsidnew : Guid*) : HRESULT

  # Params # clsidold : Guid* [In],clsidnew : Guid* [In]
  fun OleSetAutoConvert(clsidold : Guid*, clsidnew : Guid*) : HRESULT

  # Params # param0 : UInt32* [In],param1 : UInt32 [In],param2 : HRGN* [In]
  fun HRGN_UserSize(param0 : UInt32*, param1 : UInt32, param2 : HRGN*) : UInt32

  # Params # param0 : UInt32* [In],param1 : UInt8* [In],param2 : HRGN* [In]
  fun HRGN_UserMarshal(param0 : UInt32*, param1 : UInt8*, param2 : HRGN*) : UInt8*

  # Params # param0 : UInt32* [In],param1 : UInt8* [In],param2 : HRGN* [In]
  fun HRGN_UserUnmarshal(param0 : UInt32*, param1 : UInt8*, param2 : HRGN*) : UInt8*

  # Params # param0 : UInt32* [In],param1 : HRGN* [In]
  fun HRGN_UserFree(param0 : UInt32*, param1 : HRGN*)

  # Params # param0 : UInt32* [In],param1 : UInt32 [In],param2 : HRGN* [In]
  fun HRGN_UserSize64(param0 : UInt32*, param1 : UInt32, param2 : HRGN*) : UInt32

  # Params # param0 : UInt32* [In],param1 : UInt8* [In],param2 : HRGN* [In]
  fun HRGN_UserMarshal64(param0 : UInt32*, param1 : UInt8*, param2 : HRGN*) : UInt8*

  # Params # param0 : UInt32* [In],param1 : UInt8* [In],param2 : HRGN* [In]
  fun HRGN_UserUnmarshal64(param0 : UInt32*, param1 : UInt8*, param2 : HRGN*) : UInt8*

  # Params # param0 : UInt32* [In],param1 : HRGN* [In]
  fun HRGN_UserFree64(param0 : UInt32*, param1 : HRGN*)

  # Params # hwndowner : LibC::HANDLE [In],x : UInt32 [In],y : UInt32 [In],lpszcaption : LibC::LPWSTR [In],cobjects : UInt32 [In],ppunk : IUnknown* [In],cpages : UInt32 [In],ppageclsid : Guid* [In],lcid : UInt32 [In],dwreserved : UInt32 [In],pvreserved : Void* [In]
  fun OleCreatePropertyFrame(hwndowner : LibC::HANDLE, x : UInt32, y : UInt32, lpszcaption : LibC::LPWSTR, cobjects : UInt32, ppunk : IUnknown*, cpages : UInt32, ppageclsid : Guid*, lcid : UInt32, dwreserved : UInt32, pvreserved : Void*) : HRESULT

  # Params # lpparams : OCPFIPARAMS* [In]
  fun OleCreatePropertyFrameIndirect(lpparams : OCPFIPARAMS*) : HRESULT

  # Params # clr : UInt32 [In],hpal : HPALETTE [In],lpcolorref : UInt32* [In]
  fun OleTranslateColor(clr : UInt32, hpal : HPALETTE, lpcolorref : UInt32*) : HRESULT

  # Params # lpfontdesc : FONTDESC* [In],riid : Guid* [In],lplpvobj : Void** [In]
  fun OleCreateFontIndirect(lpfontdesc : FONTDESC*, riid : Guid*, lplpvobj : Void**) : HRESULT

  # Params # lppictdesc : PICTDESC* [In],riid : Guid* [In],fown : LibC::BOOL [In],lplpvobj : Void** [In]
  fun OleCreatePictureIndirect(lppictdesc : PICTDESC*, riid : Guid*, fown : LibC::BOOL, lplpvobj : Void**) : HRESULT

  # Params # lpstream : IStream [In],lsize : Int32 [In],frunmode : LibC::BOOL [In],riid : Guid* [In],lplpvobj : Void** [In]
  fun OleLoadPicture(lpstream : IStream, lsize : Int32, frunmode : LibC::BOOL, riid : Guid*, lplpvobj : Void**) : HRESULT

  # Params # lpstream : IStream [In],lsize : Int32 [In],frunmode : LibC::BOOL [In],riid : Guid* [In],xsizedesired : UInt32 [In],ysizedesired : UInt32 [In],dwflags : UInt32 [In],lplpvobj : Void** [In]
  fun OleLoadPictureEx(lpstream : IStream, lsize : Int32, frunmode : LibC::BOOL, riid : Guid*, xsizedesired : UInt32, ysizedesired : UInt32, dwflags : UInt32, lplpvobj : Void**) : HRESULT

  # Params # szurlorpath : LibC::LPWSTR [In],punkcaller : IUnknown [In],dwreserved : UInt32 [In],clrreserved : UInt32 [In],riid : Guid* [In],ppvret : Void** [In]
  fun OleLoadPicturePath(szurlorpath : LibC::LPWSTR, punkcaller : IUnknown, dwreserved : UInt32, clrreserved : UInt32, riid : Guid*, ppvret : Void**) : HRESULT

  # Params # varfilename : VARIANT [In],lplpdisppicture : IDispatch* [In]
  fun OleLoadPictureFile(varfilename : VARIANT, lplpdisppicture : IDispatch*) : HRESULT

  # Params # varfilename : VARIANT [In],xsizedesired : UInt32 [In],ysizedesired : UInt32 [In],dwflags : UInt32 [In],lplpdisppicture : IDispatch* [In]
  fun OleLoadPictureFileEx(varfilename : VARIANT, xsizedesired : UInt32, ysizedesired : UInt32, dwflags : UInt32, lplpdisppicture : IDispatch*) : HRESULT

  # Params # lpdisppicture : IDispatch [In],bstrfilename : UInt8* [In]
  fun OleSavePictureFile(lpdisppicture : IDispatch, bstrfilename : UInt8*) : HRESULT

  # Params # hinstexe : HINSTANCE [In],hicon : LibC::HANDLE [In]
  fun OleIconToCursor(hinstexe : HINSTANCE, hicon : LibC::HANDLE) : HANDLE

  # Params # lpoleobj : IOleObject [In],lpszshorttype : LibC::LPWSTR [In],hmenu : LibC::HANDLE [In],upos : UInt32 [In],uidverbmin : UInt32 [In],uidverbmax : UInt32 [In],baddconvert : LibC::BOOL [In],idconvert : UInt32 [In],lphmenu : HANDLE* [In]
  fun OleUIAddVerbMenuW(lpoleobj : IOleObject, lpszshorttype : LibC::LPWSTR, hmenu : LibC::HANDLE, upos : UInt32, uidverbmin : UInt32, uidverbmax : UInt32, baddconvert : LibC::BOOL, idconvert : UInt32, lphmenu : HANDLE*) : LibC::BOOL

  # Params # lpoleobj : IOleObject [In],lpszshorttype : PSTR [In],hmenu : LibC::HANDLE [In],upos : UInt32 [In],uidverbmin : UInt32 [In],uidverbmax : UInt32 [In],baddconvert : LibC::BOOL [In],idconvert : UInt32 [In],lphmenu : HANDLE* [In]
  fun OleUIAddVerbMenuA(lpoleobj : IOleObject, lpszshorttype : PSTR, hmenu : LibC::HANDLE, upos : UInt32, uidverbmin : UInt32, uidverbmax : UInt32, baddconvert : LibC::BOOL, idconvert : UInt32, lphmenu : HANDLE*) : LibC::BOOL

  # Params # param0 : OLEUIINSERTOBJECTW* [In]
  fun OleUIInsertObjectW(param0 : OLEUIINSERTOBJECTW*) : UInt32

  # Params # param0 : OLEUIINSERTOBJECTA* [In]
  fun OleUIInsertObjectA(param0 : OLEUIINSERTOBJECTA*) : UInt32

  # Params # param0 : OLEUIPASTESPECIALW* [In]
  fun OleUIPasteSpecialW(param0 : OLEUIPASTESPECIALW*) : UInt32

  # Params # param0 : OLEUIPASTESPECIALA* [In]
  fun OleUIPasteSpecialA(param0 : OLEUIPASTESPECIALA*) : UInt32

  # Params # param0 : OLEUIEDITLINKSW* [In]
  fun OleUIEditLinksW(param0 : OLEUIEDITLINKSW*) : UInt32

  # Params # param0 : OLEUIEDITLINKSA* [In]
  fun OleUIEditLinksA(param0 : OLEUIEDITLINKSA*) : UInt32

  # Params # param0 : OLEUICHANGEICONW* [In]
  fun OleUIChangeIconW(param0 : OLEUICHANGEICONW*) : UInt32

  # Params # param0 : OLEUICHANGEICONA* [In]
  fun OleUIChangeIconA(param0 : OLEUICHANGEICONA*) : UInt32

  # Params # param0 : OLEUICONVERTW* [In]
  fun OleUIConvertW(param0 : OLEUICONVERTW*) : UInt32

  # Params # param0 : OLEUICONVERTA* [In]
  fun OleUIConvertA(param0 : OLEUICONVERTA*) : UInt32

  # Params # rclsid : Guid* [In],fislinkedobject : LibC::BOOL [In],wformat : UInt16 [In]
  fun OleUICanConvertOrActivateAs(rclsid : Guid*, fislinkedobject : LibC::BOOL, wformat : UInt16) : LibC::BOOL

  # Params # param0 : OLEUIBUSYW* [In]
  fun OleUIBusyW(param0 : OLEUIBUSYW*) : UInt32

  # Params # param0 : OLEUIBUSYA* [In]
  fun OleUIBusyA(param0 : OLEUIBUSYA*) : UInt32

  # Params # param0 : OLEUICHANGESOURCEW* [In]
  fun OleUIChangeSourceW(param0 : OLEUICHANGESOURCEW*) : UInt32

  # Params # param0 : OLEUICHANGESOURCEA* [In]
  fun OleUIChangeSourceA(param0 : OLEUICHANGESOURCEA*) : UInt32

  # Params # param0 : OLEUIOBJECTPROPSW* [In]
  fun OleUIObjectPropertiesW(param0 : OLEUIOBJECTPROPSW*) : UInt32

  # Params # param0 : OLEUIOBJECTPROPSA* [In]
  fun OleUIObjectPropertiesA(param0 : OLEUIOBJECTPROPSA*) : UInt32

  # Params # ntemplate : Int32 [In],hwndparent : LibC::HANDLE [In]
  fun OleUIPromptUserW(ntemplate : Int32, hwndparent : LibC::HANDLE) : Int32

  # Params # ntemplate : Int32 [In],hwndparent : LibC::HANDLE [In]
  fun OleUIPromptUserA(ntemplate : Int32, hwndparent : LibC::HANDLE) : Int32

  # Params # lpoleuilinkcntr : IOleUILinkContainerW [In],hwndparent : LibC::HANDLE [In],lpsztitle : LibC::LPWSTR [In],clinks : Int32 [In]
  fun OleUIUpdateLinksW(lpoleuilinkcntr : IOleUILinkContainerW, hwndparent : LibC::HANDLE, lpsztitle : LibC::LPWSTR, clinks : Int32) : LibC::BOOL

  # Params # lpoleuilinkcntr : IOleUILinkContainerA [In],hwndparent : LibC::HANDLE [In],lpsztitle : PSTR [In],clinks : Int32 [In]
  fun OleUIUpdateLinksA(lpoleuilinkcntr : IOleUILinkContainerA, hwndparent : LibC::HANDLE, lpsztitle : PSTR, clinks : Int32) : LibC::BOOL
end
