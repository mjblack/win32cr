require "./../system/com.cr"
require "./../foundation.cr"
require "./direct2_d/common.cr"
require "./gdi.cr"
require "./../globalization.cr"

module Win32cr::Graphics::DirectWrite
  DWRITE_ALPHA_MAX = 255_u32
  FACILITY_DWRITE = 2200_u32
  DWRITE_ERR_BASE = 20480_u32
  DWRITE_E_REMOTEFONT = -2003283955_i32
  DWRITE_E_DOWNLOADCANCELLED = -2003283954_i32
  DWRITE_E_DOWNLOADFAILED = -2003283953_i32
  DWRITE_E_TOOMANYDOWNLOADS = -2003283952_i32

  enum DWRITE_FONT_AXIS_TAG : UInt32
    DWRITE_FONT_AXIS_TAG_WEIGHT = 1952999287_u32
    DWRITE_FONT_AXIS_TAG_WIDTH = 1752458359_u32
    DWRITE_FONT_AXIS_TAG_SLANT = 1953393779_u32
    DWRITE_FONT_AXIS_TAG_OPTICAL_SIZE = 2054385775_u32
    DWRITE_FONT_AXIS_TAG_ITALIC = 1818326121_u32
  end
  enum DWRITE_MEASURING_MODE
    DWRITE_MEASURING_MODE_NATURAL = 0_i32
    DWRITE_MEASURING_MODE_GDI_CLASSIC = 1_i32
    DWRITE_MEASURING_MODE_GDI_NATURAL = 2_i32
  end
  @[Flags]
  enum DWRITE_GLYPH_IMAGE_FORMATS : UInt32
    DWRITE_GLYPH_IMAGE_FORMATS_NONE = 0_u32
    DWRITE_GLYPH_IMAGE_FORMATS_TRUETYPE = 1_u32
    DWRITE_GLYPH_IMAGE_FORMATS_CFF = 2_u32
    DWRITE_GLYPH_IMAGE_FORMATS_COLR = 4_u32
    DWRITE_GLYPH_IMAGE_FORMATS_SVG = 8_u32
    DWRITE_GLYPH_IMAGE_FORMATS_PNG = 16_u32
    DWRITE_GLYPH_IMAGE_FORMATS_JPEG = 32_u32
    DWRITE_GLYPH_IMAGE_FORMATS_TIFF = 64_u32
    DWRITE_GLYPH_IMAGE_FORMATS_PREMULTIPLIED_B8G8R8A8 = 128_u32
  end
  enum DWRITE_FONT_FILE_TYPE
    DWRITE_FONT_FILE_TYPE_UNKNOWN = 0_i32
    DWRITE_FONT_FILE_TYPE_CFF = 1_i32
    DWRITE_FONT_FILE_TYPE_TRUETYPE = 2_i32
    DWRITE_FONT_FILE_TYPE_OPENTYPE_COLLECTION = 3_i32
    DWRITE_FONT_FILE_TYPE_TYPE1_PFM = 4_i32
    DWRITE_FONT_FILE_TYPE_TYPE1_PFB = 5_i32
    DWRITE_FONT_FILE_TYPE_VECTOR = 6_i32
    DWRITE_FONT_FILE_TYPE_BITMAP = 7_i32
    DWRITE_FONT_FILE_TYPE_TRUETYPE_COLLECTION = 3_i32
  end
  enum DWRITE_FONT_FACE_TYPE
    DWRITE_FONT_FACE_TYPE_CFF = 0_i32
    DWRITE_FONT_FACE_TYPE_TRUETYPE = 1_i32
    DWRITE_FONT_FACE_TYPE_OPENTYPE_COLLECTION = 2_i32
    DWRITE_FONT_FACE_TYPE_TYPE1 = 3_i32
    DWRITE_FONT_FACE_TYPE_VECTOR = 4_i32
    DWRITE_FONT_FACE_TYPE_BITMAP = 5_i32
    DWRITE_FONT_FACE_TYPE_UNKNOWN = 6_i32
    DWRITE_FONT_FACE_TYPE_RAW_CFF = 7_i32
    DWRITE_FONT_FACE_TYPE_TRUETYPE_COLLECTION = 2_i32
  end
  @[Flags]
  enum DWRITE_FONT_SIMULATIONS : UInt32
    DWRITE_FONT_SIMULATIONS_NONE = 0_u32
    DWRITE_FONT_SIMULATIONS_BOLD = 1_u32
    DWRITE_FONT_SIMULATIONS_OBLIQUE = 2_u32
  end
  enum DWRITE_FONT_WEIGHT
    DWRITE_FONT_WEIGHT_THIN = 100_i32
    DWRITE_FONT_WEIGHT_EXTRA_LIGHT = 200_i32
    DWRITE_FONT_WEIGHT_ULTRA_LIGHT = 200_i32
    DWRITE_FONT_WEIGHT_LIGHT = 300_i32
    DWRITE_FONT_WEIGHT_SEMI_LIGHT = 350_i32
    DWRITE_FONT_WEIGHT_NORMAL = 400_i32
    DWRITE_FONT_WEIGHT_REGULAR = 400_i32
    DWRITE_FONT_WEIGHT_MEDIUM = 500_i32
    DWRITE_FONT_WEIGHT_DEMI_BOLD = 600_i32
    DWRITE_FONT_WEIGHT_SEMI_BOLD = 600_i32
    DWRITE_FONT_WEIGHT_BOLD = 700_i32
    DWRITE_FONT_WEIGHT_EXTRA_BOLD = 800_i32
    DWRITE_FONT_WEIGHT_ULTRA_BOLD = 800_i32
    DWRITE_FONT_WEIGHT_BLACK = 900_i32
    DWRITE_FONT_WEIGHT_HEAVY = 900_i32
    DWRITE_FONT_WEIGHT_EXTRA_BLACK = 950_i32
    DWRITE_FONT_WEIGHT_ULTRA_BLACK = 950_i32
  end
  enum DWRITE_FONT_STRETCH
    DWRITE_FONT_STRETCH_UNDEFINED = 0_i32
    DWRITE_FONT_STRETCH_ULTRA_CONDENSED = 1_i32
    DWRITE_FONT_STRETCH_EXTRA_CONDENSED = 2_i32
    DWRITE_FONT_STRETCH_CONDENSED = 3_i32
    DWRITE_FONT_STRETCH_SEMI_CONDENSED = 4_i32
    DWRITE_FONT_STRETCH_NORMAL = 5_i32
    DWRITE_FONT_STRETCH_MEDIUM = 5_i32
    DWRITE_FONT_STRETCH_SEMI_EXPANDED = 6_i32
    DWRITE_FONT_STRETCH_EXPANDED = 7_i32
    DWRITE_FONT_STRETCH_EXTRA_EXPANDED = 8_i32
    DWRITE_FONT_STRETCH_ULTRA_EXPANDED = 9_i32
  end
  enum DWRITE_FONT_STYLE
    DWRITE_FONT_STYLE_NORMAL = 0_i32
    DWRITE_FONT_STYLE_OBLIQUE = 1_i32
    DWRITE_FONT_STYLE_ITALIC = 2_i32
  end
  enum DWRITE_INFORMATIONAL_STRING_ID
    DWRITE_INFORMATIONAL_STRING_NONE = 0_i32
    DWRITE_INFORMATIONAL_STRING_COPYRIGHT_NOTICE = 1_i32
    DWRITE_INFORMATIONAL_STRING_VERSION_STRINGS = 2_i32
    DWRITE_INFORMATIONAL_STRING_TRADEMARK = 3_i32
    DWRITE_INFORMATIONAL_STRING_MANUFACTURER = 4_i32
    DWRITE_INFORMATIONAL_STRING_DESIGNER = 5_i32
    DWRITE_INFORMATIONAL_STRING_DESIGNER_URL = 6_i32
    DWRITE_INFORMATIONAL_STRING_DESCRIPTION = 7_i32
    DWRITE_INFORMATIONAL_STRING_FONT_VENDOR_URL = 8_i32
    DWRITE_INFORMATIONAL_STRING_LICENSE_DESCRIPTION = 9_i32
    DWRITE_INFORMATIONAL_STRING_LICENSE_INFO_URL = 10_i32
    DWRITE_INFORMATIONAL_STRING_WIN32_FAMILY_NAMES = 11_i32
    DWRITE_INFORMATIONAL_STRING_WIN32_SUBFAMILY_NAMES = 12_i32
    DWRITE_INFORMATIONAL_STRING_TYPOGRAPHIC_FAMILY_NAMES = 13_i32
    DWRITE_INFORMATIONAL_STRING_TYPOGRAPHIC_SUBFAMILY_NAMES = 14_i32
    DWRITE_INFORMATIONAL_STRING_SAMPLE_TEXT = 15_i32
    DWRITE_INFORMATIONAL_STRING_FULL_NAME = 16_i32
    DWRITE_INFORMATIONAL_STRING_POSTSCRIPT_NAME = 17_i32
    DWRITE_INFORMATIONAL_STRING_POSTSCRIPT_CID_NAME = 18_i32
    DWRITE_INFORMATIONAL_STRING_WEIGHT_STRETCH_STYLE_FAMILY_NAME = 19_i32
    DWRITE_INFORMATIONAL_STRING_DESIGN_SCRIPT_LANGUAGE_TAG = 20_i32
    DWRITE_INFORMATIONAL_STRING_SUPPORTED_SCRIPT_LANGUAGE_TAG = 21_i32
    DWRITE_INFORMATIONAL_STRING_PREFERRED_FAMILY_NAMES = 13_i32
    DWRITE_INFORMATIONAL_STRING_PREFERRED_SUBFAMILY_NAMES = 14_i32
    DWRITE_INFORMATIONAL_STRING_WWS_FAMILY_NAME = 19_i32
  end
  enum DWRITE_FACTORY_TYPE
    DWRITE_FACTORY_TYPE_SHARED = 0_i32
    DWRITE_FACTORY_TYPE_ISOLATED = 1_i32
  end
  enum DWRITE_PIXEL_GEOMETRY
    DWRITE_PIXEL_GEOMETRY_FLAT = 0_i32
    DWRITE_PIXEL_GEOMETRY_RGB = 1_i32
    DWRITE_PIXEL_GEOMETRY_BGR = 2_i32
  end
  enum DWRITE_RENDERING_MODE
    DWRITE_RENDERING_MODE_DEFAULT = 0_i32
    DWRITE_RENDERING_MODE_ALIASED = 1_i32
    DWRITE_RENDERING_MODE_GDI_CLASSIC = 2_i32
    DWRITE_RENDERING_MODE_GDI_NATURAL = 3_i32
    DWRITE_RENDERING_MODE_NATURAL = 4_i32
    DWRITE_RENDERING_MODE_NATURAL_SYMMETRIC = 5_i32
    DWRITE_RENDERING_MODE_OUTLINE = 6_i32
    DWRITE_RENDERING_MODE_CLEARTYPE_GDI_CLASSIC = 2_i32
    DWRITE_RENDERING_MODE_CLEARTYPE_GDI_NATURAL = 3_i32
    DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL = 4_i32
    DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL_SYMMETRIC = 5_i32
  end
  enum DWRITE_READING_DIRECTION
    DWRITE_READING_DIRECTION_LEFT_TO_RIGHT = 0_i32
    DWRITE_READING_DIRECTION_RIGHT_TO_LEFT = 1_i32
    DWRITE_READING_DIRECTION_TOP_TO_BOTTOM = 2_i32
    DWRITE_READING_DIRECTION_BOTTOM_TO_TOP = 3_i32
  end
  enum DWRITE_FLOW_DIRECTION
    DWRITE_FLOW_DIRECTION_TOP_TO_BOTTOM = 0_i32
    DWRITE_FLOW_DIRECTION_BOTTOM_TO_TOP = 1_i32
    DWRITE_FLOW_DIRECTION_LEFT_TO_RIGHT = 2_i32
    DWRITE_FLOW_DIRECTION_RIGHT_TO_LEFT = 3_i32
  end
  enum DWRITE_TEXT_ALIGNMENT
    DWRITE_TEXT_ALIGNMENT_LEADING = 0_i32
    DWRITE_TEXT_ALIGNMENT_TRAILING = 1_i32
    DWRITE_TEXT_ALIGNMENT_CENTER = 2_i32
    DWRITE_TEXT_ALIGNMENT_JUSTIFIED = 3_i32
  end
  enum DWRITE_PARAGRAPH_ALIGNMENT
    DWRITE_PARAGRAPH_ALIGNMENT_NEAR = 0_i32
    DWRITE_PARAGRAPH_ALIGNMENT_FAR = 1_i32
    DWRITE_PARAGRAPH_ALIGNMENT_CENTER = 2_i32
  end
  enum DWRITE_WORD_WRAPPING
    DWRITE_WORD_WRAPPING_WRAP = 0_i32
    DWRITE_WORD_WRAPPING_NO_WRAP = 1_i32
    DWRITE_WORD_WRAPPING_EMERGENCY_BREAK = 2_i32
    DWRITE_WORD_WRAPPING_WHOLE_WORD = 3_i32
    DWRITE_WORD_WRAPPING_CHARACTER = 4_i32
  end
  enum DWRITE_LINE_SPACING_METHOD
    DWRITE_LINE_SPACING_METHOD_DEFAULT = 0_i32
    DWRITE_LINE_SPACING_METHOD_UNIFORM = 1_i32
    DWRITE_LINE_SPACING_METHOD_PROPORTIONAL = 2_i32
  end
  enum DWRITE_TRIMMING_GRANULARITY
    DWRITE_TRIMMING_GRANULARITY_NONE = 0_i32
    DWRITE_TRIMMING_GRANULARITY_CHARACTER = 1_i32
    DWRITE_TRIMMING_GRANULARITY_WORD = 2_i32
  end
  enum DWRITE_FONT_FEATURE_TAG : UInt32
    DWRITE_FONT_FEATURE_TAG_ALTERNATIVE_FRACTIONS = 1668441697_u32
    DWRITE_FONT_FEATURE_TAG_PETITE_CAPITALS_FROM_CAPITALS = 1668297315_u32
    DWRITE_FONT_FEATURE_TAG_SMALL_CAPITALS_FROM_CAPITALS = 1668493923_u32
    DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_ALTERNATES = 1953259875_u32
    DWRITE_FONT_FEATURE_TAG_CASE_SENSITIVE_FORMS = 1702060387_u32
    DWRITE_FONT_FEATURE_TAG_GLYPH_COMPOSITION_DECOMPOSITION = 1886217059_u32
    DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_LIGATURES = 1734962275_u32
    DWRITE_FONT_FEATURE_TAG_CAPITAL_SPACING = 1886613603_u32
    DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_SWASH = 1752658787_u32
    DWRITE_FONT_FEATURE_TAG_CURSIVE_POSITIONING = 1936880995_u32
    DWRITE_FONT_FEATURE_TAG_DEFAULT = 1953261156_u32
    DWRITE_FONT_FEATURE_TAG_DISCRETIONARY_LIGATURES = 1734962276_u32
    DWRITE_FONT_FEATURE_TAG_EXPERT_FORMS = 1953527909_u32
    DWRITE_FONT_FEATURE_TAG_FRACTIONS = 1667330662_u32
    DWRITE_FONT_FEATURE_TAG_FULL_WIDTH = 1684633446_u32
    DWRITE_FONT_FEATURE_TAG_HALF_FORMS = 1718378856_u32
    DWRITE_FONT_FEATURE_TAG_HALANT_FORMS = 1852596584_u32
    DWRITE_FONT_FEATURE_TAG_ALTERNATE_HALF_WIDTH = 1953259880_u32
    DWRITE_FONT_FEATURE_TAG_HISTORICAL_FORMS = 1953720680_u32
    DWRITE_FONT_FEATURE_TAG_HORIZONTAL_KANA_ALTERNATES = 1634626408_u32
    DWRITE_FONT_FEATURE_TAG_HISTORICAL_LIGATURES = 1734962280_u32
    DWRITE_FONT_FEATURE_TAG_HALF_WIDTH = 1684633448_u32
    DWRITE_FONT_FEATURE_TAG_HOJO_KANJI_FORMS = 1869246312_u32
    DWRITE_FONT_FEATURE_TAG_JIS04_FORMS = 875589738_u32
    DWRITE_FONT_FEATURE_TAG_JIS78_FORMS = 943157354_u32
    DWRITE_FONT_FEATURE_TAG_JIS83_FORMS = 859336810_u32
    DWRITE_FONT_FEATURE_TAG_JIS90_FORMS = 809070698_u32
    DWRITE_FONT_FEATURE_TAG_KERNING = 1852990827_u32
    DWRITE_FONT_FEATURE_TAG_STANDARD_LIGATURES = 1634167148_u32
    DWRITE_FONT_FEATURE_TAG_LINING_FIGURES = 1836412524_u32
    DWRITE_FONT_FEATURE_TAG_LOCALIZED_FORMS = 1818455916_u32
    DWRITE_FONT_FEATURE_TAG_MARK_POSITIONING = 1802658157_u32
    DWRITE_FONT_FEATURE_TAG_MATHEMATICAL_GREEK = 1802659693_u32
    DWRITE_FONT_FEATURE_TAG_MARK_TO_MARK_POSITIONING = 1802333037_u32
    DWRITE_FONT_FEATURE_TAG_ALTERNATE_ANNOTATION_FORMS = 1953259886_u32
    DWRITE_FONT_FEATURE_TAG_NLC_KANJI_FORMS = 1801677934_u32
    DWRITE_FONT_FEATURE_TAG_OLD_STYLE_FIGURES = 1836412527_u32
    DWRITE_FONT_FEATURE_TAG_ORDINALS = 1852076655_u32
    DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_ALTERNATE_WIDTH = 1953259888_u32
    DWRITE_FONT_FEATURE_TAG_PETITE_CAPITALS = 1885430640_u32
    DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_FIGURES = 1836412528_u32
    DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_WIDTHS = 1684633456_u32
    DWRITE_FONT_FEATURE_TAG_QUARTER_WIDTHS = 1684633457_u32
    DWRITE_FONT_FEATURE_TAG_REQUIRED_LIGATURES = 1734962290_u32
    DWRITE_FONT_FEATURE_TAG_RUBY_NOTATION_FORMS = 2036495730_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_ALTERNATES = 1953259891_u32
    DWRITE_FONT_FEATURE_TAG_SCIENTIFIC_INFERIORS = 1718511987_u32
    DWRITE_FONT_FEATURE_TAG_SMALL_CAPITALS = 1885564275_u32
    DWRITE_FONT_FEATURE_TAG_SIMPLIFIED_FORMS = 1819307379_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_1 = 825258867_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_2 = 842036083_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_3 = 858813299_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_4 = 875590515_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_5 = 892367731_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_6 = 909144947_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_7 = 925922163_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_8 = 942699379_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_9 = 959476595_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_10 = 808547187_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_11 = 825324403_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_12 = 842101619_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_13 = 858878835_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_14 = 875656051_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_15 = 892433267_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_16 = 909210483_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_17 = 925987699_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_18 = 942764915_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_19 = 959542131_u32
    DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_20 = 808612723_u32
    DWRITE_FONT_FEATURE_TAG_SUBSCRIPT = 1935832435_u32
    DWRITE_FONT_FEATURE_TAG_SUPERSCRIPT = 1936749939_u32
    DWRITE_FONT_FEATURE_TAG_SWASH = 1752397683_u32
    DWRITE_FONT_FEATURE_TAG_TITLING = 1819568500_u32
    DWRITE_FONT_FEATURE_TAG_TRADITIONAL_NAME_FORMS = 1835101812_u32
    DWRITE_FONT_FEATURE_TAG_TABULAR_FIGURES = 1836412532_u32
    DWRITE_FONT_FEATURE_TAG_TRADITIONAL_FORMS = 1684107892_u32
    DWRITE_FONT_FEATURE_TAG_THIRD_WIDTHS = 1684633460_u32
    DWRITE_FONT_FEATURE_TAG_UNICASE = 1667853941_u32
    DWRITE_FONT_FEATURE_TAG_VERTICAL_WRITING = 1953654134_u32
    DWRITE_FONT_FEATURE_TAG_VERTICAL_ALTERNATES_AND_ROTATION = 846492278_u32
    DWRITE_FONT_FEATURE_TAG_SLASHED_ZERO = 1869768058_u32
  end
  @[Flags]
  enum DWRITE_SCRIPT_SHAPES : UInt32
    DWRITE_SCRIPT_SHAPES_DEFAULT = 0_u32
    DWRITE_SCRIPT_SHAPES_NO_VISUAL = 1_u32
  end
  enum DWRITE_BREAK_CONDITION
    DWRITE_BREAK_CONDITION_NEUTRAL = 0_i32
    DWRITE_BREAK_CONDITION_CAN_BREAK = 1_i32
    DWRITE_BREAK_CONDITION_MAY_NOT_BREAK = 2_i32
    DWRITE_BREAK_CONDITION_MUST_BREAK = 3_i32
  end
  enum DWRITE_NUMBER_SUBSTITUTION_METHOD
    DWRITE_NUMBER_SUBSTITUTION_METHOD_FROM_CULTURE = 0_i32
    DWRITE_NUMBER_SUBSTITUTION_METHOD_CONTEXTUAL = 1_i32
    DWRITE_NUMBER_SUBSTITUTION_METHOD_NONE = 2_i32
    DWRITE_NUMBER_SUBSTITUTION_METHOD_NATIONAL = 3_i32
    DWRITE_NUMBER_SUBSTITUTION_METHOD_TRADITIONAL = 4_i32
  end
  enum DWRITE_TEXTURE_TYPE
    DWRITE_TEXTURE_ALIASED_1x1 = 0_i32
    DWRITE_TEXTURE_CLEARTYPE_3x1 = 1_i32
  end
  enum DWRITE_PANOSE_FAMILY
    DWRITE_PANOSE_FAMILY_ANY = 0_i32
    DWRITE_PANOSE_FAMILY_NO_FIT = 1_i32
    DWRITE_PANOSE_FAMILY_TEXT_DISPLAY = 2_i32
    DWRITE_PANOSE_FAMILY_SCRIPT = 3_i32
    DWRITE_PANOSE_FAMILY_DECORATIVE = 4_i32
    DWRITE_PANOSE_FAMILY_SYMBOL = 5_i32
    DWRITE_PANOSE_FAMILY_PICTORIAL = 5_i32
  end
  enum DWRITE_PANOSE_SERIF_STYLE
    DWRITE_PANOSE_SERIF_STYLE_ANY = 0_i32
    DWRITE_PANOSE_SERIF_STYLE_NO_FIT = 1_i32
    DWRITE_PANOSE_SERIF_STYLE_COVE = 2_i32
    DWRITE_PANOSE_SERIF_STYLE_OBTUSE_COVE = 3_i32
    DWRITE_PANOSE_SERIF_STYLE_SQUARE_COVE = 4_i32
    DWRITE_PANOSE_SERIF_STYLE_OBTUSE_SQUARE_COVE = 5_i32
    DWRITE_PANOSE_SERIF_STYLE_SQUARE = 6_i32
    DWRITE_PANOSE_SERIF_STYLE_THIN = 7_i32
    DWRITE_PANOSE_SERIF_STYLE_OVAL = 8_i32
    DWRITE_PANOSE_SERIF_STYLE_EXAGGERATED = 9_i32
    DWRITE_PANOSE_SERIF_STYLE_TRIANGLE = 10_i32
    DWRITE_PANOSE_SERIF_STYLE_NORMAL_SANS = 11_i32
    DWRITE_PANOSE_SERIF_STYLE_OBTUSE_SANS = 12_i32
    DWRITE_PANOSE_SERIF_STYLE_PERPENDICULAR_SANS = 13_i32
    DWRITE_PANOSE_SERIF_STYLE_FLARED = 14_i32
    DWRITE_PANOSE_SERIF_STYLE_ROUNDED = 15_i32
    DWRITE_PANOSE_SERIF_STYLE_SCRIPT = 16_i32
    DWRITE_PANOSE_SERIF_STYLE_PERP_SANS = 13_i32
    DWRITE_PANOSE_SERIF_STYLE_BONE = 8_i32
  end
  enum DWRITE_PANOSE_WEIGHT
    DWRITE_PANOSE_WEIGHT_ANY = 0_i32
    DWRITE_PANOSE_WEIGHT_NO_FIT = 1_i32
    DWRITE_PANOSE_WEIGHT_VERY_LIGHT = 2_i32
    DWRITE_PANOSE_WEIGHT_LIGHT = 3_i32
    DWRITE_PANOSE_WEIGHT_THIN = 4_i32
    DWRITE_PANOSE_WEIGHT_BOOK = 5_i32
    DWRITE_PANOSE_WEIGHT_MEDIUM = 6_i32
    DWRITE_PANOSE_WEIGHT_DEMI = 7_i32
    DWRITE_PANOSE_WEIGHT_BOLD = 8_i32
    DWRITE_PANOSE_WEIGHT_HEAVY = 9_i32
    DWRITE_PANOSE_WEIGHT_BLACK = 10_i32
    DWRITE_PANOSE_WEIGHT_EXTRA_BLACK = 11_i32
    DWRITE_PANOSE_WEIGHT_NORD = 11_i32
  end
  enum DWRITE_PANOSE_PROPORTION
    DWRITE_PANOSE_PROPORTION_ANY = 0_i32
    DWRITE_PANOSE_PROPORTION_NO_FIT = 1_i32
    DWRITE_PANOSE_PROPORTION_OLD_STYLE = 2_i32
    DWRITE_PANOSE_PROPORTION_MODERN = 3_i32
    DWRITE_PANOSE_PROPORTION_EVEN_WIDTH = 4_i32
    DWRITE_PANOSE_PROPORTION_EXPANDED = 5_i32
    DWRITE_PANOSE_PROPORTION_CONDENSED = 6_i32
    DWRITE_PANOSE_PROPORTION_VERY_EXPANDED = 7_i32
    DWRITE_PANOSE_PROPORTION_VERY_CONDENSED = 8_i32
    DWRITE_PANOSE_PROPORTION_MONOSPACED = 9_i32
  end
  enum DWRITE_PANOSE_CONTRAST
    DWRITE_PANOSE_CONTRAST_ANY = 0_i32
    DWRITE_PANOSE_CONTRAST_NO_FIT = 1_i32
    DWRITE_PANOSE_CONTRAST_NONE = 2_i32
    DWRITE_PANOSE_CONTRAST_VERY_LOW = 3_i32
    DWRITE_PANOSE_CONTRAST_LOW = 4_i32
    DWRITE_PANOSE_CONTRAST_MEDIUM_LOW = 5_i32
    DWRITE_PANOSE_CONTRAST_MEDIUM = 6_i32
    DWRITE_PANOSE_CONTRAST_MEDIUM_HIGH = 7_i32
    DWRITE_PANOSE_CONTRAST_HIGH = 8_i32
    DWRITE_PANOSE_CONTRAST_VERY_HIGH = 9_i32
    DWRITE_PANOSE_CONTRAST_HORIZONTAL_LOW = 10_i32
    DWRITE_PANOSE_CONTRAST_HORIZONTAL_MEDIUM = 11_i32
    DWRITE_PANOSE_CONTRAST_HORIZONTAL_HIGH = 12_i32
    DWRITE_PANOSE_CONTRAST_BROKEN = 13_i32
  end
  enum DWRITE_PANOSE_STROKE_VARIATION
    DWRITE_PANOSE_STROKE_VARIATION_ANY = 0_i32
    DWRITE_PANOSE_STROKE_VARIATION_NO_FIT = 1_i32
    DWRITE_PANOSE_STROKE_VARIATION_NO_VARIATION = 2_i32
    DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_DIAGONAL = 3_i32
    DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_TRANSITIONAL = 4_i32
    DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_VERTICAL = 5_i32
    DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_HORIZONTAL = 6_i32
    DWRITE_PANOSE_STROKE_VARIATION_RAPID_VERTICAL = 7_i32
    DWRITE_PANOSE_STROKE_VARIATION_RAPID_HORIZONTAL = 8_i32
    DWRITE_PANOSE_STROKE_VARIATION_INSTANT_VERTICAL = 9_i32
    DWRITE_PANOSE_STROKE_VARIATION_INSTANT_HORIZONTAL = 10_i32
  end
  enum DWRITE_PANOSE_ARM_STYLE
    DWRITE_PANOSE_ARM_STYLE_ANY = 0_i32
    DWRITE_PANOSE_ARM_STYLE_NO_FIT = 1_i32
    DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_HORIZONTAL = 2_i32
    DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_WEDGE = 3_i32
    DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_VERTICAL = 4_i32
    DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_SINGLE_SERIF = 5_i32
    DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_DOUBLE_SERIF = 6_i32
    DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_HORIZONTAL = 7_i32
    DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_WEDGE = 8_i32
    DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_VERTICAL = 9_i32
    DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_SINGLE_SERIF = 10_i32
    DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_DOUBLE_SERIF = 11_i32
    DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_HORZ = 2_i32
    DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_VERT = 4_i32
    DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_HORZ = 7_i32
    DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_WEDGE = 8_i32
    DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_VERT = 9_i32
    DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_SINGLE_SERIF = 10_i32
    DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_DOUBLE_SERIF = 11_i32
  end
  enum DWRITE_PANOSE_LETTERFORM
    DWRITE_PANOSE_LETTERFORM_ANY = 0_i32
    DWRITE_PANOSE_LETTERFORM_NO_FIT = 1_i32
    DWRITE_PANOSE_LETTERFORM_NORMAL_CONTACT = 2_i32
    DWRITE_PANOSE_LETTERFORM_NORMAL_WEIGHTED = 3_i32
    DWRITE_PANOSE_LETTERFORM_NORMAL_BOXED = 4_i32
    DWRITE_PANOSE_LETTERFORM_NORMAL_FLATTENED = 5_i32
    DWRITE_PANOSE_LETTERFORM_NORMAL_ROUNDED = 6_i32
    DWRITE_PANOSE_LETTERFORM_NORMAL_OFF_CENTER = 7_i32
    DWRITE_PANOSE_LETTERFORM_NORMAL_SQUARE = 8_i32
    DWRITE_PANOSE_LETTERFORM_OBLIQUE_CONTACT = 9_i32
    DWRITE_PANOSE_LETTERFORM_OBLIQUE_WEIGHTED = 10_i32
    DWRITE_PANOSE_LETTERFORM_OBLIQUE_BOXED = 11_i32
    DWRITE_PANOSE_LETTERFORM_OBLIQUE_FLATTENED = 12_i32
    DWRITE_PANOSE_LETTERFORM_OBLIQUE_ROUNDED = 13_i32
    DWRITE_PANOSE_LETTERFORM_OBLIQUE_OFF_CENTER = 14_i32
    DWRITE_PANOSE_LETTERFORM_OBLIQUE_SQUARE = 15_i32
  end
  enum DWRITE_PANOSE_MIDLINE
    DWRITE_PANOSE_MIDLINE_ANY = 0_i32
    DWRITE_PANOSE_MIDLINE_NO_FIT = 1_i32
    DWRITE_PANOSE_MIDLINE_STANDARD_TRIMMED = 2_i32
    DWRITE_PANOSE_MIDLINE_STANDARD_POINTED = 3_i32
    DWRITE_PANOSE_MIDLINE_STANDARD_SERIFED = 4_i32
    DWRITE_PANOSE_MIDLINE_HIGH_TRIMMED = 5_i32
    DWRITE_PANOSE_MIDLINE_HIGH_POINTED = 6_i32
    DWRITE_PANOSE_MIDLINE_HIGH_SERIFED = 7_i32
    DWRITE_PANOSE_MIDLINE_CONSTANT_TRIMMED = 8_i32
    DWRITE_PANOSE_MIDLINE_CONSTANT_POINTED = 9_i32
    DWRITE_PANOSE_MIDLINE_CONSTANT_SERIFED = 10_i32
    DWRITE_PANOSE_MIDLINE_LOW_TRIMMED = 11_i32
    DWRITE_PANOSE_MIDLINE_LOW_POINTED = 12_i32
    DWRITE_PANOSE_MIDLINE_LOW_SERIFED = 13_i32
  end
  enum DWRITE_PANOSE_XHEIGHT
    DWRITE_PANOSE_XHEIGHT_ANY = 0_i32
    DWRITE_PANOSE_XHEIGHT_NO_FIT = 1_i32
    DWRITE_PANOSE_XHEIGHT_CONSTANT_SMALL = 2_i32
    DWRITE_PANOSE_XHEIGHT_CONSTANT_STANDARD = 3_i32
    DWRITE_PANOSE_XHEIGHT_CONSTANT_LARGE = 4_i32
    DWRITE_PANOSE_XHEIGHT_DUCKING_SMALL = 5_i32
    DWRITE_PANOSE_XHEIGHT_DUCKING_STANDARD = 6_i32
    DWRITE_PANOSE_XHEIGHT_DUCKING_LARGE = 7_i32
    DWRITE_PANOSE_XHEIGHT_CONSTANT_STD = 3_i32
    DWRITE_PANOSE_XHEIGHT_DUCKING_STD = 6_i32
  end
  enum DWRITE_PANOSE_TOOL_KIND
    DWRITE_PANOSE_TOOL_KIND_ANY = 0_i32
    DWRITE_PANOSE_TOOL_KIND_NO_FIT = 1_i32
    DWRITE_PANOSE_TOOL_KIND_FLAT_NIB = 2_i32
    DWRITE_PANOSE_TOOL_KIND_PRESSURE_POINT = 3_i32
    DWRITE_PANOSE_TOOL_KIND_ENGRAVED = 4_i32
    DWRITE_PANOSE_TOOL_KIND_BALL = 5_i32
    DWRITE_PANOSE_TOOL_KIND_BRUSH = 6_i32
    DWRITE_PANOSE_TOOL_KIND_ROUGH = 7_i32
    DWRITE_PANOSE_TOOL_KIND_FELT_PEN_BRUSH_TIP = 8_i32
    DWRITE_PANOSE_TOOL_KIND_WILD_BRUSH = 9_i32
  end
  enum DWRITE_PANOSE_SPACING
    DWRITE_PANOSE_SPACING_ANY = 0_i32
    DWRITE_PANOSE_SPACING_NO_FIT = 1_i32
    DWRITE_PANOSE_SPACING_PROPORTIONAL_SPACED = 2_i32
    DWRITE_PANOSE_SPACING_MONOSPACED = 3_i32
  end
  enum DWRITE_PANOSE_ASPECT_RATIO
    DWRITE_PANOSE_ASPECT_RATIO_ANY = 0_i32
    DWRITE_PANOSE_ASPECT_RATIO_NO_FIT = 1_i32
    DWRITE_PANOSE_ASPECT_RATIO_VERY_CONDENSED = 2_i32
    DWRITE_PANOSE_ASPECT_RATIO_CONDENSED = 3_i32
    DWRITE_PANOSE_ASPECT_RATIO_NORMAL = 4_i32
    DWRITE_PANOSE_ASPECT_RATIO_EXPANDED = 5_i32
    DWRITE_PANOSE_ASPECT_RATIO_VERY_EXPANDED = 6_i32
  end
  enum DWRITE_PANOSE_SCRIPT_TOPOLOGY
    DWRITE_PANOSE_SCRIPT_TOPOLOGY_ANY = 0_i32
    DWRITE_PANOSE_SCRIPT_TOPOLOGY_NO_FIT = 1_i32
    DWRITE_PANOSE_SCRIPT_TOPOLOGY_ROMAN_DISCONNECTED = 2_i32
    DWRITE_PANOSE_SCRIPT_TOPOLOGY_ROMAN_TRAILING = 3_i32
    DWRITE_PANOSE_SCRIPT_TOPOLOGY_ROMAN_CONNECTED = 4_i32
    DWRITE_PANOSE_SCRIPT_TOPOLOGY_CURSIVE_DISCONNECTED = 5_i32
    DWRITE_PANOSE_SCRIPT_TOPOLOGY_CURSIVE_TRAILING = 6_i32
    DWRITE_PANOSE_SCRIPT_TOPOLOGY_CURSIVE_CONNECTED = 7_i32
    DWRITE_PANOSE_SCRIPT_TOPOLOGY_BLACKLETTER_DISCONNECTED = 8_i32
    DWRITE_PANOSE_SCRIPT_TOPOLOGY_BLACKLETTER_TRAILING = 9_i32
    DWRITE_PANOSE_SCRIPT_TOPOLOGY_BLACKLETTER_CONNECTED = 10_i32
  end
  enum DWRITE_PANOSE_SCRIPT_FORM
    DWRITE_PANOSE_SCRIPT_FORM_ANY = 0_i32
    DWRITE_PANOSE_SCRIPT_FORM_NO_FIT = 1_i32
    DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_NO_WRAPPING = 2_i32
    DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_SOME_WRAPPING = 3_i32
    DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_MORE_WRAPPING = 4_i32
    DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_EXTREME_WRAPPING = 5_i32
    DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_NO_WRAPPING = 6_i32
    DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_SOME_WRAPPING = 7_i32
    DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_MORE_WRAPPING = 8_i32
    DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_EXTREME_WRAPPING = 9_i32
    DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_NO_WRAPPING = 10_i32
    DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_SOME_WRAPPING = 11_i32
    DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_MORE_WRAPPING = 12_i32
    DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_EXTREME_WRAPPING = 13_i32
  end
  enum DWRITE_PANOSE_FINIALS
    DWRITE_PANOSE_FINIALS_ANY = 0_i32
    DWRITE_PANOSE_FINIALS_NO_FIT = 1_i32
    DWRITE_PANOSE_FINIALS_NONE_NO_LOOPS = 2_i32
    DWRITE_PANOSE_FINIALS_NONE_CLOSED_LOOPS = 3_i32
    DWRITE_PANOSE_FINIALS_NONE_OPEN_LOOPS = 4_i32
    DWRITE_PANOSE_FINIALS_SHARP_NO_LOOPS = 5_i32
    DWRITE_PANOSE_FINIALS_SHARP_CLOSED_LOOPS = 6_i32
    DWRITE_PANOSE_FINIALS_SHARP_OPEN_LOOPS = 7_i32
    DWRITE_PANOSE_FINIALS_TAPERED_NO_LOOPS = 8_i32
    DWRITE_PANOSE_FINIALS_TAPERED_CLOSED_LOOPS = 9_i32
    DWRITE_PANOSE_FINIALS_TAPERED_OPEN_LOOPS = 10_i32
    DWRITE_PANOSE_FINIALS_ROUND_NO_LOOPS = 11_i32
    DWRITE_PANOSE_FINIALS_ROUND_CLOSED_LOOPS = 12_i32
    DWRITE_PANOSE_FINIALS_ROUND_OPEN_LOOPS = 13_i32
  end
  enum DWRITE_PANOSE_XASCENT
    DWRITE_PANOSE_XASCENT_ANY = 0_i32
    DWRITE_PANOSE_XASCENT_NO_FIT = 1_i32
    DWRITE_PANOSE_XASCENT_VERY_LOW = 2_i32
    DWRITE_PANOSE_XASCENT_LOW = 3_i32
    DWRITE_PANOSE_XASCENT_MEDIUM = 4_i32
    DWRITE_PANOSE_XASCENT_HIGH = 5_i32
    DWRITE_PANOSE_XASCENT_VERY_HIGH = 6_i32
  end
  enum DWRITE_PANOSE_DECORATIVE_CLASS
    DWRITE_PANOSE_DECORATIVE_CLASS_ANY = 0_i32
    DWRITE_PANOSE_DECORATIVE_CLASS_NO_FIT = 1_i32
    DWRITE_PANOSE_DECORATIVE_CLASS_DERIVATIVE = 2_i32
    DWRITE_PANOSE_DECORATIVE_CLASS_NONSTANDARD_TOPOLOGY = 3_i32
    DWRITE_PANOSE_DECORATIVE_CLASS_NONSTANDARD_ELEMENTS = 4_i32
    DWRITE_PANOSE_DECORATIVE_CLASS_NONSTANDARD_ASPECT = 5_i32
    DWRITE_PANOSE_DECORATIVE_CLASS_INITIALS = 6_i32
    DWRITE_PANOSE_DECORATIVE_CLASS_CARTOON = 7_i32
    DWRITE_PANOSE_DECORATIVE_CLASS_PICTURE_STEMS = 8_i32
    DWRITE_PANOSE_DECORATIVE_CLASS_ORNAMENTED = 9_i32
    DWRITE_PANOSE_DECORATIVE_CLASS_TEXT_AND_BACKGROUND = 10_i32
    DWRITE_PANOSE_DECORATIVE_CLASS_COLLAGE = 11_i32
    DWRITE_PANOSE_DECORATIVE_CLASS_MONTAGE = 12_i32
  end
  enum DWRITE_PANOSE_ASPECT
    DWRITE_PANOSE_ASPECT_ANY = 0_i32
    DWRITE_PANOSE_ASPECT_NO_FIT = 1_i32
    DWRITE_PANOSE_ASPECT_SUPER_CONDENSED = 2_i32
    DWRITE_PANOSE_ASPECT_VERY_CONDENSED = 3_i32
    DWRITE_PANOSE_ASPECT_CONDENSED = 4_i32
    DWRITE_PANOSE_ASPECT_NORMAL = 5_i32
    DWRITE_PANOSE_ASPECT_EXTENDED = 6_i32
    DWRITE_PANOSE_ASPECT_VERY_EXTENDED = 7_i32
    DWRITE_PANOSE_ASPECT_SUPER_EXTENDED = 8_i32
    DWRITE_PANOSE_ASPECT_MONOSPACED = 9_i32
  end
  enum DWRITE_PANOSE_FILL
    DWRITE_PANOSE_FILL_ANY = 0_i32
    DWRITE_PANOSE_FILL_NO_FIT = 1_i32
    DWRITE_PANOSE_FILL_STANDARD_SOLID_FILL = 2_i32
    DWRITE_PANOSE_FILL_NO_FILL = 3_i32
    DWRITE_PANOSE_FILL_PATTERNED_FILL = 4_i32
    DWRITE_PANOSE_FILL_COMPLEX_FILL = 5_i32
    DWRITE_PANOSE_FILL_SHAPED_FILL = 6_i32
    DWRITE_PANOSE_FILL_DRAWN_DISTRESSED = 7_i32
  end
  enum DWRITE_PANOSE_LINING
    DWRITE_PANOSE_LINING_ANY = 0_i32
    DWRITE_PANOSE_LINING_NO_FIT = 1_i32
    DWRITE_PANOSE_LINING_NONE = 2_i32
    DWRITE_PANOSE_LINING_INLINE = 3_i32
    DWRITE_PANOSE_LINING_OUTLINE = 4_i32
    DWRITE_PANOSE_LINING_ENGRAVED = 5_i32
    DWRITE_PANOSE_LINING_SHADOW = 6_i32
    DWRITE_PANOSE_LINING_RELIEF = 7_i32
    DWRITE_PANOSE_LINING_BACKDROP = 8_i32
  end
  enum DWRITE_PANOSE_DECORATIVE_TOPOLOGY
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_ANY = 0_i32
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_NO_FIT = 1_i32
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_STANDARD = 2_i32
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_SQUARE = 3_i32
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_MULTIPLE_SEGMENT = 4_i32
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_ART_DECO = 5_i32
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_UNEVEN_WEIGHTING = 6_i32
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_DIVERSE_ARMS = 7_i32
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_DIVERSE_FORMS = 8_i32
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_LOMBARDIC_FORMS = 9_i32
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_UPPER_CASE_IN_LOWER_CASE = 10_i32
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_IMPLIED_TOPOLOGY = 11_i32
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_HORSESHOE_E_AND_A = 12_i32
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_CURSIVE = 13_i32
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_BLACKLETTER = 14_i32
    DWRITE_PANOSE_DECORATIVE_TOPOLOGY_SWASH_VARIANCE = 15_i32
  end
  enum DWRITE_PANOSE_CHARACTER_RANGES
    DWRITE_PANOSE_CHARACTER_RANGES_ANY = 0_i32
    DWRITE_PANOSE_CHARACTER_RANGES_NO_FIT = 1_i32
    DWRITE_PANOSE_CHARACTER_RANGES_EXTENDED_COLLECTION = 2_i32
    DWRITE_PANOSE_CHARACTER_RANGES_LITERALS = 3_i32
    DWRITE_PANOSE_CHARACTER_RANGES_NO_LOWER_CASE = 4_i32
    DWRITE_PANOSE_CHARACTER_RANGES_SMALL_CAPS = 5_i32
  end
  enum DWRITE_PANOSE_SYMBOL_KIND
    DWRITE_PANOSE_SYMBOL_KIND_ANY = 0_i32
    DWRITE_PANOSE_SYMBOL_KIND_NO_FIT = 1_i32
    DWRITE_PANOSE_SYMBOL_KIND_MONTAGES = 2_i32
    DWRITE_PANOSE_SYMBOL_KIND_PICTURES = 3_i32
    DWRITE_PANOSE_SYMBOL_KIND_SHAPES = 4_i32
    DWRITE_PANOSE_SYMBOL_KIND_SCIENTIFIC = 5_i32
    DWRITE_PANOSE_SYMBOL_KIND_MUSIC = 6_i32
    DWRITE_PANOSE_SYMBOL_KIND_EXPERT = 7_i32
    DWRITE_PANOSE_SYMBOL_KIND_PATTERNS = 8_i32
    DWRITE_PANOSE_SYMBOL_KIND_BOARDERS = 9_i32
    DWRITE_PANOSE_SYMBOL_KIND_ICONS = 10_i32
    DWRITE_PANOSE_SYMBOL_KIND_LOGOS = 11_i32
    DWRITE_PANOSE_SYMBOL_KIND_INDUSTRY_SPECIFIC = 12_i32
  end
  enum DWRITE_PANOSE_SYMBOL_ASPECT_RATIO
    DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_ANY = 0_i32
    DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NO_FIT = 1_i32
    DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NO_WIDTH = 2_i32
    DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_EXCEPTIONALLY_WIDE = 3_i32
    DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_SUPER_WIDE = 4_i32
    DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_VERY_WIDE = 5_i32
    DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_WIDE = 6_i32
    DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NORMAL = 7_i32
    DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NARROW = 8_i32
    DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_VERY_NARROW = 9_i32
  end
  enum DWRITE_OUTLINE_THRESHOLD
    DWRITE_OUTLINE_THRESHOLD_ANTIALIASED = 0_i32
    DWRITE_OUTLINE_THRESHOLD_ALIASED = 1_i32
  end
  enum DWRITE_BASELINE
    DWRITE_BASELINE_DEFAULT = 0_i32
    DWRITE_BASELINE_ROMAN = 1_i32
    DWRITE_BASELINE_CENTRAL = 2_i32
    DWRITE_BASELINE_MATH = 3_i32
    DWRITE_BASELINE_HANGING = 4_i32
    DWRITE_BASELINE_IDEOGRAPHIC_BOTTOM = 5_i32
    DWRITE_BASELINE_IDEOGRAPHIC_TOP = 6_i32
    DWRITE_BASELINE_MINIMUM = 7_i32
    DWRITE_BASELINE_MAXIMUM = 8_i32
  end
  enum DWRITE_VERTICAL_GLYPH_ORIENTATION
    DWRITE_VERTICAL_GLYPH_ORIENTATION_DEFAULT = 0_i32
    DWRITE_VERTICAL_GLYPH_ORIENTATION_STACKED = 1_i32
  end
  enum DWRITE_GLYPH_ORIENTATION_ANGLE
    DWRITE_GLYPH_ORIENTATION_ANGLE_0_DEGREES = 0_i32
    DWRITE_GLYPH_ORIENTATION_ANGLE_90_DEGREES = 1_i32
    DWRITE_GLYPH_ORIENTATION_ANGLE_180_DEGREES = 2_i32
    DWRITE_GLYPH_ORIENTATION_ANGLE_270_DEGREES = 3_i32
  end
  enum DWRITE_TEXT_ANTIALIAS_MODE
    DWRITE_TEXT_ANTIALIAS_MODE_CLEARTYPE = 0_i32
    DWRITE_TEXT_ANTIALIAS_MODE_GRAYSCALE = 1_i32
  end
  enum DWRITE_OPTICAL_ALIGNMENT
    DWRITE_OPTICAL_ALIGNMENT_NONE = 0_i32
    DWRITE_OPTICAL_ALIGNMENT_NO_SIDE_BEARINGS = 1_i32
  end
  enum DWRITE_GRID_FIT_MODE
    DWRITE_GRID_FIT_MODE_DEFAULT = 0_i32
    DWRITE_GRID_FIT_MODE_DISABLED = 1_i32
    DWRITE_GRID_FIT_MODE_ENABLED = 2_i32
  end
  enum DWRITE_FONT_PROPERTY_ID
    DWRITE_FONT_PROPERTY_ID_NONE = 0_i32
    DWRITE_FONT_PROPERTY_ID_WEIGHT_STRETCH_STYLE_FAMILY_NAME = 1_i32
    DWRITE_FONT_PROPERTY_ID_TYPOGRAPHIC_FAMILY_NAME = 2_i32
    DWRITE_FONT_PROPERTY_ID_WEIGHT_STRETCH_STYLE_FACE_NAME = 3_i32
    DWRITE_FONT_PROPERTY_ID_FULL_NAME = 4_i32
    DWRITE_FONT_PROPERTY_ID_WIN32_FAMILY_NAME = 5_i32
    DWRITE_FONT_PROPERTY_ID_POSTSCRIPT_NAME = 6_i32
    DWRITE_FONT_PROPERTY_ID_DESIGN_SCRIPT_LANGUAGE_TAG = 7_i32
    DWRITE_FONT_PROPERTY_ID_SUPPORTED_SCRIPT_LANGUAGE_TAG = 8_i32
    DWRITE_FONT_PROPERTY_ID_SEMANTIC_TAG = 9_i32
    DWRITE_FONT_PROPERTY_ID_WEIGHT = 10_i32
    DWRITE_FONT_PROPERTY_ID_STRETCH = 11_i32
    DWRITE_FONT_PROPERTY_ID_STYLE = 12_i32
    DWRITE_FONT_PROPERTY_ID_TYPOGRAPHIC_FACE_NAME = 13_i32
    DWRITE_FONT_PROPERTY_ID_TOTAL = 13_i32
    DWRITE_FONT_PROPERTY_ID_TOTAL_RS3 = 14_i32
    DWRITE_FONT_PROPERTY_ID_PREFERRED_FAMILY_NAME = 2_i32
    DWRITE_FONT_PROPERTY_ID_FAMILY_NAME = 1_i32
    DWRITE_FONT_PROPERTY_ID_FACE_NAME = 3_i32
  end
  enum DWRITE_LOCALITY
    DWRITE_LOCALITY_REMOTE = 0_i32
    DWRITE_LOCALITY_PARTIAL = 1_i32
    DWRITE_LOCALITY_LOCAL = 2_i32
  end
  enum DWRITE_RENDERING_MODE1
    DWRITE_RENDERING_MODE1_DEFAULT = 0_i32
    DWRITE_RENDERING_MODE1_ALIASED = 1_i32
    DWRITE_RENDERING_MODE1_GDI_CLASSIC = 2_i32
    DWRITE_RENDERING_MODE1_GDI_NATURAL = 3_i32
    DWRITE_RENDERING_MODE1_NATURAL = 4_i32
    DWRITE_RENDERING_MODE1_NATURAL_SYMMETRIC = 5_i32
    DWRITE_RENDERING_MODE1_OUTLINE = 6_i32
    DWRITE_RENDERING_MODE1_NATURAL_SYMMETRIC_DOWNSAMPLED = 7_i32
  end
  enum DWRITE_FONT_LINE_GAP_USAGE
    DWRITE_FONT_LINE_GAP_USAGE_DEFAULT = 0_i32
    DWRITE_FONT_LINE_GAP_USAGE_DISABLED = 1_i32
    DWRITE_FONT_LINE_GAP_USAGE_ENABLED = 2_i32
  end
  enum DWRITE_CONTAINER_TYPE
    DWRITE_CONTAINER_TYPE_UNKNOWN = 0_i32
    DWRITE_CONTAINER_TYPE_WOFF = 1_i32
    DWRITE_CONTAINER_TYPE_WOFF2 = 2_i32
  end
  enum DWRITE_FONT_FAMILY_MODEL
    DWRITE_FONT_FAMILY_MODEL_TYPOGRAPHIC = 0_i32
    DWRITE_FONT_FAMILY_MODEL_WEIGHT_STRETCH_STYLE = 1_i32
  end
  @[Flags]
  enum DWRITE_AUTOMATIC_FONT_AXES : UInt32
    DWRITE_AUTOMATIC_FONT_AXES_NONE = 0_u32
    DWRITE_AUTOMATIC_FONT_AXES_OPTICAL_SIZE = 1_u32
  end
  @[Flags]
  enum DWRITE_FONT_AXIS_ATTRIBUTES : UInt32
    DWRITE_FONT_AXIS_ATTRIBUTES_NONE = 0_u32
    DWRITE_FONT_AXIS_ATTRIBUTES_VARIABLE = 1_u32
    DWRITE_FONT_AXIS_ATTRIBUTES_HIDDEN = 2_u32
  end
  enum DWRITE_FONT_SOURCE_TYPE
    DWRITE_FONT_SOURCE_TYPE_UNKNOWN = 0_i32
    DWRITE_FONT_SOURCE_TYPE_PER_MACHINE = 1_i32
    DWRITE_FONT_SOURCE_TYPE_PER_USER = 2_i32
    DWRITE_FONT_SOURCE_TYPE_APPX_PACKAGE = 3_i32
    DWRITE_FONT_SOURCE_TYPE_REMOTE_FONT_PROVIDER = 4_i32
  end

  @[Extern]
  record DWRITE_COLOR_F,
    r : Float32,
    g : Float32,
    b : Float32,
    a : Float32

  @[Extern]
  record DWRITE_FONT_METRICS,
    designUnitsPerEm : UInt16,
    ascent : UInt16,
    descent : UInt16,
    lineGap : Int16,
    capHeight : UInt16,
    xHeight : UInt16,
    underlinePosition : Int16,
    underlineThickness : UInt16,
    strikethroughPosition : Int16,
    strikethroughThickness : UInt16

  @[Extern]
  record DWRITE_GLYPH_METRICS,
    leftSideBearing : Int32,
    advanceWidth : UInt32,
    rightSideBearing : Int32,
    topSideBearing : Int32,
    advanceHeight : UInt32,
    bottomSideBearing : Int32,
    verticalOriginY : Int32

  @[Extern]
  record DWRITE_GLYPH_OFFSET,
    advanceOffset : Float32,
    ascenderOffset : Float32

  @[Extern]
  record DWRITE_MATRIX,
    m11 : Float32,
    m12 : Float32,
    m21 : Float32,
    m22 : Float32,
    dx : Float32,
    dy : Float32

  @[Extern]
  record DWRITE_TEXT_RANGE,
    startPosition : UInt32,
    length : UInt32

  @[Extern]
  record DWRITE_FONT_FEATURE,
    nameTag : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FEATURE_TAG,
    parameter : UInt32

  @[Extern]
  record DWRITE_TYPOGRAPHIC_FEATURES,
    features : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FEATURE*,
    featureCount : UInt32

  @[Extern]
  record DWRITE_TRIMMING,
    granularity : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING_GRANULARITY,
    delimiter : UInt32,
    delimiterCount : UInt32

  @[Extern]
  record DWRITE_SCRIPT_ANALYSIS,
    script : UInt16,
    shapes : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_SHAPES

  @[Extern]
  record DWRITE_LINE_BREAKPOINT,
    _bitfield : UInt8

  @[Extern]
  record DWRITE_SHAPING_TEXT_PROPERTIES,
    _bitfield : UInt16

  @[Extern]
  record DWRITE_SHAPING_GLYPH_PROPERTIES,
    _bitfield : UInt16

  @[Extern]
  record DWRITE_GLYPH_RUN,
    fontFace : Void*,
    fontEmSize : Float32,
    glyphCount : UInt32,
    glyphIndices : UInt16*,
    glyphAdvances : Float32*,
    glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*,
    isSideways : Win32cr::Foundation::BOOL,
    bidiLevel : UInt32

  @[Extern]
  record DWRITE_GLYPH_RUN_DESCRIPTION,
    localeName : Win32cr::Foundation::PWSTR,
    string : Win32cr::Foundation::PWSTR,
    stringLength : UInt32,
    clusterMap : UInt16*,
    textPosition : UInt32

  @[Extern]
  record DWRITE_UNDERLINE,
    width : Float32,
    thickness : Float32,
    offset : Float32,
    runHeight : Float32,
    readingDirection : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION,
    flowDirection : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION,
    localeName : Win32cr::Foundation::PWSTR,
    measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE

  @[Extern]
  record DWRITE_STRIKETHROUGH,
    width : Float32,
    thickness : Float32,
    offset : Float32,
    readingDirection : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION,
    flowDirection : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION,
    localeName : Win32cr::Foundation::PWSTR,
    measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE

  @[Extern]
  record DWRITE_LINE_METRICS,
    length : UInt32,
    trailingWhitespaceLength : UInt32,
    newlineLength : UInt32,
    height : Float32,
    baseline : Float32,
    isTrimmed : Win32cr::Foundation::BOOL

  @[Extern]
  record DWRITE_CLUSTER_METRICS,
    width : Float32,
    length : UInt16,
    _bitfield : UInt16

  @[Extern]
  record DWRITE_TEXT_METRICS,
    left : Float32,
    top : Float32,
    width : Float32,
    widthIncludingTrailingWhitespace : Float32,
    height : Float32,
    layoutWidth : Float32,
    layoutHeight : Float32,
    maxBidiReorderingDepth : UInt32,
    lineCount : UInt32

  @[Extern]
  record DWRITE_INLINE_OBJECT_METRICS,
    width : Float32,
    height : Float32,
    baseline : Float32,
    supportsSideways : Win32cr::Foundation::BOOL

  @[Extern]
  record DWRITE_OVERHANG_METRICS,
    left : Float32,
    top : Float32,
    right : Float32,
    bottom : Float32

  @[Extern]
  record DWRITE_HIT_TEST_METRICS,
    textPosition : UInt32,
    length : UInt32,
    left : Float32,
    top : Float32,
    width : Float32,
    height : Float32,
    bidiLevel : UInt32,
    isText : Win32cr::Foundation::BOOL,
    isTrimmed : Win32cr::Foundation::BOOL

  @[Extern]
  record DWRITE_FONT_METRICS1,
    __anonymous_base_d_write_1_l627_c38 : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS,
    glyphBoxLeft : Int16,
    glyphBoxTop : Int16,
    glyphBoxRight : Int16,
    glyphBoxBottom : Int16,
    subscriptPositionX : Int16,
    subscriptPositionY : Int16,
    subscriptSizeX : Int16,
    subscriptSizeY : Int16,
    superscriptPositionX : Int16,
    superscriptPositionY : Int16,
    superscriptSizeX : Int16,
    superscriptSizeY : Int16,
    hasTypographicMetrics : Win32cr::Foundation::BOOL

  @[Extern]
  record DWRITE_CARET_METRICS,
    slopeRise : Int16,
    slopeRun : Int16,
    offset : Int16

  @[Extern(union: true)]
  record DWRITE_PANOSE,
    values : UInt8[10],
    familyKind : UInt8,
    text : Text_e__struct_,
    script : Script_e__struct_,
    decorative : Decorative_e__struct_,
    symbol : Symbol_e__struct_ do

    # Nested Type Decorative_e__struct_
    @[Extern]
    record Decorative_e__struct_,
      familyKind : UInt8,
      decorativeClass : UInt8,
      weight : UInt8,
      aspect : UInt8,
      contrast : UInt8,
      serifVariant : UInt8,
      fill : UInt8,
      lining : UInt8,
      decorativeTopology : UInt8,
      characterRange : UInt8


    # Nested Type Text_e__struct_
    @[Extern]
    record Text_e__struct_,
      familyKind : UInt8,
      serifStyle : UInt8,
      weight : UInt8,
      proportion : UInt8,
      contrast : UInt8,
      strokeVariation : UInt8,
      armStyle : UInt8,
      letterform : UInt8,
      midline : UInt8,
      xHeight : UInt8


    # Nested Type Symbol_e__struct_
    @[Extern]
    record Symbol_e__struct_,
      familyKind : UInt8,
      symbolKind : UInt8,
      weight : UInt8,
      spacing : UInt8,
      aspectRatioAndContrast : UInt8,
      aspectRatio94 : UInt8,
      aspectRatio119 : UInt8,
      aspectRatio157 : UInt8,
      aspectRatio163 : UInt8,
      aspectRatio211 : UInt8


    # Nested Type Script_e__struct_
    @[Extern]
    record Script_e__struct_,
      familyKind : UInt8,
      toolKind : UInt8,
      weight : UInt8,
      spacing : UInt8,
      aspectRatio : UInt8,
      contrast : UInt8,
      scriptTopology : UInt8,
      scriptForm : UInt8,
      finials : UInt8,
      xAscent : UInt8

  end

  @[Extern]
  record DWRITE_UNICODE_RANGE,
    first : UInt32,
    last : UInt32

  @[Extern]
  record DWRITE_SCRIPT_PROPERTIES,
    isoScriptCode : UInt32,
    isoScriptNumber : UInt32,
    clusterLookahead : UInt32,
    justificationCharacter : UInt32,
    _bitfield : UInt32

  @[Extern]
  record DWRITE_JUSTIFICATION_OPPORTUNITY,
    expansionMinimum : Float32,
    expansionMaximum : Float32,
    compressionMaximum : Float32,
    _bitfield : UInt32

  @[Extern]
  record DWRITE_TEXT_METRICS1,
    base : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS,
    heightIncludingTrailingWhitespace : Float32

  @[Extern]
  record DWRITE_COLOR_GLYPH_RUN,
    glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN,
    glyphRunDescription : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*,
    baselineOriginX : Float32,
    baselineOriginY : Float32,
    runColor : Win32cr::Graphics::DirectWrite::DWRITE_COLOR_F,
    paletteIndex : UInt16

  @[Extern]
  record DWRITE_FONT_PROPERTY,
    propertyId : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID,
    propertyValue : Win32cr::Foundation::PWSTR,
    localeName : Win32cr::Foundation::PWSTR

  @[Extern]
  record DWRITE_LINE_METRICS1,
    base : Win32cr::Graphics::DirectWrite::DWRITE_LINE_METRICS,
    leadingBefore : Float32,
    leadingAfter : Float32

  @[Extern]
  record DWRITE_LINE_SPACING,
    method : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD,
    height : Float32,
    baseline : Float32,
    leadingBefore : Float32,
    fontLineGapUsage : Win32cr::Graphics::DirectWrite::DWRITE_FONT_LINE_GAP_USAGE

  @[Extern]
  record DWRITE_COLOR_GLYPH_RUN1,
    base : Win32cr::Graphics::DirectWrite::DWRITE_COLOR_GLYPH_RUN,
    glyphImageFormat : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS,
    measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE

  @[Extern]
  record DWRITE_GLYPH_IMAGE_DATA,
    imageData : Void*,
    imageDataSize : UInt32,
    uniqueDataId : UInt32,
    pixelsPerEm : UInt32,
    pixelSize : Win32cr::Graphics::Direct2D::Common::D2D_SIZE_U,
    horizontalLeftOrigin : Win32cr::Foundation::POINT,
    horizontalRightOrigin : Win32cr::Foundation::POINT,
    verticalTopOrigin : Win32cr::Foundation::POINT,
    verticalBottomOrigin : Win32cr::Foundation::POINT

  @[Extern]
  record DWRITE_FILE_FRAGMENT,
    fileOffset : UInt64,
    fragmentSize : UInt64

  @[Extern]
  record DWRITE_FONT_AXIS_VALUE,
    axisTag : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_TAG,
    value : Float32

  @[Extern]
  record DWRITE_FONT_AXIS_RANGE,
    axisTag : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_TAG,
    minValue : Float32,
    maxValue : Float32

  @[Extern]
  record IDWriteFontFileLoaderVtbl,
    query_interface : Proc(IDWriteFontFileLoader*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFileLoader*, UInt32),
    release : Proc(IDWriteFontFileLoader*, UInt32),
    create_stream_from_key : Proc(IDWriteFontFileLoader*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("727cad4e-d6af-4c9e-8a08-d695b11caa49")]
  record IDWriteFontFileLoader, lpVtbl : IDWriteFontFileLoaderVtbl* do
    GUID = LibC::GUID.new(0x727cad4e_u32, 0xd6af_u16, 0x4c9e_u16, StaticArray[0x8a_u8, 0x8_u8, 0xd6_u8, 0x95_u8, 0xb1_u8, 0x1c_u8, 0xaa_u8, 0x49_u8])
    def query_interface(this : IDWriteFontFileLoader*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFileLoader*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFileLoader*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_stream_from_key(this : IDWriteFontFileLoader*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, fontFileStream : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_stream_from_key.call(this, fontFileReferenceKey, fontFileReferenceKeySize, fontFileStream)
    end

  end

  @[Extern]
  record IDWriteLocalFontFileLoaderVtbl,
    query_interface : Proc(IDWriteLocalFontFileLoader*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteLocalFontFileLoader*, UInt32),
    release : Proc(IDWriteLocalFontFileLoader*, UInt32),
    create_stream_from_key : Proc(IDWriteLocalFontFileLoader*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_file_path_length_from_key : Proc(IDWriteLocalFontFileLoader*, Void*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_file_path_from_key : Proc(IDWriteLocalFontFileLoader*, Void*, UInt32, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_last_write_time_from_key : Proc(IDWriteLocalFontFileLoader*, Void*, UInt32, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("b2d9f3ec-c9fe-4a11-a2ec-d86208f7c0a2")]
  record IDWriteLocalFontFileLoader, lpVtbl : IDWriteLocalFontFileLoaderVtbl* do
    GUID = LibC::GUID.new(0xb2d9f3ec_u32, 0xc9fe_u16, 0x4a11_u16, StaticArray[0xa2_u8, 0xec_u8, 0xd8_u8, 0x62_u8, 0x8_u8, 0xf7_u8, 0xc0_u8, 0xa2_u8])
    def query_interface(this : IDWriteLocalFontFileLoader*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteLocalFontFileLoader*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteLocalFontFileLoader*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_stream_from_key(this : IDWriteLocalFontFileLoader*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, fontFileStream : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_stream_from_key.call(this, fontFileReferenceKey, fontFileReferenceKeySize, fontFileStream)
    end
    def get_file_path_length_from_key(this : IDWriteLocalFontFileLoader*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, filePathLength : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_path_length_from_key.call(this, fontFileReferenceKey, fontFileReferenceKeySize, filePathLength)
    end
    def get_file_path_from_key(this : IDWriteLocalFontFileLoader*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, filePath : UInt16*, filePathSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_path_from_key.call(this, fontFileReferenceKey, fontFileReferenceKeySize, filePath, filePathSize)
    end
    def get_last_write_time_from_key(this : IDWriteLocalFontFileLoader*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, lastWriteTime : Win32cr::Foundation::FILETIME*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_last_write_time_from_key.call(this, fontFileReferenceKey, fontFileReferenceKeySize, lastWriteTime)
    end

  end

  @[Extern]
  record IDWriteFontFileStreamVtbl,
    query_interface : Proc(IDWriteFontFileStream*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFileStream*, UInt32),
    release : Proc(IDWriteFontFileStream*, UInt32),
    read_file_fragment : Proc(IDWriteFontFileStream*, Void**, UInt64, UInt64, Void**, Win32cr::Foundation::HRESULT),
    release_file_fragment : Proc(IDWriteFontFileStream*, Void*, Void),
    get_file_size : Proc(IDWriteFontFileStream*, UInt64*, Win32cr::Foundation::HRESULT),
    get_last_write_time : Proc(IDWriteFontFileStream*, UInt64*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("6d4865fe-0ab8-4d91-8f62-5dd6be34a3e0")]
  record IDWriteFontFileStream, lpVtbl : IDWriteFontFileStreamVtbl* do
    GUID = LibC::GUID.new(0x6d4865fe_u32, 0xab8_u16, 0x4d91_u16, StaticArray[0x8f_u8, 0x62_u8, 0x5d_u8, 0xd6_u8, 0xbe_u8, 0x34_u8, 0xa3_u8, 0xe0_u8])
    def query_interface(this : IDWriteFontFileStream*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFileStream*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFileStream*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def read_file_fragment(this : IDWriteFontFileStream*, fragmentStart : Void**, fileOffset : UInt64, fragmentSize : UInt64, fragmentContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read_file_fragment.call(this, fragmentStart, fileOffset, fragmentSize, fragmentContext)
    end
    def release_file_fragment(this : IDWriteFontFileStream*, fragmentContext : Void*) : Void
      @lpVtbl.try &.value.release_file_fragment.call(this, fragmentContext)
    end
    def get_file_size(this : IDWriteFontFileStream*, fileSize : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_size.call(this, fileSize)
    end
    def get_last_write_time(this : IDWriteFontFileStream*, lastWriteTime : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_last_write_time.call(this, lastWriteTime)
    end

  end

  @[Extern]
  record IDWriteFontFileVtbl,
    query_interface : Proc(IDWriteFontFile*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFile*, UInt32),
    release : Proc(IDWriteFontFile*, UInt32),
    get_reference_key : Proc(IDWriteFontFile*, Void**, UInt32*, Win32cr::Foundation::HRESULT),
    get_loader : Proc(IDWriteFontFile*, Void**, Win32cr::Foundation::HRESULT),
    analyze : Proc(IDWriteFontFile*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FILE_TYPE*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("739d886a-cef5-47dc-8769-1a8b41bebbb0")]
  record IDWriteFontFile, lpVtbl : IDWriteFontFileVtbl* do
    GUID = LibC::GUID.new(0x739d886a_u32, 0xcef5_u16, 0x47dc_u16, StaticArray[0x87_u8, 0x69_u8, 0x1a_u8, 0x8b_u8, 0x41_u8, 0xbe_u8, 0xbb_u8, 0xb0_u8])
    def query_interface(this : IDWriteFontFile*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFile*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFile*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_reference_key(this : IDWriteFontFile*, fontFileReferenceKey : Void**, fontFileReferenceKeySize : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_reference_key.call(this, fontFileReferenceKey, fontFileReferenceKeySize)
    end
    def get_loader(this : IDWriteFontFile*, fontFileLoader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_loader.call(this, fontFileLoader)
    end
    def analyze(this : IDWriteFontFile*, isSupportedFontType : Win32cr::Foundation::BOOL*, fontFileType : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FILE_TYPE*, fontFaceType : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE*, numberOfFaces : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze.call(this, isSupportedFontType, fontFileType, fontFaceType, numberOfFaces)
    end

  end

  @[Extern]
  record IDWriteRenderingParamsVtbl,
    query_interface : Proc(IDWriteRenderingParams*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteRenderingParams*, UInt32),
    release : Proc(IDWriteRenderingParams*, UInt32),
    get_gamma : Proc(IDWriteRenderingParams*, Float32),
    get_enhanced_contrast : Proc(IDWriteRenderingParams*, Float32),
    get_clear_type_level : Proc(IDWriteRenderingParams*, Float32),
    get_pixel_geometry : Proc(IDWriteRenderingParams*, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY),
    get_rendering_mode : Proc(IDWriteRenderingParams*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE)


  @[Extern]
  #@[Com("2f0da53a-2add-47cd-82ee-d9ec34688e75")]
  record IDWriteRenderingParams, lpVtbl : IDWriteRenderingParamsVtbl* do
    GUID = LibC::GUID.new(0x2f0da53a_u32, 0x2add_u16, 0x47cd_u16, StaticArray[0x82_u8, 0xee_u8, 0xd9_u8, 0xec_u8, 0x34_u8, 0x68_u8, 0x8e_u8, 0x75_u8])
    def query_interface(this : IDWriteRenderingParams*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteRenderingParams*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteRenderingParams*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_gamma(this : IDWriteRenderingParams*) : Float32
      @lpVtbl.try &.value.get_gamma.call(this)
    end
    def get_enhanced_contrast(this : IDWriteRenderingParams*) : Float32
      @lpVtbl.try &.value.get_enhanced_contrast.call(this)
    end
    def get_clear_type_level(this : IDWriteRenderingParams*) : Float32
      @lpVtbl.try &.value.get_clear_type_level.call(this)
    end
    def get_pixel_geometry(this : IDWriteRenderingParams*) : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY
      @lpVtbl.try &.value.get_pixel_geometry.call(this)
    end
    def get_rendering_mode(this : IDWriteRenderingParams*) : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE
      @lpVtbl.try &.value.get_rendering_mode.call(this)
    end

  end

  @[Extern]
  record IDWriteFontFaceVtbl,
    query_interface : Proc(IDWriteFontFace*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFace*, UInt32),
    release : Proc(IDWriteFontFace*, UInt32),
    get_type : Proc(IDWriteFontFace*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE),
    get_files : Proc(IDWriteFontFace*, UInt32*, Void**, Win32cr::Foundation::HRESULT),
    get_index : Proc(IDWriteFontFace*, UInt32),
    get_simulations : Proc(IDWriteFontFace*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS),
    is_symbol_font : Proc(IDWriteFontFace*, Win32cr::Foundation::BOOL),
    get_metrics_1 : Proc(IDWriteFontFace*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Void),
    get_glyph_count : Proc(IDWriteFontFace*, UInt16),
    get_design_glyph_metrics : Proc(IDWriteFontFace*, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_glyph_indices : Proc(IDWriteFontFace*, UInt32*, UInt32, UInt16*, Win32cr::Foundation::HRESULT),
    try_get_font_table : Proc(IDWriteFontFace*, UInt32, Void**, UInt32*, Void**, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    release_font_table : Proc(IDWriteFontFace*, Void*, Void),
    get_glyph_run_outline : Proc(IDWriteFontFace*, Float32, UInt16*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Void*, Win32cr::Foundation::HRESULT),
    get_recommended_rendering_mode_1_1 : Proc(IDWriteFontFace*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_metrics_1 : Proc(IDWriteFontFace*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_metrics : Proc(IDWriteFontFace*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("5f49804d-7024-4d43-bfa9-d25984f53849")]
  record IDWriteFontFace, lpVtbl : IDWriteFontFaceVtbl* do
    GUID = LibC::GUID.new(0x5f49804d_u32, 0x7024_u16, 0x4d43_u16, StaticArray[0xbf_u8, 0xa9_u8, 0xd2_u8, 0x59_u8, 0x84_u8, 0xf5_u8, 0x38_u8, 0x49_u8])
    def query_interface(this : IDWriteFontFace*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFace*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFace*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type(this : IDWriteFontFace*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE
      @lpVtbl.try &.value.get_type.call(this)
    end
    def get_files(this : IDWriteFontFace*, numberOfFiles : UInt32*, fontFiles : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_files.call(this, numberOfFiles, fontFiles)
    end
    def get_index(this : IDWriteFontFace*) : UInt32
      @lpVtbl.try &.value.get_index.call(this)
    end
    def get_simulations(this : IDWriteFontFace*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS
      @lpVtbl.try &.value.get_simulations.call(this)
    end
    def is_symbol_font(this : IDWriteFontFace*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_symbol_font.call(this)
    end
    def get_metrics_1(this : IDWriteFontFace*, fontFaceMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Void
      @lpVtbl.try &.value.get_metrics_1.call(this, fontFaceMetrics)
    end
    def get_glyph_count(this : IDWriteFontFace*) : UInt16
      @lpVtbl.try &.value.get_glyph_count.call(this)
    end
    def get_design_glyph_metrics(this : IDWriteFontFace*, glyphIndices : UInt16*, glyphCount : UInt32, glyphMetrics : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_design_glyph_metrics.call(this, glyphIndices, glyphCount, glyphMetrics, isSideways)
    end
    def get_glyph_indices(this : IDWriteFontFace*, codePoints : UInt32*, codePointCount : UInt32, glyphIndices : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_indices.call(this, codePoints, codePointCount, glyphIndices)
    end
    def try_get_font_table(this : IDWriteFontFace*, openTypeTableTag : UInt32, tableData : Void**, tableSize : UInt32*, tableContext : Void**, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.try_get_font_table.call(this, openTypeTableTag, tableData, tableSize, tableContext, exists)
    end
    def release_font_table(this : IDWriteFontFace*, tableContext : Void*) : Void
      @lpVtbl.try &.value.release_font_table.call(this, tableContext)
    end
    def get_glyph_run_outline(this : IDWriteFontFace*, emSize : Float32, glyphIndices : UInt16*, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, glyphCount : UInt32, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, geometrySink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_run_outline.call(this, emSize, glyphIndices, glyphAdvances, glyphOffsets, glyphCount, isSideways, isRightToLeft, geometrySink)
    end
    def get_recommended_rendering_mode_1_1(this : IDWriteFontFace*, emSize : Float32, pixelsPerDip : Float32, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_1_1.call(this, emSize, pixelsPerDip, measuringMode, renderingParams, renderingMode)
    end
    def get_gdi_compatible_metrics_1(this : IDWriteFontFace*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, fontFaceMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_metrics_1.call(this, emSize, pixelsPerDip, transform, fontFaceMetrics)
    end
    def get_gdi_compatible_glyph_metrics(this : IDWriteFontFace*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, glyphIndices : UInt16*, glyphCount : UInt32, glyphMetrics : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_metrics.call(this, emSize, pixelsPerDip, transform, useGdiNatural, glyphIndices, glyphCount, glyphMetrics, isSideways)
    end

  end

  @[Extern]
  record IDWriteFontCollectionLoaderVtbl,
    query_interface : Proc(IDWriteFontCollectionLoader*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontCollectionLoader*, UInt32),
    release : Proc(IDWriteFontCollectionLoader*, UInt32),
    create_enumerator_from_key : Proc(IDWriteFontCollectionLoader*, Void*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("cca920e4-52f0-492b-bfa8-29c72ee0a468")]
  record IDWriteFontCollectionLoader, lpVtbl : IDWriteFontCollectionLoaderVtbl* do
    GUID = LibC::GUID.new(0xcca920e4_u32, 0x52f0_u16, 0x492b_u16, StaticArray[0xbf_u8, 0xa8_u8, 0x29_u8, 0xc7_u8, 0x2e_u8, 0xe0_u8, 0xa4_u8, 0x68_u8])
    def query_interface(this : IDWriteFontCollectionLoader*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontCollectionLoader*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontCollectionLoader*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_enumerator_from_key(this : IDWriteFontCollectionLoader*, factory : Void*, collectionKey : Void*, collectionKeySize : UInt32, fontFileEnumerator : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_enumerator_from_key.call(this, factory, collectionKey, collectionKeySize, fontFileEnumerator)
    end

  end

  @[Extern]
  record IDWriteFontFileEnumeratorVtbl,
    query_interface : Proc(IDWriteFontFileEnumerator*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFileEnumerator*, UInt32),
    release : Proc(IDWriteFontFileEnumerator*, UInt32),
    move_next : Proc(IDWriteFontFileEnumerator*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_current_font_file : Proc(IDWriteFontFileEnumerator*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("72755049-5ff7-435d-8348-4be97cfa6c7c")]
  record IDWriteFontFileEnumerator, lpVtbl : IDWriteFontFileEnumeratorVtbl* do
    GUID = LibC::GUID.new(0x72755049_u32, 0x5ff7_u16, 0x435d_u16, StaticArray[0x83_u8, 0x48_u8, 0x4b_u8, 0xe9_u8, 0x7c_u8, 0xfa_u8, 0x6c_u8, 0x7c_u8])
    def query_interface(this : IDWriteFontFileEnumerator*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFileEnumerator*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFileEnumerator*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def move_next(this : IDWriteFontFileEnumerator*, hasCurrentFile : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_next.call(this, hasCurrentFile)
    end
    def get_current_font_file(this : IDWriteFontFileEnumerator*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_font_file.call(this, fontFile)
    end

  end

  @[Extern]
  record IDWriteLocalizedStringsVtbl,
    query_interface : Proc(IDWriteLocalizedStrings*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteLocalizedStrings*, UInt32),
    release : Proc(IDWriteLocalizedStrings*, UInt32),
    get_count : Proc(IDWriteLocalizedStrings*, UInt32),
    find_locale_name : Proc(IDWriteLocalizedStrings*, Win32cr::Foundation::PWSTR, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_locale_name_length : Proc(IDWriteLocalizedStrings*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_locale_name : Proc(IDWriteLocalizedStrings*, UInt32, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_string_length : Proc(IDWriteLocalizedStrings*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_string : Proc(IDWriteLocalizedStrings*, UInt32, UInt16*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("08256209-099a-4b34-b86d-c22b110e7771")]
  record IDWriteLocalizedStrings, lpVtbl : IDWriteLocalizedStringsVtbl* do
    GUID = LibC::GUID.new(0x8256209_u32, 0x99a_u16, 0x4b34_u16, StaticArray[0xb8_u8, 0x6d_u8, 0xc2_u8, 0x2b_u8, 0x11_u8, 0xe_u8, 0x77_u8, 0x71_u8])
    def query_interface(this : IDWriteLocalizedStrings*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteLocalizedStrings*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteLocalizedStrings*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_count(this : IDWriteLocalizedStrings*) : UInt32
      @lpVtbl.try &.value.get_count.call(this)
    end
    def find_locale_name(this : IDWriteLocalizedStrings*, localeName : Win32cr::Foundation::PWSTR, index : UInt32*, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_locale_name.call(this, localeName, index, exists)
    end
    def get_locale_name_length(this : IDWriteLocalizedStrings*, index : UInt32, length : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_length.call(this, index, length)
    end
    def get_locale_name(this : IDWriteLocalizedStrings*, index : UInt32, localeName : UInt16*, size : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name.call(this, index, localeName, size)
    end
    def get_string_length(this : IDWriteLocalizedStrings*, index : UInt32, length : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_string_length.call(this, index, length)
    end
    def get_string(this : IDWriteLocalizedStrings*, index : UInt32, stringBuffer : UInt16*, size : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_string.call(this, index, stringBuffer, size)
    end

  end

  @[Extern]
  record IDWriteFontCollectionVtbl,
    query_interface : Proc(IDWriteFontCollection*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontCollection*, UInt32),
    release : Proc(IDWriteFontCollection*, UInt32),
    get_font_family_count : Proc(IDWriteFontCollection*, UInt32),
    get_font_family_1 : Proc(IDWriteFontCollection*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    find_family_name : Proc(IDWriteFontCollection*, Win32cr::Foundation::PWSTR, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_font_from_font_face : Proc(IDWriteFontCollection*, Void*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("a84cee02-3eea-4eee-a827-87c1a02a0fcc")]
  record IDWriteFontCollection, lpVtbl : IDWriteFontCollectionVtbl* do
    GUID = LibC::GUID.new(0xa84cee02_u32, 0x3eea_u16, 0x4eee_u16, StaticArray[0xa8_u8, 0x27_u8, 0x87_u8, 0xc1_u8, 0xa0_u8, 0x2a_u8, 0xf_u8, 0xcc_u8])
    def query_interface(this : IDWriteFontCollection*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontCollection*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontCollection*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_family_count(this : IDWriteFontCollection*) : UInt32
      @lpVtbl.try &.value.get_font_family_count.call(this)
    end
    def get_font_family_1(this : IDWriteFontCollection*, index : UInt32, fontFamily : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_1.call(this, index, fontFamily)
    end
    def find_family_name(this : IDWriteFontCollection*, familyName : Win32cr::Foundation::PWSTR, index : UInt32*, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_family_name.call(this, familyName, index, exists)
    end
    def get_font_from_font_face(this : IDWriteFontCollection*, fontFace : Void*, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_from_font_face.call(this, fontFace, font)
    end

  end

  @[Extern]
  record IDWriteFontListVtbl,
    query_interface : Proc(IDWriteFontList*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontList*, UInt32),
    release : Proc(IDWriteFontList*, UInt32),
    get_font_collection : Proc(IDWriteFontList*, Void**, Win32cr::Foundation::HRESULT),
    get_font_count : Proc(IDWriteFontList*, UInt32),
    get_font_1 : Proc(IDWriteFontList*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("1a0d8438-1d97-4ec1-aef9-a2fb86ed6acb")]
  record IDWriteFontList, lpVtbl : IDWriteFontListVtbl* do
    GUID = LibC::GUID.new(0x1a0d8438_u32, 0x1d97_u16, 0x4ec1_u16, StaticArray[0xae_u8, 0xf9_u8, 0xa2_u8, 0xfb_u8, 0x86_u8, 0xed_u8, 0x6a_u8, 0xcb_u8])
    def query_interface(this : IDWriteFontList*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontList*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontList*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_collection(this : IDWriteFontList*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection.call(this, fontCollection)
    end
    def get_font_count(this : IDWriteFontList*) : UInt32
      @lpVtbl.try &.value.get_font_count.call(this)
    end
    def get_font_1(this : IDWriteFontList*, index : UInt32, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_1.call(this, index, font)
    end

  end

  @[Extern]
  record IDWriteFontFamilyVtbl,
    query_interface : Proc(IDWriteFontFamily*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFamily*, UInt32),
    release : Proc(IDWriteFontFamily*, UInt32),
    get_font_collection : Proc(IDWriteFontFamily*, Void**, Win32cr::Foundation::HRESULT),
    get_font_count : Proc(IDWriteFontFamily*, UInt32),
    get_font_1 : Proc(IDWriteFontFamily*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_family_names : Proc(IDWriteFontFamily*, Void**, Win32cr::Foundation::HRESULT),
    get_first_matching_font : Proc(IDWriteFontFamily*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Void**, Win32cr::Foundation::HRESULT),
    get_matching_fonts_1 : Proc(IDWriteFontFamily*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("da20d8ef-812a-4c43-9802-62ec4abd7add")]
  record IDWriteFontFamily, lpVtbl : IDWriteFontFamilyVtbl* do
    GUID = LibC::GUID.new(0xda20d8ef_u32, 0x812a_u16, 0x4c43_u16, StaticArray[0x98_u8, 0x2_u8, 0x62_u8, 0xec_u8, 0x4a_u8, 0xbd_u8, 0x7a_u8, 0xdd_u8])
    def query_interface(this : IDWriteFontFamily*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFamily*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFamily*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_collection(this : IDWriteFontFamily*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection.call(this, fontCollection)
    end
    def get_font_count(this : IDWriteFontFamily*) : UInt32
      @lpVtbl.try &.value.get_font_count.call(this)
    end
    def get_font_1(this : IDWriteFontFamily*, index : UInt32, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_1.call(this, index, font)
    end
    def get_family_names(this : IDWriteFontFamily*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_family_names.call(this, names)
    end
    def get_first_matching_font(this : IDWriteFontFamily*, weight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, stretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, style : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, matchingFont : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_first_matching_font.call(this, weight, stretch, style, matchingFont)
    end
    def get_matching_fonts_1(this : IDWriteFontFamily*, weight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, stretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, style : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, matchingFonts : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts_1.call(this, weight, stretch, style, matchingFonts)
    end

  end

  @[Extern]
  record IDWriteFontVtbl,
    query_interface : Proc(IDWriteFont*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFont*, UInt32),
    release : Proc(IDWriteFont*, UInt32),
    get_font_family : Proc(IDWriteFont*, Void**, Win32cr::Foundation::HRESULT),
    get_weight : Proc(IDWriteFont*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_stretch : Proc(IDWriteFont*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_style : Proc(IDWriteFont*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    is_symbol_font : Proc(IDWriteFont*, Win32cr::Foundation::BOOL),
    get_face_names : Proc(IDWriteFont*, Void**, Win32cr::Foundation::HRESULT),
    get_informational_strings : Proc(IDWriteFont*, Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, Void**, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_simulations : Proc(IDWriteFont*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS),
    get_metrics_1 : Proc(IDWriteFont*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Void),
    has_character_1 : Proc(IDWriteFont*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    create_font_face_1 : Proc(IDWriteFont*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("acd16696-8c14-4f5d-877e-fe3fc1d32737")]
  record IDWriteFont, lpVtbl : IDWriteFontVtbl* do
    GUID = LibC::GUID.new(0xacd16696_u32, 0x8c14_u16, 0x4f5d_u16, StaticArray[0x87_u8, 0x7e_u8, 0xfe_u8, 0x3f_u8, 0xc1_u8, 0xd3_u8, 0x27_u8, 0x37_u8])
    def query_interface(this : IDWriteFont*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFont*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFont*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_family(this : IDWriteFont*, fontFamily : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family.call(this, fontFamily)
    end
    def get_weight(this : IDWriteFont*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_weight.call(this)
    end
    def get_stretch(this : IDWriteFont*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_stretch.call(this)
    end
    def get_style(this : IDWriteFont*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_style.call(this)
    end
    def is_symbol_font(this : IDWriteFont*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_symbol_font.call(this)
    end
    def get_face_names(this : IDWriteFont*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_face_names.call(this, names)
    end
    def get_informational_strings(this : IDWriteFont*, informationalStringID : Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, informationalStrings : Void**, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_informational_strings.call(this, informationalStringID, informationalStrings, exists)
    end
    def get_simulations(this : IDWriteFont*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS
      @lpVtbl.try &.value.get_simulations.call(this)
    end
    def get_metrics_1(this : IDWriteFont*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Void
      @lpVtbl.try &.value.get_metrics_1.call(this, fontMetrics)
    end
    def has_character_1(this : IDWriteFont*, unicodeValue : UInt32, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.has_character_1.call(this, unicodeValue, exists)
    end
    def create_font_face_1(this : IDWriteFont*, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_1.call(this, fontFace)
    end

  end

  @[Extern]
  record IDWriteTextFormatVtbl,
    query_interface : Proc(IDWriteTextFormat*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextFormat*, UInt32),
    release : Proc(IDWriteTextFormat*, UInt32),
    set_text_alignment : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_paragraph_alignment : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_word_wrapping : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING, Win32cr::Foundation::HRESULT),
    set_reading_direction : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION, Win32cr::Foundation::HRESULT),
    set_flow_direction : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION, Win32cr::Foundation::HRESULT),
    set_incremental_tab_stop : Proc(IDWriteTextFormat*, Float32, Win32cr::Foundation::HRESULT),
    set_trimming : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void*, Win32cr::Foundation::HRESULT),
    set_line_spacing_1 : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, Float32, Float32, Win32cr::Foundation::HRESULT),
    get_text_alignment : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT),
    get_paragraph_alignment : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT),
    get_word_wrapping : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING),
    get_reading_direction : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION),
    get_flow_direction : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION),
    get_incremental_tab_stop : Proc(IDWriteTextFormat*, Float32),
    get_trimming : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void**, Win32cr::Foundation::HRESULT),
    get_line_spacing_1 : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, Float32*, Float32*, Win32cr::Foundation::HRESULT),
    get_font_collection_1 : Proc(IDWriteTextFormat*, Void**, Win32cr::Foundation::HRESULT),
    get_font_family_name_length_1 : Proc(IDWriteTextFormat*, UInt32),
    get_font_family_name_1 : Proc(IDWriteTextFormat*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_font_weight_1 : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_font_style_1 : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    get_font_stretch_1 : Proc(IDWriteTextFormat*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_font_size_1 : Proc(IDWriteTextFormat*, Float32),
    get_locale_name_length_1 : Proc(IDWriteTextFormat*, UInt32),
    get_locale_name_1 : Proc(IDWriteTextFormat*, UInt16*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("9c906818-31d7-4fd3-a151-7c5e225db55a")]
  record IDWriteTextFormat, lpVtbl : IDWriteTextFormatVtbl* do
    GUID = LibC::GUID.new(0x9c906818_u32, 0x31d7_u16, 0x4fd3_u16, StaticArray[0xa1_u8, 0x51_u8, 0x7c_u8, 0x5e_u8, 0x22_u8, 0x5d_u8, 0xb5_u8, 0x5a_u8])
    def query_interface(this : IDWriteTextFormat*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextFormat*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextFormat*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_text_alignment(this : IDWriteTextFormat*, textAlignment : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_text_alignment.call(this, textAlignment)
    end
    def set_paragraph_alignment(this : IDWriteTextFormat*, paragraphAlignment : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_paragraph_alignment.call(this, paragraphAlignment)
    end
    def set_word_wrapping(this : IDWriteTextFormat*, wordWrapping : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_word_wrapping.call(this, wordWrapping)
    end
    def set_reading_direction(this : IDWriteTextFormat*, readingDirection : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_reading_direction.call(this, readingDirection)
    end
    def set_flow_direction(this : IDWriteTextFormat*, flowDirection : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flow_direction.call(this, flowDirection)
    end
    def set_incremental_tab_stop(this : IDWriteTextFormat*, incrementalTabStop : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_incremental_tab_stop.call(this, incrementalTabStop)
    end
    def set_trimming(this : IDWriteTextFormat*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def set_line_spacing_1(this : IDWriteTextFormat*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, lineSpacing : Float32, baseline : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_text_alignment(this : IDWriteTextFormat*) : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT
      @lpVtbl.try &.value.get_text_alignment.call(this)
    end
    def get_paragraph_alignment(this : IDWriteTextFormat*) : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT
      @lpVtbl.try &.value.get_paragraph_alignment.call(this)
    end
    def get_word_wrapping(this : IDWriteTextFormat*) : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING
      @lpVtbl.try &.value.get_word_wrapping.call(this)
    end
    def get_reading_direction(this : IDWriteTextFormat*) : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION
      @lpVtbl.try &.value.get_reading_direction.call(this)
    end
    def get_flow_direction(this : IDWriteTextFormat*) : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION
      @lpVtbl.try &.value.get_flow_direction.call(this)
    end
    def get_incremental_tab_stop(this : IDWriteTextFormat*) : Float32
      @lpVtbl.try &.value.get_incremental_tab_stop.call(this)
    end
    def get_trimming(this : IDWriteTextFormat*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def get_line_spacing_1(this : IDWriteTextFormat*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, lineSpacing : Float32*, baseline : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_font_collection_1(this : IDWriteTextFormat*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection_1.call(this, fontCollection)
    end
    def get_font_family_name_length_1(this : IDWriteTextFormat*) : UInt32
      @lpVtbl.try &.value.get_font_family_name_length_1.call(this)
    end
    def get_font_family_name_1(this : IDWriteTextFormat*, fontFamilyName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_1.call(this, fontFamilyName, nameSize)
    end
    def get_font_weight_1(this : IDWriteTextFormat*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_font_weight_1.call(this)
    end
    def get_font_style_1(this : IDWriteTextFormat*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_font_style_1.call(this)
    end
    def get_font_stretch_1(this : IDWriteTextFormat*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_font_stretch_1.call(this)
    end
    def get_font_size_1(this : IDWriteTextFormat*) : Float32
      @lpVtbl.try &.value.get_font_size_1.call(this)
    end
    def get_locale_name_length_1(this : IDWriteTextFormat*) : UInt32
      @lpVtbl.try &.value.get_locale_name_length_1.call(this)
    end
    def get_locale_name_1(this : IDWriteTextFormat*, localeName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_1.call(this, localeName, nameSize)
    end

  end

  @[Extern]
  record IDWriteTypographyVtbl,
    query_interface : Proc(IDWriteTypography*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTypography*, UInt32),
    release : Proc(IDWriteTypography*, UInt32),
    add_font_feature : Proc(IDWriteTypography*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FEATURE, Win32cr::Foundation::HRESULT),
    get_font_feature_count : Proc(IDWriteTypography*, UInt32),
    get_font_feature : Proc(IDWriteTypography*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FEATURE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("55f1112b-1dc2-4b3c-9541-f46894ed85b6")]
  record IDWriteTypography, lpVtbl : IDWriteTypographyVtbl* do
    GUID = LibC::GUID.new(0x55f1112b_u32, 0x1dc2_u16, 0x4b3c_u16, StaticArray[0x95_u8, 0x41_u8, 0xf4_u8, 0x68_u8, 0x94_u8, 0xed_u8, 0x85_u8, 0xb6_u8])
    def query_interface(this : IDWriteTypography*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTypography*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTypography*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_font_feature(this : IDWriteTypography*, fontFeature : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FEATURE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_font_feature.call(this, fontFeature)
    end
    def get_font_feature_count(this : IDWriteTypography*) : UInt32
      @lpVtbl.try &.value.get_font_feature_count.call(this)
    end
    def get_font_feature(this : IDWriteTypography*, fontFeatureIndex : UInt32, fontFeature : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FEATURE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_feature.call(this, fontFeatureIndex, fontFeature)
    end

  end

  @[Extern]
  record IDWriteNumberSubstitutionVtbl,
    query_interface : Proc(IDWriteNumberSubstitution*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteNumberSubstitution*, UInt32),
    release : Proc(IDWriteNumberSubstitution*, UInt32)


  @[Extern]
  #@[Com("14885cc9-bab0-4f90-b6ed-5c366a2cd03d")]
  record IDWriteNumberSubstitution, lpVtbl : IDWriteNumberSubstitutionVtbl* do
    GUID = LibC::GUID.new(0x14885cc9_u32, 0xbab0_u16, 0x4f90_u16, StaticArray[0xb6_u8, 0xed_u8, 0x5c_u8, 0x36_u8, 0x6a_u8, 0x2c_u8, 0xd0_u8, 0x3d_u8])
    def query_interface(this : IDWriteNumberSubstitution*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteNumberSubstitution*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteNumberSubstitution*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end

  end

  @[Extern]
  record IDWriteTextAnalysisSourceVtbl,
    query_interface : Proc(IDWriteTextAnalysisSource*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextAnalysisSource*, UInt32),
    release : Proc(IDWriteTextAnalysisSource*, UInt32),
    get_text_at_position : Proc(IDWriteTextAnalysisSource*, UInt32, UInt16**, UInt32*, Win32cr::Foundation::HRESULT),
    get_text_before_position : Proc(IDWriteTextAnalysisSource*, UInt32, UInt16**, UInt32*, Win32cr::Foundation::HRESULT),
    get_paragraph_reading_direction : Proc(IDWriteTextAnalysisSource*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION),
    get_locale_name : Proc(IDWriteTextAnalysisSource*, UInt32, UInt32*, UInt16**, Win32cr::Foundation::HRESULT),
    get_number_substitution : Proc(IDWriteTextAnalysisSource*, UInt32, UInt32*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("688e1a58-5094-47c8-adc8-fbcea60ae92b")]
  record IDWriteTextAnalysisSource, lpVtbl : IDWriteTextAnalysisSourceVtbl* do
    GUID = LibC::GUID.new(0x688e1a58_u32, 0x5094_u16, 0x47c8_u16, StaticArray[0xad_u8, 0xc8_u8, 0xfb_u8, 0xce_u8, 0xa6_u8, 0xa_u8, 0xe9_u8, 0x2b_u8])
    def query_interface(this : IDWriteTextAnalysisSource*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextAnalysisSource*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextAnalysisSource*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_text_at_position(this : IDWriteTextAnalysisSource*, textPosition : UInt32, textString : UInt16**, textLength : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_text_at_position.call(this, textPosition, textString, textLength)
    end
    def get_text_before_position(this : IDWriteTextAnalysisSource*, textPosition : UInt32, textString : UInt16**, textLength : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_text_before_position.call(this, textPosition, textString, textLength)
    end
    def get_paragraph_reading_direction(this : IDWriteTextAnalysisSource*) : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION
      @lpVtbl.try &.value.get_paragraph_reading_direction.call(this)
    end
    def get_locale_name(this : IDWriteTextAnalysisSource*, textPosition : UInt32, textLength : UInt32*, localeName : UInt16**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name.call(this, textPosition, textLength, localeName)
    end
    def get_number_substitution(this : IDWriteTextAnalysisSource*, textPosition : UInt32, textLength : UInt32*, numberSubstitution : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_number_substitution.call(this, textPosition, textLength, numberSubstitution)
    end

  end

  @[Extern]
  record IDWriteTextAnalysisSinkVtbl,
    query_interface : Proc(IDWriteTextAnalysisSink*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextAnalysisSink*, UInt32),
    release : Proc(IDWriteTextAnalysisSink*, UInt32),
    set_script_analysis : Proc(IDWriteTextAnalysisSink*, UInt32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, Win32cr::Foundation::HRESULT),
    set_line_breakpoints : Proc(IDWriteTextAnalysisSink*, UInt32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_LINE_BREAKPOINT*, Win32cr::Foundation::HRESULT),
    set_bidi_level : Proc(IDWriteTextAnalysisSink*, UInt32, UInt32, UInt8, UInt8, Win32cr::Foundation::HRESULT),
    set_number_substitution : Proc(IDWriteTextAnalysisSink*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("5810cd44-0ca0-4701-b3fa-bec5182ae4f6")]
  record IDWriteTextAnalysisSink, lpVtbl : IDWriteTextAnalysisSinkVtbl* do
    GUID = LibC::GUID.new(0x5810cd44_u32, 0xca0_u16, 0x4701_u16, StaticArray[0xb3_u8, 0xfa_u8, 0xbe_u8, 0xc5_u8, 0x18_u8, 0x2a_u8, 0xe4_u8, 0xf6_u8])
    def query_interface(this : IDWriteTextAnalysisSink*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextAnalysisSink*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextAnalysisSink*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_script_analysis(this : IDWriteTextAnalysisSink*, textPosition : UInt32, textLength : UInt32, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_script_analysis.call(this, textPosition, textLength, scriptAnalysis)
    end
    def set_line_breakpoints(this : IDWriteTextAnalysisSink*, textPosition : UInt32, textLength : UInt32, lineBreakpoints : Win32cr::Graphics::DirectWrite::DWRITE_LINE_BREAKPOINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line_breakpoints.call(this, textPosition, textLength, lineBreakpoints)
    end
    def set_bidi_level(this : IDWriteTextAnalysisSink*, textPosition : UInt32, textLength : UInt32, explicitLevel : UInt8, resolvedLevel : UInt8) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_bidi_level.call(this, textPosition, textLength, explicitLevel, resolvedLevel)
    end
    def set_number_substitution(this : IDWriteTextAnalysisSink*, textPosition : UInt32, textLength : UInt32, numberSubstitution : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_number_substitution.call(this, textPosition, textLength, numberSubstitution)
    end

  end

  @[Extern]
  record IDWriteTextAnalyzerVtbl,
    query_interface : Proc(IDWriteTextAnalyzer*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextAnalyzer*, UInt32),
    release : Proc(IDWriteTextAnalyzer*, UInt32),
    analyze_script : Proc(IDWriteTextAnalyzer*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    analyze_bidi : Proc(IDWriteTextAnalyzer*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    analyze_number_substitution : Proc(IDWriteTextAnalyzer*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    analyze_line_breakpoints : Proc(IDWriteTextAnalyzer*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    get_glyphs : Proc(IDWriteTextAnalyzer*, UInt16*, UInt32, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, UInt32*, UInt32, UInt32, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt32*, Win32cr::Foundation::HRESULT),
    get_glyph_placements : Proc(IDWriteTextAnalyzer*, UInt16*, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, UInt32, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt32, Void*, Float32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, UInt32*, UInt32, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_placements : Proc(IDWriteTextAnalyzer*, UInt16*, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, UInt32, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt32, Void*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, UInt32*, UInt32, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("b7e6163e-7f46-43b4-84b3-e4e6249c365d")]
  record IDWriteTextAnalyzer, lpVtbl : IDWriteTextAnalyzerVtbl* do
    GUID = LibC::GUID.new(0xb7e6163e_u32, 0x7f46_u16, 0x43b4_u16, StaticArray[0x84_u8, 0xb3_u8, 0xe4_u8, 0xe6_u8, 0x24_u8, 0x9c_u8, 0x36_u8, 0x5d_u8])
    def query_interface(this : IDWriteTextAnalyzer*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextAnalyzer*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextAnalyzer*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def analyze_script(this : IDWriteTextAnalyzer*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, analysisSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze_script.call(this, analysisSource, textPosition, textLength, analysisSink)
    end
    def analyze_bidi(this : IDWriteTextAnalyzer*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, analysisSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze_bidi.call(this, analysisSource, textPosition, textLength, analysisSink)
    end
    def analyze_number_substitution(this : IDWriteTextAnalyzer*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, analysisSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze_number_substitution.call(this, analysisSource, textPosition, textLength, analysisSink)
    end
    def analyze_line_breakpoints(this : IDWriteTextAnalyzer*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, analysisSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze_line_breakpoints.call(this, analysisSource, textPosition, textLength, analysisSink)
    end
    def get_glyphs(this : IDWriteTextAnalyzer*, textString : UInt16*, textLength : UInt32, fontFace : Void*, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, localeName : Win32cr::Foundation::PWSTR, numberSubstitution : Void*, features : Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, featureRangeLengths : UInt32*, featureRanges : UInt32, maxGlyphCount : UInt32, clusterMap : UInt16*, textProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, glyphIndices : UInt16*, glyphProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, actualGlyphCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyphs.call(this, textString, textLength, fontFace, isSideways, isRightToLeft, scriptAnalysis, localeName, numberSubstitution, features, featureRangeLengths, featureRanges, maxGlyphCount, clusterMap, textProps, glyphIndices, glyphProps, actualGlyphCount)
    end
    def get_glyph_placements(this : IDWriteTextAnalyzer*, textString : UInt16*, clusterMap : UInt16*, textProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, textLength : UInt32, glyphIndices : UInt16*, glyphProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, glyphCount : UInt32, fontFace : Void*, fontEmSize : Float32, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, localeName : Win32cr::Foundation::PWSTR, features : Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, featureRangeLengths : UInt32*, featureRanges : UInt32, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_placements.call(this, textString, clusterMap, textProps, textLength, glyphIndices, glyphProps, glyphCount, fontFace, fontEmSize, isSideways, isRightToLeft, scriptAnalysis, localeName, features, featureRangeLengths, featureRanges, glyphAdvances, glyphOffsets)
    end
    def get_gdi_compatible_glyph_placements(this : IDWriteTextAnalyzer*, textString : UInt16*, clusterMap : UInt16*, textProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, textLength : UInt32, glyphIndices : UInt16*, glyphProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, glyphCount : UInt32, fontFace : Void*, fontEmSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, localeName : Win32cr::Foundation::PWSTR, features : Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, featureRangeLengths : UInt32*, featureRanges : UInt32, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_placements.call(this, textString, clusterMap, textProps, textLength, glyphIndices, glyphProps, glyphCount, fontFace, fontEmSize, pixelsPerDip, transform, useGdiNatural, isSideways, isRightToLeft, scriptAnalysis, localeName, features, featureRangeLengths, featureRanges, glyphAdvances, glyphOffsets)
    end

  end

  @[Extern]
  record IDWriteInlineObjectVtbl,
    query_interface : Proc(IDWriteInlineObject*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteInlineObject*, UInt32),
    release : Proc(IDWriteInlineObject*, UInt32),
    draw : Proc(IDWriteInlineObject*, Void*, Void*, Float32, Float32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Void*, Win32cr::Foundation::HRESULT),
    get_metrics : Proc(IDWriteInlineObject*, Win32cr::Graphics::DirectWrite::DWRITE_INLINE_OBJECT_METRICS*, Win32cr::Foundation::HRESULT),
    get_overhang_metrics : Proc(IDWriteInlineObject*, Win32cr::Graphics::DirectWrite::DWRITE_OVERHANG_METRICS*, Win32cr::Foundation::HRESULT),
    get_break_conditions : Proc(IDWriteInlineObject*, Win32cr::Graphics::DirectWrite::DWRITE_BREAK_CONDITION*, Win32cr::Graphics::DirectWrite::DWRITE_BREAK_CONDITION*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("8339fde3-106f-47ab-8373-1c6295eb10b3")]
  record IDWriteInlineObject, lpVtbl : IDWriteInlineObjectVtbl* do
    GUID = LibC::GUID.new(0x8339fde3_u32, 0x106f_u16, 0x47ab_u16, StaticArray[0x83_u8, 0x73_u8, 0x1c_u8, 0x62_u8, 0x95_u8, 0xeb_u8, 0x10_u8, 0xb3_u8])
    def query_interface(this : IDWriteInlineObject*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteInlineObject*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteInlineObject*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def draw(this : IDWriteInlineObject*, clientDrawingContext : Void*, renderer : Void*, originX : Float32, originY : Float32, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, clientDrawingEffect : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw.call(this, clientDrawingContext, renderer, originX, originY, isSideways, isRightToLeft, clientDrawingEffect)
    end
    def get_metrics(this : IDWriteInlineObject*, metrics : Win32cr::Graphics::DirectWrite::DWRITE_INLINE_OBJECT_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_metrics.call(this, metrics)
    end
    def get_overhang_metrics(this : IDWriteInlineObject*, overhangs : Win32cr::Graphics::DirectWrite::DWRITE_OVERHANG_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_overhang_metrics.call(this, overhangs)
    end
    def get_break_conditions(this : IDWriteInlineObject*, breakConditionBefore : Win32cr::Graphics::DirectWrite::DWRITE_BREAK_CONDITION*, breakConditionAfter : Win32cr::Graphics::DirectWrite::DWRITE_BREAK_CONDITION*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_break_conditions.call(this, breakConditionBefore, breakConditionAfter)
    end

  end

  @[Extern]
  record IDWritePixelSnappingVtbl,
    query_interface : Proc(IDWritePixelSnapping*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWritePixelSnapping*, UInt32),
    release : Proc(IDWritePixelSnapping*, UInt32),
    is_pixel_snapping_disabled : Proc(IDWritePixelSnapping*, Void*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_current_transform : Proc(IDWritePixelSnapping*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::HRESULT),
    get_pixels_per_dip : Proc(IDWritePixelSnapping*, Void*, Float32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("eaf3a2da-ecf4-4d24-b644-b34f6842024b")]
  record IDWritePixelSnapping, lpVtbl : IDWritePixelSnappingVtbl* do
    GUID = LibC::GUID.new(0xeaf3a2da_u32, 0xecf4_u16, 0x4d24_u16, StaticArray[0xb6_u8, 0x44_u8, 0xb3_u8, 0x4f_u8, 0x68_u8, 0x42_u8, 0x2_u8, 0x4b_u8])
    def query_interface(this : IDWritePixelSnapping*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWritePixelSnapping*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWritePixelSnapping*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def is_pixel_snapping_disabled(this : IDWritePixelSnapping*, clientDrawingContext : Void*, isDisabled : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_pixel_snapping_disabled.call(this, clientDrawingContext, isDisabled)
    end
    def get_current_transform(this : IDWritePixelSnapping*, clientDrawingContext : Void*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_transform.call(this, clientDrawingContext, transform)
    end
    def get_pixels_per_dip(this : IDWritePixelSnapping*, clientDrawingContext : Void*, pixelsPerDip : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_pixels_per_dip.call(this, clientDrawingContext, pixelsPerDip)
    end

  end

  @[Extern]
  record IDWriteTextRendererVtbl,
    query_interface : Proc(IDWriteTextRenderer*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextRenderer*, UInt32),
    release : Proc(IDWriteTextRenderer*, UInt32),
    is_pixel_snapping_disabled : Proc(IDWriteTextRenderer*, Void*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_current_transform : Proc(IDWriteTextRenderer*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::HRESULT),
    get_pixels_per_dip : Proc(IDWriteTextRenderer*, Void*, Float32*, Win32cr::Foundation::HRESULT),
    draw_glyph_run_1 : Proc(IDWriteTextRenderer*, Void*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, Void*, Win32cr::Foundation::HRESULT),
    draw_underline_1 : Proc(IDWriteTextRenderer*, Void*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_UNDERLINE*, Void*, Win32cr::Foundation::HRESULT),
    draw_strikethrough_1 : Proc(IDWriteTextRenderer*, Void*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_STRIKETHROUGH*, Void*, Win32cr::Foundation::HRESULT),
    draw_inline_object_1 : Proc(IDWriteTextRenderer*, Void*, Float32, Float32, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("ef8a8135-5cc6-45fe-8825-c5a0724eb819")]
  record IDWriteTextRenderer, lpVtbl : IDWriteTextRendererVtbl* do
    GUID = LibC::GUID.new(0xef8a8135_u32, 0x5cc6_u16, 0x45fe_u16, StaticArray[0x88_u8, 0x25_u8, 0xc5_u8, 0xa0_u8, 0x72_u8, 0x4e_u8, 0xb8_u8, 0x19_u8])
    def query_interface(this : IDWriteTextRenderer*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextRenderer*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextRenderer*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def is_pixel_snapping_disabled(this : IDWriteTextRenderer*, clientDrawingContext : Void*, isDisabled : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_pixel_snapping_disabled.call(this, clientDrawingContext, isDisabled)
    end
    def get_current_transform(this : IDWriteTextRenderer*, clientDrawingContext : Void*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_transform.call(this, clientDrawingContext, transform)
    end
    def get_pixels_per_dip(this : IDWriteTextRenderer*, clientDrawingContext : Void*, pixelsPerDip : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_pixels_per_dip.call(this, clientDrawingContext, pixelsPerDip)
    end
    def draw_glyph_run_1(this : IDWriteTextRenderer*, clientDrawingContext : Void*, baselineOriginX : Float32, baselineOriginY : Float32, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, glyphRunDescription : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, clientDrawingEffect : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw_glyph_run_1.call(this, clientDrawingContext, baselineOriginX, baselineOriginY, measuringMode, glyphRun, glyphRunDescription, clientDrawingEffect)
    end
    def draw_underline_1(this : IDWriteTextRenderer*, clientDrawingContext : Void*, baselineOriginX : Float32, baselineOriginY : Float32, underline : Win32cr::Graphics::DirectWrite::DWRITE_UNDERLINE*, clientDrawingEffect : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw_underline_1.call(this, clientDrawingContext, baselineOriginX, baselineOriginY, underline, clientDrawingEffect)
    end
    def draw_strikethrough_1(this : IDWriteTextRenderer*, clientDrawingContext : Void*, baselineOriginX : Float32, baselineOriginY : Float32, strikethrough : Win32cr::Graphics::DirectWrite::DWRITE_STRIKETHROUGH*, clientDrawingEffect : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw_strikethrough_1.call(this, clientDrawingContext, baselineOriginX, baselineOriginY, strikethrough, clientDrawingEffect)
    end
    def draw_inline_object_1(this : IDWriteTextRenderer*, clientDrawingContext : Void*, originX : Float32, originY : Float32, inlineObject : Void*, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, clientDrawingEffect : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw_inline_object_1.call(this, clientDrawingContext, originX, originY, inlineObject, isSideways, isRightToLeft, clientDrawingEffect)
    end

  end

  @[Extern]
  record IDWriteTextLayoutVtbl,
    query_interface : Proc(IDWriteTextLayout*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextLayout*, UInt32),
    release : Proc(IDWriteTextLayout*, UInt32),
    set_text_alignment : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_paragraph_alignment : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_word_wrapping : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING, Win32cr::Foundation::HRESULT),
    set_reading_direction : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION, Win32cr::Foundation::HRESULT),
    set_flow_direction : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION, Win32cr::Foundation::HRESULT),
    set_incremental_tab_stop : Proc(IDWriteTextLayout*, Float32, Win32cr::Foundation::HRESULT),
    set_trimming : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void*, Win32cr::Foundation::HRESULT),
    set_line_spacing_1 : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, Float32, Float32, Win32cr::Foundation::HRESULT),
    get_text_alignment : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT),
    get_paragraph_alignment : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT),
    get_word_wrapping : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING),
    get_reading_direction : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION),
    get_flow_direction : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION),
    get_incremental_tab_stop : Proc(IDWriteTextLayout*, Float32),
    get_trimming : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void**, Win32cr::Foundation::HRESULT),
    get_line_spacing_1 : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, Float32*, Float32*, Win32cr::Foundation::HRESULT),
    get_font_collection_1 : Proc(IDWriteTextLayout*, Void**, Win32cr::Foundation::HRESULT),
    get_font_family_name_length_1 : Proc(IDWriteTextLayout*, UInt32),
    get_font_family_name_1 : Proc(IDWriteTextLayout*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_font_weight_1 : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_font_style_1 : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    get_font_stretch_1 : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_font_size_1 : Proc(IDWriteTextLayout*, Float32),
    get_locale_name_length_1 : Proc(IDWriteTextLayout*, UInt32),
    get_locale_name_1 : Proc(IDWriteTextLayout*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    set_max_width : Proc(IDWriteTextLayout*, Float32, Win32cr::Foundation::HRESULT),
    set_max_height : Proc(IDWriteTextLayout*, Float32, Win32cr::Foundation::HRESULT),
    set_font_collection : Proc(IDWriteTextLayout*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_family_name : Proc(IDWriteTextLayout*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_weight : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_style : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_stretch : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_size : Proc(IDWriteTextLayout*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_underline : Proc(IDWriteTextLayout*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_strikethrough : Proc(IDWriteTextLayout*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_drawing_effect : Proc(IDWriteTextLayout*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_inline_object : Proc(IDWriteTextLayout*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_typography : Proc(IDWriteTextLayout*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_locale_name : Proc(IDWriteTextLayout*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    get_max_width : Proc(IDWriteTextLayout*, Float32),
    get_max_height : Proc(IDWriteTextLayout*, Float32),
    get_font_collection_2 : Proc(IDWriteTextLayout*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_family_name_length_2 : Proc(IDWriteTextLayout*, UInt32, UInt32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_family_name_2 : Proc(IDWriteTextLayout*, UInt32, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_weight_2 : Proc(IDWriteTextLayout*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_style_2 : Proc(IDWriteTextLayout*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_stretch_2 : Proc(IDWriteTextLayout*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_size_2 : Proc(IDWriteTextLayout*, UInt32, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_underline : Proc(IDWriteTextLayout*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_strikethrough : Proc(IDWriteTextLayout*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_drawing_effect : Proc(IDWriteTextLayout*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_inline_object : Proc(IDWriteTextLayout*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_typography : Proc(IDWriteTextLayout*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_locale_name_length_2 : Proc(IDWriteTextLayout*, UInt32, UInt32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_locale_name_2 : Proc(IDWriteTextLayout*, UInt32, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    draw : Proc(IDWriteTextLayout*, Void*, Void*, Float32, Float32, Win32cr::Foundation::HRESULT),
    get_line_metrics_1 : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_METRICS*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_metrics_1 : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS*, Win32cr::Foundation::HRESULT),
    get_overhang_metrics : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_OVERHANG_METRICS*, Win32cr::Foundation::HRESULT),
    get_cluster_metrics : Proc(IDWriteTextLayout*, Win32cr::Graphics::DirectWrite::DWRITE_CLUSTER_METRICS*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    determine_min_width : Proc(IDWriteTextLayout*, Float32*, Win32cr::Foundation::HRESULT),
    hit_test_point : Proc(IDWriteTextLayout*, Float32, Float32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, Win32cr::Foundation::HRESULT),
    hit_test_text_position : Proc(IDWriteTextLayout*, UInt32, Win32cr::Foundation::BOOL, Float32*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, Win32cr::Foundation::HRESULT),
    hit_test_text_range : Proc(IDWriteTextLayout*, UInt32, UInt32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, UInt32, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("53737037-6d14-410b-9bfe-0b182bb70961")]
  record IDWriteTextLayout, lpVtbl : IDWriteTextLayoutVtbl* do
    GUID = LibC::GUID.new(0x53737037_u32, 0x6d14_u16, 0x410b_u16, StaticArray[0x9b_u8, 0xfe_u8, 0xb_u8, 0x18_u8, 0x2b_u8, 0xb7_u8, 0x9_u8, 0x61_u8])
    def query_interface(this : IDWriteTextLayout*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextLayout*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextLayout*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_text_alignment(this : IDWriteTextLayout*, textAlignment : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_text_alignment.call(this, textAlignment)
    end
    def set_paragraph_alignment(this : IDWriteTextLayout*, paragraphAlignment : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_paragraph_alignment.call(this, paragraphAlignment)
    end
    def set_word_wrapping(this : IDWriteTextLayout*, wordWrapping : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_word_wrapping.call(this, wordWrapping)
    end
    def set_reading_direction(this : IDWriteTextLayout*, readingDirection : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_reading_direction.call(this, readingDirection)
    end
    def set_flow_direction(this : IDWriteTextLayout*, flowDirection : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flow_direction.call(this, flowDirection)
    end
    def set_incremental_tab_stop(this : IDWriteTextLayout*, incrementalTabStop : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_incremental_tab_stop.call(this, incrementalTabStop)
    end
    def set_trimming(this : IDWriteTextLayout*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def set_line_spacing_1(this : IDWriteTextLayout*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, lineSpacing : Float32, baseline : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_text_alignment(this : IDWriteTextLayout*) : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT
      @lpVtbl.try &.value.get_text_alignment.call(this)
    end
    def get_paragraph_alignment(this : IDWriteTextLayout*) : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT
      @lpVtbl.try &.value.get_paragraph_alignment.call(this)
    end
    def get_word_wrapping(this : IDWriteTextLayout*) : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING
      @lpVtbl.try &.value.get_word_wrapping.call(this)
    end
    def get_reading_direction(this : IDWriteTextLayout*) : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION
      @lpVtbl.try &.value.get_reading_direction.call(this)
    end
    def get_flow_direction(this : IDWriteTextLayout*) : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION
      @lpVtbl.try &.value.get_flow_direction.call(this)
    end
    def get_incremental_tab_stop(this : IDWriteTextLayout*) : Float32
      @lpVtbl.try &.value.get_incremental_tab_stop.call(this)
    end
    def get_trimming(this : IDWriteTextLayout*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def get_line_spacing_1(this : IDWriteTextLayout*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, lineSpacing : Float32*, baseline : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_font_collection_1(this : IDWriteTextLayout*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection_1.call(this, fontCollection)
    end
    def get_font_family_name_length_1(this : IDWriteTextLayout*) : UInt32
      @lpVtbl.try &.value.get_font_family_name_length_1.call(this)
    end
    def get_font_family_name_1(this : IDWriteTextLayout*, fontFamilyName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_1.call(this, fontFamilyName, nameSize)
    end
    def get_font_weight_1(this : IDWriteTextLayout*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_font_weight_1.call(this)
    end
    def get_font_style_1(this : IDWriteTextLayout*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_font_style_1.call(this)
    end
    def get_font_stretch_1(this : IDWriteTextLayout*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_font_stretch_1.call(this)
    end
    def get_font_size_1(this : IDWriteTextLayout*) : Float32
      @lpVtbl.try &.value.get_font_size_1.call(this)
    end
    def get_locale_name_length_1(this : IDWriteTextLayout*) : UInt32
      @lpVtbl.try &.value.get_locale_name_length_1.call(this)
    end
    def get_locale_name_1(this : IDWriteTextLayout*, localeName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_1.call(this, localeName, nameSize)
    end
    def set_max_width(this : IDWriteTextLayout*, maxWidth : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_max_width.call(this, maxWidth)
    end
    def set_max_height(this : IDWriteTextLayout*, maxHeight : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_max_height.call(this, maxHeight)
    end
    def set_font_collection(this : IDWriteTextLayout*, fontCollection : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_collection.call(this, fontCollection, textRange)
    end
    def set_font_family_name(this : IDWriteTextLayout*, fontFamilyName : Win32cr::Foundation::PWSTR, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_family_name.call(this, fontFamilyName, textRange)
    end
    def set_font_weight(this : IDWriteTextLayout*, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_weight.call(this, fontWeight, textRange)
    end
    def set_font_style(this : IDWriteTextLayout*, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_style.call(this, fontStyle, textRange)
    end
    def set_font_stretch(this : IDWriteTextLayout*, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_stretch.call(this, fontStretch, textRange)
    end
    def set_font_size(this : IDWriteTextLayout*, fontSize : Float32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_size.call(this, fontSize, textRange)
    end
    def set_underline(this : IDWriteTextLayout*, hasUnderline : Win32cr::Foundation::BOOL, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_underline.call(this, hasUnderline, textRange)
    end
    def set_strikethrough(this : IDWriteTextLayout*, hasStrikethrough : Win32cr::Foundation::BOOL, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_strikethrough.call(this, hasStrikethrough, textRange)
    end
    def set_drawing_effect(this : IDWriteTextLayout*, drawingEffect : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_drawing_effect.call(this, drawingEffect, textRange)
    end
    def set_inline_object(this : IDWriteTextLayout*, inlineObject : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_inline_object.call(this, inlineObject, textRange)
    end
    def set_typography(this : IDWriteTextLayout*, typography : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_typography.call(this, typography, textRange)
    end
    def set_locale_name(this : IDWriteTextLayout*, localeName : Win32cr::Foundation::PWSTR, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_locale_name.call(this, localeName, textRange)
    end
    def get_max_width(this : IDWriteTextLayout*) : Float32
      @lpVtbl.try &.value.get_max_width.call(this)
    end
    def get_max_height(this : IDWriteTextLayout*) : Float32
      @lpVtbl.try &.value.get_max_height.call(this)
    end
    def get_font_collection_2(this : IDWriteTextLayout*, currentPosition : UInt32, fontCollection : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection_2.call(this, currentPosition, fontCollection, textRange)
    end
    def get_font_family_name_length_2(this : IDWriteTextLayout*, currentPosition : UInt32, nameLength : UInt32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_length_2.call(this, currentPosition, nameLength, textRange)
    end
    def get_font_family_name_2(this : IDWriteTextLayout*, currentPosition : UInt32, fontFamilyName : UInt16*, nameSize : UInt32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_2.call(this, currentPosition, fontFamilyName, nameSize, textRange)
    end
    def get_font_weight_2(this : IDWriteTextLayout*, currentPosition : UInt32, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_weight_2.call(this, currentPosition, fontWeight, textRange)
    end
    def get_font_style_2(this : IDWriteTextLayout*, currentPosition : UInt32, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_style_2.call(this, currentPosition, fontStyle, textRange)
    end
    def get_font_stretch_2(this : IDWriteTextLayout*, currentPosition : UInt32, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_stretch_2.call(this, currentPosition, fontStretch, textRange)
    end
    def get_font_size_2(this : IDWriteTextLayout*, currentPosition : UInt32, fontSize : Float32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_size_2.call(this, currentPosition, fontSize, textRange)
    end
    def get_underline(this : IDWriteTextLayout*, currentPosition : UInt32, hasUnderline : Win32cr::Foundation::BOOL*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_underline.call(this, currentPosition, hasUnderline, textRange)
    end
    def get_strikethrough(this : IDWriteTextLayout*, currentPosition : UInt32, hasStrikethrough : Win32cr::Foundation::BOOL*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_strikethrough.call(this, currentPosition, hasStrikethrough, textRange)
    end
    def get_drawing_effect(this : IDWriteTextLayout*, currentPosition : UInt32, drawingEffect : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_drawing_effect.call(this, currentPosition, drawingEffect, textRange)
    end
    def get_inline_object(this : IDWriteTextLayout*, currentPosition : UInt32, inlineObject : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_inline_object.call(this, currentPosition, inlineObject, textRange)
    end
    def get_typography(this : IDWriteTextLayout*, currentPosition : UInt32, typography : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_typography.call(this, currentPosition, typography, textRange)
    end
    def get_locale_name_length_2(this : IDWriteTextLayout*, currentPosition : UInt32, nameLength : UInt32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_length_2.call(this, currentPosition, nameLength, textRange)
    end
    def get_locale_name_2(this : IDWriteTextLayout*, currentPosition : UInt32, localeName : UInt16*, nameSize : UInt32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_2.call(this, currentPosition, localeName, nameSize, textRange)
    end
    def draw(this : IDWriteTextLayout*, clientDrawingContext : Void*, renderer : Void*, originX : Float32, originY : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw.call(this, clientDrawingContext, renderer, originX, originY)
    end
    def get_line_metrics_1(this : IDWriteTextLayout*, lineMetrics : Win32cr::Graphics::DirectWrite::DWRITE_LINE_METRICS*, maxLineCount : UInt32, actualLineCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_metrics_1.call(this, lineMetrics, maxLineCount, actualLineCount)
    end
    def get_metrics_1(this : IDWriteTextLayout*, textMetrics : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_metrics_1.call(this, textMetrics)
    end
    def get_overhang_metrics(this : IDWriteTextLayout*, overhangs : Win32cr::Graphics::DirectWrite::DWRITE_OVERHANG_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_overhang_metrics.call(this, overhangs)
    end
    def get_cluster_metrics(this : IDWriteTextLayout*, clusterMetrics : Win32cr::Graphics::DirectWrite::DWRITE_CLUSTER_METRICS*, maxClusterCount : UInt32, actualClusterCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cluster_metrics.call(this, clusterMetrics, maxClusterCount, actualClusterCount)
    end
    def determine_min_width(this : IDWriteTextLayout*, minWidth : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.determine_min_width.call(this, minWidth)
    end
    def hit_test_point(this : IDWriteTextLayout*, pointX : Float32, pointY : Float32, isTrailingHit : Win32cr::Foundation::BOOL*, isInside : Win32cr::Foundation::BOOL*, hitTestMetrics : Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test_point.call(this, pointX, pointY, isTrailingHit, isInside, hitTestMetrics)
    end
    def hit_test_text_position(this : IDWriteTextLayout*, textPosition : UInt32, isTrailingHit : Win32cr::Foundation::BOOL, pointX : Float32*, pointY : Float32*, hitTestMetrics : Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test_text_position.call(this, textPosition, isTrailingHit, pointX, pointY, hitTestMetrics)
    end
    def hit_test_text_range(this : IDWriteTextLayout*, textPosition : UInt32, textLength : UInt32, originX : Float32, originY : Float32, hitTestMetrics : Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, maxHitTestMetricsCount : UInt32, actualHitTestMetricsCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test_text_range.call(this, textPosition, textLength, originX, originY, hitTestMetrics, maxHitTestMetricsCount, actualHitTestMetricsCount)
    end

  end

  @[Extern]
  record IDWriteBitmapRenderTargetVtbl,
    query_interface : Proc(IDWriteBitmapRenderTarget*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteBitmapRenderTarget*, UInt32),
    release : Proc(IDWriteBitmapRenderTarget*, UInt32),
    draw_glyph_run : Proc(IDWriteBitmapRenderTarget*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Void*, UInt32, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    get_memory_dc : Proc(IDWriteBitmapRenderTarget*, Win32cr::Graphics::Gdi::HDC),
    get_pixels_per_dip : Proc(IDWriteBitmapRenderTarget*, Float32),
    set_pixels_per_dip : Proc(IDWriteBitmapRenderTarget*, Float32, Win32cr::Foundation::HRESULT),
    get_current_transform : Proc(IDWriteBitmapRenderTarget*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::HRESULT),
    set_current_transform : Proc(IDWriteBitmapRenderTarget*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::HRESULT),
    get_size : Proc(IDWriteBitmapRenderTarget*, Win32cr::Foundation::SIZE*, Win32cr::Foundation::HRESULT),
    resize : Proc(IDWriteBitmapRenderTarget*, UInt32, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("5e5a32a3-8dff-4773-9ff6-0696eab77267")]
  record IDWriteBitmapRenderTarget, lpVtbl : IDWriteBitmapRenderTargetVtbl* do
    GUID = LibC::GUID.new(0x5e5a32a3_u32, 0x8dff_u16, 0x4773_u16, StaticArray[0x9f_u8, 0xf6_u8, 0x6_u8, 0x96_u8, 0xea_u8, 0xb7_u8, 0x72_u8, 0x67_u8])
    def query_interface(this : IDWriteBitmapRenderTarget*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteBitmapRenderTarget*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteBitmapRenderTarget*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def draw_glyph_run(this : IDWriteBitmapRenderTarget*, baselineOriginX : Float32, baselineOriginY : Float32, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, renderingParams : Void*, textColor : UInt32, blackBoxRect : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw_glyph_run.call(this, baselineOriginX, baselineOriginY, measuringMode, glyphRun, renderingParams, textColor, blackBoxRect)
    end
    def get_memory_dc(this : IDWriteBitmapRenderTarget*) : Win32cr::Graphics::Gdi::HDC
      @lpVtbl.try &.value.get_memory_dc.call(this)
    end
    def get_pixels_per_dip(this : IDWriteBitmapRenderTarget*) : Float32
      @lpVtbl.try &.value.get_pixels_per_dip.call(this)
    end
    def set_pixels_per_dip(this : IDWriteBitmapRenderTarget*, pixelsPerDip : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_pixels_per_dip.call(this, pixelsPerDip)
    end
    def get_current_transform(this : IDWriteBitmapRenderTarget*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_transform.call(this, transform)
    end
    def set_current_transform(this : IDWriteBitmapRenderTarget*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_current_transform.call(this, transform)
    end
    def get_size(this : IDWriteBitmapRenderTarget*, size : Win32cr::Foundation::SIZE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_size.call(this, size)
    end
    def resize(this : IDWriteBitmapRenderTarget*, width : UInt32, height : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resize.call(this, width, height)
    end

  end

  @[Extern]
  record IDWriteGdiInteropVtbl,
    query_interface : Proc(IDWriteGdiInterop*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteGdiInterop*, UInt32),
    release : Proc(IDWriteGdiInterop*, UInt32),
    create_font_from_logfont_1 : Proc(IDWriteGdiInterop*, Win32cr::Graphics::Gdi::LOGFONTW*, Void**, Win32cr::Foundation::HRESULT),
    convert_font_to_logfont : Proc(IDWriteGdiInterop*, Void*, Win32cr::Graphics::Gdi::LOGFONTW*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    convert_font_face_to_logfont : Proc(IDWriteGdiInterop*, Void*, Win32cr::Graphics::Gdi::LOGFONTW*, Win32cr::Foundation::HRESULT),
    create_font_face_from_hdc : Proc(IDWriteGdiInterop*, Win32cr::Graphics::Gdi::HDC, Void**, Win32cr::Foundation::HRESULT),
    create_bitmap_render_target : Proc(IDWriteGdiInterop*, Win32cr::Graphics::Gdi::HDC, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("1edd9491-9853-4299-898f-6432983b6f3a")]
  record IDWriteGdiInterop, lpVtbl : IDWriteGdiInteropVtbl* do
    GUID = LibC::GUID.new(0x1edd9491_u32, 0x9853_u16, 0x4299_u16, StaticArray[0x89_u8, 0x8f_u8, 0x64_u8, 0x32_u8, 0x98_u8, 0x3b_u8, 0x6f_u8, 0x3a_u8])
    def query_interface(this : IDWriteGdiInterop*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteGdiInterop*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteGdiInterop*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_font_from_logfont_1(this : IDWriteGdiInterop*, logFont : Win32cr::Graphics::Gdi::LOGFONTW*, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_from_logfont_1.call(this, logFont, font)
    end
    def convert_font_to_logfont(this : IDWriteGdiInterop*, font : Void*, logFont : Win32cr::Graphics::Gdi::LOGFONTW*, isSystemFont : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.convert_font_to_logfont.call(this, font, logFont, isSystemFont)
    end
    def convert_font_face_to_logfont(this : IDWriteGdiInterop*, font : Void*, logFont : Win32cr::Graphics::Gdi::LOGFONTW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.convert_font_face_to_logfont.call(this, font, logFont)
    end
    def create_font_face_from_hdc(this : IDWriteGdiInterop*, hdc : Win32cr::Graphics::Gdi::HDC, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_from_hdc.call(this, hdc, fontFace)
    end
    def create_bitmap_render_target(this : IDWriteGdiInterop*, hdc : Win32cr::Graphics::Gdi::HDC, width : UInt32, height : UInt32, renderTarget : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_bitmap_render_target.call(this, hdc, width, height, renderTarget)
    end

  end

  @[Extern]
  record IDWriteGlyphRunAnalysisVtbl,
    query_interface : Proc(IDWriteGlyphRunAnalysis*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteGlyphRunAnalysis*, UInt32),
    release : Proc(IDWriteGlyphRunAnalysis*, UInt32),
    get_alpha_texture_bounds : Proc(IDWriteGlyphRunAnalysis*, Win32cr::Graphics::DirectWrite::DWRITE_TEXTURE_TYPE, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    create_alpha_texture : Proc(IDWriteGlyphRunAnalysis*, Win32cr::Graphics::DirectWrite::DWRITE_TEXTURE_TYPE, Win32cr::Foundation::RECT*, UInt8*, UInt32, Win32cr::Foundation::HRESULT),
    get_alpha_blend_params : Proc(IDWriteGlyphRunAnalysis*, Void*, Float32*, Float32*, Float32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("7d97dbf7-e085-42d4-81e3-6a883bded118")]
  record IDWriteGlyphRunAnalysis, lpVtbl : IDWriteGlyphRunAnalysisVtbl* do
    GUID = LibC::GUID.new(0x7d97dbf7_u32, 0xe085_u16, 0x42d4_u16, StaticArray[0x81_u8, 0xe3_u8, 0x6a_u8, 0x88_u8, 0x3b_u8, 0xde_u8, 0xd1_u8, 0x18_u8])
    def query_interface(this : IDWriteGlyphRunAnalysis*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteGlyphRunAnalysis*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteGlyphRunAnalysis*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_alpha_texture_bounds(this : IDWriteGlyphRunAnalysis*, textureType : Win32cr::Graphics::DirectWrite::DWRITE_TEXTURE_TYPE, textureBounds : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_alpha_texture_bounds.call(this, textureType, textureBounds)
    end
    def create_alpha_texture(this : IDWriteGlyphRunAnalysis*, textureType : Win32cr::Graphics::DirectWrite::DWRITE_TEXTURE_TYPE, textureBounds : Win32cr::Foundation::RECT*, alphaValues : UInt8*, bufferSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_alpha_texture.call(this, textureType, textureBounds, alphaValues, bufferSize)
    end
    def get_alpha_blend_params(this : IDWriteGlyphRunAnalysis*, renderingParams : Void*, blendGamma : Float32*, blendEnhancedContrast : Float32*, blendClearTypeLevel : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_alpha_blend_params.call(this, renderingParams, blendGamma, blendEnhancedContrast, blendClearTypeLevel)
    end

  end

  @[Extern]
  record IDWriteFactoryVtbl,
    query_interface : Proc(IDWriteFactory*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFactory*, UInt32),
    release : Proc(IDWriteFactory*, UInt32),
    get_system_font_collection_1 : Proc(IDWriteFactory*, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_custom_font_collection : Proc(IDWriteFactory*, Void*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    register_font_collection_loader : Proc(IDWriteFactory*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_collection_loader : Proc(IDWriteFactory*, Void*, Win32cr::Foundation::HRESULT),
    create_font_file_reference : Proc(IDWriteFactory*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::FILETIME*, Void**, Win32cr::Foundation::HRESULT),
    create_custom_font_file_reference : Proc(IDWriteFactory*, Void*, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_font_face : Proc(IDWriteFactory*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, UInt32, Void**, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    create_rendering_params : Proc(IDWriteFactory*, Void**, Win32cr::Foundation::HRESULT),
    create_monitor_rendering_params : Proc(IDWriteFactory*, Win32cr::Graphics::Gdi::HMONITOR, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_1_1 : Proc(IDWriteFactory*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Void**, Win32cr::Foundation::HRESULT),
    register_font_file_loader : Proc(IDWriteFactory*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_file_loader : Proc(IDWriteFactory*, Void*, Win32cr::Foundation::HRESULT),
    create_text_format_1 : Proc(IDWriteFactory*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Float32, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    create_typography : Proc(IDWriteFactory*, Void**, Win32cr::Foundation::HRESULT),
    get_gdi_interop : Proc(IDWriteFactory*, Void**, Win32cr::Foundation::HRESULT),
    create_text_layout : Proc(IDWriteFactory*, UInt16*, UInt32, Void*, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_gdi_compatible_text_layout : Proc(IDWriteFactory*, UInt16*, UInt32, Void*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_ellipsis_trimming_sign : Proc(IDWriteFactory*, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_text_analyzer : Proc(IDWriteFactory*, Void**, Win32cr::Foundation::HRESULT),
    create_number_substitution : Proc(IDWriteFactory*, Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis_1 : Proc(IDWriteFactory*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("b859ee5a-d838-4b5b-a2e8-1adc7d93db48")]
  record IDWriteFactory, lpVtbl : IDWriteFactoryVtbl* do
    GUID = LibC::GUID.new(0xb859ee5a_u32, 0xd838_u16, 0x4b5b_u16, StaticArray[0xa2_u8, 0xe8_u8, 0x1a_u8, 0xdc_u8, 0x7d_u8, 0x93_u8, 0xdb_u8, 0x48_u8])
    def query_interface(this : IDWriteFactory*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFactory*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFactory*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_system_font_collection_1(this : IDWriteFactory*, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_1.call(this, fontCollection, checkForUpdates)
    end
    def create_custom_font_collection(this : IDWriteFactory*, collectionLoader : Void*, collectionKey : Void*, collectionKeySize : UInt32, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_collection.call(this, collectionLoader, collectionKey, collectionKeySize, fontCollection)
    end
    def register_font_collection_loader(this : IDWriteFactory*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_collection_loader.call(this, fontCollectionLoader)
    end
    def unregister_font_collection_loader(this : IDWriteFactory*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_collection_loader.call(this, fontCollectionLoader)
    end
    def create_font_file_reference(this : IDWriteFactory*, filePath : Win32cr::Foundation::PWSTR, lastWriteTime : Win32cr::Foundation::FILETIME*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_file_reference.call(this, filePath, lastWriteTime, fontFile)
    end
    def create_custom_font_file_reference(this : IDWriteFactory*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, fontFileLoader : Void*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_file_reference.call(this, fontFileReferenceKey, fontFileReferenceKeySize, fontFileLoader, fontFile)
    end
    def create_font_face(this : IDWriteFactory*, fontFaceType : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, numberOfFiles : UInt32, fontFiles : Void**, faceIndex : UInt32, fontFaceSimulationFlags : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face.call(this, fontFaceType, numberOfFiles, fontFiles, faceIndex, fontFaceSimulationFlags, fontFace)
    end
    def create_rendering_params(this : IDWriteFactory*, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rendering_params.call(this, renderingParams)
    end
    def create_monitor_rendering_params(this : IDWriteFactory*, monitor : Win32cr::Graphics::Gdi::HMONITOR, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_monitor_rendering_params.call(this, monitor, renderingParams)
    end
    def create_custom_rendering_params_1_1(this : IDWriteFactory*, gamma : Float32, enhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_1_1.call(this, gamma, enhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, renderingParams)
    end
    def register_font_file_loader(this : IDWriteFactory*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_file_loader.call(this, fontFileLoader)
    end
    def unregister_font_file_loader(this : IDWriteFactory*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_file_loader.call(this, fontFileLoader)
    end
    def create_text_format_1(this : IDWriteFactory*, fontFamilyName : Win32cr::Foundation::PWSTR, fontCollection : Void*, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, fontSize : Float32, localeName : Win32cr::Foundation::PWSTR, textFormat : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_format_1.call(this, fontFamilyName, fontCollection, fontWeight, fontStyle, fontStretch, fontSize, localeName, textFormat)
    end
    def create_typography(this : IDWriteFactory*, typography : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_typography.call(this, typography)
    end
    def get_gdi_interop(this : IDWriteFactory*, gdiInterop : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_interop.call(this, gdiInterop)
    end
    def create_text_layout(this : IDWriteFactory*, string : UInt16*, stringLength : UInt32, textFormat : Void*, maxWidth : Float32, maxHeight : Float32, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_layout.call(this, string, stringLength, textFormat, maxWidth, maxHeight, textLayout)
    end
    def create_gdi_compatible_text_layout(this : IDWriteFactory*, string : UInt16*, stringLength : UInt32, textFormat : Void*, layoutWidth : Float32, layoutHeight : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_gdi_compatible_text_layout.call(this, string, stringLength, textFormat, layoutWidth, layoutHeight, pixelsPerDip, transform, useGdiNatural, textLayout)
    end
    def create_ellipsis_trimming_sign(this : IDWriteFactory*, textFormat : Void*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_ellipsis_trimming_sign.call(this, textFormat, trimmingSign)
    end
    def create_text_analyzer(this : IDWriteFactory*, textAnalyzer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_analyzer.call(this, textAnalyzer)
    end
    def create_number_substitution(this : IDWriteFactory*, substitutionMethod : Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, localeName : Win32cr::Foundation::PWSTR, ignoreUserOverride : Win32cr::Foundation::BOOL, numberSubstitution : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_number_substitution.call(this, substitutionMethod, localeName, ignoreUserOverride, numberSubstitution)
    end
    def create_glyph_run_analysis_1(this : IDWriteFactory*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis_1.call(this, glyphRun, pixelsPerDip, transform, renderingMode, measuringMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end

  end

  @[Extern]
  record IDWriteFactory1Vtbl,
    query_interface : Proc(IDWriteFactory1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFactory1*, UInt32),
    release : Proc(IDWriteFactory1*, UInt32),
    get_system_font_collection_1 : Proc(IDWriteFactory1*, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_custom_font_collection : Proc(IDWriteFactory1*, Void*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    register_font_collection_loader : Proc(IDWriteFactory1*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_collection_loader : Proc(IDWriteFactory1*, Void*, Win32cr::Foundation::HRESULT),
    create_font_file_reference : Proc(IDWriteFactory1*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::FILETIME*, Void**, Win32cr::Foundation::HRESULT),
    create_custom_font_file_reference : Proc(IDWriteFactory1*, Void*, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_font_face : Proc(IDWriteFactory1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, UInt32, Void**, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    create_rendering_params : Proc(IDWriteFactory1*, Void**, Win32cr::Foundation::HRESULT),
    create_monitor_rendering_params : Proc(IDWriteFactory1*, Win32cr::Graphics::Gdi::HMONITOR, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_1_1 : Proc(IDWriteFactory1*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Void**, Win32cr::Foundation::HRESULT),
    register_font_file_loader : Proc(IDWriteFactory1*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_file_loader : Proc(IDWriteFactory1*, Void*, Win32cr::Foundation::HRESULT),
    create_text_format_1 : Proc(IDWriteFactory1*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Float32, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    create_typography : Proc(IDWriteFactory1*, Void**, Win32cr::Foundation::HRESULT),
    get_gdi_interop : Proc(IDWriteFactory1*, Void**, Win32cr::Foundation::HRESULT),
    create_text_layout : Proc(IDWriteFactory1*, UInt16*, UInt32, Void*, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_gdi_compatible_text_layout : Proc(IDWriteFactory1*, UInt16*, UInt32, Void*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_ellipsis_trimming_sign : Proc(IDWriteFactory1*, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_text_analyzer : Proc(IDWriteFactory1*, Void**, Win32cr::Foundation::HRESULT),
    create_number_substitution : Proc(IDWriteFactory1*, Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis_1 : Proc(IDWriteFactory1*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    get_eudc_font_collection : Proc(IDWriteFactory1*, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_2_1 : Proc(IDWriteFactory1*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("30572f99-dac6-41db-a16e-0486307e606a")]
  record IDWriteFactory1, lpVtbl : IDWriteFactory1Vtbl* do
    GUID = LibC::GUID.new(0x30572f99_u32, 0xdac6_u16, 0x41db_u16, StaticArray[0xa1_u8, 0x6e_u8, 0x4_u8, 0x86_u8, 0x30_u8, 0x7e_u8, 0x60_u8, 0x6a_u8])
    def query_interface(this : IDWriteFactory1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFactory1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFactory1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_system_font_collection_1(this : IDWriteFactory1*, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_1.call(this, fontCollection, checkForUpdates)
    end
    def create_custom_font_collection(this : IDWriteFactory1*, collectionLoader : Void*, collectionKey : Void*, collectionKeySize : UInt32, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_collection.call(this, collectionLoader, collectionKey, collectionKeySize, fontCollection)
    end
    def register_font_collection_loader(this : IDWriteFactory1*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_collection_loader.call(this, fontCollectionLoader)
    end
    def unregister_font_collection_loader(this : IDWriteFactory1*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_collection_loader.call(this, fontCollectionLoader)
    end
    def create_font_file_reference(this : IDWriteFactory1*, filePath : Win32cr::Foundation::PWSTR, lastWriteTime : Win32cr::Foundation::FILETIME*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_file_reference.call(this, filePath, lastWriteTime, fontFile)
    end
    def create_custom_font_file_reference(this : IDWriteFactory1*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, fontFileLoader : Void*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_file_reference.call(this, fontFileReferenceKey, fontFileReferenceKeySize, fontFileLoader, fontFile)
    end
    def create_font_face(this : IDWriteFactory1*, fontFaceType : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, numberOfFiles : UInt32, fontFiles : Void**, faceIndex : UInt32, fontFaceSimulationFlags : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face.call(this, fontFaceType, numberOfFiles, fontFiles, faceIndex, fontFaceSimulationFlags, fontFace)
    end
    def create_rendering_params(this : IDWriteFactory1*, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rendering_params.call(this, renderingParams)
    end
    def create_monitor_rendering_params(this : IDWriteFactory1*, monitor : Win32cr::Graphics::Gdi::HMONITOR, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_monitor_rendering_params.call(this, monitor, renderingParams)
    end
    def create_custom_rendering_params_1_1(this : IDWriteFactory1*, gamma : Float32, enhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_1_1.call(this, gamma, enhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, renderingParams)
    end
    def register_font_file_loader(this : IDWriteFactory1*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_file_loader.call(this, fontFileLoader)
    end
    def unregister_font_file_loader(this : IDWriteFactory1*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_file_loader.call(this, fontFileLoader)
    end
    def create_text_format_1(this : IDWriteFactory1*, fontFamilyName : Win32cr::Foundation::PWSTR, fontCollection : Void*, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, fontSize : Float32, localeName : Win32cr::Foundation::PWSTR, textFormat : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_format_1.call(this, fontFamilyName, fontCollection, fontWeight, fontStyle, fontStretch, fontSize, localeName, textFormat)
    end
    def create_typography(this : IDWriteFactory1*, typography : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_typography.call(this, typography)
    end
    def get_gdi_interop(this : IDWriteFactory1*, gdiInterop : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_interop.call(this, gdiInterop)
    end
    def create_text_layout(this : IDWriteFactory1*, string : UInt16*, stringLength : UInt32, textFormat : Void*, maxWidth : Float32, maxHeight : Float32, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_layout.call(this, string, stringLength, textFormat, maxWidth, maxHeight, textLayout)
    end
    def create_gdi_compatible_text_layout(this : IDWriteFactory1*, string : UInt16*, stringLength : UInt32, textFormat : Void*, layoutWidth : Float32, layoutHeight : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_gdi_compatible_text_layout.call(this, string, stringLength, textFormat, layoutWidth, layoutHeight, pixelsPerDip, transform, useGdiNatural, textLayout)
    end
    def create_ellipsis_trimming_sign(this : IDWriteFactory1*, textFormat : Void*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_ellipsis_trimming_sign.call(this, textFormat, trimmingSign)
    end
    def create_text_analyzer(this : IDWriteFactory1*, textAnalyzer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_analyzer.call(this, textAnalyzer)
    end
    def create_number_substitution(this : IDWriteFactory1*, substitutionMethod : Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, localeName : Win32cr::Foundation::PWSTR, ignoreUserOverride : Win32cr::Foundation::BOOL, numberSubstitution : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_number_substitution.call(this, substitutionMethod, localeName, ignoreUserOverride, numberSubstitution)
    end
    def create_glyph_run_analysis_1(this : IDWriteFactory1*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis_1.call(this, glyphRun, pixelsPerDip, transform, renderingMode, measuringMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def get_eudc_font_collection(this : IDWriteFactory1*, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_eudc_font_collection.call(this, fontCollection, checkForUpdates)
    end
    def create_custom_rendering_params_2_1(this : IDWriteFactory1*, gamma : Float32, enhancedContrast : Float32, enhancedContrastGrayscale : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_2_1.call(this, gamma, enhancedContrast, enhancedContrastGrayscale, clearTypeLevel, pixelGeometry, renderingMode, renderingParams)
    end

  end

  @[Extern]
  record IDWriteFontFace1Vtbl,
    query_interface : Proc(IDWriteFontFace1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFace1*, UInt32),
    release : Proc(IDWriteFontFace1*, UInt32),
    get_type : Proc(IDWriteFontFace1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE),
    get_files : Proc(IDWriteFontFace1*, UInt32*, Void**, Win32cr::Foundation::HRESULT),
    get_index : Proc(IDWriteFontFace1*, UInt32),
    get_simulations : Proc(IDWriteFontFace1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS),
    is_symbol_font : Proc(IDWriteFontFace1*, Win32cr::Foundation::BOOL),
    get_metrics_1 : Proc(IDWriteFontFace1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Void),
    get_glyph_count : Proc(IDWriteFontFace1*, UInt16),
    get_design_glyph_metrics : Proc(IDWriteFontFace1*, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_glyph_indices : Proc(IDWriteFontFace1*, UInt32*, UInt32, UInt16*, Win32cr::Foundation::HRESULT),
    try_get_font_table : Proc(IDWriteFontFace1*, UInt32, Void**, UInt32*, Void**, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    release_font_table : Proc(IDWriteFontFace1*, Void*, Void),
    get_glyph_run_outline : Proc(IDWriteFontFace1*, Float32, UInt16*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Void*, Win32cr::Foundation::HRESULT),
    get_recommended_rendering_mode_1_1 : Proc(IDWriteFontFace1*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_metrics_1 : Proc(IDWriteFontFace1*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_metrics : Proc(IDWriteFontFace1*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_metrics_2 : Proc(IDWriteFontFace1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*, Void),
    get_gdi_compatible_metrics_2 : Proc(IDWriteFontFace1*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*, Win32cr::Foundation::HRESULT),
    get_caret_metrics : Proc(IDWriteFontFace1*, Win32cr::Graphics::DirectWrite::DWRITE_CARET_METRICS*, Void),
    get_unicode_ranges : Proc(IDWriteFontFace1*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, UInt32*, Win32cr::Foundation::HRESULT),
    is_monospaced_font : Proc(IDWriteFontFace1*, Win32cr::Foundation::BOOL),
    get_design_glyph_advances : Proc(IDWriteFontFace1*, UInt32, UInt16*, Int32*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_advances : Proc(IDWriteFontFace1*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, UInt32, UInt16*, Int32*, Win32cr::Foundation::HRESULT),
    get_kerning_pair_adjustments : Proc(IDWriteFontFace1*, UInt32, UInt16*, Int32*, Win32cr::Foundation::HRESULT),
    has_kerning_pairs : Proc(IDWriteFontFace1*, Win32cr::Foundation::BOOL),
    get_recommended_rendering_mode_2_1 : Proc(IDWriteFontFace1*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Foundation::HRESULT),
    get_vertical_glyph_variants : Proc(IDWriteFontFace1*, UInt32, UInt16*, UInt16*, Win32cr::Foundation::HRESULT),
    has_vertical_glyph_variants : Proc(IDWriteFontFace1*, Win32cr::Foundation::BOOL)


  @[Extern]
  #@[Com("a71efdb4-9fdb-4838-ad90-cfc3be8c3daf")]
  record IDWriteFontFace1, lpVtbl : IDWriteFontFace1Vtbl* do
    GUID = LibC::GUID.new(0xa71efdb4_u32, 0x9fdb_u16, 0x4838_u16, StaticArray[0xad_u8, 0x90_u8, 0xcf_u8, 0xc3_u8, 0xbe_u8, 0x8c_u8, 0x3d_u8, 0xaf_u8])
    def query_interface(this : IDWriteFontFace1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFace1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFace1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type(this : IDWriteFontFace1*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE
      @lpVtbl.try &.value.get_type.call(this)
    end
    def get_files(this : IDWriteFontFace1*, numberOfFiles : UInt32*, fontFiles : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_files.call(this, numberOfFiles, fontFiles)
    end
    def get_index(this : IDWriteFontFace1*) : UInt32
      @lpVtbl.try &.value.get_index.call(this)
    end
    def get_simulations(this : IDWriteFontFace1*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS
      @lpVtbl.try &.value.get_simulations.call(this)
    end
    def is_symbol_font(this : IDWriteFontFace1*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_symbol_font.call(this)
    end
    def get_metrics_1(this : IDWriteFontFace1*, fontFaceMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Void
      @lpVtbl.try &.value.get_metrics_1.call(this, fontFaceMetrics)
    end
    def get_glyph_count(this : IDWriteFontFace1*) : UInt16
      @lpVtbl.try &.value.get_glyph_count.call(this)
    end
    def get_design_glyph_metrics(this : IDWriteFontFace1*, glyphIndices : UInt16*, glyphCount : UInt32, glyphMetrics : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_design_glyph_metrics.call(this, glyphIndices, glyphCount, glyphMetrics, isSideways)
    end
    def get_glyph_indices(this : IDWriteFontFace1*, codePoints : UInt32*, codePointCount : UInt32, glyphIndices : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_indices.call(this, codePoints, codePointCount, glyphIndices)
    end
    def try_get_font_table(this : IDWriteFontFace1*, openTypeTableTag : UInt32, tableData : Void**, tableSize : UInt32*, tableContext : Void**, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.try_get_font_table.call(this, openTypeTableTag, tableData, tableSize, tableContext, exists)
    end
    def release_font_table(this : IDWriteFontFace1*, tableContext : Void*) : Void
      @lpVtbl.try &.value.release_font_table.call(this, tableContext)
    end
    def get_glyph_run_outline(this : IDWriteFontFace1*, emSize : Float32, glyphIndices : UInt16*, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, glyphCount : UInt32, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, geometrySink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_run_outline.call(this, emSize, glyphIndices, glyphAdvances, glyphOffsets, glyphCount, isSideways, isRightToLeft, geometrySink)
    end
    def get_recommended_rendering_mode_1_1(this : IDWriteFontFace1*, emSize : Float32, pixelsPerDip : Float32, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_1_1.call(this, emSize, pixelsPerDip, measuringMode, renderingParams, renderingMode)
    end
    def get_gdi_compatible_metrics_1(this : IDWriteFontFace1*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, fontFaceMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_metrics_1.call(this, emSize, pixelsPerDip, transform, fontFaceMetrics)
    end
    def get_gdi_compatible_glyph_metrics(this : IDWriteFontFace1*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, glyphIndices : UInt16*, glyphCount : UInt32, glyphMetrics : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_metrics.call(this, emSize, pixelsPerDip, transform, useGdiNatural, glyphIndices, glyphCount, glyphMetrics, isSideways)
    end
    def get_metrics_2(this : IDWriteFontFace1*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*) : Void
      @lpVtbl.try &.value.get_metrics_2.call(this, fontMetrics)
    end
    def get_gdi_compatible_metrics_2(this : IDWriteFontFace1*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_metrics_2.call(this, emSize, pixelsPerDip, transform, fontMetrics)
    end
    def get_caret_metrics(this : IDWriteFontFace1*, caretMetrics : Win32cr::Graphics::DirectWrite::DWRITE_CARET_METRICS*) : Void
      @lpVtbl.try &.value.get_caret_metrics.call(this, caretMetrics)
    end
    def get_unicode_ranges(this : IDWriteFontFace1*, maxRangeCount : UInt32, unicodeRanges : Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, actualRangeCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_unicode_ranges.call(this, maxRangeCount, unicodeRanges, actualRangeCount)
    end
    def is_monospaced_font(this : IDWriteFontFace1*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_monospaced_font.call(this)
    end
    def get_design_glyph_advances(this : IDWriteFontFace1*, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvances : Int32*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_design_glyph_advances.call(this, glyphCount, glyphIndices, glyphAdvances, isSideways)
    end
    def get_gdi_compatible_glyph_advances(this : IDWriteFontFace1*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, isSideways : Win32cr::Foundation::BOOL, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvances : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_advances.call(this, emSize, pixelsPerDip, transform, useGdiNatural, isSideways, glyphCount, glyphIndices, glyphAdvances)
    end
    def get_kerning_pair_adjustments(this : IDWriteFontFace1*, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvanceAdjustments : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_kerning_pair_adjustments.call(this, glyphCount, glyphIndices, glyphAdvanceAdjustments)
    end
    def has_kerning_pairs(this : IDWriteFontFace1*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_kerning_pairs.call(this)
    end
    def get_recommended_rendering_mode_2_1(this : IDWriteFontFace1*, fontEmSize : Float32, dpiX : Float32, dpiY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, isSideways : Win32cr::Foundation::BOOL, outlineThreshold : Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_2_1.call(this, fontEmSize, dpiX, dpiY, transform, isSideways, outlineThreshold, measuringMode, renderingMode)
    end
    def get_vertical_glyph_variants(this : IDWriteFontFace1*, glyphCount : UInt32, nominalGlyphIndices : UInt16*, verticalGlyphIndices : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_vertical_glyph_variants.call(this, glyphCount, nominalGlyphIndices, verticalGlyphIndices)
    end
    def has_vertical_glyph_variants(this : IDWriteFontFace1*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_vertical_glyph_variants.call(this)
    end

  end

  @[Extern]
  record IDWriteFont1Vtbl,
    query_interface : Proc(IDWriteFont1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFont1*, UInt32),
    release : Proc(IDWriteFont1*, UInt32),
    get_font_family : Proc(IDWriteFont1*, Void**, Win32cr::Foundation::HRESULT),
    get_weight : Proc(IDWriteFont1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_stretch : Proc(IDWriteFont1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_style : Proc(IDWriteFont1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    is_symbol_font : Proc(IDWriteFont1*, Win32cr::Foundation::BOOL),
    get_face_names : Proc(IDWriteFont1*, Void**, Win32cr::Foundation::HRESULT),
    get_informational_strings : Proc(IDWriteFont1*, Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, Void**, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_simulations : Proc(IDWriteFont1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS),
    get_metrics_1 : Proc(IDWriteFont1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Void),
    has_character_1 : Proc(IDWriteFont1*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    create_font_face_1 : Proc(IDWriteFont1*, Void**, Win32cr::Foundation::HRESULT),
    get_metrics_2 : Proc(IDWriteFont1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*, Void),
    get_panose : Proc(IDWriteFont1*, Win32cr::Graphics::DirectWrite::DWRITE_PANOSE*, Void),
    get_unicode_ranges : Proc(IDWriteFont1*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, UInt32*, Win32cr::Foundation::HRESULT),
    is_monospaced_font : Proc(IDWriteFont1*, Win32cr::Foundation::BOOL)


  @[Extern]
  #@[Com("acd16696-8c14-4f5d-877e-fe3fc1d32738")]
  record IDWriteFont1, lpVtbl : IDWriteFont1Vtbl* do
    GUID = LibC::GUID.new(0xacd16696_u32, 0x8c14_u16, 0x4f5d_u16, StaticArray[0x87_u8, 0x7e_u8, 0xfe_u8, 0x3f_u8, 0xc1_u8, 0xd3_u8, 0x27_u8, 0x38_u8])
    def query_interface(this : IDWriteFont1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFont1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFont1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_family(this : IDWriteFont1*, fontFamily : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family.call(this, fontFamily)
    end
    def get_weight(this : IDWriteFont1*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_weight.call(this)
    end
    def get_stretch(this : IDWriteFont1*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_stretch.call(this)
    end
    def get_style(this : IDWriteFont1*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_style.call(this)
    end
    def is_symbol_font(this : IDWriteFont1*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_symbol_font.call(this)
    end
    def get_face_names(this : IDWriteFont1*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_face_names.call(this, names)
    end
    def get_informational_strings(this : IDWriteFont1*, informationalStringID : Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, informationalStrings : Void**, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_informational_strings.call(this, informationalStringID, informationalStrings, exists)
    end
    def get_simulations(this : IDWriteFont1*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS
      @lpVtbl.try &.value.get_simulations.call(this)
    end
    def get_metrics_1(this : IDWriteFont1*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Void
      @lpVtbl.try &.value.get_metrics_1.call(this, fontMetrics)
    end
    def has_character_1(this : IDWriteFont1*, unicodeValue : UInt32, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.has_character_1.call(this, unicodeValue, exists)
    end
    def create_font_face_1(this : IDWriteFont1*, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_1.call(this, fontFace)
    end
    def get_metrics_2(this : IDWriteFont1*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*) : Void
      @lpVtbl.try &.value.get_metrics_2.call(this, fontMetrics)
    end
    def get_panose(this : IDWriteFont1*, panose : Win32cr::Graphics::DirectWrite::DWRITE_PANOSE*) : Void
      @lpVtbl.try &.value.get_panose.call(this, panose)
    end
    def get_unicode_ranges(this : IDWriteFont1*, maxRangeCount : UInt32, unicodeRanges : Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, actualRangeCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_unicode_ranges.call(this, maxRangeCount, unicodeRanges, actualRangeCount)
    end
    def is_monospaced_font(this : IDWriteFont1*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_monospaced_font.call(this)
    end

  end

  @[Extern]
  record IDWriteRenderingParams1Vtbl,
    query_interface : Proc(IDWriteRenderingParams1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteRenderingParams1*, UInt32),
    release : Proc(IDWriteRenderingParams1*, UInt32),
    get_gamma : Proc(IDWriteRenderingParams1*, Float32),
    get_enhanced_contrast : Proc(IDWriteRenderingParams1*, Float32),
    get_clear_type_level : Proc(IDWriteRenderingParams1*, Float32),
    get_pixel_geometry : Proc(IDWriteRenderingParams1*, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY),
    get_rendering_mode : Proc(IDWriteRenderingParams1*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE),
    get_grayscale_enhanced_contrast : Proc(IDWriteRenderingParams1*, Float32)


  @[Extern]
  #@[Com("94413cf4-a6fc-4248-8b50-6674348fcad3")]
  record IDWriteRenderingParams1, lpVtbl : IDWriteRenderingParams1Vtbl* do
    GUID = LibC::GUID.new(0x94413cf4_u32, 0xa6fc_u16, 0x4248_u16, StaticArray[0x8b_u8, 0x50_u8, 0x66_u8, 0x74_u8, 0x34_u8, 0x8f_u8, 0xca_u8, 0xd3_u8])
    def query_interface(this : IDWriteRenderingParams1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteRenderingParams1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteRenderingParams1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_gamma(this : IDWriteRenderingParams1*) : Float32
      @lpVtbl.try &.value.get_gamma.call(this)
    end
    def get_enhanced_contrast(this : IDWriteRenderingParams1*) : Float32
      @lpVtbl.try &.value.get_enhanced_contrast.call(this)
    end
    def get_clear_type_level(this : IDWriteRenderingParams1*) : Float32
      @lpVtbl.try &.value.get_clear_type_level.call(this)
    end
    def get_pixel_geometry(this : IDWriteRenderingParams1*) : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY
      @lpVtbl.try &.value.get_pixel_geometry.call(this)
    end
    def get_rendering_mode(this : IDWriteRenderingParams1*) : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE
      @lpVtbl.try &.value.get_rendering_mode.call(this)
    end
    def get_grayscale_enhanced_contrast(this : IDWriteRenderingParams1*) : Float32
      @lpVtbl.try &.value.get_grayscale_enhanced_contrast.call(this)
    end

  end

  @[Extern]
  record IDWriteTextAnalyzer1Vtbl,
    query_interface : Proc(IDWriteTextAnalyzer1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextAnalyzer1*, UInt32),
    release : Proc(IDWriteTextAnalyzer1*, UInt32),
    analyze_script : Proc(IDWriteTextAnalyzer1*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    analyze_bidi : Proc(IDWriteTextAnalyzer1*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    analyze_number_substitution : Proc(IDWriteTextAnalyzer1*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    analyze_line_breakpoints : Proc(IDWriteTextAnalyzer1*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    get_glyphs : Proc(IDWriteTextAnalyzer1*, UInt16*, UInt32, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, UInt32*, UInt32, UInt32, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt32*, Win32cr::Foundation::HRESULT),
    get_glyph_placements : Proc(IDWriteTextAnalyzer1*, UInt16*, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, UInt32, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt32, Void*, Float32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, UInt32*, UInt32, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_placements : Proc(IDWriteTextAnalyzer1*, UInt16*, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, UInt32, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt32, Void*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, UInt32*, UInt32, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Foundation::HRESULT),
    apply_character_spacing : Proc(IDWriteTextAnalyzer1*, Float32, Float32, Float32, UInt32, UInt32, UInt16*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Foundation::HRESULT),
    get_baseline : Proc(IDWriteTextAnalyzer1*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_BASELINE, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, Win32cr::Foundation::PWSTR, Int32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    analyze_vertical_glyph_orientation : Proc(IDWriteTextAnalyzer1*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    get_glyph_orientation_transform_1 : Proc(IDWriteTextAnalyzer1*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::HRESULT),
    get_script_properties : Proc(IDWriteTextAnalyzer1*, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_PROPERTIES*, Win32cr::Foundation::HRESULT),
    get_text_complexity : Proc(IDWriteTextAnalyzer1*, UInt16*, UInt32, Void*, Win32cr::Foundation::BOOL*, UInt32*, UInt16*, Win32cr::Foundation::HRESULT),
    get_justification_opportunities : Proc(IDWriteTextAnalyzer1*, Void*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, UInt32, UInt32, UInt16*, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, Win32cr::Graphics::DirectWrite::DWRITE_JUSTIFICATION_OPPORTUNITY*, Win32cr::Foundation::HRESULT),
    justify_glyph_advances : Proc(IDWriteTextAnalyzer1*, Float32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_JUSTIFICATION_OPPORTUNITY*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Foundation::HRESULT),
    get_justified_glyphs : Proc(IDWriteTextAnalyzer1*, Void*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, UInt32, UInt32, UInt32, UInt16*, UInt16*, Float32*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt32*, UInt16*, UInt16*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("80dad800-e21f-4e83-96ce-bfcce500db7c")]
  record IDWriteTextAnalyzer1, lpVtbl : IDWriteTextAnalyzer1Vtbl* do
    GUID = LibC::GUID.new(0x80dad800_u32, 0xe21f_u16, 0x4e83_u16, StaticArray[0x96_u8, 0xce_u8, 0xbf_u8, 0xcc_u8, 0xe5_u8, 0x0_u8, 0xdb_u8, 0x7c_u8])
    def query_interface(this : IDWriteTextAnalyzer1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextAnalyzer1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextAnalyzer1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def analyze_script(this : IDWriteTextAnalyzer1*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, analysisSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze_script.call(this, analysisSource, textPosition, textLength, analysisSink)
    end
    def analyze_bidi(this : IDWriteTextAnalyzer1*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, analysisSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze_bidi.call(this, analysisSource, textPosition, textLength, analysisSink)
    end
    def analyze_number_substitution(this : IDWriteTextAnalyzer1*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, analysisSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze_number_substitution.call(this, analysisSource, textPosition, textLength, analysisSink)
    end
    def analyze_line_breakpoints(this : IDWriteTextAnalyzer1*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, analysisSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze_line_breakpoints.call(this, analysisSource, textPosition, textLength, analysisSink)
    end
    def get_glyphs(this : IDWriteTextAnalyzer1*, textString : UInt16*, textLength : UInt32, fontFace : Void*, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, localeName : Win32cr::Foundation::PWSTR, numberSubstitution : Void*, features : Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, featureRangeLengths : UInt32*, featureRanges : UInt32, maxGlyphCount : UInt32, clusterMap : UInt16*, textProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, glyphIndices : UInt16*, glyphProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, actualGlyphCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyphs.call(this, textString, textLength, fontFace, isSideways, isRightToLeft, scriptAnalysis, localeName, numberSubstitution, features, featureRangeLengths, featureRanges, maxGlyphCount, clusterMap, textProps, glyphIndices, glyphProps, actualGlyphCount)
    end
    def get_glyph_placements(this : IDWriteTextAnalyzer1*, textString : UInt16*, clusterMap : UInt16*, textProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, textLength : UInt32, glyphIndices : UInt16*, glyphProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, glyphCount : UInt32, fontFace : Void*, fontEmSize : Float32, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, localeName : Win32cr::Foundation::PWSTR, features : Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, featureRangeLengths : UInt32*, featureRanges : UInt32, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_placements.call(this, textString, clusterMap, textProps, textLength, glyphIndices, glyphProps, glyphCount, fontFace, fontEmSize, isSideways, isRightToLeft, scriptAnalysis, localeName, features, featureRangeLengths, featureRanges, glyphAdvances, glyphOffsets)
    end
    def get_gdi_compatible_glyph_placements(this : IDWriteTextAnalyzer1*, textString : UInt16*, clusterMap : UInt16*, textProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, textLength : UInt32, glyphIndices : UInt16*, glyphProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, glyphCount : UInt32, fontFace : Void*, fontEmSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, localeName : Win32cr::Foundation::PWSTR, features : Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, featureRangeLengths : UInt32*, featureRanges : UInt32, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_placements.call(this, textString, clusterMap, textProps, textLength, glyphIndices, glyphProps, glyphCount, fontFace, fontEmSize, pixelsPerDip, transform, useGdiNatural, isSideways, isRightToLeft, scriptAnalysis, localeName, features, featureRangeLengths, featureRanges, glyphAdvances, glyphOffsets)
    end
    def apply_character_spacing(this : IDWriteTextAnalyzer1*, leadingSpacing : Float32, trailingSpacing : Float32, minimumAdvanceWidth : Float32, textLength : UInt32, glyphCount : UInt32, clusterMap : UInt16*, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, glyphProperties : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, modifiedGlyphAdvances : Float32*, modifiedGlyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.apply_character_spacing.call(this, leadingSpacing, trailingSpacing, minimumAdvanceWidth, textLength, glyphCount, clusterMap, glyphAdvances, glyphOffsets, glyphProperties, modifiedGlyphAdvances, modifiedGlyphOffsets)
    end
    def get_baseline(this : IDWriteTextAnalyzer1*, fontFace : Void*, baseline : Win32cr::Graphics::DirectWrite::DWRITE_BASELINE, isVertical : Win32cr::Foundation::BOOL, isSimulationAllowed : Win32cr::Foundation::BOOL, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, localeName : Win32cr::Foundation::PWSTR, baselineCoordinate : Int32*, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_baseline.call(this, fontFace, baseline, isVertical, isSimulationAllowed, scriptAnalysis, localeName, baselineCoordinate, exists)
    end
    def analyze_vertical_glyph_orientation(this : IDWriteTextAnalyzer1*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, analysisSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze_vertical_glyph_orientation.call(this, analysisSource, textPosition, textLength, analysisSink)
    end
    def get_glyph_orientation_transform_1(this : IDWriteTextAnalyzer1*, glyphOrientationAngle : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, isSideways : Win32cr::Foundation::BOOL, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_orientation_transform_1.call(this, glyphOrientationAngle, isSideways, transform)
    end
    def get_script_properties(this : IDWriteTextAnalyzer1*, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, scriptProperties : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_PROPERTIES*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_script_properties.call(this, scriptAnalysis, scriptProperties)
    end
    def get_text_complexity(this : IDWriteTextAnalyzer1*, textString : UInt16*, textLength : UInt32, fontFace : Void*, isTextSimple : Win32cr::Foundation::BOOL*, textLengthRead : UInt32*, glyphIndices : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_text_complexity.call(this, textString, textLength, fontFace, isTextSimple, textLengthRead, glyphIndices)
    end
    def get_justification_opportunities(this : IDWriteTextAnalyzer1*, fontFace : Void*, fontEmSize : Float32, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, textLength : UInt32, glyphCount : UInt32, textString : UInt16*, clusterMap : UInt16*, glyphProperties : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, justificationOpportunities : Win32cr::Graphics::DirectWrite::DWRITE_JUSTIFICATION_OPPORTUNITY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_justification_opportunities.call(this, fontFace, fontEmSize, scriptAnalysis, textLength, glyphCount, textString, clusterMap, glyphProperties, justificationOpportunities)
    end
    def justify_glyph_advances(this : IDWriteTextAnalyzer1*, lineWidth : Float32, glyphCount : UInt32, justificationOpportunities : Win32cr::Graphics::DirectWrite::DWRITE_JUSTIFICATION_OPPORTUNITY*, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, justifiedGlyphAdvances : Float32*, justifiedGlyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.justify_glyph_advances.call(this, lineWidth, glyphCount, justificationOpportunities, glyphAdvances, glyphOffsets, justifiedGlyphAdvances, justifiedGlyphOffsets)
    end
    def get_justified_glyphs(this : IDWriteTextAnalyzer1*, fontFace : Void*, fontEmSize : Float32, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, textLength : UInt32, glyphCount : UInt32, maxGlyphCount : UInt32, clusterMap : UInt16*, glyphIndices : UInt16*, glyphAdvances : Float32*, justifiedGlyphAdvances : Float32*, justifiedGlyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, glyphProperties : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, actualGlyphCount : UInt32*, modifiedClusterMap : UInt16*, modifiedGlyphIndices : UInt16*, modifiedGlyphAdvances : Float32*, modifiedGlyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_justified_glyphs.call(this, fontFace, fontEmSize, scriptAnalysis, textLength, glyphCount, maxGlyphCount, clusterMap, glyphIndices, glyphAdvances, justifiedGlyphAdvances, justifiedGlyphOffsets, glyphProperties, actualGlyphCount, modifiedClusterMap, modifiedGlyphIndices, modifiedGlyphAdvances, modifiedGlyphOffsets)
    end

  end

  @[Extern]
  record IDWriteTextAnalysisSource1Vtbl,
    query_interface : Proc(IDWriteTextAnalysisSource1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextAnalysisSource1*, UInt32),
    release : Proc(IDWriteTextAnalysisSource1*, UInt32),
    get_text_at_position : Proc(IDWriteTextAnalysisSource1*, UInt32, UInt16**, UInt32*, Win32cr::Foundation::HRESULT),
    get_text_before_position : Proc(IDWriteTextAnalysisSource1*, UInt32, UInt16**, UInt32*, Win32cr::Foundation::HRESULT),
    get_paragraph_reading_direction : Proc(IDWriteTextAnalysisSource1*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION),
    get_locale_name : Proc(IDWriteTextAnalysisSource1*, UInt32, UInt32*, UInt16**, Win32cr::Foundation::HRESULT),
    get_number_substitution : Proc(IDWriteTextAnalysisSource1*, UInt32, UInt32*, Void**, Win32cr::Foundation::HRESULT),
    get_vertical_glyph_orientation : Proc(IDWriteTextAnalysisSource1*, UInt32, UInt32*, Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION*, UInt8*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("639cfad8-0fb4-4b21-a58a-067920120009")]
  record IDWriteTextAnalysisSource1, lpVtbl : IDWriteTextAnalysisSource1Vtbl* do
    GUID = LibC::GUID.new(0x639cfad8_u32, 0xfb4_u16, 0x4b21_u16, StaticArray[0xa5_u8, 0x8a_u8, 0x6_u8, 0x79_u8, 0x20_u8, 0x12_u8, 0x0_u8, 0x9_u8])
    def query_interface(this : IDWriteTextAnalysisSource1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextAnalysisSource1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextAnalysisSource1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_text_at_position(this : IDWriteTextAnalysisSource1*, textPosition : UInt32, textString : UInt16**, textLength : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_text_at_position.call(this, textPosition, textString, textLength)
    end
    def get_text_before_position(this : IDWriteTextAnalysisSource1*, textPosition : UInt32, textString : UInt16**, textLength : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_text_before_position.call(this, textPosition, textString, textLength)
    end
    def get_paragraph_reading_direction(this : IDWriteTextAnalysisSource1*) : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION
      @lpVtbl.try &.value.get_paragraph_reading_direction.call(this)
    end
    def get_locale_name(this : IDWriteTextAnalysisSource1*, textPosition : UInt32, textLength : UInt32*, localeName : UInt16**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name.call(this, textPosition, textLength, localeName)
    end
    def get_number_substitution(this : IDWriteTextAnalysisSource1*, textPosition : UInt32, textLength : UInt32*, numberSubstitution : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_number_substitution.call(this, textPosition, textLength, numberSubstitution)
    end
    def get_vertical_glyph_orientation(this : IDWriteTextAnalysisSource1*, textPosition : UInt32, textLength : UInt32*, glyphOrientation : Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION*, bidiLevel : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_vertical_glyph_orientation.call(this, textPosition, textLength, glyphOrientation, bidiLevel)
    end

  end

  @[Extern]
  record IDWriteTextAnalysisSink1Vtbl,
    query_interface : Proc(IDWriteTextAnalysisSink1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextAnalysisSink1*, UInt32),
    release : Proc(IDWriteTextAnalysisSink1*, UInt32),
    set_script_analysis : Proc(IDWriteTextAnalysisSink1*, UInt32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, Win32cr::Foundation::HRESULT),
    set_line_breakpoints : Proc(IDWriteTextAnalysisSink1*, UInt32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_LINE_BREAKPOINT*, Win32cr::Foundation::HRESULT),
    set_bidi_level : Proc(IDWriteTextAnalysisSink1*, UInt32, UInt32, UInt8, UInt8, Win32cr::Foundation::HRESULT),
    set_number_substitution : Proc(IDWriteTextAnalysisSink1*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_glyph_orientation : Proc(IDWriteTextAnalysisSink1*, UInt32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, UInt8, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("b0d941a0-85e7-4d8b-9fd3-5ced9934482a")]
  record IDWriteTextAnalysisSink1, lpVtbl : IDWriteTextAnalysisSink1Vtbl* do
    GUID = LibC::GUID.new(0xb0d941a0_u32, 0x85e7_u16, 0x4d8b_u16, StaticArray[0x9f_u8, 0xd3_u8, 0x5c_u8, 0xed_u8, 0x99_u8, 0x34_u8, 0x48_u8, 0x2a_u8])
    def query_interface(this : IDWriteTextAnalysisSink1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextAnalysisSink1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextAnalysisSink1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_script_analysis(this : IDWriteTextAnalysisSink1*, textPosition : UInt32, textLength : UInt32, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_script_analysis.call(this, textPosition, textLength, scriptAnalysis)
    end
    def set_line_breakpoints(this : IDWriteTextAnalysisSink1*, textPosition : UInt32, textLength : UInt32, lineBreakpoints : Win32cr::Graphics::DirectWrite::DWRITE_LINE_BREAKPOINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line_breakpoints.call(this, textPosition, textLength, lineBreakpoints)
    end
    def set_bidi_level(this : IDWriteTextAnalysisSink1*, textPosition : UInt32, textLength : UInt32, explicitLevel : UInt8, resolvedLevel : UInt8) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_bidi_level.call(this, textPosition, textLength, explicitLevel, resolvedLevel)
    end
    def set_number_substitution(this : IDWriteTextAnalysisSink1*, textPosition : UInt32, textLength : UInt32, numberSubstitution : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_number_substitution.call(this, textPosition, textLength, numberSubstitution)
    end
    def set_glyph_orientation(this : IDWriteTextAnalysisSink1*, textPosition : UInt32, textLength : UInt32, glyphOrientationAngle : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, adjustedBidiLevel : UInt8, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_glyph_orientation.call(this, textPosition, textLength, glyphOrientationAngle, adjustedBidiLevel, isSideways, isRightToLeft)
    end

  end

  @[Extern]
  record IDWriteTextLayout1Vtbl,
    query_interface : Proc(IDWriteTextLayout1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextLayout1*, UInt32),
    release : Proc(IDWriteTextLayout1*, UInt32),
    set_text_alignment : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_paragraph_alignment : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_word_wrapping : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING, Win32cr::Foundation::HRESULT),
    set_reading_direction : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION, Win32cr::Foundation::HRESULT),
    set_flow_direction : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION, Win32cr::Foundation::HRESULT),
    set_incremental_tab_stop : Proc(IDWriteTextLayout1*, Float32, Win32cr::Foundation::HRESULT),
    set_trimming : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void*, Win32cr::Foundation::HRESULT),
    set_line_spacing_1 : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, Float32, Float32, Win32cr::Foundation::HRESULT),
    get_text_alignment : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT),
    get_paragraph_alignment : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT),
    get_word_wrapping : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING),
    get_reading_direction : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION),
    get_flow_direction : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION),
    get_incremental_tab_stop : Proc(IDWriteTextLayout1*, Float32),
    get_trimming : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void**, Win32cr::Foundation::HRESULT),
    get_line_spacing_1 : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, Float32*, Float32*, Win32cr::Foundation::HRESULT),
    get_font_collection_1 : Proc(IDWriteTextLayout1*, Void**, Win32cr::Foundation::HRESULT),
    get_font_family_name_length_1 : Proc(IDWriteTextLayout1*, UInt32),
    get_font_family_name_1 : Proc(IDWriteTextLayout1*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_font_weight_1 : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_font_style_1 : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    get_font_stretch_1 : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_font_size_1 : Proc(IDWriteTextLayout1*, Float32),
    get_locale_name_length_1 : Proc(IDWriteTextLayout1*, UInt32),
    get_locale_name_1 : Proc(IDWriteTextLayout1*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    set_max_width : Proc(IDWriteTextLayout1*, Float32, Win32cr::Foundation::HRESULT),
    set_max_height : Proc(IDWriteTextLayout1*, Float32, Win32cr::Foundation::HRESULT),
    set_font_collection : Proc(IDWriteTextLayout1*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_family_name : Proc(IDWriteTextLayout1*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_weight : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_style : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_stretch : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_size : Proc(IDWriteTextLayout1*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_underline : Proc(IDWriteTextLayout1*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_strikethrough : Proc(IDWriteTextLayout1*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_drawing_effect : Proc(IDWriteTextLayout1*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_inline_object : Proc(IDWriteTextLayout1*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_typography : Proc(IDWriteTextLayout1*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_locale_name : Proc(IDWriteTextLayout1*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    get_max_width : Proc(IDWriteTextLayout1*, Float32),
    get_max_height : Proc(IDWriteTextLayout1*, Float32),
    get_font_collection_2 : Proc(IDWriteTextLayout1*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_family_name_length_2 : Proc(IDWriteTextLayout1*, UInt32, UInt32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_family_name_2 : Proc(IDWriteTextLayout1*, UInt32, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_weight_2 : Proc(IDWriteTextLayout1*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_style_2 : Proc(IDWriteTextLayout1*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_stretch_2 : Proc(IDWriteTextLayout1*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_size_2 : Proc(IDWriteTextLayout1*, UInt32, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_underline : Proc(IDWriteTextLayout1*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_strikethrough : Proc(IDWriteTextLayout1*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_drawing_effect : Proc(IDWriteTextLayout1*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_inline_object : Proc(IDWriteTextLayout1*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_typography : Proc(IDWriteTextLayout1*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_locale_name_length_2 : Proc(IDWriteTextLayout1*, UInt32, UInt32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_locale_name_2 : Proc(IDWriteTextLayout1*, UInt32, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    draw : Proc(IDWriteTextLayout1*, Void*, Void*, Float32, Float32, Win32cr::Foundation::HRESULT),
    get_line_metrics_1 : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_METRICS*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_metrics_1 : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS*, Win32cr::Foundation::HRESULT),
    get_overhang_metrics : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_OVERHANG_METRICS*, Win32cr::Foundation::HRESULT),
    get_cluster_metrics : Proc(IDWriteTextLayout1*, Win32cr::Graphics::DirectWrite::DWRITE_CLUSTER_METRICS*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    determine_min_width : Proc(IDWriteTextLayout1*, Float32*, Win32cr::Foundation::HRESULT),
    hit_test_point : Proc(IDWriteTextLayout1*, Float32, Float32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, Win32cr::Foundation::HRESULT),
    hit_test_text_position : Proc(IDWriteTextLayout1*, UInt32, Win32cr::Foundation::BOOL, Float32*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, Win32cr::Foundation::HRESULT),
    hit_test_text_range : Proc(IDWriteTextLayout1*, UInt32, UInt32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    set_pair_kerning : Proc(IDWriteTextLayout1*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    get_pair_kerning : Proc(IDWriteTextLayout1*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    set_character_spacing : Proc(IDWriteTextLayout1*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    get_character_spacing : Proc(IDWriteTextLayout1*, UInt32, Float32*, Float32*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("9064d822-80a7-465c-a986-df65f78b8feb")]
  record IDWriteTextLayout1, lpVtbl : IDWriteTextLayout1Vtbl* do
    GUID = LibC::GUID.new(0x9064d822_u32, 0x80a7_u16, 0x465c_u16, StaticArray[0xa9_u8, 0x86_u8, 0xdf_u8, 0x65_u8, 0xf7_u8, 0x8b_u8, 0x8f_u8, 0xeb_u8])
    def query_interface(this : IDWriteTextLayout1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextLayout1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextLayout1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_text_alignment(this : IDWriteTextLayout1*, textAlignment : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_text_alignment.call(this, textAlignment)
    end
    def set_paragraph_alignment(this : IDWriteTextLayout1*, paragraphAlignment : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_paragraph_alignment.call(this, paragraphAlignment)
    end
    def set_word_wrapping(this : IDWriteTextLayout1*, wordWrapping : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_word_wrapping.call(this, wordWrapping)
    end
    def set_reading_direction(this : IDWriteTextLayout1*, readingDirection : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_reading_direction.call(this, readingDirection)
    end
    def set_flow_direction(this : IDWriteTextLayout1*, flowDirection : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flow_direction.call(this, flowDirection)
    end
    def set_incremental_tab_stop(this : IDWriteTextLayout1*, incrementalTabStop : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_incremental_tab_stop.call(this, incrementalTabStop)
    end
    def set_trimming(this : IDWriteTextLayout1*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def set_line_spacing_1(this : IDWriteTextLayout1*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, lineSpacing : Float32, baseline : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_text_alignment(this : IDWriteTextLayout1*) : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT
      @lpVtbl.try &.value.get_text_alignment.call(this)
    end
    def get_paragraph_alignment(this : IDWriteTextLayout1*) : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT
      @lpVtbl.try &.value.get_paragraph_alignment.call(this)
    end
    def get_word_wrapping(this : IDWriteTextLayout1*) : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING
      @lpVtbl.try &.value.get_word_wrapping.call(this)
    end
    def get_reading_direction(this : IDWriteTextLayout1*) : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION
      @lpVtbl.try &.value.get_reading_direction.call(this)
    end
    def get_flow_direction(this : IDWriteTextLayout1*) : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION
      @lpVtbl.try &.value.get_flow_direction.call(this)
    end
    def get_incremental_tab_stop(this : IDWriteTextLayout1*) : Float32
      @lpVtbl.try &.value.get_incremental_tab_stop.call(this)
    end
    def get_trimming(this : IDWriteTextLayout1*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def get_line_spacing_1(this : IDWriteTextLayout1*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, lineSpacing : Float32*, baseline : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_font_collection_1(this : IDWriteTextLayout1*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection_1.call(this, fontCollection)
    end
    def get_font_family_name_length_1(this : IDWriteTextLayout1*) : UInt32
      @lpVtbl.try &.value.get_font_family_name_length_1.call(this)
    end
    def get_font_family_name_1(this : IDWriteTextLayout1*, fontFamilyName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_1.call(this, fontFamilyName, nameSize)
    end
    def get_font_weight_1(this : IDWriteTextLayout1*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_font_weight_1.call(this)
    end
    def get_font_style_1(this : IDWriteTextLayout1*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_font_style_1.call(this)
    end
    def get_font_stretch_1(this : IDWriteTextLayout1*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_font_stretch_1.call(this)
    end
    def get_font_size_1(this : IDWriteTextLayout1*) : Float32
      @lpVtbl.try &.value.get_font_size_1.call(this)
    end
    def get_locale_name_length_1(this : IDWriteTextLayout1*) : UInt32
      @lpVtbl.try &.value.get_locale_name_length_1.call(this)
    end
    def get_locale_name_1(this : IDWriteTextLayout1*, localeName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_1.call(this, localeName, nameSize)
    end
    def set_max_width(this : IDWriteTextLayout1*, maxWidth : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_max_width.call(this, maxWidth)
    end
    def set_max_height(this : IDWriteTextLayout1*, maxHeight : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_max_height.call(this, maxHeight)
    end
    def set_font_collection(this : IDWriteTextLayout1*, fontCollection : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_collection.call(this, fontCollection, textRange)
    end
    def set_font_family_name(this : IDWriteTextLayout1*, fontFamilyName : Win32cr::Foundation::PWSTR, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_family_name.call(this, fontFamilyName, textRange)
    end
    def set_font_weight(this : IDWriteTextLayout1*, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_weight.call(this, fontWeight, textRange)
    end
    def set_font_style(this : IDWriteTextLayout1*, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_style.call(this, fontStyle, textRange)
    end
    def set_font_stretch(this : IDWriteTextLayout1*, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_stretch.call(this, fontStretch, textRange)
    end
    def set_font_size(this : IDWriteTextLayout1*, fontSize : Float32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_size.call(this, fontSize, textRange)
    end
    def set_underline(this : IDWriteTextLayout1*, hasUnderline : Win32cr::Foundation::BOOL, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_underline.call(this, hasUnderline, textRange)
    end
    def set_strikethrough(this : IDWriteTextLayout1*, hasStrikethrough : Win32cr::Foundation::BOOL, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_strikethrough.call(this, hasStrikethrough, textRange)
    end
    def set_drawing_effect(this : IDWriteTextLayout1*, drawingEffect : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_drawing_effect.call(this, drawingEffect, textRange)
    end
    def set_inline_object(this : IDWriteTextLayout1*, inlineObject : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_inline_object.call(this, inlineObject, textRange)
    end
    def set_typography(this : IDWriteTextLayout1*, typography : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_typography.call(this, typography, textRange)
    end
    def set_locale_name(this : IDWriteTextLayout1*, localeName : Win32cr::Foundation::PWSTR, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_locale_name.call(this, localeName, textRange)
    end
    def get_max_width(this : IDWriteTextLayout1*) : Float32
      @lpVtbl.try &.value.get_max_width.call(this)
    end
    def get_max_height(this : IDWriteTextLayout1*) : Float32
      @lpVtbl.try &.value.get_max_height.call(this)
    end
    def get_font_collection_2(this : IDWriteTextLayout1*, currentPosition : UInt32, fontCollection : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection_2.call(this, currentPosition, fontCollection, textRange)
    end
    def get_font_family_name_length_2(this : IDWriteTextLayout1*, currentPosition : UInt32, nameLength : UInt32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_length_2.call(this, currentPosition, nameLength, textRange)
    end
    def get_font_family_name_2(this : IDWriteTextLayout1*, currentPosition : UInt32, fontFamilyName : UInt16*, nameSize : UInt32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_2.call(this, currentPosition, fontFamilyName, nameSize, textRange)
    end
    def get_font_weight_2(this : IDWriteTextLayout1*, currentPosition : UInt32, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_weight_2.call(this, currentPosition, fontWeight, textRange)
    end
    def get_font_style_2(this : IDWriteTextLayout1*, currentPosition : UInt32, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_style_2.call(this, currentPosition, fontStyle, textRange)
    end
    def get_font_stretch_2(this : IDWriteTextLayout1*, currentPosition : UInt32, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_stretch_2.call(this, currentPosition, fontStretch, textRange)
    end
    def get_font_size_2(this : IDWriteTextLayout1*, currentPosition : UInt32, fontSize : Float32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_size_2.call(this, currentPosition, fontSize, textRange)
    end
    def get_underline(this : IDWriteTextLayout1*, currentPosition : UInt32, hasUnderline : Win32cr::Foundation::BOOL*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_underline.call(this, currentPosition, hasUnderline, textRange)
    end
    def get_strikethrough(this : IDWriteTextLayout1*, currentPosition : UInt32, hasStrikethrough : Win32cr::Foundation::BOOL*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_strikethrough.call(this, currentPosition, hasStrikethrough, textRange)
    end
    def get_drawing_effect(this : IDWriteTextLayout1*, currentPosition : UInt32, drawingEffect : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_drawing_effect.call(this, currentPosition, drawingEffect, textRange)
    end
    def get_inline_object(this : IDWriteTextLayout1*, currentPosition : UInt32, inlineObject : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_inline_object.call(this, currentPosition, inlineObject, textRange)
    end
    def get_typography(this : IDWriteTextLayout1*, currentPosition : UInt32, typography : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_typography.call(this, currentPosition, typography, textRange)
    end
    def get_locale_name_length_2(this : IDWriteTextLayout1*, currentPosition : UInt32, nameLength : UInt32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_length_2.call(this, currentPosition, nameLength, textRange)
    end
    def get_locale_name_2(this : IDWriteTextLayout1*, currentPosition : UInt32, localeName : UInt16*, nameSize : UInt32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_2.call(this, currentPosition, localeName, nameSize, textRange)
    end
    def draw(this : IDWriteTextLayout1*, clientDrawingContext : Void*, renderer : Void*, originX : Float32, originY : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw.call(this, clientDrawingContext, renderer, originX, originY)
    end
    def get_line_metrics_1(this : IDWriteTextLayout1*, lineMetrics : Win32cr::Graphics::DirectWrite::DWRITE_LINE_METRICS*, maxLineCount : UInt32, actualLineCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_metrics_1.call(this, lineMetrics, maxLineCount, actualLineCount)
    end
    def get_metrics_1(this : IDWriteTextLayout1*, textMetrics : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_metrics_1.call(this, textMetrics)
    end
    def get_overhang_metrics(this : IDWriteTextLayout1*, overhangs : Win32cr::Graphics::DirectWrite::DWRITE_OVERHANG_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_overhang_metrics.call(this, overhangs)
    end
    def get_cluster_metrics(this : IDWriteTextLayout1*, clusterMetrics : Win32cr::Graphics::DirectWrite::DWRITE_CLUSTER_METRICS*, maxClusterCount : UInt32, actualClusterCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cluster_metrics.call(this, clusterMetrics, maxClusterCount, actualClusterCount)
    end
    def determine_min_width(this : IDWriteTextLayout1*, minWidth : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.determine_min_width.call(this, minWidth)
    end
    def hit_test_point(this : IDWriteTextLayout1*, pointX : Float32, pointY : Float32, isTrailingHit : Win32cr::Foundation::BOOL*, isInside : Win32cr::Foundation::BOOL*, hitTestMetrics : Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test_point.call(this, pointX, pointY, isTrailingHit, isInside, hitTestMetrics)
    end
    def hit_test_text_position(this : IDWriteTextLayout1*, textPosition : UInt32, isTrailingHit : Win32cr::Foundation::BOOL, pointX : Float32*, pointY : Float32*, hitTestMetrics : Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test_text_position.call(this, textPosition, isTrailingHit, pointX, pointY, hitTestMetrics)
    end
    def hit_test_text_range(this : IDWriteTextLayout1*, textPosition : UInt32, textLength : UInt32, originX : Float32, originY : Float32, hitTestMetrics : Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, maxHitTestMetricsCount : UInt32, actualHitTestMetricsCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test_text_range.call(this, textPosition, textLength, originX, originY, hitTestMetrics, maxHitTestMetricsCount, actualHitTestMetricsCount)
    end
    def set_pair_kerning(this : IDWriteTextLayout1*, isPairKerningEnabled : Win32cr::Foundation::BOOL, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_pair_kerning.call(this, isPairKerningEnabled, textRange)
    end
    def get_pair_kerning(this : IDWriteTextLayout1*, currentPosition : UInt32, isPairKerningEnabled : Win32cr::Foundation::BOOL*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_pair_kerning.call(this, currentPosition, isPairKerningEnabled, textRange)
    end
    def set_character_spacing(this : IDWriteTextLayout1*, leadingSpacing : Float32, trailingSpacing : Float32, minimumAdvanceWidth : Float32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_character_spacing.call(this, leadingSpacing, trailingSpacing, minimumAdvanceWidth, textRange)
    end
    def get_character_spacing(this : IDWriteTextLayout1*, currentPosition : UInt32, leadingSpacing : Float32*, trailingSpacing : Float32*, minimumAdvanceWidth : Float32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_character_spacing.call(this, currentPosition, leadingSpacing, trailingSpacing, minimumAdvanceWidth, textRange)
    end

  end

  @[Extern]
  record IDWriteBitmapRenderTarget1Vtbl,
    query_interface : Proc(IDWriteBitmapRenderTarget1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteBitmapRenderTarget1*, UInt32),
    release : Proc(IDWriteBitmapRenderTarget1*, UInt32),
    draw_glyph_run : Proc(IDWriteBitmapRenderTarget1*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Void*, UInt32, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    get_memory_dc : Proc(IDWriteBitmapRenderTarget1*, Win32cr::Graphics::Gdi::HDC),
    get_pixels_per_dip : Proc(IDWriteBitmapRenderTarget1*, Float32),
    set_pixels_per_dip : Proc(IDWriteBitmapRenderTarget1*, Float32, Win32cr::Foundation::HRESULT),
    get_current_transform : Proc(IDWriteBitmapRenderTarget1*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::HRESULT),
    set_current_transform : Proc(IDWriteBitmapRenderTarget1*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::HRESULT),
    get_size : Proc(IDWriteBitmapRenderTarget1*, Win32cr::Foundation::SIZE*, Win32cr::Foundation::HRESULT),
    resize : Proc(IDWriteBitmapRenderTarget1*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_text_antialias_mode : Proc(IDWriteBitmapRenderTarget1*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE),
    set_text_antialias_mode : Proc(IDWriteBitmapRenderTarget1*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("791e8298-3ef3-4230-9880-c9bdecc42064")]
  record IDWriteBitmapRenderTarget1, lpVtbl : IDWriteBitmapRenderTarget1Vtbl* do
    GUID = LibC::GUID.new(0x791e8298_u32, 0x3ef3_u16, 0x4230_u16, StaticArray[0x98_u8, 0x80_u8, 0xc9_u8, 0xbd_u8, 0xec_u8, 0xc4_u8, 0x20_u8, 0x64_u8])
    def query_interface(this : IDWriteBitmapRenderTarget1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteBitmapRenderTarget1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteBitmapRenderTarget1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def draw_glyph_run(this : IDWriteBitmapRenderTarget1*, baselineOriginX : Float32, baselineOriginY : Float32, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, renderingParams : Void*, textColor : UInt32, blackBoxRect : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw_glyph_run.call(this, baselineOriginX, baselineOriginY, measuringMode, glyphRun, renderingParams, textColor, blackBoxRect)
    end
    def get_memory_dc(this : IDWriteBitmapRenderTarget1*) : Win32cr::Graphics::Gdi::HDC
      @lpVtbl.try &.value.get_memory_dc.call(this)
    end
    def get_pixels_per_dip(this : IDWriteBitmapRenderTarget1*) : Float32
      @lpVtbl.try &.value.get_pixels_per_dip.call(this)
    end
    def set_pixels_per_dip(this : IDWriteBitmapRenderTarget1*, pixelsPerDip : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_pixels_per_dip.call(this, pixelsPerDip)
    end
    def get_current_transform(this : IDWriteBitmapRenderTarget1*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_transform.call(this, transform)
    end
    def set_current_transform(this : IDWriteBitmapRenderTarget1*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_current_transform.call(this, transform)
    end
    def get_size(this : IDWriteBitmapRenderTarget1*, size : Win32cr::Foundation::SIZE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_size.call(this, size)
    end
    def resize(this : IDWriteBitmapRenderTarget1*, width : UInt32, height : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resize.call(this, width, height)
    end
    def get_text_antialias_mode(this : IDWriteBitmapRenderTarget1*) : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE
      @lpVtbl.try &.value.get_text_antialias_mode.call(this)
    end
    def set_text_antialias_mode(this : IDWriteBitmapRenderTarget1*, antialiasMode : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_text_antialias_mode.call(this, antialiasMode)
    end

  end

  @[Extern]
  record IDWriteTextRenderer1Vtbl,
    query_interface : Proc(IDWriteTextRenderer1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextRenderer1*, UInt32),
    release : Proc(IDWriteTextRenderer1*, UInt32),
    is_pixel_snapping_disabled : Proc(IDWriteTextRenderer1*, Void*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_current_transform : Proc(IDWriteTextRenderer1*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::HRESULT),
    get_pixels_per_dip : Proc(IDWriteTextRenderer1*, Void*, Float32*, Win32cr::Foundation::HRESULT),
    draw_glyph_run_1 : Proc(IDWriteTextRenderer1*, Void*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, Void*, Win32cr::Foundation::HRESULT),
    draw_underline_1 : Proc(IDWriteTextRenderer1*, Void*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_UNDERLINE*, Void*, Win32cr::Foundation::HRESULT),
    draw_strikethrough_1 : Proc(IDWriteTextRenderer1*, Void*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_STRIKETHROUGH*, Void*, Win32cr::Foundation::HRESULT),
    draw_inline_object_1 : Proc(IDWriteTextRenderer1*, Void*, Float32, Float32, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Void*, Win32cr::Foundation::HRESULT),
    draw_glyph_run_2 : Proc(IDWriteTextRenderer1*, Void*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, Void*, Win32cr::Foundation::HRESULT),
    draw_underline_2 : Proc(IDWriteTextRenderer1*, Void*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, Win32cr::Graphics::DirectWrite::DWRITE_UNDERLINE*, Void*, Win32cr::Foundation::HRESULT),
    draw_strikethrough_2 : Proc(IDWriteTextRenderer1*, Void*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, Win32cr::Graphics::DirectWrite::DWRITE_STRIKETHROUGH*, Void*, Win32cr::Foundation::HRESULT),
    draw_inline_object_2 : Proc(IDWriteTextRenderer1*, Void*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("d3e0e934-22a0-427e-aae4-7d9574b59db1")]
  record IDWriteTextRenderer1, lpVtbl : IDWriteTextRenderer1Vtbl* do
    GUID = LibC::GUID.new(0xd3e0e934_u32, 0x22a0_u16, 0x427e_u16, StaticArray[0xaa_u8, 0xe4_u8, 0x7d_u8, 0x95_u8, 0x74_u8, 0xb5_u8, 0x9d_u8, 0xb1_u8])
    def query_interface(this : IDWriteTextRenderer1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextRenderer1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextRenderer1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def is_pixel_snapping_disabled(this : IDWriteTextRenderer1*, clientDrawingContext : Void*, isDisabled : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_pixel_snapping_disabled.call(this, clientDrawingContext, isDisabled)
    end
    def get_current_transform(this : IDWriteTextRenderer1*, clientDrawingContext : Void*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_transform.call(this, clientDrawingContext, transform)
    end
    def get_pixels_per_dip(this : IDWriteTextRenderer1*, clientDrawingContext : Void*, pixelsPerDip : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_pixels_per_dip.call(this, clientDrawingContext, pixelsPerDip)
    end
    def draw_glyph_run_1(this : IDWriteTextRenderer1*, clientDrawingContext : Void*, baselineOriginX : Float32, baselineOriginY : Float32, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, glyphRunDescription : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, clientDrawingEffect : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw_glyph_run_1.call(this, clientDrawingContext, baselineOriginX, baselineOriginY, measuringMode, glyphRun, glyphRunDescription, clientDrawingEffect)
    end
    def draw_underline_1(this : IDWriteTextRenderer1*, clientDrawingContext : Void*, baselineOriginX : Float32, baselineOriginY : Float32, underline : Win32cr::Graphics::DirectWrite::DWRITE_UNDERLINE*, clientDrawingEffect : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw_underline_1.call(this, clientDrawingContext, baselineOriginX, baselineOriginY, underline, clientDrawingEffect)
    end
    def draw_strikethrough_1(this : IDWriteTextRenderer1*, clientDrawingContext : Void*, baselineOriginX : Float32, baselineOriginY : Float32, strikethrough : Win32cr::Graphics::DirectWrite::DWRITE_STRIKETHROUGH*, clientDrawingEffect : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw_strikethrough_1.call(this, clientDrawingContext, baselineOriginX, baselineOriginY, strikethrough, clientDrawingEffect)
    end
    def draw_inline_object_1(this : IDWriteTextRenderer1*, clientDrawingContext : Void*, originX : Float32, originY : Float32, inlineObject : Void*, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, clientDrawingEffect : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw_inline_object_1.call(this, clientDrawingContext, originX, originY, inlineObject, isSideways, isRightToLeft, clientDrawingEffect)
    end
    def draw_glyph_run_2(this : IDWriteTextRenderer1*, clientDrawingContext : Void*, baselineOriginX : Float32, baselineOriginY : Float32, orientationAngle : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, glyphRunDescription : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, clientDrawingEffect : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw_glyph_run_2.call(this, clientDrawingContext, baselineOriginX, baselineOriginY, orientationAngle, measuringMode, glyphRun, glyphRunDescription, clientDrawingEffect)
    end
    def draw_underline_2(this : IDWriteTextRenderer1*, clientDrawingContext : Void*, baselineOriginX : Float32, baselineOriginY : Float32, orientationAngle : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, underline : Win32cr::Graphics::DirectWrite::DWRITE_UNDERLINE*, clientDrawingEffect : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw_underline_2.call(this, clientDrawingContext, baselineOriginX, baselineOriginY, orientationAngle, underline, clientDrawingEffect)
    end
    def draw_strikethrough_2(this : IDWriteTextRenderer1*, clientDrawingContext : Void*, baselineOriginX : Float32, baselineOriginY : Float32, orientationAngle : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, strikethrough : Win32cr::Graphics::DirectWrite::DWRITE_STRIKETHROUGH*, clientDrawingEffect : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw_strikethrough_2.call(this, clientDrawingContext, baselineOriginX, baselineOriginY, orientationAngle, strikethrough, clientDrawingEffect)
    end
    def draw_inline_object_2(this : IDWriteTextRenderer1*, clientDrawingContext : Void*, originX : Float32, originY : Float32, orientationAngle : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, inlineObject : Void*, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, clientDrawingEffect : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw_inline_object_2.call(this, clientDrawingContext, originX, originY, orientationAngle, inlineObject, isSideways, isRightToLeft, clientDrawingEffect)
    end

  end

  @[Extern]
  record IDWriteTextFormat1Vtbl,
    query_interface : Proc(IDWriteTextFormat1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextFormat1*, UInt32),
    release : Proc(IDWriteTextFormat1*, UInt32),
    set_text_alignment : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_paragraph_alignment : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_word_wrapping : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING, Win32cr::Foundation::HRESULT),
    set_reading_direction : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION, Win32cr::Foundation::HRESULT),
    set_flow_direction : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION, Win32cr::Foundation::HRESULT),
    set_incremental_tab_stop : Proc(IDWriteTextFormat1*, Float32, Win32cr::Foundation::HRESULT),
    set_trimming : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void*, Win32cr::Foundation::HRESULT),
    set_line_spacing_1 : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, Float32, Float32, Win32cr::Foundation::HRESULT),
    get_text_alignment : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT),
    get_paragraph_alignment : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT),
    get_word_wrapping : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING),
    get_reading_direction : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION),
    get_flow_direction : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION),
    get_incremental_tab_stop : Proc(IDWriteTextFormat1*, Float32),
    get_trimming : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void**, Win32cr::Foundation::HRESULT),
    get_line_spacing_1 : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, Float32*, Float32*, Win32cr::Foundation::HRESULT),
    get_font_collection_1 : Proc(IDWriteTextFormat1*, Void**, Win32cr::Foundation::HRESULT),
    get_font_family_name_length_1 : Proc(IDWriteTextFormat1*, UInt32),
    get_font_family_name_1 : Proc(IDWriteTextFormat1*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_font_weight_1 : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_font_style_1 : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    get_font_stretch_1 : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_font_size_1 : Proc(IDWriteTextFormat1*, Float32),
    get_locale_name_length_1 : Proc(IDWriteTextFormat1*, UInt32),
    get_locale_name_1 : Proc(IDWriteTextFormat1*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    set_vertical_glyph_orientation : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION, Win32cr::Foundation::HRESULT),
    get_vertical_glyph_orientation : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION),
    set_last_line_wrapping : Proc(IDWriteTextFormat1*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_last_line_wrapping : Proc(IDWriteTextFormat1*, Win32cr::Foundation::BOOL),
    set_optical_alignment : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT, Win32cr::Foundation::HRESULT),
    get_optical_alignment : Proc(IDWriteTextFormat1*, Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT),
    set_font_fallback : Proc(IDWriteTextFormat1*, Void*, Win32cr::Foundation::HRESULT),
    get_font_fallback : Proc(IDWriteTextFormat1*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("5f174b49-0d8b-4cfb-8bca-f1cce9d06c67")]
  record IDWriteTextFormat1, lpVtbl : IDWriteTextFormat1Vtbl* do
    GUID = LibC::GUID.new(0x5f174b49_u32, 0xd8b_u16, 0x4cfb_u16, StaticArray[0x8b_u8, 0xca_u8, 0xf1_u8, 0xcc_u8, 0xe9_u8, 0xd0_u8, 0x6c_u8, 0x67_u8])
    def query_interface(this : IDWriteTextFormat1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextFormat1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextFormat1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_text_alignment(this : IDWriteTextFormat1*, textAlignment : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_text_alignment.call(this, textAlignment)
    end
    def set_paragraph_alignment(this : IDWriteTextFormat1*, paragraphAlignment : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_paragraph_alignment.call(this, paragraphAlignment)
    end
    def set_word_wrapping(this : IDWriteTextFormat1*, wordWrapping : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_word_wrapping.call(this, wordWrapping)
    end
    def set_reading_direction(this : IDWriteTextFormat1*, readingDirection : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_reading_direction.call(this, readingDirection)
    end
    def set_flow_direction(this : IDWriteTextFormat1*, flowDirection : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flow_direction.call(this, flowDirection)
    end
    def set_incremental_tab_stop(this : IDWriteTextFormat1*, incrementalTabStop : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_incremental_tab_stop.call(this, incrementalTabStop)
    end
    def set_trimming(this : IDWriteTextFormat1*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def set_line_spacing_1(this : IDWriteTextFormat1*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, lineSpacing : Float32, baseline : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_text_alignment(this : IDWriteTextFormat1*) : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT
      @lpVtbl.try &.value.get_text_alignment.call(this)
    end
    def get_paragraph_alignment(this : IDWriteTextFormat1*) : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT
      @lpVtbl.try &.value.get_paragraph_alignment.call(this)
    end
    def get_word_wrapping(this : IDWriteTextFormat1*) : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING
      @lpVtbl.try &.value.get_word_wrapping.call(this)
    end
    def get_reading_direction(this : IDWriteTextFormat1*) : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION
      @lpVtbl.try &.value.get_reading_direction.call(this)
    end
    def get_flow_direction(this : IDWriteTextFormat1*) : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION
      @lpVtbl.try &.value.get_flow_direction.call(this)
    end
    def get_incremental_tab_stop(this : IDWriteTextFormat1*) : Float32
      @lpVtbl.try &.value.get_incremental_tab_stop.call(this)
    end
    def get_trimming(this : IDWriteTextFormat1*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def get_line_spacing_1(this : IDWriteTextFormat1*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, lineSpacing : Float32*, baseline : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_font_collection_1(this : IDWriteTextFormat1*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection_1.call(this, fontCollection)
    end
    def get_font_family_name_length_1(this : IDWriteTextFormat1*) : UInt32
      @lpVtbl.try &.value.get_font_family_name_length_1.call(this)
    end
    def get_font_family_name_1(this : IDWriteTextFormat1*, fontFamilyName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_1.call(this, fontFamilyName, nameSize)
    end
    def get_font_weight_1(this : IDWriteTextFormat1*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_font_weight_1.call(this)
    end
    def get_font_style_1(this : IDWriteTextFormat1*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_font_style_1.call(this)
    end
    def get_font_stretch_1(this : IDWriteTextFormat1*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_font_stretch_1.call(this)
    end
    def get_font_size_1(this : IDWriteTextFormat1*) : Float32
      @lpVtbl.try &.value.get_font_size_1.call(this)
    end
    def get_locale_name_length_1(this : IDWriteTextFormat1*) : UInt32
      @lpVtbl.try &.value.get_locale_name_length_1.call(this)
    end
    def get_locale_name_1(this : IDWriteTextFormat1*, localeName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_1.call(this, localeName, nameSize)
    end
    def set_vertical_glyph_orientation(this : IDWriteTextFormat1*, glyphOrientation : Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_vertical_glyph_orientation.call(this, glyphOrientation)
    end
    def get_vertical_glyph_orientation(this : IDWriteTextFormat1*) : Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION
      @lpVtbl.try &.value.get_vertical_glyph_orientation.call(this)
    end
    def set_last_line_wrapping(this : IDWriteTextFormat1*, isLastLineWrappingEnabled : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_last_line_wrapping.call(this, isLastLineWrappingEnabled)
    end
    def get_last_line_wrapping(this : IDWriteTextFormat1*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.get_last_line_wrapping.call(this)
    end
    def set_optical_alignment(this : IDWriteTextFormat1*, opticalAlignment : Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_optical_alignment.call(this, opticalAlignment)
    end
    def get_optical_alignment(this : IDWriteTextFormat1*) : Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT
      @lpVtbl.try &.value.get_optical_alignment.call(this)
    end
    def set_font_fallback(this : IDWriteTextFormat1*, fontFallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_fallback.call(this, fontFallback)
    end
    def get_font_fallback(this : IDWriteTextFormat1*, fontFallback : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_fallback.call(this, fontFallback)
    end

  end

  @[Extern]
  record IDWriteTextLayout2Vtbl,
    query_interface : Proc(IDWriteTextLayout2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextLayout2*, UInt32),
    release : Proc(IDWriteTextLayout2*, UInt32),
    set_text_alignment : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_paragraph_alignment : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_word_wrapping : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING, Win32cr::Foundation::HRESULT),
    set_reading_direction : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION, Win32cr::Foundation::HRESULT),
    set_flow_direction : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION, Win32cr::Foundation::HRESULT),
    set_incremental_tab_stop : Proc(IDWriteTextLayout2*, Float32, Win32cr::Foundation::HRESULT),
    set_trimming : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void*, Win32cr::Foundation::HRESULT),
    set_line_spacing_1 : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, Float32, Float32, Win32cr::Foundation::HRESULT),
    get_text_alignment : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT),
    get_paragraph_alignment : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT),
    get_word_wrapping : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING),
    get_reading_direction : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION),
    get_flow_direction : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION),
    get_incremental_tab_stop : Proc(IDWriteTextLayout2*, Float32),
    get_trimming : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void**, Win32cr::Foundation::HRESULT),
    get_line_spacing_1 : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, Float32*, Float32*, Win32cr::Foundation::HRESULT),
    get_font_collection_1 : Proc(IDWriteTextLayout2*, Void**, Win32cr::Foundation::HRESULT),
    get_font_family_name_length_1 : Proc(IDWriteTextLayout2*, UInt32),
    get_font_family_name_1 : Proc(IDWriteTextLayout2*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_font_weight_1 : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_font_style_1 : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    get_font_stretch_1 : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_font_size_1 : Proc(IDWriteTextLayout2*, Float32),
    get_locale_name_length_1 : Proc(IDWriteTextLayout2*, UInt32),
    get_locale_name_1 : Proc(IDWriteTextLayout2*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    set_max_width : Proc(IDWriteTextLayout2*, Float32, Win32cr::Foundation::HRESULT),
    set_max_height : Proc(IDWriteTextLayout2*, Float32, Win32cr::Foundation::HRESULT),
    set_font_collection : Proc(IDWriteTextLayout2*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_family_name : Proc(IDWriteTextLayout2*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_weight : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_style : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_stretch : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_size : Proc(IDWriteTextLayout2*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_underline : Proc(IDWriteTextLayout2*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_strikethrough : Proc(IDWriteTextLayout2*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_drawing_effect : Proc(IDWriteTextLayout2*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_inline_object : Proc(IDWriteTextLayout2*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_typography : Proc(IDWriteTextLayout2*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_locale_name : Proc(IDWriteTextLayout2*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    get_max_width : Proc(IDWriteTextLayout2*, Float32),
    get_max_height : Proc(IDWriteTextLayout2*, Float32),
    get_font_collection_2 : Proc(IDWriteTextLayout2*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_family_name_length_2 : Proc(IDWriteTextLayout2*, UInt32, UInt32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_family_name_2 : Proc(IDWriteTextLayout2*, UInt32, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_weight_2 : Proc(IDWriteTextLayout2*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_style_2 : Proc(IDWriteTextLayout2*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_stretch_2 : Proc(IDWriteTextLayout2*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_size_2 : Proc(IDWriteTextLayout2*, UInt32, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_underline : Proc(IDWriteTextLayout2*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_strikethrough : Proc(IDWriteTextLayout2*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_drawing_effect : Proc(IDWriteTextLayout2*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_inline_object : Proc(IDWriteTextLayout2*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_typography : Proc(IDWriteTextLayout2*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_locale_name_length_2 : Proc(IDWriteTextLayout2*, UInt32, UInt32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_locale_name_2 : Proc(IDWriteTextLayout2*, UInt32, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    draw : Proc(IDWriteTextLayout2*, Void*, Void*, Float32, Float32, Win32cr::Foundation::HRESULT),
    get_line_metrics_1 : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_METRICS*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_metrics_1 : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS*, Win32cr::Foundation::HRESULT),
    get_overhang_metrics : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_OVERHANG_METRICS*, Win32cr::Foundation::HRESULT),
    get_cluster_metrics : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_CLUSTER_METRICS*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    determine_min_width : Proc(IDWriteTextLayout2*, Float32*, Win32cr::Foundation::HRESULT),
    hit_test_point : Proc(IDWriteTextLayout2*, Float32, Float32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, Win32cr::Foundation::HRESULT),
    hit_test_text_position : Proc(IDWriteTextLayout2*, UInt32, Win32cr::Foundation::BOOL, Float32*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, Win32cr::Foundation::HRESULT),
    hit_test_text_range : Proc(IDWriteTextLayout2*, UInt32, UInt32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    set_pair_kerning : Proc(IDWriteTextLayout2*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    get_pair_kerning : Proc(IDWriteTextLayout2*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    set_character_spacing : Proc(IDWriteTextLayout2*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    get_character_spacing : Proc(IDWriteTextLayout2*, UInt32, Float32*, Float32*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_metrics_2 : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS1*, Win32cr::Foundation::HRESULT),
    set_vertical_glyph_orientation : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION, Win32cr::Foundation::HRESULT),
    get_vertical_glyph_orientation : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION),
    set_last_line_wrapping : Proc(IDWriteTextLayout2*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_last_line_wrapping : Proc(IDWriteTextLayout2*, Win32cr::Foundation::BOOL),
    set_optical_alignment : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT, Win32cr::Foundation::HRESULT),
    get_optical_alignment : Proc(IDWriteTextLayout2*, Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT),
    set_font_fallback : Proc(IDWriteTextLayout2*, Void*, Win32cr::Foundation::HRESULT),
    get_font_fallback : Proc(IDWriteTextLayout2*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("1093c18f-8d5e-43f0-b064-0917311b525e")]
  record IDWriteTextLayout2, lpVtbl : IDWriteTextLayout2Vtbl* do
    GUID = LibC::GUID.new(0x1093c18f_u32, 0x8d5e_u16, 0x43f0_u16, StaticArray[0xb0_u8, 0x64_u8, 0x9_u8, 0x17_u8, 0x31_u8, 0x1b_u8, 0x52_u8, 0x5e_u8])
    def query_interface(this : IDWriteTextLayout2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextLayout2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextLayout2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_text_alignment(this : IDWriteTextLayout2*, textAlignment : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_text_alignment.call(this, textAlignment)
    end
    def set_paragraph_alignment(this : IDWriteTextLayout2*, paragraphAlignment : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_paragraph_alignment.call(this, paragraphAlignment)
    end
    def set_word_wrapping(this : IDWriteTextLayout2*, wordWrapping : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_word_wrapping.call(this, wordWrapping)
    end
    def set_reading_direction(this : IDWriteTextLayout2*, readingDirection : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_reading_direction.call(this, readingDirection)
    end
    def set_flow_direction(this : IDWriteTextLayout2*, flowDirection : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flow_direction.call(this, flowDirection)
    end
    def set_incremental_tab_stop(this : IDWriteTextLayout2*, incrementalTabStop : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_incremental_tab_stop.call(this, incrementalTabStop)
    end
    def set_trimming(this : IDWriteTextLayout2*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def set_line_spacing_1(this : IDWriteTextLayout2*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, lineSpacing : Float32, baseline : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_text_alignment(this : IDWriteTextLayout2*) : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT
      @lpVtbl.try &.value.get_text_alignment.call(this)
    end
    def get_paragraph_alignment(this : IDWriteTextLayout2*) : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT
      @lpVtbl.try &.value.get_paragraph_alignment.call(this)
    end
    def get_word_wrapping(this : IDWriteTextLayout2*) : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING
      @lpVtbl.try &.value.get_word_wrapping.call(this)
    end
    def get_reading_direction(this : IDWriteTextLayout2*) : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION
      @lpVtbl.try &.value.get_reading_direction.call(this)
    end
    def get_flow_direction(this : IDWriteTextLayout2*) : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION
      @lpVtbl.try &.value.get_flow_direction.call(this)
    end
    def get_incremental_tab_stop(this : IDWriteTextLayout2*) : Float32
      @lpVtbl.try &.value.get_incremental_tab_stop.call(this)
    end
    def get_trimming(this : IDWriteTextLayout2*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def get_line_spacing_1(this : IDWriteTextLayout2*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, lineSpacing : Float32*, baseline : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_font_collection_1(this : IDWriteTextLayout2*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection_1.call(this, fontCollection)
    end
    def get_font_family_name_length_1(this : IDWriteTextLayout2*) : UInt32
      @lpVtbl.try &.value.get_font_family_name_length_1.call(this)
    end
    def get_font_family_name_1(this : IDWriteTextLayout2*, fontFamilyName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_1.call(this, fontFamilyName, nameSize)
    end
    def get_font_weight_1(this : IDWriteTextLayout2*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_font_weight_1.call(this)
    end
    def get_font_style_1(this : IDWriteTextLayout2*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_font_style_1.call(this)
    end
    def get_font_stretch_1(this : IDWriteTextLayout2*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_font_stretch_1.call(this)
    end
    def get_font_size_1(this : IDWriteTextLayout2*) : Float32
      @lpVtbl.try &.value.get_font_size_1.call(this)
    end
    def get_locale_name_length_1(this : IDWriteTextLayout2*) : UInt32
      @lpVtbl.try &.value.get_locale_name_length_1.call(this)
    end
    def get_locale_name_1(this : IDWriteTextLayout2*, localeName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_1.call(this, localeName, nameSize)
    end
    def set_max_width(this : IDWriteTextLayout2*, maxWidth : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_max_width.call(this, maxWidth)
    end
    def set_max_height(this : IDWriteTextLayout2*, maxHeight : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_max_height.call(this, maxHeight)
    end
    def set_font_collection(this : IDWriteTextLayout2*, fontCollection : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_collection.call(this, fontCollection, textRange)
    end
    def set_font_family_name(this : IDWriteTextLayout2*, fontFamilyName : Win32cr::Foundation::PWSTR, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_family_name.call(this, fontFamilyName, textRange)
    end
    def set_font_weight(this : IDWriteTextLayout2*, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_weight.call(this, fontWeight, textRange)
    end
    def set_font_style(this : IDWriteTextLayout2*, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_style.call(this, fontStyle, textRange)
    end
    def set_font_stretch(this : IDWriteTextLayout2*, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_stretch.call(this, fontStretch, textRange)
    end
    def set_font_size(this : IDWriteTextLayout2*, fontSize : Float32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_size.call(this, fontSize, textRange)
    end
    def set_underline(this : IDWriteTextLayout2*, hasUnderline : Win32cr::Foundation::BOOL, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_underline.call(this, hasUnderline, textRange)
    end
    def set_strikethrough(this : IDWriteTextLayout2*, hasStrikethrough : Win32cr::Foundation::BOOL, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_strikethrough.call(this, hasStrikethrough, textRange)
    end
    def set_drawing_effect(this : IDWriteTextLayout2*, drawingEffect : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_drawing_effect.call(this, drawingEffect, textRange)
    end
    def set_inline_object(this : IDWriteTextLayout2*, inlineObject : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_inline_object.call(this, inlineObject, textRange)
    end
    def set_typography(this : IDWriteTextLayout2*, typography : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_typography.call(this, typography, textRange)
    end
    def set_locale_name(this : IDWriteTextLayout2*, localeName : Win32cr::Foundation::PWSTR, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_locale_name.call(this, localeName, textRange)
    end
    def get_max_width(this : IDWriteTextLayout2*) : Float32
      @lpVtbl.try &.value.get_max_width.call(this)
    end
    def get_max_height(this : IDWriteTextLayout2*) : Float32
      @lpVtbl.try &.value.get_max_height.call(this)
    end
    def get_font_collection_2(this : IDWriteTextLayout2*, currentPosition : UInt32, fontCollection : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection_2.call(this, currentPosition, fontCollection, textRange)
    end
    def get_font_family_name_length_2(this : IDWriteTextLayout2*, currentPosition : UInt32, nameLength : UInt32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_length_2.call(this, currentPosition, nameLength, textRange)
    end
    def get_font_family_name_2(this : IDWriteTextLayout2*, currentPosition : UInt32, fontFamilyName : UInt16*, nameSize : UInt32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_2.call(this, currentPosition, fontFamilyName, nameSize, textRange)
    end
    def get_font_weight_2(this : IDWriteTextLayout2*, currentPosition : UInt32, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_weight_2.call(this, currentPosition, fontWeight, textRange)
    end
    def get_font_style_2(this : IDWriteTextLayout2*, currentPosition : UInt32, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_style_2.call(this, currentPosition, fontStyle, textRange)
    end
    def get_font_stretch_2(this : IDWriteTextLayout2*, currentPosition : UInt32, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_stretch_2.call(this, currentPosition, fontStretch, textRange)
    end
    def get_font_size_2(this : IDWriteTextLayout2*, currentPosition : UInt32, fontSize : Float32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_size_2.call(this, currentPosition, fontSize, textRange)
    end
    def get_underline(this : IDWriteTextLayout2*, currentPosition : UInt32, hasUnderline : Win32cr::Foundation::BOOL*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_underline.call(this, currentPosition, hasUnderline, textRange)
    end
    def get_strikethrough(this : IDWriteTextLayout2*, currentPosition : UInt32, hasStrikethrough : Win32cr::Foundation::BOOL*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_strikethrough.call(this, currentPosition, hasStrikethrough, textRange)
    end
    def get_drawing_effect(this : IDWriteTextLayout2*, currentPosition : UInt32, drawingEffect : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_drawing_effect.call(this, currentPosition, drawingEffect, textRange)
    end
    def get_inline_object(this : IDWriteTextLayout2*, currentPosition : UInt32, inlineObject : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_inline_object.call(this, currentPosition, inlineObject, textRange)
    end
    def get_typography(this : IDWriteTextLayout2*, currentPosition : UInt32, typography : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_typography.call(this, currentPosition, typography, textRange)
    end
    def get_locale_name_length_2(this : IDWriteTextLayout2*, currentPosition : UInt32, nameLength : UInt32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_length_2.call(this, currentPosition, nameLength, textRange)
    end
    def get_locale_name_2(this : IDWriteTextLayout2*, currentPosition : UInt32, localeName : UInt16*, nameSize : UInt32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_2.call(this, currentPosition, localeName, nameSize, textRange)
    end
    def draw(this : IDWriteTextLayout2*, clientDrawingContext : Void*, renderer : Void*, originX : Float32, originY : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw.call(this, clientDrawingContext, renderer, originX, originY)
    end
    def get_line_metrics_1(this : IDWriteTextLayout2*, lineMetrics : Win32cr::Graphics::DirectWrite::DWRITE_LINE_METRICS*, maxLineCount : UInt32, actualLineCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_metrics_1.call(this, lineMetrics, maxLineCount, actualLineCount)
    end
    def get_metrics_1(this : IDWriteTextLayout2*, textMetrics : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_metrics_1.call(this, textMetrics)
    end
    def get_overhang_metrics(this : IDWriteTextLayout2*, overhangs : Win32cr::Graphics::DirectWrite::DWRITE_OVERHANG_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_overhang_metrics.call(this, overhangs)
    end
    def get_cluster_metrics(this : IDWriteTextLayout2*, clusterMetrics : Win32cr::Graphics::DirectWrite::DWRITE_CLUSTER_METRICS*, maxClusterCount : UInt32, actualClusterCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cluster_metrics.call(this, clusterMetrics, maxClusterCount, actualClusterCount)
    end
    def determine_min_width(this : IDWriteTextLayout2*, minWidth : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.determine_min_width.call(this, minWidth)
    end
    def hit_test_point(this : IDWriteTextLayout2*, pointX : Float32, pointY : Float32, isTrailingHit : Win32cr::Foundation::BOOL*, isInside : Win32cr::Foundation::BOOL*, hitTestMetrics : Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test_point.call(this, pointX, pointY, isTrailingHit, isInside, hitTestMetrics)
    end
    def hit_test_text_position(this : IDWriteTextLayout2*, textPosition : UInt32, isTrailingHit : Win32cr::Foundation::BOOL, pointX : Float32*, pointY : Float32*, hitTestMetrics : Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test_text_position.call(this, textPosition, isTrailingHit, pointX, pointY, hitTestMetrics)
    end
    def hit_test_text_range(this : IDWriteTextLayout2*, textPosition : UInt32, textLength : UInt32, originX : Float32, originY : Float32, hitTestMetrics : Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, maxHitTestMetricsCount : UInt32, actualHitTestMetricsCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test_text_range.call(this, textPosition, textLength, originX, originY, hitTestMetrics, maxHitTestMetricsCount, actualHitTestMetricsCount)
    end
    def set_pair_kerning(this : IDWriteTextLayout2*, isPairKerningEnabled : Win32cr::Foundation::BOOL, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_pair_kerning.call(this, isPairKerningEnabled, textRange)
    end
    def get_pair_kerning(this : IDWriteTextLayout2*, currentPosition : UInt32, isPairKerningEnabled : Win32cr::Foundation::BOOL*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_pair_kerning.call(this, currentPosition, isPairKerningEnabled, textRange)
    end
    def set_character_spacing(this : IDWriteTextLayout2*, leadingSpacing : Float32, trailingSpacing : Float32, minimumAdvanceWidth : Float32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_character_spacing.call(this, leadingSpacing, trailingSpacing, minimumAdvanceWidth, textRange)
    end
    def get_character_spacing(this : IDWriteTextLayout2*, currentPosition : UInt32, leadingSpacing : Float32*, trailingSpacing : Float32*, minimumAdvanceWidth : Float32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_character_spacing.call(this, currentPosition, leadingSpacing, trailingSpacing, minimumAdvanceWidth, textRange)
    end
    def get_metrics_2(this : IDWriteTextLayout2*, textMetrics : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS1*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_metrics_2.call(this, textMetrics)
    end
    def set_vertical_glyph_orientation(this : IDWriteTextLayout2*, glyphOrientation : Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_vertical_glyph_orientation.call(this, glyphOrientation)
    end
    def get_vertical_glyph_orientation(this : IDWriteTextLayout2*) : Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION
      @lpVtbl.try &.value.get_vertical_glyph_orientation.call(this)
    end
    def set_last_line_wrapping(this : IDWriteTextLayout2*, isLastLineWrappingEnabled : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_last_line_wrapping.call(this, isLastLineWrappingEnabled)
    end
    def get_last_line_wrapping(this : IDWriteTextLayout2*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.get_last_line_wrapping.call(this)
    end
    def set_optical_alignment(this : IDWriteTextLayout2*, opticalAlignment : Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_optical_alignment.call(this, opticalAlignment)
    end
    def get_optical_alignment(this : IDWriteTextLayout2*) : Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT
      @lpVtbl.try &.value.get_optical_alignment.call(this)
    end
    def set_font_fallback(this : IDWriteTextLayout2*, fontFallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_fallback.call(this, fontFallback)
    end
    def get_font_fallback(this : IDWriteTextLayout2*, fontFallback : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_fallback.call(this, fontFallback)
    end

  end

  @[Extern]
  record IDWriteTextAnalyzer2Vtbl,
    query_interface : Proc(IDWriteTextAnalyzer2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextAnalyzer2*, UInt32),
    release : Proc(IDWriteTextAnalyzer2*, UInt32),
    analyze_script : Proc(IDWriteTextAnalyzer2*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    analyze_bidi : Proc(IDWriteTextAnalyzer2*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    analyze_number_substitution : Proc(IDWriteTextAnalyzer2*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    analyze_line_breakpoints : Proc(IDWriteTextAnalyzer2*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    get_glyphs : Proc(IDWriteTextAnalyzer2*, UInt16*, UInt32, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, UInt32*, UInt32, UInt32, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt32*, Win32cr::Foundation::HRESULT),
    get_glyph_placements : Proc(IDWriteTextAnalyzer2*, UInt16*, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, UInt32, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt32, Void*, Float32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, UInt32*, UInt32, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_placements : Proc(IDWriteTextAnalyzer2*, UInt16*, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, UInt32, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt32, Void*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, UInt32*, UInt32, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Foundation::HRESULT),
    apply_character_spacing : Proc(IDWriteTextAnalyzer2*, Float32, Float32, Float32, UInt32, UInt32, UInt16*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Foundation::HRESULT),
    get_baseline : Proc(IDWriteTextAnalyzer2*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_BASELINE, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, Win32cr::Foundation::PWSTR, Int32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    analyze_vertical_glyph_orientation : Proc(IDWriteTextAnalyzer2*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    get_glyph_orientation_transform_1 : Proc(IDWriteTextAnalyzer2*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::HRESULT),
    get_script_properties : Proc(IDWriteTextAnalyzer2*, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_PROPERTIES*, Win32cr::Foundation::HRESULT),
    get_text_complexity : Proc(IDWriteTextAnalyzer2*, UInt16*, UInt32, Void*, Win32cr::Foundation::BOOL*, UInt32*, UInt16*, Win32cr::Foundation::HRESULT),
    get_justification_opportunities : Proc(IDWriteTextAnalyzer2*, Void*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, UInt32, UInt32, UInt16*, UInt16*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, Win32cr::Graphics::DirectWrite::DWRITE_JUSTIFICATION_OPPORTUNITY*, Win32cr::Foundation::HRESULT),
    justify_glyph_advances : Proc(IDWriteTextAnalyzer2*, Float32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_JUSTIFICATION_OPPORTUNITY*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Foundation::HRESULT),
    get_justified_glyphs : Proc(IDWriteTextAnalyzer2*, Void*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, UInt32, UInt32, UInt32, UInt16*, UInt16*, Float32*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt32*, UInt16*, UInt16*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, Win32cr::Foundation::HRESULT),
    get_glyph_orientation_transform_2 : Proc(IDWriteTextAnalyzer2*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, Win32cr::Foundation::BOOL, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::HRESULT),
    get_typographic_features : Proc(IDWriteTextAnalyzer2*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, Win32cr::Foundation::PWSTR, UInt32, UInt32*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FEATURE_TAG*, Win32cr::Foundation::HRESULT),
    check_typographic_feature : Proc(IDWriteTextAnalyzer2*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FEATURE_TAG, UInt32, UInt16*, UInt8*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("553a9ff3-5693-4df7-b52b-74806f7f2eb9")]
  record IDWriteTextAnalyzer2, lpVtbl : IDWriteTextAnalyzer2Vtbl* do
    GUID = LibC::GUID.new(0x553a9ff3_u32, 0x5693_u16, 0x4df7_u16, StaticArray[0xb5_u8, 0x2b_u8, 0x74_u8, 0x80_u8, 0x6f_u8, 0x7f_u8, 0x2e_u8, 0xb9_u8])
    def query_interface(this : IDWriteTextAnalyzer2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextAnalyzer2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextAnalyzer2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def analyze_script(this : IDWriteTextAnalyzer2*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, analysisSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze_script.call(this, analysisSource, textPosition, textLength, analysisSink)
    end
    def analyze_bidi(this : IDWriteTextAnalyzer2*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, analysisSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze_bidi.call(this, analysisSource, textPosition, textLength, analysisSink)
    end
    def analyze_number_substitution(this : IDWriteTextAnalyzer2*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, analysisSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze_number_substitution.call(this, analysisSource, textPosition, textLength, analysisSink)
    end
    def analyze_line_breakpoints(this : IDWriteTextAnalyzer2*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, analysisSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze_line_breakpoints.call(this, analysisSource, textPosition, textLength, analysisSink)
    end
    def get_glyphs(this : IDWriteTextAnalyzer2*, textString : UInt16*, textLength : UInt32, fontFace : Void*, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, localeName : Win32cr::Foundation::PWSTR, numberSubstitution : Void*, features : Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, featureRangeLengths : UInt32*, featureRanges : UInt32, maxGlyphCount : UInt32, clusterMap : UInt16*, textProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, glyphIndices : UInt16*, glyphProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, actualGlyphCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyphs.call(this, textString, textLength, fontFace, isSideways, isRightToLeft, scriptAnalysis, localeName, numberSubstitution, features, featureRangeLengths, featureRanges, maxGlyphCount, clusterMap, textProps, glyphIndices, glyphProps, actualGlyphCount)
    end
    def get_glyph_placements(this : IDWriteTextAnalyzer2*, textString : UInt16*, clusterMap : UInt16*, textProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, textLength : UInt32, glyphIndices : UInt16*, glyphProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, glyphCount : UInt32, fontFace : Void*, fontEmSize : Float32, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, localeName : Win32cr::Foundation::PWSTR, features : Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, featureRangeLengths : UInt32*, featureRanges : UInt32, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_placements.call(this, textString, clusterMap, textProps, textLength, glyphIndices, glyphProps, glyphCount, fontFace, fontEmSize, isSideways, isRightToLeft, scriptAnalysis, localeName, features, featureRangeLengths, featureRanges, glyphAdvances, glyphOffsets)
    end
    def get_gdi_compatible_glyph_placements(this : IDWriteTextAnalyzer2*, textString : UInt16*, clusterMap : UInt16*, textProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_TEXT_PROPERTIES*, textLength : UInt32, glyphIndices : UInt16*, glyphProps : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, glyphCount : UInt32, fontFace : Void*, fontEmSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS*, localeName : Win32cr::Foundation::PWSTR, features : Win32cr::Graphics::DirectWrite::DWRITE_TYPOGRAPHIC_FEATURES**, featureRangeLengths : UInt32*, featureRanges : UInt32, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_placements.call(this, textString, clusterMap, textProps, textLength, glyphIndices, glyphProps, glyphCount, fontFace, fontEmSize, pixelsPerDip, transform, useGdiNatural, isSideways, isRightToLeft, scriptAnalysis, localeName, features, featureRangeLengths, featureRanges, glyphAdvances, glyphOffsets)
    end
    def apply_character_spacing(this : IDWriteTextAnalyzer2*, leadingSpacing : Float32, trailingSpacing : Float32, minimumAdvanceWidth : Float32, textLength : UInt32, glyphCount : UInt32, clusterMap : UInt16*, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, glyphProperties : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, modifiedGlyphAdvances : Float32*, modifiedGlyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.apply_character_spacing.call(this, leadingSpacing, trailingSpacing, minimumAdvanceWidth, textLength, glyphCount, clusterMap, glyphAdvances, glyphOffsets, glyphProperties, modifiedGlyphAdvances, modifiedGlyphOffsets)
    end
    def get_baseline(this : IDWriteTextAnalyzer2*, fontFace : Void*, baseline : Win32cr::Graphics::DirectWrite::DWRITE_BASELINE, isVertical : Win32cr::Foundation::BOOL, isSimulationAllowed : Win32cr::Foundation::BOOL, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, localeName : Win32cr::Foundation::PWSTR, baselineCoordinate : Int32*, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_baseline.call(this, fontFace, baseline, isVertical, isSimulationAllowed, scriptAnalysis, localeName, baselineCoordinate, exists)
    end
    def analyze_vertical_glyph_orientation(this : IDWriteTextAnalyzer2*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, analysisSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze_vertical_glyph_orientation.call(this, analysisSource, textPosition, textLength, analysisSink)
    end
    def get_glyph_orientation_transform_1(this : IDWriteTextAnalyzer2*, glyphOrientationAngle : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, isSideways : Win32cr::Foundation::BOOL, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_orientation_transform_1.call(this, glyphOrientationAngle, isSideways, transform)
    end
    def get_script_properties(this : IDWriteTextAnalyzer2*, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, scriptProperties : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_PROPERTIES*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_script_properties.call(this, scriptAnalysis, scriptProperties)
    end
    def get_text_complexity(this : IDWriteTextAnalyzer2*, textString : UInt16*, textLength : UInt32, fontFace : Void*, isTextSimple : Win32cr::Foundation::BOOL*, textLengthRead : UInt32*, glyphIndices : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_text_complexity.call(this, textString, textLength, fontFace, isTextSimple, textLengthRead, glyphIndices)
    end
    def get_justification_opportunities(this : IDWriteTextAnalyzer2*, fontFace : Void*, fontEmSize : Float32, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, textLength : UInt32, glyphCount : UInt32, textString : UInt16*, clusterMap : UInt16*, glyphProperties : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, justificationOpportunities : Win32cr::Graphics::DirectWrite::DWRITE_JUSTIFICATION_OPPORTUNITY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_justification_opportunities.call(this, fontFace, fontEmSize, scriptAnalysis, textLength, glyphCount, textString, clusterMap, glyphProperties, justificationOpportunities)
    end
    def justify_glyph_advances(this : IDWriteTextAnalyzer2*, lineWidth : Float32, glyphCount : UInt32, justificationOpportunities : Win32cr::Graphics::DirectWrite::DWRITE_JUSTIFICATION_OPPORTUNITY*, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, justifiedGlyphAdvances : Float32*, justifiedGlyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.justify_glyph_advances.call(this, lineWidth, glyphCount, justificationOpportunities, glyphAdvances, glyphOffsets, justifiedGlyphAdvances, justifiedGlyphOffsets)
    end
    def get_justified_glyphs(this : IDWriteTextAnalyzer2*, fontFace : Void*, fontEmSize : Float32, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, textLength : UInt32, glyphCount : UInt32, maxGlyphCount : UInt32, clusterMap : UInt16*, glyphIndices : UInt16*, glyphAdvances : Float32*, justifiedGlyphAdvances : Float32*, justifiedGlyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, glyphProperties : Win32cr::Graphics::DirectWrite::DWRITE_SHAPING_GLYPH_PROPERTIES*, actualGlyphCount : UInt32*, modifiedClusterMap : UInt16*, modifiedGlyphIndices : UInt16*, modifiedGlyphAdvances : Float32*, modifiedGlyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_justified_glyphs.call(this, fontFace, fontEmSize, scriptAnalysis, textLength, glyphCount, maxGlyphCount, clusterMap, glyphIndices, glyphAdvances, justifiedGlyphAdvances, justifiedGlyphOffsets, glyphProperties, actualGlyphCount, modifiedClusterMap, modifiedGlyphIndices, modifiedGlyphAdvances, modifiedGlyphOffsets)
    end
    def get_glyph_orientation_transform_2(this : IDWriteTextAnalyzer2*, glyphOrientationAngle : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_ORIENTATION_ANGLE, isSideways : Win32cr::Foundation::BOOL, originX : Float32, originY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_orientation_transform_2.call(this, glyphOrientationAngle, isSideways, originX, originY, transform)
    end
    def get_typographic_features(this : IDWriteTextAnalyzer2*, fontFace : Void*, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, localeName : Win32cr::Foundation::PWSTR, maxTagCount : UInt32, actualTagCount : UInt32*, tags : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FEATURE_TAG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_typographic_features.call(this, fontFace, scriptAnalysis, localeName, maxTagCount, actualTagCount, tags)
    end
    def check_typographic_feature(this : IDWriteTextAnalyzer2*, fontFace : Void*, scriptAnalysis : Win32cr::Graphics::DirectWrite::DWRITE_SCRIPT_ANALYSIS, localeName : Win32cr::Foundation::PWSTR, featureTag : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FEATURE_TAG, glyphCount : UInt32, glyphIndices : UInt16*, featureApplies : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_typographic_feature.call(this, fontFace, scriptAnalysis, localeName, featureTag, glyphCount, glyphIndices, featureApplies)
    end

  end

  @[Extern]
  record IDWriteFontFallbackVtbl,
    query_interface : Proc(IDWriteFontFallback*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFallback*, UInt32),
    release : Proc(IDWriteFontFallback*, UInt32),
    map_characters_1 : Proc(IDWriteFontFallback*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, UInt32*, Void**, Float32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("efa008f9-f7a1-48bf-b05c-f224713cc0ff")]
  record IDWriteFontFallback, lpVtbl : IDWriteFontFallbackVtbl* do
    GUID = LibC::GUID.new(0xefa008f9_u32, 0xf7a1_u16, 0x48bf_u16, StaticArray[0xb0_u8, 0x5c_u8, 0xf2_u8, 0x24_u8, 0x71_u8, 0x3c_u8, 0xc0_u8, 0xff_u8])
    def query_interface(this : IDWriteFontFallback*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFallback*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFallback*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def map_characters_1(this : IDWriteFontFallback*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, baseFontCollection : Void*, baseFamilyName : Win32cr::Foundation::PWSTR, baseWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, baseStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, baseStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, mappedLength : UInt32*, mappedFont : Void**, scale : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.map_characters_1.call(this, analysisSource, textPosition, textLength, baseFontCollection, baseFamilyName, baseWeight, baseStyle, baseStretch, mappedLength, mappedFont, scale)
    end

  end

  @[Extern]
  record IDWriteFontFallbackBuilderVtbl,
    query_interface : Proc(IDWriteFontFallbackBuilder*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFallbackBuilder*, UInt32),
    release : Proc(IDWriteFontFallbackBuilder*, UInt32),
    add_mapping : Proc(IDWriteFontFallbackBuilder*, Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, UInt32, UInt16**, UInt32, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Float32, Win32cr::Foundation::HRESULT),
    add_mappings : Proc(IDWriteFontFallbackBuilder*, Void*, Win32cr::Foundation::HRESULT),
    create_font_fallback : Proc(IDWriteFontFallbackBuilder*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("fd882d06-8aba-4fb8-b849-8be8b73e14de")]
  record IDWriteFontFallbackBuilder, lpVtbl : IDWriteFontFallbackBuilderVtbl* do
    GUID = LibC::GUID.new(0xfd882d06_u32, 0x8aba_u16, 0x4fb8_u16, StaticArray[0xb8_u8, 0x49_u8, 0x8b_u8, 0xe8_u8, 0xb7_u8, 0x3e_u8, 0x14_u8, 0xde_u8])
    def query_interface(this : IDWriteFontFallbackBuilder*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFallbackBuilder*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFallbackBuilder*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_mapping(this : IDWriteFontFallbackBuilder*, ranges : Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, rangesCount : UInt32, targetFamilyNames : UInt16**, targetFamilyNamesCount : UInt32, fontCollection : Void*, localeName : Win32cr::Foundation::PWSTR, baseFamilyName : Win32cr::Foundation::PWSTR, scale : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_mapping.call(this, ranges, rangesCount, targetFamilyNames, targetFamilyNamesCount, fontCollection, localeName, baseFamilyName, scale)
    end
    def add_mappings(this : IDWriteFontFallbackBuilder*, fontFallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_mappings.call(this, fontFallback)
    end
    def create_font_fallback(this : IDWriteFontFallbackBuilder*, fontFallback : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_fallback.call(this, fontFallback)
    end

  end

  @[Extern]
  record IDWriteFont2Vtbl,
    query_interface : Proc(IDWriteFont2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFont2*, UInt32),
    release : Proc(IDWriteFont2*, UInt32),
    get_font_family : Proc(IDWriteFont2*, Void**, Win32cr::Foundation::HRESULT),
    get_weight : Proc(IDWriteFont2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_stretch : Proc(IDWriteFont2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_style : Proc(IDWriteFont2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    is_symbol_font : Proc(IDWriteFont2*, Win32cr::Foundation::BOOL),
    get_face_names : Proc(IDWriteFont2*, Void**, Win32cr::Foundation::HRESULT),
    get_informational_strings : Proc(IDWriteFont2*, Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, Void**, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_simulations : Proc(IDWriteFont2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS),
    get_metrics_1 : Proc(IDWriteFont2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Void),
    has_character_1 : Proc(IDWriteFont2*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    create_font_face_1 : Proc(IDWriteFont2*, Void**, Win32cr::Foundation::HRESULT),
    get_metrics_2 : Proc(IDWriteFont2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*, Void),
    get_panose : Proc(IDWriteFont2*, Win32cr::Graphics::DirectWrite::DWRITE_PANOSE*, Void),
    get_unicode_ranges : Proc(IDWriteFont2*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, UInt32*, Win32cr::Foundation::HRESULT),
    is_monospaced_font : Proc(IDWriteFont2*, Win32cr::Foundation::BOOL),
    is_color_font : Proc(IDWriteFont2*, Win32cr::Foundation::BOOL)


  @[Extern]
  #@[Com("29748ed6-8c9c-4a6a-be0b-d912e8538944")]
  record IDWriteFont2, lpVtbl : IDWriteFont2Vtbl* do
    GUID = LibC::GUID.new(0x29748ed6_u32, 0x8c9c_u16, 0x4a6a_u16, StaticArray[0xbe_u8, 0xb_u8, 0xd9_u8, 0x12_u8, 0xe8_u8, 0x53_u8, 0x89_u8, 0x44_u8])
    def query_interface(this : IDWriteFont2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFont2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFont2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_family(this : IDWriteFont2*, fontFamily : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family.call(this, fontFamily)
    end
    def get_weight(this : IDWriteFont2*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_weight.call(this)
    end
    def get_stretch(this : IDWriteFont2*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_stretch.call(this)
    end
    def get_style(this : IDWriteFont2*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_style.call(this)
    end
    def is_symbol_font(this : IDWriteFont2*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_symbol_font.call(this)
    end
    def get_face_names(this : IDWriteFont2*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_face_names.call(this, names)
    end
    def get_informational_strings(this : IDWriteFont2*, informationalStringID : Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, informationalStrings : Void**, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_informational_strings.call(this, informationalStringID, informationalStrings, exists)
    end
    def get_simulations(this : IDWriteFont2*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS
      @lpVtbl.try &.value.get_simulations.call(this)
    end
    def get_metrics_1(this : IDWriteFont2*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Void
      @lpVtbl.try &.value.get_metrics_1.call(this, fontMetrics)
    end
    def has_character_1(this : IDWriteFont2*, unicodeValue : UInt32, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.has_character_1.call(this, unicodeValue, exists)
    end
    def create_font_face_1(this : IDWriteFont2*, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_1.call(this, fontFace)
    end
    def get_metrics_2(this : IDWriteFont2*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*) : Void
      @lpVtbl.try &.value.get_metrics_2.call(this, fontMetrics)
    end
    def get_panose(this : IDWriteFont2*, panose : Win32cr::Graphics::DirectWrite::DWRITE_PANOSE*) : Void
      @lpVtbl.try &.value.get_panose.call(this, panose)
    end
    def get_unicode_ranges(this : IDWriteFont2*, maxRangeCount : UInt32, unicodeRanges : Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, actualRangeCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_unicode_ranges.call(this, maxRangeCount, unicodeRanges, actualRangeCount)
    end
    def is_monospaced_font(this : IDWriteFont2*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_monospaced_font.call(this)
    end
    def is_color_font(this : IDWriteFont2*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_color_font.call(this)
    end

  end

  @[Extern]
  record IDWriteFontFace2Vtbl,
    query_interface : Proc(IDWriteFontFace2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFace2*, UInt32),
    release : Proc(IDWriteFontFace2*, UInt32),
    get_type : Proc(IDWriteFontFace2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE),
    get_files : Proc(IDWriteFontFace2*, UInt32*, Void**, Win32cr::Foundation::HRESULT),
    get_index : Proc(IDWriteFontFace2*, UInt32),
    get_simulations : Proc(IDWriteFontFace2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS),
    is_symbol_font : Proc(IDWriteFontFace2*, Win32cr::Foundation::BOOL),
    get_metrics_1 : Proc(IDWriteFontFace2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Void),
    get_glyph_count : Proc(IDWriteFontFace2*, UInt16),
    get_design_glyph_metrics : Proc(IDWriteFontFace2*, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_glyph_indices : Proc(IDWriteFontFace2*, UInt32*, UInt32, UInt16*, Win32cr::Foundation::HRESULT),
    try_get_font_table : Proc(IDWriteFontFace2*, UInt32, Void**, UInt32*, Void**, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    release_font_table : Proc(IDWriteFontFace2*, Void*, Void),
    get_glyph_run_outline : Proc(IDWriteFontFace2*, Float32, UInt16*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Void*, Win32cr::Foundation::HRESULT),
    get_recommended_rendering_mode_1_1 : Proc(IDWriteFontFace2*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_metrics_1 : Proc(IDWriteFontFace2*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_metrics : Proc(IDWriteFontFace2*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_metrics_2 : Proc(IDWriteFontFace2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*, Void),
    get_gdi_compatible_metrics_2 : Proc(IDWriteFontFace2*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*, Win32cr::Foundation::HRESULT),
    get_caret_metrics : Proc(IDWriteFontFace2*, Win32cr::Graphics::DirectWrite::DWRITE_CARET_METRICS*, Void),
    get_unicode_ranges : Proc(IDWriteFontFace2*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, UInt32*, Win32cr::Foundation::HRESULT),
    is_monospaced_font : Proc(IDWriteFontFace2*, Win32cr::Foundation::BOOL),
    get_design_glyph_advances : Proc(IDWriteFontFace2*, UInt32, UInt16*, Int32*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_advances : Proc(IDWriteFontFace2*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, UInt32, UInt16*, Int32*, Win32cr::Foundation::HRESULT),
    get_kerning_pair_adjustments : Proc(IDWriteFontFace2*, UInt32, UInt16*, Int32*, Win32cr::Foundation::HRESULT),
    has_kerning_pairs : Proc(IDWriteFontFace2*, Win32cr::Foundation::BOOL),
    get_recommended_rendering_mode_2_1 : Proc(IDWriteFontFace2*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Foundation::HRESULT),
    get_vertical_glyph_variants : Proc(IDWriteFontFace2*, UInt32, UInt16*, UInt16*, Win32cr::Foundation::HRESULT),
    has_vertical_glyph_variants : Proc(IDWriteFontFace2*, Win32cr::Foundation::BOOL),
    is_color_font : Proc(IDWriteFontFace2*, Win32cr::Foundation::BOOL),
    get_color_palette_count : Proc(IDWriteFontFace2*, UInt32),
    get_palette_entry_count : Proc(IDWriteFontFace2*, UInt32),
    get_palette_entries : Proc(IDWriteFontFace2*, UInt32, UInt32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_COLOR_F*, Win32cr::Foundation::HRESULT),
    get_recommended_rendering_mode_1_2 : Proc(IDWriteFontFace2*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("d8b768ff-64bc-4e66-982b-ec8e87f693f7")]
  record IDWriteFontFace2, lpVtbl : IDWriteFontFace2Vtbl* do
    GUID = LibC::GUID.new(0xd8b768ff_u32, 0x64bc_u16, 0x4e66_u16, StaticArray[0x98_u8, 0x2b_u8, 0xec_u8, 0x8e_u8, 0x87_u8, 0xf6_u8, 0x93_u8, 0xf7_u8])
    def query_interface(this : IDWriteFontFace2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFace2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFace2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type(this : IDWriteFontFace2*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE
      @lpVtbl.try &.value.get_type.call(this)
    end
    def get_files(this : IDWriteFontFace2*, numberOfFiles : UInt32*, fontFiles : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_files.call(this, numberOfFiles, fontFiles)
    end
    def get_index(this : IDWriteFontFace2*) : UInt32
      @lpVtbl.try &.value.get_index.call(this)
    end
    def get_simulations(this : IDWriteFontFace2*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS
      @lpVtbl.try &.value.get_simulations.call(this)
    end
    def is_symbol_font(this : IDWriteFontFace2*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_symbol_font.call(this)
    end
    def get_metrics_1(this : IDWriteFontFace2*, fontFaceMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Void
      @lpVtbl.try &.value.get_metrics_1.call(this, fontFaceMetrics)
    end
    def get_glyph_count(this : IDWriteFontFace2*) : UInt16
      @lpVtbl.try &.value.get_glyph_count.call(this)
    end
    def get_design_glyph_metrics(this : IDWriteFontFace2*, glyphIndices : UInt16*, glyphCount : UInt32, glyphMetrics : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_design_glyph_metrics.call(this, glyphIndices, glyphCount, glyphMetrics, isSideways)
    end
    def get_glyph_indices(this : IDWriteFontFace2*, codePoints : UInt32*, codePointCount : UInt32, glyphIndices : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_indices.call(this, codePoints, codePointCount, glyphIndices)
    end
    def try_get_font_table(this : IDWriteFontFace2*, openTypeTableTag : UInt32, tableData : Void**, tableSize : UInt32*, tableContext : Void**, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.try_get_font_table.call(this, openTypeTableTag, tableData, tableSize, tableContext, exists)
    end
    def release_font_table(this : IDWriteFontFace2*, tableContext : Void*) : Void
      @lpVtbl.try &.value.release_font_table.call(this, tableContext)
    end
    def get_glyph_run_outline(this : IDWriteFontFace2*, emSize : Float32, glyphIndices : UInt16*, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, glyphCount : UInt32, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, geometrySink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_run_outline.call(this, emSize, glyphIndices, glyphAdvances, glyphOffsets, glyphCount, isSideways, isRightToLeft, geometrySink)
    end
    def get_recommended_rendering_mode_1_1(this : IDWriteFontFace2*, emSize : Float32, pixelsPerDip : Float32, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_1_1.call(this, emSize, pixelsPerDip, measuringMode, renderingParams, renderingMode)
    end
    def get_gdi_compatible_metrics_1(this : IDWriteFontFace2*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, fontFaceMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_metrics_1.call(this, emSize, pixelsPerDip, transform, fontFaceMetrics)
    end
    def get_gdi_compatible_glyph_metrics(this : IDWriteFontFace2*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, glyphIndices : UInt16*, glyphCount : UInt32, glyphMetrics : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_metrics.call(this, emSize, pixelsPerDip, transform, useGdiNatural, glyphIndices, glyphCount, glyphMetrics, isSideways)
    end
    def get_metrics_2(this : IDWriteFontFace2*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*) : Void
      @lpVtbl.try &.value.get_metrics_2.call(this, fontMetrics)
    end
    def get_gdi_compatible_metrics_2(this : IDWriteFontFace2*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_metrics_2.call(this, emSize, pixelsPerDip, transform, fontMetrics)
    end
    def get_caret_metrics(this : IDWriteFontFace2*, caretMetrics : Win32cr::Graphics::DirectWrite::DWRITE_CARET_METRICS*) : Void
      @lpVtbl.try &.value.get_caret_metrics.call(this, caretMetrics)
    end
    def get_unicode_ranges(this : IDWriteFontFace2*, maxRangeCount : UInt32, unicodeRanges : Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, actualRangeCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_unicode_ranges.call(this, maxRangeCount, unicodeRanges, actualRangeCount)
    end
    def is_monospaced_font(this : IDWriteFontFace2*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_monospaced_font.call(this)
    end
    def get_design_glyph_advances(this : IDWriteFontFace2*, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvances : Int32*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_design_glyph_advances.call(this, glyphCount, glyphIndices, glyphAdvances, isSideways)
    end
    def get_gdi_compatible_glyph_advances(this : IDWriteFontFace2*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, isSideways : Win32cr::Foundation::BOOL, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvances : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_advances.call(this, emSize, pixelsPerDip, transform, useGdiNatural, isSideways, glyphCount, glyphIndices, glyphAdvances)
    end
    def get_kerning_pair_adjustments(this : IDWriteFontFace2*, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvanceAdjustments : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_kerning_pair_adjustments.call(this, glyphCount, glyphIndices, glyphAdvanceAdjustments)
    end
    def has_kerning_pairs(this : IDWriteFontFace2*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_kerning_pairs.call(this)
    end
    def get_recommended_rendering_mode_2_1(this : IDWriteFontFace2*, fontEmSize : Float32, dpiX : Float32, dpiY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, isSideways : Win32cr::Foundation::BOOL, outlineThreshold : Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_2_1.call(this, fontEmSize, dpiX, dpiY, transform, isSideways, outlineThreshold, measuringMode, renderingMode)
    end
    def get_vertical_glyph_variants(this : IDWriteFontFace2*, glyphCount : UInt32, nominalGlyphIndices : UInt16*, verticalGlyphIndices : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_vertical_glyph_variants.call(this, glyphCount, nominalGlyphIndices, verticalGlyphIndices)
    end
    def has_vertical_glyph_variants(this : IDWriteFontFace2*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_vertical_glyph_variants.call(this)
    end
    def is_color_font(this : IDWriteFontFace2*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_color_font.call(this)
    end
    def get_color_palette_count(this : IDWriteFontFace2*) : UInt32
      @lpVtbl.try &.value.get_color_palette_count.call(this)
    end
    def get_palette_entry_count(this : IDWriteFontFace2*) : UInt32
      @lpVtbl.try &.value.get_palette_entry_count.call(this)
    end
    def get_palette_entries(this : IDWriteFontFace2*, colorPaletteIndex : UInt32, firstEntryIndex : UInt32, entryCount : UInt32, paletteEntries : Win32cr::Graphics::DirectWrite::DWRITE_COLOR_F*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_palette_entries.call(this, colorPaletteIndex, firstEntryIndex, entryCount, paletteEntries)
    end
    def get_recommended_rendering_mode_1_2(this : IDWriteFontFace2*, fontEmSize : Float32, dpiX : Float32, dpiY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, isSideways : Win32cr::Foundation::BOOL, outlineThreshold : Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_1_2.call(this, fontEmSize, dpiX, dpiY, transform, isSideways, outlineThreshold, measuringMode, renderingParams, renderingMode, gridFitMode)
    end

  end

  @[Extern]
  record IDWriteColorGlyphRunEnumeratorVtbl,
    query_interface : Proc(IDWriteColorGlyphRunEnumerator*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteColorGlyphRunEnumerator*, UInt32),
    release : Proc(IDWriteColorGlyphRunEnumerator*, UInt32),
    move_next : Proc(IDWriteColorGlyphRunEnumerator*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_current_run_1 : Proc(IDWriteColorGlyphRunEnumerator*, Win32cr::Graphics::DirectWrite::DWRITE_COLOR_GLYPH_RUN**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("d31fbe17-f157-41a2-8d24-cb779e0560e8")]
  record IDWriteColorGlyphRunEnumerator, lpVtbl : IDWriteColorGlyphRunEnumeratorVtbl* do
    GUID = LibC::GUID.new(0xd31fbe17_u32, 0xf157_u16, 0x41a2_u16, StaticArray[0x8d_u8, 0x24_u8, 0xcb_u8, 0x77_u8, 0x9e_u8, 0x5_u8, 0x60_u8, 0xe8_u8])
    def query_interface(this : IDWriteColorGlyphRunEnumerator*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteColorGlyphRunEnumerator*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteColorGlyphRunEnumerator*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def move_next(this : IDWriteColorGlyphRunEnumerator*, hasRun : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_next.call(this, hasRun)
    end
    def get_current_run_1(this : IDWriteColorGlyphRunEnumerator*, colorGlyphRun : Win32cr::Graphics::DirectWrite::DWRITE_COLOR_GLYPH_RUN**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_run_1.call(this, colorGlyphRun)
    end

  end

  @[Extern]
  record IDWriteRenderingParams2Vtbl,
    query_interface : Proc(IDWriteRenderingParams2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteRenderingParams2*, UInt32),
    release : Proc(IDWriteRenderingParams2*, UInt32),
    get_gamma : Proc(IDWriteRenderingParams2*, Float32),
    get_enhanced_contrast : Proc(IDWriteRenderingParams2*, Float32),
    get_clear_type_level : Proc(IDWriteRenderingParams2*, Float32),
    get_pixel_geometry : Proc(IDWriteRenderingParams2*, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY),
    get_rendering_mode : Proc(IDWriteRenderingParams2*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE),
    get_grayscale_enhanced_contrast : Proc(IDWriteRenderingParams2*, Float32),
    get_grid_fit_mode : Proc(IDWriteRenderingParams2*, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE)


  @[Extern]
  #@[Com("f9d711c3-9777-40ae-87e8-3e5af9bf0948")]
  record IDWriteRenderingParams2, lpVtbl : IDWriteRenderingParams2Vtbl* do
    GUID = LibC::GUID.new(0xf9d711c3_u32, 0x9777_u16, 0x40ae_u16, StaticArray[0x87_u8, 0xe8_u8, 0x3e_u8, 0x5a_u8, 0xf9_u8, 0xbf_u8, 0x9_u8, 0x48_u8])
    def query_interface(this : IDWriteRenderingParams2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteRenderingParams2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteRenderingParams2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_gamma(this : IDWriteRenderingParams2*) : Float32
      @lpVtbl.try &.value.get_gamma.call(this)
    end
    def get_enhanced_contrast(this : IDWriteRenderingParams2*) : Float32
      @lpVtbl.try &.value.get_enhanced_contrast.call(this)
    end
    def get_clear_type_level(this : IDWriteRenderingParams2*) : Float32
      @lpVtbl.try &.value.get_clear_type_level.call(this)
    end
    def get_pixel_geometry(this : IDWriteRenderingParams2*) : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY
      @lpVtbl.try &.value.get_pixel_geometry.call(this)
    end
    def get_rendering_mode(this : IDWriteRenderingParams2*) : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE
      @lpVtbl.try &.value.get_rendering_mode.call(this)
    end
    def get_grayscale_enhanced_contrast(this : IDWriteRenderingParams2*) : Float32
      @lpVtbl.try &.value.get_grayscale_enhanced_contrast.call(this)
    end
    def get_grid_fit_mode(this : IDWriteRenderingParams2*) : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE
      @lpVtbl.try &.value.get_grid_fit_mode.call(this)
    end

  end

  @[Extern]
  record IDWriteFactory2Vtbl,
    query_interface : Proc(IDWriteFactory2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFactory2*, UInt32),
    release : Proc(IDWriteFactory2*, UInt32),
    get_system_font_collection_1 : Proc(IDWriteFactory2*, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_custom_font_collection : Proc(IDWriteFactory2*, Void*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    register_font_collection_loader : Proc(IDWriteFactory2*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_collection_loader : Proc(IDWriteFactory2*, Void*, Win32cr::Foundation::HRESULT),
    create_font_file_reference : Proc(IDWriteFactory2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::FILETIME*, Void**, Win32cr::Foundation::HRESULT),
    create_custom_font_file_reference : Proc(IDWriteFactory2*, Void*, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_font_face : Proc(IDWriteFactory2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, UInt32, Void**, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    create_rendering_params : Proc(IDWriteFactory2*, Void**, Win32cr::Foundation::HRESULT),
    create_monitor_rendering_params : Proc(IDWriteFactory2*, Win32cr::Graphics::Gdi::HMONITOR, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_1_1 : Proc(IDWriteFactory2*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Void**, Win32cr::Foundation::HRESULT),
    register_font_file_loader : Proc(IDWriteFactory2*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_file_loader : Proc(IDWriteFactory2*, Void*, Win32cr::Foundation::HRESULT),
    create_text_format_1 : Proc(IDWriteFactory2*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Float32, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    create_typography : Proc(IDWriteFactory2*, Void**, Win32cr::Foundation::HRESULT),
    get_gdi_interop : Proc(IDWriteFactory2*, Void**, Win32cr::Foundation::HRESULT),
    create_text_layout : Proc(IDWriteFactory2*, UInt16*, UInt32, Void*, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_gdi_compatible_text_layout : Proc(IDWriteFactory2*, UInt16*, UInt32, Void*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_ellipsis_trimming_sign : Proc(IDWriteFactory2*, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_text_analyzer : Proc(IDWriteFactory2*, Void**, Win32cr::Foundation::HRESULT),
    create_number_substitution : Proc(IDWriteFactory2*, Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis_1 : Proc(IDWriteFactory2*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    get_eudc_font_collection : Proc(IDWriteFactory2*, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_2_1 : Proc(IDWriteFactory2*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_fallback : Proc(IDWriteFactory2*, Void**, Win32cr::Foundation::HRESULT),
    create_font_fallback_builder : Proc(IDWriteFactory2*, Void**, Win32cr::Foundation::HRESULT),
    translate_color_glyph_run_1 : Proc(IDWriteFactory2*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_1_2 : Proc(IDWriteFactory2*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis_2 : Proc(IDWriteFactory2*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("0439fc60-ca44-4994-8dee-3a9af7b732ec")]
  record IDWriteFactory2, lpVtbl : IDWriteFactory2Vtbl* do
    GUID = LibC::GUID.new(0x439fc60_u32, 0xca44_u16, 0x4994_u16, StaticArray[0x8d_u8, 0xee_u8, 0x3a_u8, 0x9a_u8, 0xf7_u8, 0xb7_u8, 0x32_u8, 0xec_u8])
    def query_interface(this : IDWriteFactory2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFactory2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFactory2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_system_font_collection_1(this : IDWriteFactory2*, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_1.call(this, fontCollection, checkForUpdates)
    end
    def create_custom_font_collection(this : IDWriteFactory2*, collectionLoader : Void*, collectionKey : Void*, collectionKeySize : UInt32, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_collection.call(this, collectionLoader, collectionKey, collectionKeySize, fontCollection)
    end
    def register_font_collection_loader(this : IDWriteFactory2*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_collection_loader.call(this, fontCollectionLoader)
    end
    def unregister_font_collection_loader(this : IDWriteFactory2*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_collection_loader.call(this, fontCollectionLoader)
    end
    def create_font_file_reference(this : IDWriteFactory2*, filePath : Win32cr::Foundation::PWSTR, lastWriteTime : Win32cr::Foundation::FILETIME*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_file_reference.call(this, filePath, lastWriteTime, fontFile)
    end
    def create_custom_font_file_reference(this : IDWriteFactory2*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, fontFileLoader : Void*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_file_reference.call(this, fontFileReferenceKey, fontFileReferenceKeySize, fontFileLoader, fontFile)
    end
    def create_font_face(this : IDWriteFactory2*, fontFaceType : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, numberOfFiles : UInt32, fontFiles : Void**, faceIndex : UInt32, fontFaceSimulationFlags : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face.call(this, fontFaceType, numberOfFiles, fontFiles, faceIndex, fontFaceSimulationFlags, fontFace)
    end
    def create_rendering_params(this : IDWriteFactory2*, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rendering_params.call(this, renderingParams)
    end
    def create_monitor_rendering_params(this : IDWriteFactory2*, monitor : Win32cr::Graphics::Gdi::HMONITOR, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_monitor_rendering_params.call(this, monitor, renderingParams)
    end
    def create_custom_rendering_params_1_1(this : IDWriteFactory2*, gamma : Float32, enhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_1_1.call(this, gamma, enhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, renderingParams)
    end
    def register_font_file_loader(this : IDWriteFactory2*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_file_loader.call(this, fontFileLoader)
    end
    def unregister_font_file_loader(this : IDWriteFactory2*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_file_loader.call(this, fontFileLoader)
    end
    def create_text_format_1(this : IDWriteFactory2*, fontFamilyName : Win32cr::Foundation::PWSTR, fontCollection : Void*, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, fontSize : Float32, localeName : Win32cr::Foundation::PWSTR, textFormat : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_format_1.call(this, fontFamilyName, fontCollection, fontWeight, fontStyle, fontStretch, fontSize, localeName, textFormat)
    end
    def create_typography(this : IDWriteFactory2*, typography : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_typography.call(this, typography)
    end
    def get_gdi_interop(this : IDWriteFactory2*, gdiInterop : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_interop.call(this, gdiInterop)
    end
    def create_text_layout(this : IDWriteFactory2*, string : UInt16*, stringLength : UInt32, textFormat : Void*, maxWidth : Float32, maxHeight : Float32, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_layout.call(this, string, stringLength, textFormat, maxWidth, maxHeight, textLayout)
    end
    def create_gdi_compatible_text_layout(this : IDWriteFactory2*, string : UInt16*, stringLength : UInt32, textFormat : Void*, layoutWidth : Float32, layoutHeight : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_gdi_compatible_text_layout.call(this, string, stringLength, textFormat, layoutWidth, layoutHeight, pixelsPerDip, transform, useGdiNatural, textLayout)
    end
    def create_ellipsis_trimming_sign(this : IDWriteFactory2*, textFormat : Void*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_ellipsis_trimming_sign.call(this, textFormat, trimmingSign)
    end
    def create_text_analyzer(this : IDWriteFactory2*, textAnalyzer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_analyzer.call(this, textAnalyzer)
    end
    def create_number_substitution(this : IDWriteFactory2*, substitutionMethod : Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, localeName : Win32cr::Foundation::PWSTR, ignoreUserOverride : Win32cr::Foundation::BOOL, numberSubstitution : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_number_substitution.call(this, substitutionMethod, localeName, ignoreUserOverride, numberSubstitution)
    end
    def create_glyph_run_analysis_1(this : IDWriteFactory2*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis_1.call(this, glyphRun, pixelsPerDip, transform, renderingMode, measuringMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def get_eudc_font_collection(this : IDWriteFactory2*, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_eudc_font_collection.call(this, fontCollection, checkForUpdates)
    end
    def create_custom_rendering_params_2_1(this : IDWriteFactory2*, gamma : Float32, enhancedContrast : Float32, enhancedContrastGrayscale : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_2_1.call(this, gamma, enhancedContrast, enhancedContrastGrayscale, clearTypeLevel, pixelGeometry, renderingMode, renderingParams)
    end
    def get_system_font_fallback(this : IDWriteFactory2*, fontFallback : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_fallback.call(this, fontFallback)
    end
    def create_font_fallback_builder(this : IDWriteFactory2*, fontFallbackBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_fallback_builder.call(this, fontFallbackBuilder)
    end
    def translate_color_glyph_run_1(this : IDWriteFactory2*, baselineOriginX : Float32, baselineOriginY : Float32, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, glyphRunDescription : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, worldToDeviceTransform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, colorPaletteIndex : UInt32, colorLayers : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_color_glyph_run_1.call(this, baselineOriginX, baselineOriginY, glyphRun, glyphRunDescription, measuringMode, worldToDeviceTransform, colorPaletteIndex, colorLayers)
    end
    def create_custom_rendering_params_1_2(this : IDWriteFactory2*, gamma : Float32, enhancedContrast : Float32, grayscaleEnhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_1_2.call(this, gamma, enhancedContrast, grayscaleEnhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, gridFitMode, renderingParams)
    end
    def create_glyph_run_analysis_2(this : IDWriteFactory2*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, antialiasMode : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis_2.call(this, glyphRun, transform, renderingMode, measuringMode, gridFitMode, antialiasMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end

  end

  @[Extern]
  record IDWriteRenderingParams3Vtbl,
    query_interface : Proc(IDWriteRenderingParams3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteRenderingParams3*, UInt32),
    release : Proc(IDWriteRenderingParams3*, UInt32),
    get_gamma : Proc(IDWriteRenderingParams3*, Float32),
    get_enhanced_contrast : Proc(IDWriteRenderingParams3*, Float32),
    get_clear_type_level : Proc(IDWriteRenderingParams3*, Float32),
    get_pixel_geometry : Proc(IDWriteRenderingParams3*, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY),
    get_rendering_mode : Proc(IDWriteRenderingParams3*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE),
    get_grayscale_enhanced_contrast : Proc(IDWriteRenderingParams3*, Float32),
    get_grid_fit_mode : Proc(IDWriteRenderingParams3*, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE),
    get_rendering_mode1 : Proc(IDWriteRenderingParams3*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1)


  @[Extern]
  #@[Com("b7924baa-391b-412a-8c5c-e44cc2d867dc")]
  record IDWriteRenderingParams3, lpVtbl : IDWriteRenderingParams3Vtbl* do
    GUID = LibC::GUID.new(0xb7924baa_u32, 0x391b_u16, 0x412a_u16, StaticArray[0x8c_u8, 0x5c_u8, 0xe4_u8, 0x4c_u8, 0xc2_u8, 0xd8_u8, 0x67_u8, 0xdc_u8])
    def query_interface(this : IDWriteRenderingParams3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteRenderingParams3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteRenderingParams3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_gamma(this : IDWriteRenderingParams3*) : Float32
      @lpVtbl.try &.value.get_gamma.call(this)
    end
    def get_enhanced_contrast(this : IDWriteRenderingParams3*) : Float32
      @lpVtbl.try &.value.get_enhanced_contrast.call(this)
    end
    def get_clear_type_level(this : IDWriteRenderingParams3*) : Float32
      @lpVtbl.try &.value.get_clear_type_level.call(this)
    end
    def get_pixel_geometry(this : IDWriteRenderingParams3*) : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY
      @lpVtbl.try &.value.get_pixel_geometry.call(this)
    end
    def get_rendering_mode(this : IDWriteRenderingParams3*) : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE
      @lpVtbl.try &.value.get_rendering_mode.call(this)
    end
    def get_grayscale_enhanced_contrast(this : IDWriteRenderingParams3*) : Float32
      @lpVtbl.try &.value.get_grayscale_enhanced_contrast.call(this)
    end
    def get_grid_fit_mode(this : IDWriteRenderingParams3*) : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE
      @lpVtbl.try &.value.get_grid_fit_mode.call(this)
    end
    def get_rendering_mode1(this : IDWriteRenderingParams3*) : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1
      @lpVtbl.try &.value.get_rendering_mode1.call(this)
    end

  end

  @[Extern]
  record IDWriteFactory3Vtbl,
    query_interface : Proc(IDWriteFactory3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFactory3*, UInt32),
    release : Proc(IDWriteFactory3*, UInt32),
    get_system_font_collection_1 : Proc(IDWriteFactory3*, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_custom_font_collection : Proc(IDWriteFactory3*, Void*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    register_font_collection_loader : Proc(IDWriteFactory3*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_collection_loader : Proc(IDWriteFactory3*, Void*, Win32cr::Foundation::HRESULT),
    create_font_file_reference : Proc(IDWriteFactory3*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::FILETIME*, Void**, Win32cr::Foundation::HRESULT),
    create_custom_font_file_reference : Proc(IDWriteFactory3*, Void*, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_font_face : Proc(IDWriteFactory3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, UInt32, Void**, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    create_rendering_params : Proc(IDWriteFactory3*, Void**, Win32cr::Foundation::HRESULT),
    create_monitor_rendering_params : Proc(IDWriteFactory3*, Win32cr::Graphics::Gdi::HMONITOR, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_1_1 : Proc(IDWriteFactory3*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Void**, Win32cr::Foundation::HRESULT),
    register_font_file_loader : Proc(IDWriteFactory3*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_file_loader : Proc(IDWriteFactory3*, Void*, Win32cr::Foundation::HRESULT),
    create_text_format_1 : Proc(IDWriteFactory3*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Float32, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    create_typography : Proc(IDWriteFactory3*, Void**, Win32cr::Foundation::HRESULT),
    get_gdi_interop : Proc(IDWriteFactory3*, Void**, Win32cr::Foundation::HRESULT),
    create_text_layout : Proc(IDWriteFactory3*, UInt16*, UInt32, Void*, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_gdi_compatible_text_layout : Proc(IDWriteFactory3*, UInt16*, UInt32, Void*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_ellipsis_trimming_sign : Proc(IDWriteFactory3*, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_text_analyzer : Proc(IDWriteFactory3*, Void**, Win32cr::Foundation::HRESULT),
    create_number_substitution : Proc(IDWriteFactory3*, Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis_1 : Proc(IDWriteFactory3*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    get_eudc_font_collection : Proc(IDWriteFactory3*, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_2_1 : Proc(IDWriteFactory3*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_fallback : Proc(IDWriteFactory3*, Void**, Win32cr::Foundation::HRESULT),
    create_font_fallback_builder : Proc(IDWriteFactory3*, Void**, Win32cr::Foundation::HRESULT),
    translate_color_glyph_run_1 : Proc(IDWriteFactory3*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_1_2 : Proc(IDWriteFactory3*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis_2 : Proc(IDWriteFactory3*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis : Proc(IDWriteFactory3*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_2_2 : Proc(IDWriteFactory3*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Void**, Win32cr::Foundation::HRESULT),
    create_font_face_reference_1 : Proc(IDWriteFactory3*, Void*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    create_font_face_reference_2 : Proc(IDWriteFactory3*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::FILETIME*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_set_1 : Proc(IDWriteFactory3*, Void**, Win32cr::Foundation::HRESULT),
    create_font_set_builder_1 : Proc(IDWriteFactory3*, Void**, Win32cr::Foundation::HRESULT),
    create_font_collection_from_font_set_1 : Proc(IDWriteFactory3*, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_collection_2_1 : Proc(IDWriteFactory3*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_font_download_queue : Proc(IDWriteFactory3*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("9a1b41c3-d3bb-466a-87fc-fe67556a3b65")]
  record IDWriteFactory3, lpVtbl : IDWriteFactory3Vtbl* do
    GUID = LibC::GUID.new(0x9a1b41c3_u32, 0xd3bb_u16, 0x466a_u16, StaticArray[0x87_u8, 0xfc_u8, 0xfe_u8, 0x67_u8, 0x55_u8, 0x6a_u8, 0x3b_u8, 0x65_u8])
    def query_interface(this : IDWriteFactory3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFactory3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFactory3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_system_font_collection_1(this : IDWriteFactory3*, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_1.call(this, fontCollection, checkForUpdates)
    end
    def create_custom_font_collection(this : IDWriteFactory3*, collectionLoader : Void*, collectionKey : Void*, collectionKeySize : UInt32, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_collection.call(this, collectionLoader, collectionKey, collectionKeySize, fontCollection)
    end
    def register_font_collection_loader(this : IDWriteFactory3*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_collection_loader.call(this, fontCollectionLoader)
    end
    def unregister_font_collection_loader(this : IDWriteFactory3*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_collection_loader.call(this, fontCollectionLoader)
    end
    def create_font_file_reference(this : IDWriteFactory3*, filePath : Win32cr::Foundation::PWSTR, lastWriteTime : Win32cr::Foundation::FILETIME*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_file_reference.call(this, filePath, lastWriteTime, fontFile)
    end
    def create_custom_font_file_reference(this : IDWriteFactory3*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, fontFileLoader : Void*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_file_reference.call(this, fontFileReferenceKey, fontFileReferenceKeySize, fontFileLoader, fontFile)
    end
    def create_font_face(this : IDWriteFactory3*, fontFaceType : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, numberOfFiles : UInt32, fontFiles : Void**, faceIndex : UInt32, fontFaceSimulationFlags : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face.call(this, fontFaceType, numberOfFiles, fontFiles, faceIndex, fontFaceSimulationFlags, fontFace)
    end
    def create_rendering_params(this : IDWriteFactory3*, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rendering_params.call(this, renderingParams)
    end
    def create_monitor_rendering_params(this : IDWriteFactory3*, monitor : Win32cr::Graphics::Gdi::HMONITOR, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_monitor_rendering_params.call(this, monitor, renderingParams)
    end
    def create_custom_rendering_params_1_1(this : IDWriteFactory3*, gamma : Float32, enhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_1_1.call(this, gamma, enhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, renderingParams)
    end
    def register_font_file_loader(this : IDWriteFactory3*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_file_loader.call(this, fontFileLoader)
    end
    def unregister_font_file_loader(this : IDWriteFactory3*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_file_loader.call(this, fontFileLoader)
    end
    def create_text_format_1(this : IDWriteFactory3*, fontFamilyName : Win32cr::Foundation::PWSTR, fontCollection : Void*, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, fontSize : Float32, localeName : Win32cr::Foundation::PWSTR, textFormat : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_format_1.call(this, fontFamilyName, fontCollection, fontWeight, fontStyle, fontStretch, fontSize, localeName, textFormat)
    end
    def create_typography(this : IDWriteFactory3*, typography : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_typography.call(this, typography)
    end
    def get_gdi_interop(this : IDWriteFactory3*, gdiInterop : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_interop.call(this, gdiInterop)
    end
    def create_text_layout(this : IDWriteFactory3*, string : UInt16*, stringLength : UInt32, textFormat : Void*, maxWidth : Float32, maxHeight : Float32, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_layout.call(this, string, stringLength, textFormat, maxWidth, maxHeight, textLayout)
    end
    def create_gdi_compatible_text_layout(this : IDWriteFactory3*, string : UInt16*, stringLength : UInt32, textFormat : Void*, layoutWidth : Float32, layoutHeight : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_gdi_compatible_text_layout.call(this, string, stringLength, textFormat, layoutWidth, layoutHeight, pixelsPerDip, transform, useGdiNatural, textLayout)
    end
    def create_ellipsis_trimming_sign(this : IDWriteFactory3*, textFormat : Void*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_ellipsis_trimming_sign.call(this, textFormat, trimmingSign)
    end
    def create_text_analyzer(this : IDWriteFactory3*, textAnalyzer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_analyzer.call(this, textAnalyzer)
    end
    def create_number_substitution(this : IDWriteFactory3*, substitutionMethod : Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, localeName : Win32cr::Foundation::PWSTR, ignoreUserOverride : Win32cr::Foundation::BOOL, numberSubstitution : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_number_substitution.call(this, substitutionMethod, localeName, ignoreUserOverride, numberSubstitution)
    end
    def create_glyph_run_analysis_1(this : IDWriteFactory3*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis_1.call(this, glyphRun, pixelsPerDip, transform, renderingMode, measuringMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def get_eudc_font_collection(this : IDWriteFactory3*, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_eudc_font_collection.call(this, fontCollection, checkForUpdates)
    end
    def create_custom_rendering_params_2_1(this : IDWriteFactory3*, gamma : Float32, enhancedContrast : Float32, enhancedContrastGrayscale : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_2_1.call(this, gamma, enhancedContrast, enhancedContrastGrayscale, clearTypeLevel, pixelGeometry, renderingMode, renderingParams)
    end
    def get_system_font_fallback(this : IDWriteFactory3*, fontFallback : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_fallback.call(this, fontFallback)
    end
    def create_font_fallback_builder(this : IDWriteFactory3*, fontFallbackBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_fallback_builder.call(this, fontFallbackBuilder)
    end
    def translate_color_glyph_run_1(this : IDWriteFactory3*, baselineOriginX : Float32, baselineOriginY : Float32, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, glyphRunDescription : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, worldToDeviceTransform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, colorPaletteIndex : UInt32, colorLayers : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_color_glyph_run_1.call(this, baselineOriginX, baselineOriginY, glyphRun, glyphRunDescription, measuringMode, worldToDeviceTransform, colorPaletteIndex, colorLayers)
    end
    def create_custom_rendering_params_1_2(this : IDWriteFactory3*, gamma : Float32, enhancedContrast : Float32, grayscaleEnhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_1_2.call(this, gamma, enhancedContrast, grayscaleEnhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, gridFitMode, renderingParams)
    end
    def create_glyph_run_analysis_2(this : IDWriteFactory3*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, antialiasMode : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis_2.call(this, glyphRun, transform, renderingMode, measuringMode, gridFitMode, antialiasMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def create_glyph_run_analysis(this : IDWriteFactory3*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, antialiasMode : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis.call(this, glyphRun, transform, renderingMode, measuringMode, gridFitMode, antialiasMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def create_custom_rendering_params_2_2(this : IDWriteFactory3*, gamma : Float32, enhancedContrast : Float32, grayscaleEnhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_2_2.call(this, gamma, enhancedContrast, grayscaleEnhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, gridFitMode, renderingParams)
    end
    def create_font_face_reference_1(this : IDWriteFactory3*, fontFile : Void*, faceIndex : UInt32, fontSimulations : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_reference_1.call(this, fontFile, faceIndex, fontSimulations, fontFaceReference)
    end
    def create_font_face_reference_2(this : IDWriteFactory3*, filePath : Win32cr::Foundation::PWSTR, lastWriteTime : Win32cr::Foundation::FILETIME*, faceIndex : UInt32, fontSimulations : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_reference_2.call(this, filePath, lastWriteTime, faceIndex, fontSimulations, fontFaceReference)
    end
    def get_system_font_set_1(this : IDWriteFactory3*, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_set_1.call(this, fontSet)
    end
    def create_font_set_builder_1(this : IDWriteFactory3*, fontSetBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_set_builder_1.call(this, fontSetBuilder)
    end
    def create_font_collection_from_font_set_1(this : IDWriteFactory3*, fontSet : Void*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_collection_from_font_set_1.call(this, fontSet, fontCollection)
    end
    def get_system_font_collection_2_1(this : IDWriteFactory3*, includeDownloadableFonts : Win32cr::Foundation::BOOL, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_2_1.call(this, includeDownloadableFonts, fontCollection, checkForUpdates)
    end
    def get_font_download_queue(this : IDWriteFactory3*, fontDownloadQueue : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_download_queue.call(this, fontDownloadQueue)
    end

  end

  @[Extern]
  record IDWriteFontSetVtbl,
    query_interface : Proc(IDWriteFontSet*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontSet*, UInt32),
    release : Proc(IDWriteFontSet*, UInt32),
    get_font_count : Proc(IDWriteFontSet*, UInt32),
    get_font_face_reference_1 : Proc(IDWriteFontSet*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    find_font_face_reference : Proc(IDWriteFontSet*, Void*, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    find_font_face : Proc(IDWriteFontSet*, Void*, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_property_values_1 : Proc(IDWriteFontSet*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, Void**, Win32cr::Foundation::HRESULT),
    get_property_values_2 : Proc(IDWriteFontSet*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    get_property_values_3 : Proc(IDWriteFontSet*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, Win32cr::Foundation::BOOL*, Void**, Win32cr::Foundation::HRESULT),
    get_property_occurrence_count : Proc(IDWriteFontSet*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32*, Win32cr::Foundation::HRESULT),
    get_matching_fonts_1 : Proc(IDWriteFontSet*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Void**, Win32cr::Foundation::HRESULT),
    get_matching_fonts_2 : Proc(IDWriteFontSet*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("53585141-d9f8-4095-8321-d73cf6bd116b")]
  record IDWriteFontSet, lpVtbl : IDWriteFontSetVtbl* do
    GUID = LibC::GUID.new(0x53585141_u32, 0xd9f8_u16, 0x4095_u16, StaticArray[0x83_u8, 0x21_u8, 0xd7_u8, 0x3c_u8, 0xf6_u8, 0xbd_u8, 0x11_u8, 0x6b_u8])
    def query_interface(this : IDWriteFontSet*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontSet*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontSet*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_count(this : IDWriteFontSet*) : UInt32
      @lpVtbl.try &.value.get_font_count.call(this)
    end
    def get_font_face_reference_1(this : IDWriteFontSet*, listIndex : UInt32, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference_1.call(this, listIndex, fontFaceReference)
    end
    def find_font_face_reference(this : IDWriteFontSet*, fontFaceReference : Void*, listIndex : UInt32*, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_font_face_reference.call(this, fontFaceReference, listIndex, exists)
    end
    def find_font_face(this : IDWriteFontSet*, fontFace : Void*, listIndex : UInt32*, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_font_face.call(this, fontFace, listIndex, exists)
    end
    def get_property_values_1(this : IDWriteFontSet*, propertyID : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, values : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_values_1.call(this, propertyID, values)
    end
    def get_property_values_2(this : IDWriteFontSet*, propertyID : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, preferredLocaleNames : Win32cr::Foundation::PWSTR, values : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_values_2.call(this, propertyID, preferredLocaleNames, values)
    end
    def get_property_values_3(this : IDWriteFontSet*, listIndex : UInt32, propertyId : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, exists : Win32cr::Foundation::BOOL*, values : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_values_3.call(this, listIndex, propertyId, exists, values)
    end
    def get_property_occurrence_count(this : IDWriteFontSet*, property : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyOccurrenceCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_occurrence_count.call(this, property, propertyOccurrenceCount)
    end
    def get_matching_fonts_1(this : IDWriteFontSet*, familyName : Win32cr::Foundation::PWSTR, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, filteredSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts_1.call(this, familyName, fontWeight, fontStretch, fontStyle, filteredSet)
    end
    def get_matching_fonts_2(this : IDWriteFontSet*, properties : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyCount : UInt32, filteredSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts_2.call(this, properties, propertyCount, filteredSet)
    end

  end

  @[Extern]
  record IDWriteFontSetBuilderVtbl,
    query_interface : Proc(IDWriteFontSetBuilder*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontSetBuilder*, UInt32),
    release : Proc(IDWriteFontSetBuilder*, UInt32),
    add_font_face_reference_1 : Proc(IDWriteFontSetBuilder*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32, Win32cr::Foundation::HRESULT),
    add_font_face_reference_2 : Proc(IDWriteFontSetBuilder*, Void*, Win32cr::Foundation::HRESULT),
    add_font_set : Proc(IDWriteFontSetBuilder*, Void*, Win32cr::Foundation::HRESULT),
    create_font_set : Proc(IDWriteFontSetBuilder*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("2f642afe-9c68-4f40-b8be-457401afcb3d")]
  record IDWriteFontSetBuilder, lpVtbl : IDWriteFontSetBuilderVtbl* do
    GUID = LibC::GUID.new(0x2f642afe_u32, 0x9c68_u16, 0x4f40_u16, StaticArray[0xb8_u8, 0xbe_u8, 0x45_u8, 0x74_u8, 0x1_u8, 0xaf_u8, 0xcb_u8, 0x3d_u8])
    def query_interface(this : IDWriteFontSetBuilder*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontSetBuilder*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontSetBuilder*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_font_face_reference_1(this : IDWriteFontSetBuilder*, fontFaceReference : Void*, properties : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_font_face_reference_1.call(this, fontFaceReference, properties, propertyCount)
    end
    def add_font_face_reference_2(this : IDWriteFontSetBuilder*, fontFaceReference : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_font_face_reference_2.call(this, fontFaceReference)
    end
    def add_font_set(this : IDWriteFontSetBuilder*, fontSet : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_font_set.call(this, fontSet)
    end
    def create_font_set(this : IDWriteFontSetBuilder*, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_set.call(this, fontSet)
    end

  end

  @[Extern]
  record IDWriteFontCollection1Vtbl,
    query_interface : Proc(IDWriteFontCollection1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontCollection1*, UInt32),
    release : Proc(IDWriteFontCollection1*, UInt32),
    get_font_family_count : Proc(IDWriteFontCollection1*, UInt32),
    get_font_family_1 : Proc(IDWriteFontCollection1*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    find_family_name : Proc(IDWriteFontCollection1*, Win32cr::Foundation::PWSTR, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_font_from_font_face : Proc(IDWriteFontCollection1*, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_font_set_1 : Proc(IDWriteFontCollection1*, Void**, Win32cr::Foundation::HRESULT),
    get_font_family_2 : Proc(IDWriteFontCollection1*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("53585141-d9f8-4095-8321-d73cf6bd116c")]
  record IDWriteFontCollection1, lpVtbl : IDWriteFontCollection1Vtbl* do
    GUID = LibC::GUID.new(0x53585141_u32, 0xd9f8_u16, 0x4095_u16, StaticArray[0x83_u8, 0x21_u8, 0xd7_u8, 0x3c_u8, 0xf6_u8, 0xbd_u8, 0x11_u8, 0x6c_u8])
    def query_interface(this : IDWriteFontCollection1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontCollection1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontCollection1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_family_count(this : IDWriteFontCollection1*) : UInt32
      @lpVtbl.try &.value.get_font_family_count.call(this)
    end
    def get_font_family_1(this : IDWriteFontCollection1*, index : UInt32, fontFamily : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_1.call(this, index, fontFamily)
    end
    def find_family_name(this : IDWriteFontCollection1*, familyName : Win32cr::Foundation::PWSTR, index : UInt32*, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_family_name.call(this, familyName, index, exists)
    end
    def get_font_from_font_face(this : IDWriteFontCollection1*, fontFace : Void*, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_from_font_face.call(this, fontFace, font)
    end
    def get_font_set_1(this : IDWriteFontCollection1*, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_set_1.call(this, fontSet)
    end
    def get_font_family_2(this : IDWriteFontCollection1*, index : UInt32, fontFamily : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_2.call(this, index, fontFamily)
    end

  end

  @[Extern]
  record IDWriteFontFamily1Vtbl,
    query_interface : Proc(IDWriteFontFamily1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFamily1*, UInt32),
    release : Proc(IDWriteFontFamily1*, UInt32),
    get_font_collection : Proc(IDWriteFontFamily1*, Void**, Win32cr::Foundation::HRESULT),
    get_font_count : Proc(IDWriteFontFamily1*, UInt32),
    get_font_1 : Proc(IDWriteFontFamily1*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_family_names : Proc(IDWriteFontFamily1*, Void**, Win32cr::Foundation::HRESULT),
    get_first_matching_font : Proc(IDWriteFontFamily1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Void**, Win32cr::Foundation::HRESULT),
    get_matching_fonts_1 : Proc(IDWriteFontFamily1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Void**, Win32cr::Foundation::HRESULT),
    get_font_locality : Proc(IDWriteFontFamily1*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY),
    get_font_2 : Proc(IDWriteFontFamily1*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_font_face_reference : Proc(IDWriteFontFamily1*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("da20d8ef-812a-4c43-9802-62ec4abd7adf")]
  record IDWriteFontFamily1, lpVtbl : IDWriteFontFamily1Vtbl* do
    GUID = LibC::GUID.new(0xda20d8ef_u32, 0x812a_u16, 0x4c43_u16, StaticArray[0x98_u8, 0x2_u8, 0x62_u8, 0xec_u8, 0x4a_u8, 0xbd_u8, 0x7a_u8, 0xdf_u8])
    def query_interface(this : IDWriteFontFamily1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFamily1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFamily1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_collection(this : IDWriteFontFamily1*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection.call(this, fontCollection)
    end
    def get_font_count(this : IDWriteFontFamily1*) : UInt32
      @lpVtbl.try &.value.get_font_count.call(this)
    end
    def get_font_1(this : IDWriteFontFamily1*, index : UInt32, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_1.call(this, index, font)
    end
    def get_family_names(this : IDWriteFontFamily1*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_family_names.call(this, names)
    end
    def get_first_matching_font(this : IDWriteFontFamily1*, weight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, stretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, style : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, matchingFont : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_first_matching_font.call(this, weight, stretch, style, matchingFont)
    end
    def get_matching_fonts_1(this : IDWriteFontFamily1*, weight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, stretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, style : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, matchingFonts : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts_1.call(this, weight, stretch, style, matchingFonts)
    end
    def get_font_locality(this : IDWriteFontFamily1*, listIndex : UInt32) : Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY
      @lpVtbl.try &.value.get_font_locality.call(this, listIndex)
    end
    def get_font_2(this : IDWriteFontFamily1*, listIndex : UInt32, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_2.call(this, listIndex, font)
    end
    def get_font_face_reference(this : IDWriteFontFamily1*, listIndex : UInt32, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference.call(this, listIndex, fontFaceReference)
    end

  end

  @[Extern]
  record IDWriteFontList1Vtbl,
    query_interface : Proc(IDWriteFontList1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontList1*, UInt32),
    release : Proc(IDWriteFontList1*, UInt32),
    get_font_collection : Proc(IDWriteFontList1*, Void**, Win32cr::Foundation::HRESULT),
    get_font_count : Proc(IDWriteFontList1*, UInt32),
    get_font_1 : Proc(IDWriteFontList1*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_font_locality : Proc(IDWriteFontList1*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY),
    get_font : Proc(IDWriteFontList1*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_font_face_reference : Proc(IDWriteFontList1*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("da20d8ef-812a-4c43-9802-62ec4abd7ade")]
  record IDWriteFontList1, lpVtbl : IDWriteFontList1Vtbl* do
    GUID = LibC::GUID.new(0xda20d8ef_u32, 0x812a_u16, 0x4c43_u16, StaticArray[0x98_u8, 0x2_u8, 0x62_u8, 0xec_u8, 0x4a_u8, 0xbd_u8, 0x7a_u8, 0xde_u8])
    def query_interface(this : IDWriteFontList1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontList1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontList1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_collection(this : IDWriteFontList1*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection.call(this, fontCollection)
    end
    def get_font_count(this : IDWriteFontList1*) : UInt32
      @lpVtbl.try &.value.get_font_count.call(this)
    end
    def get_font_1(this : IDWriteFontList1*, index : UInt32, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_1.call(this, index, font)
    end
    def get_font_locality(this : IDWriteFontList1*, listIndex : UInt32) : Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY
      @lpVtbl.try &.value.get_font_locality.call(this, listIndex)
    end
    def get_font(this : IDWriteFontList1*, listIndex : UInt32, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font.call(this, listIndex, font)
    end
    def get_font_face_reference(this : IDWriteFontList1*, listIndex : UInt32, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference.call(this, listIndex, fontFaceReference)
    end

  end

  @[Extern]
  record IDWriteFontFaceReferenceVtbl,
    query_interface : Proc(IDWriteFontFaceReference*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFaceReference*, UInt32),
    release : Proc(IDWriteFontFaceReference*, UInt32),
    create_font_face_1 : Proc(IDWriteFontFaceReference*, Void**, Win32cr::Foundation::HRESULT),
    create_font_face_with_simulations : Proc(IDWriteFontFaceReference*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    equals : Proc(IDWriteFontFaceReference*, Void*, Win32cr::Foundation::BOOL),
    get_font_face_index : Proc(IDWriteFontFaceReference*, UInt32),
    get_simulations : Proc(IDWriteFontFaceReference*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS),
    get_font_file : Proc(IDWriteFontFaceReference*, Void**, Win32cr::Foundation::HRESULT),
    get_local_file_size : Proc(IDWriteFontFaceReference*, UInt64),
    get_file_size : Proc(IDWriteFontFaceReference*, UInt64),
    get_file_time : Proc(IDWriteFontFaceReference*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::HRESULT),
    get_locality : Proc(IDWriteFontFaceReference*, Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY),
    enqueue_font_download_request : Proc(IDWriteFontFaceReference*, Win32cr::Foundation::HRESULT),
    enqueue_character_download_request : Proc(IDWriteFontFaceReference*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    enqueue_glyph_download_request : Proc(IDWriteFontFaceReference*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    enqueue_file_fragment_download_request : Proc(IDWriteFontFaceReference*, UInt64, UInt64, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("5e7fa7ca-dde3-424c-89f0-9fcd6fed58cd")]
  record IDWriteFontFaceReference, lpVtbl : IDWriteFontFaceReferenceVtbl* do
    GUID = LibC::GUID.new(0x5e7fa7ca_u32, 0xdde3_u16, 0x424c_u16, StaticArray[0x89_u8, 0xf0_u8, 0x9f_u8, 0xcd_u8, 0x6f_u8, 0xed_u8, 0x58_u8, 0xcd_u8])
    def query_interface(this : IDWriteFontFaceReference*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFaceReference*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFaceReference*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_font_face_1(this : IDWriteFontFaceReference*, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_1.call(this, fontFace)
    end
    def create_font_face_with_simulations(this : IDWriteFontFaceReference*, fontFaceSimulationFlags : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_with_simulations.call(this, fontFaceSimulationFlags, fontFace)
    end
    def equals(this : IDWriteFontFaceReference*, fontFaceReference : Void*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.equals.call(this, fontFaceReference)
    end
    def get_font_face_index(this : IDWriteFontFaceReference*) : UInt32
      @lpVtbl.try &.value.get_font_face_index.call(this)
    end
    def get_simulations(this : IDWriteFontFaceReference*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS
      @lpVtbl.try &.value.get_simulations.call(this)
    end
    def get_font_file(this : IDWriteFontFaceReference*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_file.call(this, fontFile)
    end
    def get_local_file_size(this : IDWriteFontFaceReference*) : UInt64
      @lpVtbl.try &.value.get_local_file_size.call(this)
    end
    def get_file_size(this : IDWriteFontFaceReference*) : UInt64
      @lpVtbl.try &.value.get_file_size.call(this)
    end
    def get_file_time(this : IDWriteFontFaceReference*, lastWriteTime : Win32cr::Foundation::FILETIME*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_time.call(this, lastWriteTime)
    end
    def get_locality(this : IDWriteFontFaceReference*) : Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY
      @lpVtbl.try &.value.get_locality.call(this)
    end
    def enqueue_font_download_request(this : IDWriteFontFaceReference*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enqueue_font_download_request.call(this)
    end
    def enqueue_character_download_request(this : IDWriteFontFaceReference*, characters : UInt16*, characterCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enqueue_character_download_request.call(this, characters, characterCount)
    end
    def enqueue_glyph_download_request(this : IDWriteFontFaceReference*, glyphIndices : UInt16*, glyphCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enqueue_glyph_download_request.call(this, glyphIndices, glyphCount)
    end
    def enqueue_file_fragment_download_request(this : IDWriteFontFaceReference*, fileOffset : UInt64, fragmentSize : UInt64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enqueue_file_fragment_download_request.call(this, fileOffset, fragmentSize)
    end

  end

  @[Extern]
  record IDWriteFont3Vtbl,
    query_interface : Proc(IDWriteFont3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFont3*, UInt32),
    release : Proc(IDWriteFont3*, UInt32),
    get_font_family : Proc(IDWriteFont3*, Void**, Win32cr::Foundation::HRESULT),
    get_weight : Proc(IDWriteFont3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_stretch : Proc(IDWriteFont3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_style : Proc(IDWriteFont3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    is_symbol_font : Proc(IDWriteFont3*, Win32cr::Foundation::BOOL),
    get_face_names : Proc(IDWriteFont3*, Void**, Win32cr::Foundation::HRESULT),
    get_informational_strings : Proc(IDWriteFont3*, Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, Void**, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_simulations : Proc(IDWriteFont3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS),
    get_metrics_1 : Proc(IDWriteFont3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Void),
    has_character_1 : Proc(IDWriteFont3*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    create_font_face_1 : Proc(IDWriteFont3*, Void**, Win32cr::Foundation::HRESULT),
    get_metrics_2 : Proc(IDWriteFont3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*, Void),
    get_panose : Proc(IDWriteFont3*, Win32cr::Graphics::DirectWrite::DWRITE_PANOSE*, Void),
    get_unicode_ranges : Proc(IDWriteFont3*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, UInt32*, Win32cr::Foundation::HRESULT),
    is_monospaced_font : Proc(IDWriteFont3*, Win32cr::Foundation::BOOL),
    is_color_font : Proc(IDWriteFont3*, Win32cr::Foundation::BOOL),
    create_font_face_2 : Proc(IDWriteFont3*, Void**, Win32cr::Foundation::HRESULT),
    equals : Proc(IDWriteFont3*, Void*, Win32cr::Foundation::BOOL),
    get_font_face_reference : Proc(IDWriteFont3*, Void**, Win32cr::Foundation::HRESULT),
    has_character_2 : Proc(IDWriteFont3*, UInt32, Win32cr::Foundation::BOOL),
    get_locality : Proc(IDWriteFont3*, Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY)


  @[Extern]
  #@[Com("29748ed6-8c9c-4a6a-be0b-d912e8538944")]
  record IDWriteFont3, lpVtbl : IDWriteFont3Vtbl* do
    GUID = LibC::GUID.new(0x29748ed6_u32, 0x8c9c_u16, 0x4a6a_u16, StaticArray[0xbe_u8, 0xb_u8, 0xd9_u8, 0x12_u8, 0xe8_u8, 0x53_u8, 0x89_u8, 0x44_u8])
    def query_interface(this : IDWriteFont3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFont3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFont3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_family(this : IDWriteFont3*, fontFamily : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family.call(this, fontFamily)
    end
    def get_weight(this : IDWriteFont3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_weight.call(this)
    end
    def get_stretch(this : IDWriteFont3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_stretch.call(this)
    end
    def get_style(this : IDWriteFont3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_style.call(this)
    end
    def is_symbol_font(this : IDWriteFont3*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_symbol_font.call(this)
    end
    def get_face_names(this : IDWriteFont3*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_face_names.call(this, names)
    end
    def get_informational_strings(this : IDWriteFont3*, informationalStringID : Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, informationalStrings : Void**, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_informational_strings.call(this, informationalStringID, informationalStrings, exists)
    end
    def get_simulations(this : IDWriteFont3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS
      @lpVtbl.try &.value.get_simulations.call(this)
    end
    def get_metrics_1(this : IDWriteFont3*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Void
      @lpVtbl.try &.value.get_metrics_1.call(this, fontMetrics)
    end
    def has_character_1(this : IDWriteFont3*, unicodeValue : UInt32, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.has_character_1.call(this, unicodeValue, exists)
    end
    def create_font_face_1(this : IDWriteFont3*, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_1.call(this, fontFace)
    end
    def get_metrics_2(this : IDWriteFont3*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*) : Void
      @lpVtbl.try &.value.get_metrics_2.call(this, fontMetrics)
    end
    def get_panose(this : IDWriteFont3*, panose : Win32cr::Graphics::DirectWrite::DWRITE_PANOSE*) : Void
      @lpVtbl.try &.value.get_panose.call(this, panose)
    end
    def get_unicode_ranges(this : IDWriteFont3*, maxRangeCount : UInt32, unicodeRanges : Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, actualRangeCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_unicode_ranges.call(this, maxRangeCount, unicodeRanges, actualRangeCount)
    end
    def is_monospaced_font(this : IDWriteFont3*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_monospaced_font.call(this)
    end
    def is_color_font(this : IDWriteFont3*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_color_font.call(this)
    end
    def create_font_face_2(this : IDWriteFont3*, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_2.call(this, fontFace)
    end
    def equals(this : IDWriteFont3*, font : Void*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.equals.call(this, font)
    end
    def get_font_face_reference(this : IDWriteFont3*, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference.call(this, fontFaceReference)
    end
    def has_character_2(this : IDWriteFont3*, unicodeValue : UInt32) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_character_2.call(this, unicodeValue)
    end
    def get_locality(this : IDWriteFont3*) : Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY
      @lpVtbl.try &.value.get_locality.call(this)
    end

  end

  @[Extern]
  record IDWriteFontFace3Vtbl,
    query_interface : Proc(IDWriteFontFace3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFace3*, UInt32),
    release : Proc(IDWriteFontFace3*, UInt32),
    get_type : Proc(IDWriteFontFace3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE),
    get_files : Proc(IDWriteFontFace3*, UInt32*, Void**, Win32cr::Foundation::HRESULT),
    get_index : Proc(IDWriteFontFace3*, UInt32),
    get_simulations : Proc(IDWriteFontFace3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS),
    is_symbol_font : Proc(IDWriteFontFace3*, Win32cr::Foundation::BOOL),
    get_metrics_1 : Proc(IDWriteFontFace3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Void),
    get_glyph_count : Proc(IDWriteFontFace3*, UInt16),
    get_design_glyph_metrics : Proc(IDWriteFontFace3*, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_glyph_indices : Proc(IDWriteFontFace3*, UInt32*, UInt32, UInt16*, Win32cr::Foundation::HRESULT),
    try_get_font_table : Proc(IDWriteFontFace3*, UInt32, Void**, UInt32*, Void**, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    release_font_table : Proc(IDWriteFontFace3*, Void*, Void),
    get_glyph_run_outline : Proc(IDWriteFontFace3*, Float32, UInt16*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Void*, Win32cr::Foundation::HRESULT),
    get_recommended_rendering_mode_1_1 : Proc(IDWriteFontFace3*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_metrics_1 : Proc(IDWriteFontFace3*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_metrics : Proc(IDWriteFontFace3*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_metrics_2 : Proc(IDWriteFontFace3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*, Void),
    get_gdi_compatible_metrics_2 : Proc(IDWriteFontFace3*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*, Win32cr::Foundation::HRESULT),
    get_caret_metrics : Proc(IDWriteFontFace3*, Win32cr::Graphics::DirectWrite::DWRITE_CARET_METRICS*, Void),
    get_unicode_ranges : Proc(IDWriteFontFace3*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, UInt32*, Win32cr::Foundation::HRESULT),
    is_monospaced_font : Proc(IDWriteFontFace3*, Win32cr::Foundation::BOOL),
    get_design_glyph_advances : Proc(IDWriteFontFace3*, UInt32, UInt16*, Int32*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_advances : Proc(IDWriteFontFace3*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, UInt32, UInt16*, Int32*, Win32cr::Foundation::HRESULT),
    get_kerning_pair_adjustments : Proc(IDWriteFontFace3*, UInt32, UInt16*, Int32*, Win32cr::Foundation::HRESULT),
    has_kerning_pairs : Proc(IDWriteFontFace3*, Win32cr::Foundation::BOOL),
    get_recommended_rendering_mode_2_1 : Proc(IDWriteFontFace3*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Foundation::HRESULT),
    get_vertical_glyph_variants : Proc(IDWriteFontFace3*, UInt32, UInt16*, UInt16*, Win32cr::Foundation::HRESULT),
    has_vertical_glyph_variants : Proc(IDWriteFontFace3*, Win32cr::Foundation::BOOL),
    is_color_font : Proc(IDWriteFontFace3*, Win32cr::Foundation::BOOL),
    get_color_palette_count : Proc(IDWriteFontFace3*, UInt32),
    get_palette_entry_count : Proc(IDWriteFontFace3*, UInt32),
    get_palette_entries : Proc(IDWriteFontFace3*, UInt32, UInt32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_COLOR_F*, Win32cr::Foundation::HRESULT),
    get_recommended_rendering_mode_1_2 : Proc(IDWriteFontFace3*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*, Win32cr::Foundation::HRESULT),
    get_font_face_reference : Proc(IDWriteFontFace3*, Void**, Win32cr::Foundation::HRESULT),
    get_panose : Proc(IDWriteFontFace3*, Win32cr::Graphics::DirectWrite::DWRITE_PANOSE*, Void),
    get_weight : Proc(IDWriteFontFace3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_stretch : Proc(IDWriteFontFace3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_style : Proc(IDWriteFontFace3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    get_family_names_1 : Proc(IDWriteFontFace3*, Void**, Win32cr::Foundation::HRESULT),
    get_face_names_1 : Proc(IDWriteFontFace3*, Void**, Win32cr::Foundation::HRESULT),
    get_informational_strings : Proc(IDWriteFontFace3*, Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, Void**, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    has_character : Proc(IDWriteFontFace3*, UInt32, Win32cr::Foundation::BOOL),
    get_recommended_rendering_mode_2_2 : Proc(IDWriteFontFace3*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1*, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*, Win32cr::Foundation::HRESULT),
    is_character_local : Proc(IDWriteFontFace3*, UInt32, Win32cr::Foundation::BOOL),
    is_glyph_local : Proc(IDWriteFontFace3*, UInt16, Win32cr::Foundation::BOOL),
    are_characters_local : Proc(IDWriteFontFace3*, UInt16*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    are_glyphs_local : Proc(IDWriteFontFace3*, UInt16*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("d37d7598-09be-4222-a236-2081341cc1f2")]
  record IDWriteFontFace3, lpVtbl : IDWriteFontFace3Vtbl* do
    GUID = LibC::GUID.new(0xd37d7598_u32, 0x9be_u16, 0x4222_u16, StaticArray[0xa2_u8, 0x36_u8, 0x20_u8, 0x81_u8, 0x34_u8, 0x1c_u8, 0xc1_u8, 0xf2_u8])
    def query_interface(this : IDWriteFontFace3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFace3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFace3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type(this : IDWriteFontFace3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE
      @lpVtbl.try &.value.get_type.call(this)
    end
    def get_files(this : IDWriteFontFace3*, numberOfFiles : UInt32*, fontFiles : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_files.call(this, numberOfFiles, fontFiles)
    end
    def get_index(this : IDWriteFontFace3*) : UInt32
      @lpVtbl.try &.value.get_index.call(this)
    end
    def get_simulations(this : IDWriteFontFace3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS
      @lpVtbl.try &.value.get_simulations.call(this)
    end
    def is_symbol_font(this : IDWriteFontFace3*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_symbol_font.call(this)
    end
    def get_metrics_1(this : IDWriteFontFace3*, fontFaceMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Void
      @lpVtbl.try &.value.get_metrics_1.call(this, fontFaceMetrics)
    end
    def get_glyph_count(this : IDWriteFontFace3*) : UInt16
      @lpVtbl.try &.value.get_glyph_count.call(this)
    end
    def get_design_glyph_metrics(this : IDWriteFontFace3*, glyphIndices : UInt16*, glyphCount : UInt32, glyphMetrics : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_design_glyph_metrics.call(this, glyphIndices, glyphCount, glyphMetrics, isSideways)
    end
    def get_glyph_indices(this : IDWriteFontFace3*, codePoints : UInt32*, codePointCount : UInt32, glyphIndices : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_indices.call(this, codePoints, codePointCount, glyphIndices)
    end
    def try_get_font_table(this : IDWriteFontFace3*, openTypeTableTag : UInt32, tableData : Void**, tableSize : UInt32*, tableContext : Void**, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.try_get_font_table.call(this, openTypeTableTag, tableData, tableSize, tableContext, exists)
    end
    def release_font_table(this : IDWriteFontFace3*, tableContext : Void*) : Void
      @lpVtbl.try &.value.release_font_table.call(this, tableContext)
    end
    def get_glyph_run_outline(this : IDWriteFontFace3*, emSize : Float32, glyphIndices : UInt16*, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, glyphCount : UInt32, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, geometrySink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_run_outline.call(this, emSize, glyphIndices, glyphAdvances, glyphOffsets, glyphCount, isSideways, isRightToLeft, geometrySink)
    end
    def get_recommended_rendering_mode_1_1(this : IDWriteFontFace3*, emSize : Float32, pixelsPerDip : Float32, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_1_1.call(this, emSize, pixelsPerDip, measuringMode, renderingParams, renderingMode)
    end
    def get_gdi_compatible_metrics_1(this : IDWriteFontFace3*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, fontFaceMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_metrics_1.call(this, emSize, pixelsPerDip, transform, fontFaceMetrics)
    end
    def get_gdi_compatible_glyph_metrics(this : IDWriteFontFace3*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, glyphIndices : UInt16*, glyphCount : UInt32, glyphMetrics : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_metrics.call(this, emSize, pixelsPerDip, transform, useGdiNatural, glyphIndices, glyphCount, glyphMetrics, isSideways)
    end
    def get_metrics_2(this : IDWriteFontFace3*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*) : Void
      @lpVtbl.try &.value.get_metrics_2.call(this, fontMetrics)
    end
    def get_gdi_compatible_metrics_2(this : IDWriteFontFace3*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_metrics_2.call(this, emSize, pixelsPerDip, transform, fontMetrics)
    end
    def get_caret_metrics(this : IDWriteFontFace3*, caretMetrics : Win32cr::Graphics::DirectWrite::DWRITE_CARET_METRICS*) : Void
      @lpVtbl.try &.value.get_caret_metrics.call(this, caretMetrics)
    end
    def get_unicode_ranges(this : IDWriteFontFace3*, maxRangeCount : UInt32, unicodeRanges : Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, actualRangeCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_unicode_ranges.call(this, maxRangeCount, unicodeRanges, actualRangeCount)
    end
    def is_monospaced_font(this : IDWriteFontFace3*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_monospaced_font.call(this)
    end
    def get_design_glyph_advances(this : IDWriteFontFace3*, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvances : Int32*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_design_glyph_advances.call(this, glyphCount, glyphIndices, glyphAdvances, isSideways)
    end
    def get_gdi_compatible_glyph_advances(this : IDWriteFontFace3*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, isSideways : Win32cr::Foundation::BOOL, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvances : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_advances.call(this, emSize, pixelsPerDip, transform, useGdiNatural, isSideways, glyphCount, glyphIndices, glyphAdvances)
    end
    def get_kerning_pair_adjustments(this : IDWriteFontFace3*, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvanceAdjustments : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_kerning_pair_adjustments.call(this, glyphCount, glyphIndices, glyphAdvanceAdjustments)
    end
    def has_kerning_pairs(this : IDWriteFontFace3*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_kerning_pairs.call(this)
    end
    def get_recommended_rendering_mode_2_1(this : IDWriteFontFace3*, fontEmSize : Float32, dpiX : Float32, dpiY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, isSideways : Win32cr::Foundation::BOOL, outlineThreshold : Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_2_1.call(this, fontEmSize, dpiX, dpiY, transform, isSideways, outlineThreshold, measuringMode, renderingMode)
    end
    def get_vertical_glyph_variants(this : IDWriteFontFace3*, glyphCount : UInt32, nominalGlyphIndices : UInt16*, verticalGlyphIndices : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_vertical_glyph_variants.call(this, glyphCount, nominalGlyphIndices, verticalGlyphIndices)
    end
    def has_vertical_glyph_variants(this : IDWriteFontFace3*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_vertical_glyph_variants.call(this)
    end
    def is_color_font(this : IDWriteFontFace3*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_color_font.call(this)
    end
    def get_color_palette_count(this : IDWriteFontFace3*) : UInt32
      @lpVtbl.try &.value.get_color_palette_count.call(this)
    end
    def get_palette_entry_count(this : IDWriteFontFace3*) : UInt32
      @lpVtbl.try &.value.get_palette_entry_count.call(this)
    end
    def get_palette_entries(this : IDWriteFontFace3*, colorPaletteIndex : UInt32, firstEntryIndex : UInt32, entryCount : UInt32, paletteEntries : Win32cr::Graphics::DirectWrite::DWRITE_COLOR_F*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_palette_entries.call(this, colorPaletteIndex, firstEntryIndex, entryCount, paletteEntries)
    end
    def get_recommended_rendering_mode_1_2(this : IDWriteFontFace3*, fontEmSize : Float32, dpiX : Float32, dpiY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, isSideways : Win32cr::Foundation::BOOL, outlineThreshold : Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_1_2.call(this, fontEmSize, dpiX, dpiY, transform, isSideways, outlineThreshold, measuringMode, renderingParams, renderingMode, gridFitMode)
    end
    def get_font_face_reference(this : IDWriteFontFace3*, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference.call(this, fontFaceReference)
    end
    def get_panose(this : IDWriteFontFace3*, panose : Win32cr::Graphics::DirectWrite::DWRITE_PANOSE*) : Void
      @lpVtbl.try &.value.get_panose.call(this, panose)
    end
    def get_weight(this : IDWriteFontFace3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_weight.call(this)
    end
    def get_stretch(this : IDWriteFontFace3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_stretch.call(this)
    end
    def get_style(this : IDWriteFontFace3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_style.call(this)
    end
    def get_family_names_1(this : IDWriteFontFace3*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_family_names_1.call(this, names)
    end
    def get_face_names_1(this : IDWriteFontFace3*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_face_names_1.call(this, names)
    end
    def get_informational_strings(this : IDWriteFontFace3*, informationalStringID : Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, informationalStrings : Void**, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_informational_strings.call(this, informationalStringID, informationalStrings, exists)
    end
    def has_character(this : IDWriteFontFace3*, unicodeValue : UInt32) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_character.call(this, unicodeValue)
    end
    def get_recommended_rendering_mode_2_2(this : IDWriteFontFace3*, fontEmSize : Float32, dpiX : Float32, dpiY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, isSideways : Win32cr::Foundation::BOOL, outlineThreshold : Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1*, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_2_2.call(this, fontEmSize, dpiX, dpiY, transform, isSideways, outlineThreshold, measuringMode, renderingParams, renderingMode, gridFitMode)
    end
    def is_character_local(this : IDWriteFontFace3*, unicodeValue : UInt32) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_character_local.call(this, unicodeValue)
    end
    def is_glyph_local(this : IDWriteFontFace3*, glyphId : UInt16) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_glyph_local.call(this, glyphId)
    end
    def are_characters_local(this : IDWriteFontFace3*, characters : UInt16*, characterCount : UInt32, enqueueIfNotLocal : Win32cr::Foundation::BOOL, isLocal : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.are_characters_local.call(this, characters, characterCount, enqueueIfNotLocal, isLocal)
    end
    def are_glyphs_local(this : IDWriteFontFace3*, glyphIndices : UInt16*, glyphCount : UInt32, enqueueIfNotLocal : Win32cr::Foundation::BOOL, isLocal : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.are_glyphs_local.call(this, glyphIndices, glyphCount, enqueueIfNotLocal, isLocal)
    end

  end

  @[Extern]
  record IDWriteStringListVtbl,
    query_interface : Proc(IDWriteStringList*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteStringList*, UInt32),
    release : Proc(IDWriteStringList*, UInt32),
    get_count : Proc(IDWriteStringList*, UInt32),
    get_locale_name_length : Proc(IDWriteStringList*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_locale_name : Proc(IDWriteStringList*, UInt32, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_string_length : Proc(IDWriteStringList*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_string : Proc(IDWriteStringList*, UInt32, UInt16*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("cfee3140-1157-47ca-8b85-31bfcf3f2d0e")]
  record IDWriteStringList, lpVtbl : IDWriteStringListVtbl* do
    GUID = LibC::GUID.new(0xcfee3140_u32, 0x1157_u16, 0x47ca_u16, StaticArray[0x8b_u8, 0x85_u8, 0x31_u8, 0xbf_u8, 0xcf_u8, 0x3f_u8, 0x2d_u8, 0xe_u8])
    def query_interface(this : IDWriteStringList*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteStringList*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteStringList*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_count(this : IDWriteStringList*) : UInt32
      @lpVtbl.try &.value.get_count.call(this)
    end
    def get_locale_name_length(this : IDWriteStringList*, listIndex : UInt32, length : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_length.call(this, listIndex, length)
    end
    def get_locale_name(this : IDWriteStringList*, listIndex : UInt32, localeName : UInt16*, size : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name.call(this, listIndex, localeName, size)
    end
    def get_string_length(this : IDWriteStringList*, listIndex : UInt32, length : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_string_length.call(this, listIndex, length)
    end
    def get_string(this : IDWriteStringList*, listIndex : UInt32, stringBuffer : UInt16*, stringBufferSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_string.call(this, listIndex, stringBuffer, stringBufferSize)
    end

  end

  @[Extern]
  record IDWriteFontDownloadListenerVtbl,
    query_interface : Proc(IDWriteFontDownloadListener*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontDownloadListener*, UInt32),
    release : Proc(IDWriteFontDownloadListener*, UInt32),
    download_completed : Proc(IDWriteFontDownloadListener*, Void*, Void*, Win32cr::Foundation::HRESULT, Void)


  @[Extern]
  #@[Com("b06fe5b9-43ec-4393-881b-dbe4dc72fda7")]
  record IDWriteFontDownloadListener, lpVtbl : IDWriteFontDownloadListenerVtbl* do
    GUID = LibC::GUID.new(0xb06fe5b9_u32, 0x43ec_u16, 0x4393_u16, StaticArray[0x88_u8, 0x1b_u8, 0xdb_u8, 0xe4_u8, 0xdc_u8, 0x72_u8, 0xfd_u8, 0xa7_u8])
    def query_interface(this : IDWriteFontDownloadListener*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontDownloadListener*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontDownloadListener*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def download_completed(this : IDWriteFontDownloadListener*, downloadQueue : Void*, context : Void*, downloadResult : Win32cr::Foundation::HRESULT) : Void
      @lpVtbl.try &.value.download_completed.call(this, downloadQueue, context, downloadResult)
    end

  end

  @[Extern]
  record IDWriteFontDownloadQueueVtbl,
    query_interface : Proc(IDWriteFontDownloadQueue*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontDownloadQueue*, UInt32),
    release : Proc(IDWriteFontDownloadQueue*, UInt32),
    add_listener : Proc(IDWriteFontDownloadQueue*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    remove_listener : Proc(IDWriteFontDownloadQueue*, UInt32, Win32cr::Foundation::HRESULT),
    is_empty : Proc(IDWriteFontDownloadQueue*, Win32cr::Foundation::BOOL),
    begin_download : Proc(IDWriteFontDownloadQueue*, Void*, Win32cr::Foundation::HRESULT),
    cancel_download : Proc(IDWriteFontDownloadQueue*, Win32cr::Foundation::HRESULT),
    get_generation_count : Proc(IDWriteFontDownloadQueue*, UInt64)


  @[Extern]
  #@[Com("b71e6052-5aea-4fa3-832e-f60d431f7e91")]
  record IDWriteFontDownloadQueue, lpVtbl : IDWriteFontDownloadQueueVtbl* do
    GUID = LibC::GUID.new(0xb71e6052_u32, 0x5aea_u16, 0x4fa3_u16, StaticArray[0x83_u8, 0x2e_u8, 0xf6_u8, 0xd_u8, 0x43_u8, 0x1f_u8, 0x7e_u8, 0x91_u8])
    def query_interface(this : IDWriteFontDownloadQueue*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontDownloadQueue*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontDownloadQueue*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_listener(this : IDWriteFontDownloadQueue*, listener : Void*, token : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_listener.call(this, listener, token)
    end
    def remove_listener(this : IDWriteFontDownloadQueue*, token : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_listener.call(this, token)
    end
    def is_empty(this : IDWriteFontDownloadQueue*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_empty.call(this)
    end
    def begin_download(this : IDWriteFontDownloadQueue*, context : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.begin_download.call(this, context)
    end
    def cancel_download(this : IDWriteFontDownloadQueue*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cancel_download.call(this)
    end
    def get_generation_count(this : IDWriteFontDownloadQueue*) : UInt64
      @lpVtbl.try &.value.get_generation_count.call(this)
    end

  end

  @[Extern]
  record IDWriteGdiInterop1Vtbl,
    query_interface : Proc(IDWriteGdiInterop1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteGdiInterop1*, UInt32),
    release : Proc(IDWriteGdiInterop1*, UInt32),
    create_font_from_logfont_1 : Proc(IDWriteGdiInterop1*, Win32cr::Graphics::Gdi::LOGFONTW*, Void**, Win32cr::Foundation::HRESULT),
    convert_font_to_logfont : Proc(IDWriteGdiInterop1*, Void*, Win32cr::Graphics::Gdi::LOGFONTW*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    convert_font_face_to_logfont : Proc(IDWriteGdiInterop1*, Void*, Win32cr::Graphics::Gdi::LOGFONTW*, Win32cr::Foundation::HRESULT),
    create_font_face_from_hdc : Proc(IDWriteGdiInterop1*, Win32cr::Graphics::Gdi::HDC, Void**, Win32cr::Foundation::HRESULT),
    create_bitmap_render_target : Proc(IDWriteGdiInterop1*, Win32cr::Graphics::Gdi::HDC, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_font_from_logfont_2 : Proc(IDWriteGdiInterop1*, Win32cr::Graphics::Gdi::LOGFONTW*, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_font_signature_1 : Proc(IDWriteGdiInterop1*, Void*, Win32cr::Globalization::FONTSIGNATURE*, Win32cr::Foundation::HRESULT),
    get_font_signature_2 : Proc(IDWriteGdiInterop1*, Void*, Win32cr::Globalization::FONTSIGNATURE*, Win32cr::Foundation::HRESULT),
    get_matching_fonts_by_logfont : Proc(IDWriteGdiInterop1*, Win32cr::Graphics::Gdi::LOGFONTA*, Void*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("4556be70-3abd-4f70-90be-421780a6f515")]
  record IDWriteGdiInterop1, lpVtbl : IDWriteGdiInterop1Vtbl* do
    GUID = LibC::GUID.new(0x4556be70_u32, 0x3abd_u16, 0x4f70_u16, StaticArray[0x90_u8, 0xbe_u8, 0x42_u8, 0x17_u8, 0x80_u8, 0xa6_u8, 0xf5_u8, 0x15_u8])
    def query_interface(this : IDWriteGdiInterop1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteGdiInterop1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteGdiInterop1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_font_from_logfont_1(this : IDWriteGdiInterop1*, logFont : Win32cr::Graphics::Gdi::LOGFONTW*, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_from_logfont_1.call(this, logFont, font)
    end
    def convert_font_to_logfont(this : IDWriteGdiInterop1*, font : Void*, logFont : Win32cr::Graphics::Gdi::LOGFONTW*, isSystemFont : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.convert_font_to_logfont.call(this, font, logFont, isSystemFont)
    end
    def convert_font_face_to_logfont(this : IDWriteGdiInterop1*, font : Void*, logFont : Win32cr::Graphics::Gdi::LOGFONTW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.convert_font_face_to_logfont.call(this, font, logFont)
    end
    def create_font_face_from_hdc(this : IDWriteGdiInterop1*, hdc : Win32cr::Graphics::Gdi::HDC, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_from_hdc.call(this, hdc, fontFace)
    end
    def create_bitmap_render_target(this : IDWriteGdiInterop1*, hdc : Win32cr::Graphics::Gdi::HDC, width : UInt32, height : UInt32, renderTarget : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_bitmap_render_target.call(this, hdc, width, height, renderTarget)
    end
    def create_font_from_logfont_2(this : IDWriteGdiInterop1*, logFont : Win32cr::Graphics::Gdi::LOGFONTW*, fontCollection : Void*, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_from_logfont_2.call(this, logFont, fontCollection, font)
    end
    def get_font_signature_1(this : IDWriteGdiInterop1*, fontFace : Void*, fontSignature : Win32cr::Globalization::FONTSIGNATURE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_signature_1.call(this, fontFace, fontSignature)
    end
    def get_font_signature_2(this : IDWriteGdiInterop1*, font : Void*, fontSignature : Win32cr::Globalization::FONTSIGNATURE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_signature_2.call(this, font, fontSignature)
    end
    def get_matching_fonts_by_logfont(this : IDWriteGdiInterop1*, logFont : Win32cr::Graphics::Gdi::LOGFONTA*, fontSet : Void*, filteredSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts_by_logfont.call(this, logFont, fontSet, filteredSet)
    end

  end

  @[Extern]
  record IDWriteTextFormat2Vtbl,
    query_interface : Proc(IDWriteTextFormat2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextFormat2*, UInt32),
    release : Proc(IDWriteTextFormat2*, UInt32),
    set_text_alignment : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_paragraph_alignment : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_word_wrapping : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING, Win32cr::Foundation::HRESULT),
    set_reading_direction : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION, Win32cr::Foundation::HRESULT),
    set_flow_direction : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION, Win32cr::Foundation::HRESULT),
    set_incremental_tab_stop : Proc(IDWriteTextFormat2*, Float32, Win32cr::Foundation::HRESULT),
    set_trimming : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void*, Win32cr::Foundation::HRESULT),
    set_line_spacing_1 : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, Float32, Float32, Win32cr::Foundation::HRESULT),
    get_text_alignment : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT),
    get_paragraph_alignment : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT),
    get_word_wrapping : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING),
    get_reading_direction : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION),
    get_flow_direction : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION),
    get_incremental_tab_stop : Proc(IDWriteTextFormat2*, Float32),
    get_trimming : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void**, Win32cr::Foundation::HRESULT),
    get_line_spacing_1 : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, Float32*, Float32*, Win32cr::Foundation::HRESULT),
    get_font_collection_1 : Proc(IDWriteTextFormat2*, Void**, Win32cr::Foundation::HRESULT),
    get_font_family_name_length_1 : Proc(IDWriteTextFormat2*, UInt32),
    get_font_family_name_1 : Proc(IDWriteTextFormat2*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_font_weight_1 : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_font_style_1 : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    get_font_stretch_1 : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_font_size_1 : Proc(IDWriteTextFormat2*, Float32),
    get_locale_name_length_1 : Proc(IDWriteTextFormat2*, UInt32),
    get_locale_name_1 : Proc(IDWriteTextFormat2*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    set_vertical_glyph_orientation : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION, Win32cr::Foundation::HRESULT),
    get_vertical_glyph_orientation : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION),
    set_last_line_wrapping : Proc(IDWriteTextFormat2*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_last_line_wrapping : Proc(IDWriteTextFormat2*, Win32cr::Foundation::BOOL),
    set_optical_alignment : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT, Win32cr::Foundation::HRESULT),
    get_optical_alignment : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT),
    set_font_fallback : Proc(IDWriteTextFormat2*, Void*, Win32cr::Foundation::HRESULT),
    get_font_fallback : Proc(IDWriteTextFormat2*, Void**, Win32cr::Foundation::HRESULT),
    set_line_spacing_2 : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*, Win32cr::Foundation::HRESULT),
    get_line_spacing_2 : Proc(IDWriteTextFormat2*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("f67e0edd-9e3d-4ecc-8c32-4183253dfe70")]
  record IDWriteTextFormat2, lpVtbl : IDWriteTextFormat2Vtbl* do
    GUID = LibC::GUID.new(0xf67e0edd_u32, 0x9e3d_u16, 0x4ecc_u16, StaticArray[0x8c_u8, 0x32_u8, 0x41_u8, 0x83_u8, 0x25_u8, 0x3d_u8, 0xfe_u8, 0x70_u8])
    def query_interface(this : IDWriteTextFormat2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextFormat2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextFormat2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_text_alignment(this : IDWriteTextFormat2*, textAlignment : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_text_alignment.call(this, textAlignment)
    end
    def set_paragraph_alignment(this : IDWriteTextFormat2*, paragraphAlignment : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_paragraph_alignment.call(this, paragraphAlignment)
    end
    def set_word_wrapping(this : IDWriteTextFormat2*, wordWrapping : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_word_wrapping.call(this, wordWrapping)
    end
    def set_reading_direction(this : IDWriteTextFormat2*, readingDirection : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_reading_direction.call(this, readingDirection)
    end
    def set_flow_direction(this : IDWriteTextFormat2*, flowDirection : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flow_direction.call(this, flowDirection)
    end
    def set_incremental_tab_stop(this : IDWriteTextFormat2*, incrementalTabStop : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_incremental_tab_stop.call(this, incrementalTabStop)
    end
    def set_trimming(this : IDWriteTextFormat2*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def set_line_spacing_1(this : IDWriteTextFormat2*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, lineSpacing : Float32, baseline : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_text_alignment(this : IDWriteTextFormat2*) : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT
      @lpVtbl.try &.value.get_text_alignment.call(this)
    end
    def get_paragraph_alignment(this : IDWriteTextFormat2*) : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT
      @lpVtbl.try &.value.get_paragraph_alignment.call(this)
    end
    def get_word_wrapping(this : IDWriteTextFormat2*) : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING
      @lpVtbl.try &.value.get_word_wrapping.call(this)
    end
    def get_reading_direction(this : IDWriteTextFormat2*) : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION
      @lpVtbl.try &.value.get_reading_direction.call(this)
    end
    def get_flow_direction(this : IDWriteTextFormat2*) : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION
      @lpVtbl.try &.value.get_flow_direction.call(this)
    end
    def get_incremental_tab_stop(this : IDWriteTextFormat2*) : Float32
      @lpVtbl.try &.value.get_incremental_tab_stop.call(this)
    end
    def get_trimming(this : IDWriteTextFormat2*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def get_line_spacing_1(this : IDWriteTextFormat2*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, lineSpacing : Float32*, baseline : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_font_collection_1(this : IDWriteTextFormat2*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection_1.call(this, fontCollection)
    end
    def get_font_family_name_length_1(this : IDWriteTextFormat2*) : UInt32
      @lpVtbl.try &.value.get_font_family_name_length_1.call(this)
    end
    def get_font_family_name_1(this : IDWriteTextFormat2*, fontFamilyName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_1.call(this, fontFamilyName, nameSize)
    end
    def get_font_weight_1(this : IDWriteTextFormat2*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_font_weight_1.call(this)
    end
    def get_font_style_1(this : IDWriteTextFormat2*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_font_style_1.call(this)
    end
    def get_font_stretch_1(this : IDWriteTextFormat2*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_font_stretch_1.call(this)
    end
    def get_font_size_1(this : IDWriteTextFormat2*) : Float32
      @lpVtbl.try &.value.get_font_size_1.call(this)
    end
    def get_locale_name_length_1(this : IDWriteTextFormat2*) : UInt32
      @lpVtbl.try &.value.get_locale_name_length_1.call(this)
    end
    def get_locale_name_1(this : IDWriteTextFormat2*, localeName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_1.call(this, localeName, nameSize)
    end
    def set_vertical_glyph_orientation(this : IDWriteTextFormat2*, glyphOrientation : Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_vertical_glyph_orientation.call(this, glyphOrientation)
    end
    def get_vertical_glyph_orientation(this : IDWriteTextFormat2*) : Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION
      @lpVtbl.try &.value.get_vertical_glyph_orientation.call(this)
    end
    def set_last_line_wrapping(this : IDWriteTextFormat2*, isLastLineWrappingEnabled : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_last_line_wrapping.call(this, isLastLineWrappingEnabled)
    end
    def get_last_line_wrapping(this : IDWriteTextFormat2*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.get_last_line_wrapping.call(this)
    end
    def set_optical_alignment(this : IDWriteTextFormat2*, opticalAlignment : Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_optical_alignment.call(this, opticalAlignment)
    end
    def get_optical_alignment(this : IDWriteTextFormat2*) : Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT
      @lpVtbl.try &.value.get_optical_alignment.call(this)
    end
    def set_font_fallback(this : IDWriteTextFormat2*, fontFallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_fallback.call(this, fontFallback)
    end
    def get_font_fallback(this : IDWriteTextFormat2*, fontFallback : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_fallback.call(this, fontFallback)
    end
    def set_line_spacing_2(this : IDWriteTextFormat2*, lineSpacingOptions : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line_spacing_2.call(this, lineSpacingOptions)
    end
    def get_line_spacing_2(this : IDWriteTextFormat2*, lineSpacingOptions : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_spacing_2.call(this, lineSpacingOptions)
    end

  end

  @[Extern]
  record IDWriteTextLayout3Vtbl,
    query_interface : Proc(IDWriteTextLayout3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextLayout3*, UInt32),
    release : Proc(IDWriteTextLayout3*, UInt32),
    set_text_alignment : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_paragraph_alignment : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_word_wrapping : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING, Win32cr::Foundation::HRESULT),
    set_reading_direction : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION, Win32cr::Foundation::HRESULT),
    set_flow_direction : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION, Win32cr::Foundation::HRESULT),
    set_incremental_tab_stop : Proc(IDWriteTextLayout3*, Float32, Win32cr::Foundation::HRESULT),
    set_trimming : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void*, Win32cr::Foundation::HRESULT),
    set_line_spacing_1 : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, Float32, Float32, Win32cr::Foundation::HRESULT),
    get_text_alignment : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT),
    get_paragraph_alignment : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT),
    get_word_wrapping : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING),
    get_reading_direction : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION),
    get_flow_direction : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION),
    get_incremental_tab_stop : Proc(IDWriteTextLayout3*, Float32),
    get_trimming : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void**, Win32cr::Foundation::HRESULT),
    get_line_spacing_1 : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, Float32*, Float32*, Win32cr::Foundation::HRESULT),
    get_font_collection_1 : Proc(IDWriteTextLayout3*, Void**, Win32cr::Foundation::HRESULT),
    get_font_family_name_length_1 : Proc(IDWriteTextLayout3*, UInt32),
    get_font_family_name_1 : Proc(IDWriteTextLayout3*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_font_weight_1 : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_font_style_1 : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    get_font_stretch_1 : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_font_size_1 : Proc(IDWriteTextLayout3*, Float32),
    get_locale_name_length_1 : Proc(IDWriteTextLayout3*, UInt32),
    get_locale_name_1 : Proc(IDWriteTextLayout3*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    set_max_width : Proc(IDWriteTextLayout3*, Float32, Win32cr::Foundation::HRESULT),
    set_max_height : Proc(IDWriteTextLayout3*, Float32, Win32cr::Foundation::HRESULT),
    set_font_collection : Proc(IDWriteTextLayout3*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_family_name : Proc(IDWriteTextLayout3*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_weight : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_style : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_stretch : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_size : Proc(IDWriteTextLayout3*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_underline : Proc(IDWriteTextLayout3*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_strikethrough : Proc(IDWriteTextLayout3*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_drawing_effect : Proc(IDWriteTextLayout3*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_inline_object : Proc(IDWriteTextLayout3*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_typography : Proc(IDWriteTextLayout3*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_locale_name : Proc(IDWriteTextLayout3*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    get_max_width : Proc(IDWriteTextLayout3*, Float32),
    get_max_height : Proc(IDWriteTextLayout3*, Float32),
    get_font_collection_2 : Proc(IDWriteTextLayout3*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_family_name_length_2 : Proc(IDWriteTextLayout3*, UInt32, UInt32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_family_name_2 : Proc(IDWriteTextLayout3*, UInt32, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_weight_2 : Proc(IDWriteTextLayout3*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_style_2 : Proc(IDWriteTextLayout3*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_stretch_2 : Proc(IDWriteTextLayout3*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_size_2 : Proc(IDWriteTextLayout3*, UInt32, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_underline : Proc(IDWriteTextLayout3*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_strikethrough : Proc(IDWriteTextLayout3*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_drawing_effect : Proc(IDWriteTextLayout3*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_inline_object : Proc(IDWriteTextLayout3*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_typography : Proc(IDWriteTextLayout3*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_locale_name_length_2 : Proc(IDWriteTextLayout3*, UInt32, UInt32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_locale_name_2 : Proc(IDWriteTextLayout3*, UInt32, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    draw : Proc(IDWriteTextLayout3*, Void*, Void*, Float32, Float32, Win32cr::Foundation::HRESULT),
    get_line_metrics_1 : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_METRICS*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_metrics_1 : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS*, Win32cr::Foundation::HRESULT),
    get_overhang_metrics : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_OVERHANG_METRICS*, Win32cr::Foundation::HRESULT),
    get_cluster_metrics : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_CLUSTER_METRICS*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    determine_min_width : Proc(IDWriteTextLayout3*, Float32*, Win32cr::Foundation::HRESULT),
    hit_test_point : Proc(IDWriteTextLayout3*, Float32, Float32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, Win32cr::Foundation::HRESULT),
    hit_test_text_position : Proc(IDWriteTextLayout3*, UInt32, Win32cr::Foundation::BOOL, Float32*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, Win32cr::Foundation::HRESULT),
    hit_test_text_range : Proc(IDWriteTextLayout3*, UInt32, UInt32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    set_pair_kerning : Proc(IDWriteTextLayout3*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    get_pair_kerning : Proc(IDWriteTextLayout3*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    set_character_spacing : Proc(IDWriteTextLayout3*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    get_character_spacing : Proc(IDWriteTextLayout3*, UInt32, Float32*, Float32*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_metrics_2 : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS1*, Win32cr::Foundation::HRESULT),
    set_vertical_glyph_orientation : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION, Win32cr::Foundation::HRESULT),
    get_vertical_glyph_orientation : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION),
    set_last_line_wrapping : Proc(IDWriteTextLayout3*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_last_line_wrapping : Proc(IDWriteTextLayout3*, Win32cr::Foundation::BOOL),
    set_optical_alignment : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT, Win32cr::Foundation::HRESULT),
    get_optical_alignment : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT),
    set_font_fallback : Proc(IDWriteTextLayout3*, Void*, Win32cr::Foundation::HRESULT),
    get_font_fallback : Proc(IDWriteTextLayout3*, Void**, Win32cr::Foundation::HRESULT),
    invalidate_layout : Proc(IDWriteTextLayout3*, Win32cr::Foundation::HRESULT),
    set_line_spacing : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*, Win32cr::Foundation::HRESULT),
    get_line_spacing : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*, Win32cr::Foundation::HRESULT),
    get_line_metrics_2 : Proc(IDWriteTextLayout3*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_METRICS1*, UInt32, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("07ddcd52-020e-4de8-ac33-6c953d83f92d")]
  record IDWriteTextLayout3, lpVtbl : IDWriteTextLayout3Vtbl* do
    GUID = LibC::GUID.new(0x7ddcd52_u32, 0x20e_u16, 0x4de8_u16, StaticArray[0xac_u8, 0x33_u8, 0x6c_u8, 0x95_u8, 0x3d_u8, 0x83_u8, 0xf9_u8, 0x2d_u8])
    def query_interface(this : IDWriteTextLayout3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextLayout3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextLayout3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_text_alignment(this : IDWriteTextLayout3*, textAlignment : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_text_alignment.call(this, textAlignment)
    end
    def set_paragraph_alignment(this : IDWriteTextLayout3*, paragraphAlignment : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_paragraph_alignment.call(this, paragraphAlignment)
    end
    def set_word_wrapping(this : IDWriteTextLayout3*, wordWrapping : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_word_wrapping.call(this, wordWrapping)
    end
    def set_reading_direction(this : IDWriteTextLayout3*, readingDirection : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_reading_direction.call(this, readingDirection)
    end
    def set_flow_direction(this : IDWriteTextLayout3*, flowDirection : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flow_direction.call(this, flowDirection)
    end
    def set_incremental_tab_stop(this : IDWriteTextLayout3*, incrementalTabStop : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_incremental_tab_stop.call(this, incrementalTabStop)
    end
    def set_trimming(this : IDWriteTextLayout3*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def set_line_spacing_1(this : IDWriteTextLayout3*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, lineSpacing : Float32, baseline : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_text_alignment(this : IDWriteTextLayout3*) : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT
      @lpVtbl.try &.value.get_text_alignment.call(this)
    end
    def get_paragraph_alignment(this : IDWriteTextLayout3*) : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT
      @lpVtbl.try &.value.get_paragraph_alignment.call(this)
    end
    def get_word_wrapping(this : IDWriteTextLayout3*) : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING
      @lpVtbl.try &.value.get_word_wrapping.call(this)
    end
    def get_reading_direction(this : IDWriteTextLayout3*) : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION
      @lpVtbl.try &.value.get_reading_direction.call(this)
    end
    def get_flow_direction(this : IDWriteTextLayout3*) : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION
      @lpVtbl.try &.value.get_flow_direction.call(this)
    end
    def get_incremental_tab_stop(this : IDWriteTextLayout3*) : Float32
      @lpVtbl.try &.value.get_incremental_tab_stop.call(this)
    end
    def get_trimming(this : IDWriteTextLayout3*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def get_line_spacing_1(this : IDWriteTextLayout3*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, lineSpacing : Float32*, baseline : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_font_collection_1(this : IDWriteTextLayout3*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection_1.call(this, fontCollection)
    end
    def get_font_family_name_length_1(this : IDWriteTextLayout3*) : UInt32
      @lpVtbl.try &.value.get_font_family_name_length_1.call(this)
    end
    def get_font_family_name_1(this : IDWriteTextLayout3*, fontFamilyName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_1.call(this, fontFamilyName, nameSize)
    end
    def get_font_weight_1(this : IDWriteTextLayout3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_font_weight_1.call(this)
    end
    def get_font_style_1(this : IDWriteTextLayout3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_font_style_1.call(this)
    end
    def get_font_stretch_1(this : IDWriteTextLayout3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_font_stretch_1.call(this)
    end
    def get_font_size_1(this : IDWriteTextLayout3*) : Float32
      @lpVtbl.try &.value.get_font_size_1.call(this)
    end
    def get_locale_name_length_1(this : IDWriteTextLayout3*) : UInt32
      @lpVtbl.try &.value.get_locale_name_length_1.call(this)
    end
    def get_locale_name_1(this : IDWriteTextLayout3*, localeName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_1.call(this, localeName, nameSize)
    end
    def set_max_width(this : IDWriteTextLayout3*, maxWidth : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_max_width.call(this, maxWidth)
    end
    def set_max_height(this : IDWriteTextLayout3*, maxHeight : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_max_height.call(this, maxHeight)
    end
    def set_font_collection(this : IDWriteTextLayout3*, fontCollection : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_collection.call(this, fontCollection, textRange)
    end
    def set_font_family_name(this : IDWriteTextLayout3*, fontFamilyName : Win32cr::Foundation::PWSTR, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_family_name.call(this, fontFamilyName, textRange)
    end
    def set_font_weight(this : IDWriteTextLayout3*, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_weight.call(this, fontWeight, textRange)
    end
    def set_font_style(this : IDWriteTextLayout3*, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_style.call(this, fontStyle, textRange)
    end
    def set_font_stretch(this : IDWriteTextLayout3*, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_stretch.call(this, fontStretch, textRange)
    end
    def set_font_size(this : IDWriteTextLayout3*, fontSize : Float32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_size.call(this, fontSize, textRange)
    end
    def set_underline(this : IDWriteTextLayout3*, hasUnderline : Win32cr::Foundation::BOOL, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_underline.call(this, hasUnderline, textRange)
    end
    def set_strikethrough(this : IDWriteTextLayout3*, hasStrikethrough : Win32cr::Foundation::BOOL, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_strikethrough.call(this, hasStrikethrough, textRange)
    end
    def set_drawing_effect(this : IDWriteTextLayout3*, drawingEffect : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_drawing_effect.call(this, drawingEffect, textRange)
    end
    def set_inline_object(this : IDWriteTextLayout3*, inlineObject : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_inline_object.call(this, inlineObject, textRange)
    end
    def set_typography(this : IDWriteTextLayout3*, typography : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_typography.call(this, typography, textRange)
    end
    def set_locale_name(this : IDWriteTextLayout3*, localeName : Win32cr::Foundation::PWSTR, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_locale_name.call(this, localeName, textRange)
    end
    def get_max_width(this : IDWriteTextLayout3*) : Float32
      @lpVtbl.try &.value.get_max_width.call(this)
    end
    def get_max_height(this : IDWriteTextLayout3*) : Float32
      @lpVtbl.try &.value.get_max_height.call(this)
    end
    def get_font_collection_2(this : IDWriteTextLayout3*, currentPosition : UInt32, fontCollection : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection_2.call(this, currentPosition, fontCollection, textRange)
    end
    def get_font_family_name_length_2(this : IDWriteTextLayout3*, currentPosition : UInt32, nameLength : UInt32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_length_2.call(this, currentPosition, nameLength, textRange)
    end
    def get_font_family_name_2(this : IDWriteTextLayout3*, currentPosition : UInt32, fontFamilyName : UInt16*, nameSize : UInt32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_2.call(this, currentPosition, fontFamilyName, nameSize, textRange)
    end
    def get_font_weight_2(this : IDWriteTextLayout3*, currentPosition : UInt32, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_weight_2.call(this, currentPosition, fontWeight, textRange)
    end
    def get_font_style_2(this : IDWriteTextLayout3*, currentPosition : UInt32, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_style_2.call(this, currentPosition, fontStyle, textRange)
    end
    def get_font_stretch_2(this : IDWriteTextLayout3*, currentPosition : UInt32, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_stretch_2.call(this, currentPosition, fontStretch, textRange)
    end
    def get_font_size_2(this : IDWriteTextLayout3*, currentPosition : UInt32, fontSize : Float32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_size_2.call(this, currentPosition, fontSize, textRange)
    end
    def get_underline(this : IDWriteTextLayout3*, currentPosition : UInt32, hasUnderline : Win32cr::Foundation::BOOL*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_underline.call(this, currentPosition, hasUnderline, textRange)
    end
    def get_strikethrough(this : IDWriteTextLayout3*, currentPosition : UInt32, hasStrikethrough : Win32cr::Foundation::BOOL*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_strikethrough.call(this, currentPosition, hasStrikethrough, textRange)
    end
    def get_drawing_effect(this : IDWriteTextLayout3*, currentPosition : UInt32, drawingEffect : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_drawing_effect.call(this, currentPosition, drawingEffect, textRange)
    end
    def get_inline_object(this : IDWriteTextLayout3*, currentPosition : UInt32, inlineObject : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_inline_object.call(this, currentPosition, inlineObject, textRange)
    end
    def get_typography(this : IDWriteTextLayout3*, currentPosition : UInt32, typography : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_typography.call(this, currentPosition, typography, textRange)
    end
    def get_locale_name_length_2(this : IDWriteTextLayout3*, currentPosition : UInt32, nameLength : UInt32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_length_2.call(this, currentPosition, nameLength, textRange)
    end
    def get_locale_name_2(this : IDWriteTextLayout3*, currentPosition : UInt32, localeName : UInt16*, nameSize : UInt32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_2.call(this, currentPosition, localeName, nameSize, textRange)
    end
    def draw(this : IDWriteTextLayout3*, clientDrawingContext : Void*, renderer : Void*, originX : Float32, originY : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw.call(this, clientDrawingContext, renderer, originX, originY)
    end
    def get_line_metrics_1(this : IDWriteTextLayout3*, lineMetrics : Win32cr::Graphics::DirectWrite::DWRITE_LINE_METRICS*, maxLineCount : UInt32, actualLineCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_metrics_1.call(this, lineMetrics, maxLineCount, actualLineCount)
    end
    def get_metrics_1(this : IDWriteTextLayout3*, textMetrics : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_metrics_1.call(this, textMetrics)
    end
    def get_overhang_metrics(this : IDWriteTextLayout3*, overhangs : Win32cr::Graphics::DirectWrite::DWRITE_OVERHANG_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_overhang_metrics.call(this, overhangs)
    end
    def get_cluster_metrics(this : IDWriteTextLayout3*, clusterMetrics : Win32cr::Graphics::DirectWrite::DWRITE_CLUSTER_METRICS*, maxClusterCount : UInt32, actualClusterCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cluster_metrics.call(this, clusterMetrics, maxClusterCount, actualClusterCount)
    end
    def determine_min_width(this : IDWriteTextLayout3*, minWidth : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.determine_min_width.call(this, minWidth)
    end
    def hit_test_point(this : IDWriteTextLayout3*, pointX : Float32, pointY : Float32, isTrailingHit : Win32cr::Foundation::BOOL*, isInside : Win32cr::Foundation::BOOL*, hitTestMetrics : Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test_point.call(this, pointX, pointY, isTrailingHit, isInside, hitTestMetrics)
    end
    def hit_test_text_position(this : IDWriteTextLayout3*, textPosition : UInt32, isTrailingHit : Win32cr::Foundation::BOOL, pointX : Float32*, pointY : Float32*, hitTestMetrics : Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test_text_position.call(this, textPosition, isTrailingHit, pointX, pointY, hitTestMetrics)
    end
    def hit_test_text_range(this : IDWriteTextLayout3*, textPosition : UInt32, textLength : UInt32, originX : Float32, originY : Float32, hitTestMetrics : Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, maxHitTestMetricsCount : UInt32, actualHitTestMetricsCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test_text_range.call(this, textPosition, textLength, originX, originY, hitTestMetrics, maxHitTestMetricsCount, actualHitTestMetricsCount)
    end
    def set_pair_kerning(this : IDWriteTextLayout3*, isPairKerningEnabled : Win32cr::Foundation::BOOL, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_pair_kerning.call(this, isPairKerningEnabled, textRange)
    end
    def get_pair_kerning(this : IDWriteTextLayout3*, currentPosition : UInt32, isPairKerningEnabled : Win32cr::Foundation::BOOL*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_pair_kerning.call(this, currentPosition, isPairKerningEnabled, textRange)
    end
    def set_character_spacing(this : IDWriteTextLayout3*, leadingSpacing : Float32, trailingSpacing : Float32, minimumAdvanceWidth : Float32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_character_spacing.call(this, leadingSpacing, trailingSpacing, minimumAdvanceWidth, textRange)
    end
    def get_character_spacing(this : IDWriteTextLayout3*, currentPosition : UInt32, leadingSpacing : Float32*, trailingSpacing : Float32*, minimumAdvanceWidth : Float32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_character_spacing.call(this, currentPosition, leadingSpacing, trailingSpacing, minimumAdvanceWidth, textRange)
    end
    def get_metrics_2(this : IDWriteTextLayout3*, textMetrics : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS1*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_metrics_2.call(this, textMetrics)
    end
    def set_vertical_glyph_orientation(this : IDWriteTextLayout3*, glyphOrientation : Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_vertical_glyph_orientation.call(this, glyphOrientation)
    end
    def get_vertical_glyph_orientation(this : IDWriteTextLayout3*) : Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION
      @lpVtbl.try &.value.get_vertical_glyph_orientation.call(this)
    end
    def set_last_line_wrapping(this : IDWriteTextLayout3*, isLastLineWrappingEnabled : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_last_line_wrapping.call(this, isLastLineWrappingEnabled)
    end
    def get_last_line_wrapping(this : IDWriteTextLayout3*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.get_last_line_wrapping.call(this)
    end
    def set_optical_alignment(this : IDWriteTextLayout3*, opticalAlignment : Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_optical_alignment.call(this, opticalAlignment)
    end
    def get_optical_alignment(this : IDWriteTextLayout3*) : Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT
      @lpVtbl.try &.value.get_optical_alignment.call(this)
    end
    def set_font_fallback(this : IDWriteTextLayout3*, fontFallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_fallback.call(this, fontFallback)
    end
    def get_font_fallback(this : IDWriteTextLayout3*, fontFallback : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_fallback.call(this, fontFallback)
    end
    def invalidate_layout(this : IDWriteTextLayout3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invalidate_layout.call(this)
    end
    def set_line_spacing(this : IDWriteTextLayout3*, lineSpacingOptions : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line_spacing.call(this, lineSpacingOptions)
    end
    def get_line_spacing(this : IDWriteTextLayout3*, lineSpacingOptions : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_spacing.call(this, lineSpacingOptions)
    end
    def get_line_metrics_2(this : IDWriteTextLayout3*, lineMetrics : Win32cr::Graphics::DirectWrite::DWRITE_LINE_METRICS1*, maxLineCount : UInt32, actualLineCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_metrics_2.call(this, lineMetrics, maxLineCount, actualLineCount)
    end

  end

  @[Extern]
  record IDWriteColorGlyphRunEnumerator1Vtbl,
    query_interface : Proc(IDWriteColorGlyphRunEnumerator1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteColorGlyphRunEnumerator1*, UInt32),
    release : Proc(IDWriteColorGlyphRunEnumerator1*, UInt32),
    move_next : Proc(IDWriteColorGlyphRunEnumerator1*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_current_run_1 : Proc(IDWriteColorGlyphRunEnumerator1*, Win32cr::Graphics::DirectWrite::DWRITE_COLOR_GLYPH_RUN**, Win32cr::Foundation::HRESULT),
    get_current_run_2 : Proc(IDWriteColorGlyphRunEnumerator1*, Win32cr::Graphics::DirectWrite::DWRITE_COLOR_GLYPH_RUN1**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("7c5f86da-c7a1-4f05-b8e1-55a179fe5a35")]
  record IDWriteColorGlyphRunEnumerator1, lpVtbl : IDWriteColorGlyphRunEnumerator1Vtbl* do
    GUID = LibC::GUID.new(0x7c5f86da_u32, 0xc7a1_u16, 0x4f05_u16, StaticArray[0xb8_u8, 0xe1_u8, 0x55_u8, 0xa1_u8, 0x79_u8, 0xfe_u8, 0x5a_u8, 0x35_u8])
    def query_interface(this : IDWriteColorGlyphRunEnumerator1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteColorGlyphRunEnumerator1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteColorGlyphRunEnumerator1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def move_next(this : IDWriteColorGlyphRunEnumerator1*, hasRun : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_next.call(this, hasRun)
    end
    def get_current_run_1(this : IDWriteColorGlyphRunEnumerator1*, colorGlyphRun : Win32cr::Graphics::DirectWrite::DWRITE_COLOR_GLYPH_RUN**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_run_1.call(this, colorGlyphRun)
    end
    def get_current_run_2(this : IDWriteColorGlyphRunEnumerator1*, colorGlyphRun : Win32cr::Graphics::DirectWrite::DWRITE_COLOR_GLYPH_RUN1**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_run_2.call(this, colorGlyphRun)
    end

  end

  @[Extern]
  record IDWriteFontFace4Vtbl,
    query_interface : Proc(IDWriteFontFace4*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFace4*, UInt32),
    release : Proc(IDWriteFontFace4*, UInt32),
    get_type : Proc(IDWriteFontFace4*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE),
    get_files : Proc(IDWriteFontFace4*, UInt32*, Void**, Win32cr::Foundation::HRESULT),
    get_index : Proc(IDWriteFontFace4*, UInt32),
    get_simulations : Proc(IDWriteFontFace4*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS),
    is_symbol_font : Proc(IDWriteFontFace4*, Win32cr::Foundation::BOOL),
    get_metrics_1 : Proc(IDWriteFontFace4*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Void),
    get_glyph_count : Proc(IDWriteFontFace4*, UInt16),
    get_design_glyph_metrics : Proc(IDWriteFontFace4*, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_glyph_indices : Proc(IDWriteFontFace4*, UInt32*, UInt32, UInt16*, Win32cr::Foundation::HRESULT),
    try_get_font_table : Proc(IDWriteFontFace4*, UInt32, Void**, UInt32*, Void**, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    release_font_table : Proc(IDWriteFontFace4*, Void*, Void),
    get_glyph_run_outline : Proc(IDWriteFontFace4*, Float32, UInt16*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Void*, Win32cr::Foundation::HRESULT),
    get_recommended_rendering_mode_1_1 : Proc(IDWriteFontFace4*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_metrics_1 : Proc(IDWriteFontFace4*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_metrics : Proc(IDWriteFontFace4*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_metrics_2 : Proc(IDWriteFontFace4*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*, Void),
    get_gdi_compatible_metrics_2 : Proc(IDWriteFontFace4*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*, Win32cr::Foundation::HRESULT),
    get_caret_metrics : Proc(IDWriteFontFace4*, Win32cr::Graphics::DirectWrite::DWRITE_CARET_METRICS*, Void),
    get_unicode_ranges : Proc(IDWriteFontFace4*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, UInt32*, Win32cr::Foundation::HRESULT),
    is_monospaced_font : Proc(IDWriteFontFace4*, Win32cr::Foundation::BOOL),
    get_design_glyph_advances : Proc(IDWriteFontFace4*, UInt32, UInt16*, Int32*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_advances : Proc(IDWriteFontFace4*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, UInt32, UInt16*, Int32*, Win32cr::Foundation::HRESULT),
    get_kerning_pair_adjustments : Proc(IDWriteFontFace4*, UInt32, UInt16*, Int32*, Win32cr::Foundation::HRESULT),
    has_kerning_pairs : Proc(IDWriteFontFace4*, Win32cr::Foundation::BOOL),
    get_recommended_rendering_mode_2_1 : Proc(IDWriteFontFace4*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Foundation::HRESULT),
    get_vertical_glyph_variants : Proc(IDWriteFontFace4*, UInt32, UInt16*, UInt16*, Win32cr::Foundation::HRESULT),
    has_vertical_glyph_variants : Proc(IDWriteFontFace4*, Win32cr::Foundation::BOOL),
    is_color_font : Proc(IDWriteFontFace4*, Win32cr::Foundation::BOOL),
    get_color_palette_count : Proc(IDWriteFontFace4*, UInt32),
    get_palette_entry_count : Proc(IDWriteFontFace4*, UInt32),
    get_palette_entries : Proc(IDWriteFontFace4*, UInt32, UInt32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_COLOR_F*, Win32cr::Foundation::HRESULT),
    get_recommended_rendering_mode_1_2 : Proc(IDWriteFontFace4*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*, Win32cr::Foundation::HRESULT),
    get_font_face_reference : Proc(IDWriteFontFace4*, Void**, Win32cr::Foundation::HRESULT),
    get_panose : Proc(IDWriteFontFace4*, Win32cr::Graphics::DirectWrite::DWRITE_PANOSE*, Void),
    get_weight : Proc(IDWriteFontFace4*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_stretch : Proc(IDWriteFontFace4*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_style : Proc(IDWriteFontFace4*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    get_family_names_1 : Proc(IDWriteFontFace4*, Void**, Win32cr::Foundation::HRESULT),
    get_face_names_1 : Proc(IDWriteFontFace4*, Void**, Win32cr::Foundation::HRESULT),
    get_informational_strings : Proc(IDWriteFontFace4*, Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, Void**, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    has_character : Proc(IDWriteFontFace4*, UInt32, Win32cr::Foundation::BOOL),
    get_recommended_rendering_mode_2_2 : Proc(IDWriteFontFace4*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1*, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*, Win32cr::Foundation::HRESULT),
    is_character_local : Proc(IDWriteFontFace4*, UInt32, Win32cr::Foundation::BOOL),
    is_glyph_local : Proc(IDWriteFontFace4*, UInt16, Win32cr::Foundation::BOOL),
    are_characters_local : Proc(IDWriteFontFace4*, UInt16*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    are_glyphs_local : Proc(IDWriteFontFace4*, UInt16*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_glyph_image_formats_1 : Proc(IDWriteFontFace4*, UInt16, UInt32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS*, Win32cr::Foundation::HRESULT),
    get_glyph_image_formats_2 : Proc(IDWriteFontFace4*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS),
    get_glyph_image_data : Proc(IDWriteFontFace4*, UInt16, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    release_glyph_image_data : Proc(IDWriteFontFace4*, Void*, Void)


  @[Extern]
  #@[Com("27f2a904-4eb8-441d-9678-0563f53e3e2f")]
  record IDWriteFontFace4, lpVtbl : IDWriteFontFace4Vtbl* do
    GUID = LibC::GUID.new(0x27f2a904_u32, 0x4eb8_u16, 0x441d_u16, StaticArray[0x96_u8, 0x78_u8, 0x5_u8, 0x63_u8, 0xf5_u8, 0x3e_u8, 0x3e_u8, 0x2f_u8])
    def query_interface(this : IDWriteFontFace4*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFace4*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFace4*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type(this : IDWriteFontFace4*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE
      @lpVtbl.try &.value.get_type.call(this)
    end
    def get_files(this : IDWriteFontFace4*, numberOfFiles : UInt32*, fontFiles : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_files.call(this, numberOfFiles, fontFiles)
    end
    def get_index(this : IDWriteFontFace4*) : UInt32
      @lpVtbl.try &.value.get_index.call(this)
    end
    def get_simulations(this : IDWriteFontFace4*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS
      @lpVtbl.try &.value.get_simulations.call(this)
    end
    def is_symbol_font(this : IDWriteFontFace4*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_symbol_font.call(this)
    end
    def get_metrics_1(this : IDWriteFontFace4*, fontFaceMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Void
      @lpVtbl.try &.value.get_metrics_1.call(this, fontFaceMetrics)
    end
    def get_glyph_count(this : IDWriteFontFace4*) : UInt16
      @lpVtbl.try &.value.get_glyph_count.call(this)
    end
    def get_design_glyph_metrics(this : IDWriteFontFace4*, glyphIndices : UInt16*, glyphCount : UInt32, glyphMetrics : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_design_glyph_metrics.call(this, glyphIndices, glyphCount, glyphMetrics, isSideways)
    end
    def get_glyph_indices(this : IDWriteFontFace4*, codePoints : UInt32*, codePointCount : UInt32, glyphIndices : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_indices.call(this, codePoints, codePointCount, glyphIndices)
    end
    def try_get_font_table(this : IDWriteFontFace4*, openTypeTableTag : UInt32, tableData : Void**, tableSize : UInt32*, tableContext : Void**, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.try_get_font_table.call(this, openTypeTableTag, tableData, tableSize, tableContext, exists)
    end
    def release_font_table(this : IDWriteFontFace4*, tableContext : Void*) : Void
      @lpVtbl.try &.value.release_font_table.call(this, tableContext)
    end
    def get_glyph_run_outline(this : IDWriteFontFace4*, emSize : Float32, glyphIndices : UInt16*, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, glyphCount : UInt32, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, geometrySink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_run_outline.call(this, emSize, glyphIndices, glyphAdvances, glyphOffsets, glyphCount, isSideways, isRightToLeft, geometrySink)
    end
    def get_recommended_rendering_mode_1_1(this : IDWriteFontFace4*, emSize : Float32, pixelsPerDip : Float32, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_1_1.call(this, emSize, pixelsPerDip, measuringMode, renderingParams, renderingMode)
    end
    def get_gdi_compatible_metrics_1(this : IDWriteFontFace4*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, fontFaceMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_metrics_1.call(this, emSize, pixelsPerDip, transform, fontFaceMetrics)
    end
    def get_gdi_compatible_glyph_metrics(this : IDWriteFontFace4*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, glyphIndices : UInt16*, glyphCount : UInt32, glyphMetrics : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_metrics.call(this, emSize, pixelsPerDip, transform, useGdiNatural, glyphIndices, glyphCount, glyphMetrics, isSideways)
    end
    def get_metrics_2(this : IDWriteFontFace4*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*) : Void
      @lpVtbl.try &.value.get_metrics_2.call(this, fontMetrics)
    end
    def get_gdi_compatible_metrics_2(this : IDWriteFontFace4*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_metrics_2.call(this, emSize, pixelsPerDip, transform, fontMetrics)
    end
    def get_caret_metrics(this : IDWriteFontFace4*, caretMetrics : Win32cr::Graphics::DirectWrite::DWRITE_CARET_METRICS*) : Void
      @lpVtbl.try &.value.get_caret_metrics.call(this, caretMetrics)
    end
    def get_unicode_ranges(this : IDWriteFontFace4*, maxRangeCount : UInt32, unicodeRanges : Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, actualRangeCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_unicode_ranges.call(this, maxRangeCount, unicodeRanges, actualRangeCount)
    end
    def is_monospaced_font(this : IDWriteFontFace4*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_monospaced_font.call(this)
    end
    def get_design_glyph_advances(this : IDWriteFontFace4*, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvances : Int32*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_design_glyph_advances.call(this, glyphCount, glyphIndices, glyphAdvances, isSideways)
    end
    def get_gdi_compatible_glyph_advances(this : IDWriteFontFace4*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, isSideways : Win32cr::Foundation::BOOL, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvances : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_advances.call(this, emSize, pixelsPerDip, transform, useGdiNatural, isSideways, glyphCount, glyphIndices, glyphAdvances)
    end
    def get_kerning_pair_adjustments(this : IDWriteFontFace4*, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvanceAdjustments : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_kerning_pair_adjustments.call(this, glyphCount, glyphIndices, glyphAdvanceAdjustments)
    end
    def has_kerning_pairs(this : IDWriteFontFace4*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_kerning_pairs.call(this)
    end
    def get_recommended_rendering_mode_2_1(this : IDWriteFontFace4*, fontEmSize : Float32, dpiX : Float32, dpiY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, isSideways : Win32cr::Foundation::BOOL, outlineThreshold : Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_2_1.call(this, fontEmSize, dpiX, dpiY, transform, isSideways, outlineThreshold, measuringMode, renderingMode)
    end
    def get_vertical_glyph_variants(this : IDWriteFontFace4*, glyphCount : UInt32, nominalGlyphIndices : UInt16*, verticalGlyphIndices : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_vertical_glyph_variants.call(this, glyphCount, nominalGlyphIndices, verticalGlyphIndices)
    end
    def has_vertical_glyph_variants(this : IDWriteFontFace4*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_vertical_glyph_variants.call(this)
    end
    def is_color_font(this : IDWriteFontFace4*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_color_font.call(this)
    end
    def get_color_palette_count(this : IDWriteFontFace4*) : UInt32
      @lpVtbl.try &.value.get_color_palette_count.call(this)
    end
    def get_palette_entry_count(this : IDWriteFontFace4*) : UInt32
      @lpVtbl.try &.value.get_palette_entry_count.call(this)
    end
    def get_palette_entries(this : IDWriteFontFace4*, colorPaletteIndex : UInt32, firstEntryIndex : UInt32, entryCount : UInt32, paletteEntries : Win32cr::Graphics::DirectWrite::DWRITE_COLOR_F*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_palette_entries.call(this, colorPaletteIndex, firstEntryIndex, entryCount, paletteEntries)
    end
    def get_recommended_rendering_mode_1_2(this : IDWriteFontFace4*, fontEmSize : Float32, dpiX : Float32, dpiY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, isSideways : Win32cr::Foundation::BOOL, outlineThreshold : Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_1_2.call(this, fontEmSize, dpiX, dpiY, transform, isSideways, outlineThreshold, measuringMode, renderingParams, renderingMode, gridFitMode)
    end
    def get_font_face_reference(this : IDWriteFontFace4*, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference.call(this, fontFaceReference)
    end
    def get_panose(this : IDWriteFontFace4*, panose : Win32cr::Graphics::DirectWrite::DWRITE_PANOSE*) : Void
      @lpVtbl.try &.value.get_panose.call(this, panose)
    end
    def get_weight(this : IDWriteFontFace4*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_weight.call(this)
    end
    def get_stretch(this : IDWriteFontFace4*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_stretch.call(this)
    end
    def get_style(this : IDWriteFontFace4*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_style.call(this)
    end
    def get_family_names_1(this : IDWriteFontFace4*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_family_names_1.call(this, names)
    end
    def get_face_names_1(this : IDWriteFontFace4*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_face_names_1.call(this, names)
    end
    def get_informational_strings(this : IDWriteFontFace4*, informationalStringID : Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, informationalStrings : Void**, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_informational_strings.call(this, informationalStringID, informationalStrings, exists)
    end
    def has_character(this : IDWriteFontFace4*, unicodeValue : UInt32) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_character.call(this, unicodeValue)
    end
    def get_recommended_rendering_mode_2_2(this : IDWriteFontFace4*, fontEmSize : Float32, dpiX : Float32, dpiY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, isSideways : Win32cr::Foundation::BOOL, outlineThreshold : Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1*, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_2_2.call(this, fontEmSize, dpiX, dpiY, transform, isSideways, outlineThreshold, measuringMode, renderingParams, renderingMode, gridFitMode)
    end
    def is_character_local(this : IDWriteFontFace4*, unicodeValue : UInt32) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_character_local.call(this, unicodeValue)
    end
    def is_glyph_local(this : IDWriteFontFace4*, glyphId : UInt16) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_glyph_local.call(this, glyphId)
    end
    def are_characters_local(this : IDWriteFontFace4*, characters : UInt16*, characterCount : UInt32, enqueueIfNotLocal : Win32cr::Foundation::BOOL, isLocal : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.are_characters_local.call(this, characters, characterCount, enqueueIfNotLocal, isLocal)
    end
    def are_glyphs_local(this : IDWriteFontFace4*, glyphIndices : UInt16*, glyphCount : UInt32, enqueueIfNotLocal : Win32cr::Foundation::BOOL, isLocal : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.are_glyphs_local.call(this, glyphIndices, glyphCount, enqueueIfNotLocal, isLocal)
    end
    def get_glyph_image_formats_1(this : IDWriteFontFace4*, glyphId : UInt16, pixelsPerEmFirst : UInt32, pixelsPerEmLast : UInt32, glyphImageFormats : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_image_formats_1.call(this, glyphId, pixelsPerEmFirst, pixelsPerEmLast, glyphImageFormats)
    end
    def get_glyph_image_formats_2(this : IDWriteFontFace4*) : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS
      @lpVtbl.try &.value.get_glyph_image_formats_2.call(this)
    end
    def get_glyph_image_data(this : IDWriteFontFace4*, glyphId : UInt16, pixelsPerEm : UInt32, glyphImageFormat : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS, glyphData : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_DATA*, glyphDataContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_image_data.call(this, glyphId, pixelsPerEm, glyphImageFormat, glyphData, glyphDataContext)
    end
    def release_glyph_image_data(this : IDWriteFontFace4*, glyphDataContext : Void*) : Void
      @lpVtbl.try &.value.release_glyph_image_data.call(this, glyphDataContext)
    end

  end

  @[Extern]
  record IDWriteFactory4Vtbl,
    query_interface : Proc(IDWriteFactory4*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFactory4*, UInt32),
    release : Proc(IDWriteFactory4*, UInt32),
    get_system_font_collection_1 : Proc(IDWriteFactory4*, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_custom_font_collection : Proc(IDWriteFactory4*, Void*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    register_font_collection_loader : Proc(IDWriteFactory4*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_collection_loader : Proc(IDWriteFactory4*, Void*, Win32cr::Foundation::HRESULT),
    create_font_file_reference : Proc(IDWriteFactory4*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::FILETIME*, Void**, Win32cr::Foundation::HRESULT),
    create_custom_font_file_reference : Proc(IDWriteFactory4*, Void*, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_font_face : Proc(IDWriteFactory4*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, UInt32, Void**, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    create_rendering_params : Proc(IDWriteFactory4*, Void**, Win32cr::Foundation::HRESULT),
    create_monitor_rendering_params : Proc(IDWriteFactory4*, Win32cr::Graphics::Gdi::HMONITOR, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_1_1 : Proc(IDWriteFactory4*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Void**, Win32cr::Foundation::HRESULT),
    register_font_file_loader : Proc(IDWriteFactory4*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_file_loader : Proc(IDWriteFactory4*, Void*, Win32cr::Foundation::HRESULT),
    create_text_format_1 : Proc(IDWriteFactory4*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Float32, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    create_typography : Proc(IDWriteFactory4*, Void**, Win32cr::Foundation::HRESULT),
    get_gdi_interop : Proc(IDWriteFactory4*, Void**, Win32cr::Foundation::HRESULT),
    create_text_layout : Proc(IDWriteFactory4*, UInt16*, UInt32, Void*, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_gdi_compatible_text_layout : Proc(IDWriteFactory4*, UInt16*, UInt32, Void*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_ellipsis_trimming_sign : Proc(IDWriteFactory4*, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_text_analyzer : Proc(IDWriteFactory4*, Void**, Win32cr::Foundation::HRESULT),
    create_number_substitution : Proc(IDWriteFactory4*, Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis_1 : Proc(IDWriteFactory4*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    get_eudc_font_collection : Proc(IDWriteFactory4*, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_2_1 : Proc(IDWriteFactory4*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_fallback : Proc(IDWriteFactory4*, Void**, Win32cr::Foundation::HRESULT),
    create_font_fallback_builder : Proc(IDWriteFactory4*, Void**, Win32cr::Foundation::HRESULT),
    translate_color_glyph_run_1 : Proc(IDWriteFactory4*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_1_2 : Proc(IDWriteFactory4*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis_2 : Proc(IDWriteFactory4*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis : Proc(IDWriteFactory4*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_2_2 : Proc(IDWriteFactory4*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Void**, Win32cr::Foundation::HRESULT),
    create_font_face_reference_1 : Proc(IDWriteFactory4*, Void*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    create_font_face_reference_2 : Proc(IDWriteFactory4*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::FILETIME*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_set_1 : Proc(IDWriteFactory4*, Void**, Win32cr::Foundation::HRESULT),
    create_font_set_builder_1 : Proc(IDWriteFactory4*, Void**, Win32cr::Foundation::HRESULT),
    create_font_collection_from_font_set_1 : Proc(IDWriteFactory4*, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_collection_2_1 : Proc(IDWriteFactory4*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_font_download_queue : Proc(IDWriteFactory4*, Void**, Win32cr::Foundation::HRESULT),
    translate_color_glyph_run_2 : Proc(IDWriteFactory4*, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    compute_glyph_origins_1 : Proc(IDWriteFactory4*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*, Win32cr::Foundation::HRESULT),
    compute_glyph_origins_2 : Proc(IDWriteFactory4*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("4b0b5bd3-0797-4549-8ac5-fe915cc53856")]
  record IDWriteFactory4, lpVtbl : IDWriteFactory4Vtbl* do
    GUID = LibC::GUID.new(0x4b0b5bd3_u32, 0x797_u16, 0x4549_u16, StaticArray[0x8a_u8, 0xc5_u8, 0xfe_u8, 0x91_u8, 0x5c_u8, 0xc5_u8, 0x38_u8, 0x56_u8])
    def query_interface(this : IDWriteFactory4*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFactory4*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFactory4*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_system_font_collection_1(this : IDWriteFactory4*, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_1.call(this, fontCollection, checkForUpdates)
    end
    def create_custom_font_collection(this : IDWriteFactory4*, collectionLoader : Void*, collectionKey : Void*, collectionKeySize : UInt32, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_collection.call(this, collectionLoader, collectionKey, collectionKeySize, fontCollection)
    end
    def register_font_collection_loader(this : IDWriteFactory4*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_collection_loader.call(this, fontCollectionLoader)
    end
    def unregister_font_collection_loader(this : IDWriteFactory4*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_collection_loader.call(this, fontCollectionLoader)
    end
    def create_font_file_reference(this : IDWriteFactory4*, filePath : Win32cr::Foundation::PWSTR, lastWriteTime : Win32cr::Foundation::FILETIME*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_file_reference.call(this, filePath, lastWriteTime, fontFile)
    end
    def create_custom_font_file_reference(this : IDWriteFactory4*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, fontFileLoader : Void*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_file_reference.call(this, fontFileReferenceKey, fontFileReferenceKeySize, fontFileLoader, fontFile)
    end
    def create_font_face(this : IDWriteFactory4*, fontFaceType : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, numberOfFiles : UInt32, fontFiles : Void**, faceIndex : UInt32, fontFaceSimulationFlags : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face.call(this, fontFaceType, numberOfFiles, fontFiles, faceIndex, fontFaceSimulationFlags, fontFace)
    end
    def create_rendering_params(this : IDWriteFactory4*, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rendering_params.call(this, renderingParams)
    end
    def create_monitor_rendering_params(this : IDWriteFactory4*, monitor : Win32cr::Graphics::Gdi::HMONITOR, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_monitor_rendering_params.call(this, monitor, renderingParams)
    end
    def create_custom_rendering_params_1_1(this : IDWriteFactory4*, gamma : Float32, enhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_1_1.call(this, gamma, enhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, renderingParams)
    end
    def register_font_file_loader(this : IDWriteFactory4*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_file_loader.call(this, fontFileLoader)
    end
    def unregister_font_file_loader(this : IDWriteFactory4*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_file_loader.call(this, fontFileLoader)
    end
    def create_text_format_1(this : IDWriteFactory4*, fontFamilyName : Win32cr::Foundation::PWSTR, fontCollection : Void*, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, fontSize : Float32, localeName : Win32cr::Foundation::PWSTR, textFormat : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_format_1.call(this, fontFamilyName, fontCollection, fontWeight, fontStyle, fontStretch, fontSize, localeName, textFormat)
    end
    def create_typography(this : IDWriteFactory4*, typography : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_typography.call(this, typography)
    end
    def get_gdi_interop(this : IDWriteFactory4*, gdiInterop : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_interop.call(this, gdiInterop)
    end
    def create_text_layout(this : IDWriteFactory4*, string : UInt16*, stringLength : UInt32, textFormat : Void*, maxWidth : Float32, maxHeight : Float32, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_layout.call(this, string, stringLength, textFormat, maxWidth, maxHeight, textLayout)
    end
    def create_gdi_compatible_text_layout(this : IDWriteFactory4*, string : UInt16*, stringLength : UInt32, textFormat : Void*, layoutWidth : Float32, layoutHeight : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_gdi_compatible_text_layout.call(this, string, stringLength, textFormat, layoutWidth, layoutHeight, pixelsPerDip, transform, useGdiNatural, textLayout)
    end
    def create_ellipsis_trimming_sign(this : IDWriteFactory4*, textFormat : Void*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_ellipsis_trimming_sign.call(this, textFormat, trimmingSign)
    end
    def create_text_analyzer(this : IDWriteFactory4*, textAnalyzer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_analyzer.call(this, textAnalyzer)
    end
    def create_number_substitution(this : IDWriteFactory4*, substitutionMethod : Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, localeName : Win32cr::Foundation::PWSTR, ignoreUserOverride : Win32cr::Foundation::BOOL, numberSubstitution : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_number_substitution.call(this, substitutionMethod, localeName, ignoreUserOverride, numberSubstitution)
    end
    def create_glyph_run_analysis_1(this : IDWriteFactory4*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis_1.call(this, glyphRun, pixelsPerDip, transform, renderingMode, measuringMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def get_eudc_font_collection(this : IDWriteFactory4*, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_eudc_font_collection.call(this, fontCollection, checkForUpdates)
    end
    def create_custom_rendering_params_2_1(this : IDWriteFactory4*, gamma : Float32, enhancedContrast : Float32, enhancedContrastGrayscale : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_2_1.call(this, gamma, enhancedContrast, enhancedContrastGrayscale, clearTypeLevel, pixelGeometry, renderingMode, renderingParams)
    end
    def get_system_font_fallback(this : IDWriteFactory4*, fontFallback : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_fallback.call(this, fontFallback)
    end
    def create_font_fallback_builder(this : IDWriteFactory4*, fontFallbackBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_fallback_builder.call(this, fontFallbackBuilder)
    end
    def translate_color_glyph_run_1(this : IDWriteFactory4*, baselineOriginX : Float32, baselineOriginY : Float32, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, glyphRunDescription : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, worldToDeviceTransform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, colorPaletteIndex : UInt32, colorLayers : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_color_glyph_run_1.call(this, baselineOriginX, baselineOriginY, glyphRun, glyphRunDescription, measuringMode, worldToDeviceTransform, colorPaletteIndex, colorLayers)
    end
    def create_custom_rendering_params_1_2(this : IDWriteFactory4*, gamma : Float32, enhancedContrast : Float32, grayscaleEnhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_1_2.call(this, gamma, enhancedContrast, grayscaleEnhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, gridFitMode, renderingParams)
    end
    def create_glyph_run_analysis_2(this : IDWriteFactory4*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, antialiasMode : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis_2.call(this, glyphRun, transform, renderingMode, measuringMode, gridFitMode, antialiasMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def create_glyph_run_analysis(this : IDWriteFactory4*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, antialiasMode : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis.call(this, glyphRun, transform, renderingMode, measuringMode, gridFitMode, antialiasMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def create_custom_rendering_params_2_2(this : IDWriteFactory4*, gamma : Float32, enhancedContrast : Float32, grayscaleEnhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_2_2.call(this, gamma, enhancedContrast, grayscaleEnhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, gridFitMode, renderingParams)
    end
    def create_font_face_reference_1(this : IDWriteFactory4*, fontFile : Void*, faceIndex : UInt32, fontSimulations : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_reference_1.call(this, fontFile, faceIndex, fontSimulations, fontFaceReference)
    end
    def create_font_face_reference_2(this : IDWriteFactory4*, filePath : Win32cr::Foundation::PWSTR, lastWriteTime : Win32cr::Foundation::FILETIME*, faceIndex : UInt32, fontSimulations : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_reference_2.call(this, filePath, lastWriteTime, faceIndex, fontSimulations, fontFaceReference)
    end
    def get_system_font_set_1(this : IDWriteFactory4*, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_set_1.call(this, fontSet)
    end
    def create_font_set_builder_1(this : IDWriteFactory4*, fontSetBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_set_builder_1.call(this, fontSetBuilder)
    end
    def create_font_collection_from_font_set_1(this : IDWriteFactory4*, fontSet : Void*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_collection_from_font_set_1.call(this, fontSet, fontCollection)
    end
    def get_system_font_collection_2_1(this : IDWriteFactory4*, includeDownloadableFonts : Win32cr::Foundation::BOOL, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_2_1.call(this, includeDownloadableFonts, fontCollection, checkForUpdates)
    end
    def get_font_download_queue(this : IDWriteFactory4*, fontDownloadQueue : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_download_queue.call(this, fontDownloadQueue)
    end
    def translate_color_glyph_run_2(this : IDWriteFactory4*, baselineOrigin : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, glyphRunDescription : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, desiredGlyphImageFormats : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, worldAndDpiTransform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, colorPaletteIndex : UInt32, colorLayers : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_color_glyph_run_2.call(this, baselineOrigin, glyphRun, glyphRunDescription, desiredGlyphImageFormats, measuringMode, worldAndDpiTransform, colorPaletteIndex, colorLayers)
    end
    def compute_glyph_origins_1(this : IDWriteFactory4*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, baselineOrigin : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, glyphOrigins : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compute_glyph_origins_1.call(this, glyphRun, baselineOrigin, glyphOrigins)
    end
    def compute_glyph_origins_2(this : IDWriteFactory4*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, baselineOrigin : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, worldAndDpiTransform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, glyphOrigins : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compute_glyph_origins_2.call(this, glyphRun, measuringMode, baselineOrigin, worldAndDpiTransform, glyphOrigins)
    end

  end

  @[Extern]
  record IDWriteFontSetBuilder1Vtbl,
    query_interface : Proc(IDWriteFontSetBuilder1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontSetBuilder1*, UInt32),
    release : Proc(IDWriteFontSetBuilder1*, UInt32),
    add_font_face_reference_1 : Proc(IDWriteFontSetBuilder1*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32, Win32cr::Foundation::HRESULT),
    add_font_face_reference_2 : Proc(IDWriteFontSetBuilder1*, Void*, Win32cr::Foundation::HRESULT),
    add_font_set : Proc(IDWriteFontSetBuilder1*, Void*, Win32cr::Foundation::HRESULT),
    create_font_set : Proc(IDWriteFontSetBuilder1*, Void**, Win32cr::Foundation::HRESULT),
    add_font_file_1 : Proc(IDWriteFontSetBuilder1*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("3ff7715f-3cdc-4dc6-9b72-ec5621dccafd")]
  record IDWriteFontSetBuilder1, lpVtbl : IDWriteFontSetBuilder1Vtbl* do
    GUID = LibC::GUID.new(0x3ff7715f_u32, 0x3cdc_u16, 0x4dc6_u16, StaticArray[0x9b_u8, 0x72_u8, 0xec_u8, 0x56_u8, 0x21_u8, 0xdc_u8, 0xca_u8, 0xfd_u8])
    def query_interface(this : IDWriteFontSetBuilder1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontSetBuilder1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontSetBuilder1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_font_face_reference_1(this : IDWriteFontSetBuilder1*, fontFaceReference : Void*, properties : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_font_face_reference_1.call(this, fontFaceReference, properties, propertyCount)
    end
    def add_font_face_reference_2(this : IDWriteFontSetBuilder1*, fontFaceReference : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_font_face_reference_2.call(this, fontFaceReference)
    end
    def add_font_set(this : IDWriteFontSetBuilder1*, fontSet : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_font_set.call(this, fontSet)
    end
    def create_font_set(this : IDWriteFontSetBuilder1*, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_set.call(this, fontSet)
    end
    def add_font_file_1(this : IDWriteFontSetBuilder1*, fontFile : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_font_file_1.call(this, fontFile)
    end

  end

  @[Extern]
  record IDWriteAsyncResultVtbl,
    query_interface : Proc(IDWriteAsyncResult*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteAsyncResult*, UInt32),
    release : Proc(IDWriteAsyncResult*, UInt32),
    get_wait_handle : Proc(IDWriteAsyncResult*, Win32cr::Foundation::HANDLE),
    get_result : Proc(IDWriteAsyncResult*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("ce25f8fd-863b-4d13-9651-c1f88dc73fe2")]
  record IDWriteAsyncResult, lpVtbl : IDWriteAsyncResultVtbl* do
    GUID = LibC::GUID.new(0xce25f8fd_u32, 0x863b_u16, 0x4d13_u16, StaticArray[0x96_u8, 0x51_u8, 0xc1_u8, 0xf8_u8, 0x8d_u8, 0xc7_u8, 0x3f_u8, 0xe2_u8])
    def query_interface(this : IDWriteAsyncResult*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteAsyncResult*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteAsyncResult*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_wait_handle(this : IDWriteAsyncResult*) : Win32cr::Foundation::HANDLE
      @lpVtbl.try &.value.get_wait_handle.call(this)
    end
    def get_result(this : IDWriteAsyncResult*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_result.call(this)
    end

  end

  @[Extern]
  record IDWriteRemoteFontFileStreamVtbl,
    query_interface : Proc(IDWriteRemoteFontFileStream*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteRemoteFontFileStream*, UInt32),
    release : Proc(IDWriteRemoteFontFileStream*, UInt32),
    read_file_fragment : Proc(IDWriteRemoteFontFileStream*, Void**, UInt64, UInt64, Void**, Win32cr::Foundation::HRESULT),
    release_file_fragment : Proc(IDWriteRemoteFontFileStream*, Void*, Void),
    get_file_size : Proc(IDWriteRemoteFontFileStream*, UInt64*, Win32cr::Foundation::HRESULT),
    get_last_write_time : Proc(IDWriteRemoteFontFileStream*, UInt64*, Win32cr::Foundation::HRESULT),
    get_local_file_size : Proc(IDWriteRemoteFontFileStream*, UInt64*, Win32cr::Foundation::HRESULT),
    get_file_fragment_locality : Proc(IDWriteRemoteFontFileStream*, UInt64, UInt64, Win32cr::Foundation::BOOL*, UInt64*, Win32cr::Foundation::HRESULT),
    get_locality : Proc(IDWriteRemoteFontFileStream*, Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY),
    begin_download : Proc(IDWriteRemoteFontFileStream*, LibC::GUID*, Win32cr::Graphics::DirectWrite::DWRITE_FILE_FRAGMENT*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("4db3757a-2c72-4ed9-b2b6-1ababe1aff9c")]
  record IDWriteRemoteFontFileStream, lpVtbl : IDWriteRemoteFontFileStreamVtbl* do
    GUID = LibC::GUID.new(0x4db3757a_u32, 0x2c72_u16, 0x4ed9_u16, StaticArray[0xb2_u8, 0xb6_u8, 0x1a_u8, 0xba_u8, 0xbe_u8, 0x1a_u8, 0xff_u8, 0x9c_u8])
    def query_interface(this : IDWriteRemoteFontFileStream*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteRemoteFontFileStream*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteRemoteFontFileStream*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def read_file_fragment(this : IDWriteRemoteFontFileStream*, fragmentStart : Void**, fileOffset : UInt64, fragmentSize : UInt64, fragmentContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read_file_fragment.call(this, fragmentStart, fileOffset, fragmentSize, fragmentContext)
    end
    def release_file_fragment(this : IDWriteRemoteFontFileStream*, fragmentContext : Void*) : Void
      @lpVtbl.try &.value.release_file_fragment.call(this, fragmentContext)
    end
    def get_file_size(this : IDWriteRemoteFontFileStream*, fileSize : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_size.call(this, fileSize)
    end
    def get_last_write_time(this : IDWriteRemoteFontFileStream*, lastWriteTime : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_last_write_time.call(this, lastWriteTime)
    end
    def get_local_file_size(this : IDWriteRemoteFontFileStream*, localFileSize : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_local_file_size.call(this, localFileSize)
    end
    def get_file_fragment_locality(this : IDWriteRemoteFontFileStream*, fileOffset : UInt64, fragmentSize : UInt64, isLocal : Win32cr::Foundation::BOOL*, partialSize : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_fragment_locality.call(this, fileOffset, fragmentSize, isLocal, partialSize)
    end
    def get_locality(this : IDWriteRemoteFontFileStream*) : Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY
      @lpVtbl.try &.value.get_locality.call(this)
    end
    def begin_download(this : IDWriteRemoteFontFileStream*, downloadOperationID : LibC::GUID*, fileFragments : Win32cr::Graphics::DirectWrite::DWRITE_FILE_FRAGMENT*, fragmentCount : UInt32, asyncResult : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.begin_download.call(this, downloadOperationID, fileFragments, fragmentCount, asyncResult)
    end

  end

  @[Extern]
  record IDWriteRemoteFontFileLoaderVtbl,
    query_interface : Proc(IDWriteRemoteFontFileLoader*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteRemoteFontFileLoader*, UInt32),
    release : Proc(IDWriteRemoteFontFileLoader*, UInt32),
    create_stream_from_key : Proc(IDWriteRemoteFontFileLoader*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_remote_stream_from_key : Proc(IDWriteRemoteFontFileLoader*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_locality_from_key : Proc(IDWriteRemoteFontFileLoader*, Void*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY*, Win32cr::Foundation::HRESULT),
    create_font_file_reference_from_url : Proc(IDWriteRemoteFontFileLoader*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("68648c83-6ede-46c0-ab46-20083a887fde")]
  record IDWriteRemoteFontFileLoader, lpVtbl : IDWriteRemoteFontFileLoaderVtbl* do
    GUID = LibC::GUID.new(0x68648c83_u32, 0x6ede_u16, 0x46c0_u16, StaticArray[0xab_u8, 0x46_u8, 0x20_u8, 0x8_u8, 0x3a_u8, 0x88_u8, 0x7f_u8, 0xde_u8])
    def query_interface(this : IDWriteRemoteFontFileLoader*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteRemoteFontFileLoader*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteRemoteFontFileLoader*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_stream_from_key(this : IDWriteRemoteFontFileLoader*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, fontFileStream : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_stream_from_key.call(this, fontFileReferenceKey, fontFileReferenceKeySize, fontFileStream)
    end
    def create_remote_stream_from_key(this : IDWriteRemoteFontFileLoader*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, fontFileStream : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_remote_stream_from_key.call(this, fontFileReferenceKey, fontFileReferenceKeySize, fontFileStream)
    end
    def get_locality_from_key(this : IDWriteRemoteFontFileLoader*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, locality : Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locality_from_key.call(this, fontFileReferenceKey, fontFileReferenceKeySize, locality)
    end
    def create_font_file_reference_from_url(this : IDWriteRemoteFontFileLoader*, factory : Void*, baseUrl : Win32cr::Foundation::PWSTR, fontFileUrl : Win32cr::Foundation::PWSTR, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_file_reference_from_url.call(this, factory, baseUrl, fontFileUrl, fontFile)
    end

  end

  @[Extern]
  record IDWriteInMemoryFontFileLoaderVtbl,
    query_interface : Proc(IDWriteInMemoryFontFileLoader*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteInMemoryFontFileLoader*, UInt32),
    release : Proc(IDWriteInMemoryFontFileLoader*, UInt32),
    create_stream_from_key : Proc(IDWriteInMemoryFontFileLoader*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_in_memory_font_file_reference : Proc(IDWriteInMemoryFontFileLoader*, Void*, Void*, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_file_count : Proc(IDWriteInMemoryFontFileLoader*, UInt32)


  @[Extern]
  #@[Com("dc102f47-a12d-4b1c-822d-9e117e33043f")]
  record IDWriteInMemoryFontFileLoader, lpVtbl : IDWriteInMemoryFontFileLoaderVtbl* do
    GUID = LibC::GUID.new(0xdc102f47_u32, 0xa12d_u16, 0x4b1c_u16, StaticArray[0x82_u8, 0x2d_u8, 0x9e_u8, 0x11_u8, 0x7e_u8, 0x33_u8, 0x4_u8, 0x3f_u8])
    def query_interface(this : IDWriteInMemoryFontFileLoader*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteInMemoryFontFileLoader*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteInMemoryFontFileLoader*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_stream_from_key(this : IDWriteInMemoryFontFileLoader*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, fontFileStream : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_stream_from_key.call(this, fontFileReferenceKey, fontFileReferenceKeySize, fontFileStream)
    end
    def create_in_memory_font_file_reference(this : IDWriteInMemoryFontFileLoader*, factory : Void*, fontData : Void*, fontDataSize : UInt32, ownerObject : Void*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_in_memory_font_file_reference.call(this, factory, fontData, fontDataSize, ownerObject, fontFile)
    end
    def get_file_count(this : IDWriteInMemoryFontFileLoader*) : UInt32
      @lpVtbl.try &.value.get_file_count.call(this)
    end

  end

  @[Extern]
  record IDWriteFactory5Vtbl,
    query_interface : Proc(IDWriteFactory5*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFactory5*, UInt32),
    release : Proc(IDWriteFactory5*, UInt32),
    get_system_font_collection_1 : Proc(IDWriteFactory5*, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_custom_font_collection : Proc(IDWriteFactory5*, Void*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    register_font_collection_loader : Proc(IDWriteFactory5*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_collection_loader : Proc(IDWriteFactory5*, Void*, Win32cr::Foundation::HRESULT),
    create_font_file_reference : Proc(IDWriteFactory5*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::FILETIME*, Void**, Win32cr::Foundation::HRESULT),
    create_custom_font_file_reference : Proc(IDWriteFactory5*, Void*, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_font_face : Proc(IDWriteFactory5*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, UInt32, Void**, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    create_rendering_params : Proc(IDWriteFactory5*, Void**, Win32cr::Foundation::HRESULT),
    create_monitor_rendering_params : Proc(IDWriteFactory5*, Win32cr::Graphics::Gdi::HMONITOR, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_1_1 : Proc(IDWriteFactory5*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Void**, Win32cr::Foundation::HRESULT),
    register_font_file_loader : Proc(IDWriteFactory5*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_file_loader : Proc(IDWriteFactory5*, Void*, Win32cr::Foundation::HRESULT),
    create_text_format_1 : Proc(IDWriteFactory5*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Float32, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    create_typography : Proc(IDWriteFactory5*, Void**, Win32cr::Foundation::HRESULT),
    get_gdi_interop : Proc(IDWriteFactory5*, Void**, Win32cr::Foundation::HRESULT),
    create_text_layout : Proc(IDWriteFactory5*, UInt16*, UInt32, Void*, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_gdi_compatible_text_layout : Proc(IDWriteFactory5*, UInt16*, UInt32, Void*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_ellipsis_trimming_sign : Proc(IDWriteFactory5*, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_text_analyzer : Proc(IDWriteFactory5*, Void**, Win32cr::Foundation::HRESULT),
    create_number_substitution : Proc(IDWriteFactory5*, Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis_1 : Proc(IDWriteFactory5*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    get_eudc_font_collection : Proc(IDWriteFactory5*, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_2_1 : Proc(IDWriteFactory5*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_fallback : Proc(IDWriteFactory5*, Void**, Win32cr::Foundation::HRESULT),
    create_font_fallback_builder : Proc(IDWriteFactory5*, Void**, Win32cr::Foundation::HRESULT),
    translate_color_glyph_run_1 : Proc(IDWriteFactory5*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_1_2 : Proc(IDWriteFactory5*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis_2 : Proc(IDWriteFactory5*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis : Proc(IDWriteFactory5*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_2_2 : Proc(IDWriteFactory5*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Void**, Win32cr::Foundation::HRESULT),
    create_font_face_reference_1 : Proc(IDWriteFactory5*, Void*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    create_font_face_reference_2 : Proc(IDWriteFactory5*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::FILETIME*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_set_1 : Proc(IDWriteFactory5*, Void**, Win32cr::Foundation::HRESULT),
    create_font_set_builder_1 : Proc(IDWriteFactory5*, Void**, Win32cr::Foundation::HRESULT),
    create_font_collection_from_font_set_1 : Proc(IDWriteFactory5*, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_collection_2_1 : Proc(IDWriteFactory5*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_font_download_queue : Proc(IDWriteFactory5*, Void**, Win32cr::Foundation::HRESULT),
    translate_color_glyph_run_2 : Proc(IDWriteFactory5*, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    compute_glyph_origins_1 : Proc(IDWriteFactory5*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*, Win32cr::Foundation::HRESULT),
    compute_glyph_origins_2 : Proc(IDWriteFactory5*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*, Win32cr::Foundation::HRESULT),
    create_font_set_builder_2 : Proc(IDWriteFactory5*, Void**, Win32cr::Foundation::HRESULT),
    create_in_memory_font_file_loader : Proc(IDWriteFactory5*, Void**, Win32cr::Foundation::HRESULT),
    create_http_font_file_loader : Proc(IDWriteFactory5*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    analyze_container_type : Proc(IDWriteFactory5*, Void*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_CONTAINER_TYPE),
    unpack_font_file : Proc(IDWriteFactory5*, Win32cr::Graphics::DirectWrite::DWRITE_CONTAINER_TYPE, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("958db99a-be2a-4f09-af7d-65189803d1d3")]
  record IDWriteFactory5, lpVtbl : IDWriteFactory5Vtbl* do
    GUID = LibC::GUID.new(0x958db99a_u32, 0xbe2a_u16, 0x4f09_u16, StaticArray[0xaf_u8, 0x7d_u8, 0x65_u8, 0x18_u8, 0x98_u8, 0x3_u8, 0xd1_u8, 0xd3_u8])
    def query_interface(this : IDWriteFactory5*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFactory5*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFactory5*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_system_font_collection_1(this : IDWriteFactory5*, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_1.call(this, fontCollection, checkForUpdates)
    end
    def create_custom_font_collection(this : IDWriteFactory5*, collectionLoader : Void*, collectionKey : Void*, collectionKeySize : UInt32, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_collection.call(this, collectionLoader, collectionKey, collectionKeySize, fontCollection)
    end
    def register_font_collection_loader(this : IDWriteFactory5*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_collection_loader.call(this, fontCollectionLoader)
    end
    def unregister_font_collection_loader(this : IDWriteFactory5*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_collection_loader.call(this, fontCollectionLoader)
    end
    def create_font_file_reference(this : IDWriteFactory5*, filePath : Win32cr::Foundation::PWSTR, lastWriteTime : Win32cr::Foundation::FILETIME*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_file_reference.call(this, filePath, lastWriteTime, fontFile)
    end
    def create_custom_font_file_reference(this : IDWriteFactory5*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, fontFileLoader : Void*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_file_reference.call(this, fontFileReferenceKey, fontFileReferenceKeySize, fontFileLoader, fontFile)
    end
    def create_font_face(this : IDWriteFactory5*, fontFaceType : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, numberOfFiles : UInt32, fontFiles : Void**, faceIndex : UInt32, fontFaceSimulationFlags : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face.call(this, fontFaceType, numberOfFiles, fontFiles, faceIndex, fontFaceSimulationFlags, fontFace)
    end
    def create_rendering_params(this : IDWriteFactory5*, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rendering_params.call(this, renderingParams)
    end
    def create_monitor_rendering_params(this : IDWriteFactory5*, monitor : Win32cr::Graphics::Gdi::HMONITOR, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_monitor_rendering_params.call(this, monitor, renderingParams)
    end
    def create_custom_rendering_params_1_1(this : IDWriteFactory5*, gamma : Float32, enhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_1_1.call(this, gamma, enhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, renderingParams)
    end
    def register_font_file_loader(this : IDWriteFactory5*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_file_loader.call(this, fontFileLoader)
    end
    def unregister_font_file_loader(this : IDWriteFactory5*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_file_loader.call(this, fontFileLoader)
    end
    def create_text_format_1(this : IDWriteFactory5*, fontFamilyName : Win32cr::Foundation::PWSTR, fontCollection : Void*, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, fontSize : Float32, localeName : Win32cr::Foundation::PWSTR, textFormat : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_format_1.call(this, fontFamilyName, fontCollection, fontWeight, fontStyle, fontStretch, fontSize, localeName, textFormat)
    end
    def create_typography(this : IDWriteFactory5*, typography : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_typography.call(this, typography)
    end
    def get_gdi_interop(this : IDWriteFactory5*, gdiInterop : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_interop.call(this, gdiInterop)
    end
    def create_text_layout(this : IDWriteFactory5*, string : UInt16*, stringLength : UInt32, textFormat : Void*, maxWidth : Float32, maxHeight : Float32, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_layout.call(this, string, stringLength, textFormat, maxWidth, maxHeight, textLayout)
    end
    def create_gdi_compatible_text_layout(this : IDWriteFactory5*, string : UInt16*, stringLength : UInt32, textFormat : Void*, layoutWidth : Float32, layoutHeight : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_gdi_compatible_text_layout.call(this, string, stringLength, textFormat, layoutWidth, layoutHeight, pixelsPerDip, transform, useGdiNatural, textLayout)
    end
    def create_ellipsis_trimming_sign(this : IDWriteFactory5*, textFormat : Void*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_ellipsis_trimming_sign.call(this, textFormat, trimmingSign)
    end
    def create_text_analyzer(this : IDWriteFactory5*, textAnalyzer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_analyzer.call(this, textAnalyzer)
    end
    def create_number_substitution(this : IDWriteFactory5*, substitutionMethod : Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, localeName : Win32cr::Foundation::PWSTR, ignoreUserOverride : Win32cr::Foundation::BOOL, numberSubstitution : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_number_substitution.call(this, substitutionMethod, localeName, ignoreUserOverride, numberSubstitution)
    end
    def create_glyph_run_analysis_1(this : IDWriteFactory5*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis_1.call(this, glyphRun, pixelsPerDip, transform, renderingMode, measuringMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def get_eudc_font_collection(this : IDWriteFactory5*, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_eudc_font_collection.call(this, fontCollection, checkForUpdates)
    end
    def create_custom_rendering_params_2_1(this : IDWriteFactory5*, gamma : Float32, enhancedContrast : Float32, enhancedContrastGrayscale : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_2_1.call(this, gamma, enhancedContrast, enhancedContrastGrayscale, clearTypeLevel, pixelGeometry, renderingMode, renderingParams)
    end
    def get_system_font_fallback(this : IDWriteFactory5*, fontFallback : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_fallback.call(this, fontFallback)
    end
    def create_font_fallback_builder(this : IDWriteFactory5*, fontFallbackBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_fallback_builder.call(this, fontFallbackBuilder)
    end
    def translate_color_glyph_run_1(this : IDWriteFactory5*, baselineOriginX : Float32, baselineOriginY : Float32, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, glyphRunDescription : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, worldToDeviceTransform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, colorPaletteIndex : UInt32, colorLayers : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_color_glyph_run_1.call(this, baselineOriginX, baselineOriginY, glyphRun, glyphRunDescription, measuringMode, worldToDeviceTransform, colorPaletteIndex, colorLayers)
    end
    def create_custom_rendering_params_1_2(this : IDWriteFactory5*, gamma : Float32, enhancedContrast : Float32, grayscaleEnhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_1_2.call(this, gamma, enhancedContrast, grayscaleEnhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, gridFitMode, renderingParams)
    end
    def create_glyph_run_analysis_2(this : IDWriteFactory5*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, antialiasMode : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis_2.call(this, glyphRun, transform, renderingMode, measuringMode, gridFitMode, antialiasMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def create_glyph_run_analysis(this : IDWriteFactory5*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, antialiasMode : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis.call(this, glyphRun, transform, renderingMode, measuringMode, gridFitMode, antialiasMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def create_custom_rendering_params_2_2(this : IDWriteFactory5*, gamma : Float32, enhancedContrast : Float32, grayscaleEnhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_2_2.call(this, gamma, enhancedContrast, grayscaleEnhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, gridFitMode, renderingParams)
    end
    def create_font_face_reference_1(this : IDWriteFactory5*, fontFile : Void*, faceIndex : UInt32, fontSimulations : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_reference_1.call(this, fontFile, faceIndex, fontSimulations, fontFaceReference)
    end
    def create_font_face_reference_2(this : IDWriteFactory5*, filePath : Win32cr::Foundation::PWSTR, lastWriteTime : Win32cr::Foundation::FILETIME*, faceIndex : UInt32, fontSimulations : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_reference_2.call(this, filePath, lastWriteTime, faceIndex, fontSimulations, fontFaceReference)
    end
    def get_system_font_set_1(this : IDWriteFactory5*, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_set_1.call(this, fontSet)
    end
    def create_font_set_builder_1(this : IDWriteFactory5*, fontSetBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_set_builder_1.call(this, fontSetBuilder)
    end
    def create_font_collection_from_font_set_1(this : IDWriteFactory5*, fontSet : Void*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_collection_from_font_set_1.call(this, fontSet, fontCollection)
    end
    def get_system_font_collection_2_1(this : IDWriteFactory5*, includeDownloadableFonts : Win32cr::Foundation::BOOL, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_2_1.call(this, includeDownloadableFonts, fontCollection, checkForUpdates)
    end
    def get_font_download_queue(this : IDWriteFactory5*, fontDownloadQueue : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_download_queue.call(this, fontDownloadQueue)
    end
    def translate_color_glyph_run_2(this : IDWriteFactory5*, baselineOrigin : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, glyphRunDescription : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, desiredGlyphImageFormats : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, worldAndDpiTransform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, colorPaletteIndex : UInt32, colorLayers : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_color_glyph_run_2.call(this, baselineOrigin, glyphRun, glyphRunDescription, desiredGlyphImageFormats, measuringMode, worldAndDpiTransform, colorPaletteIndex, colorLayers)
    end
    def compute_glyph_origins_1(this : IDWriteFactory5*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, baselineOrigin : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, glyphOrigins : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compute_glyph_origins_1.call(this, glyphRun, baselineOrigin, glyphOrigins)
    end
    def compute_glyph_origins_2(this : IDWriteFactory5*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, baselineOrigin : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, worldAndDpiTransform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, glyphOrigins : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compute_glyph_origins_2.call(this, glyphRun, measuringMode, baselineOrigin, worldAndDpiTransform, glyphOrigins)
    end
    def create_font_set_builder_2(this : IDWriteFactory5*, fontSetBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_set_builder_2.call(this, fontSetBuilder)
    end
    def create_in_memory_font_file_loader(this : IDWriteFactory5*, newLoader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_in_memory_font_file_loader.call(this, newLoader)
    end
    def create_http_font_file_loader(this : IDWriteFactory5*, referrerUrl : Win32cr::Foundation::PWSTR, extraHeaders : Win32cr::Foundation::PWSTR, newLoader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_http_font_file_loader.call(this, referrerUrl, extraHeaders, newLoader)
    end
    def analyze_container_type(this : IDWriteFactory5*, fileData : Void*, fileDataSize : UInt32) : Win32cr::Graphics::DirectWrite::DWRITE_CONTAINER_TYPE
      @lpVtbl.try &.value.analyze_container_type.call(this, fileData, fileDataSize)
    end
    def unpack_font_file(this : IDWriteFactory5*, containerType : Win32cr::Graphics::DirectWrite::DWRITE_CONTAINER_TYPE, fileData : Void*, fileDataSize : UInt32, unpackedFontStream : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unpack_font_file.call(this, containerType, fileData, fileDataSize, unpackedFontStream)
    end

  end

  @[Extern]
  record IDWriteFactory6Vtbl,
    query_interface : Proc(IDWriteFactory6*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFactory6*, UInt32),
    release : Proc(IDWriteFactory6*, UInt32),
    get_system_font_collection_1_1 : Proc(IDWriteFactory6*, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_custom_font_collection : Proc(IDWriteFactory6*, Void*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    register_font_collection_loader : Proc(IDWriteFactory6*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_collection_loader : Proc(IDWriteFactory6*, Void*, Win32cr::Foundation::HRESULT),
    create_font_file_reference : Proc(IDWriteFactory6*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::FILETIME*, Void**, Win32cr::Foundation::HRESULT),
    create_custom_font_file_reference : Proc(IDWriteFactory6*, Void*, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_font_face : Proc(IDWriteFactory6*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, UInt32, Void**, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    create_rendering_params : Proc(IDWriteFactory6*, Void**, Win32cr::Foundation::HRESULT),
    create_monitor_rendering_params : Proc(IDWriteFactory6*, Win32cr::Graphics::Gdi::HMONITOR, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_1_1 : Proc(IDWriteFactory6*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Void**, Win32cr::Foundation::HRESULT),
    register_font_file_loader : Proc(IDWriteFactory6*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_file_loader : Proc(IDWriteFactory6*, Void*, Win32cr::Foundation::HRESULT),
    create_text_format_1 : Proc(IDWriteFactory6*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Float32, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    create_typography : Proc(IDWriteFactory6*, Void**, Win32cr::Foundation::HRESULT),
    get_gdi_interop : Proc(IDWriteFactory6*, Void**, Win32cr::Foundation::HRESULT),
    create_text_layout : Proc(IDWriteFactory6*, UInt16*, UInt32, Void*, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_gdi_compatible_text_layout : Proc(IDWriteFactory6*, UInt16*, UInt32, Void*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_ellipsis_trimming_sign : Proc(IDWriteFactory6*, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_text_analyzer : Proc(IDWriteFactory6*, Void**, Win32cr::Foundation::HRESULT),
    create_number_substitution : Proc(IDWriteFactory6*, Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis_1 : Proc(IDWriteFactory6*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    get_eudc_font_collection : Proc(IDWriteFactory6*, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_2_1 : Proc(IDWriteFactory6*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_fallback : Proc(IDWriteFactory6*, Void**, Win32cr::Foundation::HRESULT),
    create_font_fallback_builder : Proc(IDWriteFactory6*, Void**, Win32cr::Foundation::HRESULT),
    translate_color_glyph_run_1 : Proc(IDWriteFactory6*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_1_2 : Proc(IDWriteFactory6*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis_2 : Proc(IDWriteFactory6*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis : Proc(IDWriteFactory6*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_2_2 : Proc(IDWriteFactory6*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Void**, Win32cr::Foundation::HRESULT),
    create_font_face_reference_1 : Proc(IDWriteFactory6*, Void*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    create_font_face_reference_2 : Proc(IDWriteFactory6*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::FILETIME*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_set_1 : Proc(IDWriteFactory6*, Void**, Win32cr::Foundation::HRESULT),
    create_font_set_builder_1 : Proc(IDWriteFactory6*, Void**, Win32cr::Foundation::HRESULT),
    create_font_collection_from_font_set_1 : Proc(IDWriteFactory6*, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_collection_2_1 : Proc(IDWriteFactory6*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_font_download_queue : Proc(IDWriteFactory6*, Void**, Win32cr::Foundation::HRESULT),
    translate_color_glyph_run_2 : Proc(IDWriteFactory6*, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    compute_glyph_origins_1 : Proc(IDWriteFactory6*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*, Win32cr::Foundation::HRESULT),
    compute_glyph_origins_2 : Proc(IDWriteFactory6*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*, Win32cr::Foundation::HRESULT),
    create_font_set_builder_2 : Proc(IDWriteFactory6*, Void**, Win32cr::Foundation::HRESULT),
    create_in_memory_font_file_loader : Proc(IDWriteFactory6*, Void**, Win32cr::Foundation::HRESULT),
    create_http_font_file_loader : Proc(IDWriteFactory6*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    analyze_container_type : Proc(IDWriteFactory6*, Void*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_CONTAINER_TYPE),
    unpack_font_file : Proc(IDWriteFactory6*, Win32cr::Graphics::DirectWrite::DWRITE_CONTAINER_TYPE, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_font_face_reference : Proc(IDWriteFactory6*, Void*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_font_resource : Proc(IDWriteFactory6*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_set_2 : Proc(IDWriteFactory6*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_collection_1_2 : Proc(IDWriteFactory6*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL, Void**, Win32cr::Foundation::HRESULT),
    create_font_collection_from_font_set_2 : Proc(IDWriteFactory6*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL, Void**, Win32cr::Foundation::HRESULT),
    create_font_set_builder : Proc(IDWriteFactory6*, Void**, Win32cr::Foundation::HRESULT),
    create_text_format_2 : Proc(IDWriteFactory6*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Float32, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("f3744d80-21f7-42eb-b35d-995bc72fc223")]
  record IDWriteFactory6, lpVtbl : IDWriteFactory6Vtbl* do
    GUID = LibC::GUID.new(0xf3744d80_u32, 0x21f7_u16, 0x42eb_u16, StaticArray[0xb3_u8, 0x5d_u8, 0x99_u8, 0x5b_u8, 0xc7_u8, 0x2f_u8, 0xc2_u8, 0x23_u8])
    def query_interface(this : IDWriteFactory6*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFactory6*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFactory6*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_system_font_collection_1_1(this : IDWriteFactory6*, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_1_1.call(this, fontCollection, checkForUpdates)
    end
    def create_custom_font_collection(this : IDWriteFactory6*, collectionLoader : Void*, collectionKey : Void*, collectionKeySize : UInt32, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_collection.call(this, collectionLoader, collectionKey, collectionKeySize, fontCollection)
    end
    def register_font_collection_loader(this : IDWriteFactory6*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_collection_loader.call(this, fontCollectionLoader)
    end
    def unregister_font_collection_loader(this : IDWriteFactory6*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_collection_loader.call(this, fontCollectionLoader)
    end
    def create_font_file_reference(this : IDWriteFactory6*, filePath : Win32cr::Foundation::PWSTR, lastWriteTime : Win32cr::Foundation::FILETIME*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_file_reference.call(this, filePath, lastWriteTime, fontFile)
    end
    def create_custom_font_file_reference(this : IDWriteFactory6*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, fontFileLoader : Void*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_file_reference.call(this, fontFileReferenceKey, fontFileReferenceKeySize, fontFileLoader, fontFile)
    end
    def create_font_face(this : IDWriteFactory6*, fontFaceType : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, numberOfFiles : UInt32, fontFiles : Void**, faceIndex : UInt32, fontFaceSimulationFlags : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face.call(this, fontFaceType, numberOfFiles, fontFiles, faceIndex, fontFaceSimulationFlags, fontFace)
    end
    def create_rendering_params(this : IDWriteFactory6*, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rendering_params.call(this, renderingParams)
    end
    def create_monitor_rendering_params(this : IDWriteFactory6*, monitor : Win32cr::Graphics::Gdi::HMONITOR, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_monitor_rendering_params.call(this, monitor, renderingParams)
    end
    def create_custom_rendering_params_1_1(this : IDWriteFactory6*, gamma : Float32, enhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_1_1.call(this, gamma, enhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, renderingParams)
    end
    def register_font_file_loader(this : IDWriteFactory6*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_file_loader.call(this, fontFileLoader)
    end
    def unregister_font_file_loader(this : IDWriteFactory6*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_file_loader.call(this, fontFileLoader)
    end
    def create_text_format_1(this : IDWriteFactory6*, fontFamilyName : Win32cr::Foundation::PWSTR, fontCollection : Void*, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, fontSize : Float32, localeName : Win32cr::Foundation::PWSTR, textFormat : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_format_1.call(this, fontFamilyName, fontCollection, fontWeight, fontStyle, fontStretch, fontSize, localeName, textFormat)
    end
    def create_typography(this : IDWriteFactory6*, typography : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_typography.call(this, typography)
    end
    def get_gdi_interop(this : IDWriteFactory6*, gdiInterop : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_interop.call(this, gdiInterop)
    end
    def create_text_layout(this : IDWriteFactory6*, string : UInt16*, stringLength : UInt32, textFormat : Void*, maxWidth : Float32, maxHeight : Float32, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_layout.call(this, string, stringLength, textFormat, maxWidth, maxHeight, textLayout)
    end
    def create_gdi_compatible_text_layout(this : IDWriteFactory6*, string : UInt16*, stringLength : UInt32, textFormat : Void*, layoutWidth : Float32, layoutHeight : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_gdi_compatible_text_layout.call(this, string, stringLength, textFormat, layoutWidth, layoutHeight, pixelsPerDip, transform, useGdiNatural, textLayout)
    end
    def create_ellipsis_trimming_sign(this : IDWriteFactory6*, textFormat : Void*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_ellipsis_trimming_sign.call(this, textFormat, trimmingSign)
    end
    def create_text_analyzer(this : IDWriteFactory6*, textAnalyzer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_analyzer.call(this, textAnalyzer)
    end
    def create_number_substitution(this : IDWriteFactory6*, substitutionMethod : Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, localeName : Win32cr::Foundation::PWSTR, ignoreUserOverride : Win32cr::Foundation::BOOL, numberSubstitution : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_number_substitution.call(this, substitutionMethod, localeName, ignoreUserOverride, numberSubstitution)
    end
    def create_glyph_run_analysis_1(this : IDWriteFactory6*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis_1.call(this, glyphRun, pixelsPerDip, transform, renderingMode, measuringMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def get_eudc_font_collection(this : IDWriteFactory6*, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_eudc_font_collection.call(this, fontCollection, checkForUpdates)
    end
    def create_custom_rendering_params_2_1(this : IDWriteFactory6*, gamma : Float32, enhancedContrast : Float32, enhancedContrastGrayscale : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_2_1.call(this, gamma, enhancedContrast, enhancedContrastGrayscale, clearTypeLevel, pixelGeometry, renderingMode, renderingParams)
    end
    def get_system_font_fallback(this : IDWriteFactory6*, fontFallback : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_fallback.call(this, fontFallback)
    end
    def create_font_fallback_builder(this : IDWriteFactory6*, fontFallbackBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_fallback_builder.call(this, fontFallbackBuilder)
    end
    def translate_color_glyph_run_1(this : IDWriteFactory6*, baselineOriginX : Float32, baselineOriginY : Float32, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, glyphRunDescription : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, worldToDeviceTransform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, colorPaletteIndex : UInt32, colorLayers : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_color_glyph_run_1.call(this, baselineOriginX, baselineOriginY, glyphRun, glyphRunDescription, measuringMode, worldToDeviceTransform, colorPaletteIndex, colorLayers)
    end
    def create_custom_rendering_params_1_2(this : IDWriteFactory6*, gamma : Float32, enhancedContrast : Float32, grayscaleEnhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_1_2.call(this, gamma, enhancedContrast, grayscaleEnhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, gridFitMode, renderingParams)
    end
    def create_glyph_run_analysis_2(this : IDWriteFactory6*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, antialiasMode : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis_2.call(this, glyphRun, transform, renderingMode, measuringMode, gridFitMode, antialiasMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def create_glyph_run_analysis(this : IDWriteFactory6*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, antialiasMode : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis.call(this, glyphRun, transform, renderingMode, measuringMode, gridFitMode, antialiasMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def create_custom_rendering_params_2_2(this : IDWriteFactory6*, gamma : Float32, enhancedContrast : Float32, grayscaleEnhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_2_2.call(this, gamma, enhancedContrast, grayscaleEnhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, gridFitMode, renderingParams)
    end
    def create_font_face_reference_1(this : IDWriteFactory6*, fontFile : Void*, faceIndex : UInt32, fontSimulations : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_reference_1.call(this, fontFile, faceIndex, fontSimulations, fontFaceReference)
    end
    def create_font_face_reference_2(this : IDWriteFactory6*, filePath : Win32cr::Foundation::PWSTR, lastWriteTime : Win32cr::Foundation::FILETIME*, faceIndex : UInt32, fontSimulations : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_reference_2.call(this, filePath, lastWriteTime, faceIndex, fontSimulations, fontFaceReference)
    end
    def get_system_font_set_1(this : IDWriteFactory6*, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_set_1.call(this, fontSet)
    end
    def create_font_set_builder_1(this : IDWriteFactory6*, fontSetBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_set_builder_1.call(this, fontSetBuilder)
    end
    def create_font_collection_from_font_set_1(this : IDWriteFactory6*, fontSet : Void*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_collection_from_font_set_1.call(this, fontSet, fontCollection)
    end
    def get_system_font_collection_2_1(this : IDWriteFactory6*, includeDownloadableFonts : Win32cr::Foundation::BOOL, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_2_1.call(this, includeDownloadableFonts, fontCollection, checkForUpdates)
    end
    def get_font_download_queue(this : IDWriteFactory6*, fontDownloadQueue : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_download_queue.call(this, fontDownloadQueue)
    end
    def translate_color_glyph_run_2(this : IDWriteFactory6*, baselineOrigin : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, glyphRunDescription : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, desiredGlyphImageFormats : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, worldAndDpiTransform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, colorPaletteIndex : UInt32, colorLayers : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_color_glyph_run_2.call(this, baselineOrigin, glyphRun, glyphRunDescription, desiredGlyphImageFormats, measuringMode, worldAndDpiTransform, colorPaletteIndex, colorLayers)
    end
    def compute_glyph_origins_1(this : IDWriteFactory6*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, baselineOrigin : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, glyphOrigins : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compute_glyph_origins_1.call(this, glyphRun, baselineOrigin, glyphOrigins)
    end
    def compute_glyph_origins_2(this : IDWriteFactory6*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, baselineOrigin : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, worldAndDpiTransform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, glyphOrigins : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compute_glyph_origins_2.call(this, glyphRun, measuringMode, baselineOrigin, worldAndDpiTransform, glyphOrigins)
    end
    def create_font_set_builder_2(this : IDWriteFactory6*, fontSetBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_set_builder_2.call(this, fontSetBuilder)
    end
    def create_in_memory_font_file_loader(this : IDWriteFactory6*, newLoader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_in_memory_font_file_loader.call(this, newLoader)
    end
    def create_http_font_file_loader(this : IDWriteFactory6*, referrerUrl : Win32cr::Foundation::PWSTR, extraHeaders : Win32cr::Foundation::PWSTR, newLoader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_http_font_file_loader.call(this, referrerUrl, extraHeaders, newLoader)
    end
    def analyze_container_type(this : IDWriteFactory6*, fileData : Void*, fileDataSize : UInt32) : Win32cr::Graphics::DirectWrite::DWRITE_CONTAINER_TYPE
      @lpVtbl.try &.value.analyze_container_type.call(this, fileData, fileDataSize)
    end
    def unpack_font_file(this : IDWriteFactory6*, containerType : Win32cr::Graphics::DirectWrite::DWRITE_CONTAINER_TYPE, fileData : Void*, fileDataSize : UInt32, unpackedFontStream : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unpack_font_file.call(this, containerType, fileData, fileDataSize, unpackedFontStream)
    end
    def create_font_face_reference(this : IDWriteFactory6*, fontFile : Void*, faceIndex : UInt32, fontSimulations : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_reference.call(this, fontFile, faceIndex, fontSimulations, fontAxisValues, fontAxisValueCount, fontFaceReference)
    end
    def create_font_resource(this : IDWriteFactory6*, fontFile : Void*, faceIndex : UInt32, fontResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_resource.call(this, fontFile, faceIndex, fontResource)
    end
    def get_system_font_set_2(this : IDWriteFactory6*, includeDownloadableFonts : Win32cr::Foundation::BOOL, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_set_2.call(this, includeDownloadableFonts, fontSet)
    end
    def get_system_font_collection_1_2(this : IDWriteFactory6*, includeDownloadableFonts : Win32cr::Foundation::BOOL, fontFamilyModel : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_1_2.call(this, includeDownloadableFonts, fontFamilyModel, fontCollection)
    end
    def create_font_collection_from_font_set_2(this : IDWriteFactory6*, fontSet : Void*, fontFamilyModel : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_collection_from_font_set_2.call(this, fontSet, fontFamilyModel, fontCollection)
    end
    def create_font_set_builder(this : IDWriteFactory6*, fontSetBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_set_builder.call(this, fontSetBuilder)
    end
    def create_text_format_2(this : IDWriteFactory6*, fontFamilyName : Win32cr::Foundation::PWSTR, fontCollection : Void*, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, fontSize : Float32, localeName : Win32cr::Foundation::PWSTR, textFormat : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_format_2.call(this, fontFamilyName, fontCollection, fontAxisValues, fontAxisValueCount, fontSize, localeName, textFormat)
    end

  end

  @[Extern]
  record IDWriteFontFace5Vtbl,
    query_interface : Proc(IDWriteFontFace5*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFace5*, UInt32),
    release : Proc(IDWriteFontFace5*, UInt32),
    get_type : Proc(IDWriteFontFace5*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE),
    get_files : Proc(IDWriteFontFace5*, UInt32*, Void**, Win32cr::Foundation::HRESULT),
    get_index : Proc(IDWriteFontFace5*, UInt32),
    get_simulations : Proc(IDWriteFontFace5*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS),
    is_symbol_font : Proc(IDWriteFontFace5*, Win32cr::Foundation::BOOL),
    get_metrics_1 : Proc(IDWriteFontFace5*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Void),
    get_glyph_count : Proc(IDWriteFontFace5*, UInt16),
    get_design_glyph_metrics : Proc(IDWriteFontFace5*, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_glyph_indices : Proc(IDWriteFontFace5*, UInt32*, UInt32, UInt16*, Win32cr::Foundation::HRESULT),
    try_get_font_table : Proc(IDWriteFontFace5*, UInt32, Void**, UInt32*, Void**, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    release_font_table : Proc(IDWriteFontFace5*, Void*, Void),
    get_glyph_run_outline : Proc(IDWriteFontFace5*, Float32, UInt16*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Void*, Win32cr::Foundation::HRESULT),
    get_recommended_rendering_mode_1_1 : Proc(IDWriteFontFace5*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_metrics_1 : Proc(IDWriteFontFace5*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_metrics : Proc(IDWriteFontFace5*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_metrics_2 : Proc(IDWriteFontFace5*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*, Void),
    get_gdi_compatible_metrics_2 : Proc(IDWriteFontFace5*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*, Win32cr::Foundation::HRESULT),
    get_caret_metrics : Proc(IDWriteFontFace5*, Win32cr::Graphics::DirectWrite::DWRITE_CARET_METRICS*, Void),
    get_unicode_ranges : Proc(IDWriteFontFace5*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, UInt32*, Win32cr::Foundation::HRESULT),
    is_monospaced_font : Proc(IDWriteFontFace5*, Win32cr::Foundation::BOOL),
    get_design_glyph_advances : Proc(IDWriteFontFace5*, UInt32, UInt16*, Int32*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_advances : Proc(IDWriteFontFace5*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, UInt32, UInt16*, Int32*, Win32cr::Foundation::HRESULT),
    get_kerning_pair_adjustments : Proc(IDWriteFontFace5*, UInt32, UInt16*, Int32*, Win32cr::Foundation::HRESULT),
    has_kerning_pairs : Proc(IDWriteFontFace5*, Win32cr::Foundation::BOOL),
    get_recommended_rendering_mode_2_1 : Proc(IDWriteFontFace5*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Foundation::HRESULT),
    get_vertical_glyph_variants : Proc(IDWriteFontFace5*, UInt32, UInt16*, UInt16*, Win32cr::Foundation::HRESULT),
    has_vertical_glyph_variants : Proc(IDWriteFontFace5*, Win32cr::Foundation::BOOL),
    is_color_font : Proc(IDWriteFontFace5*, Win32cr::Foundation::BOOL),
    get_color_palette_count : Proc(IDWriteFontFace5*, UInt32),
    get_palette_entry_count : Proc(IDWriteFontFace5*, UInt32),
    get_palette_entries : Proc(IDWriteFontFace5*, UInt32, UInt32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_COLOR_F*, Win32cr::Foundation::HRESULT),
    get_recommended_rendering_mode_1_2 : Proc(IDWriteFontFace5*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*, Win32cr::Foundation::HRESULT),
    get_font_face_reference : Proc(IDWriteFontFace5*, Void**, Win32cr::Foundation::HRESULT),
    get_panose : Proc(IDWriteFontFace5*, Win32cr::Graphics::DirectWrite::DWRITE_PANOSE*, Void),
    get_weight : Proc(IDWriteFontFace5*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_stretch : Proc(IDWriteFontFace5*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_style : Proc(IDWriteFontFace5*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    get_family_names_1 : Proc(IDWriteFontFace5*, Void**, Win32cr::Foundation::HRESULT),
    get_face_names_1 : Proc(IDWriteFontFace5*, Void**, Win32cr::Foundation::HRESULT),
    get_informational_strings : Proc(IDWriteFontFace5*, Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, Void**, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    has_character : Proc(IDWriteFontFace5*, UInt32, Win32cr::Foundation::BOOL),
    get_recommended_rendering_mode_2_2 : Proc(IDWriteFontFace5*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1*, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*, Win32cr::Foundation::HRESULT),
    is_character_local : Proc(IDWriteFontFace5*, UInt32, Win32cr::Foundation::BOOL),
    is_glyph_local : Proc(IDWriteFontFace5*, UInt16, Win32cr::Foundation::BOOL),
    are_characters_local : Proc(IDWriteFontFace5*, UInt16*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    are_glyphs_local : Proc(IDWriteFontFace5*, UInt16*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_glyph_image_formats_1 : Proc(IDWriteFontFace5*, UInt16, UInt32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS*, Win32cr::Foundation::HRESULT),
    get_glyph_image_formats_2 : Proc(IDWriteFontFace5*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS),
    get_glyph_image_data : Proc(IDWriteFontFace5*, UInt16, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    release_glyph_image_data : Proc(IDWriteFontFace5*, Void*, Void),
    get_font_axis_value_count : Proc(IDWriteFontFace5*, UInt32),
    get_font_axis_values : Proc(IDWriteFontFace5*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Win32cr::Foundation::HRESULT),
    has_variations : Proc(IDWriteFontFace5*, Win32cr::Foundation::BOOL),
    get_font_resource : Proc(IDWriteFontFace5*, Void**, Win32cr::Foundation::HRESULT),
    equals : Proc(IDWriteFontFace5*, Void*, Win32cr::Foundation::BOOL)


  @[Extern]
  #@[Com("98eff3a5-b667-479a-b145-e2fa5b9fdc29")]
  record IDWriteFontFace5, lpVtbl : IDWriteFontFace5Vtbl* do
    GUID = LibC::GUID.new(0x98eff3a5_u32, 0xb667_u16, 0x479a_u16, StaticArray[0xb1_u8, 0x45_u8, 0xe2_u8, 0xfa_u8, 0x5b_u8, 0x9f_u8, 0xdc_u8, 0x29_u8])
    def query_interface(this : IDWriteFontFace5*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFace5*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFace5*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type(this : IDWriteFontFace5*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE
      @lpVtbl.try &.value.get_type.call(this)
    end
    def get_files(this : IDWriteFontFace5*, numberOfFiles : UInt32*, fontFiles : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_files.call(this, numberOfFiles, fontFiles)
    end
    def get_index(this : IDWriteFontFace5*) : UInt32
      @lpVtbl.try &.value.get_index.call(this)
    end
    def get_simulations(this : IDWriteFontFace5*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS
      @lpVtbl.try &.value.get_simulations.call(this)
    end
    def is_symbol_font(this : IDWriteFontFace5*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_symbol_font.call(this)
    end
    def get_metrics_1(this : IDWriteFontFace5*, fontFaceMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Void
      @lpVtbl.try &.value.get_metrics_1.call(this, fontFaceMetrics)
    end
    def get_glyph_count(this : IDWriteFontFace5*) : UInt16
      @lpVtbl.try &.value.get_glyph_count.call(this)
    end
    def get_design_glyph_metrics(this : IDWriteFontFace5*, glyphIndices : UInt16*, glyphCount : UInt32, glyphMetrics : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_design_glyph_metrics.call(this, glyphIndices, glyphCount, glyphMetrics, isSideways)
    end
    def get_glyph_indices(this : IDWriteFontFace5*, codePoints : UInt32*, codePointCount : UInt32, glyphIndices : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_indices.call(this, codePoints, codePointCount, glyphIndices)
    end
    def try_get_font_table(this : IDWriteFontFace5*, openTypeTableTag : UInt32, tableData : Void**, tableSize : UInt32*, tableContext : Void**, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.try_get_font_table.call(this, openTypeTableTag, tableData, tableSize, tableContext, exists)
    end
    def release_font_table(this : IDWriteFontFace5*, tableContext : Void*) : Void
      @lpVtbl.try &.value.release_font_table.call(this, tableContext)
    end
    def get_glyph_run_outline(this : IDWriteFontFace5*, emSize : Float32, glyphIndices : UInt16*, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, glyphCount : UInt32, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, geometrySink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_run_outline.call(this, emSize, glyphIndices, glyphAdvances, glyphOffsets, glyphCount, isSideways, isRightToLeft, geometrySink)
    end
    def get_recommended_rendering_mode_1_1(this : IDWriteFontFace5*, emSize : Float32, pixelsPerDip : Float32, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_1_1.call(this, emSize, pixelsPerDip, measuringMode, renderingParams, renderingMode)
    end
    def get_gdi_compatible_metrics_1(this : IDWriteFontFace5*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, fontFaceMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_metrics_1.call(this, emSize, pixelsPerDip, transform, fontFaceMetrics)
    end
    def get_gdi_compatible_glyph_metrics(this : IDWriteFontFace5*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, glyphIndices : UInt16*, glyphCount : UInt32, glyphMetrics : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_metrics.call(this, emSize, pixelsPerDip, transform, useGdiNatural, glyphIndices, glyphCount, glyphMetrics, isSideways)
    end
    def get_metrics_2(this : IDWriteFontFace5*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*) : Void
      @lpVtbl.try &.value.get_metrics_2.call(this, fontMetrics)
    end
    def get_gdi_compatible_metrics_2(this : IDWriteFontFace5*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_metrics_2.call(this, emSize, pixelsPerDip, transform, fontMetrics)
    end
    def get_caret_metrics(this : IDWriteFontFace5*, caretMetrics : Win32cr::Graphics::DirectWrite::DWRITE_CARET_METRICS*) : Void
      @lpVtbl.try &.value.get_caret_metrics.call(this, caretMetrics)
    end
    def get_unicode_ranges(this : IDWriteFontFace5*, maxRangeCount : UInt32, unicodeRanges : Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, actualRangeCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_unicode_ranges.call(this, maxRangeCount, unicodeRanges, actualRangeCount)
    end
    def is_monospaced_font(this : IDWriteFontFace5*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_monospaced_font.call(this)
    end
    def get_design_glyph_advances(this : IDWriteFontFace5*, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvances : Int32*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_design_glyph_advances.call(this, glyphCount, glyphIndices, glyphAdvances, isSideways)
    end
    def get_gdi_compatible_glyph_advances(this : IDWriteFontFace5*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, isSideways : Win32cr::Foundation::BOOL, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvances : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_advances.call(this, emSize, pixelsPerDip, transform, useGdiNatural, isSideways, glyphCount, glyphIndices, glyphAdvances)
    end
    def get_kerning_pair_adjustments(this : IDWriteFontFace5*, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvanceAdjustments : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_kerning_pair_adjustments.call(this, glyphCount, glyphIndices, glyphAdvanceAdjustments)
    end
    def has_kerning_pairs(this : IDWriteFontFace5*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_kerning_pairs.call(this)
    end
    def get_recommended_rendering_mode_2_1(this : IDWriteFontFace5*, fontEmSize : Float32, dpiX : Float32, dpiY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, isSideways : Win32cr::Foundation::BOOL, outlineThreshold : Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_2_1.call(this, fontEmSize, dpiX, dpiY, transform, isSideways, outlineThreshold, measuringMode, renderingMode)
    end
    def get_vertical_glyph_variants(this : IDWriteFontFace5*, glyphCount : UInt32, nominalGlyphIndices : UInt16*, verticalGlyphIndices : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_vertical_glyph_variants.call(this, glyphCount, nominalGlyphIndices, verticalGlyphIndices)
    end
    def has_vertical_glyph_variants(this : IDWriteFontFace5*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_vertical_glyph_variants.call(this)
    end
    def is_color_font(this : IDWriteFontFace5*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_color_font.call(this)
    end
    def get_color_palette_count(this : IDWriteFontFace5*) : UInt32
      @lpVtbl.try &.value.get_color_palette_count.call(this)
    end
    def get_palette_entry_count(this : IDWriteFontFace5*) : UInt32
      @lpVtbl.try &.value.get_palette_entry_count.call(this)
    end
    def get_palette_entries(this : IDWriteFontFace5*, colorPaletteIndex : UInt32, firstEntryIndex : UInt32, entryCount : UInt32, paletteEntries : Win32cr::Graphics::DirectWrite::DWRITE_COLOR_F*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_palette_entries.call(this, colorPaletteIndex, firstEntryIndex, entryCount, paletteEntries)
    end
    def get_recommended_rendering_mode_1_2(this : IDWriteFontFace5*, fontEmSize : Float32, dpiX : Float32, dpiY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, isSideways : Win32cr::Foundation::BOOL, outlineThreshold : Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_1_2.call(this, fontEmSize, dpiX, dpiY, transform, isSideways, outlineThreshold, measuringMode, renderingParams, renderingMode, gridFitMode)
    end
    def get_font_face_reference(this : IDWriteFontFace5*, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference.call(this, fontFaceReference)
    end
    def get_panose(this : IDWriteFontFace5*, panose : Win32cr::Graphics::DirectWrite::DWRITE_PANOSE*) : Void
      @lpVtbl.try &.value.get_panose.call(this, panose)
    end
    def get_weight(this : IDWriteFontFace5*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_weight.call(this)
    end
    def get_stretch(this : IDWriteFontFace5*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_stretch.call(this)
    end
    def get_style(this : IDWriteFontFace5*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_style.call(this)
    end
    def get_family_names_1(this : IDWriteFontFace5*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_family_names_1.call(this, names)
    end
    def get_face_names_1(this : IDWriteFontFace5*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_face_names_1.call(this, names)
    end
    def get_informational_strings(this : IDWriteFontFace5*, informationalStringID : Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, informationalStrings : Void**, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_informational_strings.call(this, informationalStringID, informationalStrings, exists)
    end
    def has_character(this : IDWriteFontFace5*, unicodeValue : UInt32) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_character.call(this, unicodeValue)
    end
    def get_recommended_rendering_mode_2_2(this : IDWriteFontFace5*, fontEmSize : Float32, dpiX : Float32, dpiY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, isSideways : Win32cr::Foundation::BOOL, outlineThreshold : Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1*, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_2_2.call(this, fontEmSize, dpiX, dpiY, transform, isSideways, outlineThreshold, measuringMode, renderingParams, renderingMode, gridFitMode)
    end
    def is_character_local(this : IDWriteFontFace5*, unicodeValue : UInt32) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_character_local.call(this, unicodeValue)
    end
    def is_glyph_local(this : IDWriteFontFace5*, glyphId : UInt16) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_glyph_local.call(this, glyphId)
    end
    def are_characters_local(this : IDWriteFontFace5*, characters : UInt16*, characterCount : UInt32, enqueueIfNotLocal : Win32cr::Foundation::BOOL, isLocal : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.are_characters_local.call(this, characters, characterCount, enqueueIfNotLocal, isLocal)
    end
    def are_glyphs_local(this : IDWriteFontFace5*, glyphIndices : UInt16*, glyphCount : UInt32, enqueueIfNotLocal : Win32cr::Foundation::BOOL, isLocal : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.are_glyphs_local.call(this, glyphIndices, glyphCount, enqueueIfNotLocal, isLocal)
    end
    def get_glyph_image_formats_1(this : IDWriteFontFace5*, glyphId : UInt16, pixelsPerEmFirst : UInt32, pixelsPerEmLast : UInt32, glyphImageFormats : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_image_formats_1.call(this, glyphId, pixelsPerEmFirst, pixelsPerEmLast, glyphImageFormats)
    end
    def get_glyph_image_formats_2(this : IDWriteFontFace5*) : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS
      @lpVtbl.try &.value.get_glyph_image_formats_2.call(this)
    end
    def get_glyph_image_data(this : IDWriteFontFace5*, glyphId : UInt16, pixelsPerEm : UInt32, glyphImageFormat : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS, glyphData : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_DATA*, glyphDataContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_image_data.call(this, glyphId, pixelsPerEm, glyphImageFormat, glyphData, glyphDataContext)
    end
    def release_glyph_image_data(this : IDWriteFontFace5*, glyphDataContext : Void*) : Void
      @lpVtbl.try &.value.release_glyph_image_data.call(this, glyphDataContext)
    end
    def get_font_axis_value_count(this : IDWriteFontFace5*) : UInt32
      @lpVtbl.try &.value.get_font_axis_value_count.call(this)
    end
    def get_font_axis_values(this : IDWriteFontFace5*, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_axis_values.call(this, fontAxisValues, fontAxisValueCount)
    end
    def has_variations(this : IDWriteFontFace5*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_variations.call(this)
    end
    def get_font_resource(this : IDWriteFontFace5*, fontResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_resource.call(this, fontResource)
    end
    def equals(this : IDWriteFontFace5*, fontFace : Void*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.equals.call(this, fontFace)
    end

  end

  @[Extern]
  record IDWriteFontResourceVtbl,
    query_interface : Proc(IDWriteFontResource*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontResource*, UInt32),
    release : Proc(IDWriteFontResource*, UInt32),
    get_font_file : Proc(IDWriteFontResource*, Void**, Win32cr::Foundation::HRESULT),
    get_font_face_index : Proc(IDWriteFontResource*, UInt32),
    get_font_axis_count : Proc(IDWriteFontResource*, UInt32),
    get_default_font_axis_values : Proc(IDWriteFontResource*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Win32cr::Foundation::HRESULT),
    get_font_axis_ranges : Proc(IDWriteFontResource*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, UInt32, Win32cr::Foundation::HRESULT),
    get_font_axis_attributes : Proc(IDWriteFontResource*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_ATTRIBUTES),
    get_axis_names : Proc(IDWriteFontResource*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_axis_value_name_count : Proc(IDWriteFontResource*, UInt32, UInt32),
    get_axis_value_names : Proc(IDWriteFontResource*, UInt32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, Void**, Win32cr::Foundation::HRESULT),
    has_variations : Proc(IDWriteFontResource*, Win32cr::Foundation::BOOL),
    create_font_face : Proc(IDWriteFontResource*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_font_face_reference : Proc(IDWriteFontResource*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("1f803a76-6871-48e8-987f-b975551c50f2")]
  record IDWriteFontResource, lpVtbl : IDWriteFontResourceVtbl* do
    GUID = LibC::GUID.new(0x1f803a76_u32, 0x6871_u16, 0x48e8_u16, StaticArray[0x98_u8, 0x7f_u8, 0xb9_u8, 0x75_u8, 0x55_u8, 0x1c_u8, 0x50_u8, 0xf2_u8])
    def query_interface(this : IDWriteFontResource*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontResource*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontResource*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_file(this : IDWriteFontResource*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_file.call(this, fontFile)
    end
    def get_font_face_index(this : IDWriteFontResource*) : UInt32
      @lpVtbl.try &.value.get_font_face_index.call(this)
    end
    def get_font_axis_count(this : IDWriteFontResource*) : UInt32
      @lpVtbl.try &.value.get_font_axis_count.call(this)
    end
    def get_default_font_axis_values(this : IDWriteFontResource*, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_font_axis_values.call(this, fontAxisValues, fontAxisValueCount)
    end
    def get_font_axis_ranges(this : IDWriteFontResource*, fontAxisRanges : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, fontAxisRangeCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_axis_ranges.call(this, fontAxisRanges, fontAxisRangeCount)
    end
    def get_font_axis_attributes(this : IDWriteFontResource*, axisIndex : UInt32) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_ATTRIBUTES
      @lpVtbl.try &.value.get_font_axis_attributes.call(this, axisIndex)
    end
    def get_axis_names(this : IDWriteFontResource*, axisIndex : UInt32, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_axis_names.call(this, axisIndex, names)
    end
    def get_axis_value_name_count(this : IDWriteFontResource*, axisIndex : UInt32) : UInt32
      @lpVtbl.try &.value.get_axis_value_name_count.call(this, axisIndex)
    end
    def get_axis_value_names(this : IDWriteFontResource*, axisIndex : UInt32, axisValueIndex : UInt32, fontAxisRange : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_axis_value_names.call(this, axisIndex, axisValueIndex, fontAxisRange, names)
    end
    def has_variations(this : IDWriteFontResource*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_variations.call(this)
    end
    def create_font_face(this : IDWriteFontResource*, fontSimulations : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face.call(this, fontSimulations, fontAxisValues, fontAxisValueCount, fontFace)
    end
    def create_font_face_reference(this : IDWriteFontResource*, fontSimulations : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_reference.call(this, fontSimulations, fontAxisValues, fontAxisValueCount, fontFaceReference)
    end

  end

  @[Extern]
  record IDWriteFontFaceReference1Vtbl,
    query_interface : Proc(IDWriteFontFaceReference1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFaceReference1*, UInt32),
    release : Proc(IDWriteFontFaceReference1*, UInt32),
    create_font_face_1 : Proc(IDWriteFontFaceReference1*, Void**, Win32cr::Foundation::HRESULT),
    create_font_face_with_simulations : Proc(IDWriteFontFaceReference1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    equals : Proc(IDWriteFontFaceReference1*, Void*, Win32cr::Foundation::BOOL),
    get_font_face_index : Proc(IDWriteFontFaceReference1*, UInt32),
    get_simulations : Proc(IDWriteFontFaceReference1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS),
    get_font_file : Proc(IDWriteFontFaceReference1*, Void**, Win32cr::Foundation::HRESULT),
    get_local_file_size : Proc(IDWriteFontFaceReference1*, UInt64),
    get_file_size : Proc(IDWriteFontFaceReference1*, UInt64),
    get_file_time : Proc(IDWriteFontFaceReference1*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::HRESULT),
    get_locality : Proc(IDWriteFontFaceReference1*, Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY),
    enqueue_font_download_request : Proc(IDWriteFontFaceReference1*, Win32cr::Foundation::HRESULT),
    enqueue_character_download_request : Proc(IDWriteFontFaceReference1*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    enqueue_glyph_download_request : Proc(IDWriteFontFaceReference1*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    enqueue_file_fragment_download_request : Proc(IDWriteFontFaceReference1*, UInt64, UInt64, Win32cr::Foundation::HRESULT),
    create_font_face_2 : Proc(IDWriteFontFaceReference1*, Void**, Win32cr::Foundation::HRESULT),
    get_font_axis_value_count : Proc(IDWriteFontFaceReference1*, UInt32),
    get_font_axis_values : Proc(IDWriteFontFaceReference1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("c081fe77-2fd1-41ac-a5a3-34983c4ba61a")]
  record IDWriteFontFaceReference1, lpVtbl : IDWriteFontFaceReference1Vtbl* do
    GUID = LibC::GUID.new(0xc081fe77_u32, 0x2fd1_u16, 0x41ac_u16, StaticArray[0xa5_u8, 0xa3_u8, 0x34_u8, 0x98_u8, 0x3c_u8, 0x4b_u8, 0xa6_u8, 0x1a_u8])
    def query_interface(this : IDWriteFontFaceReference1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFaceReference1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFaceReference1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_font_face_1(this : IDWriteFontFaceReference1*, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_1.call(this, fontFace)
    end
    def create_font_face_with_simulations(this : IDWriteFontFaceReference1*, fontFaceSimulationFlags : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_with_simulations.call(this, fontFaceSimulationFlags, fontFace)
    end
    def equals(this : IDWriteFontFaceReference1*, fontFaceReference : Void*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.equals.call(this, fontFaceReference)
    end
    def get_font_face_index(this : IDWriteFontFaceReference1*) : UInt32
      @lpVtbl.try &.value.get_font_face_index.call(this)
    end
    def get_simulations(this : IDWriteFontFaceReference1*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS
      @lpVtbl.try &.value.get_simulations.call(this)
    end
    def get_font_file(this : IDWriteFontFaceReference1*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_file.call(this, fontFile)
    end
    def get_local_file_size(this : IDWriteFontFaceReference1*) : UInt64
      @lpVtbl.try &.value.get_local_file_size.call(this)
    end
    def get_file_size(this : IDWriteFontFaceReference1*) : UInt64
      @lpVtbl.try &.value.get_file_size.call(this)
    end
    def get_file_time(this : IDWriteFontFaceReference1*, lastWriteTime : Win32cr::Foundation::FILETIME*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_time.call(this, lastWriteTime)
    end
    def get_locality(this : IDWriteFontFaceReference1*) : Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY
      @lpVtbl.try &.value.get_locality.call(this)
    end
    def enqueue_font_download_request(this : IDWriteFontFaceReference1*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enqueue_font_download_request.call(this)
    end
    def enqueue_character_download_request(this : IDWriteFontFaceReference1*, characters : UInt16*, characterCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enqueue_character_download_request.call(this, characters, characterCount)
    end
    def enqueue_glyph_download_request(this : IDWriteFontFaceReference1*, glyphIndices : UInt16*, glyphCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enqueue_glyph_download_request.call(this, glyphIndices, glyphCount)
    end
    def enqueue_file_fragment_download_request(this : IDWriteFontFaceReference1*, fileOffset : UInt64, fragmentSize : UInt64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enqueue_file_fragment_download_request.call(this, fileOffset, fragmentSize)
    end
    def create_font_face_2(this : IDWriteFontFaceReference1*, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_2.call(this, fontFace)
    end
    def get_font_axis_value_count(this : IDWriteFontFaceReference1*) : UInt32
      @lpVtbl.try &.value.get_font_axis_value_count.call(this)
    end
    def get_font_axis_values(this : IDWriteFontFaceReference1*, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_axis_values.call(this, fontAxisValues, fontAxisValueCount)
    end

  end

  @[Extern]
  record IDWriteFontSetBuilder2Vtbl,
    query_interface : Proc(IDWriteFontSetBuilder2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontSetBuilder2*, UInt32),
    release : Proc(IDWriteFontSetBuilder2*, UInt32),
    add_font_face_reference_1 : Proc(IDWriteFontSetBuilder2*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32, Win32cr::Foundation::HRESULT),
    add_font_face_reference_2 : Proc(IDWriteFontSetBuilder2*, Void*, Win32cr::Foundation::HRESULT),
    add_font_set : Proc(IDWriteFontSetBuilder2*, Void*, Win32cr::Foundation::HRESULT),
    create_font_set : Proc(IDWriteFontSetBuilder2*, Void**, Win32cr::Foundation::HRESULT),
    add_font_file_1 : Proc(IDWriteFontSetBuilder2*, Void*, Win32cr::Foundation::HRESULT),
    add_font : Proc(IDWriteFontSetBuilder2*, Void*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32, Win32cr::Foundation::HRESULT),
    add_font_file_2 : Proc(IDWriteFontSetBuilder2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("ee5ba612-b131-463c-8f4f-3189b9401e45")]
  record IDWriteFontSetBuilder2, lpVtbl : IDWriteFontSetBuilder2Vtbl* do
    GUID = LibC::GUID.new(0xee5ba612_u32, 0xb131_u16, 0x463c_u16, StaticArray[0x8f_u8, 0x4f_u8, 0x31_u8, 0x89_u8, 0xb9_u8, 0x40_u8, 0x1e_u8, 0x45_u8])
    def query_interface(this : IDWriteFontSetBuilder2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontSetBuilder2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontSetBuilder2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_font_face_reference_1(this : IDWriteFontSetBuilder2*, fontFaceReference : Void*, properties : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_font_face_reference_1.call(this, fontFaceReference, properties, propertyCount)
    end
    def add_font_face_reference_2(this : IDWriteFontSetBuilder2*, fontFaceReference : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_font_face_reference_2.call(this, fontFaceReference)
    end
    def add_font_set(this : IDWriteFontSetBuilder2*, fontSet : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_font_set.call(this, fontSet)
    end
    def create_font_set(this : IDWriteFontSetBuilder2*, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_set.call(this, fontSet)
    end
    def add_font_file_1(this : IDWriteFontSetBuilder2*, fontFile : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_font_file_1.call(this, fontFile)
    end
    def add_font(this : IDWriteFontSetBuilder2*, fontFile : Void*, fontFaceIndex : UInt32, fontSimulations : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, fontAxisRanges : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, fontAxisRangeCount : UInt32, properties : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_font.call(this, fontFile, fontFaceIndex, fontSimulations, fontAxisValues, fontAxisValueCount, fontAxisRanges, fontAxisRangeCount, properties, propertyCount)
    end
    def add_font_file_2(this : IDWriteFontSetBuilder2*, filePath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_font_file_2.call(this, filePath)
    end

  end

  @[Extern]
  record IDWriteFontSet1Vtbl,
    query_interface : Proc(IDWriteFontSet1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontSet1*, UInt32),
    release : Proc(IDWriteFontSet1*, UInt32),
    get_font_count : Proc(IDWriteFontSet1*, UInt32),
    get_font_face_reference_1 : Proc(IDWriteFontSet1*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    find_font_face_reference : Proc(IDWriteFontSet1*, Void*, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    find_font_face : Proc(IDWriteFontSet1*, Void*, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_property_values_1 : Proc(IDWriteFontSet1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, Void**, Win32cr::Foundation::HRESULT),
    get_property_values_2 : Proc(IDWriteFontSet1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    get_property_values_3 : Proc(IDWriteFontSet1*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, Win32cr::Foundation::BOOL*, Void**, Win32cr::Foundation::HRESULT),
    get_property_occurrence_count : Proc(IDWriteFontSet1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32*, Win32cr::Foundation::HRESULT),
    get_matching_fonts_1 : Proc(IDWriteFontSet1*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Void**, Win32cr::Foundation::HRESULT),
    get_matching_fonts_2 : Proc(IDWriteFontSet1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_matching_fonts : Proc(IDWriteFontSet1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_first_font_resources : Proc(IDWriteFontSet1*, Void**, Win32cr::Foundation::HRESULT),
    get_filtered_fonts_1 : Proc(IDWriteFontSet1*, UInt32*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_filtered_fonts_2 : Proc(IDWriteFontSet1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, UInt32, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    get_filtered_fonts_3 : Proc(IDWriteFontSet1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    get_filtered_font_indices_1 : Proc(IDWriteFontSet1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, UInt32, Win32cr::Foundation::BOOL, UInt32*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_filtered_font_indices_2 : Proc(IDWriteFontSet1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32, Win32cr::Foundation::BOOL, UInt32*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_font_axis_ranges_1 : Proc(IDWriteFontSet1*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_font_axis_ranges_2 : Proc(IDWriteFontSet1*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_font_face_reference_2 : Proc(IDWriteFontSet1*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_font_resource : Proc(IDWriteFontSet1*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_font_face : Proc(IDWriteFontSet1*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_font_locality : Proc(IDWriteFontSet1*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY)


  @[Extern]
  #@[Com("7e9fda85-6c92-4053-bc47-7ae3530db4d3")]
  record IDWriteFontSet1, lpVtbl : IDWriteFontSet1Vtbl* do
    GUID = LibC::GUID.new(0x7e9fda85_u32, 0x6c92_u16, 0x4053_u16, StaticArray[0xbc_u8, 0x47_u8, 0x7a_u8, 0xe3_u8, 0x53_u8, 0xd_u8, 0xb4_u8, 0xd3_u8])
    def query_interface(this : IDWriteFontSet1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontSet1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontSet1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_count(this : IDWriteFontSet1*) : UInt32
      @lpVtbl.try &.value.get_font_count.call(this)
    end
    def get_font_face_reference_1(this : IDWriteFontSet1*, listIndex : UInt32, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference_1.call(this, listIndex, fontFaceReference)
    end
    def find_font_face_reference(this : IDWriteFontSet1*, fontFaceReference : Void*, listIndex : UInt32*, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_font_face_reference.call(this, fontFaceReference, listIndex, exists)
    end
    def find_font_face(this : IDWriteFontSet1*, fontFace : Void*, listIndex : UInt32*, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_font_face.call(this, fontFace, listIndex, exists)
    end
    def get_property_values_1(this : IDWriteFontSet1*, propertyID : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, values : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_values_1.call(this, propertyID, values)
    end
    def get_property_values_2(this : IDWriteFontSet1*, propertyID : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, preferredLocaleNames : Win32cr::Foundation::PWSTR, values : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_values_2.call(this, propertyID, preferredLocaleNames, values)
    end
    def get_property_values_3(this : IDWriteFontSet1*, listIndex : UInt32, propertyId : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, exists : Win32cr::Foundation::BOOL*, values : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_values_3.call(this, listIndex, propertyId, exists, values)
    end
    def get_property_occurrence_count(this : IDWriteFontSet1*, property : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyOccurrenceCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_occurrence_count.call(this, property, propertyOccurrenceCount)
    end
    def get_matching_fonts_1(this : IDWriteFontSet1*, familyName : Win32cr::Foundation::PWSTR, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, filteredSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts_1.call(this, familyName, fontWeight, fontStretch, fontStyle, filteredSet)
    end
    def get_matching_fonts_2(this : IDWriteFontSet1*, properties : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyCount : UInt32, filteredSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts_2.call(this, properties, propertyCount, filteredSet)
    end
    def get_matching_fonts(this : IDWriteFontSet1*, fontProperty : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, matchingFonts : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts.call(this, fontProperty, fontAxisValues, fontAxisValueCount, matchingFonts)
    end
    def get_first_font_resources(this : IDWriteFontSet1*, filteredFontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_first_font_resources.call(this, filteredFontSet)
    end
    def get_filtered_fonts_1(this : IDWriteFontSet1*, indices : UInt32*, indexCount : UInt32, filteredFontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_filtered_fonts_1.call(this, indices, indexCount, filteredFontSet)
    end
    def get_filtered_fonts_2(this : IDWriteFontSet1*, fontAxisRanges : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, fontAxisRangeCount : UInt32, selectAnyRange : Win32cr::Foundation::BOOL, filteredFontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_filtered_fonts_2.call(this, fontAxisRanges, fontAxisRangeCount, selectAnyRange, filteredFontSet)
    end
    def get_filtered_fonts_3(this : IDWriteFontSet1*, properties : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyCount : UInt32, selectAnyProperty : Win32cr::Foundation::BOOL, filteredFontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_filtered_fonts_3.call(this, properties, propertyCount, selectAnyProperty, filteredFontSet)
    end
    def get_filtered_font_indices_1(this : IDWriteFontSet1*, fontAxisRanges : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, fontAxisRangeCount : UInt32, selectAnyRange : Win32cr::Foundation::BOOL, indices : UInt32*, maxIndexCount : UInt32, actualIndexCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_filtered_font_indices_1.call(this, fontAxisRanges, fontAxisRangeCount, selectAnyRange, indices, maxIndexCount, actualIndexCount)
    end
    def get_filtered_font_indices_2(this : IDWriteFontSet1*, properties : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyCount : UInt32, selectAnyProperty : Win32cr::Foundation::BOOL, indices : UInt32*, maxIndexCount : UInt32, actualIndexCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_filtered_font_indices_2.call(this, properties, propertyCount, selectAnyProperty, indices, maxIndexCount, actualIndexCount)
    end
    def get_font_axis_ranges_1(this : IDWriteFontSet1*, listIndex : UInt32, fontAxisRanges : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, maxFontAxisRangeCount : UInt32, actualFontAxisRangeCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_axis_ranges_1.call(this, listIndex, fontAxisRanges, maxFontAxisRangeCount, actualFontAxisRangeCount)
    end
    def get_font_axis_ranges_2(this : IDWriteFontSet1*, fontAxisRanges : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, maxFontAxisRangeCount : UInt32, actualFontAxisRangeCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_axis_ranges_2.call(this, fontAxisRanges, maxFontAxisRangeCount, actualFontAxisRangeCount)
    end
    def get_font_face_reference_2(this : IDWriteFontSet1*, listIndex : UInt32, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference_2.call(this, listIndex, fontFaceReference)
    end
    def create_font_resource(this : IDWriteFontSet1*, listIndex : UInt32, fontResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_resource.call(this, listIndex, fontResource)
    end
    def create_font_face(this : IDWriteFontSet1*, listIndex : UInt32, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face.call(this, listIndex, fontFace)
    end
    def get_font_locality(this : IDWriteFontSet1*, listIndex : UInt32) : Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY
      @lpVtbl.try &.value.get_font_locality.call(this, listIndex)
    end

  end

  @[Extern]
  record IDWriteFontList2Vtbl,
    query_interface : Proc(IDWriteFontList2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontList2*, UInt32),
    release : Proc(IDWriteFontList2*, UInt32),
    get_font_collection : Proc(IDWriteFontList2*, Void**, Win32cr::Foundation::HRESULT),
    get_font_count : Proc(IDWriteFontList2*, UInt32),
    get_font_1 : Proc(IDWriteFontList2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_font_locality : Proc(IDWriteFontList2*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY),
    get_font : Proc(IDWriteFontList2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_font_face_reference : Proc(IDWriteFontList2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_font_set : Proc(IDWriteFontList2*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("c0763a34-77af-445a-b735-08c37b0a5bf5")]
  record IDWriteFontList2, lpVtbl : IDWriteFontList2Vtbl* do
    GUID = LibC::GUID.new(0xc0763a34_u32, 0x77af_u16, 0x445a_u16, StaticArray[0xb7_u8, 0x35_u8, 0x8_u8, 0xc3_u8, 0x7b_u8, 0xa_u8, 0x5b_u8, 0xf5_u8])
    def query_interface(this : IDWriteFontList2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontList2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontList2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_collection(this : IDWriteFontList2*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection.call(this, fontCollection)
    end
    def get_font_count(this : IDWriteFontList2*) : UInt32
      @lpVtbl.try &.value.get_font_count.call(this)
    end
    def get_font_1(this : IDWriteFontList2*, index : UInt32, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_1.call(this, index, font)
    end
    def get_font_locality(this : IDWriteFontList2*, listIndex : UInt32) : Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY
      @lpVtbl.try &.value.get_font_locality.call(this, listIndex)
    end
    def get_font(this : IDWriteFontList2*, listIndex : UInt32, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font.call(this, listIndex, font)
    end
    def get_font_face_reference(this : IDWriteFontList2*, listIndex : UInt32, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference.call(this, listIndex, fontFaceReference)
    end
    def get_font_set(this : IDWriteFontList2*, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_set.call(this, fontSet)
    end

  end

  @[Extern]
  record IDWriteFontFamily2Vtbl,
    query_interface : Proc(IDWriteFontFamily2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFamily2*, UInt32),
    release : Proc(IDWriteFontFamily2*, UInt32),
    get_font_collection : Proc(IDWriteFontFamily2*, Void**, Win32cr::Foundation::HRESULT),
    get_font_count : Proc(IDWriteFontFamily2*, UInt32),
    get_font_1 : Proc(IDWriteFontFamily2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_family_names : Proc(IDWriteFontFamily2*, Void**, Win32cr::Foundation::HRESULT),
    get_first_matching_font : Proc(IDWriteFontFamily2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Void**, Win32cr::Foundation::HRESULT),
    get_matching_fonts_1 : Proc(IDWriteFontFamily2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Void**, Win32cr::Foundation::HRESULT),
    get_font_locality : Proc(IDWriteFontFamily2*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY),
    get_font_2 : Proc(IDWriteFontFamily2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_font_face_reference : Proc(IDWriteFontFamily2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_matching_fonts_2 : Proc(IDWriteFontFamily2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_font_set : Proc(IDWriteFontFamily2*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("3ed49e77-a398-4261-b9cf-c126c2131ef3")]
  record IDWriteFontFamily2, lpVtbl : IDWriteFontFamily2Vtbl* do
    GUID = LibC::GUID.new(0x3ed49e77_u32, 0xa398_u16, 0x4261_u16, StaticArray[0xb9_u8, 0xcf_u8, 0xc1_u8, 0x26_u8, 0xc2_u8, 0x13_u8, 0x1e_u8, 0xf3_u8])
    def query_interface(this : IDWriteFontFamily2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFamily2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFamily2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_collection(this : IDWriteFontFamily2*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection.call(this, fontCollection)
    end
    def get_font_count(this : IDWriteFontFamily2*) : UInt32
      @lpVtbl.try &.value.get_font_count.call(this)
    end
    def get_font_1(this : IDWriteFontFamily2*, index : UInt32, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_1.call(this, index, font)
    end
    def get_family_names(this : IDWriteFontFamily2*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_family_names.call(this, names)
    end
    def get_first_matching_font(this : IDWriteFontFamily2*, weight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, stretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, style : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, matchingFont : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_first_matching_font.call(this, weight, stretch, style, matchingFont)
    end
    def get_matching_fonts_1(this : IDWriteFontFamily2*, weight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, stretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, style : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, matchingFonts : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts_1.call(this, weight, stretch, style, matchingFonts)
    end
    def get_font_locality(this : IDWriteFontFamily2*, listIndex : UInt32) : Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY
      @lpVtbl.try &.value.get_font_locality.call(this, listIndex)
    end
    def get_font_2(this : IDWriteFontFamily2*, listIndex : UInt32, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_2.call(this, listIndex, font)
    end
    def get_font_face_reference(this : IDWriteFontFamily2*, listIndex : UInt32, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference.call(this, listIndex, fontFaceReference)
    end
    def get_matching_fonts_2(this : IDWriteFontFamily2*, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, matchingFonts : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts_2.call(this, fontAxisValues, fontAxisValueCount, matchingFonts)
    end
    def get_font_set(this : IDWriteFontFamily2*, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_set.call(this, fontSet)
    end

  end

  @[Extern]
  record IDWriteFontCollection2Vtbl,
    query_interface : Proc(IDWriteFontCollection2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontCollection2*, UInt32),
    release : Proc(IDWriteFontCollection2*, UInt32),
    get_font_family_count : Proc(IDWriteFontCollection2*, UInt32),
    get_font_family_1 : Proc(IDWriteFontCollection2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    find_family_name : Proc(IDWriteFontCollection2*, Win32cr::Foundation::PWSTR, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_font_from_font_face : Proc(IDWriteFontCollection2*, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_font_set_1 : Proc(IDWriteFontCollection2*, Void**, Win32cr::Foundation::HRESULT),
    get_font_family_2 : Proc(IDWriteFontCollection2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_font_family : Proc(IDWriteFontCollection2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_matching_fonts : Proc(IDWriteFontCollection2*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_font_family_model : Proc(IDWriteFontCollection2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL),
    get_font_set_2 : Proc(IDWriteFontCollection2*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("514039c6-4617-4064-bf8b-92ea83e506e0")]
  record IDWriteFontCollection2, lpVtbl : IDWriteFontCollection2Vtbl* do
    GUID = LibC::GUID.new(0x514039c6_u32, 0x4617_u16, 0x4064_u16, StaticArray[0xbf_u8, 0x8b_u8, 0x92_u8, 0xea_u8, 0x83_u8, 0xe5_u8, 0x6_u8, 0xe0_u8])
    def query_interface(this : IDWriteFontCollection2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontCollection2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontCollection2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_family_count(this : IDWriteFontCollection2*) : UInt32
      @lpVtbl.try &.value.get_font_family_count.call(this)
    end
    def get_font_family_1(this : IDWriteFontCollection2*, index : UInt32, fontFamily : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_1.call(this, index, fontFamily)
    end
    def find_family_name(this : IDWriteFontCollection2*, familyName : Win32cr::Foundation::PWSTR, index : UInt32*, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_family_name.call(this, familyName, index, exists)
    end
    def get_font_from_font_face(this : IDWriteFontCollection2*, fontFace : Void*, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_from_font_face.call(this, fontFace, font)
    end
    def get_font_set_1(this : IDWriteFontCollection2*, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_set_1.call(this, fontSet)
    end
    def get_font_family_2(this : IDWriteFontCollection2*, index : UInt32, fontFamily : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_2.call(this, index, fontFamily)
    end
    def get_font_family(this : IDWriteFontCollection2*, index : UInt32, fontFamily : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family.call(this, index, fontFamily)
    end
    def get_matching_fonts(this : IDWriteFontCollection2*, familyName : Win32cr::Foundation::PWSTR, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, fontList : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts.call(this, familyName, fontAxisValues, fontAxisValueCount, fontList)
    end
    def get_font_family_model(this : IDWriteFontCollection2*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL
      @lpVtbl.try &.value.get_font_family_model.call(this)
    end
    def get_font_set_2(this : IDWriteFontCollection2*, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_set_2.call(this, fontSet)
    end

  end

  @[Extern]
  record IDWriteTextLayout4Vtbl,
    query_interface : Proc(IDWriteTextLayout4*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextLayout4*, UInt32),
    release : Proc(IDWriteTextLayout4*, UInt32),
    set_text_alignment : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_paragraph_alignment : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_word_wrapping : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING, Win32cr::Foundation::HRESULT),
    set_reading_direction : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION, Win32cr::Foundation::HRESULT),
    set_flow_direction : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION, Win32cr::Foundation::HRESULT),
    set_incremental_tab_stop : Proc(IDWriteTextLayout4*, Float32, Win32cr::Foundation::HRESULT),
    set_trimming : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void*, Win32cr::Foundation::HRESULT),
    set_line_spacing_1 : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, Float32, Float32, Win32cr::Foundation::HRESULT),
    get_text_alignment : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT),
    get_paragraph_alignment : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT),
    get_word_wrapping : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING),
    get_reading_direction : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION),
    get_flow_direction : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION),
    get_incremental_tab_stop : Proc(IDWriteTextLayout4*, Float32),
    get_trimming : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void**, Win32cr::Foundation::HRESULT),
    get_line_spacing_1 : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, Float32*, Float32*, Win32cr::Foundation::HRESULT),
    get_font_collection_1 : Proc(IDWriteTextLayout4*, Void**, Win32cr::Foundation::HRESULT),
    get_font_family_name_length_1 : Proc(IDWriteTextLayout4*, UInt32),
    get_font_family_name_1 : Proc(IDWriteTextLayout4*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_font_weight_1 : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_font_style_1 : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    get_font_stretch_1 : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_font_size_1 : Proc(IDWriteTextLayout4*, Float32),
    get_locale_name_length_1 : Proc(IDWriteTextLayout4*, UInt32),
    get_locale_name_1 : Proc(IDWriteTextLayout4*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    set_max_width : Proc(IDWriteTextLayout4*, Float32, Win32cr::Foundation::HRESULT),
    set_max_height : Proc(IDWriteTextLayout4*, Float32, Win32cr::Foundation::HRESULT),
    set_font_collection : Proc(IDWriteTextLayout4*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_family_name : Proc(IDWriteTextLayout4*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_weight : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_style : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_stretch : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_font_size : Proc(IDWriteTextLayout4*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_underline : Proc(IDWriteTextLayout4*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_strikethrough : Proc(IDWriteTextLayout4*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_drawing_effect : Proc(IDWriteTextLayout4*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_inline_object : Proc(IDWriteTextLayout4*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_typography : Proc(IDWriteTextLayout4*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    set_locale_name : Proc(IDWriteTextLayout4*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    get_max_width : Proc(IDWriteTextLayout4*, Float32),
    get_max_height : Proc(IDWriteTextLayout4*, Float32),
    get_font_collection_2 : Proc(IDWriteTextLayout4*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_family_name_length_2 : Proc(IDWriteTextLayout4*, UInt32, UInt32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_family_name_2 : Proc(IDWriteTextLayout4*, UInt32, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_weight_2 : Proc(IDWriteTextLayout4*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_style_2 : Proc(IDWriteTextLayout4*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_stretch_2 : Proc(IDWriteTextLayout4*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_font_size_2 : Proc(IDWriteTextLayout4*, UInt32, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_underline : Proc(IDWriteTextLayout4*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_strikethrough : Proc(IDWriteTextLayout4*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_drawing_effect : Proc(IDWriteTextLayout4*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_inline_object : Proc(IDWriteTextLayout4*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_typography : Proc(IDWriteTextLayout4*, UInt32, Void**, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_locale_name_length_2 : Proc(IDWriteTextLayout4*, UInt32, UInt32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_locale_name_2 : Proc(IDWriteTextLayout4*, UInt32, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    draw : Proc(IDWriteTextLayout4*, Void*, Void*, Float32, Float32, Win32cr::Foundation::HRESULT),
    get_line_metrics_1 : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_METRICS*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_metrics_1 : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS*, Win32cr::Foundation::HRESULT),
    get_overhang_metrics : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_OVERHANG_METRICS*, Win32cr::Foundation::HRESULT),
    get_cluster_metrics : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_CLUSTER_METRICS*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    determine_min_width : Proc(IDWriteTextLayout4*, Float32*, Win32cr::Foundation::HRESULT),
    hit_test_point : Proc(IDWriteTextLayout4*, Float32, Float32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, Win32cr::Foundation::HRESULT),
    hit_test_text_position : Proc(IDWriteTextLayout4*, UInt32, Win32cr::Foundation::BOOL, Float32*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, Win32cr::Foundation::HRESULT),
    hit_test_text_range : Proc(IDWriteTextLayout4*, UInt32, UInt32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    set_pair_kerning : Proc(IDWriteTextLayout4*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    get_pair_kerning : Proc(IDWriteTextLayout4*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    set_character_spacing : Proc(IDWriteTextLayout4*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    get_character_spacing : Proc(IDWriteTextLayout4*, UInt32, Float32*, Float32*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_metrics_2 : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS1*, Win32cr::Foundation::HRESULT),
    set_vertical_glyph_orientation : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION, Win32cr::Foundation::HRESULT),
    get_vertical_glyph_orientation : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION),
    set_last_line_wrapping : Proc(IDWriteTextLayout4*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_last_line_wrapping : Proc(IDWriteTextLayout4*, Win32cr::Foundation::BOOL),
    set_optical_alignment : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT, Win32cr::Foundation::HRESULT),
    get_optical_alignment : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT),
    set_font_fallback : Proc(IDWriteTextLayout4*, Void*, Win32cr::Foundation::HRESULT),
    get_font_fallback : Proc(IDWriteTextLayout4*, Void**, Win32cr::Foundation::HRESULT),
    invalidate_layout : Proc(IDWriteTextLayout4*, Win32cr::Foundation::HRESULT),
    set_line_spacing : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*, Win32cr::Foundation::HRESULT),
    get_line_spacing : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*, Win32cr::Foundation::HRESULT),
    get_line_metrics_2 : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_METRICS1*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    set_font_axis_values : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE, Win32cr::Foundation::HRESULT),
    get_font_axis_value_count : Proc(IDWriteTextLayout4*, UInt32, UInt32),
    get_font_axis_values : Proc(IDWriteTextLayout4*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*, Win32cr::Foundation::HRESULT),
    get_automatic_font_axes : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_AUTOMATIC_FONT_AXES),
    set_automatic_font_axes : Proc(IDWriteTextLayout4*, Win32cr::Graphics::DirectWrite::DWRITE_AUTOMATIC_FONT_AXES, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("05a9bf42-223f-4441-b5fb-8263685f55e9")]
  record IDWriteTextLayout4, lpVtbl : IDWriteTextLayout4Vtbl* do
    GUID = LibC::GUID.new(0x5a9bf42_u32, 0x223f_u16, 0x4441_u16, StaticArray[0xb5_u8, 0xfb_u8, 0x82_u8, 0x63_u8, 0x68_u8, 0x5f_u8, 0x55_u8, 0xe9_u8])
    def query_interface(this : IDWriteTextLayout4*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextLayout4*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextLayout4*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_text_alignment(this : IDWriteTextLayout4*, textAlignment : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_text_alignment.call(this, textAlignment)
    end
    def set_paragraph_alignment(this : IDWriteTextLayout4*, paragraphAlignment : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_paragraph_alignment.call(this, paragraphAlignment)
    end
    def set_word_wrapping(this : IDWriteTextLayout4*, wordWrapping : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_word_wrapping.call(this, wordWrapping)
    end
    def set_reading_direction(this : IDWriteTextLayout4*, readingDirection : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_reading_direction.call(this, readingDirection)
    end
    def set_flow_direction(this : IDWriteTextLayout4*, flowDirection : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flow_direction.call(this, flowDirection)
    end
    def set_incremental_tab_stop(this : IDWriteTextLayout4*, incrementalTabStop : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_incremental_tab_stop.call(this, incrementalTabStop)
    end
    def set_trimming(this : IDWriteTextLayout4*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def set_line_spacing_1(this : IDWriteTextLayout4*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, lineSpacing : Float32, baseline : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_text_alignment(this : IDWriteTextLayout4*) : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT
      @lpVtbl.try &.value.get_text_alignment.call(this)
    end
    def get_paragraph_alignment(this : IDWriteTextLayout4*) : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT
      @lpVtbl.try &.value.get_paragraph_alignment.call(this)
    end
    def get_word_wrapping(this : IDWriteTextLayout4*) : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING
      @lpVtbl.try &.value.get_word_wrapping.call(this)
    end
    def get_reading_direction(this : IDWriteTextLayout4*) : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION
      @lpVtbl.try &.value.get_reading_direction.call(this)
    end
    def get_flow_direction(this : IDWriteTextLayout4*) : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION
      @lpVtbl.try &.value.get_flow_direction.call(this)
    end
    def get_incremental_tab_stop(this : IDWriteTextLayout4*) : Float32
      @lpVtbl.try &.value.get_incremental_tab_stop.call(this)
    end
    def get_trimming(this : IDWriteTextLayout4*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def get_line_spacing_1(this : IDWriteTextLayout4*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, lineSpacing : Float32*, baseline : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_font_collection_1(this : IDWriteTextLayout4*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection_1.call(this, fontCollection)
    end
    def get_font_family_name_length_1(this : IDWriteTextLayout4*) : UInt32
      @lpVtbl.try &.value.get_font_family_name_length_1.call(this)
    end
    def get_font_family_name_1(this : IDWriteTextLayout4*, fontFamilyName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_1.call(this, fontFamilyName, nameSize)
    end
    def get_font_weight_1(this : IDWriteTextLayout4*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_font_weight_1.call(this)
    end
    def get_font_style_1(this : IDWriteTextLayout4*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_font_style_1.call(this)
    end
    def get_font_stretch_1(this : IDWriteTextLayout4*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_font_stretch_1.call(this)
    end
    def get_font_size_1(this : IDWriteTextLayout4*) : Float32
      @lpVtbl.try &.value.get_font_size_1.call(this)
    end
    def get_locale_name_length_1(this : IDWriteTextLayout4*) : UInt32
      @lpVtbl.try &.value.get_locale_name_length_1.call(this)
    end
    def get_locale_name_1(this : IDWriteTextLayout4*, localeName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_1.call(this, localeName, nameSize)
    end
    def set_max_width(this : IDWriteTextLayout4*, maxWidth : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_max_width.call(this, maxWidth)
    end
    def set_max_height(this : IDWriteTextLayout4*, maxHeight : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_max_height.call(this, maxHeight)
    end
    def set_font_collection(this : IDWriteTextLayout4*, fontCollection : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_collection.call(this, fontCollection, textRange)
    end
    def set_font_family_name(this : IDWriteTextLayout4*, fontFamilyName : Win32cr::Foundation::PWSTR, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_family_name.call(this, fontFamilyName, textRange)
    end
    def set_font_weight(this : IDWriteTextLayout4*, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_weight.call(this, fontWeight, textRange)
    end
    def set_font_style(this : IDWriteTextLayout4*, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_style.call(this, fontStyle, textRange)
    end
    def set_font_stretch(this : IDWriteTextLayout4*, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_stretch.call(this, fontStretch, textRange)
    end
    def set_font_size(this : IDWriteTextLayout4*, fontSize : Float32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_size.call(this, fontSize, textRange)
    end
    def set_underline(this : IDWriteTextLayout4*, hasUnderline : Win32cr::Foundation::BOOL, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_underline.call(this, hasUnderline, textRange)
    end
    def set_strikethrough(this : IDWriteTextLayout4*, hasStrikethrough : Win32cr::Foundation::BOOL, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_strikethrough.call(this, hasStrikethrough, textRange)
    end
    def set_drawing_effect(this : IDWriteTextLayout4*, drawingEffect : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_drawing_effect.call(this, drawingEffect, textRange)
    end
    def set_inline_object(this : IDWriteTextLayout4*, inlineObject : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_inline_object.call(this, inlineObject, textRange)
    end
    def set_typography(this : IDWriteTextLayout4*, typography : Void*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_typography.call(this, typography, textRange)
    end
    def set_locale_name(this : IDWriteTextLayout4*, localeName : Win32cr::Foundation::PWSTR, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_locale_name.call(this, localeName, textRange)
    end
    def get_max_width(this : IDWriteTextLayout4*) : Float32
      @lpVtbl.try &.value.get_max_width.call(this)
    end
    def get_max_height(this : IDWriteTextLayout4*) : Float32
      @lpVtbl.try &.value.get_max_height.call(this)
    end
    def get_font_collection_2(this : IDWriteTextLayout4*, currentPosition : UInt32, fontCollection : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection_2.call(this, currentPosition, fontCollection, textRange)
    end
    def get_font_family_name_length_2(this : IDWriteTextLayout4*, currentPosition : UInt32, nameLength : UInt32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_length_2.call(this, currentPosition, nameLength, textRange)
    end
    def get_font_family_name_2(this : IDWriteTextLayout4*, currentPosition : UInt32, fontFamilyName : UInt16*, nameSize : UInt32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_2.call(this, currentPosition, fontFamilyName, nameSize, textRange)
    end
    def get_font_weight_2(this : IDWriteTextLayout4*, currentPosition : UInt32, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_weight_2.call(this, currentPosition, fontWeight, textRange)
    end
    def get_font_style_2(this : IDWriteTextLayout4*, currentPosition : UInt32, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_style_2.call(this, currentPosition, fontStyle, textRange)
    end
    def get_font_stretch_2(this : IDWriteTextLayout4*, currentPosition : UInt32, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_stretch_2.call(this, currentPosition, fontStretch, textRange)
    end
    def get_font_size_2(this : IDWriteTextLayout4*, currentPosition : UInt32, fontSize : Float32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_size_2.call(this, currentPosition, fontSize, textRange)
    end
    def get_underline(this : IDWriteTextLayout4*, currentPosition : UInt32, hasUnderline : Win32cr::Foundation::BOOL*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_underline.call(this, currentPosition, hasUnderline, textRange)
    end
    def get_strikethrough(this : IDWriteTextLayout4*, currentPosition : UInt32, hasStrikethrough : Win32cr::Foundation::BOOL*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_strikethrough.call(this, currentPosition, hasStrikethrough, textRange)
    end
    def get_drawing_effect(this : IDWriteTextLayout4*, currentPosition : UInt32, drawingEffect : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_drawing_effect.call(this, currentPosition, drawingEffect, textRange)
    end
    def get_inline_object(this : IDWriteTextLayout4*, currentPosition : UInt32, inlineObject : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_inline_object.call(this, currentPosition, inlineObject, textRange)
    end
    def get_typography(this : IDWriteTextLayout4*, currentPosition : UInt32, typography : Void**, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_typography.call(this, currentPosition, typography, textRange)
    end
    def get_locale_name_length_2(this : IDWriteTextLayout4*, currentPosition : UInt32, nameLength : UInt32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_length_2.call(this, currentPosition, nameLength, textRange)
    end
    def get_locale_name_2(this : IDWriteTextLayout4*, currentPosition : UInt32, localeName : UInt16*, nameSize : UInt32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_2.call(this, currentPosition, localeName, nameSize, textRange)
    end
    def draw(this : IDWriteTextLayout4*, clientDrawingContext : Void*, renderer : Void*, originX : Float32, originY : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw.call(this, clientDrawingContext, renderer, originX, originY)
    end
    def get_line_metrics_1(this : IDWriteTextLayout4*, lineMetrics : Win32cr::Graphics::DirectWrite::DWRITE_LINE_METRICS*, maxLineCount : UInt32, actualLineCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_metrics_1.call(this, lineMetrics, maxLineCount, actualLineCount)
    end
    def get_metrics_1(this : IDWriteTextLayout4*, textMetrics : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_metrics_1.call(this, textMetrics)
    end
    def get_overhang_metrics(this : IDWriteTextLayout4*, overhangs : Win32cr::Graphics::DirectWrite::DWRITE_OVERHANG_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_overhang_metrics.call(this, overhangs)
    end
    def get_cluster_metrics(this : IDWriteTextLayout4*, clusterMetrics : Win32cr::Graphics::DirectWrite::DWRITE_CLUSTER_METRICS*, maxClusterCount : UInt32, actualClusterCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cluster_metrics.call(this, clusterMetrics, maxClusterCount, actualClusterCount)
    end
    def determine_min_width(this : IDWriteTextLayout4*, minWidth : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.determine_min_width.call(this, minWidth)
    end
    def hit_test_point(this : IDWriteTextLayout4*, pointX : Float32, pointY : Float32, isTrailingHit : Win32cr::Foundation::BOOL*, isInside : Win32cr::Foundation::BOOL*, hitTestMetrics : Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test_point.call(this, pointX, pointY, isTrailingHit, isInside, hitTestMetrics)
    end
    def hit_test_text_position(this : IDWriteTextLayout4*, textPosition : UInt32, isTrailingHit : Win32cr::Foundation::BOOL, pointX : Float32*, pointY : Float32*, hitTestMetrics : Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test_text_position.call(this, textPosition, isTrailingHit, pointX, pointY, hitTestMetrics)
    end
    def hit_test_text_range(this : IDWriteTextLayout4*, textPosition : UInt32, textLength : UInt32, originX : Float32, originY : Float32, hitTestMetrics : Win32cr::Graphics::DirectWrite::DWRITE_HIT_TEST_METRICS*, maxHitTestMetricsCount : UInt32, actualHitTestMetricsCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test_text_range.call(this, textPosition, textLength, originX, originY, hitTestMetrics, maxHitTestMetricsCount, actualHitTestMetricsCount)
    end
    def set_pair_kerning(this : IDWriteTextLayout4*, isPairKerningEnabled : Win32cr::Foundation::BOOL, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_pair_kerning.call(this, isPairKerningEnabled, textRange)
    end
    def get_pair_kerning(this : IDWriteTextLayout4*, currentPosition : UInt32, isPairKerningEnabled : Win32cr::Foundation::BOOL*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_pair_kerning.call(this, currentPosition, isPairKerningEnabled, textRange)
    end
    def set_character_spacing(this : IDWriteTextLayout4*, leadingSpacing : Float32, trailingSpacing : Float32, minimumAdvanceWidth : Float32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_character_spacing.call(this, leadingSpacing, trailingSpacing, minimumAdvanceWidth, textRange)
    end
    def get_character_spacing(this : IDWriteTextLayout4*, currentPosition : UInt32, leadingSpacing : Float32*, trailingSpacing : Float32*, minimumAdvanceWidth : Float32*, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_character_spacing.call(this, currentPosition, leadingSpacing, trailingSpacing, minimumAdvanceWidth, textRange)
    end
    def get_metrics_2(this : IDWriteTextLayout4*, textMetrics : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_METRICS1*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_metrics_2.call(this, textMetrics)
    end
    def set_vertical_glyph_orientation(this : IDWriteTextLayout4*, glyphOrientation : Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_vertical_glyph_orientation.call(this, glyphOrientation)
    end
    def get_vertical_glyph_orientation(this : IDWriteTextLayout4*) : Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION
      @lpVtbl.try &.value.get_vertical_glyph_orientation.call(this)
    end
    def set_last_line_wrapping(this : IDWriteTextLayout4*, isLastLineWrappingEnabled : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_last_line_wrapping.call(this, isLastLineWrappingEnabled)
    end
    def get_last_line_wrapping(this : IDWriteTextLayout4*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.get_last_line_wrapping.call(this)
    end
    def set_optical_alignment(this : IDWriteTextLayout4*, opticalAlignment : Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_optical_alignment.call(this, opticalAlignment)
    end
    def get_optical_alignment(this : IDWriteTextLayout4*) : Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT
      @lpVtbl.try &.value.get_optical_alignment.call(this)
    end
    def set_font_fallback(this : IDWriteTextLayout4*, fontFallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_fallback.call(this, fontFallback)
    end
    def get_font_fallback(this : IDWriteTextLayout4*, fontFallback : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_fallback.call(this, fontFallback)
    end
    def invalidate_layout(this : IDWriteTextLayout4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invalidate_layout.call(this)
    end
    def set_line_spacing(this : IDWriteTextLayout4*, lineSpacingOptions : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line_spacing.call(this, lineSpacingOptions)
    end
    def get_line_spacing(this : IDWriteTextLayout4*, lineSpacingOptions : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_spacing.call(this, lineSpacingOptions)
    end
    def get_line_metrics_2(this : IDWriteTextLayout4*, lineMetrics : Win32cr::Graphics::DirectWrite::DWRITE_LINE_METRICS1*, maxLineCount : UInt32, actualLineCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_metrics_2.call(this, lineMetrics, maxLineCount, actualLineCount)
    end
    def set_font_axis_values(this : IDWriteTextLayout4*, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_axis_values.call(this, fontAxisValues, fontAxisValueCount, textRange)
    end
    def get_font_axis_value_count(this : IDWriteTextLayout4*, currentPosition : UInt32) : UInt32
      @lpVtbl.try &.value.get_font_axis_value_count.call(this, currentPosition)
    end
    def get_font_axis_values(this : IDWriteTextLayout4*, currentPosition : UInt32, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, textRange : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_axis_values.call(this, currentPosition, fontAxisValues, fontAxisValueCount, textRange)
    end
    def get_automatic_font_axes(this : IDWriteTextLayout4*) : Win32cr::Graphics::DirectWrite::DWRITE_AUTOMATIC_FONT_AXES
      @lpVtbl.try &.value.get_automatic_font_axes.call(this)
    end
    def set_automatic_font_axes(this : IDWriteTextLayout4*, automaticFontAxes : Win32cr::Graphics::DirectWrite::DWRITE_AUTOMATIC_FONT_AXES) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_automatic_font_axes.call(this, automaticFontAxes)
    end

  end

  @[Extern]
  record IDWriteTextFormat3Vtbl,
    query_interface : Proc(IDWriteTextFormat3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteTextFormat3*, UInt32),
    release : Proc(IDWriteTextFormat3*, UInt32),
    set_text_alignment : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_paragraph_alignment : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT, Win32cr::Foundation::HRESULT),
    set_word_wrapping : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING, Win32cr::Foundation::HRESULT),
    set_reading_direction : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION, Win32cr::Foundation::HRESULT),
    set_flow_direction : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION, Win32cr::Foundation::HRESULT),
    set_incremental_tab_stop : Proc(IDWriteTextFormat3*, Float32, Win32cr::Foundation::HRESULT),
    set_trimming : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void*, Win32cr::Foundation::HRESULT),
    set_line_spacing_1 : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, Float32, Float32, Win32cr::Foundation::HRESULT),
    get_text_alignment : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT),
    get_paragraph_alignment : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT),
    get_word_wrapping : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING),
    get_reading_direction : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION),
    get_flow_direction : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION),
    get_incremental_tab_stop : Proc(IDWriteTextFormat3*, Float32),
    get_trimming : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, Void**, Win32cr::Foundation::HRESULT),
    get_line_spacing_1 : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, Float32*, Float32*, Win32cr::Foundation::HRESULT),
    get_font_collection_1 : Proc(IDWriteTextFormat3*, Void**, Win32cr::Foundation::HRESULT),
    get_font_family_name_length_1 : Proc(IDWriteTextFormat3*, UInt32),
    get_font_family_name_1 : Proc(IDWriteTextFormat3*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_font_weight_1 : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_font_style_1 : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    get_font_stretch_1 : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_font_size_1 : Proc(IDWriteTextFormat3*, Float32),
    get_locale_name_length_1 : Proc(IDWriteTextFormat3*, UInt32),
    get_locale_name_1 : Proc(IDWriteTextFormat3*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    set_vertical_glyph_orientation : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION, Win32cr::Foundation::HRESULT),
    get_vertical_glyph_orientation : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION),
    set_last_line_wrapping : Proc(IDWriteTextFormat3*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_last_line_wrapping : Proc(IDWriteTextFormat3*, Win32cr::Foundation::BOOL),
    set_optical_alignment : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT, Win32cr::Foundation::HRESULT),
    get_optical_alignment : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT),
    set_font_fallback : Proc(IDWriteTextFormat3*, Void*, Win32cr::Foundation::HRESULT),
    get_font_fallback : Proc(IDWriteTextFormat3*, Void**, Win32cr::Foundation::HRESULT),
    set_line_spacing_2 : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*, Win32cr::Foundation::HRESULT),
    get_line_spacing_2 : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*, Win32cr::Foundation::HRESULT),
    set_font_axis_values : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Win32cr::Foundation::HRESULT),
    get_font_axis_value_count : Proc(IDWriteTextFormat3*, UInt32),
    get_font_axis_values : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Win32cr::Foundation::HRESULT),
    get_automatic_font_axes : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_AUTOMATIC_FONT_AXES),
    set_automatic_font_axes : Proc(IDWriteTextFormat3*, Win32cr::Graphics::DirectWrite::DWRITE_AUTOMATIC_FONT_AXES, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("6d3b5641-e550-430d-a85b-b7bf48a93427")]
  record IDWriteTextFormat3, lpVtbl : IDWriteTextFormat3Vtbl* do
    GUID = LibC::GUID.new(0x6d3b5641_u32, 0xe550_u16, 0x430d_u16, StaticArray[0xa8_u8, 0x5b_u8, 0xb7_u8, 0xbf_u8, 0x48_u8, 0xa9_u8, 0x34_u8, 0x27_u8])
    def query_interface(this : IDWriteTextFormat3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteTextFormat3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteTextFormat3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_text_alignment(this : IDWriteTextFormat3*, textAlignment : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_text_alignment.call(this, textAlignment)
    end
    def set_paragraph_alignment(this : IDWriteTextFormat3*, paragraphAlignment : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_paragraph_alignment.call(this, paragraphAlignment)
    end
    def set_word_wrapping(this : IDWriteTextFormat3*, wordWrapping : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_word_wrapping.call(this, wordWrapping)
    end
    def set_reading_direction(this : IDWriteTextFormat3*, readingDirection : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_reading_direction.call(this, readingDirection)
    end
    def set_flow_direction(this : IDWriteTextFormat3*, flowDirection : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flow_direction.call(this, flowDirection)
    end
    def set_incremental_tab_stop(this : IDWriteTextFormat3*, incrementalTabStop : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_incremental_tab_stop.call(this, incrementalTabStop)
    end
    def set_trimming(this : IDWriteTextFormat3*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def set_line_spacing_1(this : IDWriteTextFormat3*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD, lineSpacing : Float32, baseline : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_text_alignment(this : IDWriteTextFormat3*) : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ALIGNMENT
      @lpVtbl.try &.value.get_text_alignment.call(this)
    end
    def get_paragraph_alignment(this : IDWriteTextFormat3*) : Win32cr::Graphics::DirectWrite::DWRITE_PARAGRAPH_ALIGNMENT
      @lpVtbl.try &.value.get_paragraph_alignment.call(this)
    end
    def get_word_wrapping(this : IDWriteTextFormat3*) : Win32cr::Graphics::DirectWrite::DWRITE_WORD_WRAPPING
      @lpVtbl.try &.value.get_word_wrapping.call(this)
    end
    def get_reading_direction(this : IDWriteTextFormat3*) : Win32cr::Graphics::DirectWrite::DWRITE_READING_DIRECTION
      @lpVtbl.try &.value.get_reading_direction.call(this)
    end
    def get_flow_direction(this : IDWriteTextFormat3*) : Win32cr::Graphics::DirectWrite::DWRITE_FLOW_DIRECTION
      @lpVtbl.try &.value.get_flow_direction.call(this)
    end
    def get_incremental_tab_stop(this : IDWriteTextFormat3*) : Float32
      @lpVtbl.try &.value.get_incremental_tab_stop.call(this)
    end
    def get_trimming(this : IDWriteTextFormat3*, trimmingOptions : Win32cr::Graphics::DirectWrite::DWRITE_TRIMMING*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_trimming.call(this, trimmingOptions, trimmingSign)
    end
    def get_line_spacing_1(this : IDWriteTextFormat3*, lineSpacingMethod : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING_METHOD*, lineSpacing : Float32*, baseline : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_spacing_1.call(this, lineSpacingMethod, lineSpacing, baseline)
    end
    def get_font_collection_1(this : IDWriteTextFormat3*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_collection_1.call(this, fontCollection)
    end
    def get_font_family_name_length_1(this : IDWriteTextFormat3*) : UInt32
      @lpVtbl.try &.value.get_font_family_name_length_1.call(this)
    end
    def get_font_family_name_1(this : IDWriteTextFormat3*, fontFamilyName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_name_1.call(this, fontFamilyName, nameSize)
    end
    def get_font_weight_1(this : IDWriteTextFormat3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_font_weight_1.call(this)
    end
    def get_font_style_1(this : IDWriteTextFormat3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_font_style_1.call(this)
    end
    def get_font_stretch_1(this : IDWriteTextFormat3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_font_stretch_1.call(this)
    end
    def get_font_size_1(this : IDWriteTextFormat3*) : Float32
      @lpVtbl.try &.value.get_font_size_1.call(this)
    end
    def get_locale_name_length_1(this : IDWriteTextFormat3*) : UInt32
      @lpVtbl.try &.value.get_locale_name_length_1.call(this)
    end
    def get_locale_name_1(this : IDWriteTextFormat3*, localeName : UInt16*, nameSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_locale_name_1.call(this, localeName, nameSize)
    end
    def set_vertical_glyph_orientation(this : IDWriteTextFormat3*, glyphOrientation : Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_vertical_glyph_orientation.call(this, glyphOrientation)
    end
    def get_vertical_glyph_orientation(this : IDWriteTextFormat3*) : Win32cr::Graphics::DirectWrite::DWRITE_VERTICAL_GLYPH_ORIENTATION
      @lpVtbl.try &.value.get_vertical_glyph_orientation.call(this)
    end
    def set_last_line_wrapping(this : IDWriteTextFormat3*, isLastLineWrappingEnabled : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_last_line_wrapping.call(this, isLastLineWrappingEnabled)
    end
    def get_last_line_wrapping(this : IDWriteTextFormat3*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.get_last_line_wrapping.call(this)
    end
    def set_optical_alignment(this : IDWriteTextFormat3*, opticalAlignment : Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_optical_alignment.call(this, opticalAlignment)
    end
    def get_optical_alignment(this : IDWriteTextFormat3*) : Win32cr::Graphics::DirectWrite::DWRITE_OPTICAL_ALIGNMENT
      @lpVtbl.try &.value.get_optical_alignment.call(this)
    end
    def set_font_fallback(this : IDWriteTextFormat3*, fontFallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_fallback.call(this, fontFallback)
    end
    def get_font_fallback(this : IDWriteTextFormat3*, fontFallback : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_fallback.call(this, fontFallback)
    end
    def set_line_spacing_2(this : IDWriteTextFormat3*, lineSpacingOptions : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line_spacing_2.call(this, lineSpacingOptions)
    end
    def get_line_spacing_2(this : IDWriteTextFormat3*, lineSpacingOptions : Win32cr::Graphics::DirectWrite::DWRITE_LINE_SPACING*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_line_spacing_2.call(this, lineSpacingOptions)
    end
    def set_font_axis_values(this : IDWriteTextFormat3*, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font_axis_values.call(this, fontAxisValues, fontAxisValueCount)
    end
    def get_font_axis_value_count(this : IDWriteTextFormat3*) : UInt32
      @lpVtbl.try &.value.get_font_axis_value_count.call(this)
    end
    def get_font_axis_values(this : IDWriteTextFormat3*, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_axis_values.call(this, fontAxisValues, fontAxisValueCount)
    end
    def get_automatic_font_axes(this : IDWriteTextFormat3*) : Win32cr::Graphics::DirectWrite::DWRITE_AUTOMATIC_FONT_AXES
      @lpVtbl.try &.value.get_automatic_font_axes.call(this)
    end
    def set_automatic_font_axes(this : IDWriteTextFormat3*, automaticFontAxes : Win32cr::Graphics::DirectWrite::DWRITE_AUTOMATIC_FONT_AXES) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_automatic_font_axes.call(this, automaticFontAxes)
    end

  end

  @[Extern]
  record IDWriteFontFallback1Vtbl,
    query_interface : Proc(IDWriteFontFallback1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFallback1*, UInt32),
    release : Proc(IDWriteFontFallback1*, UInt32),
    map_characters_1 : Proc(IDWriteFontFallback1*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, UInt32*, Void**, Float32*, Win32cr::Foundation::HRESULT),
    map_characters_2 : Proc(IDWriteFontFallback1*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, UInt32*, Float32*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("2397599d-dd0d-4681-bd6a-f4f31eaade77")]
  record IDWriteFontFallback1, lpVtbl : IDWriteFontFallback1Vtbl* do
    GUID = LibC::GUID.new(0x2397599d_u32, 0xdd0d_u16, 0x4681_u16, StaticArray[0xbd_u8, 0x6a_u8, 0xf4_u8, 0xf3_u8, 0x1e_u8, 0xaa_u8, 0xde_u8, 0x77_u8])
    def query_interface(this : IDWriteFontFallback1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFallback1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFallback1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def map_characters_1(this : IDWriteFontFallback1*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, baseFontCollection : Void*, baseFamilyName : Win32cr::Foundation::PWSTR, baseWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, baseStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, baseStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, mappedLength : UInt32*, mappedFont : Void**, scale : Float32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.map_characters_1.call(this, analysisSource, textPosition, textLength, baseFontCollection, baseFamilyName, baseWeight, baseStyle, baseStretch, mappedLength, mappedFont, scale)
    end
    def map_characters_2(this : IDWriteFontFallback1*, analysisSource : Void*, textPosition : UInt32, textLength : UInt32, baseFontCollection : Void*, baseFamilyName : Win32cr::Foundation::PWSTR, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, mappedLength : UInt32*, scale : Float32*, mappedFontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.map_characters_2.call(this, analysisSource, textPosition, textLength, baseFontCollection, baseFamilyName, fontAxisValues, fontAxisValueCount, mappedLength, scale, mappedFontFace)
    end

  end

  @[Extern]
  record IDWriteFontSet2Vtbl,
    query_interface : Proc(IDWriteFontSet2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontSet2*, UInt32),
    release : Proc(IDWriteFontSet2*, UInt32),
    get_font_count : Proc(IDWriteFontSet2*, UInt32),
    get_font_face_reference_1 : Proc(IDWriteFontSet2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    find_font_face_reference : Proc(IDWriteFontSet2*, Void*, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    find_font_face : Proc(IDWriteFontSet2*, Void*, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_property_values_1 : Proc(IDWriteFontSet2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, Void**, Win32cr::Foundation::HRESULT),
    get_property_values_2 : Proc(IDWriteFontSet2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    get_property_values_3 : Proc(IDWriteFontSet2*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, Win32cr::Foundation::BOOL*, Void**, Win32cr::Foundation::HRESULT),
    get_property_occurrence_count : Proc(IDWriteFontSet2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32*, Win32cr::Foundation::HRESULT),
    get_matching_fonts_1 : Proc(IDWriteFontSet2*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Void**, Win32cr::Foundation::HRESULT),
    get_matching_fonts_2 : Proc(IDWriteFontSet2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_matching_fonts : Proc(IDWriteFontSet2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_first_font_resources : Proc(IDWriteFontSet2*, Void**, Win32cr::Foundation::HRESULT),
    get_filtered_fonts_1 : Proc(IDWriteFontSet2*, UInt32*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_filtered_fonts_2 : Proc(IDWriteFontSet2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, UInt32, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    get_filtered_fonts_3 : Proc(IDWriteFontSet2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    get_filtered_font_indices_1 : Proc(IDWriteFontSet2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, UInt32, Win32cr::Foundation::BOOL, UInt32*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_filtered_font_indices_2 : Proc(IDWriteFontSet2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32, Win32cr::Foundation::BOOL, UInt32*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_font_axis_ranges_1 : Proc(IDWriteFontSet2*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_font_axis_ranges_2 : Proc(IDWriteFontSet2*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_font_face_reference_2 : Proc(IDWriteFontSet2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_font_resource : Proc(IDWriteFontSet2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_font_face : Proc(IDWriteFontSet2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_font_locality : Proc(IDWriteFontSet2*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY),
    get_expiration_event : Proc(IDWriteFontSet2*, Win32cr::Foundation::HANDLE)


  @[Extern]
  #@[Com("dc7ead19-e54c-43af-b2da-4e2b79ba3f7f")]
  record IDWriteFontSet2, lpVtbl : IDWriteFontSet2Vtbl* do
    GUID = LibC::GUID.new(0xdc7ead19_u32, 0xe54c_u16, 0x43af_u16, StaticArray[0xb2_u8, 0xda_u8, 0x4e_u8, 0x2b_u8, 0x79_u8, 0xba_u8, 0x3f_u8, 0x7f_u8])
    def query_interface(this : IDWriteFontSet2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontSet2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontSet2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_count(this : IDWriteFontSet2*) : UInt32
      @lpVtbl.try &.value.get_font_count.call(this)
    end
    def get_font_face_reference_1(this : IDWriteFontSet2*, listIndex : UInt32, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference_1.call(this, listIndex, fontFaceReference)
    end
    def find_font_face_reference(this : IDWriteFontSet2*, fontFaceReference : Void*, listIndex : UInt32*, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_font_face_reference.call(this, fontFaceReference, listIndex, exists)
    end
    def find_font_face(this : IDWriteFontSet2*, fontFace : Void*, listIndex : UInt32*, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_font_face.call(this, fontFace, listIndex, exists)
    end
    def get_property_values_1(this : IDWriteFontSet2*, propertyID : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, values : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_values_1.call(this, propertyID, values)
    end
    def get_property_values_2(this : IDWriteFontSet2*, propertyID : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, preferredLocaleNames : Win32cr::Foundation::PWSTR, values : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_values_2.call(this, propertyID, preferredLocaleNames, values)
    end
    def get_property_values_3(this : IDWriteFontSet2*, listIndex : UInt32, propertyId : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, exists : Win32cr::Foundation::BOOL*, values : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_values_3.call(this, listIndex, propertyId, exists, values)
    end
    def get_property_occurrence_count(this : IDWriteFontSet2*, property : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyOccurrenceCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_occurrence_count.call(this, property, propertyOccurrenceCount)
    end
    def get_matching_fonts_1(this : IDWriteFontSet2*, familyName : Win32cr::Foundation::PWSTR, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, filteredSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts_1.call(this, familyName, fontWeight, fontStretch, fontStyle, filteredSet)
    end
    def get_matching_fonts_2(this : IDWriteFontSet2*, properties : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyCount : UInt32, filteredSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts_2.call(this, properties, propertyCount, filteredSet)
    end
    def get_matching_fonts(this : IDWriteFontSet2*, fontProperty : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, matchingFonts : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts.call(this, fontProperty, fontAxisValues, fontAxisValueCount, matchingFonts)
    end
    def get_first_font_resources(this : IDWriteFontSet2*, filteredFontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_first_font_resources.call(this, filteredFontSet)
    end
    def get_filtered_fonts_1(this : IDWriteFontSet2*, indices : UInt32*, indexCount : UInt32, filteredFontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_filtered_fonts_1.call(this, indices, indexCount, filteredFontSet)
    end
    def get_filtered_fonts_2(this : IDWriteFontSet2*, fontAxisRanges : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, fontAxisRangeCount : UInt32, selectAnyRange : Win32cr::Foundation::BOOL, filteredFontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_filtered_fonts_2.call(this, fontAxisRanges, fontAxisRangeCount, selectAnyRange, filteredFontSet)
    end
    def get_filtered_fonts_3(this : IDWriteFontSet2*, properties : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyCount : UInt32, selectAnyProperty : Win32cr::Foundation::BOOL, filteredFontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_filtered_fonts_3.call(this, properties, propertyCount, selectAnyProperty, filteredFontSet)
    end
    def get_filtered_font_indices_1(this : IDWriteFontSet2*, fontAxisRanges : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, fontAxisRangeCount : UInt32, selectAnyRange : Win32cr::Foundation::BOOL, indices : UInt32*, maxIndexCount : UInt32, actualIndexCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_filtered_font_indices_1.call(this, fontAxisRanges, fontAxisRangeCount, selectAnyRange, indices, maxIndexCount, actualIndexCount)
    end
    def get_filtered_font_indices_2(this : IDWriteFontSet2*, properties : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyCount : UInt32, selectAnyProperty : Win32cr::Foundation::BOOL, indices : UInt32*, maxIndexCount : UInt32, actualIndexCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_filtered_font_indices_2.call(this, properties, propertyCount, selectAnyProperty, indices, maxIndexCount, actualIndexCount)
    end
    def get_font_axis_ranges_1(this : IDWriteFontSet2*, listIndex : UInt32, fontAxisRanges : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, maxFontAxisRangeCount : UInt32, actualFontAxisRangeCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_axis_ranges_1.call(this, listIndex, fontAxisRanges, maxFontAxisRangeCount, actualFontAxisRangeCount)
    end
    def get_font_axis_ranges_2(this : IDWriteFontSet2*, fontAxisRanges : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, maxFontAxisRangeCount : UInt32, actualFontAxisRangeCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_axis_ranges_2.call(this, fontAxisRanges, maxFontAxisRangeCount, actualFontAxisRangeCount)
    end
    def get_font_face_reference_2(this : IDWriteFontSet2*, listIndex : UInt32, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference_2.call(this, listIndex, fontFaceReference)
    end
    def create_font_resource(this : IDWriteFontSet2*, listIndex : UInt32, fontResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_resource.call(this, listIndex, fontResource)
    end
    def create_font_face(this : IDWriteFontSet2*, listIndex : UInt32, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face.call(this, listIndex, fontFace)
    end
    def get_font_locality(this : IDWriteFontSet2*, listIndex : UInt32) : Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY
      @lpVtbl.try &.value.get_font_locality.call(this, listIndex)
    end
    def get_expiration_event(this : IDWriteFontSet2*) : Win32cr::Foundation::HANDLE
      @lpVtbl.try &.value.get_expiration_event.call(this)
    end

  end

  @[Extern]
  record IDWriteFontCollection3Vtbl,
    query_interface : Proc(IDWriteFontCollection3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontCollection3*, UInt32),
    release : Proc(IDWriteFontCollection3*, UInt32),
    get_font_family_count : Proc(IDWriteFontCollection3*, UInt32),
    get_font_family_1 : Proc(IDWriteFontCollection3*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    find_family_name : Proc(IDWriteFontCollection3*, Win32cr::Foundation::PWSTR, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_font_from_font_face : Proc(IDWriteFontCollection3*, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_font_set_1 : Proc(IDWriteFontCollection3*, Void**, Win32cr::Foundation::HRESULT),
    get_font_family_2 : Proc(IDWriteFontCollection3*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_font_family : Proc(IDWriteFontCollection3*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_matching_fonts : Proc(IDWriteFontCollection3*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_font_family_model : Proc(IDWriteFontCollection3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL),
    get_font_set_2 : Proc(IDWriteFontCollection3*, Void**, Win32cr::Foundation::HRESULT),
    get_expiration_event : Proc(IDWriteFontCollection3*, Win32cr::Foundation::HANDLE)


  @[Extern]
  #@[Com("a4d055a6-f9e3-4e25-93b7-9e309f3af8e9")]
  record IDWriteFontCollection3, lpVtbl : IDWriteFontCollection3Vtbl* do
    GUID = LibC::GUID.new(0xa4d055a6_u32, 0xf9e3_u16, 0x4e25_u16, StaticArray[0x93_u8, 0xb7_u8, 0x9e_u8, 0x30_u8, 0x9f_u8, 0x3a_u8, 0xf8_u8, 0xe9_u8])
    def query_interface(this : IDWriteFontCollection3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontCollection3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontCollection3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_family_count(this : IDWriteFontCollection3*) : UInt32
      @lpVtbl.try &.value.get_font_family_count.call(this)
    end
    def get_font_family_1(this : IDWriteFontCollection3*, index : UInt32, fontFamily : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_1.call(this, index, fontFamily)
    end
    def find_family_name(this : IDWriteFontCollection3*, familyName : Win32cr::Foundation::PWSTR, index : UInt32*, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_family_name.call(this, familyName, index, exists)
    end
    def get_font_from_font_face(this : IDWriteFontCollection3*, fontFace : Void*, font : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_from_font_face.call(this, fontFace, font)
    end
    def get_font_set_1(this : IDWriteFontCollection3*, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_set_1.call(this, fontSet)
    end
    def get_font_family_2(this : IDWriteFontCollection3*, index : UInt32, fontFamily : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family_2.call(this, index, fontFamily)
    end
    def get_font_family(this : IDWriteFontCollection3*, index : UInt32, fontFamily : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_family.call(this, index, fontFamily)
    end
    def get_matching_fonts(this : IDWriteFontCollection3*, familyName : Win32cr::Foundation::PWSTR, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, fontList : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts.call(this, familyName, fontAxisValues, fontAxisValueCount, fontList)
    end
    def get_font_family_model(this : IDWriteFontCollection3*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL
      @lpVtbl.try &.value.get_font_family_model.call(this)
    end
    def get_font_set_2(this : IDWriteFontCollection3*, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_set_2.call(this, fontSet)
    end
    def get_expiration_event(this : IDWriteFontCollection3*) : Win32cr::Foundation::HANDLE
      @lpVtbl.try &.value.get_expiration_event.call(this)
    end

  end

  @[Extern]
  record IDWriteFactory7Vtbl,
    query_interface : Proc(IDWriteFactory7*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFactory7*, UInt32),
    release : Proc(IDWriteFactory7*, UInt32),
    get_system_font_collection_1_1 : Proc(IDWriteFactory7*, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_custom_font_collection : Proc(IDWriteFactory7*, Void*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    register_font_collection_loader : Proc(IDWriteFactory7*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_collection_loader : Proc(IDWriteFactory7*, Void*, Win32cr::Foundation::HRESULT),
    create_font_file_reference : Proc(IDWriteFactory7*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::FILETIME*, Void**, Win32cr::Foundation::HRESULT),
    create_custom_font_file_reference : Proc(IDWriteFactory7*, Void*, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_font_face : Proc(IDWriteFactory7*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, UInt32, Void**, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    create_rendering_params : Proc(IDWriteFactory7*, Void**, Win32cr::Foundation::HRESULT),
    create_monitor_rendering_params : Proc(IDWriteFactory7*, Win32cr::Graphics::Gdi::HMONITOR, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_1_1 : Proc(IDWriteFactory7*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Void**, Win32cr::Foundation::HRESULT),
    register_font_file_loader : Proc(IDWriteFactory7*, Void*, Win32cr::Foundation::HRESULT),
    unregister_font_file_loader : Proc(IDWriteFactory7*, Void*, Win32cr::Foundation::HRESULT),
    create_text_format_1 : Proc(IDWriteFactory7*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Float32, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    create_typography : Proc(IDWriteFactory7*, Void**, Win32cr::Foundation::HRESULT),
    get_gdi_interop : Proc(IDWriteFactory7*, Void**, Win32cr::Foundation::HRESULT),
    create_text_layout : Proc(IDWriteFactory7*, UInt16*, UInt32, Void*, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_gdi_compatible_text_layout : Proc(IDWriteFactory7*, UInt16*, UInt32, Void*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_ellipsis_trimming_sign : Proc(IDWriteFactory7*, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_text_analyzer : Proc(IDWriteFactory7*, Void**, Win32cr::Foundation::HRESULT),
    create_number_substitution : Proc(IDWriteFactory7*, Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis_1 : Proc(IDWriteFactory7*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    get_eudc_font_collection : Proc(IDWriteFactory7*, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_2_1 : Proc(IDWriteFactory7*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_fallback : Proc(IDWriteFactory7*, Void**, Win32cr::Foundation::HRESULT),
    create_font_fallback_builder : Proc(IDWriteFactory7*, Void**, Win32cr::Foundation::HRESULT),
    translate_color_glyph_run_1 : Proc(IDWriteFactory7*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_1_2 : Proc(IDWriteFactory7*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis_2 : Proc(IDWriteFactory7*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_glyph_run_analysis : Proc(IDWriteFactory7*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, Float32, Float32, Void**, Win32cr::Foundation::HRESULT),
    create_custom_rendering_params_2_2 : Proc(IDWriteFactory7*, Float32, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, Void**, Win32cr::Foundation::HRESULT),
    create_font_face_reference_1 : Proc(IDWriteFactory7*, Void*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    create_font_face_reference_2 : Proc(IDWriteFactory7*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::FILETIME*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_set_1 : Proc(IDWriteFactory7*, Void**, Win32cr::Foundation::HRESULT),
    create_font_set_builder_1 : Proc(IDWriteFactory7*, Void**, Win32cr::Foundation::HRESULT),
    create_font_collection_from_font_set_1 : Proc(IDWriteFactory7*, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_collection_2_1 : Proc(IDWriteFactory7*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_font_download_queue : Proc(IDWriteFactory7*, Void**, Win32cr::Foundation::HRESULT),
    translate_color_glyph_run_2 : Proc(IDWriteFactory7*, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    compute_glyph_origins_1 : Proc(IDWriteFactory7*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*, Win32cr::Foundation::HRESULT),
    compute_glyph_origins_2 : Proc(IDWriteFactory7*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*, Win32cr::Foundation::HRESULT),
    create_font_set_builder_2 : Proc(IDWriteFactory7*, Void**, Win32cr::Foundation::HRESULT),
    create_in_memory_font_file_loader : Proc(IDWriteFactory7*, Void**, Win32cr::Foundation::HRESULT),
    create_http_font_file_loader : Proc(IDWriteFactory7*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    analyze_container_type : Proc(IDWriteFactory7*, Void*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_CONTAINER_TYPE),
    unpack_font_file : Proc(IDWriteFactory7*, Win32cr::Graphics::DirectWrite::DWRITE_CONTAINER_TYPE, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_font_face_reference : Proc(IDWriteFactory7*, Void*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_font_resource : Proc(IDWriteFactory7*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_set_2 : Proc(IDWriteFactory7*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_collection_1_2 : Proc(IDWriteFactory7*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL, Void**, Win32cr::Foundation::HRESULT),
    create_font_collection_from_font_set_2 : Proc(IDWriteFactory7*, Void*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL, Void**, Win32cr::Foundation::HRESULT),
    create_font_set_builder : Proc(IDWriteFactory7*, Void**, Win32cr::Foundation::HRESULT),
    create_text_format_2 : Proc(IDWriteFactory7*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Float32, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_set : Proc(IDWriteFactory7*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    get_system_font_collection_2_2 : Proc(IDWriteFactory7*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("35d0e0b3-9076-4d2e-a016-a91b568a06b4")]
  record IDWriteFactory7, lpVtbl : IDWriteFactory7Vtbl* do
    GUID = LibC::GUID.new(0x35d0e0b3_u32, 0x9076_u16, 0x4d2e_u16, StaticArray[0xa0_u8, 0x16_u8, 0xa9_u8, 0x1b_u8, 0x56_u8, 0x8a_u8, 0x6_u8, 0xb4_u8])
    def query_interface(this : IDWriteFactory7*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFactory7*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFactory7*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_system_font_collection_1_1(this : IDWriteFactory7*, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_1_1.call(this, fontCollection, checkForUpdates)
    end
    def create_custom_font_collection(this : IDWriteFactory7*, collectionLoader : Void*, collectionKey : Void*, collectionKeySize : UInt32, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_collection.call(this, collectionLoader, collectionKey, collectionKeySize, fontCollection)
    end
    def register_font_collection_loader(this : IDWriteFactory7*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_collection_loader.call(this, fontCollectionLoader)
    end
    def unregister_font_collection_loader(this : IDWriteFactory7*, fontCollectionLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_collection_loader.call(this, fontCollectionLoader)
    end
    def create_font_file_reference(this : IDWriteFactory7*, filePath : Win32cr::Foundation::PWSTR, lastWriteTime : Win32cr::Foundation::FILETIME*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_file_reference.call(this, filePath, lastWriteTime, fontFile)
    end
    def create_custom_font_file_reference(this : IDWriteFactory7*, fontFileReferenceKey : Void*, fontFileReferenceKeySize : UInt32, fontFileLoader : Void*, fontFile : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_font_file_reference.call(this, fontFileReferenceKey, fontFileReferenceKeySize, fontFileLoader, fontFile)
    end
    def create_font_face(this : IDWriteFactory7*, fontFaceType : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE, numberOfFiles : UInt32, fontFiles : Void**, faceIndex : UInt32, fontFaceSimulationFlags : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face.call(this, fontFaceType, numberOfFiles, fontFiles, faceIndex, fontFaceSimulationFlags, fontFace)
    end
    def create_rendering_params(this : IDWriteFactory7*, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rendering_params.call(this, renderingParams)
    end
    def create_monitor_rendering_params(this : IDWriteFactory7*, monitor : Win32cr::Graphics::Gdi::HMONITOR, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_monitor_rendering_params.call(this, monitor, renderingParams)
    end
    def create_custom_rendering_params_1_1(this : IDWriteFactory7*, gamma : Float32, enhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_1_1.call(this, gamma, enhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, renderingParams)
    end
    def register_font_file_loader(this : IDWriteFactory7*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_font_file_loader.call(this, fontFileLoader)
    end
    def unregister_font_file_loader(this : IDWriteFactory7*, fontFileLoader : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_font_file_loader.call(this, fontFileLoader)
    end
    def create_text_format_1(this : IDWriteFactory7*, fontFamilyName : Win32cr::Foundation::PWSTR, fontCollection : Void*, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, fontSize : Float32, localeName : Win32cr::Foundation::PWSTR, textFormat : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_format_1.call(this, fontFamilyName, fontCollection, fontWeight, fontStyle, fontStretch, fontSize, localeName, textFormat)
    end
    def create_typography(this : IDWriteFactory7*, typography : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_typography.call(this, typography)
    end
    def get_gdi_interop(this : IDWriteFactory7*, gdiInterop : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_interop.call(this, gdiInterop)
    end
    def create_text_layout(this : IDWriteFactory7*, string : UInt16*, stringLength : UInt32, textFormat : Void*, maxWidth : Float32, maxHeight : Float32, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_layout.call(this, string, stringLength, textFormat, maxWidth, maxHeight, textLayout)
    end
    def create_gdi_compatible_text_layout(this : IDWriteFactory7*, string : UInt16*, stringLength : UInt32, textFormat : Void*, layoutWidth : Float32, layoutHeight : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, textLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_gdi_compatible_text_layout.call(this, string, stringLength, textFormat, layoutWidth, layoutHeight, pixelsPerDip, transform, useGdiNatural, textLayout)
    end
    def create_ellipsis_trimming_sign(this : IDWriteFactory7*, textFormat : Void*, trimmingSign : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_ellipsis_trimming_sign.call(this, textFormat, trimmingSign)
    end
    def create_text_analyzer(this : IDWriteFactory7*, textAnalyzer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_analyzer.call(this, textAnalyzer)
    end
    def create_number_substitution(this : IDWriteFactory7*, substitutionMethod : Win32cr::Graphics::DirectWrite::DWRITE_NUMBER_SUBSTITUTION_METHOD, localeName : Win32cr::Foundation::PWSTR, ignoreUserOverride : Win32cr::Foundation::BOOL, numberSubstitution : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_number_substitution.call(this, substitutionMethod, localeName, ignoreUserOverride, numberSubstitution)
    end
    def create_glyph_run_analysis_1(this : IDWriteFactory7*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis_1.call(this, glyphRun, pixelsPerDip, transform, renderingMode, measuringMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def get_eudc_font_collection(this : IDWriteFactory7*, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_eudc_font_collection.call(this, fontCollection, checkForUpdates)
    end
    def create_custom_rendering_params_2_1(this : IDWriteFactory7*, gamma : Float32, enhancedContrast : Float32, enhancedContrastGrayscale : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_2_1.call(this, gamma, enhancedContrast, enhancedContrastGrayscale, clearTypeLevel, pixelGeometry, renderingMode, renderingParams)
    end
    def get_system_font_fallback(this : IDWriteFactory7*, fontFallback : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_fallback.call(this, fontFallback)
    end
    def create_font_fallback_builder(this : IDWriteFactory7*, fontFallbackBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_fallback_builder.call(this, fontFallbackBuilder)
    end
    def translate_color_glyph_run_1(this : IDWriteFactory7*, baselineOriginX : Float32, baselineOriginY : Float32, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, glyphRunDescription : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, worldToDeviceTransform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, colorPaletteIndex : UInt32, colorLayers : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_color_glyph_run_1.call(this, baselineOriginX, baselineOriginY, glyphRun, glyphRunDescription, measuringMode, worldToDeviceTransform, colorPaletteIndex, colorLayers)
    end
    def create_custom_rendering_params_1_2(this : IDWriteFactory7*, gamma : Float32, enhancedContrast : Float32, grayscaleEnhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_1_2.call(this, gamma, enhancedContrast, grayscaleEnhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, gridFitMode, renderingParams)
    end
    def create_glyph_run_analysis_2(this : IDWriteFactory7*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, antialiasMode : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis_2.call(this, glyphRun, transform, renderingMode, measuringMode, gridFitMode, antialiasMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def create_glyph_run_analysis(this : IDWriteFactory7*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, antialiasMode : Win32cr::Graphics::DirectWrite::DWRITE_TEXT_ANTIALIAS_MODE, baselineOriginX : Float32, baselineOriginY : Float32, glyphRunAnalysis : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_glyph_run_analysis.call(this, glyphRun, transform, renderingMode, measuringMode, gridFitMode, antialiasMode, baselineOriginX, baselineOriginY, glyphRunAnalysis)
    end
    def create_custom_rendering_params_2_2(this : IDWriteFactory7*, gamma : Float32, enhancedContrast : Float32, grayscaleEnhancedContrast : Float32, clearTypeLevel : Float32, pixelGeometry : Win32cr::Graphics::DirectWrite::DWRITE_PIXEL_GEOMETRY, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE, renderingParams : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_custom_rendering_params_2_2.call(this, gamma, enhancedContrast, grayscaleEnhancedContrast, clearTypeLevel, pixelGeometry, renderingMode, gridFitMode, renderingParams)
    end
    def create_font_face_reference_1(this : IDWriteFactory7*, fontFile : Void*, faceIndex : UInt32, fontSimulations : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_reference_1.call(this, fontFile, faceIndex, fontSimulations, fontFaceReference)
    end
    def create_font_face_reference_2(this : IDWriteFactory7*, filePath : Win32cr::Foundation::PWSTR, lastWriteTime : Win32cr::Foundation::FILETIME*, faceIndex : UInt32, fontSimulations : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_reference_2.call(this, filePath, lastWriteTime, faceIndex, fontSimulations, fontFaceReference)
    end
    def get_system_font_set_1(this : IDWriteFactory7*, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_set_1.call(this, fontSet)
    end
    def create_font_set_builder_1(this : IDWriteFactory7*, fontSetBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_set_builder_1.call(this, fontSetBuilder)
    end
    def create_font_collection_from_font_set_1(this : IDWriteFactory7*, fontSet : Void*, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_collection_from_font_set_1.call(this, fontSet, fontCollection)
    end
    def get_system_font_collection_2_1(this : IDWriteFactory7*, includeDownloadableFonts : Win32cr::Foundation::BOOL, fontCollection : Void**, checkForUpdates : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_2_1.call(this, includeDownloadableFonts, fontCollection, checkForUpdates)
    end
    def get_font_download_queue(this : IDWriteFactory7*, fontDownloadQueue : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_download_queue.call(this, fontDownloadQueue)
    end
    def translate_color_glyph_run_2(this : IDWriteFactory7*, baselineOrigin : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, glyphRunDescription : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN_DESCRIPTION*, desiredGlyphImageFormats : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, worldAndDpiTransform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, colorPaletteIndex : UInt32, colorLayers : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_color_glyph_run_2.call(this, baselineOrigin, glyphRun, glyphRunDescription, desiredGlyphImageFormats, measuringMode, worldAndDpiTransform, colorPaletteIndex, colorLayers)
    end
    def compute_glyph_origins_1(this : IDWriteFactory7*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, baselineOrigin : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, glyphOrigins : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compute_glyph_origins_1.call(this, glyphRun, baselineOrigin, glyphOrigins)
    end
    def compute_glyph_origins_2(this : IDWriteFactory7*, glyphRun : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_RUN*, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, baselineOrigin : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F, worldAndDpiTransform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, glyphOrigins : Win32cr::Graphics::Direct2D::Common::D2D_POINT_2F*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compute_glyph_origins_2.call(this, glyphRun, measuringMode, baselineOrigin, worldAndDpiTransform, glyphOrigins)
    end
    def create_font_set_builder_2(this : IDWriteFactory7*, fontSetBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_set_builder_2.call(this, fontSetBuilder)
    end
    def create_in_memory_font_file_loader(this : IDWriteFactory7*, newLoader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_in_memory_font_file_loader.call(this, newLoader)
    end
    def create_http_font_file_loader(this : IDWriteFactory7*, referrerUrl : Win32cr::Foundation::PWSTR, extraHeaders : Win32cr::Foundation::PWSTR, newLoader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_http_font_file_loader.call(this, referrerUrl, extraHeaders, newLoader)
    end
    def analyze_container_type(this : IDWriteFactory7*, fileData : Void*, fileDataSize : UInt32) : Win32cr::Graphics::DirectWrite::DWRITE_CONTAINER_TYPE
      @lpVtbl.try &.value.analyze_container_type.call(this, fileData, fileDataSize)
    end
    def unpack_font_file(this : IDWriteFactory7*, containerType : Win32cr::Graphics::DirectWrite::DWRITE_CONTAINER_TYPE, fileData : Void*, fileDataSize : UInt32, unpackedFontStream : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unpack_font_file.call(this, containerType, fileData, fileDataSize, unpackedFontStream)
    end
    def create_font_face_reference(this : IDWriteFactory7*, fontFile : Void*, faceIndex : UInt32, fontSimulations : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face_reference.call(this, fontFile, faceIndex, fontSimulations, fontAxisValues, fontAxisValueCount, fontFaceReference)
    end
    def create_font_resource(this : IDWriteFactory7*, fontFile : Void*, faceIndex : UInt32, fontResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_resource.call(this, fontFile, faceIndex, fontResource)
    end
    def get_system_font_set_2(this : IDWriteFactory7*, includeDownloadableFonts : Win32cr::Foundation::BOOL, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_set_2.call(this, includeDownloadableFonts, fontSet)
    end
    def get_system_font_collection_1_2(this : IDWriteFactory7*, includeDownloadableFonts : Win32cr::Foundation::BOOL, fontFamilyModel : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_1_2.call(this, includeDownloadableFonts, fontFamilyModel, fontCollection)
    end
    def create_font_collection_from_font_set_2(this : IDWriteFactory7*, fontSet : Void*, fontFamilyModel : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_collection_from_font_set_2.call(this, fontSet, fontFamilyModel, fontCollection)
    end
    def create_font_set_builder(this : IDWriteFactory7*, fontSetBuilder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_set_builder.call(this, fontSetBuilder)
    end
    def create_text_format_2(this : IDWriteFactory7*, fontFamilyName : Win32cr::Foundation::PWSTR, fontCollection : Void*, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, fontSize : Float32, localeName : Win32cr::Foundation::PWSTR, textFormat : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_text_format_2.call(this, fontFamilyName, fontCollection, fontAxisValues, fontAxisValueCount, fontSize, localeName, textFormat)
    end
    def get_system_font_set(this : IDWriteFactory7*, includeDownloadableFonts : Win32cr::Foundation::BOOL, fontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_set.call(this, includeDownloadableFonts, fontSet)
    end
    def get_system_font_collection_2_2(this : IDWriteFactory7*, includeDownloadableFonts : Win32cr::Foundation::BOOL, fontFamilyModel : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL, fontCollection : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_font_collection_2_2.call(this, includeDownloadableFonts, fontFamilyModel, fontCollection)
    end

  end

  @[Extern]
  record IDWriteFontSet3Vtbl,
    query_interface : Proc(IDWriteFontSet3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontSet3*, UInt32),
    release : Proc(IDWriteFontSet3*, UInt32),
    get_font_count : Proc(IDWriteFontSet3*, UInt32),
    get_font_face_reference_1 : Proc(IDWriteFontSet3*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    find_font_face_reference : Proc(IDWriteFontSet3*, Void*, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    find_font_face : Proc(IDWriteFontSet3*, Void*, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_property_values_1 : Proc(IDWriteFontSet3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, Void**, Win32cr::Foundation::HRESULT),
    get_property_values_2 : Proc(IDWriteFontSet3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    get_property_values_3 : Proc(IDWriteFontSet3*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, Win32cr::Foundation::BOOL*, Void**, Win32cr::Foundation::HRESULT),
    get_property_occurrence_count : Proc(IDWriteFontSet3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32*, Win32cr::Foundation::HRESULT),
    get_matching_fonts_1 : Proc(IDWriteFontSet3*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, Void**, Win32cr::Foundation::HRESULT),
    get_matching_fonts_2 : Proc(IDWriteFontSet3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_matching_fonts : Proc(IDWriteFontSet3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_first_font_resources : Proc(IDWriteFontSet3*, Void**, Win32cr::Foundation::HRESULT),
    get_filtered_fonts_1 : Proc(IDWriteFontSet3*, UInt32*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_filtered_fonts_2 : Proc(IDWriteFontSet3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, UInt32, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    get_filtered_fonts_3 : Proc(IDWriteFontSet3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    get_filtered_font_indices_1 : Proc(IDWriteFontSet3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, UInt32, Win32cr::Foundation::BOOL, UInt32*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_filtered_font_indices_2 : Proc(IDWriteFontSet3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, UInt32, Win32cr::Foundation::BOOL, UInt32*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_font_axis_ranges_1 : Proc(IDWriteFontSet3*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_font_axis_ranges_2 : Proc(IDWriteFontSet3*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_font_face_reference_2 : Proc(IDWriteFontSet3*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_font_resource : Proc(IDWriteFontSet3*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_font_face : Proc(IDWriteFontSet3*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_font_locality : Proc(IDWriteFontSet3*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY),
    get_expiration_event : Proc(IDWriteFontSet3*, Win32cr::Foundation::HANDLE),
    get_font_source_type : Proc(IDWriteFontSet3*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SOURCE_TYPE),
    get_font_source_name_length : Proc(IDWriteFontSet3*, UInt32, UInt32),
    get_font_source_name : Proc(IDWriteFontSet3*, UInt32, UInt16*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("7c073ef2-a7f4-4045-8c32-8ab8ae640f90")]
  record IDWriteFontSet3, lpVtbl : IDWriteFontSet3Vtbl* do
    GUID = LibC::GUID.new(0x7c073ef2_u32, 0xa7f4_u16, 0x4045_u16, StaticArray[0x8c_u8, 0x32_u8, 0x8a_u8, 0xb8_u8, 0xae_u8, 0x64_u8, 0xf_u8, 0x90_u8])
    def query_interface(this : IDWriteFontSet3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontSet3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontSet3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_font_count(this : IDWriteFontSet3*) : UInt32
      @lpVtbl.try &.value.get_font_count.call(this)
    end
    def get_font_face_reference_1(this : IDWriteFontSet3*, listIndex : UInt32, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference_1.call(this, listIndex, fontFaceReference)
    end
    def find_font_face_reference(this : IDWriteFontSet3*, fontFaceReference : Void*, listIndex : UInt32*, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_font_face_reference.call(this, fontFaceReference, listIndex, exists)
    end
    def find_font_face(this : IDWriteFontSet3*, fontFace : Void*, listIndex : UInt32*, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_font_face.call(this, fontFace, listIndex, exists)
    end
    def get_property_values_1(this : IDWriteFontSet3*, propertyID : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, values : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_values_1.call(this, propertyID, values)
    end
    def get_property_values_2(this : IDWriteFontSet3*, propertyID : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, preferredLocaleNames : Win32cr::Foundation::PWSTR, values : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_values_2.call(this, propertyID, preferredLocaleNames, values)
    end
    def get_property_values_3(this : IDWriteFontSet3*, listIndex : UInt32, propertyId : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY_ID, exists : Win32cr::Foundation::BOOL*, values : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_values_3.call(this, listIndex, propertyId, exists, values)
    end
    def get_property_occurrence_count(this : IDWriteFontSet3*, property : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyOccurrenceCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_occurrence_count.call(this, property, propertyOccurrenceCount)
    end
    def get_matching_fonts_1(this : IDWriteFontSet3*, familyName : Win32cr::Foundation::PWSTR, fontWeight : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT, fontStretch : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH, fontStyle : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE, filteredSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts_1.call(this, familyName, fontWeight, fontStretch, fontStyle, filteredSet)
    end
    def get_matching_fonts_2(this : IDWriteFontSet3*, properties : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyCount : UInt32, filteredSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts_2.call(this, properties, propertyCount, filteredSet)
    end
    def get_matching_fonts(this : IDWriteFontSet3*, fontProperty : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32, matchingFonts : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_matching_fonts.call(this, fontProperty, fontAxisValues, fontAxisValueCount, matchingFonts)
    end
    def get_first_font_resources(this : IDWriteFontSet3*, filteredFontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_first_font_resources.call(this, filteredFontSet)
    end
    def get_filtered_fonts_1(this : IDWriteFontSet3*, indices : UInt32*, indexCount : UInt32, filteredFontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_filtered_fonts_1.call(this, indices, indexCount, filteredFontSet)
    end
    def get_filtered_fonts_2(this : IDWriteFontSet3*, fontAxisRanges : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, fontAxisRangeCount : UInt32, selectAnyRange : Win32cr::Foundation::BOOL, filteredFontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_filtered_fonts_2.call(this, fontAxisRanges, fontAxisRangeCount, selectAnyRange, filteredFontSet)
    end
    def get_filtered_fonts_3(this : IDWriteFontSet3*, properties : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyCount : UInt32, selectAnyProperty : Win32cr::Foundation::BOOL, filteredFontSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_filtered_fonts_3.call(this, properties, propertyCount, selectAnyProperty, filteredFontSet)
    end
    def get_filtered_font_indices_1(this : IDWriteFontSet3*, fontAxisRanges : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, fontAxisRangeCount : UInt32, selectAnyRange : Win32cr::Foundation::BOOL, indices : UInt32*, maxIndexCount : UInt32, actualIndexCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_filtered_font_indices_1.call(this, fontAxisRanges, fontAxisRangeCount, selectAnyRange, indices, maxIndexCount, actualIndexCount)
    end
    def get_filtered_font_indices_2(this : IDWriteFontSet3*, properties : Win32cr::Graphics::DirectWrite::DWRITE_FONT_PROPERTY*, propertyCount : UInt32, selectAnyProperty : Win32cr::Foundation::BOOL, indices : UInt32*, maxIndexCount : UInt32, actualIndexCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_filtered_font_indices_2.call(this, properties, propertyCount, selectAnyProperty, indices, maxIndexCount, actualIndexCount)
    end
    def get_font_axis_ranges_1(this : IDWriteFontSet3*, listIndex : UInt32, fontAxisRanges : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, maxFontAxisRangeCount : UInt32, actualFontAxisRangeCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_axis_ranges_1.call(this, listIndex, fontAxisRanges, maxFontAxisRangeCount, actualFontAxisRangeCount)
    end
    def get_font_axis_ranges_2(this : IDWriteFontSet3*, fontAxisRanges : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_RANGE*, maxFontAxisRangeCount : UInt32, actualFontAxisRangeCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_axis_ranges_2.call(this, fontAxisRanges, maxFontAxisRangeCount, actualFontAxisRangeCount)
    end
    def get_font_face_reference_2(this : IDWriteFontSet3*, listIndex : UInt32, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference_2.call(this, listIndex, fontFaceReference)
    end
    def create_font_resource(this : IDWriteFontSet3*, listIndex : UInt32, fontResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_resource.call(this, listIndex, fontResource)
    end
    def create_font_face(this : IDWriteFontSet3*, listIndex : UInt32, fontFace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_font_face.call(this, listIndex, fontFace)
    end
    def get_font_locality(this : IDWriteFontSet3*, listIndex : UInt32) : Win32cr::Graphics::DirectWrite::DWRITE_LOCALITY
      @lpVtbl.try &.value.get_font_locality.call(this, listIndex)
    end
    def get_expiration_event(this : IDWriteFontSet3*) : Win32cr::Foundation::HANDLE
      @lpVtbl.try &.value.get_expiration_event.call(this)
    end
    def get_font_source_type(this : IDWriteFontSet3*, fontIndex : UInt32) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SOURCE_TYPE
      @lpVtbl.try &.value.get_font_source_type.call(this, fontIndex)
    end
    def get_font_source_name_length(this : IDWriteFontSet3*, listIndex : UInt32) : UInt32
      @lpVtbl.try &.value.get_font_source_name_length.call(this, listIndex)
    end
    def get_font_source_name(this : IDWriteFontSet3*, listIndex : UInt32, stringBuffer : UInt16*, stringBufferSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_source_name.call(this, listIndex, stringBuffer, stringBufferSize)
    end

  end

  @[Extern]
  record IDWriteFontFace6Vtbl,
    query_interface : Proc(IDWriteFontFace6*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDWriteFontFace6*, UInt32),
    release : Proc(IDWriteFontFace6*, UInt32),
    get_type : Proc(IDWriteFontFace6*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE),
    get_files : Proc(IDWriteFontFace6*, UInt32*, Void**, Win32cr::Foundation::HRESULT),
    get_index : Proc(IDWriteFontFace6*, UInt32),
    get_simulations : Proc(IDWriteFontFace6*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS),
    is_symbol_font : Proc(IDWriteFontFace6*, Win32cr::Foundation::BOOL),
    get_metrics_1 : Proc(IDWriteFontFace6*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Void),
    get_glyph_count : Proc(IDWriteFontFace6*, UInt16),
    get_design_glyph_metrics : Proc(IDWriteFontFace6*, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_glyph_indices : Proc(IDWriteFontFace6*, UInt32*, UInt32, UInt16*, Win32cr::Foundation::HRESULT),
    try_get_font_table : Proc(IDWriteFontFace6*, UInt32, Void**, UInt32*, Void**, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    release_font_table : Proc(IDWriteFontFace6*, Void*, Void),
    get_glyph_run_outline : Proc(IDWriteFontFace6*, Float32, UInt16*, Float32*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Void*, Win32cr::Foundation::HRESULT),
    get_recommended_rendering_mode_1_1 : Proc(IDWriteFontFace6*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_metrics_1 : Proc(IDWriteFontFace6*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_metrics : Proc(IDWriteFontFace6*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, UInt16*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_metrics_2 : Proc(IDWriteFontFace6*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*, Void),
    get_gdi_compatible_metrics_2 : Proc(IDWriteFontFace6*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*, Win32cr::Foundation::HRESULT),
    get_caret_metrics : Proc(IDWriteFontFace6*, Win32cr::Graphics::DirectWrite::DWRITE_CARET_METRICS*, Void),
    get_unicode_ranges : Proc(IDWriteFontFace6*, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, UInt32*, Win32cr::Foundation::HRESULT),
    is_monospaced_font : Proc(IDWriteFontFace6*, Win32cr::Foundation::BOOL),
    get_design_glyph_advances : Proc(IDWriteFontFace6*, UInt32, UInt16*, Int32*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_gdi_compatible_glyph_advances : Proc(IDWriteFontFace6*, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, UInt32, UInt16*, Int32*, Win32cr::Foundation::HRESULT),
    get_kerning_pair_adjustments : Proc(IDWriteFontFace6*, UInt32, UInt16*, Int32*, Win32cr::Foundation::HRESULT),
    has_kerning_pairs : Proc(IDWriteFontFace6*, Win32cr::Foundation::BOOL),
    get_recommended_rendering_mode_2_1 : Proc(IDWriteFontFace6*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Foundation::HRESULT),
    get_vertical_glyph_variants : Proc(IDWriteFontFace6*, UInt32, UInt16*, UInt16*, Win32cr::Foundation::HRESULT),
    has_vertical_glyph_variants : Proc(IDWriteFontFace6*, Win32cr::Foundation::BOOL),
    is_color_font : Proc(IDWriteFontFace6*, Win32cr::Foundation::BOOL),
    get_color_palette_count : Proc(IDWriteFontFace6*, UInt32),
    get_palette_entry_count : Proc(IDWriteFontFace6*, UInt32),
    get_palette_entries : Proc(IDWriteFontFace6*, UInt32, UInt32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_COLOR_F*, Win32cr::Foundation::HRESULT),
    get_recommended_rendering_mode_1_2 : Proc(IDWriteFontFace6*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*, Win32cr::Foundation::HRESULT),
    get_font_face_reference : Proc(IDWriteFontFace6*, Void**, Win32cr::Foundation::HRESULT),
    get_panose : Proc(IDWriteFontFace6*, Win32cr::Graphics::DirectWrite::DWRITE_PANOSE*, Void),
    get_weight : Proc(IDWriteFontFace6*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT),
    get_stretch : Proc(IDWriteFontFace6*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH),
    get_style : Proc(IDWriteFontFace6*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE),
    get_family_names_1 : Proc(IDWriteFontFace6*, Void**, Win32cr::Foundation::HRESULT),
    get_face_names_1 : Proc(IDWriteFontFace6*, Void**, Win32cr::Foundation::HRESULT),
    get_informational_strings : Proc(IDWriteFontFace6*, Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, Void**, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    has_character : Proc(IDWriteFontFace6*, UInt32, Win32cr::Foundation::BOOL),
    get_recommended_rendering_mode_2_2 : Proc(IDWriteFontFace6*, Float32, Float32, Float32, Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, Win32cr::Foundation::BOOL, Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, Void*, Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1*, Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*, Win32cr::Foundation::HRESULT),
    is_character_local : Proc(IDWriteFontFace6*, UInt32, Win32cr::Foundation::BOOL),
    is_glyph_local : Proc(IDWriteFontFace6*, UInt16, Win32cr::Foundation::BOOL),
    are_characters_local : Proc(IDWriteFontFace6*, UInt16*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    are_glyphs_local : Proc(IDWriteFontFace6*, UInt16*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_glyph_image_formats_1 : Proc(IDWriteFontFace6*, UInt16, UInt32, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS*, Win32cr::Foundation::HRESULT),
    get_glyph_image_formats_2 : Proc(IDWriteFontFace6*, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS),
    get_glyph_image_data : Proc(IDWriteFontFace6*, UInt16, UInt32, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS, Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    release_glyph_image_data : Proc(IDWriteFontFace6*, Void*, Void),
    get_font_axis_value_count : Proc(IDWriteFontFace6*, UInt32),
    get_font_axis_values : Proc(IDWriteFontFace6*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, UInt32, Win32cr::Foundation::HRESULT),
    has_variations : Proc(IDWriteFontFace6*, Win32cr::Foundation::BOOL),
    get_font_resource : Proc(IDWriteFontFace6*, Void**, Win32cr::Foundation::HRESULT),
    equals : Proc(IDWriteFontFace6*, Void*, Win32cr::Foundation::BOOL),
    get_family_names_2 : Proc(IDWriteFontFace6*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL, Void**, Win32cr::Foundation::HRESULT),
    get_face_names_2 : Proc(IDWriteFontFace6*, Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("c4b1fe1b-6e84-47d5-b54c-a597981b06ad")]
  record IDWriteFontFace6, lpVtbl : IDWriteFontFace6Vtbl* do
    GUID = LibC::GUID.new(0xc4b1fe1b_u32, 0x6e84_u16, 0x47d5_u16, StaticArray[0xb5_u8, 0x4c_u8, 0xa5_u8, 0x97_u8, 0x98_u8, 0x1b_u8, 0x6_u8, 0xad_u8])
    def query_interface(this : IDWriteFontFace6*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDWriteFontFace6*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDWriteFontFace6*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type(this : IDWriteFontFace6*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FACE_TYPE
      @lpVtbl.try &.value.get_type.call(this)
    end
    def get_files(this : IDWriteFontFace6*, numberOfFiles : UInt32*, fontFiles : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_files.call(this, numberOfFiles, fontFiles)
    end
    def get_index(this : IDWriteFontFace6*) : UInt32
      @lpVtbl.try &.value.get_index.call(this)
    end
    def get_simulations(this : IDWriteFontFace6*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_SIMULATIONS
      @lpVtbl.try &.value.get_simulations.call(this)
    end
    def is_symbol_font(this : IDWriteFontFace6*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_symbol_font.call(this)
    end
    def get_metrics_1(this : IDWriteFontFace6*, fontFaceMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Void
      @lpVtbl.try &.value.get_metrics_1.call(this, fontFaceMetrics)
    end
    def get_glyph_count(this : IDWriteFontFace6*) : UInt16
      @lpVtbl.try &.value.get_glyph_count.call(this)
    end
    def get_design_glyph_metrics(this : IDWriteFontFace6*, glyphIndices : UInt16*, glyphCount : UInt32, glyphMetrics : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_design_glyph_metrics.call(this, glyphIndices, glyphCount, glyphMetrics, isSideways)
    end
    def get_glyph_indices(this : IDWriteFontFace6*, codePoints : UInt32*, codePointCount : UInt32, glyphIndices : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_indices.call(this, codePoints, codePointCount, glyphIndices)
    end
    def try_get_font_table(this : IDWriteFontFace6*, openTypeTableTag : UInt32, tableData : Void**, tableSize : UInt32*, tableContext : Void**, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.try_get_font_table.call(this, openTypeTableTag, tableData, tableSize, tableContext, exists)
    end
    def release_font_table(this : IDWriteFontFace6*, tableContext : Void*) : Void
      @lpVtbl.try &.value.release_font_table.call(this, tableContext)
    end
    def get_glyph_run_outline(this : IDWriteFontFace6*, emSize : Float32, glyphIndices : UInt16*, glyphAdvances : Float32*, glyphOffsets : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_OFFSET*, glyphCount : UInt32, isSideways : Win32cr::Foundation::BOOL, isRightToLeft : Win32cr::Foundation::BOOL, geometrySink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_run_outline.call(this, emSize, glyphIndices, glyphAdvances, glyphOffsets, glyphCount, isSideways, isRightToLeft, geometrySink)
    end
    def get_recommended_rendering_mode_1_1(this : IDWriteFontFace6*, emSize : Float32, pixelsPerDip : Float32, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_1_1.call(this, emSize, pixelsPerDip, measuringMode, renderingParams, renderingMode)
    end
    def get_gdi_compatible_metrics_1(this : IDWriteFontFace6*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, fontFaceMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_metrics_1.call(this, emSize, pixelsPerDip, transform, fontFaceMetrics)
    end
    def get_gdi_compatible_glyph_metrics(this : IDWriteFontFace6*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, glyphIndices : UInt16*, glyphCount : UInt32, glyphMetrics : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_METRICS*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_metrics.call(this, emSize, pixelsPerDip, transform, useGdiNatural, glyphIndices, glyphCount, glyphMetrics, isSideways)
    end
    def get_metrics_2(this : IDWriteFontFace6*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*) : Void
      @lpVtbl.try &.value.get_metrics_2.call(this, fontMetrics)
    end
    def get_gdi_compatible_metrics_2(this : IDWriteFontFace6*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, fontMetrics : Win32cr::Graphics::DirectWrite::DWRITE_FONT_METRICS1*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_metrics_2.call(this, emSize, pixelsPerDip, transform, fontMetrics)
    end
    def get_caret_metrics(this : IDWriteFontFace6*, caretMetrics : Win32cr::Graphics::DirectWrite::DWRITE_CARET_METRICS*) : Void
      @lpVtbl.try &.value.get_caret_metrics.call(this, caretMetrics)
    end
    def get_unicode_ranges(this : IDWriteFontFace6*, maxRangeCount : UInt32, unicodeRanges : Win32cr::Graphics::DirectWrite::DWRITE_UNICODE_RANGE*, actualRangeCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_unicode_ranges.call(this, maxRangeCount, unicodeRanges, actualRangeCount)
    end
    def is_monospaced_font(this : IDWriteFontFace6*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_monospaced_font.call(this)
    end
    def get_design_glyph_advances(this : IDWriteFontFace6*, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvances : Int32*, isSideways : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_design_glyph_advances.call(this, glyphCount, glyphIndices, glyphAdvances, isSideways)
    end
    def get_gdi_compatible_glyph_advances(this : IDWriteFontFace6*, emSize : Float32, pixelsPerDip : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, useGdiNatural : Win32cr::Foundation::BOOL, isSideways : Win32cr::Foundation::BOOL, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvances : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_gdi_compatible_glyph_advances.call(this, emSize, pixelsPerDip, transform, useGdiNatural, isSideways, glyphCount, glyphIndices, glyphAdvances)
    end
    def get_kerning_pair_adjustments(this : IDWriteFontFace6*, glyphCount : UInt32, glyphIndices : UInt16*, glyphAdvanceAdjustments : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_kerning_pair_adjustments.call(this, glyphCount, glyphIndices, glyphAdvanceAdjustments)
    end
    def has_kerning_pairs(this : IDWriteFontFace6*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_kerning_pairs.call(this)
    end
    def get_recommended_rendering_mode_2_1(this : IDWriteFontFace6*, fontEmSize : Float32, dpiX : Float32, dpiY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, isSideways : Win32cr::Foundation::BOOL, outlineThreshold : Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_2_1.call(this, fontEmSize, dpiX, dpiY, transform, isSideways, outlineThreshold, measuringMode, renderingMode)
    end
    def get_vertical_glyph_variants(this : IDWriteFontFace6*, glyphCount : UInt32, nominalGlyphIndices : UInt16*, verticalGlyphIndices : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_vertical_glyph_variants.call(this, glyphCount, nominalGlyphIndices, verticalGlyphIndices)
    end
    def has_vertical_glyph_variants(this : IDWriteFontFace6*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_vertical_glyph_variants.call(this)
    end
    def is_color_font(this : IDWriteFontFace6*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_color_font.call(this)
    end
    def get_color_palette_count(this : IDWriteFontFace6*) : UInt32
      @lpVtbl.try &.value.get_color_palette_count.call(this)
    end
    def get_palette_entry_count(this : IDWriteFontFace6*) : UInt32
      @lpVtbl.try &.value.get_palette_entry_count.call(this)
    end
    def get_palette_entries(this : IDWriteFontFace6*, colorPaletteIndex : UInt32, firstEntryIndex : UInt32, entryCount : UInt32, paletteEntries : Win32cr::Graphics::DirectWrite::DWRITE_COLOR_F*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_palette_entries.call(this, colorPaletteIndex, firstEntryIndex, entryCount, paletteEntries)
    end
    def get_recommended_rendering_mode_1_2(this : IDWriteFontFace6*, fontEmSize : Float32, dpiX : Float32, dpiY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, isSideways : Win32cr::Foundation::BOOL, outlineThreshold : Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE*, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_1_2.call(this, fontEmSize, dpiX, dpiY, transform, isSideways, outlineThreshold, measuringMode, renderingParams, renderingMode, gridFitMode)
    end
    def get_font_face_reference(this : IDWriteFontFace6*, fontFaceReference : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_face_reference.call(this, fontFaceReference)
    end
    def get_panose(this : IDWriteFontFace6*, panose : Win32cr::Graphics::DirectWrite::DWRITE_PANOSE*) : Void
      @lpVtbl.try &.value.get_panose.call(this, panose)
    end
    def get_weight(this : IDWriteFontFace6*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_WEIGHT
      @lpVtbl.try &.value.get_weight.call(this)
    end
    def get_stretch(this : IDWriteFontFace6*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STRETCH
      @lpVtbl.try &.value.get_stretch.call(this)
    end
    def get_style(this : IDWriteFontFace6*) : Win32cr::Graphics::DirectWrite::DWRITE_FONT_STYLE
      @lpVtbl.try &.value.get_style.call(this)
    end
    def get_family_names_1(this : IDWriteFontFace6*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_family_names_1.call(this, names)
    end
    def get_face_names_1(this : IDWriteFontFace6*, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_face_names_1.call(this, names)
    end
    def get_informational_strings(this : IDWriteFontFace6*, informationalStringID : Win32cr::Graphics::DirectWrite::DWRITE_INFORMATIONAL_STRING_ID, informationalStrings : Void**, exists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_informational_strings.call(this, informationalStringID, informationalStrings, exists)
    end
    def has_character(this : IDWriteFontFace6*, unicodeValue : UInt32) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_character.call(this, unicodeValue)
    end
    def get_recommended_rendering_mode_2_2(this : IDWriteFontFace6*, fontEmSize : Float32, dpiX : Float32, dpiY : Float32, transform : Win32cr::Graphics::DirectWrite::DWRITE_MATRIX*, isSideways : Win32cr::Foundation::BOOL, outlineThreshold : Win32cr::Graphics::DirectWrite::DWRITE_OUTLINE_THRESHOLD, measuringMode : Win32cr::Graphics::DirectWrite::DWRITE_MEASURING_MODE, renderingParams : Void*, renderingMode : Win32cr::Graphics::DirectWrite::DWRITE_RENDERING_MODE1*, gridFitMode : Win32cr::Graphics::DirectWrite::DWRITE_GRID_FIT_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recommended_rendering_mode_2_2.call(this, fontEmSize, dpiX, dpiY, transform, isSideways, outlineThreshold, measuringMode, renderingParams, renderingMode, gridFitMode)
    end
    def is_character_local(this : IDWriteFontFace6*, unicodeValue : UInt32) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_character_local.call(this, unicodeValue)
    end
    def is_glyph_local(this : IDWriteFontFace6*, glyphId : UInt16) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_glyph_local.call(this, glyphId)
    end
    def are_characters_local(this : IDWriteFontFace6*, characters : UInt16*, characterCount : UInt32, enqueueIfNotLocal : Win32cr::Foundation::BOOL, isLocal : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.are_characters_local.call(this, characters, characterCount, enqueueIfNotLocal, isLocal)
    end
    def are_glyphs_local(this : IDWriteFontFace6*, glyphIndices : UInt16*, glyphCount : UInt32, enqueueIfNotLocal : Win32cr::Foundation::BOOL, isLocal : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.are_glyphs_local.call(this, glyphIndices, glyphCount, enqueueIfNotLocal, isLocal)
    end
    def get_glyph_image_formats_1(this : IDWriteFontFace6*, glyphId : UInt16, pixelsPerEmFirst : UInt32, pixelsPerEmLast : UInt32, glyphImageFormats : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_image_formats_1.call(this, glyphId, pixelsPerEmFirst, pixelsPerEmLast, glyphImageFormats)
    end
    def get_glyph_image_formats_2(this : IDWriteFontFace6*) : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS
      @lpVtbl.try &.value.get_glyph_image_formats_2.call(this)
    end
    def get_glyph_image_data(this : IDWriteFontFace6*, glyphId : UInt16, pixelsPerEm : UInt32, glyphImageFormat : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_FORMATS, glyphData : Win32cr::Graphics::DirectWrite::DWRITE_GLYPH_IMAGE_DATA*, glyphDataContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_glyph_image_data.call(this, glyphId, pixelsPerEm, glyphImageFormat, glyphData, glyphDataContext)
    end
    def release_glyph_image_data(this : IDWriteFontFace6*, glyphDataContext : Void*) : Void
      @lpVtbl.try &.value.release_glyph_image_data.call(this, glyphDataContext)
    end
    def get_font_axis_value_count(this : IDWriteFontFace6*) : UInt32
      @lpVtbl.try &.value.get_font_axis_value_count.call(this)
    end
    def get_font_axis_values(this : IDWriteFontFace6*, fontAxisValues : Win32cr::Graphics::DirectWrite::DWRITE_FONT_AXIS_VALUE*, fontAxisValueCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_axis_values.call(this, fontAxisValues, fontAxisValueCount)
    end
    def has_variations(this : IDWriteFontFace6*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_variations.call(this)
    end
    def get_font_resource(this : IDWriteFontFace6*, fontResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font_resource.call(this, fontResource)
    end
    def equals(this : IDWriteFontFace6*, fontFace : Void*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.equals.call(this, fontFace)
    end
    def get_family_names_2(this : IDWriteFontFace6*, fontFamilyModel : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_family_names_2.call(this, fontFamilyModel, names)
    end
    def get_face_names_2(this : IDWriteFontFace6*, fontFamilyModel : Win32cr::Graphics::DirectWrite::DWRITE_FONT_FAMILY_MODEL, names : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_face_names_2.call(this, fontFamilyModel, names)
    end

  end

  @[Link("dwrite")]
  lib C
    fun DWriteCreateFactory(factoryType : Win32cr::Graphics::DirectWrite::DWRITE_FACTORY_TYPE, iid : LibC::GUID*, factory : Void**) : Win32cr::Foundation::HRESULT

  end
end