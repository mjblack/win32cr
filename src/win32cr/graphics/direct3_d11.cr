require "./../foundation.cr"
require "./dxgi/common.cr"
require "./../system/com.cr"
require "./direct3_d.cr"
require "./dxgi.cr"
require "./../security.cr"

module Win32cr::Graphics::Direct3D11
  alias PFN_D3D11_CREATE_DEVICE = Proc(Void*, Win32cr::Graphics::Direct3D::D3D_DRIVER_TYPE, Win32cr::Foundation::HINSTANCE, UInt32, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, UInt32, UInt32, Void**, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, Void**, Win32cr::Foundation::HRESULT)

  alias PFN_D3D11_CREATE_DEVICE_AND_SWAP_CHAIN = Proc(Void*, Win32cr::Graphics::Direct3D::D3D_DRIVER_TYPE, Win32cr::Foundation::HINSTANCE, UInt32, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, UInt32, UInt32, Win32cr::Graphics::Dxgi::DXGI_SWAP_CHAIN_DESC*, Void**, Void**, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, Void**, Win32cr::Foundation::HRESULT)

  D3D11_16BIT_INDEX_STRIP_CUT_VALUE = 65535_u32
  D3D11_32BIT_INDEX_STRIP_CUT_VALUE = 4294967295_u32
  D3D11_8BIT_INDEX_STRIP_CUT_VALUE = 255_u32
  D3D11_ARRAY_AXIS_ADDRESS_RANGE_BIT_COUNT = 9_u32
  D3D11_CLIP_OR_CULL_DISTANCE_COUNT = 8_u32
  D3D11_CLIP_OR_CULL_DISTANCE_ELEMENT_COUNT = 2_u32
  D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT = 14_u32
  D3D11_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS = 4_u32
  D3D11_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT = 15_u32
  D3D11_COMMONSHADER_CONSTANT_BUFFER_PARTIAL_UPDATE_EXTENTS_BYTE_ALIGNMENT = 16_u32
  D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS = 4_u32
  D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT = 15_u32
  D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST = 1_u32
  D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS = 1_u32
  D3D11_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT = 64_u32
  D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS = 4_u32
  D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT = 1_u32
  D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST = 1_u32
  D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS = 1_u32
  D3D11_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT = 32_u32
  D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS = 1_u32
  D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT = 128_u32
  D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST = 1_u32
  D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS = 1_u32
  D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT = 128_u32
  D3D11_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS = 1_u32
  D3D11_COMMONSHADER_SAMPLER_REGISTER_COUNT = 16_u32
  D3D11_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST = 1_u32
  D3D11_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS = 1_u32
  D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT = 16_u32
  D3D11_COMMONSHADER_SUBROUTINE_NESTING_LIMIT = 32_u32
  D3D11_COMMONSHADER_TEMP_REGISTER_COMPONENTS = 4_u32
  D3D11_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_COMMONSHADER_TEMP_REGISTER_COUNT = 4096_u32
  D3D11_COMMONSHADER_TEMP_REGISTER_READS_PER_INST = 3_u32
  D3D11_COMMONSHADER_TEMP_REGISTER_READ_PORTS = 3_u32
  D3D11_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX = 10_u32
  D3D11_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN = -10_i32
  D3D11_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE = -8_i32
  D3D11_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE = 7_u32
  D3D11_CS_4_X_BUCKET00_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 256_u32
  D3D11_CS_4_X_BUCKET00_MAX_NUM_THREADS_PER_GROUP = 64_u32
  D3D11_CS_4_X_BUCKET01_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 240_u32
  D3D11_CS_4_X_BUCKET01_MAX_NUM_THREADS_PER_GROUP = 68_u32
  D3D11_CS_4_X_BUCKET02_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 224_u32
  D3D11_CS_4_X_BUCKET02_MAX_NUM_THREADS_PER_GROUP = 72_u32
  D3D11_CS_4_X_BUCKET03_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 208_u32
  D3D11_CS_4_X_BUCKET03_MAX_NUM_THREADS_PER_GROUP = 76_u32
  D3D11_CS_4_X_BUCKET04_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 192_u32
  D3D11_CS_4_X_BUCKET04_MAX_NUM_THREADS_PER_GROUP = 84_u32
  D3D11_CS_4_X_BUCKET05_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 176_u32
  D3D11_CS_4_X_BUCKET05_MAX_NUM_THREADS_PER_GROUP = 92_u32
  D3D11_CS_4_X_BUCKET06_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 160_u32
  D3D11_CS_4_X_BUCKET06_MAX_NUM_THREADS_PER_GROUP = 100_u32
  D3D11_CS_4_X_BUCKET07_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 144_u32
  D3D11_CS_4_X_BUCKET07_MAX_NUM_THREADS_PER_GROUP = 112_u32
  D3D11_CS_4_X_BUCKET08_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 128_u32
  D3D11_CS_4_X_BUCKET08_MAX_NUM_THREADS_PER_GROUP = 128_u32
  D3D11_CS_4_X_BUCKET09_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 112_u32
  D3D11_CS_4_X_BUCKET09_MAX_NUM_THREADS_PER_GROUP = 144_u32
  D3D11_CS_4_X_BUCKET10_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 96_u32
  D3D11_CS_4_X_BUCKET10_MAX_NUM_THREADS_PER_GROUP = 168_u32
  D3D11_CS_4_X_BUCKET11_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 80_u32
  D3D11_CS_4_X_BUCKET11_MAX_NUM_THREADS_PER_GROUP = 204_u32
  D3D11_CS_4_X_BUCKET12_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 64_u32
  D3D11_CS_4_X_BUCKET12_MAX_NUM_THREADS_PER_GROUP = 256_u32
  D3D11_CS_4_X_BUCKET13_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 48_u32
  D3D11_CS_4_X_BUCKET13_MAX_NUM_THREADS_PER_GROUP = 340_u32
  D3D11_CS_4_X_BUCKET14_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 32_u32
  D3D11_CS_4_X_BUCKET14_MAX_NUM_THREADS_PER_GROUP = 512_u32
  D3D11_CS_4_X_BUCKET15_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 16_u32
  D3D11_CS_4_X_BUCKET15_MAX_NUM_THREADS_PER_GROUP = 768_u32
  D3D11_CS_4_X_DISPATCH_MAX_THREAD_GROUPS_IN_Z_DIMENSION = 1_u32
  D3D11_CS_4_X_RAW_UAV_BYTE_ALIGNMENT = 256_u32
  D3D11_CS_4_X_THREAD_GROUP_MAX_THREADS_PER_GROUP = 768_u32
  D3D11_CS_4_X_THREAD_GROUP_MAX_X = 768_u32
  D3D11_CS_4_X_THREAD_GROUP_MAX_Y = 768_u32
  D3D11_CS_4_X_UAV_REGISTER_COUNT = 1_u32
  D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION = 65535_u32
  D3D11_CS_TGSM_REGISTER_COUNT = 8192_u32
  D3D11_CS_TGSM_REGISTER_READS_PER_INST = 1_u32
  D3D11_CS_TGSM_RESOURCE_REGISTER_COMPONENTS = 1_u32
  D3D11_CS_TGSM_RESOURCE_REGISTER_READ_PORTS = 1_u32
  D3D11_CS_THREADGROUPID_REGISTER_COMPONENTS = 3_u32
  D3D11_CS_THREADGROUPID_REGISTER_COUNT = 1_u32
  D3D11_CS_THREADIDINGROUPFLATTENED_REGISTER_COMPONENTS = 1_u32
  D3D11_CS_THREADIDINGROUPFLATTENED_REGISTER_COUNT = 1_u32
  D3D11_CS_THREADIDINGROUP_REGISTER_COMPONENTS = 3_u32
  D3D11_CS_THREADIDINGROUP_REGISTER_COUNT = 1_u32
  D3D11_CS_THREADID_REGISTER_COMPONENTS = 3_u32
  D3D11_CS_THREADID_REGISTER_COUNT = 1_u32
  D3D11_CS_THREAD_GROUP_MAX_THREADS_PER_GROUP = 1024_u32
  D3D11_CS_THREAD_GROUP_MAX_X = 1024_u32
  D3D11_CS_THREAD_GROUP_MAX_Y = 1024_u32
  D3D11_CS_THREAD_GROUP_MAX_Z = 64_u32
  D3D11_CS_THREAD_GROUP_MIN_X = 1_u32
  D3D11_CS_THREAD_GROUP_MIN_Y = 1_u32
  D3D11_CS_THREAD_GROUP_MIN_Z = 1_u32
  D3D11_CS_THREAD_LOCAL_TEMP_REGISTER_POOL = 16384_u32
  D3D11_DEFAULT_BLEND_FACTOR_ALPHA = 1
  D3D11_DEFAULT_BLEND_FACTOR_BLUE = 1
  D3D11_DEFAULT_BLEND_FACTOR_GREEN = 1
  D3D11_DEFAULT_BLEND_FACTOR_RED = 1
  D3D11_DEFAULT_BORDER_COLOR_COMPONENT = 0
  D3D11_DEFAULT_DEPTH_BIAS = 0_u32
  D3D11_DEFAULT_DEPTH_BIAS_CLAMP = 0
  D3D11_DEFAULT_MAX_ANISOTROPY = 16_u32
  D3D11_DEFAULT_MIP_LOD_BIAS = 0
  D3D11_DEFAULT_RENDER_TARGET_ARRAY_INDEX = 0_u32
  D3D11_DEFAULT_SAMPLE_MASK = 4294967295_u32
  D3D11_DEFAULT_SCISSOR_ENDX = 0_u32
  D3D11_DEFAULT_SCISSOR_ENDY = 0_u32
  D3D11_DEFAULT_SCISSOR_STARTX = 0_u32
  D3D11_DEFAULT_SCISSOR_STARTY = 0_u32
  D3D11_DEFAULT_SLOPE_SCALED_DEPTH_BIAS = 0
  D3D11_DEFAULT_STENCIL_READ_MASK = 255_u32
  D3D11_DEFAULT_STENCIL_REFERENCE = 0_u32
  D3D11_DEFAULT_STENCIL_WRITE_MASK = 255_u32
  D3D11_DEFAULT_VIEWPORT_AND_SCISSORRECT_INDEX = 0_u32
  D3D11_DEFAULT_VIEWPORT_HEIGHT = 0_u32
  D3D11_DEFAULT_VIEWPORT_MAX_DEPTH = 0
  D3D11_DEFAULT_VIEWPORT_MIN_DEPTH = 0
  D3D11_DEFAULT_VIEWPORT_TOPLEFTX = 0_u32
  D3D11_DEFAULT_VIEWPORT_TOPLEFTY = 0_u32
  D3D11_DEFAULT_VIEWPORT_WIDTH = 0_u32
  D3D11_DS_INPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS = 3968_u32
  D3D11_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENTS = 4_u32
  D3D11_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_DS_INPUT_CONTROL_POINT_REGISTER_COUNT = 32_u32
  D3D11_DS_INPUT_CONTROL_POINT_REGISTER_READS_PER_INST = 2_u32
  D3D11_DS_INPUT_CONTROL_POINT_REGISTER_READ_PORTS = 1_u32
  D3D11_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENTS = 3_u32
  D3D11_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_DS_INPUT_DOMAIN_POINT_REGISTER_COUNT = 1_u32
  D3D11_DS_INPUT_DOMAIN_POINT_REGISTER_READS_PER_INST = 2_u32
  D3D11_DS_INPUT_DOMAIN_POINT_REGISTER_READ_PORTS = 1_u32
  D3D11_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENTS = 4_u32
  D3D11_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_DS_INPUT_PATCH_CONSTANT_REGISTER_COUNT = 32_u32
  D3D11_DS_INPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST = 2_u32
  D3D11_DS_INPUT_PATCH_CONSTANT_REGISTER_READ_PORTS = 1_u32
  D3D11_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS = 1_u32
  D3D11_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_DS_INPUT_PRIMITIVE_ID_REGISTER_COUNT = 1_u32
  D3D11_DS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST = 2_u32
  D3D11_DS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS = 1_u32
  D3D11_DS_OUTPUT_REGISTER_COMPONENTS = 4_u32
  D3D11_DS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_DS_OUTPUT_REGISTER_COUNT = 32_u32
  D3D11_FLOAT16_FUSED_TOLERANCE_IN_ULP = 0.6
  D3D11_FLOAT32_MAX = 3.4028235E+38
  D3D11_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP = 0.6
  D3D11_FLOAT_TO_SRGB_EXPONENT_DENOMINATOR = 2.4
  D3D11_FLOAT_TO_SRGB_EXPONENT_NUMERATOR = 1
  D3D11_FLOAT_TO_SRGB_OFFSET = 0.055
  D3D11_FLOAT_TO_SRGB_SCALE_1 = 12.92
  D3D11_FLOAT_TO_SRGB_SCALE_2 = 1.055
  D3D11_FLOAT_TO_SRGB_THRESHOLD = 0.0031308
  D3D11_FTOI_INSTRUCTION_MAX_INPUT = 2.1474836E+09
  D3D11_FTOI_INSTRUCTION_MIN_INPUT = -2.1474836E+09
  D3D11_FTOU_INSTRUCTION_MAX_INPUT = 4.2949673E+09
  D3D11_FTOU_INSTRUCTION_MIN_INPUT = 0
  D3D11_GS_INPUT_INSTANCE_ID_READS_PER_INST = 2_u32
  D3D11_GS_INPUT_INSTANCE_ID_READ_PORTS = 1_u32
  D3D11_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENTS = 1_u32
  D3D11_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_GS_INPUT_INSTANCE_ID_REGISTER_COUNT = 1_u32
  D3D11_GS_INPUT_PRIM_CONST_REGISTER_COMPONENTS = 1_u32
  D3D11_GS_INPUT_PRIM_CONST_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_GS_INPUT_PRIM_CONST_REGISTER_COUNT = 1_u32
  D3D11_GS_INPUT_PRIM_CONST_REGISTER_READS_PER_INST = 2_u32
  D3D11_GS_INPUT_PRIM_CONST_REGISTER_READ_PORTS = 1_u32
  D3D11_GS_INPUT_REGISTER_COMPONENTS = 4_u32
  D3D11_GS_INPUT_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_GS_INPUT_REGISTER_COUNT = 32_u32
  D3D11_GS_INPUT_REGISTER_READS_PER_INST = 2_u32
  D3D11_GS_INPUT_REGISTER_READ_PORTS = 1_u32
  D3D11_GS_INPUT_REGISTER_VERTICES = 32_u32
  D3D11_GS_MAX_INSTANCE_COUNT = 32_u32
  D3D11_GS_MAX_OUTPUT_VERTEX_COUNT_ACROSS_INSTANCES = 1024_u32
  D3D11_GS_OUTPUT_ELEMENTS = 32_u32
  D3D11_GS_OUTPUT_REGISTER_COMPONENTS = 4_u32
  D3D11_GS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_GS_OUTPUT_REGISTER_COUNT = 32_u32
  D3D11_HS_CONTROL_POINT_PHASE_INPUT_REGISTER_COUNT = 32_u32
  D3D11_HS_CONTROL_POINT_PHASE_OUTPUT_REGISTER_COUNT = 32_u32
  D3D11_HS_CONTROL_POINT_REGISTER_COMPONENTS = 4_u32
  D3D11_HS_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_HS_CONTROL_POINT_REGISTER_READS_PER_INST = 2_u32
  D3D11_HS_CONTROL_POINT_REGISTER_READ_PORTS = 1_u32
  D3D11_HS_FORK_PHASE_INSTANCE_COUNT_UPPER_BOUND = 4294967295_u32
  D3D11_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENTS = 1_u32
  D3D11_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COUNT = 1_u32
  D3D11_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READS_PER_INST = 2_u32
  D3D11_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READ_PORTS = 1_u32
  D3D11_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENTS = 1_u32
  D3D11_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COUNT = 1_u32
  D3D11_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READS_PER_INST = 2_u32
  D3D11_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READ_PORTS = 1_u32
  D3D11_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS = 1_u32
  D3D11_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_HS_INPUT_PRIMITIVE_ID_REGISTER_COUNT = 1_u32
  D3D11_HS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST = 2_u32
  D3D11_HS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS = 1_u32
  D3D11_HS_JOIN_PHASE_INSTANCE_COUNT_UPPER_BOUND = 4294967295_u32
  D3D11_HS_MAXTESSFACTOR_LOWER_BOUND = 1
  D3D11_HS_MAXTESSFACTOR_UPPER_BOUND = 64
  D3D11_HS_OUTPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS = 3968_u32
  D3D11_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENTS = 1_u32
  D3D11_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COUNT = 1_u32
  D3D11_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READS_PER_INST = 2_u32
  D3D11_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READ_PORTS = 1_u32
  D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENTS = 4_u32
  D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COUNT = 32_u32
  D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST = 2_u32
  D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READ_PORTS = 1_u32
  D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_SCALAR_COMPONENTS = 128_u32
  D3D11_IA_DEFAULT_INDEX_BUFFER_OFFSET_IN_BYTES = 0_u32
  D3D11_IA_DEFAULT_PRIMITIVE_TOPOLOGY = 0_u32
  D3D11_IA_DEFAULT_VERTEX_BUFFER_OFFSET_IN_BYTES = 0_u32
  D3D11_IA_INDEX_INPUT_RESOURCE_SLOT_COUNT = 1_u32
  D3D11_IA_INSTANCE_ID_BIT_COUNT = 32_u32
  D3D11_IA_INTEGER_ARITHMETIC_BIT_COUNT = 32_u32
  D3D11_IA_PATCH_MAX_CONTROL_POINT_COUNT = 32_u32
  D3D11_IA_PRIMITIVE_ID_BIT_COUNT = 32_u32
  D3D11_IA_VERTEX_ID_BIT_COUNT = 32_u32
  D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT = 32_u32
  D3D11_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS = 128_u32
  D3D11_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT = 32_u32
  D3D11_INTEGER_DIVIDE_BY_ZERO_QUOTIENT = 4294967295_u32
  D3D11_INTEGER_DIVIDE_BY_ZERO_REMAINDER = 4294967295_u32
  D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL = 4294967295_u32
  D3D11_KEEP_UNORDERED_ACCESS_VIEWS = 4294967295_u32
  D3D11_LINEAR_GAMMA = 1
  D3D11_MAJOR_VERSION = 11_u32
  D3D11_MAX_BORDER_COLOR_COMPONENT = 1
  D3D11_MAX_DEPTH = 1
  D3D11_MAX_MAXANISOTROPY = 16_u32
  D3D11_MAX_MULTISAMPLE_SAMPLE_COUNT = 32_u32
  D3D11_MAX_POSITION_VALUE = 3.4028236E+34
  D3D11_MAX_TEXTURE_DIMENSION_2_TO_EXP = 17_u32
  D3D11_MINOR_VERSION = 0_u32
  D3D11_MIN_BORDER_COLOR_COMPONENT = 0
  D3D11_MIN_DEPTH = 0
  D3D11_MIN_MAXANISOTROPY = 0_u32
  D3D11_MIP_LOD_BIAS_MAX = 15.99
  D3D11_MIP_LOD_BIAS_MIN = -16
  D3D11_MIP_LOD_FRACTIONAL_BIT_COUNT = 8_u32
  D3D11_MIP_LOD_RANGE_BIT_COUNT = 8_u32
  D3D11_MULTISAMPLE_ANTIALIAS_LINE_WIDTH = 1.4
  D3D11_NONSAMPLE_FETCH_OUT_OF_RANGE_ACCESS_RESULT = 0_u32
  D3D11_PIXEL_ADDRESS_RANGE_BIT_COUNT = 15_u32
  D3D11_PRE_SCISSOR_PIXEL_ADDRESS_RANGE_BIT_COUNT = 16_u32
  D3D11_PS_CS_UAV_REGISTER_COMPONENTS = 1_u32
  D3D11_PS_CS_UAV_REGISTER_COUNT = 8_u32
  D3D11_PS_CS_UAV_REGISTER_READS_PER_INST = 1_u32
  D3D11_PS_CS_UAV_REGISTER_READ_PORTS = 1_u32
  D3D11_PS_FRONTFACING_DEFAULT_VALUE = 4294967295_u32
  D3D11_PS_FRONTFACING_FALSE_VALUE = 0_u32
  D3D11_PS_FRONTFACING_TRUE_VALUE = 4294967295_u32
  D3D11_PS_INPUT_REGISTER_COMPONENTS = 4_u32
  D3D11_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_PS_INPUT_REGISTER_COUNT = 32_u32
  D3D11_PS_INPUT_REGISTER_READS_PER_INST = 2_u32
  D3D11_PS_INPUT_REGISTER_READ_PORTS = 1_u32
  D3D11_PS_LEGACY_PIXEL_CENTER_FRACTIONAL_COMPONENT = 0
  D3D11_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS = 1_u32
  D3D11_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_PS_OUTPUT_DEPTH_REGISTER_COUNT = 1_u32
  D3D11_PS_OUTPUT_MASK_REGISTER_COMPONENTS = 1_u32
  D3D11_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_PS_OUTPUT_MASK_REGISTER_COUNT = 1_u32
  D3D11_PS_OUTPUT_REGISTER_COMPONENTS = 4_u32
  D3D11_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_PS_OUTPUT_REGISTER_COUNT = 8_u32
  D3D11_PS_PIXEL_CENTER_FRACTIONAL_COMPONENT = 0.5
  D3D11_RAW_UAV_SRV_BYTE_ALIGNMENT = 16_u32
  D3D11_REQ_BLEND_OBJECT_COUNT_PER_DEVICE = 4096_u32
  D3D11_REQ_BUFFER_RESOURCE_TEXEL_COUNT_2_TO_EXP = 27_u32
  D3D11_REQ_CONSTANT_BUFFER_ELEMENT_COUNT = 4096_u32
  D3D11_REQ_DEPTH_STENCIL_OBJECT_COUNT_PER_DEVICE = 4096_u32
  D3D11_REQ_DRAWINDEXED_INDEX_COUNT_2_TO_EXP = 32_u32
  D3D11_REQ_DRAW_VERTEX_COUNT_2_TO_EXP = 32_u32
  D3D11_REQ_FILTERING_HW_ADDRESSABLE_RESOURCE_DIMENSION = 16384_u32
  D3D11_REQ_GS_INVOCATION_32BIT_OUTPUT_COMPONENT_LIMIT = 1024_u32
  D3D11_REQ_IMMEDIATE_CONSTANT_BUFFER_ELEMENT_COUNT = 4096_u32
  D3D11_REQ_MAXANISOTROPY = 16_u32
  D3D11_REQ_MIP_LEVELS = 15_u32
  D3D11_REQ_MULTI_ELEMENT_STRUCTURE_SIZE_IN_BYTES = 2048_u32
  D3D11_REQ_RASTERIZER_OBJECT_COUNT_PER_DEVICE = 4096_u32
  D3D11_REQ_RENDER_TO_BUFFER_WINDOW_WIDTH = 16384_u32
  D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_A_TERM = 128_u32
  D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_B_TERM = 0.25
  D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_C_TERM = 2048_u32
  D3D11_REQ_RESOURCE_VIEW_COUNT_PER_DEVICE_2_TO_EXP = 20_u32
  D3D11_REQ_SAMPLER_OBJECT_COUNT_PER_DEVICE = 4096_u32
  D3D11_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION = 2048_u32
  D3D11_REQ_TEXTURE1D_U_DIMENSION = 16384_u32
  D3D11_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION = 2048_u32
  D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION = 16384_u32
  D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION = 2048_u32
  D3D11_REQ_TEXTURECUBE_DIMENSION = 16384_u32
  D3D11_RESINFO_INSTRUCTION_MISSING_COMPONENT_RETVAL = 0_u32
  D3D11_SHADER_MAJOR_VERSION = 5_u32
  D3D11_SHADER_MAX_INSTANCES = 65535_u32
  D3D11_SHADER_MAX_INTERFACES = 253_u32
  D3D11_SHADER_MAX_INTERFACE_CALL_SITES = 4096_u32
  D3D11_SHADER_MAX_TYPES = 65535_u32
  D3D11_SHADER_MINOR_VERSION = 0_u32
  D3D11_SHIFT_INSTRUCTION_PAD_VALUE = 0_u32
  D3D11_SHIFT_INSTRUCTION_SHIFT_VALUE_BIT_COUNT = 5_u32
  D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT = 8_u32
  D3D11_SO_BUFFER_MAX_STRIDE_IN_BYTES = 2048_u32
  D3D11_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES = 512_u32
  D3D11_SO_BUFFER_SLOT_COUNT = 4_u32
  D3D11_SO_DDI_REGISTER_INDEX_DENOTING_GAP = 4294967295_u32
  D3D11_SO_NO_RASTERIZED_STREAM = 4294967295_u32
  D3D11_SO_OUTPUT_COMPONENT_COUNT = 128_u32
  D3D11_SO_STREAM_COUNT = 4_u32
  D3D11_SPEC_DATE_DAY = 16_u32
  D3D11_SPEC_DATE_MONTH = 5_u32
  D3D11_SPEC_DATE_YEAR = 2011_u32
  D3D11_SPEC_VERSION = 1.07
  D3D11_SRGB_GAMMA = 2.2
  D3D11_SRGB_TO_FLOAT_DENOMINATOR_1 = 12.92
  D3D11_SRGB_TO_FLOAT_DENOMINATOR_2 = 1.055
  D3D11_SRGB_TO_FLOAT_EXPONENT = 2.4
  D3D11_SRGB_TO_FLOAT_OFFSET = 0.055
  D3D11_SRGB_TO_FLOAT_THRESHOLD = 0.04045
  D3D11_SRGB_TO_FLOAT_TOLERANCE_IN_ULP = 0.5
  D3D11_STANDARD_COMPONENT_BIT_COUNT = 32_u32
  D3D11_STANDARD_COMPONENT_BIT_COUNT_DOUBLED = 64_u32
  D3D11_STANDARD_MAXIMUM_ELEMENT_ALIGNMENT_BYTE_MULTIPLE = 4_u32
  D3D11_STANDARD_PIXEL_COMPONENT_COUNT = 128_u32
  D3D11_STANDARD_PIXEL_ELEMENT_COUNT = 32_u32
  D3D11_STANDARD_VECTOR_SIZE = 4_u32
  D3D11_STANDARD_VERTEX_ELEMENT_COUNT = 32_u32
  D3D11_STANDARD_VERTEX_TOTAL_COMPONENT_COUNT = 64_u32
  D3D11_SUBPIXEL_FRACTIONAL_BIT_COUNT = 8_u32
  D3D11_SUBTEXEL_FRACTIONAL_BIT_COUNT = 8_u32
  D3D11_TESSELLATOR_MAX_EVEN_TESSELLATION_FACTOR = 64_u32
  D3D11_TESSELLATOR_MAX_ISOLINE_DENSITY_TESSELLATION_FACTOR = 64_u32
  D3D11_TESSELLATOR_MAX_ODD_TESSELLATION_FACTOR = 63_u32
  D3D11_TESSELLATOR_MAX_TESSELLATION_FACTOR = 64_u32
  D3D11_TESSELLATOR_MIN_EVEN_TESSELLATION_FACTOR = 2_u32
  D3D11_TESSELLATOR_MIN_ISOLINE_DENSITY_TESSELLATION_FACTOR = 1_u32
  D3D11_TESSELLATOR_MIN_ODD_TESSELLATION_FACTOR = 1_u32
  D3D11_TEXEL_ADDRESS_RANGE_BIT_COUNT = 16_u32
  D3D11_UNBOUND_MEMORY_ACCESS_RESULT = 0_u32
  D3D11_VIEWPORT_AND_SCISSORRECT_MAX_INDEX = 15_u32
  D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE = 16_u32
  D3D11_VIEWPORT_BOUNDS_MAX = 32767_u32
  D3D11_VIEWPORT_BOUNDS_MIN = -32768_i32
  D3D11_VS_INPUT_REGISTER_COMPONENTS = 4_u32
  D3D11_VS_INPUT_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_VS_INPUT_REGISTER_COUNT = 32_u32
  D3D11_VS_INPUT_REGISTER_READS_PER_INST = 2_u32
  D3D11_VS_INPUT_REGISTER_READ_PORTS = 1_u32
  D3D11_VS_OUTPUT_REGISTER_COMPONENTS = 4_u32
  D3D11_VS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = 32_u32
  D3D11_VS_OUTPUT_REGISTER_COUNT = 32_u32
  D3D11_WHQL_CONTEXT_COUNT_FOR_RESOURCE_LIMIT = 10_u32
  D3D11_WHQL_DRAWINDEXED_INDEX_COUNT_2_TO_EXP = 25_u32
  D3D11_WHQL_DRAW_VERTEX_COUNT_2_TO_EXP = 25_u32
  D3D11_1_UAV_SLOT_COUNT = 64_u32
  D3D11_2_TILED_RESOURCE_TILE_SIZE_IN_BYTES = 65536_u32
  D3D11_4_VIDEO_DECODER_MAX_HISTOGRAM_COMPONENTS = 4_u32
  D3D11_4_VIDEO_DECODER_HISTOGRAM_OFFSET_ALIGNMENT = 256_u32
  FACD3D11_ = 2172_u32
  D3D11_APPEND_ALIGNED_ELEMENT = 4294967295_u32
  D3D11_FILTER_REDUCTION_TYPE_MASK = 3_u32
  D3D11_FILTER_REDUCTION_TYPE_SHIFT = 7_u32
  D3D11_FILTER_TYPE_MASK = 3_u32
  D3D11_MIN_FILTER_SHIFT = 4_u32
  D3D11_MAG_FILTER_SHIFT = 2_u32
  D3D11_MIP_FILTER_SHIFT = 0_u32
  D3D11_COMPARISON_FILTERING_BIT = 128_u32
  D3D11_ANISOTROPIC_FILTERING_BIT = 64_u32
  D3D11_DECODER_PROFILE_MPEG2_MOCOMP = "e6a9f44b-61b0-4563-9ea4-63d2a3c6fe66"
  D3D11_DECODER_PROFILE_MPEG2_IDCT = "bf22ad00-03ea-4690-8077-473346209b7e"
  D3D11_DECODER_PROFILE_MPEG2_VLD = "ee27417f-5e28-4e65-beea-1d26b508adc9"
  D3D11_DECODER_PROFILE_MPEG1_VLD = "6f3ec719-3735-42cc-8063-65cc3cb36616"
  D3D11_DECODER_PROFILE_MPEG2and1_VLD = "86695f12-340e-4f04-9fd3-9253dd327460"
  D3D11_DECODER_PROFILE_H264_MOCOMP_NOFGT = "1b81be64-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_H264_MOCOMP_FGT = "1b81be65-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_H264_IDCT_NOFGT = "1b81be66-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_H264_IDCT_FGT = "1b81be67-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_H264_VLD_NOFGT = "1b81be68-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_H264_VLD_FGT = "1b81be69-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_H264_VLD_WITHFMOASO_NOFGT = "d5f04ff9-3418-45d8-9561-32a76aae2ddd"
  D3D11_DECODER_PROFILE_H264_VLD_STEREO_PROGRESSIVE_NOFGT = "d79be8da-0cf1-4c81-b82a-69a4e236f43d"
  D3D11_DECODER_PROFILE_H264_VLD_STEREO_NOFGT = "f9aaccbb-c2b6-4cfc-8779-5707b1760552"
  D3D11_DECODER_PROFILE_H264_VLD_MULTIVIEW_NOFGT = "705b9d82-76cf-49d6-b7e6-ac8872db013c"
  D3D11_DECODER_PROFILE_WMV8_POSTPROC = "1b81be80-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_WMV8_MOCOMP = "1b81be81-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_WMV9_POSTPROC = "1b81be90-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_WMV9_MOCOMP = "1b81be91-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_WMV9_IDCT = "1b81be94-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_VC1_POSTPROC = "1b81bea0-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_VC1_MOCOMP = "1b81bea1-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_VC1_IDCT = "1b81bea2-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_VC1_VLD = "1b81bea3-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_VC1_D2010 = "1b81bea4-a0c7-11d3-b984-00c04f2e73c5"
  D3D11_DECODER_PROFILE_MPEG4PT2_VLD_SIMPLE = "efd64d74-c9e8-41d7-a5e9-e9b0e39fa319"
  D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_NOGMC = "ed418a9f-010d-4eda-9ae3-9a65358d8d2e"
  D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_GMC = "ab998b5b-4258-44a9-9feb-94e597a6baae"
  D3D11_DECODER_PROFILE_HEVC_VLD_MAIN = "5b11d51b-2f4c-4452-bcc3-09f2a1160cc0"
  D3D11_DECODER_PROFILE_HEVC_VLD_MAIN10 = "107af0e0-ef1a-4d19-aba8-67a163073d13"
  D3D11_DECODER_PROFILE_VP9_VLD_PROFILE0 = "463707f8-a1d0-4585-876d-83aa6d60b89e"
  D3D11_DECODER_PROFILE_VP9_VLD_10BIT_PROFILE2 = "a4c749ef-6ecf-48aa-8448-50a7a1165ff7"
  D3D11_DECODER_PROFILE_VP8_VLD = "90b899ea-3a62-4705-88b3-8df04b2744e7"
  D3D11_DECODER_PROFILE_AV1_VLD_PROFILE0 = "b8be4ccb-cf53-46ba-8d59-d6b8a6da5d2a"
  D3D11_DECODER_PROFILE_AV1_VLD_PROFILE1 = "6936ff0f-45b1-4163-9cc1-646ef6946108"
  D3D11_DECODER_PROFILE_AV1_VLD_PROFILE2 = "0c5f2aa1-e541-4089-bb7b-98110a19d7c8"
  D3D11_DECODER_PROFILE_AV1_VLD_12BIT_PROFILE2 = "17127009-a00f-4ce1-994e-bf4081f6f3f0"
  D3D11_DECODER_PROFILE_AV1_VLD_12BIT_PROFILE2_420 = "2d80bed6-9cac-4835-9e91-327bbc4f9ee8"
  D3D11_CRYPTO_TYPE_AES128_CTR = "9b6bd711-4f74-41c9-9e7b-0be2d7d93b4f"
  D3D11_DECODER_ENCRYPTION_HW_CENC = "89d6ac4f-09f2-4229-b2cd-37740a6dfd81"
  D3D11_DECODER_BITSTREAM_ENCRYPTION_TYPE_CENC = "b0405235-c13d-44f2-9ae5-dd48e08e5b67"
  D3D11_DECODER_BITSTREAM_ENCRYPTION_TYPE_CBCS = "422d9319-9d21-4bb7-9371-faf5a82c3e04"
  D3D11_KEY_EXCHANGE_HW_PROTECTION = "b1170d8a-628d-4da3-ad3b-82ddb08b4970"
  D3D11_AUTHENTICATED_QUERY_PROTECTION = "a84eb584-c495-48aa-b94d-8bd2d6fbce05"
  D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE = "bc1b18a5-b1fb-42ab-bd94-b5828b4bf7be"
  D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE = "ec1c539d-8cff-4e2a-bcc4-f5692f99f480"
  D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION = "2634499e-d018-4d74-ac17-7f724059528d"
  D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT = "0db207b3-9450-46a6-82de-1b96d44f9cf2"
  D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS = "649bbadb-f0f4-4639-a15b-24393fc3abac"
  D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT = "012f0bd6-e662-4474-befd-aa53e5143c6d"
  D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT = "2c042b5e-8c07-46d5-aabe-8f75cbad4c31"
  D3D11_AUTHENTICATED_QUERY_OUTPUT_ID = "839ddca3-9b4e-41e4-b053-892bd2a11ee7"
  D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ATTRIBUTES = "6214d9d2-432c-4abb-9fce-216eea269e3b"
  D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID_COUNT = "b30f7066-203c-4b07-93fc-ceaafd61241e"
  D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID = "f83a5958-e986-4bda-beb0-411f6a7a01b7"
  D3D11_AUTHENTICATED_QUERY_CURRENT_ENCRYPTION_WHEN_ACCESSIBLE = "ec1791c7-dad3-4f15-9ec3-faa93d60d4f0"
  D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE = "06114bdb-3523-470a-8dca-fbc2845154f0"
  D3D11_AUTHENTICATED_CONFIGURE_PROTECTION = "50455658-3f47-4362-bf99-bfdfcde9ed29"
  D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION = "6346cc54-2cfc-4ad4-8224-d15837de7700"
  D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE = "0772d047-1b40-48e8-9ca6-b5f510de9f01"
  D3D11_AUTHENTICATED_CONFIGURE_ENCRYPTION_WHEN_ACCESSIBLE = "41fff286-6ae0-4d43-9d55-a46e9efd158a"
  D3D11_KEY_EXCHANGE_RSAES_OAEP = "c1949895-d72a-4a1d-8e5d-ed857d171520"
  D3D11_SDK_VERSION = 7_u32
  D3D11_PACKED_TILE = 4294967295_u32
  D3D11_SDK_LAYERS_VERSION = 1_u32
  D3D11_DEBUG_FEATURE_FLUSH_PER_RENDER_OP = 1_u32
  D3D11_DEBUG_FEATURE_FINISH_PER_RENDER_OP = 2_u32
  D3D11_DEBUG_FEATURE_PRESENT_PER_RENDER_OP = 4_u32
  D3D11_DEBUG_FEATURE_ALWAYS_DISCARD_OFFERED_RESOURCE = 8_u32
  D3D11_DEBUG_FEATURE_NEVER_DISCARD_OFFERED_RESOURCE = 16_u32
  D3D11_DEBUG_FEATURE_AVOID_BEHAVIOR_CHANGING_DEBUG_AIDS = 64_u32
  D3D11_DEBUG_FEATURE_DISABLE_TILED_RESOURCE_MAPPING_TRACKING_AND_VALIDATION = 128_u32
  DXGI_DEBUG_D3D11 = "4b99317b-ac39-4aa6-bb0b-baa04784798f"
  D3D11_REGKEY_PATH = "Software\\Microsoft\\Direct3D"
  D3D11_MUTE_DEBUG_OUTPUT = "MuteDebugOutput"
  D3D11_ENABLE_BREAK_ON_MESSAGE = "EnableBreakOnMessage"
  D3D11_INFOQUEUE_STORAGE_FILTER_OVERRIDE = "InfoQueueStorageFilterOverride"
  D3D11_MUTE_CATEGORY = "Mute_CATEGORY_%s"
  D3D11_MUTE_SEVERITY = "Mute_SEVERITY_%s"
  D3D11_MUTE_ID_STRING = "Mute_ID_%s"
  D3D11_MUTE_ID_DECIMAL = "Mute_ID_%d"
  D3D11_UNMUTE_SEVERITY_INFO = "Unmute_SEVERITY_INFO"
  D3D11_BREAKON_CATEGORY = "BreakOn_CATEGORY_%s"
  D3D11_BREAKON_SEVERITY = "BreakOn_SEVERITY_%s"
  D3D11_BREAKON_ID_STRING = "BreakOn_ID_%s"
  D3D11_BREAKON_ID_DECIMAL = "BreakOn_ID_%d"
  D3D11_APPSIZE_STRING = "Size"
  D3D11_APPNAME_STRING = "Name"
  D3D11_FORCE_DEBUGGABLE = "ForceDebuggable"
  D3D11_FORCE_SHADER_SKIP_OPTIMIZATION = "ForceShaderSkipOptimization"
  D3D11_INFO_QUEUE_DEFAULT_MESSAGE_COUNT_LIMIT = 1024_u32
  D3D_RETURN_PARAMETER_INDEX = -1_i32
  D3D_SHADER_REQUIRES_DOUBLES = 1_u32
  D3D_SHADER_REQUIRES_EARLY_DEPTH_STENCIL = 2_u32
  D3D_SHADER_REQUIRES_UAVS_AT_EVERY_STAGE = 4_u32
  D3D_SHADER_REQUIRES_64_UAVS = 8_u32
  D3D_SHADER_REQUIRES_MINIMUM_PRECISION = 16_u32
  D3D_SHADER_REQUIRES_11_1_DOUBLE_EXTENSIONS = 32_u32
  D3D_SHADER_REQUIRES_11_1_SHADER_EXTENSIONS = 64_u32
  D3D_SHADER_REQUIRES_LEVEL_9_COMPARISON_FILTERING = 128_u32
  D3D_SHADER_REQUIRES_TILED_RESOURCES = 256_u32
  D3D11_TRACE_COMPONENT_X = 1_u32
  D3D11_TRACE_COMPONENT_Y = 2_u32
  D3D11_TRACE_COMPONENT_Z = 4_u32
  D3D11_TRACE_COMPONENT_W = 8_u32
  D3D11_SHADER_TRACE_FLAG_RECORD_REGISTER_WRITES = 1_u32
  D3D11_SHADER_TRACE_FLAG_RECORD_REGISTER_READS = 2_u32
  D3D11_TRACE_REGISTER_FLAGS_RELATIVE_INDEXING = 1_u32
  D3D11_TRACE_MISC_GS_EMIT = 1_u32
  D3D11_TRACE_MISC_GS_CUT = 2_u32
  D3D11_TRACE_MISC_PS_DISCARD = 4_u32
  D3D11_TRACE_MISC_GS_EMIT_STREAM = 8_u32
  D3D11_TRACE_MISC_GS_CUT_STREAM = 16_u32
  D3D11_TRACE_MISC_HALT = 32_u32
  D3D11_TRACE_MISC_MESSAGE = 64_u32
  D3DCSX_DLL_W = "d3dcsx_47.dll"
  D3DCSX_DLL_A = "d3dcsx_47.dll"
  D3DCSX_DLL = "d3dcsx_47.dll"
  D3DX11_FFT_MAX_PRECOMPUTE_BUFFERS = 4_u32
  D3DX11_FFT_MAX_TEMP_BUFFERS = 4_u32
  D3DX11_FFT_MAX_DIMENSIONS = 32_u32

  enum D3D11_INPUT_CLASSIFICATION
    D3D11_INPUT_PER_VERTEX_DATA = 0_i32
    D3D11_INPUT_PER_INSTANCE_DATA = 1_i32
  end
  enum D3D11_FILL_MODE
    D3D11_FILL_WIREFRAME = 2_i32
    D3D11_FILL_SOLID = 3_i32
  end
  enum D3D11_CULL_MODE
    D3D11_CULL_NONE = 1_i32
    D3D11_CULL_FRONT = 2_i32
    D3D11_CULL_BACK = 3_i32
  end
  enum D3D11_RESOURCE_DIMENSION
    D3D11_RESOURCE_DIMENSION_UNKNOWN = 0_i32
    D3D11_RESOURCE_DIMENSION_BUFFER = 1_i32
    D3D11_RESOURCE_DIMENSION_TEXTURE1D = 2_i32
    D3D11_RESOURCE_DIMENSION_TEXTURE2D = 3_i32
    D3D11_RESOURCE_DIMENSION_TEXTURE3D = 4_i32
  end
  enum D3D11_DSV_DIMENSION
    D3D11_DSV_DIMENSION_UNKNOWN = 0_i32
    D3D11_DSV_DIMENSION_TEXTURE1D = 1_i32
    D3D11_DSV_DIMENSION_TEXTURE1DARRAY = 2_i32
    D3D11_DSV_DIMENSION_TEXTURE2D = 3_i32
    D3D11_DSV_DIMENSION_TEXTURE2DARRAY = 4_i32
    D3D11_DSV_DIMENSION_TEXTURE2DMS = 5_i32
    D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY = 6_i32
  end
  enum D3D11_RTV_DIMENSION
    D3D11_RTV_DIMENSION_UNKNOWN = 0_i32
    D3D11_RTV_DIMENSION_BUFFER = 1_i32
    D3D11_RTV_DIMENSION_TEXTURE1D = 2_i32
    D3D11_RTV_DIMENSION_TEXTURE1DARRAY = 3_i32
    D3D11_RTV_DIMENSION_TEXTURE2D = 4_i32
    D3D11_RTV_DIMENSION_TEXTURE2DARRAY = 5_i32
    D3D11_RTV_DIMENSION_TEXTURE2DMS = 6_i32
    D3D11_RTV_DIMENSION_TEXTURE2DMSARRAY = 7_i32
    D3D11_RTV_DIMENSION_TEXTURE3D = 8_i32
  end
  enum D3D11_UAV_DIMENSION
    D3D11_UAV_DIMENSION_UNKNOWN = 0_i32
    D3D11_UAV_DIMENSION_BUFFER = 1_i32
    D3D11_UAV_DIMENSION_TEXTURE1D = 2_i32
    D3D11_UAV_DIMENSION_TEXTURE1DARRAY = 3_i32
    D3D11_UAV_DIMENSION_TEXTURE2D = 4_i32
    D3D11_UAV_DIMENSION_TEXTURE2DARRAY = 5_i32
    D3D11_UAV_DIMENSION_TEXTURE3D = 8_i32
  end
  enum D3D11_USAGE
    D3D11_USAGE_DEFAULT = 0_i32
    D3D11_USAGE_IMMUTABLE = 1_i32
    D3D11_USAGE_DYNAMIC = 2_i32
    D3D11_USAGE_STAGING = 3_i32
  end
  @[Flags]
  enum D3D11_BIND_FLAG : UInt32
    D3D11_BIND_VERTEX_BUFFER = 1_u32
    D3D11_BIND_INDEX_BUFFER = 2_u32
    D3D11_BIND_CONSTANT_BUFFER = 4_u32
    D3D11_BIND_SHADER_RESOURCE = 8_u32
    D3D11_BIND_STREAM_OUTPUT = 16_u32
    D3D11_BIND_RENDER_TARGET = 32_u32
    D3D11_BIND_DEPTH_STENCIL = 64_u32
    D3D11_BIND_UNORDERED_ACCESS = 128_u32
    D3D11_BIND_DECODER = 512_u32
    D3D11_BIND_VIDEO_ENCODER = 1024_u32
  end
  @[Flags]
  enum D3D11_CPU_ACCESS_FLAG : UInt32
    D3D11_CPU_ACCESS_WRITE = 65536_u32
    D3D11_CPU_ACCESS_READ = 131072_u32
  end
  @[Flags]
  enum D3D11_RESOURCE_MISC_FLAG : UInt32
    D3D11_RESOURCE_MISC_GENERATE_MIPS = 1_u32
    D3D11_RESOURCE_MISC_SHARED = 2_u32
    D3D11_RESOURCE_MISC_TEXTURECUBE = 4_u32
    D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS = 16_u32
    D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS = 32_u32
    D3D11_RESOURCE_MISC_BUFFER_STRUCTURED = 64_u32
    D3D11_RESOURCE_MISC_RESOURCE_CLAMP = 128_u32
    D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX = 256_u32
    D3D11_RESOURCE_MISC_GDI_COMPATIBLE = 512_u32
    D3D11_RESOURCE_MISC_SHARED_NTHANDLE = 2048_u32
    D3D11_RESOURCE_MISC_RESTRICTED_CONTENT = 4096_u32
    D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE = 8192_u32
    D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER = 16384_u32
    D3D11_RESOURCE_MISC_GUARDED = 32768_u32
    D3D11_RESOURCE_MISC_TILE_POOL = 131072_u32
    D3D11_RESOURCE_MISC_TILED = 262144_u32
    D3D11_RESOURCE_MISC_HW_PROTECTED = 524288_u32
    D3D11_RESOURCE_MISC_SHARED_DISPLAYABLE = 1048576_u32
    D3D11_RESOURCE_MISC_SHARED_EXCLUSIVE_WRITER = 2097152_u32
  end
  enum D3D11_MAP
    D3D11_MAP_READ = 1_i32
    D3D11_MAP_WRITE = 2_i32
    D3D11_MAP_READ_WRITE = 3_i32
    D3D11_MAP_WRITE_DISCARD = 4_i32
    D3D11_MAP_WRITE_NO_OVERWRITE = 5_i32
  end
  enum D3D11_MAP_FLAG
    D3D11_MAP_FLAG_DO_NOT_WAIT = 1048576_i32
  end
  enum D3D11_RAISE_FLAG
    D3D11_RAISE_FLAG_DRIVER_INTERNAL_ERROR = 1_i32
  end
  enum D3D11_CLEAR_FLAG
    D3D11_CLEAR_DEPTH = 1_i32
    D3D11_CLEAR_STENCIL = 2_i32
  end
  enum D3D11_COMPARISON_FUNC
    D3D11_COMPARISON_NEVER = 1_i32
    D3D11_COMPARISON_LESS = 2_i32
    D3D11_COMPARISON_EQUAL = 3_i32
    D3D11_COMPARISON_LESS_EQUAL = 4_i32
    D3D11_COMPARISON_GREATER = 5_i32
    D3D11_COMPARISON_NOT_EQUAL = 6_i32
    D3D11_COMPARISON_GREATER_EQUAL = 7_i32
    D3D11_COMPARISON_ALWAYS = 8_i32
  end
  enum D3D11_DEPTH_WRITE_MASK
    D3D11_DEPTH_WRITE_MASK_ZERO = 0_i32
    D3D11_DEPTH_WRITE_MASK_ALL = 1_i32
  end
  enum D3D11_STENCIL_OP
    D3D11_STENCIL_OP_KEEP = 1_i32
    D3D11_STENCIL_OP_ZERO = 2_i32
    D3D11_STENCIL_OP_REPLACE = 3_i32
    D3D11_STENCIL_OP_INCR_SAT = 4_i32
    D3D11_STENCIL_OP_DECR_SAT = 5_i32
    D3D11_STENCIL_OP_INVERT = 6_i32
    D3D11_STENCIL_OP_INCR = 7_i32
    D3D11_STENCIL_OP_DECR = 8_i32
  end
  enum D3D11_BLEND
    D3D11_BLEND_ZERO = 1_i32
    D3D11_BLEND_ONE = 2_i32
    D3D11_BLEND_SRC_COLOR = 3_i32
    D3D11_BLEND_INV_SRC_COLOR = 4_i32
    D3D11_BLEND_SRC_ALPHA = 5_i32
    D3D11_BLEND_INV_SRC_ALPHA = 6_i32
    D3D11_BLEND_DEST_ALPHA = 7_i32
    D3D11_BLEND_INV_DEST_ALPHA = 8_i32
    D3D11_BLEND_DEST_COLOR = 9_i32
    D3D11_BLEND_INV_DEST_COLOR = 10_i32
    D3D11_BLEND_SRC_ALPHA_SAT = 11_i32
    D3D11_BLEND_BLEND_FACTOR = 14_i32
    D3D11_BLEND_INV_BLEND_FACTOR = 15_i32
    D3D11_BLEND_SRC1_COLOR = 16_i32
    D3D11_BLEND_INV_SRC1_COLOR = 17_i32
    D3D11_BLEND_SRC1_ALPHA = 18_i32
    D3D11_BLEND_INV_SRC1_ALPHA = 19_i32
  end
  enum D3D11_BLEND_OP
    D3D11_BLEND_OP_ADD = 1_i32
    D3D11_BLEND_OP_SUBTRACT = 2_i32
    D3D11_BLEND_OP_REV_SUBTRACT = 3_i32
    D3D11_BLEND_OP_MIN = 4_i32
    D3D11_BLEND_OP_MAX = 5_i32
  end
  enum D3D11_COLOR_WRITE_ENABLE
    D3D11_COLOR_WRITE_ENABLE_RED = 1_i32
    D3D11_COLOR_WRITE_ENABLE_GREEN = 2_i32
    D3D11_COLOR_WRITE_ENABLE_BLUE = 4_i32
    D3D11_COLOR_WRITE_ENABLE_ALPHA = 8_i32
    D3D11_COLOR_WRITE_ENABLE_ALL = 15_i32
  end
  enum D3D11_TEXTURECUBE_FACE
    D3D11_TEXTURECUBE_FACE_POSITIVE_X = 0_i32
    D3D11_TEXTURECUBE_FACE_NEGATIVE_X = 1_i32
    D3D11_TEXTURECUBE_FACE_POSITIVE_Y = 2_i32
    D3D11_TEXTURECUBE_FACE_NEGATIVE_Y = 3_i32
    D3D11_TEXTURECUBE_FACE_POSITIVE_Z = 4_i32
    D3D11_TEXTURECUBE_FACE_NEGATIVE_Z = 5_i32
  end
  enum D3D11_BUFFEREX_SRV_FLAG
    D3D11_BUFFEREX_SRV_FLAG_RAW = 1_i32
  end
  enum D3D11_DSV_FLAG
    D3D11_DSV_READ_ONLY_DEPTH = 1_i32
    D3D11_DSV_READ_ONLY_STENCIL = 2_i32
  end
  enum D3D11_BUFFER_UAV_FLAG
    D3D11_BUFFER_UAV_FLAG_RAW = 1_i32
    D3D11_BUFFER_UAV_FLAG_APPEND = 2_i32
    D3D11_BUFFER_UAV_FLAG_COUNTER = 4_i32
  end
  enum D3D11_FILTER
    D3D11_FILTER_MIN_MAG_MIP_POINT = 0_i32
    D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR = 1_i32
    D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT = 4_i32
    D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR = 5_i32
    D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT = 16_i32
    D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 17_i32
    D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT = 20_i32
    D3D11_FILTER_MIN_MAG_MIP_LINEAR = 21_i32
    D3D11_FILTER_ANISOTROPIC = 85_i32
    D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT = 128_i32
    D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR = 129_i32
    D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT = 132_i32
    D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR = 133_i32
    D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT = 144_i32
    D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 145_i32
    D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT = 148_i32
    D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR = 149_i32
    D3D11_FILTER_COMPARISON_ANISOTROPIC = 213_i32
    D3D11_FILTER_MINIMUM_MIN_MAG_MIP_POINT = 256_i32
    D3D11_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR = 257_i32
    D3D11_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT = 260_i32
    D3D11_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR = 261_i32
    D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT = 272_i32
    D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 273_i32
    D3D11_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT = 276_i32
    D3D11_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR = 277_i32
    D3D11_FILTER_MINIMUM_ANISOTROPIC = 341_i32
    D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_POINT = 384_i32
    D3D11_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR = 385_i32
    D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT = 388_i32
    D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR = 389_i32
    D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT = 400_i32
    D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 401_i32
    D3D11_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT = 404_i32
    D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR = 405_i32
    D3D11_FILTER_MAXIMUM_ANISOTROPIC = 469_i32
  end
  enum D3D11_FILTER_TYPE
    D3D11_FILTER_TYPE_POINT = 0_i32
    D3D11_FILTER_TYPE_LINEAR = 1_i32
  end
  enum D3D11_FILTER_REDUCTION_TYPE
    D3D11_FILTER_REDUCTION_TYPE_STANDARD = 0_i32
    D3D11_FILTER_REDUCTION_TYPE_COMPARISON = 1_i32
    D3D11_FILTER_REDUCTION_TYPE_MINIMUM = 2_i32
    D3D11_FILTER_REDUCTION_TYPE_MAXIMUM = 3_i32
  end
  enum D3D11_TEXTURE_ADDRESS_MODE
    D3D11_TEXTURE_ADDRESS_WRAP = 1_i32
    D3D11_TEXTURE_ADDRESS_MIRROR = 2_i32
    D3D11_TEXTURE_ADDRESS_CLAMP = 3_i32
    D3D11_TEXTURE_ADDRESS_BORDER = 4_i32
    D3D11_TEXTURE_ADDRESS_MIRROR_ONCE = 5_i32
  end
  enum D3D11_FORMAT_SUPPORT
    D3D11_FORMAT_SUPPORT_BUFFER = 1_i32
    D3D11_FORMAT_SUPPORT_IA_VERTEX_BUFFER = 2_i32
    D3D11_FORMAT_SUPPORT_IA_INDEX_BUFFER = 4_i32
    D3D11_FORMAT_SUPPORT_SO_BUFFER = 8_i32
    D3D11_FORMAT_SUPPORT_TEXTURE1D = 16_i32
    D3D11_FORMAT_SUPPORT_TEXTURE2D = 32_i32
    D3D11_FORMAT_SUPPORT_TEXTURE3D = 64_i32
    D3D11_FORMAT_SUPPORT_TEXTURECUBE = 128_i32
    D3D11_FORMAT_SUPPORT_SHADER_LOAD = 256_i32
    D3D11_FORMAT_SUPPORT_SHADER_SAMPLE = 512_i32
    D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON = 1024_i32
    D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT = 2048_i32
    D3D11_FORMAT_SUPPORT_MIP = 4096_i32
    D3D11_FORMAT_SUPPORT_MIP_AUTOGEN = 8192_i32
    D3D11_FORMAT_SUPPORT_RENDER_TARGET = 16384_i32
    D3D11_FORMAT_SUPPORT_BLENDABLE = 32768_i32
    D3D11_FORMAT_SUPPORT_DEPTH_STENCIL = 65536_i32
    D3D11_FORMAT_SUPPORT_CPU_LOCKABLE = 131072_i32
    D3D11_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE = 262144_i32
    D3D11_FORMAT_SUPPORT_DISPLAY = 524288_i32
    D3D11_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT = 1048576_i32
    D3D11_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET = 2097152_i32
    D3D11_FORMAT_SUPPORT_MULTISAMPLE_LOAD = 4194304_i32
    D3D11_FORMAT_SUPPORT_SHADER_GATHER = 8388608_i32
    D3D11_FORMAT_SUPPORT_BACK_BUFFER_CAST = 16777216_i32
    D3D11_FORMAT_SUPPORT_TYPED_UNORDERED_ACCESS_VIEW = 33554432_i32
    D3D11_FORMAT_SUPPORT_SHADER_GATHER_COMPARISON = 67108864_i32
    D3D11_FORMAT_SUPPORT_DECODER_OUTPUT = 134217728_i32
    D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_OUTPUT = 268435456_i32
    D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_INPUT = 536870912_i32
    D3D11_FORMAT_SUPPORT_VIDEO_ENCODER = 1073741824_i32
  end
  enum D3D11_FORMAT_SUPPORT2
    D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_ADD = 1_i32
    D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS = 2_i32
    D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE = 4_i32
    D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE = 8_i32
    D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX = 16_i32
    D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX = 32_i32
    D3D11_FORMAT_SUPPORT2_UAV_TYPED_LOAD = 64_i32
    D3D11_FORMAT_SUPPORT2_UAV_TYPED_STORE = 128_i32
    D3D11_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP = 256_i32
    D3D11_FORMAT_SUPPORT2_TILED = 512_i32
    D3D11_FORMAT_SUPPORT2_SHAREABLE = 1024_i32
    D3D11_FORMAT_SUPPORT2_MULTIPLANE_OVERLAY = 16384_i32
  end
  enum D3D11_ASYNC_GETDATA_FLAG
    D3D11_ASYNC_GETDATA_DONOTFLUSH = 1_i32
  end
  enum D3D11_QUERY
    D3D11_QUERY_EVENT = 0_i32
    D3D11_QUERY_OCCLUSION = 1_i32
    D3D11_QUERY_TIMESTAMP = 2_i32
    D3D11_QUERY_TIMESTAMP_DISJOINT = 3_i32
    D3D11_QUERY_PIPELINE_STATISTICS = 4_i32
    D3D11_QUERY_OCCLUSION_PREDICATE = 5_i32
    D3D11_QUERY_SO_STATISTICS = 6_i32
    D3D11_QUERY_SO_OVERFLOW_PREDICATE = 7_i32
    D3D11_QUERY_SO_STATISTICS_STREAM0 = 8_i32
    D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM0 = 9_i32
    D3D11_QUERY_SO_STATISTICS_STREAM1 = 10_i32
    D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM1 = 11_i32
    D3D11_QUERY_SO_STATISTICS_STREAM2 = 12_i32
    D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM2 = 13_i32
    D3D11_QUERY_SO_STATISTICS_STREAM3 = 14_i32
    D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM3 = 15_i32
  end
  enum D3D11_QUERY_MISC_FLAG
    D3D11_QUERY_MISC_PREDICATEHINT = 1_i32
  end
  enum D3D11_COUNTER
    D3D11_COUNTER_DEVICE_DEPENDENT_0 = 1073741824_i32
  end
  enum D3D11_COUNTER_TYPE
    D3D11_COUNTER_TYPE_FLOAT32 = 0_i32
    D3D11_COUNTER_TYPE_UINT16 = 1_i32
    D3D11_COUNTER_TYPE_UINT32 = 2_i32
    D3D11_COUNTER_TYPE_UINT64 = 3_i32
  end
  enum D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS
    D3D11_STANDARD_MULTISAMPLE_PATTERN = -1_i32
    D3D11_CENTER_MULTISAMPLE_PATTERN = -2_i32
  end
  enum D3D11_DEVICE_CONTEXT_TYPE
    D3D11_DEVICE_CONTEXT_IMMEDIATE = 0_i32
    D3D11_DEVICE_CONTEXT_DEFERRED = 1_i32
  end
  enum D3D11_FEATURE
    D3D11_FEATURE_THREADING = 0_i32
    D3D11_FEATURE_DOUBLES = 1_i32
    D3D11_FEATURE_FORMAT_SUPPORT = 2_i32
    D3D11_FEATURE_FORMAT_SUPPORT2 = 3_i32
    D3D11_FEATURE_D3D10_X_HARDWARE_OPTIONS = 4_i32
    D3D11_FEATURE_D3D11_OPTIONS = 5_i32
    D3D11_FEATURE_ARCHITECTURE_INFO = 6_i32
    D3D11_FEATURE_D3D9_OPTIONS = 7_i32
    D3D11_FEATURE_SHADER_MIN_PRECISION_SUPPORT = 8_i32
    D3D11_FEATURE_D3D9_SHADOW_SUPPORT = 9_i32
    D3D11_FEATURE_D3D11_OPTIONS1 = 10_i32
    D3D11_FEATURE_D3D9_SIMPLE_INSTANCING_SUPPORT = 11_i32
    D3D11_FEATURE_MARKER_SUPPORT = 12_i32
    D3D11_FEATURE_D3D9_OPTIONS1 = 13_i32
    D3D11_FEATURE_D3D11_OPTIONS2 = 14_i32
    D3D11_FEATURE_D3D11_OPTIONS3 = 15_i32
    D3D11_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT = 16_i32
    D3D11_FEATURE_D3D11_OPTIONS4 = 17_i32
    D3D11_FEATURE_SHADER_CACHE = 18_i32
    D3D11_FEATURE_D3D11_OPTIONS5 = 19_i32
    D3D11_FEATURE_DISPLAYABLE = 20_i32
  end
  enum D3D11_SHADER_MIN_PRECISION_SUPPORT
    D3D11_SHADER_MIN_PRECISION_10_BIT = 1_i32
    D3D11_SHADER_MIN_PRECISION_16_BIT = 2_i32
  end
  enum D3D11_TILED_RESOURCES_TIER
    D3D11_TILED_RESOURCES_NOT_SUPPORTED = 0_i32
    D3D11_TILED_RESOURCES_TIER_1 = 1_i32
    D3D11_TILED_RESOURCES_TIER_2 = 2_i32
    D3D11_TILED_RESOURCES_TIER_3 = 3_i32
  end
  enum D3D11_CONSERVATIVE_RASTERIZATION_TIER
    D3D11_CONSERVATIVE_RASTERIZATION_NOT_SUPPORTED = 0_i32
    D3D11_CONSERVATIVE_RASTERIZATION_TIER_1 = 1_i32
    D3D11_CONSERVATIVE_RASTERIZATION_TIER_2 = 2_i32
    D3D11_CONSERVATIVE_RASTERIZATION_TIER_3 = 3_i32
  end
  enum D3D11_SHADER_CACHE_SUPPORT_FLAGS
    D3D11_SHADER_CACHE_SUPPORT_NONE = 0_i32
    D3D11_SHADER_CACHE_SUPPORT_AUTOMATIC_INPROC_CACHE = 1_i32
    D3D11_SHADER_CACHE_SUPPORT_AUTOMATIC_DISK_CACHE = 2_i32
  end
  enum D3D11_SHARED_RESOURCE_TIER
    D3D11_SHARED_RESOURCE_TIER_0 = 0_i32
    D3D11_SHARED_RESOURCE_TIER_1 = 1_i32
    D3D11_SHARED_RESOURCE_TIER_2 = 2_i32
    D3D11_SHARED_RESOURCE_TIER_3 = 3_i32
  end
  enum D3D11_VIDEO_DECODER_BUFFER_TYPE
    D3D11_VIDEO_DECODER_BUFFER_PICTURE_PARAMETERS = 0_i32
    D3D11_VIDEO_DECODER_BUFFER_MACROBLOCK_CONTROL = 1_i32
    D3D11_VIDEO_DECODER_BUFFER_RESIDUAL_DIFFERENCE = 2_i32
    D3D11_VIDEO_DECODER_BUFFER_DEBLOCKING_CONTROL = 3_i32
    D3D11_VIDEO_DECODER_BUFFER_INVERSE_QUANTIZATION_MATRIX = 4_i32
    D3D11_VIDEO_DECODER_BUFFER_SLICE_CONTROL = 5_i32
    D3D11_VIDEO_DECODER_BUFFER_BITSTREAM = 6_i32
    D3D11_VIDEO_DECODER_BUFFER_MOTION_VECTOR = 7_i32
    D3D11_VIDEO_DECODER_BUFFER_FILM_GRAIN = 8_i32
  end
  enum D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT
    D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_INPUT = 1_i32
    D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_OUTPUT = 2_i32
  end
  enum D3D11_VIDEO_PROCESSOR_DEVICE_CAPS
    D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_LINEAR_SPACE = 1_i32
    D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_xvYCC = 2_i32
    D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_RGB_RANGE_CONVERSION = 4_i32
    D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_YCbCr_MATRIX_CONVERSION = 8_i32
    D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_NOMINAL_RANGE = 16_i32
  end
  enum D3D11_VIDEO_PROCESSOR_FEATURE_CAPS
    D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_FILL = 1_i32
    D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_CONSTRICTION = 2_i32
    D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LUMA_KEY = 4_i32
    D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_PALETTE = 8_i32
    D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LEGACY = 16_i32
    D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_STEREO = 32_i32
    D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ROTATION = 64_i32
    D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_STREAM = 128_i32
    D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_PIXEL_ASPECT_RATIO = 256_i32
    D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_MIRROR = 512_i32
    D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_SHADER_USAGE = 1024_i32
    D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_METADATA_HDR10 = 2048_i32
  end
  enum D3D11_VIDEO_PROCESSOR_FILTER_CAPS
    D3D11_VIDEO_PROCESSOR_FILTER_CAPS_BRIGHTNESS = 1_i32
    D3D11_VIDEO_PROCESSOR_FILTER_CAPS_CONTRAST = 2_i32
    D3D11_VIDEO_PROCESSOR_FILTER_CAPS_HUE = 4_i32
    D3D11_VIDEO_PROCESSOR_FILTER_CAPS_SATURATION = 8_i32
    D3D11_VIDEO_PROCESSOR_FILTER_CAPS_NOISE_REDUCTION = 16_i32
    D3D11_VIDEO_PROCESSOR_FILTER_CAPS_EDGE_ENHANCEMENT = 32_i32
    D3D11_VIDEO_PROCESSOR_FILTER_CAPS_ANAMORPHIC_SCALING = 64_i32
    D3D11_VIDEO_PROCESSOR_FILTER_CAPS_STEREO_ADJUSTMENT = 128_i32
  end
  enum D3D11_VIDEO_PROCESSOR_FORMAT_CAPS
    D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_INTERLACED = 1_i32
    D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_PROCAMP = 2_i32
    D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_LUMA_KEY = 4_i32
    D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_PALETTE_INTERLACED = 8_i32
  end
  enum D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS
    D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DENOISE = 1_i32
    D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DERINGING = 2_i32
    D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_EDGE_ENHANCEMENT = 4_i32
    D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_COLOR_CORRECTION = 8_i32
    D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_FLESH_TONE_MAPPING = 16_i32
    D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_IMAGE_STABILIZATION = 32_i32
    D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_SUPER_RESOLUTION = 64_i32
    D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_ANAMORPHIC_SCALING = 128_i32
  end
  enum D3D11_VIDEO_PROCESSOR_STEREO_CAPS
    D3D11_VIDEO_PROCESSOR_STEREO_CAPS_MONO_OFFSET = 1_i32
    D3D11_VIDEO_PROCESSOR_STEREO_CAPS_ROW_INTERLEAVED = 2_i32
    D3D11_VIDEO_PROCESSOR_STEREO_CAPS_COLUMN_INTERLEAVED = 4_i32
    D3D11_VIDEO_PROCESSOR_STEREO_CAPS_CHECKERBOARD = 8_i32
    D3D11_VIDEO_PROCESSOR_STEREO_CAPS_FLIP_MODE = 16_i32
  end
  enum D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS
    D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BLEND = 1_i32
    D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BOB = 2_i32
    D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_ADAPTIVE = 4_i32
    D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_MOTION_COMPENSATION = 8_i32
    D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_INVERSE_TELECINE = 16_i32
    D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_FRAME_RATE_CONVERSION = 32_i32
  end
  enum D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS
    D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32 = 1_i32
    D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_22 = 2_i32
    D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2224 = 4_i32
    D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2332 = 8_i32
    D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32322 = 16_i32
    D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_55 = 32_i32
    D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_64 = 64_i32
    D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_87 = 128_i32
    D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_222222222223 = 256_i32
    D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_OTHER = -2147483648_i32
  end
  enum D3D11_CONTENT_PROTECTION_CAPS
    D3D11_CONTENT_PROTECTION_CAPS_SOFTWARE = 1_i32
    D3D11_CONTENT_PROTECTION_CAPS_HARDWARE = 2_i32
    D3D11_CONTENT_PROTECTION_CAPS_PROTECTION_ALWAYS_ON = 4_i32
    D3D11_CONTENT_PROTECTION_CAPS_PARTIAL_DECRYPTION = 8_i32
    D3D11_CONTENT_PROTECTION_CAPS_CONTENT_KEY = 16_i32
    D3D11_CONTENT_PROTECTION_CAPS_FRESHEN_SESSION_KEY = 32_i32
    D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK = 64_i32
    D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK_KEY = 128_i32
    D3D11_CONTENT_PROTECTION_CAPS_SEQUENTIAL_CTR_IV = 256_i32
    D3D11_CONTENT_PROTECTION_CAPS_ENCRYPT_SLICEDATA_ONLY = 512_i32
    D3D11_CONTENT_PROTECTION_CAPS_DECRYPTION_BLT = 1024_i32
    D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_PROTECT_UNCOMPRESSED = 2048_i32
    D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_PROTECTED_MEMORY_PAGEABLE = 4096_i32
    D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_TEARDOWN = 8192_i32
    D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_DRM_COMMUNICATION = 16384_i32
    D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_DRM_COMMUNICATION_MULTI_THREADED = 32768_i32
  end
  enum D3D11_VIDEO_PROCESSOR_FILTER
    D3D11_VIDEO_PROCESSOR_FILTER_BRIGHTNESS = 0_i32
    D3D11_VIDEO_PROCESSOR_FILTER_CONTRAST = 1_i32
    D3D11_VIDEO_PROCESSOR_FILTER_HUE = 2_i32
    D3D11_VIDEO_PROCESSOR_FILTER_SATURATION = 3_i32
    D3D11_VIDEO_PROCESSOR_FILTER_NOISE_REDUCTION = 4_i32
    D3D11_VIDEO_PROCESSOR_FILTER_EDGE_ENHANCEMENT = 5_i32
    D3D11_VIDEO_PROCESSOR_FILTER_ANAMORPHIC_SCALING = 6_i32
    D3D11_VIDEO_PROCESSOR_FILTER_STEREO_ADJUSTMENT = 7_i32
  end
  enum D3D11_VIDEO_FRAME_FORMAT
    D3D11_VIDEO_FRAME_FORMAT_PROGRESSIVE = 0_i32
    D3D11_VIDEO_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST = 1_i32
    D3D11_VIDEO_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST = 2_i32
  end
  enum D3D11_VIDEO_USAGE
    D3D11_VIDEO_USAGE_PLAYBACK_NORMAL = 0_i32
    D3D11_VIDEO_USAGE_OPTIMAL_SPEED = 1_i32
    D3D11_VIDEO_USAGE_OPTIMAL_QUALITY = 2_i32
  end
  enum D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE
    D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_UNDEFINED = 0_i32
    D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_16_235 = 1_i32
    D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_0_255 = 2_i32
  end
  enum D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE
    D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_OPAQUE = 0_i32
    D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_BACKGROUND = 1_i32
    D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_DESTINATION = 2_i32
    D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_SOURCE_STREAM = 3_i32
  end
  enum D3D11_VIDEO_PROCESSOR_OUTPUT_RATE
    D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_NORMAL = 0_i32
    D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_HALF = 1_i32
    D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_CUSTOM = 2_i32
  end
  enum D3D11_VIDEO_PROCESSOR_STEREO_FORMAT
    D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO = 0_i32
    D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_HORIZONTAL = 1_i32
    D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_VERTICAL = 2_i32
    D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE = 3_i32
    D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET = 4_i32
    D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_ROW_INTERLEAVED = 5_i32
    D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_COLUMN_INTERLEAVED = 6_i32
    D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_CHECKERBOARD = 7_i32
  end
  enum D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE
    D3D11_VIDEO_PROCESSOR_STEREO_FLIP_NONE = 0_i32
    D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME0 = 1_i32
    D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME1 = 2_i32
  end
  enum D3D11_VIDEO_PROCESSOR_ROTATION
    D3D11_VIDEO_PROCESSOR_ROTATION_IDENTITY = 0_i32
    D3D11_VIDEO_PROCESSOR_ROTATION_90 = 1_i32
    D3D11_VIDEO_PROCESSOR_ROTATION_180 = 2_i32
    D3D11_VIDEO_PROCESSOR_ROTATION_270 = 3_i32
  end
  enum D3D11_AUTHENTICATED_CHANNEL_TYPE
    D3D11_AUTHENTICATED_CHANNEL_D3D11 = 1_i32
    D3D11_AUTHENTICATED_CHANNEL_DRIVER_SOFTWARE = 2_i32
    D3D11_AUTHENTICATED_CHANNEL_DRIVER_HARDWARE = 3_i32
  end
  enum D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE
    D3D11_PROCESSIDTYPE_UNKNOWN = 0_i32
    D3D11_PROCESSIDTYPE_DWM = 1_i32
    D3D11_PROCESSIDTYPE_HANDLE = 2_i32
  end
  enum D3D11_BUS_TYPE
    D3D11_BUS_TYPE_OTHER = 0_i32
    D3D11_BUS_TYPE_PCI = 1_i32
    D3D11_BUS_TYPE_PCIX = 2_i32
    D3D11_BUS_TYPE_PCIEXPRESS = 3_i32
    D3D11_BUS_TYPE_AGP = 4_i32
    D3D11_BUS_IMPL_MODIFIER_INSIDE_OF_CHIPSET = 65536_i32
    D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP = 131072_i32
    D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET = 196608_i32
    D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR = 262144_i32
    D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE = 327680_i32
    D3D11_BUS_IMPL_MODIFIER_NON_STANDARD = -2147483648_i32
  end
  enum D3D11_VDOV_DIMENSION
    D3D11_VDOV_DIMENSION_UNKNOWN = 0_i32
    D3D11_VDOV_DIMENSION_TEXTURE2D = 1_i32
  end
  enum D3D11_VPIV_DIMENSION
    D3D11_VPIV_DIMENSION_UNKNOWN = 0_i32
    D3D11_VPIV_DIMENSION_TEXTURE2D = 1_i32
  end
  enum D3D11_VPOV_DIMENSION
    D3D11_VPOV_DIMENSION_UNKNOWN = 0_i32
    D3D11_VPOV_DIMENSION_TEXTURE2D = 1_i32
    D3D11_VPOV_DIMENSION_TEXTURE2DARRAY = 2_i32
  end
  @[Flags]
  enum D3D11_CREATE_DEVICE_FLAG : UInt32
    D3D11_CREATE_DEVICE_SINGLETHREADED = 1_u32
    D3D11_CREATE_DEVICE_DEBUG = 2_u32
    D3D11_CREATE_DEVICE_SWITCH_TO_REF = 4_u32
    D3D11_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS = 8_u32
    D3D11_CREATE_DEVICE_BGRA_SUPPORT = 32_u32
    D3D11_CREATE_DEVICE_DEBUGGABLE = 64_u32
    D3D11_CREATE_DEVICE_PREVENT_ALTERING_LAYER_SETTINGS_FROM_REGISTRY = 128_u32
    D3D11_CREATE_DEVICE_DISABLE_GPU_TIMEOUT = 256_u32
    D3D11_CREATE_DEVICE_VIDEO_SUPPORT = 2048_u32
  end
  enum D3D11_RLDO_FLAGS
    D3D11_RLDO_SUMMARY = 1_i32
    D3D11_RLDO_DETAIL = 2_i32
    D3D11_RLDO_IGNORE_INTERNAL = 4_i32
  end
  enum D3D11_SHADER_TRACKING_RESOURCE_TYPE
    D3D11_SHADER_TRACKING_RESOURCE_TYPE_NONE = 0_i32
    D3D11_SHADER_TRACKING_RESOURCE_TYPE_UAV_DEVICEMEMORY = 1_i32
    D3D11_SHADER_TRACKING_RESOURCE_TYPE_NON_UAV_DEVICEMEMORY = 2_i32
    D3D11_SHADER_TRACKING_RESOURCE_TYPE_ALL_DEVICEMEMORY = 3_i32
    D3D11_SHADER_TRACKING_RESOURCE_TYPE_GROUPSHARED_MEMORY = 4_i32
    D3D11_SHADER_TRACKING_RESOURCE_TYPE_ALL_SHARED_MEMORY = 5_i32
    D3D11_SHADER_TRACKING_RESOURCE_TYPE_GROUPSHARED_NON_UAV = 6_i32
    D3D11_SHADER_TRACKING_RESOURCE_TYPE_ALL = 7_i32
  end
  enum D3D11_SHADER_TRACKING_OPTIONS
    D3D11_SHADER_TRACKING_OPTION_IGNORE = 0_i32
    D3D11_SHADER_TRACKING_OPTION_TRACK_UNINITIALIZED = 1_i32
    D3D11_SHADER_TRACKING_OPTION_TRACK_RAW = 2_i32
    D3D11_SHADER_TRACKING_OPTION_TRACK_WAR = 4_i32
    D3D11_SHADER_TRACKING_OPTION_TRACK_WAW = 8_i32
    D3D11_SHADER_TRACKING_OPTION_ALLOW_SAME = 16_i32
    D3D11_SHADER_TRACKING_OPTION_TRACK_ATOMIC_CONSISTENCY = 32_i32
    D3D11_SHADER_TRACKING_OPTION_TRACK_RAW_ACROSS_THREADGROUPS = 64_i32
    D3D11_SHADER_TRACKING_OPTION_TRACK_WAR_ACROSS_THREADGROUPS = 128_i32
    D3D11_SHADER_TRACKING_OPTION_TRACK_WAW_ACROSS_THREADGROUPS = 256_i32
    D3D11_SHADER_TRACKING_OPTION_TRACK_ATOMIC_CONSISTENCY_ACROSS_THREADGROUPS = 512_i32
    D3D11_SHADER_TRACKING_OPTION_UAV_SPECIFIC_FLAGS = 960_i32
    D3D11_SHADER_TRACKING_OPTION_ALL_HAZARDS = 1006_i32
    D3D11_SHADER_TRACKING_OPTION_ALL_HAZARDS_ALLOWING_SAME = 1022_i32
    D3D11_SHADER_TRACKING_OPTION_ALL_OPTIONS = 1023_i32
  end
  enum D3D11_MESSAGE_CATEGORY
    D3D11_MESSAGE_CATEGORY_APPLICATION_DEFINED = 0_i32
    D3D11_MESSAGE_CATEGORY_MISCELLANEOUS = 1_i32
    D3D11_MESSAGE_CATEGORY_INITIALIZATION = 2_i32
    D3D11_MESSAGE_CATEGORY_CLEANUP = 3_i32
    D3D11_MESSAGE_CATEGORY_COMPILATION = 4_i32
    D3D11_MESSAGE_CATEGORY_STATE_CREATION = 5_i32
    D3D11_MESSAGE_CATEGORY_STATE_SETTING = 6_i32
    D3D11_MESSAGE_CATEGORY_STATE_GETTING = 7_i32
    D3D11_MESSAGE_CATEGORY_RESOURCE_MANIPULATION = 8_i32
    D3D11_MESSAGE_CATEGORY_EXECUTION = 9_i32
    D3D11_MESSAGE_CATEGORY_SHADER = 10_i32
  end
  enum D3D11_MESSAGE_SEVERITY
    D3D11_MESSAGE_SEVERITY_CORRUPTION = 0_i32
    D3D11_MESSAGE_SEVERITY_ERROR = 1_i32
    D3D11_MESSAGE_SEVERITY_WARNING = 2_i32
    D3D11_MESSAGE_SEVERITY_INFO = 3_i32
    D3D11_MESSAGE_SEVERITY_MESSAGE = 4_i32
  end
  enum D3D11_MESSAGE_ID
    D3D11_MESSAGE_ID_UNKNOWN = 0_i32
    D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_HAZARD = 1_i32
    D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_HAZARD = 2_i32
    D3D11_MESSAGE_ID_DEVICE_VSSETSHADERRESOURCES_HAZARD = 3_i32
    D3D11_MESSAGE_ID_DEVICE_VSSETCONSTANTBUFFERS_HAZARD = 4_i32
    D3D11_MESSAGE_ID_DEVICE_GSSETSHADERRESOURCES_HAZARD = 5_i32
    D3D11_MESSAGE_ID_DEVICE_GSSETCONSTANTBUFFERS_HAZARD = 6_i32
    D3D11_MESSAGE_ID_DEVICE_PSSETSHADERRESOURCES_HAZARD = 7_i32
    D3D11_MESSAGE_ID_DEVICE_PSSETCONSTANTBUFFERS_HAZARD = 8_i32
    D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETS_HAZARD = 9_i32
    D3D11_MESSAGE_ID_DEVICE_SOSETTARGETS_HAZARD = 10_i32
    D3D11_MESSAGE_ID_STRING_FROM_APPLICATION = 11_i32
    D3D11_MESSAGE_ID_CORRUPTED_THIS = 12_i32
    D3D11_MESSAGE_ID_CORRUPTED_PARAMETER1 = 13_i32
    D3D11_MESSAGE_ID_CORRUPTED_PARAMETER2 = 14_i32
    D3D11_MESSAGE_ID_CORRUPTED_PARAMETER3 = 15_i32
    D3D11_MESSAGE_ID_CORRUPTED_PARAMETER4 = 16_i32
    D3D11_MESSAGE_ID_CORRUPTED_PARAMETER5 = 17_i32
    D3D11_MESSAGE_ID_CORRUPTED_PARAMETER6 = 18_i32
    D3D11_MESSAGE_ID_CORRUPTED_PARAMETER7 = 19_i32
    D3D11_MESSAGE_ID_CORRUPTED_PARAMETER8 = 20_i32
    D3D11_MESSAGE_ID_CORRUPTED_PARAMETER9 = 21_i32
    D3D11_MESSAGE_ID_CORRUPTED_PARAMETER10 = 22_i32
    D3D11_MESSAGE_ID_CORRUPTED_PARAMETER11 = 23_i32
    D3D11_MESSAGE_ID_CORRUPTED_PARAMETER12 = 24_i32
    D3D11_MESSAGE_ID_CORRUPTED_PARAMETER13 = 25_i32
    D3D11_MESSAGE_ID_CORRUPTED_PARAMETER14 = 26_i32
    D3D11_MESSAGE_ID_CORRUPTED_PARAMETER15 = 27_i32
    D3D11_MESSAGE_ID_CORRUPTED_MULTITHREADING = 28_i32
    D3D11_MESSAGE_ID_MESSAGE_REPORTING_OUTOFMEMORY = 29_i32
    D3D11_MESSAGE_ID_IASETINPUTLAYOUT_UNBINDDELETINGOBJECT = 30_i32
    D3D11_MESSAGE_ID_IASETVERTEXBUFFERS_UNBINDDELETINGOBJECT = 31_i32
    D3D11_MESSAGE_ID_IASETINDEXBUFFER_UNBINDDELETINGOBJECT = 32_i32
    D3D11_MESSAGE_ID_VSSETSHADER_UNBINDDELETINGOBJECT = 33_i32
    D3D11_MESSAGE_ID_VSSETSHADERRESOURCES_UNBINDDELETINGOBJECT = 34_i32
    D3D11_MESSAGE_ID_VSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT = 35_i32
    D3D11_MESSAGE_ID_VSSETSAMPLERS_UNBINDDELETINGOBJECT = 36_i32
    D3D11_MESSAGE_ID_GSSETSHADER_UNBINDDELETINGOBJECT = 37_i32
    D3D11_MESSAGE_ID_GSSETSHADERRESOURCES_UNBINDDELETINGOBJECT = 38_i32
    D3D11_MESSAGE_ID_GSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT = 39_i32
    D3D11_MESSAGE_ID_GSSETSAMPLERS_UNBINDDELETINGOBJECT = 40_i32
    D3D11_MESSAGE_ID_SOSETTARGETS_UNBINDDELETINGOBJECT = 41_i32
    D3D11_MESSAGE_ID_PSSETSHADER_UNBINDDELETINGOBJECT = 42_i32
    D3D11_MESSAGE_ID_PSSETSHADERRESOURCES_UNBINDDELETINGOBJECT = 43_i32
    D3D11_MESSAGE_ID_PSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT = 44_i32
    D3D11_MESSAGE_ID_PSSETSAMPLERS_UNBINDDELETINGOBJECT = 45_i32
    D3D11_MESSAGE_ID_RSSETSTATE_UNBINDDELETINGOBJECT = 46_i32
    D3D11_MESSAGE_ID_OMSETBLENDSTATE_UNBINDDELETINGOBJECT = 47_i32
    D3D11_MESSAGE_ID_OMSETDEPTHSTENCILSTATE_UNBINDDELETINGOBJECT = 48_i32
    D3D11_MESSAGE_ID_OMSETRENDERTARGETS_UNBINDDELETINGOBJECT = 49_i32
    D3D11_MESSAGE_ID_SETPREDICATION_UNBINDDELETINGOBJECT = 50_i32
    D3D11_MESSAGE_ID_GETPRIVATEDATA_MOREDATA = 51_i32
    D3D11_MESSAGE_ID_SETPRIVATEDATA_INVALIDFREEDATA = 52_i32
    D3D11_MESSAGE_ID_SETPRIVATEDATA_INVALIDIUNKNOWN = 53_i32
    D3D11_MESSAGE_ID_SETPRIVATEDATA_INVALIDFLAGS = 54_i32
    D3D11_MESSAGE_ID_SETPRIVATEDATA_CHANGINGPARAMS = 55_i32
    D3D11_MESSAGE_ID_SETPRIVATEDATA_OUTOFMEMORY = 56_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDFORMAT = 57_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDSAMPLES = 58_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDUSAGE = 59_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDBINDFLAGS = 60_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDCPUACCESSFLAGS = 61_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDMISCFLAGS = 62_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDCPUACCESSFLAGS = 63_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDBINDFLAGS = 64_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDINITIALDATA = 65_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDDIMENSIONS = 66_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDMIPLEVELS = 67_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDMISCFLAGS = 68_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDARG_RETURN = 69_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_OUTOFMEMORY_RETURN = 70_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_NULLDESC = 71_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDCONSTANTBUFFERBINDINGS = 72_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_LARGEALLOCATION = 73_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDFORMAT = 74_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_UNSUPPORTEDFORMAT = 75_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDSAMPLES = 76_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDUSAGE = 77_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDBINDFLAGS = 78_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDCPUACCESSFLAGS = 79_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDMISCFLAGS = 80_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDCPUACCESSFLAGS = 81_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDBINDFLAGS = 82_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDINITIALDATA = 83_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDDIMENSIONS = 84_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDMIPLEVELS = 85_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDMISCFLAGS = 86_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDARG_RETURN = 87_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_OUTOFMEMORY_RETURN = 88_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_NULLDESC = 89_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_LARGEALLOCATION = 90_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDFORMAT = 91_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_UNSUPPORTEDFORMAT = 92_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDSAMPLES = 93_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDUSAGE = 94_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDBINDFLAGS = 95_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDCPUACCESSFLAGS = 96_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDMISCFLAGS = 97_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDCPUACCESSFLAGS = 98_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDBINDFLAGS = 99_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDINITIALDATA = 100_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDDIMENSIONS = 101_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDMIPLEVELS = 102_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDMISCFLAGS = 103_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDARG_RETURN = 104_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_OUTOFMEMORY_RETURN = 105_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_NULLDESC = 106_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_LARGEALLOCATION = 107_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDFORMAT = 108_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_UNSUPPORTEDFORMAT = 109_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDSAMPLES = 110_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDUSAGE = 111_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDBINDFLAGS = 112_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDCPUACCESSFLAGS = 113_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDMISCFLAGS = 114_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDCPUACCESSFLAGS = 115_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDBINDFLAGS = 116_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDINITIALDATA = 117_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDDIMENSIONS = 118_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDMIPLEVELS = 119_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDMISCFLAGS = 120_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDARG_RETURN = 121_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_OUTOFMEMORY_RETURN = 122_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_NULLDESC = 123_i32
    D3D11_MESSAGE_ID_CREATETEXTURE3D_LARGEALLOCATION = 124_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_UNRECOGNIZEDFORMAT = 125_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDESC = 126_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFORMAT = 127_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDIMENSIONS = 128_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDRESOURCE = 129_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_TOOMANYOBJECTS = 130_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDARG_RETURN = 131_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_OUTOFMEMORY_RETURN = 132_i32
    D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_UNRECOGNIZEDFORMAT = 133_i32
    D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_UNSUPPORTEDFORMAT = 134_i32
    D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDESC = 135_i32
    D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDFORMAT = 136_i32
    D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDIMENSIONS = 137_i32
    D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDRESOURCE = 138_i32
    D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_TOOMANYOBJECTS = 139_i32
    D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDARG_RETURN = 140_i32
    D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_OUTOFMEMORY_RETURN = 141_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_UNRECOGNIZEDFORMAT = 142_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDESC = 143_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFORMAT = 144_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDIMENSIONS = 145_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDRESOURCE = 146_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_TOOMANYOBJECTS = 147_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDARG_RETURN = 148_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_OUTOFMEMORY_RETURN = 149_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_OUTOFMEMORY = 150_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_TOOMANYELEMENTS = 151_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDFORMAT = 152_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INCOMPATIBLEFORMAT = 153_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOT = 154_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDINPUTSLOTCLASS = 155_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_STEPRATESLOTCLASSMISMATCH = 156_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOTCLASSCHANGE = 157_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSTEPRATECHANGE = 158_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDALIGNMENT = 159_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_DUPLICATESEMANTIC = 160_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_UNPARSEABLEINPUTSIGNATURE = 161_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_NULLSEMANTIC = 162_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_MISSINGELEMENT = 163_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_NULLDESC = 164_i32
    D3D11_MESSAGE_ID_CREATEVERTEXSHADER_OUTOFMEMORY = 165_i32
    D3D11_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERBYTECODE = 166_i32
    D3D11_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERTYPE = 167_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_OUTOFMEMORY = 168_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERBYTECODE = 169_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERTYPE = 170_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTOFMEMORY = 171_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERBYTECODE = 172_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE = 173_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMENTRIES = 174_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSTREAMSTRIDEUNUSED = 175_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDDECL = 176_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_EXPECTEDDECL = 177_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSLOT0EXPECTED = 178_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSLOT = 179_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_ONLYONEELEMENTPERSLOT = 180_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCOMPONENTCOUNT = 181_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTARTCOMPONENTANDCOMPONENTCOUNT = 182_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDGAPDEFINITION = 183_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_REPEATEDOUTPUT = 184_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSTREAMSTRIDE = 185_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGSEMANTIC = 186_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MASKMISMATCH = 187_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_CANTHAVEONLYGAPS = 188_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DECLTOOCOMPLEX = 189_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGOUTPUTSIGNATURE = 190_i32
    D3D11_MESSAGE_ID_CREATEPIXELSHADER_OUTOFMEMORY = 191_i32
    D3D11_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERBYTECODE = 192_i32
    D3D11_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERTYPE = 193_i32
    D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFILLMODE = 194_i32
    D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDCULLMODE = 195_i32
    D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDDEPTHBIASCLAMP = 196_i32
    D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDSLOPESCALEDDEPTHBIAS = 197_i32
    D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_TOOMANYOBJECTS = 198_i32
    D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_NULLDESC = 199_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHWRITEMASK = 200_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHFUNC = 201_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFAILOP = 202_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILZFAILOP = 203_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILPASSOP = 204_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFUNC = 205_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFAILOP = 206_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILZFAILOP = 207_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILPASSOP = 208_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFUNC = 209_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_TOOMANYOBJECTS = 210_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_NULLDESC = 211_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLEND = 212_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLEND = 213_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOP = 214_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLENDALPHA = 215_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLENDALPHA = 216_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOPALPHA = 217_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDRENDERTARGETWRITEMASK = 218_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_TOOMANYOBJECTS = 219_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_NULLDESC = 220_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDFILTER = 221_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSU = 222_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSV = 223_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSW = 224_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMIPLODBIAS = 225_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXANISOTROPY = 226_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDCOMPARISONFUNC = 227_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMINLOD = 228_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXLOD = 229_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_TOOMANYOBJECTS = 230_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_NULLDESC = 231_i32
    D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDQUERY = 232_i32
    D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDMISCFLAGS = 233_i32
    D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_UNEXPECTEDMISCFLAG = 234_i32
    D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_NULLDESC = 235_i32
    D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNRECOGNIZED = 236_i32
    D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNDEFINED = 237_i32
    D3D11_MESSAGE_ID_IASETVERTEXBUFFERS_INVALIDBUFFER = 238_i32
    D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_OFFSET_TOO_LARGE = 239_i32
    D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_BUFFERS_EMPTY = 240_i32
    D3D11_MESSAGE_ID_IASETINDEXBUFFER_INVALIDBUFFER = 241_i32
    D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_FORMAT_INVALID = 242_i32
    D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_OFFSET_TOO_LARGE = 243_i32
    D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_OFFSET_UNALIGNED = 244_i32
    D3D11_MESSAGE_ID_DEVICE_VSSETSHADERRESOURCES_VIEWS_EMPTY = 245_i32
    D3D11_MESSAGE_ID_VSSETCONSTANTBUFFERS_INVALIDBUFFER = 246_i32
    D3D11_MESSAGE_ID_DEVICE_VSSETCONSTANTBUFFERS_BUFFERS_EMPTY = 247_i32
    D3D11_MESSAGE_ID_DEVICE_VSSETSAMPLERS_SAMPLERS_EMPTY = 248_i32
    D3D11_MESSAGE_ID_DEVICE_GSSETSHADERRESOURCES_VIEWS_EMPTY = 249_i32
    D3D11_MESSAGE_ID_GSSETCONSTANTBUFFERS_INVALIDBUFFER = 250_i32
    D3D11_MESSAGE_ID_DEVICE_GSSETCONSTANTBUFFERS_BUFFERS_EMPTY = 251_i32
    D3D11_MESSAGE_ID_DEVICE_GSSETSAMPLERS_SAMPLERS_EMPTY = 252_i32
    D3D11_MESSAGE_ID_SOSETTARGETS_INVALIDBUFFER = 253_i32
    D3D11_MESSAGE_ID_DEVICE_SOSETTARGETS_OFFSET_UNALIGNED = 254_i32
    D3D11_MESSAGE_ID_DEVICE_PSSETSHADERRESOURCES_VIEWS_EMPTY = 255_i32
    D3D11_MESSAGE_ID_PSSETCONSTANTBUFFERS_INVALIDBUFFER = 256_i32
    D3D11_MESSAGE_ID_DEVICE_PSSETCONSTANTBUFFERS_BUFFERS_EMPTY = 257_i32
    D3D11_MESSAGE_ID_DEVICE_PSSETSAMPLERS_SAMPLERS_EMPTY = 258_i32
    D3D11_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_INVALIDVIEWPORT = 259_i32
    D3D11_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_INVALIDSCISSOR = 260_i32
    D3D11_MESSAGE_ID_CLEARRENDERTARGETVIEW_DENORMFLUSH = 261_i32
    D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DENORMFLUSH = 262_i32
    D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_INVALID = 263_i32
    D3D11_MESSAGE_ID_DEVICE_IAGETVERTEXBUFFERS_BUFFERS_EMPTY = 264_i32
    D3D11_MESSAGE_ID_DEVICE_VSGETSHADERRESOURCES_VIEWS_EMPTY = 265_i32
    D3D11_MESSAGE_ID_DEVICE_VSGETCONSTANTBUFFERS_BUFFERS_EMPTY = 266_i32
    D3D11_MESSAGE_ID_DEVICE_VSGETSAMPLERS_SAMPLERS_EMPTY = 267_i32
    D3D11_MESSAGE_ID_DEVICE_GSGETSHADERRESOURCES_VIEWS_EMPTY = 268_i32
    D3D11_MESSAGE_ID_DEVICE_GSGETCONSTANTBUFFERS_BUFFERS_EMPTY = 269_i32
    D3D11_MESSAGE_ID_DEVICE_GSGETSAMPLERS_SAMPLERS_EMPTY = 270_i32
    D3D11_MESSAGE_ID_DEVICE_SOGETTARGETS_BUFFERS_EMPTY = 271_i32
    D3D11_MESSAGE_ID_DEVICE_PSGETSHADERRESOURCES_VIEWS_EMPTY = 272_i32
    D3D11_MESSAGE_ID_DEVICE_PSGETCONSTANTBUFFERS_BUFFERS_EMPTY = 273_i32
    D3D11_MESSAGE_ID_DEVICE_PSGETSAMPLERS_SAMPLERS_EMPTY = 274_i32
    D3D11_MESSAGE_ID_DEVICE_RSGETVIEWPORTS_VIEWPORTS_EMPTY = 275_i32
    D3D11_MESSAGE_ID_DEVICE_RSGETSCISSORRECTS_RECTS_EMPTY = 276_i32
    D3D11_MESSAGE_ID_DEVICE_GENERATEMIPS_RESOURCE_INVALID = 277_i32
    D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDDESTINATIONSUBRESOURCE = 278_i32
    D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCESUBRESOURCE = 279_i32
    D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCEBOX = 280_i32
    D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCE = 281_i32
    D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDDESTINATIONSTATE = 282_i32
    D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCESTATE = 283_i32
    D3D11_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCE = 284_i32
    D3D11_MESSAGE_ID_COPYRESOURCE_INVALIDDESTINATIONSTATE = 285_i32
    D3D11_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCESTATE = 286_i32
    D3D11_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSUBRESOURCE = 287_i32
    D3D11_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONBOX = 288_i32
    D3D11_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSTATE = 289_i32
    D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_INVALID = 290_i32
    D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_SUBRESOURCE_INVALID = 291_i32
    D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_INVALID = 292_i32
    D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_SUBRESOURCE_INVALID = 293_i32
    D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_FORMAT_INVALID = 294_i32
    D3D11_MESSAGE_ID_BUFFER_MAP_INVALIDMAPTYPE = 295_i32
    D3D11_MESSAGE_ID_BUFFER_MAP_INVALIDFLAGS = 296_i32
    D3D11_MESSAGE_ID_BUFFER_MAP_ALREADYMAPPED = 297_i32
    D3D11_MESSAGE_ID_BUFFER_MAP_DEVICEREMOVED_RETURN = 298_i32
    D3D11_MESSAGE_ID_BUFFER_UNMAP_NOTMAPPED = 299_i32
    D3D11_MESSAGE_ID_TEXTURE1D_MAP_INVALIDMAPTYPE = 300_i32
    D3D11_MESSAGE_ID_TEXTURE1D_MAP_INVALIDSUBRESOURCE = 301_i32
    D3D11_MESSAGE_ID_TEXTURE1D_MAP_INVALIDFLAGS = 302_i32
    D3D11_MESSAGE_ID_TEXTURE1D_MAP_ALREADYMAPPED = 303_i32
    D3D11_MESSAGE_ID_TEXTURE1D_MAP_DEVICEREMOVED_RETURN = 304_i32
    D3D11_MESSAGE_ID_TEXTURE1D_UNMAP_INVALIDSUBRESOURCE = 305_i32
    D3D11_MESSAGE_ID_TEXTURE1D_UNMAP_NOTMAPPED = 306_i32
    D3D11_MESSAGE_ID_TEXTURE2D_MAP_INVALIDMAPTYPE = 307_i32
    D3D11_MESSAGE_ID_TEXTURE2D_MAP_INVALIDSUBRESOURCE = 308_i32
    D3D11_MESSAGE_ID_TEXTURE2D_MAP_INVALIDFLAGS = 309_i32
    D3D11_MESSAGE_ID_TEXTURE2D_MAP_ALREADYMAPPED = 310_i32
    D3D11_MESSAGE_ID_TEXTURE2D_MAP_DEVICEREMOVED_RETURN = 311_i32
    D3D11_MESSAGE_ID_TEXTURE2D_UNMAP_INVALIDSUBRESOURCE = 312_i32
    D3D11_MESSAGE_ID_TEXTURE2D_UNMAP_NOTMAPPED = 313_i32
    D3D11_MESSAGE_ID_TEXTURE3D_MAP_INVALIDMAPTYPE = 314_i32
    D3D11_MESSAGE_ID_TEXTURE3D_MAP_INVALIDSUBRESOURCE = 315_i32
    D3D11_MESSAGE_ID_TEXTURE3D_MAP_INVALIDFLAGS = 316_i32
    D3D11_MESSAGE_ID_TEXTURE3D_MAP_ALREADYMAPPED = 317_i32
    D3D11_MESSAGE_ID_TEXTURE3D_MAP_DEVICEREMOVED_RETURN = 318_i32
    D3D11_MESSAGE_ID_TEXTURE3D_UNMAP_INVALIDSUBRESOURCE = 319_i32
    D3D11_MESSAGE_ID_TEXTURE3D_UNMAP_NOTMAPPED = 320_i32
    D3D11_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_DEPRECATED = 321_i32
    D3D11_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_FORMAT_DEPRECATED = 322_i32
    D3D11_MESSAGE_ID_SETEXCEPTIONMODE_UNRECOGNIZEDFLAGS = 323_i32
    D3D11_MESSAGE_ID_SETEXCEPTIONMODE_INVALIDARG_RETURN = 324_i32
    D3D11_MESSAGE_ID_SETEXCEPTIONMODE_DEVICEREMOVED_RETURN = 325_i32
    D3D11_MESSAGE_ID_REF_SIMULATING_INFINITELY_FAST_HARDWARE = 326_i32
    D3D11_MESSAGE_ID_REF_THREADING_MODE = 327_i32
    D3D11_MESSAGE_ID_REF_UMDRIVER_EXCEPTION = 328_i32
    D3D11_MESSAGE_ID_REF_KMDRIVER_EXCEPTION = 329_i32
    D3D11_MESSAGE_ID_REF_HARDWARE_EXCEPTION = 330_i32
    D3D11_MESSAGE_ID_REF_ACCESSING_INDEXABLE_TEMP_OUT_OF_RANGE = 331_i32
    D3D11_MESSAGE_ID_REF_PROBLEM_PARSING_SHADER = 332_i32
    D3D11_MESSAGE_ID_REF_OUT_OF_MEMORY = 333_i32
    D3D11_MESSAGE_ID_REF_INFO = 334_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEXPOS_OVERFLOW = 335_i32
    D3D11_MESSAGE_ID_DEVICE_DRAWINDEXED_INDEXPOS_OVERFLOW = 336_i32
    D3D11_MESSAGE_ID_DEVICE_DRAWINSTANCED_VERTEXPOS_OVERFLOW = 337_i32
    D3D11_MESSAGE_ID_DEVICE_DRAWINSTANCED_INSTANCEPOS_OVERFLOW = 338_i32
    D3D11_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INSTANCEPOS_OVERFLOW = 339_i32
    D3D11_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INDEXPOS_OVERFLOW = 340_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_SHADER_NOT_SET = 341_i32
    D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND = 342_i32
    D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERINDEX = 343_i32
    D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_COMPONENTTYPE = 344_i32
    D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERMASK = 345_i32
    D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SYSTEMVALUE = 346_i32
    D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS = 347_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_BUFFER_NOT_SET = 348_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_INPUTLAYOUT_NOT_SET = 349_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_CONSTANT_BUFFER_NOT_SET = 350_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_CONSTANT_BUFFER_TOO_SMALL = 351_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_SAMPLER_NOT_SET = 352_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_SHADERRESOURCEVIEW_NOT_SET = 353_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_VIEW_DIMENSION_MISMATCH = 354_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_BUFFER_STRIDE_TOO_SMALL = 355_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_BUFFER_TOO_SMALL = 356_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_BUFFER_NOT_SET = 357_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_BUFFER_FORMAT_INVALID = 358_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_BUFFER_TOO_SMALL = 359_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_GS_INPUT_PRIMITIVE_MISMATCH = 360_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_RETURN_TYPE_MISMATCH = 361_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_POSITION_NOT_PRESENT = 362_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_OUTPUT_STREAM_NOT_SET = 363_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_BOUND_RESOURCE_MAPPED = 364_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_PRIMITIVETOPOLOGY = 365_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_OFFSET_UNALIGNED = 366_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_STRIDE_UNALIGNED = 367_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_OFFSET_UNALIGNED = 368_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_OUTPUT_STREAM_OFFSET_UNALIGNED = 369_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_LD_UNSUPPORTED = 370_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_SAMPLE_UNSUPPORTED = 371_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_SAMPLE_C_UNSUPPORTED = 372_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_MULTISAMPLE_UNSUPPORTED = 373_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_SO_TARGETS_BOUND_WITHOUT_SOURCE = 374_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_SO_STRIDE_LARGER_THAN_BUFFER = 375_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING = 376_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0 = 377_i32
    D3D11_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_AT_FAULT = 378_i32
    D3D11_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_POSSIBLY_AT_FAULT = 379_i32
    D3D11_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_NOT_AT_FAULT = 380_i32
    D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_INVALIDARG_RETURN = 381_i32
    D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_OUTOFMEMORY_RETURN = 382_i32
    D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BADINTERFACE_RETURN = 383_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_VIEWPORT_NOT_SET = 384_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_TRAILING_DIGIT_IN_SEMANTIC = 385_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_TRAILING_DIGIT_IN_SEMANTIC = 386_i32
    D3D11_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_DENORMFLUSH = 387_i32
    D3D11_MESSAGE_ID_OMSETRENDERTARGETS_INVALIDVIEW = 388_i32
    D3D11_MESSAGE_ID_DEVICE_SETTEXTFILTERSIZE_INVALIDDIMENSIONS = 389_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_SAMPLER_MISMATCH = 390_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_TYPE_MISMATCH = 391_i32
    D3D11_MESSAGE_ID_BLENDSTATE_GETDESC_LEGACY = 392_i32
    D3D11_MESSAGE_ID_SHADERRESOURCEVIEW_GETDESC_LEGACY = 393_i32
    D3D11_MESSAGE_ID_CREATEQUERY_OUTOFMEMORY_RETURN = 394_i32
    D3D11_MESSAGE_ID_CREATEPREDICATE_OUTOFMEMORY_RETURN = 395_i32
    D3D11_MESSAGE_ID_CREATECOUNTER_OUTOFRANGE_COUNTER = 396_i32
    D3D11_MESSAGE_ID_CREATECOUNTER_SIMULTANEOUS_ACTIVE_COUNTERS_EXHAUSTED = 397_i32
    D3D11_MESSAGE_ID_CREATECOUNTER_UNSUPPORTED_WELLKNOWN_COUNTER = 398_i32
    D3D11_MESSAGE_ID_CREATECOUNTER_OUTOFMEMORY_RETURN = 399_i32
    D3D11_MESSAGE_ID_CREATECOUNTER_NONEXCLUSIVE_RETURN = 400_i32
    D3D11_MESSAGE_ID_CREATECOUNTER_NULLDESC = 401_i32
    D3D11_MESSAGE_ID_CHECKCOUNTER_OUTOFRANGE_COUNTER = 402_i32
    D3D11_MESSAGE_ID_CHECKCOUNTER_UNSUPPORTED_WELLKNOWN_COUNTER = 403_i32
    D3D11_MESSAGE_ID_SETPREDICATION_INVALID_PREDICATE_STATE = 404_i32
    D3D11_MESSAGE_ID_QUERY_BEGIN_UNSUPPORTED = 405_i32
    D3D11_MESSAGE_ID_PREDICATE_BEGIN_DURING_PREDICATION = 406_i32
    D3D11_MESSAGE_ID_QUERY_BEGIN_DUPLICATE = 407_i32
    D3D11_MESSAGE_ID_QUERY_BEGIN_ABANDONING_PREVIOUS_RESULTS = 408_i32
    D3D11_MESSAGE_ID_PREDICATE_END_DURING_PREDICATION = 409_i32
    D3D11_MESSAGE_ID_QUERY_END_ABANDONING_PREVIOUS_RESULTS = 410_i32
    D3D11_MESSAGE_ID_QUERY_END_WITHOUT_BEGIN = 411_i32
    D3D11_MESSAGE_ID_QUERY_GETDATA_INVALID_DATASIZE = 412_i32
    D3D11_MESSAGE_ID_QUERY_GETDATA_INVALID_FLAGS = 413_i32
    D3D11_MESSAGE_ID_QUERY_GETDATA_INVALID_CALL = 414_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_PS_OUTPUT_TYPE_MISMATCH = 415_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_GATHER_UNSUPPORTED = 416_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN = 417_i32
    D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_STRIDE_TOO_LARGE = 418_i32
    D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_INVALIDRANGE = 419_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_EMPTY_LAYOUT = 420_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_SAMPLE_COUNT_MISMATCH = 421_i32
    D3D11_MESSAGE_ID_LIVE_OBJECT_SUMMARY = 422_i32
    D3D11_MESSAGE_ID_LIVE_BUFFER = 423_i32
    D3D11_MESSAGE_ID_LIVE_TEXTURE1D = 424_i32
    D3D11_MESSAGE_ID_LIVE_TEXTURE2D = 425_i32
    D3D11_MESSAGE_ID_LIVE_TEXTURE3D = 426_i32
    D3D11_MESSAGE_ID_LIVE_SHADERRESOURCEVIEW = 427_i32
    D3D11_MESSAGE_ID_LIVE_RENDERTARGETVIEW = 428_i32
    D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILVIEW = 429_i32
    D3D11_MESSAGE_ID_LIVE_VERTEXSHADER = 430_i32
    D3D11_MESSAGE_ID_LIVE_GEOMETRYSHADER = 431_i32
    D3D11_MESSAGE_ID_LIVE_PIXELSHADER = 432_i32
    D3D11_MESSAGE_ID_LIVE_INPUTLAYOUT = 433_i32
    D3D11_MESSAGE_ID_LIVE_SAMPLER = 434_i32
    D3D11_MESSAGE_ID_LIVE_BLENDSTATE = 435_i32
    D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILSTATE = 436_i32
    D3D11_MESSAGE_ID_LIVE_RASTERIZERSTATE = 437_i32
    D3D11_MESSAGE_ID_LIVE_QUERY = 438_i32
    D3D11_MESSAGE_ID_LIVE_PREDICATE = 439_i32
    D3D11_MESSAGE_ID_LIVE_COUNTER = 440_i32
    D3D11_MESSAGE_ID_LIVE_DEVICE = 441_i32
    D3D11_MESSAGE_ID_LIVE_SWAPCHAIN = 442_i32
    D3D11_MESSAGE_ID_D3D10_MESSAGES_END = 443_i32
    D3D11_MESSAGE_ID_D3D10L9_MESSAGES_START = 1048576_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_STENCIL_NO_TWO_SIDED = 1048577_i32
    D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_DepthBiasClamp_NOT_SUPPORTED = 1048578_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_NO_COMPARISON_SUPPORT = 1048579_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_EXCESSIVE_ANISOTROPY = 1048580_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_BORDER_OUT_OF_RANGE = 1048581_i32
    D3D11_MESSAGE_ID_VSSETSAMPLERS_NOT_SUPPORTED = 1048582_i32
    D3D11_MESSAGE_ID_VSSETSAMPLERS_TOO_MANY_SAMPLERS = 1048583_i32
    D3D11_MESSAGE_ID_PSSETSAMPLERS_TOO_MANY_SAMPLERS = 1048584_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_NO_ARRAYS = 1048585_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_NO_VB_AND_IB_BIND = 1048586_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_NO_TEXTURE_1D = 1048587_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_DIMENSION_OUT_OF_RANGE = 1048588_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_NOT_BINDABLE_AS_SHADER_RESOURCE = 1048589_i32
    D3D11_MESSAGE_ID_OMSETRENDERTARGETS_TOO_MANY_RENDER_TARGETS = 1048590_i32
    D3D11_MESSAGE_ID_OMSETRENDERTARGETS_NO_DIFFERING_BIT_DEPTHS = 1048591_i32
    D3D11_MESSAGE_ID_IASETVERTEXBUFFERS_BAD_BUFFER_INDEX = 1048592_i32
    D3D11_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_TOO_MANY_VIEWPORTS = 1048593_i32
    D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_ADJACENCY_UNSUPPORTED = 1048594_i32
    D3D11_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_TOO_MANY_SCISSORS = 1048595_i32
    D3D11_MESSAGE_ID_COPYRESOURCE_ONLY_TEXTURE_2D_WITHIN_GPU_MEMORY = 1048596_i32
    D3D11_MESSAGE_ID_COPYRESOURCE_NO_TEXTURE_3D_READBACK = 1048597_i32
    D3D11_MESSAGE_ID_COPYRESOURCE_NO_TEXTURE_ONLY_READBACK = 1048598_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_UNSUPPORTED_FORMAT = 1048599_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_ALPHA_TO_COVERAGE = 1048600_i32
    D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_DepthClipEnable_MUST_BE_TRUE = 1048601_i32
    D3D11_MESSAGE_ID_DRAWINDEXED_STARTINDEXLOCATION_MUST_BE_POSITIVE = 1048602_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_MUST_USE_LOWEST_LOD = 1048603_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_MINLOD_MUST_NOT_BE_FRACTIONAL = 1048604_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_MAXLOD_MUST_BE_FLT_MAX = 1048605_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_FIRSTARRAYSLICE_MUST_BE_ZERO = 1048606_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_CUBES_MUST_HAVE_6_SIDES = 1048607_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_NOT_BINDABLE_AS_RENDER_TARGET = 1048608_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_NO_DWORD_INDEX_BUFFER = 1048609_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_MSAA_PRECLUDES_SHADER_RESOURCE = 1048610_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_PRESENTATION_PRECLUDES_SHADER_RESOURCE = 1048611_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_INDEPENDENT_BLEND_ENABLE = 1048612_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_INDEPENDENT_WRITE_MASKS = 1048613_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_NO_STREAM_OUT = 1048614_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_ONLY_VB_IB_FOR_BUFFERS = 1048615_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_NO_AUTOGEN_FOR_VOLUMES = 1048616_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_DXGI_FORMAT_R8G8B8A8_CANNOT_BE_SHARED = 1048617_i32
    D3D11_MESSAGE_ID_VSSHADERRESOURCES_NOT_SUPPORTED = 1048618_i32
    D3D11_MESSAGE_ID_GEOMETRY_SHADER_NOT_SUPPORTED = 1048619_i32
    D3D11_MESSAGE_ID_STREAM_OUT_NOT_SUPPORTED = 1048620_i32
    D3D11_MESSAGE_ID_TEXT_FILTER_NOT_SUPPORTED = 1048621_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_SEPARATE_ALPHA_BLEND = 1048622_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_MRT_BLEND = 1048623_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_OPERATION_NOT_SUPPORTED = 1048624_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_NO_MIRRORONCE = 1048625_i32
    D3D11_MESSAGE_ID_DRAWINSTANCED_NOT_SUPPORTED = 1048626_i32
    D3D11_MESSAGE_ID_DRAWINDEXEDINSTANCED_NOT_SUPPORTED_BELOW_9_3 = 1048627_i32
    D3D11_MESSAGE_ID_DRAWINDEXED_POINTLIST_UNSUPPORTED = 1048628_i32
    D3D11_MESSAGE_ID_SETBLENDSTATE_SAMPLE_MASK_CANNOT_BE_ZERO = 1048629_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_DIMENSION_EXCEEDS_FEATURE_LEVEL_DEFINITION = 1048630_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_ONLY_SINGLE_MIP_LEVEL_DEPTH_STENCIL_SUPPORTED = 1048631_i32
    D3D11_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_NEGATIVESCISSOR = 1048632_i32
    D3D11_MESSAGE_ID_SLOT_ZERO_MUST_BE_D3D10_INPUT_PER_VERTEX_DATA = 1048633_i32
    D3D11_MESSAGE_ID_CREATERESOURCE_NON_POW_2_MIPMAP = 1048634_i32
    D3D11_MESSAGE_ID_CREATESAMPLERSTATE_BORDER_NOT_SUPPORTED = 1048635_i32
    D3D11_MESSAGE_ID_OMSETRENDERTARGETS_NO_SRGB_MRT = 1048636_i32
    D3D11_MESSAGE_ID_COPYRESOURCE_NO_3D_MISMATCHED_UPDATES = 1048637_i32
    D3D11_MESSAGE_ID_D3D10L9_MESSAGES_END = 1048638_i32
    D3D11_MESSAGE_ID_D3D11_MESSAGES_START = 2097152_i32
    D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFLAGS = 2097153_i32
    D3D11_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDCLASSLINKAGE = 2097154_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDCLASSLINKAGE = 2097155_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTREAMS = 2097156_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAMTORASTERIZER = 2097157_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTREAMS = 2097158_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCLASSLINKAGE = 2097159_i32
    D3D11_MESSAGE_ID_CREATEPIXELSHADER_INVALIDCLASSLINKAGE = 2097160_i32
    D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_INVALID_COMMANDLISTFLAGS = 2097161_i32
    D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_SINGLETHREADED = 2097162_i32
    D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_INVALIDARG_RETURN = 2097163_i32
    D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_INVALID_CALL_RETURN = 2097164_i32
    D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_OUTOFMEMORY_RETURN = 2097165_i32
    D3D11_MESSAGE_ID_FINISHDISPLAYLIST_ONIMMEDIATECONTEXT = 2097166_i32
    D3D11_MESSAGE_ID_FINISHDISPLAYLIST_OUTOFMEMORY_RETURN = 2097167_i32
    D3D11_MESSAGE_ID_FINISHDISPLAYLIST_INVALID_CALL_RETURN = 2097168_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAM = 2097169_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDENTRIES = 2097170_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTRIDES = 2097171_i32
    D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTRIDES = 2097172_i32
    D3D11_MESSAGE_ID_DEVICE_HSSETSHADERRESOURCES_HAZARD = 2097173_i32
    D3D11_MESSAGE_ID_DEVICE_HSSETCONSTANTBUFFERS_HAZARD = 2097174_i32
    D3D11_MESSAGE_ID_HSSETSHADERRESOURCES_UNBINDDELETINGOBJECT = 2097175_i32
    D3D11_MESSAGE_ID_HSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT = 2097176_i32
    D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDCALL = 2097177_i32
    D3D11_MESSAGE_ID_CREATEHULLSHADER_OUTOFMEMORY = 2097178_i32
    D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERBYTECODE = 2097179_i32
    D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERTYPE = 2097180_i32
    D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDCLASSLINKAGE = 2097181_i32
    D3D11_MESSAGE_ID_DEVICE_HSSETSHADERRESOURCES_VIEWS_EMPTY = 2097182_i32
    D3D11_MESSAGE_ID_HSSETCONSTANTBUFFERS_INVALIDBUFFER = 2097183_i32
    D3D11_MESSAGE_ID_DEVICE_HSSETCONSTANTBUFFERS_BUFFERS_EMPTY = 2097184_i32
    D3D11_MESSAGE_ID_DEVICE_HSSETSAMPLERS_SAMPLERS_EMPTY = 2097185_i32
    D3D11_MESSAGE_ID_DEVICE_HSGETSHADERRESOURCES_VIEWS_EMPTY = 2097186_i32
    D3D11_MESSAGE_ID_DEVICE_HSGETCONSTANTBUFFERS_BUFFERS_EMPTY = 2097187_i32
    D3D11_MESSAGE_ID_DEVICE_HSGETSAMPLERS_SAMPLERS_EMPTY = 2097188_i32
    D3D11_MESSAGE_ID_DEVICE_DSSETSHADERRESOURCES_HAZARD = 2097189_i32
    D3D11_MESSAGE_ID_DEVICE_DSSETCONSTANTBUFFERS_HAZARD = 2097190_i32
    D3D11_MESSAGE_ID_DSSETSHADERRESOURCES_UNBINDDELETINGOBJECT = 2097191_i32
    D3D11_MESSAGE_ID_DSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT = 2097192_i32
    D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCALL = 2097193_i32
    D3D11_MESSAGE_ID_CREATEDOMAINSHADER_OUTOFMEMORY = 2097194_i32
    D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERBYTECODE = 2097195_i32
    D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERTYPE = 2097196_i32
    D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCLASSLINKAGE = 2097197_i32
    D3D11_MESSAGE_ID_DEVICE_DSSETSHADERRESOURCES_VIEWS_EMPTY = 2097198_i32
    D3D11_MESSAGE_ID_DSSETCONSTANTBUFFERS_INVALIDBUFFER = 2097199_i32
    D3D11_MESSAGE_ID_DEVICE_DSSETCONSTANTBUFFERS_BUFFERS_EMPTY = 2097200_i32
    D3D11_MESSAGE_ID_DEVICE_DSSETSAMPLERS_SAMPLERS_EMPTY = 2097201_i32
    D3D11_MESSAGE_ID_DEVICE_DSGETSHADERRESOURCES_VIEWS_EMPTY = 2097202_i32
    D3D11_MESSAGE_ID_DEVICE_DSGETCONSTANTBUFFERS_BUFFERS_EMPTY = 2097203_i32
    D3D11_MESSAGE_ID_DEVICE_DSGETSAMPLERS_SAMPLERS_EMPTY = 2097204_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_HS_XOR_DS_MISMATCH = 2097205_i32
    D3D11_MESSAGE_ID_DEFERRED_CONTEXT_REMOVAL_PROCESS_AT_FAULT = 2097206_i32
    D3D11_MESSAGE_ID_DEVICE_DRAWINDIRECT_INVALID_ARG_BUFFER = 2097207_i32
    D3D11_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_UNALIGNED = 2097208_i32
    D3D11_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_OVERFLOW = 2097209_i32
    D3D11_MESSAGE_ID_RESOURCE_MAP_INVALIDMAPTYPE = 2097210_i32
    D3D11_MESSAGE_ID_RESOURCE_MAP_INVALIDSUBRESOURCE = 2097211_i32
    D3D11_MESSAGE_ID_RESOURCE_MAP_INVALIDFLAGS = 2097212_i32
    D3D11_MESSAGE_ID_RESOURCE_MAP_ALREADYMAPPED = 2097213_i32
    D3D11_MESSAGE_ID_RESOURCE_MAP_DEVICEREMOVED_RETURN = 2097214_i32
    D3D11_MESSAGE_ID_RESOURCE_MAP_OUTOFMEMORY_RETURN = 2097215_i32
    D3D11_MESSAGE_ID_RESOURCE_MAP_WITHOUT_INITIAL_DISCARD = 2097216_i32
    D3D11_MESSAGE_ID_RESOURCE_UNMAP_INVALIDSUBRESOURCE = 2097217_i32
    D3D11_MESSAGE_ID_RESOURCE_UNMAP_NOTMAPPED = 2097218_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_RASTERIZING_CONTROL_POINTS = 2097219_i32
    D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNSUPPORTED = 2097220_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_HS_DS_SIGNATURE_MISMATCH = 2097221_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH = 2097222_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_HS_DS_CONTROL_POINT_COUNT_MISMATCH = 2097223_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_HS_DS_TESSELLATOR_DOMAIN_MISMATCH = 2097224_i32
    D3D11_MESSAGE_ID_CREATE_CONTEXT = 2097225_i32
    D3D11_MESSAGE_ID_LIVE_CONTEXT = 2097226_i32
    D3D11_MESSAGE_ID_DESTROY_CONTEXT = 2097227_i32
    D3D11_MESSAGE_ID_CREATE_BUFFER = 2097228_i32
    D3D11_MESSAGE_ID_LIVE_BUFFER_WIN7 = 2097229_i32
    D3D11_MESSAGE_ID_DESTROY_BUFFER = 2097230_i32
    D3D11_MESSAGE_ID_CREATE_TEXTURE1D = 2097231_i32
    D3D11_MESSAGE_ID_LIVE_TEXTURE1D_WIN7 = 2097232_i32
    D3D11_MESSAGE_ID_DESTROY_TEXTURE1D = 2097233_i32
    D3D11_MESSAGE_ID_CREATE_TEXTURE2D = 2097234_i32
    D3D11_MESSAGE_ID_LIVE_TEXTURE2D_WIN7 = 2097235_i32
    D3D11_MESSAGE_ID_DESTROY_TEXTURE2D = 2097236_i32
    D3D11_MESSAGE_ID_CREATE_TEXTURE3D = 2097237_i32
    D3D11_MESSAGE_ID_LIVE_TEXTURE3D_WIN7 = 2097238_i32
    D3D11_MESSAGE_ID_DESTROY_TEXTURE3D = 2097239_i32
    D3D11_MESSAGE_ID_CREATE_SHADERRESOURCEVIEW = 2097240_i32
    D3D11_MESSAGE_ID_LIVE_SHADERRESOURCEVIEW_WIN7 = 2097241_i32
    D3D11_MESSAGE_ID_DESTROY_SHADERRESOURCEVIEW = 2097242_i32
    D3D11_MESSAGE_ID_CREATE_RENDERTARGETVIEW = 2097243_i32
    D3D11_MESSAGE_ID_LIVE_RENDERTARGETVIEW_WIN7 = 2097244_i32
    D3D11_MESSAGE_ID_DESTROY_RENDERTARGETVIEW = 2097245_i32
    D3D11_MESSAGE_ID_CREATE_DEPTHSTENCILVIEW = 2097246_i32
    D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILVIEW_WIN7 = 2097247_i32
    D3D11_MESSAGE_ID_DESTROY_DEPTHSTENCILVIEW = 2097248_i32
    D3D11_MESSAGE_ID_CREATE_VERTEXSHADER = 2097249_i32
    D3D11_MESSAGE_ID_LIVE_VERTEXSHADER_WIN7 = 2097250_i32
    D3D11_MESSAGE_ID_DESTROY_VERTEXSHADER = 2097251_i32
    D3D11_MESSAGE_ID_CREATE_HULLSHADER = 2097252_i32
    D3D11_MESSAGE_ID_LIVE_HULLSHADER = 2097253_i32
    D3D11_MESSAGE_ID_DESTROY_HULLSHADER = 2097254_i32
    D3D11_MESSAGE_ID_CREATE_DOMAINSHADER = 2097255_i32
    D3D11_MESSAGE_ID_LIVE_DOMAINSHADER = 2097256_i32
    D3D11_MESSAGE_ID_DESTROY_DOMAINSHADER = 2097257_i32
    D3D11_MESSAGE_ID_CREATE_GEOMETRYSHADER = 2097258_i32
    D3D11_MESSAGE_ID_LIVE_GEOMETRYSHADER_WIN7 = 2097259_i32
    D3D11_MESSAGE_ID_DESTROY_GEOMETRYSHADER = 2097260_i32
    D3D11_MESSAGE_ID_CREATE_PIXELSHADER = 2097261_i32
    D3D11_MESSAGE_ID_LIVE_PIXELSHADER_WIN7 = 2097262_i32
    D3D11_MESSAGE_ID_DESTROY_PIXELSHADER = 2097263_i32
    D3D11_MESSAGE_ID_CREATE_INPUTLAYOUT = 2097264_i32
    D3D11_MESSAGE_ID_LIVE_INPUTLAYOUT_WIN7 = 2097265_i32
    D3D11_MESSAGE_ID_DESTROY_INPUTLAYOUT = 2097266_i32
    D3D11_MESSAGE_ID_CREATE_SAMPLER = 2097267_i32
    D3D11_MESSAGE_ID_LIVE_SAMPLER_WIN7 = 2097268_i32
    D3D11_MESSAGE_ID_DESTROY_SAMPLER = 2097269_i32
    D3D11_MESSAGE_ID_CREATE_BLENDSTATE = 2097270_i32
    D3D11_MESSAGE_ID_LIVE_BLENDSTATE_WIN7 = 2097271_i32
    D3D11_MESSAGE_ID_DESTROY_BLENDSTATE = 2097272_i32
    D3D11_MESSAGE_ID_CREATE_DEPTHSTENCILSTATE = 2097273_i32
    D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILSTATE_WIN7 = 2097274_i32
    D3D11_MESSAGE_ID_DESTROY_DEPTHSTENCILSTATE = 2097275_i32
    D3D11_MESSAGE_ID_CREATE_RASTERIZERSTATE = 2097276_i32
    D3D11_MESSAGE_ID_LIVE_RASTERIZERSTATE_WIN7 = 2097277_i32
    D3D11_MESSAGE_ID_DESTROY_RASTERIZERSTATE = 2097278_i32
    D3D11_MESSAGE_ID_CREATE_QUERY = 2097279_i32
    D3D11_MESSAGE_ID_LIVE_QUERY_WIN7 = 2097280_i32
    D3D11_MESSAGE_ID_DESTROY_QUERY = 2097281_i32
    D3D11_MESSAGE_ID_CREATE_PREDICATE = 2097282_i32
    D3D11_MESSAGE_ID_LIVE_PREDICATE_WIN7 = 2097283_i32
    D3D11_MESSAGE_ID_DESTROY_PREDICATE = 2097284_i32
    D3D11_MESSAGE_ID_CREATE_COUNTER = 2097285_i32
    D3D11_MESSAGE_ID_DESTROY_COUNTER = 2097286_i32
    D3D11_MESSAGE_ID_CREATE_COMMANDLIST = 2097287_i32
    D3D11_MESSAGE_ID_LIVE_COMMANDLIST = 2097288_i32
    D3D11_MESSAGE_ID_DESTROY_COMMANDLIST = 2097289_i32
    D3D11_MESSAGE_ID_CREATE_CLASSINSTANCE = 2097290_i32
    D3D11_MESSAGE_ID_LIVE_CLASSINSTANCE = 2097291_i32
    D3D11_MESSAGE_ID_DESTROY_CLASSINSTANCE = 2097292_i32
    D3D11_MESSAGE_ID_CREATE_CLASSLINKAGE = 2097293_i32
    D3D11_MESSAGE_ID_LIVE_CLASSLINKAGE = 2097294_i32
    D3D11_MESSAGE_ID_DESTROY_CLASSLINKAGE = 2097295_i32
    D3D11_MESSAGE_ID_LIVE_DEVICE_WIN7 = 2097296_i32
    D3D11_MESSAGE_ID_LIVE_OBJECT_SUMMARY_WIN7 = 2097297_i32
    D3D11_MESSAGE_ID_CREATE_COMPUTESHADER = 2097298_i32
    D3D11_MESSAGE_ID_LIVE_COMPUTESHADER = 2097299_i32
    D3D11_MESSAGE_ID_DESTROY_COMPUTESHADER = 2097300_i32
    D3D11_MESSAGE_ID_CREATE_UNORDEREDACCESSVIEW = 2097301_i32
    D3D11_MESSAGE_ID_LIVE_UNORDEREDACCESSVIEW = 2097302_i32
    D3D11_MESSAGE_ID_DESTROY_UNORDEREDACCESSVIEW = 2097303_i32
    D3D11_MESSAGE_ID_DEVICE_SETSHADER_INTERFACES_FEATURELEVEL = 2097304_i32
    D3D11_MESSAGE_ID_DEVICE_SETSHADER_INTERFACE_COUNT_MISMATCH = 2097305_i32
    D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE = 2097306_i32
    D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE_INDEX = 2097307_i32
    D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE_TYPE = 2097308_i32
    D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE_DATA = 2097309_i32
    D3D11_MESSAGE_ID_DEVICE_SETSHADER_UNBOUND_INSTANCE_DATA = 2097310_i32
    D3D11_MESSAGE_ID_DEVICE_SETSHADER_INSTANCE_DATA_BINDINGS = 2097311_i32
    D3D11_MESSAGE_ID_DEVICE_CREATESHADER_CLASSLINKAGE_FULL = 2097312_i32
    D3D11_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_UNRECOGNIZED_FEATURE = 2097313_i32
    D3D11_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_MISMATCHED_DATA_SIZE = 2097314_i32
    D3D11_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_INVALIDARG_RETURN = 2097315_i32
    D3D11_MESSAGE_ID_DEVICE_CSSETSHADERRESOURCES_HAZARD = 2097316_i32
    D3D11_MESSAGE_ID_DEVICE_CSSETCONSTANTBUFFERS_HAZARD = 2097317_i32
    D3D11_MESSAGE_ID_CSSETSHADERRESOURCES_UNBINDDELETINGOBJECT = 2097318_i32
    D3D11_MESSAGE_ID_CSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT = 2097319_i32
    D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCALL = 2097320_i32
    D3D11_MESSAGE_ID_CREATECOMPUTESHADER_OUTOFMEMORY = 2097321_i32
    D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERBYTECODE = 2097322_i32
    D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERTYPE = 2097323_i32
    D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCLASSLINKAGE = 2097324_i32
    D3D11_MESSAGE_ID_DEVICE_CSSETSHADERRESOURCES_VIEWS_EMPTY = 2097325_i32
    D3D11_MESSAGE_ID_CSSETCONSTANTBUFFERS_INVALIDBUFFER = 2097326_i32
    D3D11_MESSAGE_ID_DEVICE_CSSETCONSTANTBUFFERS_BUFFERS_EMPTY = 2097327_i32
    D3D11_MESSAGE_ID_DEVICE_CSSETSAMPLERS_SAMPLERS_EMPTY = 2097328_i32
    D3D11_MESSAGE_ID_DEVICE_CSGETSHADERRESOURCES_VIEWS_EMPTY = 2097329_i32
    D3D11_MESSAGE_ID_DEVICE_CSGETCONSTANTBUFFERS_BUFFERS_EMPTY = 2097330_i32
    D3D11_MESSAGE_ID_DEVICE_CSGETSAMPLERS_SAMPLERS_EMPTY = 2097331_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEFLOATOPSNOTSUPPORTED = 2097332_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEFLOATOPSNOTSUPPORTED = 2097333_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEFLOATOPSNOTSUPPORTED = 2097334_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEFLOATOPSNOTSUPPORTED = 2097335_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEFLOATOPSNOTSUPPORTED = 2097336_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEFLOATOPSNOTSUPPORTED = 2097337_i32
    D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEFLOATOPSNOTSUPPORTED = 2097338_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDSTRUCTURESTRIDE = 2097339_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFLAGS = 2097340_i32
    D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDRESOURCE = 2097341_i32
    D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDESC = 2097342_i32
    D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFORMAT = 2097343_i32
    D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS = 2097344_i32
    D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_UNRECOGNIZEDFORMAT = 2097345_i32
    D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_HAZARD = 2097346_i32
    D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_OVERLAPPING_OLD_SLOTS = 2097347_i32
    D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_NO_OP = 2097348_i32
    D3D11_MESSAGE_ID_CSSETUNORDEREDACCESSVIEWS_UNBINDDELETINGOBJECT = 2097349_i32
    D3D11_MESSAGE_ID_PSSETUNORDEREDACCESSVIEWS_UNBINDDELETINGOBJECT = 2097350_i32
    D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDARG_RETURN = 2097351_i32
    D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_OUTOFMEMORY_RETURN = 2097352_i32
    D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_TOOMANYOBJECTS = 2097353_i32
    D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_HAZARD = 2097354_i32
    D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_DENORMFLUSH = 2097355_i32
    D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSS_VIEWS_EMPTY = 2097356_i32
    D3D11_MESSAGE_ID_DEVICE_CSGETUNORDEREDACCESSS_VIEWS_EMPTY = 2097357_i32
    D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFLAGS = 2097358_i32
    D3D11_MESSAGE_ID_CREATESHADERRESESOURCEVIEW_TOOMANYOBJECTS = 2097359_i32
    D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_INVALID_ARG_BUFFER = 2097360_i32
    D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_UNALIGNED = 2097361_i32
    D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_OVERFLOW = 2097362_i32
    D3D11_MESSAGE_ID_DEVICE_SETRESOURCEMINLOD_INVALIDCONTEXT = 2097363_i32
    D3D11_MESSAGE_ID_DEVICE_SETRESOURCEMINLOD_INVALIDRESOURCE = 2097364_i32
    D3D11_MESSAGE_ID_DEVICE_SETRESOURCEMINLOD_INVALIDMINLOD = 2097365_i32
    D3D11_MESSAGE_ID_DEVICE_GETRESOURCEMINLOD_INVALIDCONTEXT = 2097366_i32
    D3D11_MESSAGE_ID_DEVICE_GETRESOURCEMINLOD_INVALIDRESOURCE = 2097367_i32
    D3D11_MESSAGE_ID_OMSETDEPTHSTENCIL_UNBINDDELETINGOBJECT = 2097368_i32
    D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DEPTH_READONLY = 2097369_i32
    D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_STENCIL_READONLY = 2097370_i32
    D3D11_MESSAGE_ID_CHECKFEATURESUPPORT_FORMAT_DEPRECATED = 2097371_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RETURN_TYPE_MISMATCH = 2097372_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET = 2097373_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_UNORDEREDACCESSVIEW_RENDERTARGETVIEW_OVERLAP = 2097374_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_DIMENSION_MISMATCH = 2097375_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_APPEND_UNSUPPORTED = 2097376_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMICS_UNSUPPORTED = 2097377_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_STRUCTURE_STRIDE_MISMATCH = 2097378_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_BUFFER_TYPE_MISMATCH = 2097379_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RAW_UNSUPPORTED = 2097380_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_LD_UNSUPPORTED = 2097381_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_STORE_UNSUPPORTED = 2097382_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_ADD_UNSUPPORTED = 2097383_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_BITWISE_OPS_UNSUPPORTED = 2097384_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_CMPSTORE_CMPEXCHANGE_UNSUPPORTED = 2097385_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_EXCHANGE_UNSUPPORTED = 2097386_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_SIGNED_MINMAX_UNSUPPORTED = 2097387_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_UNSIGNED_MINMAX_UNSUPPORTED = 2097388_i32
    D3D11_MESSAGE_ID_DEVICE_DISPATCH_BOUND_RESOURCE_MAPPED = 2097389_i32
    D3D11_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_OVERFLOW = 2097390_i32
    D3D11_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_ZERO = 2097391_i32
    D3D11_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_STRUCTURE_STRIDE_MISMATCH = 2097392_i32
    D3D11_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_BUFFER_TYPE_MISMATCH = 2097393_i32
    D3D11_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_RAW_UNSUPPORTED = 2097394_i32
    D3D11_MESSAGE_ID_DEVICE_DISPATCH_UNSUPPORTED = 2097395_i32
    D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_UNSUPPORTED = 2097396_i32
    D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDOFFSET = 2097397_i32
    D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_LARGEOFFSET = 2097398_i32
    D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDDESTINATIONSTATE = 2097399_i32
    D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDSOURCESTATE = 2097400_i32
    D3D11_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_NOT_SUPPORTED = 2097401_i32
    D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_INVALIDVIEW = 2097402_i32
    D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_INVALIDOFFSET = 2097403_i32
    D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_TOOMANYVIEWS = 2097404_i32
    D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWFLOAT_INVALIDFORMAT = 2097405_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_COUNTER_UNSUPPORTED = 2097406_i32
    D3D11_MESSAGE_ID_REF_WARNING = 2097407_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_PIXEL_SHADER_WITHOUT_RTV_OR_DSV = 2097408_i32
    D3D11_MESSAGE_ID_SHADER_ABORT = 2097409_i32
    D3D11_MESSAGE_ID_SHADER_MESSAGE = 2097410_i32
    D3D11_MESSAGE_ID_SHADER_ERROR = 2097411_i32
    D3D11_MESSAGE_ID_OFFERRESOURCES_INVALIDRESOURCE = 2097412_i32
    D3D11_MESSAGE_ID_HSSETSAMPLERS_UNBINDDELETINGOBJECT = 2097413_i32
    D3D11_MESSAGE_ID_DSSETSAMPLERS_UNBINDDELETINGOBJECT = 2097414_i32
    D3D11_MESSAGE_ID_CSSETSAMPLERS_UNBINDDELETINGOBJECT = 2097415_i32
    D3D11_MESSAGE_ID_HSSETSHADER_UNBINDDELETINGOBJECT = 2097416_i32
    D3D11_MESSAGE_ID_DSSETSHADER_UNBINDDELETINGOBJECT = 2097417_i32
    D3D11_MESSAGE_ID_CSSETSHADER_UNBINDDELETINGOBJECT = 2097418_i32
    D3D11_MESSAGE_ID_ENQUEUESETEVENT_INVALIDARG_RETURN = 2097419_i32
    D3D11_MESSAGE_ID_ENQUEUESETEVENT_OUTOFMEMORY_RETURN = 2097420_i32
    D3D11_MESSAGE_ID_ENQUEUESETEVENT_ACCESSDENIED_RETURN = 2097421_i32
    D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_NUMUAVS_INVALIDRANGE = 2097422_i32
    D3D11_MESSAGE_ID_USE_OF_ZERO_REFCOUNT_OBJECT = 2097423_i32
    D3D11_MESSAGE_ID_D3D11_MESSAGES_END = 2097424_i32
    D3D11_MESSAGE_ID_D3D11_1_MESSAGES_START = 3145728_i32
    D3D11_MESSAGE_ID_CREATE_VIDEODECODER = 3145729_i32
    D3D11_MESSAGE_ID_CREATE_VIDEOPROCESSORENUM = 3145730_i32
    D3D11_MESSAGE_ID_CREATE_VIDEOPROCESSOR = 3145731_i32
    D3D11_MESSAGE_ID_CREATE_DECODEROUTPUTVIEW = 3145732_i32
    D3D11_MESSAGE_ID_CREATE_PROCESSORINPUTVIEW = 3145733_i32
    D3D11_MESSAGE_ID_CREATE_PROCESSOROUTPUTVIEW = 3145734_i32
    D3D11_MESSAGE_ID_CREATE_DEVICECONTEXTSTATE = 3145735_i32
    D3D11_MESSAGE_ID_LIVE_VIDEODECODER = 3145736_i32
    D3D11_MESSAGE_ID_LIVE_VIDEOPROCESSORENUM = 3145737_i32
    D3D11_MESSAGE_ID_LIVE_VIDEOPROCESSOR = 3145738_i32
    D3D11_MESSAGE_ID_LIVE_DECODEROUTPUTVIEW = 3145739_i32
    D3D11_MESSAGE_ID_LIVE_PROCESSORINPUTVIEW = 3145740_i32
    D3D11_MESSAGE_ID_LIVE_PROCESSOROUTPUTVIEW = 3145741_i32
    D3D11_MESSAGE_ID_LIVE_DEVICECONTEXTSTATE = 3145742_i32
    D3D11_MESSAGE_ID_DESTROY_VIDEODECODER = 3145743_i32
    D3D11_MESSAGE_ID_DESTROY_VIDEOPROCESSORENUM = 3145744_i32
    D3D11_MESSAGE_ID_DESTROY_VIDEOPROCESSOR = 3145745_i32
    D3D11_MESSAGE_ID_DESTROY_DECODEROUTPUTVIEW = 3145746_i32
    D3D11_MESSAGE_ID_DESTROY_PROCESSORINPUTVIEW = 3145747_i32
    D3D11_MESSAGE_ID_DESTROY_PROCESSOROUTPUTVIEW = 3145748_i32
    D3D11_MESSAGE_ID_DESTROY_DEVICECONTEXTSTATE = 3145749_i32
    D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_INVALIDFLAGS = 3145750_i32
    D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_INVALIDFEATURELEVEL = 3145751_i32
    D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_FEATURELEVELS_NOT_SUPPORTED = 3145752_i32
    D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_INVALIDREFIID = 3145753_i32
    D3D11_MESSAGE_ID_DEVICE_DISCARDVIEW_INVALIDVIEW = 3145754_i32
    D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION1_INVALIDCOPYFLAGS = 3145755_i32
    D3D11_MESSAGE_ID_UPDATESUBRESOURCE1_INVALIDCOPYFLAGS = 3145756_i32
    D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFORCEDSAMPLECOUNT = 3145757_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODER_OUTOFMEMORY_RETURN = 3145758_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODER_NULLPARAM = 3145759_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODER_INVALIDFORMAT = 3145760_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODER_ZEROWIDTHHEIGHT = 3145761_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODER_DRIVER_INVALIDBUFFERSIZE = 3145762_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODER_DRIVER_INVALIDBUFFERUSAGE = 3145763_i32
    D3D11_MESSAGE_ID_GETVIDEODECODERPROFILECOUNT_OUTOFMEMORY = 3145764_i32
    D3D11_MESSAGE_ID_GETVIDEODECODERPROFILE_NULLPARAM = 3145765_i32
    D3D11_MESSAGE_ID_GETVIDEODECODERPROFILE_INVALIDINDEX = 3145766_i32
    D3D11_MESSAGE_ID_GETVIDEODECODERPROFILE_OUTOFMEMORY_RETURN = 3145767_i32
    D3D11_MESSAGE_ID_CHECKVIDEODECODERFORMAT_NULLPARAM = 3145768_i32
    D3D11_MESSAGE_ID_CHECKVIDEODECODERFORMAT_OUTOFMEMORY_RETURN = 3145769_i32
    D3D11_MESSAGE_ID_GETVIDEODECODERCONFIGCOUNT_NULLPARAM = 3145770_i32
    D3D11_MESSAGE_ID_GETVIDEODECODERCONFIGCOUNT_OUTOFMEMORY_RETURN = 3145771_i32
    D3D11_MESSAGE_ID_GETVIDEODECODERCONFIG_NULLPARAM = 3145772_i32
    D3D11_MESSAGE_ID_GETVIDEODECODERCONFIG_INVALIDINDEX = 3145773_i32
    D3D11_MESSAGE_ID_GETVIDEODECODERCONFIG_OUTOFMEMORY_RETURN = 3145774_i32
    D3D11_MESSAGE_ID_GETDECODERCREATIONPARAMS_NULLPARAM = 3145775_i32
    D3D11_MESSAGE_ID_GETDECODERDRIVERHANDLE_NULLPARAM = 3145776_i32
    D3D11_MESSAGE_ID_GETDECODERBUFFER_NULLPARAM = 3145777_i32
    D3D11_MESSAGE_ID_GETDECODERBUFFER_INVALIDBUFFER = 3145778_i32
    D3D11_MESSAGE_ID_GETDECODERBUFFER_INVALIDTYPE = 3145779_i32
    D3D11_MESSAGE_ID_GETDECODERBUFFER_LOCKED = 3145780_i32
    D3D11_MESSAGE_ID_RELEASEDECODERBUFFER_NULLPARAM = 3145781_i32
    D3D11_MESSAGE_ID_RELEASEDECODERBUFFER_INVALIDTYPE = 3145782_i32
    D3D11_MESSAGE_ID_RELEASEDECODERBUFFER_NOTLOCKED = 3145783_i32
    D3D11_MESSAGE_ID_DECODERBEGINFRAME_NULLPARAM = 3145784_i32
    D3D11_MESSAGE_ID_DECODERBEGINFRAME_HAZARD = 3145785_i32
    D3D11_MESSAGE_ID_DECODERENDFRAME_NULLPARAM = 3145786_i32
    D3D11_MESSAGE_ID_SUBMITDECODERBUFFERS_NULLPARAM = 3145787_i32
    D3D11_MESSAGE_ID_SUBMITDECODERBUFFERS_INVALIDTYPE = 3145788_i32
    D3D11_MESSAGE_ID_DECODEREXTENSION_NULLPARAM = 3145789_i32
    D3D11_MESSAGE_ID_DECODEREXTENSION_INVALIDRESOURCE = 3145790_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_OUTOFMEMORY_RETURN = 3145791_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_NULLPARAM = 3145792_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDFRAMEFORMAT = 3145793_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDUSAGE = 3145794_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDINPUTFRAMERATE = 3145795_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDOUTPUTFRAMERATE = 3145796_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDWIDTHHEIGHT = 3145797_i32
    D3D11_MESSAGE_ID_GETVIDEOPROCESSORCONTENTDESC_NULLPARAM = 3145798_i32
    D3D11_MESSAGE_ID_CHECKVIDEOPROCESSORFORMAT_NULLPARAM = 3145799_i32
    D3D11_MESSAGE_ID_GETVIDEOPROCESSORCAPS_NULLPARAM = 3145800_i32
    D3D11_MESSAGE_ID_GETVIDEOPROCESSORRATECONVERSIONCAPS_NULLPARAM = 3145801_i32
    D3D11_MESSAGE_ID_GETVIDEOPROCESSORRATECONVERSIONCAPS_INVALIDINDEX = 3145802_i32
    D3D11_MESSAGE_ID_GETVIDEOPROCESSORCUSTOMRATE_NULLPARAM = 3145803_i32
    D3D11_MESSAGE_ID_GETVIDEOPROCESSORCUSTOMRATE_INVALIDINDEX = 3145804_i32
    D3D11_MESSAGE_ID_GETVIDEOPROCESSORFILTERRANGE_NULLPARAM = 3145805_i32
    D3D11_MESSAGE_ID_GETVIDEOPROCESSORFILTERRANGE_UNSUPPORTED = 3145806_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOR_OUTOFMEMORY_RETURN = 3145807_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOR_NULLPARAM = 3145808_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTTARGETRECT_NULLPARAM = 3145809_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTBACKGROUNDCOLOR_NULLPARAM = 3145810_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTBACKGROUNDCOLOR_INVALIDALPHA = 3145811_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCOLORSPACE_NULLPARAM = 3145812_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_NULLPARAM = 3145813_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_UNSUPPORTED = 3145814_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_INVALIDSTREAM = 3145815_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_INVALIDFILLMODE = 3145816_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCONSTRICTION_NULLPARAM = 3145817_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSTEREOMODE_NULLPARAM = 3145818_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSTEREOMODE_UNSUPPORTED = 3145819_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTEXTENSION_NULLPARAM = 3145820_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTTARGETRECT_NULLPARAM = 3145821_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTBACKGROUNDCOLOR_NULLPARAM = 3145822_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCOLORSPACE_NULLPARAM = 3145823_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTALPHAFILLMODE_NULLPARAM = 3145824_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCONSTRICTION_NULLPARAM = 3145825_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCONSTRICTION_UNSUPPORTED = 3145826_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCONSTRICTION_INVALIDSIZE = 3145827_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTSTEREOMODE_NULLPARAM = 3145828_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTEXTENSION_NULLPARAM = 3145829_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFRAMEFORMAT_NULLPARAM = 3145830_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFRAMEFORMAT_INVALIDFORMAT = 3145831_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFRAMEFORMAT_INVALIDSTREAM = 3145832_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE_NULLPARAM = 3145833_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE_INVALIDSTREAM = 3145834_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_NULLPARAM = 3145835_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_INVALIDRATE = 3145836_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_INVALIDFLAG = 3145837_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_INVALIDSTREAM = 3145838_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSOURCERECT_NULLPARAM = 3145839_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSOURCERECT_INVALIDSTREAM = 3145840_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSOURCERECT_INVALIDRECT = 3145841_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMDESTRECT_NULLPARAM = 3145842_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMDESTRECT_INVALIDSTREAM = 3145843_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMDESTRECT_INVALIDRECT = 3145844_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_NULLPARAM = 3145845_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_INVALIDSTREAM = 3145846_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_INVALIDALPHA = 3145847_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_NULLPARAM = 3145848_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_INVALIDSTREAM = 3145849_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_INVALIDCOUNT = 3145850_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_INVALIDALPHA = 3145851_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_NULLPARAM = 3145852_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_INVALIDSTREAM = 3145853_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_INVALIDRATIO = 3145854_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_NULLPARAM = 3145855_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_INVALIDSTREAM = 3145856_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_INVALIDRANGE = 3145857_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_UNSUPPORTED = 3145858_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_NULLPARAM = 3145859_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_INVALIDSTREAM = 3145860_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_UNSUPPORTED = 3145861_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_FLIPUNSUPPORTED = 3145862_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_MONOOFFSETUNSUPPORTED = 3145863_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_FORMATUNSUPPORTED = 3145864_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_INVALIDFORMAT = 3145865_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMAUTOPROCESSINGMODE_NULLPARAM = 3145866_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMAUTOPROCESSINGMODE_INVALIDSTREAM = 3145867_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_NULLPARAM = 3145868_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_INVALIDSTREAM = 3145869_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_INVALIDFILTER = 3145870_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_UNSUPPORTED = 3145871_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_INVALIDLEVEL = 3145872_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMEXTENSION_NULLPARAM = 3145873_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMEXTENSION_INVALIDSTREAM = 3145874_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFRAMEFORMAT_NULLPARAM = 3145875_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE_NULLPARAM = 3145876_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMOUTPUTRATE_NULLPARAM = 3145877_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSOURCERECT_NULLPARAM = 3145878_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMDESTRECT_NULLPARAM = 3145879_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMALPHA_NULLPARAM = 3145880_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPALETTE_NULLPARAM = 3145881_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPIXELASPECTRATIO_NULLPARAM = 3145882_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMLUMAKEY_NULLPARAM = 3145883_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSTEREOFORMAT_NULLPARAM = 3145884_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMAUTOPROCESSINGMODE_NULLPARAM = 3145885_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFILTER_NULLPARAM = 3145886_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMEXTENSION_NULLPARAM = 3145887_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMEXTENSION_INVALIDSTREAM = 3145888_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_NULLPARAM = 3145889_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDSTREAMCOUNT = 3145890_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_TARGETRECT = 3145891_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDOUTPUT = 3145892_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDPASTFRAMES = 3145893_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDFUTUREFRAMES = 3145894_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDSOURCERECT = 3145895_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDDESTRECT = 3145896_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDINPUTRESOURCE = 3145897_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDARRAYSIZE = 3145898_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDARRAY = 3145899_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_RIGHTEXPECTED = 3145900_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_RIGHTNOTEXPECTED = 3145901_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_STEREONOTENABLED = 3145902_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDRIGHTRESOURCE = 3145903_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_NOSTEREOSTREAMS = 3145904_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INPUTHAZARD = 3145905_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_OUTPUTHAZARD = 3145906_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_OUTOFMEMORY_RETURN = 3145907_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_NULLPARAM = 3145908_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDTYPE = 3145909_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDBIND = 3145910_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_UNSUPPORTEDFORMAT = 3145911_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDMIP = 3145912_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_UNSUPPORTEMIP = 3145913_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDARRAYSIZE = 3145914_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDARRAY = 3145915_i32
    D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDDIMENSION = 3145916_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_OUTOFMEMORY_RETURN = 3145917_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_NULLPARAM = 3145918_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDTYPE = 3145919_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDBIND = 3145920_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMISC = 3145921_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDUSAGE = 3145922_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDFORMAT = 3145923_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDFOURCC = 3145924_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMIP = 3145925_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_UNSUPPORTEDMIP = 3145926_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDARRAYSIZE = 3145927_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDARRAY = 3145928_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDDIMENSION = 3145929_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_OUTOFMEMORY_RETURN = 3145930_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_NULLPARAM = 3145931_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDTYPE = 3145932_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDBIND = 3145933_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDFORMAT = 3145934_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDMIP = 3145935_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_UNSUPPORTEDMIP = 3145936_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_UNSUPPORTEDARRAY = 3145937_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDARRAY = 3145938_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDDIMENSION = 3145939_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_FORCED_SAMPLE_COUNT = 3145940_i32
    D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDLOGICOPS = 3145941_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDARRAYWITHDECODER = 3145942_i32
    D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDARRAYWITHDECODER = 3145943_i32
    D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDARRAYWITHDECODER = 3145944_i32
    D3D11_MESSAGE_ID_DEVICE_LOCKEDOUT_INTERFACE = 3145945_i32
    D3D11_MESSAGE_ID_REF_WARNING_ATOMIC_INCONSISTENT = 3145946_i32
    D3D11_MESSAGE_ID_REF_WARNING_READING_UNINITIALIZED_RESOURCE = 3145947_i32
    D3D11_MESSAGE_ID_REF_WARNING_RAW_HAZARD = 3145948_i32
    D3D11_MESSAGE_ID_REF_WARNING_WAR_HAZARD = 3145949_i32
    D3D11_MESSAGE_ID_REF_WARNING_WAW_HAZARD = 3145950_i32
    D3D11_MESSAGE_ID_CREATECRYPTOSESSION_NULLPARAM = 3145951_i32
    D3D11_MESSAGE_ID_CREATECRYPTOSESSION_OUTOFMEMORY_RETURN = 3145952_i32
    D3D11_MESSAGE_ID_GETCRYPTOTYPE_NULLPARAM = 3145953_i32
    D3D11_MESSAGE_ID_GETDECODERPROFILE_NULLPARAM = 3145954_i32
    D3D11_MESSAGE_ID_GETCRYPTOSESSIONCERTIFICATESIZE_NULLPARAM = 3145955_i32
    D3D11_MESSAGE_ID_GETCRYPTOSESSIONCERTIFICATE_NULLPARAM = 3145956_i32
    D3D11_MESSAGE_ID_GETCRYPTOSESSIONCERTIFICATE_WRONGSIZE = 3145957_i32
    D3D11_MESSAGE_ID_GETCRYPTOSESSIONHANDLE_WRONGSIZE = 3145958_i32
    D3D11_MESSAGE_ID_NEGOTIATECRPYTOSESSIONKEYEXCHANGE_NULLPARAM = 3145959_i32
    D3D11_MESSAGE_ID_ENCRYPTIONBLT_UNSUPPORTED = 3145960_i32
    D3D11_MESSAGE_ID_ENCRYPTIONBLT_NULLPARAM = 3145961_i32
    D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_WRONGDEVICE = 3145962_i32
    D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_WRONGDEVICE = 3145963_i32
    D3D11_MESSAGE_ID_ENCRYPTIONBLT_FORMAT_MISMATCH = 3145964_i32
    D3D11_MESSAGE_ID_ENCRYPTIONBLT_SIZE_MISMATCH = 3145965_i32
    D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_MULTISAMPLED = 3145966_i32
    D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_NOT_STAGING = 3145967_i32
    D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_MAPPED = 3145968_i32
    D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_MAPPED = 3145969_i32
    D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_OFFERED = 3145970_i32
    D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_OFFERED = 3145971_i32
    D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_CONTENT_UNDEFINED = 3145972_i32
    D3D11_MESSAGE_ID_DECRYPTIONBLT_UNSUPPORTED = 3145973_i32
    D3D11_MESSAGE_ID_DECRYPTIONBLT_NULLPARAM = 3145974_i32
    D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_WRONGDEVICE = 3145975_i32
    D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_WRONGDEVICE = 3145976_i32
    D3D11_MESSAGE_ID_DECRYPTIONBLT_FORMAT_MISMATCH = 3145977_i32
    D3D11_MESSAGE_ID_DECRYPTIONBLT_SIZE_MISMATCH = 3145978_i32
    D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_MULTISAMPLED = 3145979_i32
    D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_NOT_STAGING = 3145980_i32
    D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_NOT_RENDER_TARGET = 3145981_i32
    D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_MAPPED = 3145982_i32
    D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_MAPPED = 3145983_i32
    D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_OFFERED = 3145984_i32
    D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_OFFERED = 3145985_i32
    D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_CONTENT_UNDEFINED = 3145986_i32
    D3D11_MESSAGE_ID_STARTSESSIONKEYREFRESH_NULLPARAM = 3145987_i32
    D3D11_MESSAGE_ID_STARTSESSIONKEYREFRESH_INVALIDSIZE = 3145988_i32
    D3D11_MESSAGE_ID_FINISHSESSIONKEYREFRESH_NULLPARAM = 3145989_i32
    D3D11_MESSAGE_ID_GETENCRYPTIONBLTKEY_NULLPARAM = 3145990_i32
    D3D11_MESSAGE_ID_GETENCRYPTIONBLTKEY_INVALIDSIZE = 3145991_i32
    D3D11_MESSAGE_ID_GETCONTENTPROTECTIONCAPS_NULLPARAM = 3145992_i32
    D3D11_MESSAGE_ID_CHECKCRYPTOKEYEXCHANGE_NULLPARAM = 3145993_i32
    D3D11_MESSAGE_ID_CHECKCRYPTOKEYEXCHANGE_INVALIDINDEX = 3145994_i32
    D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_NULLPARAM = 3145995_i32
    D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_UNSUPPORTED = 3145996_i32
    D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_INVALIDTYPE = 3145997_i32
    D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_OUTOFMEMORY_RETURN = 3145998_i32
    D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATESIZE_INVALIDCHANNEL = 3145999_i32
    D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATESIZE_NULLPARAM = 3146000_i32
    D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATE_INVALIDCHANNEL = 3146001_i32
    D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATE_NULLPARAM = 3146002_i32
    D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATE_WRONGSIZE = 3146003_i32
    D3D11_MESSAGE_ID_NEGOTIATEAUTHENTICATEDCHANNELKEYEXCHANGE_INVALIDCHANNEL = 3146004_i32
    D3D11_MESSAGE_ID_NEGOTIATEAUTHENTICATEDCHANNELKEYEXCHANGE_NULLPARAM = 3146005_i32
    D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_NULLPARAM = 3146006_i32
    D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_WRONGCHANNEL = 3146007_i32
    D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_UNSUPPORTEDQUERY = 3146008_i32
    D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_WRONGSIZE = 3146009_i32
    D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_INVALIDPROCESSINDEX = 3146010_i32
    D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_NULLPARAM = 3146011_i32
    D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_WRONGCHANNEL = 3146012_i32
    D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_UNSUPPORTEDCONFIGURE = 3146013_i32
    D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_WRONGSIZE = 3146014_i32
    D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_INVALIDPROCESSIDTYPE = 3146015_i32
    D3D11_MESSAGE_ID_VSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT = 3146016_i32
    D3D11_MESSAGE_ID_DSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT = 3146017_i32
    D3D11_MESSAGE_ID_HSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT = 3146018_i32
    D3D11_MESSAGE_ID_GSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT = 3146019_i32
    D3D11_MESSAGE_ID_PSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT = 3146020_i32
    D3D11_MESSAGE_ID_CSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT = 3146021_i32
    D3D11_MESSAGE_ID_NEGOTIATECRPYTOSESSIONKEYEXCHANGE_INVALIDSIZE = 3146022_i32
    D3D11_MESSAGE_ID_NEGOTIATEAUTHENTICATEDCHANNELKEYEXCHANGE_INVALIDSIZE = 3146023_i32
    D3D11_MESSAGE_ID_OFFERRESOURCES_INVALIDPRIORITY = 3146024_i32
    D3D11_MESSAGE_ID_GETCRYPTOSESSIONHANDLE_OUTOFMEMORY = 3146025_i32
    D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_NULLPARAM = 3146026_i32
    D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_INVALIDTYPE = 3146027_i32
    D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_INVALIDBIND = 3146028_i32
    D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_INVALIDARRAY = 3146029_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_NULLPARAM = 3146030_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_INVALIDSTREAM = 3146031_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_INVALID = 3146032_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_UNSUPPORTED = 3146033_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMROTATION_NULLPARAM = 3146034_i32
    D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDVIEW = 3146035_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 3146036_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_SHADEREXTENSIONSNOTSUPPORTED = 3146037_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 3146038_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_SHADEREXTENSIONSNOTSUPPORTED = 3146039_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 3146040_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_SHADEREXTENSIONSNOTSUPPORTED = 3146041_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 3146042_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_SHADEREXTENSIONSNOTSUPPORTED = 3146043_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEEXTENSIONSNOTSUPPORTED = 3146044_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_SHADEREXTENSIONSNOTSUPPORTED = 3146045_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 3146046_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_SHADEREXTENSIONSNOTSUPPORTED = 3146047_i32
    D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 3146048_i32
    D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_SHADEREXTENSIONSNOTSUPPORTED = 3146049_i32
    D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_MINPRECISION = 3146050_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_UNSUPPORTED = 3146051_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_UNSUPPORTED = 3146052_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_UAVSNOTSUPPORTED = 3146053_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_UAVSNOTSUPPORTED = 3146054_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_UAVSNOTSUPPORTED = 3146055_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_UAVSNOTSUPPORTED = 3146056_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UAVSNOTSUPPORTED = 3146057_i32
    D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_UAVSNOTSUPPORTED = 3146058_i32
    D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_UAVSNOTSUPPORTED = 3146059_i32
    D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_INVALIDOFFSET = 3146060_i32
    D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_TOOMANYVIEWS = 3146061_i32
    D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_NOTSUPPORTED = 3146062_i32
    D3D11_MESSAGE_ID_SWAPDEVICECONTEXTSTATE_NOTSUPPORTED = 3146063_i32
    D3D11_MESSAGE_ID_UPDATESUBRESOURCE_PREFERUPDATESUBRESOURCE1 = 3146064_i32
    D3D11_MESSAGE_ID_GETDC_INACCESSIBLE = 3146065_i32
    D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDRECT = 3146066_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_SAMPLE_MASK_IGNORED_ON_FL9 = 3146067_i32
    D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE1_NOT_SUPPORTED = 3146068_i32
    D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BY_NAME_NOT_SUPPORTED = 3146069_i32
    D3D11_MESSAGE_ID_ENQUEUESETEVENT_NOT_SUPPORTED = 3146070_i32
    D3D11_MESSAGE_ID_OFFERRELEASE_NOT_SUPPORTED = 3146071_i32
    D3D11_MESSAGE_ID_OFFERRESOURCES_INACCESSIBLE = 3146072_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMSAA = 3146073_i32
    D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDMSAA = 3146074_i32
    D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDSOURCERECT = 3146075_i32
    D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_EMPTYRECT = 3146076_i32
    D3D11_MESSAGE_ID_UPDATESUBRESOURCE_EMPTYDESTBOX = 3146077_i32
    D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_EMPTYSOURCEBOX = 3146078_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS = 3146079_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_DEPTHSTENCILVIEW_NOT_SET = 3146080_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET = 3146081_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET_DUE_TO_FLIP_PRESENT = 3146082_i32
    D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET_DUE_TO_FLIP_PRESENT = 3146083_i32
    D3D11_MESSAGE_ID_GETDATAFORNEWHARDWAREKEY_NULLPARAM = 3146084_i32
    D3D11_MESSAGE_ID_CHECKCRYPTOSESSIONSTATUS_NULLPARAM = 3146085_i32
    D3D11_MESSAGE_ID_GETCRYPTOSESSIONPRIVATEDATASIZE_NULLPARAM = 3146086_i32
    D3D11_MESSAGE_ID_GETVIDEODECODERCAPS_NULLPARAM = 3146087_i32
    D3D11_MESSAGE_ID_GETVIDEODECODERCAPS_ZEROWIDTHHEIGHT = 3146088_i32
    D3D11_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_NULLPARAM = 3146089_i32
    D3D11_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE = 3146090_i32
    D3D11_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT = 3146091_i32
    D3D11_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_NULLPARAM = 3146092_i32
    D3D11_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_UNSUPPORTED = 3146093_i32
    D3D11_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_NULLPARAM = 3146094_i32
    D3D11_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_UNSUPPORTED = 3146095_i32
    D3D11_MESSAGE_ID_CHECKVIDEOPROCESSORFORMATCONVERSION_NULLPARAM = 3146096_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCOLORSPACE1_NULLPARAM = 3146097_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCOLORSPACE1_NULLPARAM = 3146098_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_NULLPARAM = 3146099_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_INVALIDSTREAM = 3146100_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_NULLPARAM = 3146101_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_INVALIDSTREAM = 3146102_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_UNSUPPORTED = 3146103_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE1_NULLPARAM = 3146104_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMMIRROR_NULLPARAM = 3146105_i32
    D3D11_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_NULLPARAM = 3146106_i32
    D3D11_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE = 3146107_i32
    D3D11_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT = 3146108_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSHADERUSAGE_NULLPARAM = 3146109_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTSHADERUSAGE_NULLPARAM = 3146110_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_NULLPARAM = 3146111_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSTREAMCOUNT = 3146112_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_TARGETRECT = 3146113_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSOURCERECT = 3146114_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDDESTRECT = 3146115_i32
    D3D11_MESSAGE_ID_GETCRYPTOSESSIONPRIVATEDATASIZE_INVALID_KEY_EXCHANGE_TYPE = 3146116_i32
    D3D11_MESSAGE_ID_D3D11_1_MESSAGES_END = 3146117_i32
    D3D11_MESSAGE_ID_D3D11_2_MESSAGES_START = 3146118_i32
    D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDUSAGE = 3146119_i32
    D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDUSAGE = 3146120_i32
    D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDUSAGE = 3146121_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_STEPRATE_NOT_1 = 3146122_i32
    D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_INSTANCING_NOT_SUPPORTED = 3146123_i32
    D3D11_MESSAGE_ID_UPDATETILEMAPPINGS_INVALID_PARAMETER = 3146124_i32
    D3D11_MESSAGE_ID_COPYTILEMAPPINGS_INVALID_PARAMETER = 3146125_i32
    D3D11_MESSAGE_ID_COPYTILES_INVALID_PARAMETER = 3146126_i32
    D3D11_MESSAGE_ID_UPDATETILES_INVALID_PARAMETER = 3146127_i32
    D3D11_MESSAGE_ID_RESIZETILEPOOL_INVALID_PARAMETER = 3146128_i32
    D3D11_MESSAGE_ID_TILEDRESOURCEBARRIER_INVALID_PARAMETER = 3146129_i32
    D3D11_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_WARNING = 3146130_i32
    D3D11_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_ERROR = 3146131_i32
    D3D11_MESSAGE_ID_DIRTY_TILE_MAPPING_ACCESS = 3146132_i32
    D3D11_MESSAGE_ID_DUPLICATE_TILE_MAPPINGS_IN_COVERED_AREA = 3146133_i32
    D3D11_MESSAGE_ID_TILE_MAPPINGS_IN_COVERED_AREA_DUPLICATED_OUTSIDE = 3146134_i32
    D3D11_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INCOMPATIBLE_RESOURCES = 3146135_i32
    D3D11_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INPUT_AND_OUTPUT = 3146136_i32
    D3D11_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_INVALIDFLAGS = 3146137_i32
    D3D11_MESSAGE_ID_GETRESOURCETILING_NONTILED_RESOURCE = 3146138_i32
    D3D11_MESSAGE_ID_RESIZETILEPOOL_SHRINK_WITH_MAPPINGS_STILL_DEFINED_PAST_END = 3146139_i32
    D3D11_MESSAGE_ID_NEED_TO_CALL_TILEDRESOURCEBARRIER = 3146140_i32
    D3D11_MESSAGE_ID_CREATEDEVICE_INVALIDARGS = 3146141_i32
    D3D11_MESSAGE_ID_CREATEDEVICE_WARNING = 3146142_i32
    D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWUINT_HAZARD = 3146143_i32
    D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWFLOAT_HAZARD = 3146144_i32
    D3D11_MESSAGE_ID_TILED_RESOURCE_TIER_1_BUFFER_TEXTURE_MISMATCH = 3146145_i32
    D3D11_MESSAGE_ID_CREATE_CRYPTOSESSION = 3146146_i32
    D3D11_MESSAGE_ID_CREATE_AUTHENTICATEDCHANNEL = 3146147_i32
    D3D11_MESSAGE_ID_LIVE_CRYPTOSESSION = 3146148_i32
    D3D11_MESSAGE_ID_LIVE_AUTHENTICATEDCHANNEL = 3146149_i32
    D3D11_MESSAGE_ID_DESTROY_CRYPTOSESSION = 3146150_i32
    D3D11_MESSAGE_ID_DESTROY_AUTHENTICATEDCHANNEL = 3146151_i32
    D3D11_MESSAGE_ID_D3D11_2_MESSAGES_END = 3146152_i32
    D3D11_MESSAGE_ID_D3D11_3_MESSAGES_START = 3146153_i32
    D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALID_CONSERVATIVERASTERMODE = 3146154_i32
    D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_SYSTEMVALUE = 3146155_i32
    D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDCONTEXTTYPE = 3146156_i32
    D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_DECODENOTSUPPORTED = 3146157_i32
    D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_ENCODENOTSUPPORTED = 3146158_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDPLANEINDEX = 3146159_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANEINDEX = 3146160_i32
    D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_AMBIGUOUSVIDEOPLANEINDEX = 3146161_i32
    D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDPLANEINDEX = 3146162_i32
    D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDVIDEOPLANEINDEX = 3146163_i32
    D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_AMBIGUOUSVIDEOPLANEINDEX = 3146164_i32
    D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDPLANEINDEX = 3146165_i32
    D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANEINDEX = 3146166_i32
    D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_AMBIGUOUSVIDEOPLANEINDEX = 3146167_i32
    D3D11_MESSAGE_ID_JPEGDECODE_INVALIDSCANDATAOFFSET = 3146168_i32
    D3D11_MESSAGE_ID_JPEGDECODE_NOTSUPPORTED = 3146169_i32
    D3D11_MESSAGE_ID_JPEGDECODE_DIMENSIONSTOOLARGE = 3146170_i32
    D3D11_MESSAGE_ID_JPEGDECODE_INVALIDCOMPONENTS = 3146171_i32
    D3D11_MESSAGE_ID_JPEGDECODE_DESTINATIONNOT2D = 3146172_i32
    D3D11_MESSAGE_ID_JPEGDECODE_TILEDRESOURCESUNSUPPORTED = 3146173_i32
    D3D11_MESSAGE_ID_JPEGDECODE_GUARDRECTSUNSUPPORTED = 3146174_i32
    D3D11_MESSAGE_ID_JPEGDECODE_FORMATUNSUPPORTED = 3146175_i32
    D3D11_MESSAGE_ID_JPEGDECODE_INVALIDSUBRESOURCE = 3146176_i32
    D3D11_MESSAGE_ID_JPEGDECODE_INVALIDMIPLEVEL = 3146177_i32
    D3D11_MESSAGE_ID_JPEGDECODE_EMPTYDESTBOX = 3146178_i32
    D3D11_MESSAGE_ID_JPEGDECODE_DESTBOXNOT2D = 3146179_i32
    D3D11_MESSAGE_ID_JPEGDECODE_DESTBOXNOTSUB = 3146180_i32
    D3D11_MESSAGE_ID_JPEGDECODE_DESTBOXESINTERSECT = 3146181_i32
    D3D11_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEMISMATCH = 3146182_i32
    D3D11_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEMISMATCH = 3146183_i32
    D3D11_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEODD = 3146184_i32
    D3D11_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEODD = 3146185_i32
    D3D11_MESSAGE_ID_JPEGDECODE_OUTPUTDIMENSIONSTOOLARGE = 3146186_i32
    D3D11_MESSAGE_ID_JPEGDECODE_NONPOW2SCALEUNSUPPORTED = 3146187_i32
    D3D11_MESSAGE_ID_JPEGDECODE_FRACTIONALDOWNSCALETOLARGE = 3146188_i32
    D3D11_MESSAGE_ID_JPEGDECODE_CHROMASIZEMISMATCH = 3146189_i32
    D3D11_MESSAGE_ID_JPEGDECODE_LUMACHROMASIZEMISMATCH = 3146190_i32
    D3D11_MESSAGE_ID_JPEGDECODE_INVALIDNUMDESTINATIONS = 3146191_i32
    D3D11_MESSAGE_ID_JPEGDECODE_SUBBOXUNSUPPORTED = 3146192_i32
    D3D11_MESSAGE_ID_JPEGDECODE_1DESTUNSUPPORTEDFORMAT = 3146193_i32
    D3D11_MESSAGE_ID_JPEGDECODE_3DESTUNSUPPORTEDFORMAT = 3146194_i32
    D3D11_MESSAGE_ID_JPEGDECODE_SCALEUNSUPPORTED = 3146195_i32
    D3D11_MESSAGE_ID_JPEGDECODE_INVALIDSOURCESIZE = 3146196_i32
    D3D11_MESSAGE_ID_JPEGDECODE_INVALIDCOPYFLAGS = 3146197_i32
    D3D11_MESSAGE_ID_JPEGDECODE_HAZARD = 3146198_i32
    D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERUSAGE = 3146199_i32
    D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERMISCFLAGS = 3146200_i32
    D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDDSTTEXTUREUSAGE = 3146201_i32
    D3D11_MESSAGE_ID_JPEGDECODE_BACKBUFFERNOTSUPPORTED = 3146202_i32
    D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPRTEDCOPYFLAGS = 3146203_i32
    D3D11_MESSAGE_ID_JPEGENCODE_NOTSUPPORTED = 3146204_i32
    D3D11_MESSAGE_ID_JPEGENCODE_INVALIDSCANDATAOFFSET = 3146205_i32
    D3D11_MESSAGE_ID_JPEGENCODE_INVALIDCOMPONENTS = 3146206_i32
    D3D11_MESSAGE_ID_JPEGENCODE_SOURCENOT2D = 3146207_i32
    D3D11_MESSAGE_ID_JPEGENCODE_TILEDRESOURCESUNSUPPORTED = 3146208_i32
    D3D11_MESSAGE_ID_JPEGENCODE_GUARDRECTSUNSUPPORTED = 3146209_i32
    D3D11_MESSAGE_ID_JPEGENCODE_XSUBSAMPLEMISMATCH = 3146210_i32
    D3D11_MESSAGE_ID_JPEGENCODE_YSUBSAMPLEMISMATCH = 3146211_i32
    D3D11_MESSAGE_ID_JPEGENCODE_FORMATUNSUPPORTED = 3146212_i32
    D3D11_MESSAGE_ID_JPEGENCODE_INVALIDSUBRESOURCE = 3146213_i32
    D3D11_MESSAGE_ID_JPEGENCODE_INVALIDMIPLEVEL = 3146214_i32
    D3D11_MESSAGE_ID_JPEGENCODE_DIMENSIONSTOOLARGE = 3146215_i32
    D3D11_MESSAGE_ID_JPEGENCODE_HAZARD = 3146216_i32
    D3D11_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERUSAGE = 3146217_i32
    D3D11_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERMISCFLAGS = 3146218_i32
    D3D11_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDSRCTEXTUREUSAGE = 3146219_i32
    D3D11_MESSAGE_ID_JPEGENCODE_BACKBUFFERNOTSUPPORTED = 3146220_i32
    D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_UNSUPPORTEDCONTEXTTTYPEFORQUERY = 3146221_i32
    D3D11_MESSAGE_ID_FLUSH1_INVALIDCONTEXTTYPE = 3146222_i32
    D3D11_MESSAGE_ID_DEVICE_SETHARDWAREPROTECTION_INVALIDCONTEXT = 3146223_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTHDRMETADATA_NULLPARAM = 3146224_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTHDRMETADATA_INVALIDSIZE = 3146225_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTHDRMETADATA_NULLPARAM = 3146226_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTHDRMETADATA_INVALIDSIZE = 3146227_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMHDRMETADATA_NULLPARAM = 3146228_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMHDRMETADATA_INVALIDSTREAM = 3146229_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMHDRMETADATA_INVALIDSIZE = 3146230_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMHDRMETADATA_NULLPARAM = 3146231_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMHDRMETADATA_INVALIDSTREAM = 3146232_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMHDRMETADATA_INVALIDSIZE = 3146233_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFRAMEFORMAT_INVALIDSTREAM = 3146234_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE_INVALIDSTREAM = 3146235_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMOUTPUTRATE_INVALIDSTREAM = 3146236_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSOURCERECT_INVALIDSTREAM = 3146237_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMDESTRECT_INVALIDSTREAM = 3146238_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMALPHA_INVALIDSTREAM = 3146239_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPALETTE_INVALIDSTREAM = 3146240_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPIXELASPECTRATIO_INVALIDSTREAM = 3146241_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMLUMAKEY_INVALIDSTREAM = 3146242_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSTEREOFORMAT_INVALIDSTREAM = 3146243_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMAUTOPROCESSINGMODE_INVALIDSTREAM = 3146244_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFILTER_INVALIDSTREAM = 3146245_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMROTATION_INVALIDSTREAM = 3146246_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE1_INVALIDSTREAM = 3146247_i32
    D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMMIRROR_INVALIDSTREAM = 3146248_i32
    D3D11_MESSAGE_ID_CREATE_FENCE = 3146249_i32
    D3D11_MESSAGE_ID_LIVE_FENCE = 3146250_i32
    D3D11_MESSAGE_ID_DESTROY_FENCE = 3146251_i32
    D3D11_MESSAGE_ID_CREATE_SYNCHRONIZEDCHANNEL = 3146252_i32
    D3D11_MESSAGE_ID_LIVE_SYNCHRONIZEDCHANNEL = 3146253_i32
    D3D11_MESSAGE_ID_DESTROY_SYNCHRONIZEDCHANNEL = 3146254_i32
    D3D11_MESSAGE_ID_CREATEFENCE_INVALIDFLAGS = 3146255_i32
    D3D11_MESSAGE_ID_D3D11_3_MESSAGES_END = 3146256_i32
    D3D11_MESSAGE_ID_D3D11_5_MESSAGES_START = 3146257_i32
    D3D11_MESSAGE_ID_NEGOTIATECRYPTOSESSIONKEYEXCHANGEMT_INVALIDKEYEXCHANGETYPE = 3146258_i32
    D3D11_MESSAGE_ID_NEGOTIATECRYPTOSESSIONKEYEXCHANGEMT_NOT_SUPPORTED = 3146259_i32
    D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_COMPONENT_COUNT = 3146260_i32
    D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_COMPONENT = 3146261_i32
    D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_SIZE = 3146262_i32
    D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_USAGE = 3146263_i32
    D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_MISC_FLAGS = 3146264_i32
    D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_OFFSET = 3146265_i32
    D3D11_MESSAGE_ID_CREATE_TRACKEDWORKLOAD = 3146266_i32
    D3D11_MESSAGE_ID_LIVE_TRACKEDWORKLOAD = 3146267_i32
    D3D11_MESSAGE_ID_DESTROY_TRACKEDWORKLOAD = 3146268_i32
    D3D11_MESSAGE_ID_CREATE_TRACKED_WORKLOAD_NULLPARAM = 3146269_i32
    D3D11_MESSAGE_ID_CREATE_TRACKED_WORKLOAD_INVALID_MAX_INSTANCES = 3146270_i32
    D3D11_MESSAGE_ID_CREATE_TRACKED_WORKLOAD_INVALID_DEADLINE_TYPE = 3146271_i32
    D3D11_MESSAGE_ID_CREATE_TRACKED_WORKLOAD_INVALID_ENGINE_TYPE = 3146272_i32
    D3D11_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOADS = 3146273_i32
    D3D11_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOAD_PAIRS = 3146274_i32
    D3D11_MESSAGE_ID_INCOMPLETE_TRACKED_WORKLOAD_PAIR = 3146275_i32
    D3D11_MESSAGE_ID_OUT_OF_ORDER_TRACKED_WORKLOAD_PAIR = 3146276_i32
    D3D11_MESSAGE_ID_CANNOT_ADD_TRACKED_WORKLOAD = 3146277_i32
    D3D11_MESSAGE_ID_TRACKED_WORKLOAD_NOT_SUPPORTED = 3146278_i32
    D3D11_MESSAGE_ID_TRACKED_WORKLOAD_ENGINE_TYPE_NOT_FOUND = 3146279_i32
    D3D11_MESSAGE_ID_NO_TRACKED_WORKLOAD_SLOT_AVAILABLE = 3146280_i32
    D3D11_MESSAGE_ID_END_TRACKED_WORKLOAD_INVALID_ARG = 3146281_i32
    D3D11_MESSAGE_ID_TRACKED_WORKLOAD_DISJOINT_FAILURE = 3146282_i32
    D3D11_MESSAGE_ID_D3D11_5_MESSAGES_END = 3146283_i32
  end
  enum D3D11_COPY_FLAGS
    D3D11_COPY_NO_OVERWRITE = 1_i32
    D3D11_COPY_DISCARD = 2_i32
  end
  enum D3D11_LOGIC_OP
    D3D11_LOGIC_OP_CLEAR = 0_i32
    D3D11_LOGIC_OP_SET = 1_i32
    D3D11_LOGIC_OP_COPY = 2_i32
    D3D11_LOGIC_OP_COPY_INVERTED = 3_i32
    D3D11_LOGIC_OP_NOOP = 4_i32
    D3D11_LOGIC_OP_INVERT = 5_i32
    D3D11_LOGIC_OP_AND = 6_i32
    D3D11_LOGIC_OP_NAND = 7_i32
    D3D11_LOGIC_OP_OR = 8_i32
    D3D11_LOGIC_OP_NOR = 9_i32
    D3D11_LOGIC_OP_XOR = 10_i32
    D3D11_LOGIC_OP_EQUIV = 11_i32
    D3D11_LOGIC_OP_AND_REVERSE = 12_i32
    D3D11_LOGIC_OP_AND_INVERTED = 13_i32
    D3D11_LOGIC_OP_OR_REVERSE = 14_i32
    D3D11_LOGIC_OP_OR_INVERTED = 15_i32
  end
  enum D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG
    D3D11_1_CREATE_DEVICE_CONTEXT_STATE_SINGLETHREADED = 1_i32
  end
  enum D3D11_VIDEO_DECODER_CAPS
    D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE = 1_i32
    D3D11_VIDEO_DECODER_CAPS_NON_REAL_TIME = 2_i32
    D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE_DYNAMIC = 4_i32
    D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE_REQUIRED = 8_i32
    D3D11_VIDEO_DECODER_CAPS_UNSUPPORTED = 16_i32
  end
  enum D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINTS
    D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_ROTATION = 1_i32
    D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_RESIZE = 2_i32
    D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_COLOR_SPACE_CONVERSION = 4_i32
    D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_TRIPLE_BUFFER_OUTPUT = 8_i32
  end
  enum D3D11_CRYPTO_SESSION_STATUS
    D3D11_CRYPTO_SESSION_STATUS_OK = 0_i32
    D3D11_CRYPTO_SESSION_STATUS_KEY_LOST = 1_i32
    D3D11_CRYPTO_SESSION_STATUS_KEY_AND_CONTENT_LOST = 2_i32
  end
  enum D3D11_TILE_MAPPING_FLAG
    D3D11_TILE_MAPPING_NO_OVERWRITE = 1_i32
  end
  enum D3D11_TILE_RANGE_FLAG
    D3D11_TILE_RANGE_NULL = 1_i32
    D3D11_TILE_RANGE_SKIP = 2_i32
    D3D11_TILE_RANGE_REUSE_SINGLE_TILE = 4_i32
  end
  enum D3D11_CHECK_MULTISAMPLE_QUALITY_LEVELS_FLAG
    D3D11_CHECK_MULTISAMPLE_QUALITY_LEVELS_TILED_RESOURCE = 1_i32
  end
  enum D3D11_TILE_COPY_FLAG
    D3D11_TILE_COPY_NO_OVERWRITE = 1_i32
    D3D11_TILE_COPY_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE = 2_i32
    D3D11_TILE_COPY_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER = 4_i32
  end
  enum D3D11_CONTEXT_TYPE
    D3D11_CONTEXT_TYPE_ALL = 0_i32
    D3D11_CONTEXT_TYPE_3D = 1_i32
    D3D11_CONTEXT_TYPE_COMPUTE = 2_i32
    D3D11_CONTEXT_TYPE_COPY = 3_i32
    D3D11_CONTEXT_TYPE_VIDEO = 4_i32
  end
  enum D3D11_TEXTURE_LAYOUT
    D3D11_TEXTURE_LAYOUT_UNDEFINED = 0_i32
    D3D11_TEXTURE_LAYOUT_ROW_MAJOR = 1_i32
    D3D11_TEXTURE_LAYOUT_64K_STANDARD_SWIZZLE = 2_i32
  end
  enum D3D11_CONSERVATIVE_RASTERIZATION_MODE
    D3D11_CONSERVATIVE_RASTERIZATION_MODE_OFF = 0_i32
    D3D11_CONSERVATIVE_RASTERIZATION_MODE_ON = 1_i32
  end
  @[Flags]
  enum D3D11_FENCE_FLAG : UInt32
    D3D11_FENCE_FLAG_NONE = 0_u32
    D3D11_FENCE_FLAG_SHARED = 2_u32
    D3D11_FENCE_FLAG_SHARED_CROSS_ADAPTER = 4_u32
    D3D11_FENCE_FLAG_NON_MONITORED = 8_u32
  end
  enum D3D11_FEATURE_VIDEO
    D3D11_FEATURE_VIDEO_DECODER_HISTOGRAM = 0_i32
  end
  enum D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_Y = 0_i32
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_U = 1_i32
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_V = 2_i32
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_R = 0_i32
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_G = 1_i32
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_B = 2_i32
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_A = 3_i32
  end
  @[Flags]
  enum D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS : UInt32
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_NONE = 0_u32
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_Y = 1_u32
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_U = 2_u32
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_V = 4_u32
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_R = 1_u32
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_G = 2_u32
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_B = 4_u32
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_A = 8_u32
  end
  @[Flags]
  enum D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS : UInt32
    D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAG_NONE = 0_u32
  end
  enum D3D11_SHADER_VERSION_TYPE
    D3D11_SHVER_PIXEL_SHADER = 0_i32
    D3D11_SHVER_VERTEX_SHADER = 1_i32
    D3D11_SHVER_GEOMETRY_SHADER = 2_i32
    D3D11_SHVER_HULL_SHADER = 3_i32
    D3D11_SHVER_DOMAIN_SHADER = 4_i32
    D3D11_SHVER_COMPUTE_SHADER = 5_i32
    D3D11_SHVER_RESERVED0 = 65520_i32
  end
  enum D3D11_SHADER_TYPE
    D3D11_VERTEX_SHADER = 1_i32
    D3D11_HULL_SHADER = 2_i32
    D3D11_DOMAIN_SHADER = 3_i32
    D3D11_GEOMETRY_SHADER = 4_i32
    D3D11_PIXEL_SHADER = 5_i32
    D3D11_COMPUTE_SHADER = 6_i32
  end
  enum D3D11_TRACE_GS_INPUT_PRIMITIVE
    D3D11_TRACE_GS_INPUT_PRIMITIVE_UNDEFINED = 0_i32
    D3D11_TRACE_GS_INPUT_PRIMITIVE_POINT = 1_i32
    D3D11_TRACE_GS_INPUT_PRIMITIVE_LINE = 2_i32
    D3D11_TRACE_GS_INPUT_PRIMITIVE_TRIANGLE = 3_i32
    D3D11_TRACE_GS_INPUT_PRIMITIVE_LINE_ADJ = 6_i32
    D3D11_TRACE_GS_INPUT_PRIMITIVE_TRIANGLE_ADJ = 7_i32
  end
  enum D3D11_TRACE_REGISTER_TYPE
    D3D11_TRACE_OUTPUT_NULL_REGISTER = 0_i32
    D3D11_TRACE_INPUT_REGISTER = 1_i32
    D3D11_TRACE_INPUT_PRIMITIVE_ID_REGISTER = 2_i32
    D3D11_TRACE_IMMEDIATE_CONSTANT_BUFFER = 3_i32
    D3D11_TRACE_TEMP_REGISTER = 4_i32
    D3D11_TRACE_INDEXABLE_TEMP_REGISTER = 5_i32
    D3D11_TRACE_OUTPUT_REGISTER = 6_i32
    D3D11_TRACE_OUTPUT_DEPTH_REGISTER = 7_i32
    D3D11_TRACE_CONSTANT_BUFFER = 8_i32
    D3D11_TRACE_IMMEDIATE32 = 9_i32
    D3D11_TRACE_SAMPLER = 10_i32
    D3D11_TRACE_RESOURCE = 11_i32
    D3D11_TRACE_RASTERIZER = 12_i32
    D3D11_TRACE_OUTPUT_COVERAGE_MASK = 13_i32
    D3D11_TRACE_STREAM = 14_i32
    D3D11_TRACE_THIS_POINTER = 15_i32
    D3D11_TRACE_OUTPUT_CONTROL_POINT_ID_REGISTER = 16_i32
    D3D11_TRACE_INPUT_FORK_INSTANCE_ID_REGISTER = 17_i32
    D3D11_TRACE_INPUT_JOIN_INSTANCE_ID_REGISTER = 18_i32
    D3D11_TRACE_INPUT_CONTROL_POINT_REGISTER = 19_i32
    D3D11_TRACE_OUTPUT_CONTROL_POINT_REGISTER = 20_i32
    D3D11_TRACE_INPUT_PATCH_CONSTANT_REGISTER = 21_i32
    D3D11_TRACE_INPUT_DOMAIN_POINT_REGISTER = 22_i32
    D3D11_TRACE_UNORDERED_ACCESS_VIEW = 23_i32
    D3D11_TRACE_THREAD_GROUP_SHARED_MEMORY = 24_i32
    D3D11_TRACE_INPUT_THREAD_ID_REGISTER = 25_i32
    D3D11_TRACE_INPUT_THREAD_GROUP_ID_REGISTER = 26_i32
    D3D11_TRACE_INPUT_THREAD_ID_IN_GROUP_REGISTER = 27_i32
    D3D11_TRACE_INPUT_COVERAGE_MASK_REGISTER = 28_i32
    D3D11_TRACE_INPUT_THREAD_ID_IN_GROUP_FLATTENED_REGISTER = 29_i32
    D3D11_TRACE_INPUT_GS_INSTANCE_ID_REGISTER = 30_i32
    D3D11_TRACE_OUTPUT_DEPTH_GREATER_EQUAL_REGISTER = 31_i32
    D3D11_TRACE_OUTPUT_DEPTH_LESS_EQUAL_REGISTER = 32_i32
    D3D11_TRACE_IMMEDIATE64 = 33_i32
    D3D11_TRACE_INPUT_CYCLE_COUNTER_REGISTER = 34_i32
    D3D11_TRACE_INTERFACE_POINTER = 35_i32
  end
  enum D3DX11_SCAN_DATA_TYPE
    D3DX11_SCAN_DATA_TYPE_FLOAT = 1_i32
    D3DX11_SCAN_DATA_TYPE_INT = 2_i32
    D3DX11_SCAN_DATA_TYPE_UINT = 3_i32
  end
  enum D3DX11_SCAN_OPCODE
    D3DX11_SCAN_OPCODE_ADD = 1_i32
    D3DX11_SCAN_OPCODE_MIN = 2_i32
    D3DX11_SCAN_OPCODE_MAX = 3_i32
    D3DX11_SCAN_OPCODE_MUL = 4_i32
    D3DX11_SCAN_OPCODE_AND = 5_i32
    D3DX11_SCAN_OPCODE_OR = 6_i32
    D3DX11_SCAN_OPCODE_XOR = 7_i32
  end
  enum D3DX11_SCAN_DIRECTION
    D3DX11_SCAN_DIRECTION_FORWARD = 1_i32
    D3DX11_SCAN_DIRECTION_BACKWARD = 2_i32
  end
  enum D3DX11_FFT_DATA_TYPE
    D3DX11_FFT_DATA_TYPE_REAL = 0_i32
    D3DX11_FFT_DATA_TYPE_COMPLEX = 1_i32
  end
  enum D3DX11_FFT_DIM_MASK
    D3DX11_FFT_DIM_MASK_1D = 1_i32
    D3DX11_FFT_DIM_MASK_2D = 3_i32
    D3DX11_FFT_DIM_MASK_3D = 7_i32
  end
  enum D3DX11_FFT_CREATE_FLAG
    D3DX11_FFT_CREATE_FLAG_NO_PRECOMPUTE_BUFFERS = 1_i32
  end

  @[Extern]
  struct D3D11_INPUT_ELEMENT_DESC
    property semantic_name : Win32cr::Foundation::PSTR
    property semantic_index : UInt32
    property format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property input_slot : UInt32
    property aligned_byte_offset : UInt32
    property input_slot_class : Win32cr::Graphics::Direct3D11::D3D11_INPUT_CLASSIFICATION
    property instance_data_step_rate : UInt32
    def initialize(@semantic_name : Win32cr::Foundation::PSTR, @semantic_index : UInt32, @format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @input_slot : UInt32, @aligned_byte_offset : UInt32, @input_slot_class : Win32cr::Graphics::Direct3D11::D3D11_INPUT_CLASSIFICATION, @instance_data_step_rate : UInt32)
    end
  end

  @[Extern]
  struct D3D11_SO_DECLARATION_ENTRY
    property stream : UInt32
    property semantic_name : Win32cr::Foundation::PSTR
    property semantic_index : UInt32
    property start_component : UInt8
    property component_count : UInt8
    property output_slot : UInt8
    def initialize(@stream : UInt32, @semantic_name : Win32cr::Foundation::PSTR, @semantic_index : UInt32, @start_component : UInt8, @component_count : UInt8, @output_slot : UInt8)
    end
  end

  @[Extern]
  struct D3D11_VIEWPORT
    property top_left_x : Float32
    property top_left_y : Float32
    property width : Float32
    property height : Float32
    property min_depth : Float32
    property max_depth : Float32
    def initialize(@top_left_x : Float32, @top_left_y : Float32, @width : Float32, @height : Float32, @min_depth : Float32, @max_depth : Float32)
    end
  end

  @[Extern]
  struct D3D11_DRAW_INSTANCED_INDIRECT_ARGS
    property vertex_count_per_instance : UInt32
    property instance_count : UInt32
    property start_vertex_location : UInt32
    property start_instance_location : UInt32
    def initialize(@vertex_count_per_instance : UInt32, @instance_count : UInt32, @start_vertex_location : UInt32, @start_instance_location : UInt32)
    end
  end

  @[Extern]
  struct D3D11_DRAW_INDEXED_INSTANCED_INDIRECT_ARGS
    property index_count_per_instance : UInt32
    property instance_count : UInt32
    property start_index_location : UInt32
    property base_vertex_location : Int32
    property start_instance_location : UInt32
    def initialize(@index_count_per_instance : UInt32, @instance_count : UInt32, @start_index_location : UInt32, @base_vertex_location : Int32, @start_instance_location : UInt32)
    end
  end

  @[Extern]
  struct D3D11_BOX
    property left : UInt32
    property top : UInt32
    property front : UInt32
    property right : UInt32
    property bottom : UInt32
    property back : UInt32
    def initialize(@left : UInt32, @top : UInt32, @front : UInt32, @right : UInt32, @bottom : UInt32, @back : UInt32)
    end
  end

  @[Extern]
  struct D3D11_DEPTH_STENCILOP_DESC
    property stencil_fail_op : Win32cr::Graphics::Direct3D11::D3D11_STENCIL_OP
    property stencil_depth_fail_op : Win32cr::Graphics::Direct3D11::D3D11_STENCIL_OP
    property stencil_pass_op : Win32cr::Graphics::Direct3D11::D3D11_STENCIL_OP
    property stencil_func : Win32cr::Graphics::Direct3D11::D3D11_COMPARISON_FUNC
    def initialize(@stencil_fail_op : Win32cr::Graphics::Direct3D11::D3D11_STENCIL_OP, @stencil_depth_fail_op : Win32cr::Graphics::Direct3D11::D3D11_STENCIL_OP, @stencil_pass_op : Win32cr::Graphics::Direct3D11::D3D11_STENCIL_OP, @stencil_func : Win32cr::Graphics::Direct3D11::D3D11_COMPARISON_FUNC)
    end
  end

  @[Extern]
  struct D3D11_DEPTH_STENCIL_DESC
    property depth_enable : Win32cr::Foundation::BOOL
    property depth_write_mask : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_WRITE_MASK
    property depth_func : Win32cr::Graphics::Direct3D11::D3D11_COMPARISON_FUNC
    property stencil_enable : Win32cr::Foundation::BOOL
    property stencil_read_mask : UInt8
    property stencil_write_mask : UInt8
    property front_face : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCILOP_DESC
    property back_face : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCILOP_DESC
    def initialize(@depth_enable : Win32cr::Foundation::BOOL, @depth_write_mask : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_WRITE_MASK, @depth_func : Win32cr::Graphics::Direct3D11::D3D11_COMPARISON_FUNC, @stencil_enable : Win32cr::Foundation::BOOL, @stencil_read_mask : UInt8, @stencil_write_mask : UInt8, @front_face : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCILOP_DESC, @back_face : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCILOP_DESC)
    end
  end

  @[Extern]
  struct D3D11_RENDER_TARGET_BLEND_DESC
    property blend_enable : Win32cr::Foundation::BOOL
    property src_blend : Win32cr::Graphics::Direct3D11::D3D11_BLEND
    property dest_blend : Win32cr::Graphics::Direct3D11::D3D11_BLEND
    property blend_op : Win32cr::Graphics::Direct3D11::D3D11_BLEND_OP
    property src_blend_alpha : Win32cr::Graphics::Direct3D11::D3D11_BLEND
    property dest_blend_alpha : Win32cr::Graphics::Direct3D11::D3D11_BLEND
    property blend_op_alpha : Win32cr::Graphics::Direct3D11::D3D11_BLEND_OP
    property render_target_write_mask : UInt8
    def initialize(@blend_enable : Win32cr::Foundation::BOOL, @src_blend : Win32cr::Graphics::Direct3D11::D3D11_BLEND, @dest_blend : Win32cr::Graphics::Direct3D11::D3D11_BLEND, @blend_op : Win32cr::Graphics::Direct3D11::D3D11_BLEND_OP, @src_blend_alpha : Win32cr::Graphics::Direct3D11::D3D11_BLEND, @dest_blend_alpha : Win32cr::Graphics::Direct3D11::D3D11_BLEND, @blend_op_alpha : Win32cr::Graphics::Direct3D11::D3D11_BLEND_OP, @render_target_write_mask : UInt8)
    end
  end

  @[Extern]
  struct D3D11_BLEND_DESC
    property alpha_to_coverage_enable : Win32cr::Foundation::BOOL
    property independent_blend_enable : Win32cr::Foundation::BOOL
    property render_target : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_BLEND_DESC[8]
    def initialize(@alpha_to_coverage_enable : Win32cr::Foundation::BOOL, @independent_blend_enable : Win32cr::Foundation::BOOL, @render_target : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_BLEND_DESC[8])
    end
  end

  @[Extern]
  struct D3D11_RASTERIZER_DESC
    property fill_mode : Win32cr::Graphics::Direct3D11::D3D11_FILL_MODE
    property cull_mode : Win32cr::Graphics::Direct3D11::D3D11_CULL_MODE
    property front_counter_clockwise : Win32cr::Foundation::BOOL
    property depth_bias : Int32
    property depth_bias_clamp : Float32
    property slope_scaled_depth_bias : Float32
    property depth_clip_enable : Win32cr::Foundation::BOOL
    property scissor_enable : Win32cr::Foundation::BOOL
    property multisample_enable : Win32cr::Foundation::BOOL
    property antialiased_line_enable : Win32cr::Foundation::BOOL
    def initialize(@fill_mode : Win32cr::Graphics::Direct3D11::D3D11_FILL_MODE, @cull_mode : Win32cr::Graphics::Direct3D11::D3D11_CULL_MODE, @front_counter_clockwise : Win32cr::Foundation::BOOL, @depth_bias : Int32, @depth_bias_clamp : Float32, @slope_scaled_depth_bias : Float32, @depth_clip_enable : Win32cr::Foundation::BOOL, @scissor_enable : Win32cr::Foundation::BOOL, @multisample_enable : Win32cr::Foundation::BOOL, @antialiased_line_enable : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_SUBRESOURCE_DATA
    property pSysMem : Void*
    property sys_mem_pitch : UInt32
    property sys_mem_slice_pitch : UInt32
    def initialize(@pSysMem : Void*, @sys_mem_pitch : UInt32, @sys_mem_slice_pitch : UInt32)
    end
  end

  @[Extern]
  struct D3D11_MAPPED_SUBRESOURCE
    property pData : Void*
    property row_pitch : UInt32
    property depth_pitch : UInt32
    def initialize(@pData : Void*, @row_pitch : UInt32, @depth_pitch : UInt32)
    end
  end

  @[Extern]
  struct D3D11_BUFFER_DESC
    property byte_width : UInt32
    property usage : Win32cr::Graphics::Direct3D11::D3D11_USAGE
    property bind_flags : Win32cr::Graphics::Direct3D11::D3D11_BIND_FLAG
    property cpu_access_flags : Win32cr::Graphics::Direct3D11::D3D11_CPU_ACCESS_FLAG
    property misc_flags : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_MISC_FLAG
    property structure_byte_stride : UInt32
    def initialize(@byte_width : UInt32, @usage : Win32cr::Graphics::Direct3D11::D3D11_USAGE, @bind_flags : Win32cr::Graphics::Direct3D11::D3D11_BIND_FLAG, @cpu_access_flags : Win32cr::Graphics::Direct3D11::D3D11_CPU_ACCESS_FLAG, @misc_flags : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_MISC_FLAG, @structure_byte_stride : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEXTURE1D_DESC
    property width : UInt32
    property mip_levels : UInt32
    property array_size : UInt32
    property format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property usage : Win32cr::Graphics::Direct3D11::D3D11_USAGE
    property bind_flags : Win32cr::Graphics::Direct3D11::D3D11_BIND_FLAG
    property cpu_access_flags : Win32cr::Graphics::Direct3D11::D3D11_CPU_ACCESS_FLAG
    property misc_flags : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_MISC_FLAG
    def initialize(@width : UInt32, @mip_levels : UInt32, @array_size : UInt32, @format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @usage : Win32cr::Graphics::Direct3D11::D3D11_USAGE, @bind_flags : Win32cr::Graphics::Direct3D11::D3D11_BIND_FLAG, @cpu_access_flags : Win32cr::Graphics::Direct3D11::D3D11_CPU_ACCESS_FLAG, @misc_flags : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_MISC_FLAG)
    end
  end

  @[Extern]
  struct D3D11_TEXTURE2D_DESC
    property width : UInt32
    property height : UInt32
    property mip_levels : UInt32
    property array_size : UInt32
    property format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property sample_desc : Win32cr::Graphics::Dxgi::Common::DXGI_SAMPLE_DESC
    property usage : Win32cr::Graphics::Direct3D11::D3D11_USAGE
    property bind_flags : Win32cr::Graphics::Direct3D11::D3D11_BIND_FLAG
    property cpu_access_flags : Win32cr::Graphics::Direct3D11::D3D11_CPU_ACCESS_FLAG
    property misc_flags : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_MISC_FLAG
    def initialize(@width : UInt32, @height : UInt32, @mip_levels : UInt32, @array_size : UInt32, @format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @sample_desc : Win32cr::Graphics::Dxgi::Common::DXGI_SAMPLE_DESC, @usage : Win32cr::Graphics::Direct3D11::D3D11_USAGE, @bind_flags : Win32cr::Graphics::Direct3D11::D3D11_BIND_FLAG, @cpu_access_flags : Win32cr::Graphics::Direct3D11::D3D11_CPU_ACCESS_FLAG, @misc_flags : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_MISC_FLAG)
    end
  end

  @[Extern]
  struct D3D11_TEXTURE3D_DESC
    property width : UInt32
    property height : UInt32
    property depth : UInt32
    property mip_levels : UInt32
    property format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property usage : Win32cr::Graphics::Direct3D11::D3D11_USAGE
    property bind_flags : Win32cr::Graphics::Direct3D11::D3D11_BIND_FLAG
    property cpu_access_flags : Win32cr::Graphics::Direct3D11::D3D11_CPU_ACCESS_FLAG
    property misc_flags : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_MISC_FLAG
    def initialize(@width : UInt32, @height : UInt32, @depth : UInt32, @mip_levels : UInt32, @format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @usage : Win32cr::Graphics::Direct3D11::D3D11_USAGE, @bind_flags : Win32cr::Graphics::Direct3D11::D3D11_BIND_FLAG, @cpu_access_flags : Win32cr::Graphics::Direct3D11::D3D11_CPU_ACCESS_FLAG, @misc_flags : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_MISC_FLAG)
    end
  end

  @[Extern]
  struct D3D11_BUFFER_SRV
    property anonymous1 : Anonymous1_e__Union_
    property anonymous2 : Anonymous2_e__Union_

    # Nested Type Anonymous1_e__Union_
    @[Extern(union: true)]
    struct Anonymous1_e__Union_
    property first_element : UInt32
    property element_offset : UInt32
    def initialize(@first_element : UInt32, @element_offset : UInt32)
    end
    end


    # Nested Type Anonymous2_e__Union_
    @[Extern(union: true)]
    struct Anonymous2_e__Union_
    property num_elements : UInt32
    property element_width : UInt32
    def initialize(@num_elements : UInt32, @element_width : UInt32)
    end
    end

    def initialize(@anonymous1 : Anonymous1_e__Union_, @anonymous2 : Anonymous2_e__Union_)
    end
  end

  @[Extern]
  struct D3D11_BUFFEREX_SRV
    property first_element : UInt32
    property num_elements : UInt32
    property flags : UInt32
    def initialize(@first_element : UInt32, @num_elements : UInt32, @flags : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX1D_SRV
    property most_detailed_mip : UInt32
    property mip_levels : UInt32
    def initialize(@most_detailed_mip : UInt32, @mip_levels : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX1D_ARRAY_SRV
    property most_detailed_mip : UInt32
    property mip_levels : UInt32
    property first_array_slice : UInt32
    property array_size : UInt32
    def initialize(@most_detailed_mip : UInt32, @mip_levels : UInt32, @first_array_slice : UInt32, @array_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_SRV
    property most_detailed_mip : UInt32
    property mip_levels : UInt32
    def initialize(@most_detailed_mip : UInt32, @mip_levels : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_ARRAY_SRV
    property most_detailed_mip : UInt32
    property mip_levels : UInt32
    property first_array_slice : UInt32
    property array_size : UInt32
    def initialize(@most_detailed_mip : UInt32, @mip_levels : UInt32, @first_array_slice : UInt32, @array_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX3D_SRV
    property most_detailed_mip : UInt32
    property mip_levels : UInt32
    def initialize(@most_detailed_mip : UInt32, @mip_levels : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEXCUBE_SRV
    property most_detailed_mip : UInt32
    property mip_levels : UInt32
    def initialize(@most_detailed_mip : UInt32, @mip_levels : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEXCUBE_ARRAY_SRV
    property most_detailed_mip : UInt32
    property mip_levels : UInt32
    property first2_d_array_face : UInt32
    property num_cubes : UInt32
    def initialize(@most_detailed_mip : UInt32, @mip_levels : UInt32, @first2_d_array_face : UInt32, @num_cubes : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2DMS_SRV
    property unused_field_nothing_to_define : UInt32
    def initialize(@unused_field_nothing_to_define : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2DMS_ARRAY_SRV
    property first_array_slice : UInt32
    property array_size : UInt32
    def initialize(@first_array_slice : UInt32, @array_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_SHADER_RESOURCE_VIEW_DESC
    property format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property view_dimension : Win32cr::Graphics::Direct3D::D3D_SRV_DIMENSION
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property buffer : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_SRV
    property texture1_d : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_SRV
    property texture1_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_ARRAY_SRV
    property texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_SRV
    property texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_SRV
    property texture2_dms : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_SRV
    property texture2_dms_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_ARRAY_SRV
    property texture3_d : Win32cr::Graphics::Direct3D11::D3D11_TEX3D_SRV
    property texture_cube : Win32cr::Graphics::Direct3D11::D3D11_TEXCUBE_SRV
    property texture_cube_array : Win32cr::Graphics::Direct3D11::D3D11_TEXCUBE_ARRAY_SRV
    property buffer_ex : Win32cr::Graphics::Direct3D11::D3D11_BUFFEREX_SRV
    def initialize(@buffer : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_SRV, @texture1_d : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_SRV, @texture1_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_ARRAY_SRV, @texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_SRV, @texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_SRV, @texture2_dms : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_SRV, @texture2_dms_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_ARRAY_SRV, @texture3_d : Win32cr::Graphics::Direct3D11::D3D11_TEX3D_SRV, @texture_cube : Win32cr::Graphics::Direct3D11::D3D11_TEXCUBE_SRV, @texture_cube_array : Win32cr::Graphics::Direct3D11::D3D11_TEXCUBE_ARRAY_SRV, @buffer_ex : Win32cr::Graphics::Direct3D11::D3D11_BUFFEREX_SRV)
    end
    end

    def initialize(@format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @view_dimension : Win32cr::Graphics::Direct3D::D3D_SRV_DIMENSION, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct D3D11_BUFFER_RTV
    property anonymous1 : Anonymous1_e__Union_
    property anonymous2 : Anonymous2_e__Union_

    # Nested Type Anonymous2_e__Union_
    @[Extern(union: true)]
    struct Anonymous2_e__Union_
    property num_elements : UInt32
    property element_width : UInt32
    def initialize(@num_elements : UInt32, @element_width : UInt32)
    end
    end


    # Nested Type Anonymous1_e__Union_
    @[Extern(union: true)]
    struct Anonymous1_e__Union_
    property first_element : UInt32
    property element_offset : UInt32
    def initialize(@first_element : UInt32, @element_offset : UInt32)
    end
    end

    def initialize(@anonymous1 : Anonymous1_e__Union_, @anonymous2 : Anonymous2_e__Union_)
    end
  end

  @[Extern]
  struct D3D11_TEX1D_RTV
    property mip_slice : UInt32
    def initialize(@mip_slice : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX1D_ARRAY_RTV
    property mip_slice : UInt32
    property first_array_slice : UInt32
    property array_size : UInt32
    def initialize(@mip_slice : UInt32, @first_array_slice : UInt32, @array_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_RTV
    property mip_slice : UInt32
    def initialize(@mip_slice : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2DMS_RTV
    property unused_field_nothing_to_define : UInt32
    def initialize(@unused_field_nothing_to_define : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_ARRAY_RTV
    property mip_slice : UInt32
    property first_array_slice : UInt32
    property array_size : UInt32
    def initialize(@mip_slice : UInt32, @first_array_slice : UInt32, @array_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2DMS_ARRAY_RTV
    property first_array_slice : UInt32
    property array_size : UInt32
    def initialize(@first_array_slice : UInt32, @array_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX3D_RTV
    property mip_slice : UInt32
    property first_w_slice : UInt32
    property w_size : UInt32
    def initialize(@mip_slice : UInt32, @first_w_slice : UInt32, @w_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_RENDER_TARGET_VIEW_DESC
    property format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property view_dimension : Win32cr::Graphics::Direct3D11::D3D11_RTV_DIMENSION
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property buffer : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_RTV
    property texture1_d : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_RTV
    property texture1_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_ARRAY_RTV
    property texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_RTV
    property texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_RTV
    property texture2_dms : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_RTV
    property texture2_dms_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_ARRAY_RTV
    property texture3_d : Win32cr::Graphics::Direct3D11::D3D11_TEX3D_RTV
    def initialize(@buffer : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_RTV, @texture1_d : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_RTV, @texture1_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_ARRAY_RTV, @texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_RTV, @texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_RTV, @texture2_dms : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_RTV, @texture2_dms_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_ARRAY_RTV, @texture3_d : Win32cr::Graphics::Direct3D11::D3D11_TEX3D_RTV)
    end
    end

    def initialize(@format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @view_dimension : Win32cr::Graphics::Direct3D11::D3D11_RTV_DIMENSION, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct D3D11_TEX1D_DSV
    property mip_slice : UInt32
    def initialize(@mip_slice : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX1D_ARRAY_DSV
    property mip_slice : UInt32
    property first_array_slice : UInt32
    property array_size : UInt32
    def initialize(@mip_slice : UInt32, @first_array_slice : UInt32, @array_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_DSV
    property mip_slice : UInt32
    def initialize(@mip_slice : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_ARRAY_DSV
    property mip_slice : UInt32
    property first_array_slice : UInt32
    property array_size : UInt32
    def initialize(@mip_slice : UInt32, @first_array_slice : UInt32, @array_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2DMS_DSV
    property unused_field_nothing_to_define : UInt32
    def initialize(@unused_field_nothing_to_define : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2DMS_ARRAY_DSV
    property first_array_slice : UInt32
    property array_size : UInt32
    def initialize(@first_array_slice : UInt32, @array_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_DEPTH_STENCIL_VIEW_DESC
    property format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property view_dimension : Win32cr::Graphics::Direct3D11::D3D11_DSV_DIMENSION
    property flags : UInt32
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property texture1_d : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_DSV
    property texture1_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_ARRAY_DSV
    property texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_DSV
    property texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_DSV
    property texture2_dms : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_DSV
    property texture2_dms_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_ARRAY_DSV
    def initialize(@texture1_d : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_DSV, @texture1_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_ARRAY_DSV, @texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_DSV, @texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_DSV, @texture2_dms : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_DSV, @texture2_dms_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_ARRAY_DSV)
    end
    end

    def initialize(@format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @view_dimension : Win32cr::Graphics::Direct3D11::D3D11_DSV_DIMENSION, @flags : UInt32, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct D3D11_BUFFER_UAV
    property first_element : UInt32
    property num_elements : UInt32
    property flags : UInt32
    def initialize(@first_element : UInt32, @num_elements : UInt32, @flags : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX1D_UAV
    property mip_slice : UInt32
    def initialize(@mip_slice : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX1D_ARRAY_UAV
    property mip_slice : UInt32
    property first_array_slice : UInt32
    property array_size : UInt32
    def initialize(@mip_slice : UInt32, @first_array_slice : UInt32, @array_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_UAV
    property mip_slice : UInt32
    def initialize(@mip_slice : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_ARRAY_UAV
    property mip_slice : UInt32
    property first_array_slice : UInt32
    property array_size : UInt32
    def initialize(@mip_slice : UInt32, @first_array_slice : UInt32, @array_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX3D_UAV
    property mip_slice : UInt32
    property first_w_slice : UInt32
    property w_size : UInt32
    def initialize(@mip_slice : UInt32, @first_w_slice : UInt32, @w_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_UNORDERED_ACCESS_VIEW_DESC
    property format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property view_dimension : Win32cr::Graphics::Direct3D11::D3D11_UAV_DIMENSION
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property buffer : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_UAV
    property texture1_d : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_UAV
    property texture1_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_ARRAY_UAV
    property texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_UAV
    property texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_UAV
    property texture3_d : Win32cr::Graphics::Direct3D11::D3D11_TEX3D_UAV
    def initialize(@buffer : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_UAV, @texture1_d : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_UAV, @texture1_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_ARRAY_UAV, @texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_UAV, @texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_UAV, @texture3_d : Win32cr::Graphics::Direct3D11::D3D11_TEX3D_UAV)
    end
    end

    def initialize(@format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @view_dimension : Win32cr::Graphics::Direct3D11::D3D11_UAV_DIMENSION, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct D3D11_SAMPLER_DESC
    property filter : Win32cr::Graphics::Direct3D11::D3D11_FILTER
    property address_u : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE_ADDRESS_MODE
    property address_v : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE_ADDRESS_MODE
    property address_w : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE_ADDRESS_MODE
    property mip_lod_bias : Float32
    property max_anisotropy : UInt32
    property comparison_func : Win32cr::Graphics::Direct3D11::D3D11_COMPARISON_FUNC
    property border_color : Float32[4]
    property min_lod : Float32
    property max_lod : Float32
    def initialize(@filter : Win32cr::Graphics::Direct3D11::D3D11_FILTER, @address_u : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE_ADDRESS_MODE, @address_v : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE_ADDRESS_MODE, @address_w : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE_ADDRESS_MODE, @mip_lod_bias : Float32, @max_anisotropy : UInt32, @comparison_func : Win32cr::Graphics::Direct3D11::D3D11_COMPARISON_FUNC, @border_color : Float32[4], @min_lod : Float32, @max_lod : Float32)
    end
  end

  @[Extern]
  struct D3D11_QUERY_DESC
    property query : Win32cr::Graphics::Direct3D11::D3D11_QUERY
    property misc_flags : UInt32
    def initialize(@query : Win32cr::Graphics::Direct3D11::D3D11_QUERY, @misc_flags : UInt32)
    end
  end

  @[Extern]
  struct D3D11_QUERY_DATA_TIMESTAMP_DISJOINT
    property frequency : UInt64
    property disjoint : Win32cr::Foundation::BOOL
    def initialize(@frequency : UInt64, @disjoint : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_QUERY_DATA_PIPELINE_STATISTICS
    property ia_vertices : UInt64
    property ia_primitives : UInt64
    property vs_invocations : UInt64
    property gs_invocations : UInt64
    property gs_primitives : UInt64
    property c_invocations : UInt64
    property c_primitives : UInt64
    property ps_invocations : UInt64
    property hs_invocations : UInt64
    property ds_invocations : UInt64
    property cs_invocations : UInt64
    def initialize(@ia_vertices : UInt64, @ia_primitives : UInt64, @vs_invocations : UInt64, @gs_invocations : UInt64, @gs_primitives : UInt64, @c_invocations : UInt64, @c_primitives : UInt64, @ps_invocations : UInt64, @hs_invocations : UInt64, @ds_invocations : UInt64, @cs_invocations : UInt64)
    end
  end

  @[Extern]
  struct D3D11_QUERY_DATA_SO_STATISTICS
    property num_primitives_written : UInt64
    property primitives_storage_needed : UInt64
    def initialize(@num_primitives_written : UInt64, @primitives_storage_needed : UInt64)
    end
  end

  @[Extern]
  struct D3D11_COUNTER_DESC
    property counter : Win32cr::Graphics::Direct3D11::D3D11_COUNTER
    property misc_flags : UInt32
    def initialize(@counter : Win32cr::Graphics::Direct3D11::D3D11_COUNTER, @misc_flags : UInt32)
    end
  end

  @[Extern]
  struct D3D11_COUNTER_INFO
    property last_device_dependent_counter : Win32cr::Graphics::Direct3D11::D3D11_COUNTER
    property num_simultaneous_counters : UInt32
    property num_detectable_parallel_units : UInt8
    def initialize(@last_device_dependent_counter : Win32cr::Graphics::Direct3D11::D3D11_COUNTER, @num_simultaneous_counters : UInt32, @num_detectable_parallel_units : UInt8)
    end
  end

  @[Extern]
  struct D3D11_CLASS_INSTANCE_DESC
    property instance_id : UInt32
    property instance_index : UInt32
    property type_id : UInt32
    property constant_buffer : UInt32
    property base_constant_buffer_offset : UInt32
    property base_texture : UInt32
    property base_sampler : UInt32
    property created : Win32cr::Foundation::BOOL
    def initialize(@instance_id : UInt32, @instance_index : UInt32, @type_id : UInt32, @constant_buffer : UInt32, @base_constant_buffer_offset : UInt32, @base_texture : UInt32, @base_sampler : UInt32, @created : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_THREADING
    property driver_concurrent_creates : Win32cr::Foundation::BOOL
    property driver_command_lists : Win32cr::Foundation::BOOL
    def initialize(@driver_concurrent_creates : Win32cr::Foundation::BOOL, @driver_command_lists : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_DOUBLES
    property double_precision_float_shader_ops : Win32cr::Foundation::BOOL
    def initialize(@double_precision_float_shader_ops : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_FORMAT_SUPPORT
    property in_format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property out_format_support : UInt32
    def initialize(@in_format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @out_format_support : UInt32)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_FORMAT_SUPPORT2
    property in_format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property out_format_support2 : UInt32
    def initialize(@in_format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @out_format_support2 : UInt32)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS
    property compute_shaders_plus_raw_and_structured_buffers_via_shader_4_x : Win32cr::Foundation::BOOL
    def initialize(@compute_shaders_plus_raw_and_structured_buffers_via_shader_4_x : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_D3D11_OPTIONS
    property output_merger_logic_op : Win32cr::Foundation::BOOL
    property uav_only_rendering_forced_sample_count : Win32cr::Foundation::BOOL
    property discard_ap_is_seen_by_driver : Win32cr::Foundation::BOOL
    property flags_for_update_and_copy_seen_by_driver : Win32cr::Foundation::BOOL
    property clear_view : Win32cr::Foundation::BOOL
    property copy_with_overlap : Win32cr::Foundation::BOOL
    property constant_buffer_partial_update : Win32cr::Foundation::BOOL
    property constant_buffer_offsetting : Win32cr::Foundation::BOOL
    property map_no_overwrite_on_dynamic_constant_buffer : Win32cr::Foundation::BOOL
    property map_no_overwrite_on_dynamic_buffer_srv : Win32cr::Foundation::BOOL
    property multisample_rtv_with_forced_sample_count_one : Win32cr::Foundation::BOOL
    property sad4_shader_instructions : Win32cr::Foundation::BOOL
    property extended_doubles_shader_instructions : Win32cr::Foundation::BOOL
    property extended_resource_sharing : Win32cr::Foundation::BOOL
    def initialize(@output_merger_logic_op : Win32cr::Foundation::BOOL, @uav_only_rendering_forced_sample_count : Win32cr::Foundation::BOOL, @discard_ap_is_seen_by_driver : Win32cr::Foundation::BOOL, @flags_for_update_and_copy_seen_by_driver : Win32cr::Foundation::BOOL, @clear_view : Win32cr::Foundation::BOOL, @copy_with_overlap : Win32cr::Foundation::BOOL, @constant_buffer_partial_update : Win32cr::Foundation::BOOL, @constant_buffer_offsetting : Win32cr::Foundation::BOOL, @map_no_overwrite_on_dynamic_constant_buffer : Win32cr::Foundation::BOOL, @map_no_overwrite_on_dynamic_buffer_srv : Win32cr::Foundation::BOOL, @multisample_rtv_with_forced_sample_count_one : Win32cr::Foundation::BOOL, @sad4_shader_instructions : Win32cr::Foundation::BOOL, @extended_doubles_shader_instructions : Win32cr::Foundation::BOOL, @extended_resource_sharing : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_ARCHITECTURE_INFO
    property tile_based_deferred_renderer : Win32cr::Foundation::BOOL
    def initialize(@tile_based_deferred_renderer : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_D3D9_OPTIONS
    property full_non_pow2_texture_support : Win32cr::Foundation::BOOL
    def initialize(@full_non_pow2_texture_support : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT
    property supports_depth_as_texture_with_less_equal_comparison_filter : Win32cr::Foundation::BOOL
    def initialize(@supports_depth_as_texture_with_less_equal_comparison_filter : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT
    property pixel_shader_min_precision : UInt32
    property all_other_shader_stages_min_precision : UInt32
    def initialize(@pixel_shader_min_precision : UInt32, @all_other_shader_stages_min_precision : UInt32)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_D3D11_OPTIONS1
    property tiled_resources_tier : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCES_TIER
    property min_max_filtering : Win32cr::Foundation::BOOL
    property clear_view_also_supports_depth_only_formats : Win32cr::Foundation::BOOL
    property map_on_default_buffers : Win32cr::Foundation::BOOL
    def initialize(@tiled_resources_tier : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCES_TIER, @min_max_filtering : Win32cr::Foundation::BOOL, @clear_view_also_supports_depth_only_formats : Win32cr::Foundation::BOOL, @map_on_default_buffers : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_D3D9_SIMPLE_INSTANCING_SUPPORT
    property simple_instancing_supported : Win32cr::Foundation::BOOL
    def initialize(@simple_instancing_supported : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_MARKER_SUPPORT
    property profile : Win32cr::Foundation::BOOL
    def initialize(@profile : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_D3D9_OPTIONS1
    property full_non_pow2_texture_supported : Win32cr::Foundation::BOOL
    property depth_as_texture_with_less_equal_comparison_filter_supported : Win32cr::Foundation::BOOL
    property simple_instancing_supported : Win32cr::Foundation::BOOL
    property texture_cube_face_render_target_with_non_cube_depth_stencil_supported : Win32cr::Foundation::BOOL
    def initialize(@full_non_pow2_texture_supported : Win32cr::Foundation::BOOL, @depth_as_texture_with_less_equal_comparison_filter_supported : Win32cr::Foundation::BOOL, @simple_instancing_supported : Win32cr::Foundation::BOOL, @texture_cube_face_render_target_with_non_cube_depth_stencil_supported : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_D3D11_OPTIONS2
    property ps_specified_stencil_ref_supported : Win32cr::Foundation::BOOL
    property typed_uav_load_additional_formats : Win32cr::Foundation::BOOL
    property ro_vs_supported : Win32cr::Foundation::BOOL
    property conservative_rasterization_tier : Win32cr::Graphics::Direct3D11::D3D11_CONSERVATIVE_RASTERIZATION_TIER
    property tiled_resources_tier : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCES_TIER
    property map_on_default_textures : Win32cr::Foundation::BOOL
    property standard_swizzle : Win32cr::Foundation::BOOL
    property unified_memory_architecture : Win32cr::Foundation::BOOL
    def initialize(@ps_specified_stencil_ref_supported : Win32cr::Foundation::BOOL, @typed_uav_load_additional_formats : Win32cr::Foundation::BOOL, @ro_vs_supported : Win32cr::Foundation::BOOL, @conservative_rasterization_tier : Win32cr::Graphics::Direct3D11::D3D11_CONSERVATIVE_RASTERIZATION_TIER, @tiled_resources_tier : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCES_TIER, @map_on_default_textures : Win32cr::Foundation::BOOL, @standard_swizzle : Win32cr::Foundation::BOOL, @unified_memory_architecture : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_D3D11_OPTIONS3
    property vp_and_rt_array_index_from_any_shader_feeding_rasterizer : Win32cr::Foundation::BOOL
    def initialize(@vp_and_rt_array_index_from_any_shader_feeding_rasterizer : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT
    property max_gpu_virtual_address_bits_per_resource : UInt32
    property max_gpu_virtual_address_bits_per_process : UInt32
    def initialize(@max_gpu_virtual_address_bits_per_resource : UInt32, @max_gpu_virtual_address_bits_per_process : UInt32)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_SHADER_CACHE
    property support_flags : UInt32
    def initialize(@support_flags : UInt32)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_DISPLAYABLE
    property displayable_texture : Win32cr::Foundation::BOOL
    property shared_resource_tier : Win32cr::Graphics::Direct3D11::D3D11_SHARED_RESOURCE_TIER
    def initialize(@displayable_texture : Win32cr::Foundation::BOOL, @shared_resource_tier : Win32cr::Graphics::Direct3D11::D3D11_SHARED_RESOURCE_TIER)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_D3D11_OPTIONS5
    property shared_resource_tier : Win32cr::Graphics::Direct3D11::D3D11_SHARED_RESOURCE_TIER
    def initialize(@shared_resource_tier : Win32cr::Graphics::Direct3D11::D3D11_SHARED_RESOURCE_TIER)
    end
  end

  @[Extern]
  struct CD3D11_VIDEO_DEFAULT
    def initialize()
    end
  end

  @[Extern]
  struct D3D11_VIDEO_DECODER_DESC
    property guid : LibC::GUID
    property sample_width : UInt32
    property sample_height : UInt32
    property output_format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    def initialize(@guid : LibC::GUID, @sample_width : UInt32, @sample_height : UInt32, @output_format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_DECODER_CONFIG
    property guidConfigBitstreamEncryption : LibC::GUID
    property guidConfigMBcontrolEncryption : LibC::GUID
    property guidConfigResidDiffEncryption : LibC::GUID
    property config_bitstream_raw : UInt32
    property config_m_bcontrol_raster_order : UInt32
    property config_resid_diff_host : UInt32
    property config_spatial_resid8 : UInt32
    property config_resid8_subtraction : UInt32
    property config_spatial_host8or9_clipping : UInt32
    property config_spatial_resid_interleaved : UInt32
    property config_intra_resid_unsigned : UInt32
    property config_resid_diff_accelerator : UInt32
    property config_host_inverse_scan : UInt32
    property config_specific_idct : UInt32
    property config4_grouped_coefs : UInt32
    property config_min_render_target_buff_count : UInt16
    property config_decoder_specific : UInt16
    def initialize(@guidConfigBitstreamEncryption : LibC::GUID, @guidConfigMBcontrolEncryption : LibC::GUID, @guidConfigResidDiffEncryption : LibC::GUID, @config_bitstream_raw : UInt32, @config_m_bcontrol_raster_order : UInt32, @config_resid_diff_host : UInt32, @config_spatial_resid8 : UInt32, @config_resid8_subtraction : UInt32, @config_spatial_host8or9_clipping : UInt32, @config_spatial_resid_interleaved : UInt32, @config_intra_resid_unsigned : UInt32, @config_resid_diff_accelerator : UInt32, @config_host_inverse_scan : UInt32, @config_specific_idct : UInt32, @config4_grouped_coefs : UInt32, @config_min_render_target_buff_count : UInt16, @config_decoder_specific : UInt16)
    end
  end

  @[Extern]
  struct D3D11_AES_CTR_IV
    property iv : UInt64
    property count : UInt64
    def initialize(@iv : UInt64, @count : UInt64)
    end
  end

  @[Extern]
  struct D3D11_ENCRYPTED_BLOCK_INFO
    property num_encrypted_bytes_at_beginning : UInt32
    property num_bytes_in_skip_pattern : UInt32
    property num_bytes_in_encrypt_pattern : UInt32
    def initialize(@num_encrypted_bytes_at_beginning : UInt32, @num_bytes_in_skip_pattern : UInt32, @num_bytes_in_encrypt_pattern : UInt32)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_DECODER_BUFFER_DESC
    property buffer_type : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE
    property buffer_index : UInt32
    property data_offset : UInt32
    property data_size : UInt32
    property first_m_baddress : UInt32
    property num_m_bs_in_buffer : UInt32
    property width : UInt32
    property height : UInt32
    property stride : UInt32
    property reserved_bits : UInt32
    property pIV : Void*
    property iv_size : UInt32
    property partial_encryption : Win32cr::Foundation::BOOL
    property encrypted_block_info : Win32cr::Graphics::Direct3D11::D3D11_ENCRYPTED_BLOCK_INFO
    def initialize(@buffer_type : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE, @buffer_index : UInt32, @data_offset : UInt32, @data_size : UInt32, @first_m_baddress : UInt32, @num_m_bs_in_buffer : UInt32, @width : UInt32, @height : UInt32, @stride : UInt32, @reserved_bits : UInt32, @pIV : Void*, @iv_size : UInt32, @partial_encryption : Win32cr::Foundation::BOOL, @encrypted_block_info : Win32cr::Graphics::Direct3D11::D3D11_ENCRYPTED_BLOCK_INFO)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_DECODER_EXTENSION
    property function : UInt32
    property pPrivateInputData : Void*
    property private_input_data_size : UInt32
    property pPrivateOutputData : Void*
    property private_output_data_size : UInt32
    property resource_count : UInt32
    property ppResourceList : Void**
    def initialize(@function : UInt32, @pPrivateInputData : Void*, @private_input_data_size : UInt32, @pPrivateOutputData : Void*, @private_output_data_size : UInt32, @resource_count : UInt32, @ppResourceList : Void**)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_PROCESSOR_CAPS
    property device_caps : UInt32
    property feature_caps : UInt32
    property filter_caps : UInt32
    property input_format_caps : UInt32
    property auto_stream_caps : UInt32
    property stereo_caps : UInt32
    property rate_conversion_caps_count : UInt32
    property max_input_streams : UInt32
    property max_stream_states : UInt32
    def initialize(@device_caps : UInt32, @feature_caps : UInt32, @filter_caps : UInt32, @input_format_caps : UInt32, @auto_stream_caps : UInt32, @stereo_caps : UInt32, @rate_conversion_caps_count : UInt32, @max_input_streams : UInt32, @max_stream_states : UInt32)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS
    property past_frames : UInt32
    property future_frames : UInt32
    property processor_caps : UInt32
    property i_telecine_caps : UInt32
    property custom_rate_count : UInt32
    def initialize(@past_frames : UInt32, @future_frames : UInt32, @processor_caps : UInt32, @i_telecine_caps : UInt32, @custom_rate_count : UInt32)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_CONTENT_PROTECTION_CAPS
    property caps : UInt32
    property key_exchange_type_count : UInt32
    property block_alignment_size : UInt32
    property protected_memory_size : UInt64
    def initialize(@caps : UInt32, @key_exchange_type_count : UInt32, @block_alignment_size : UInt32, @protected_memory_size : UInt64)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_PROCESSOR_CUSTOM_RATE
    property custom_rate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL
    property output_frames : UInt32
    property input_interlaced : Win32cr::Foundation::BOOL
    property input_frames_or_fields : UInt32
    def initialize(@custom_rate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL, @output_frames : UInt32, @input_interlaced : Win32cr::Foundation::BOOL, @input_frames_or_fields : UInt32)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_PROCESSOR_FILTER_RANGE
    property minimum : Int32
    property maximum : Int32
    property default : Int32
    property multiplier : Float32
    def initialize(@minimum : Int32, @maximum : Int32, @default : Int32, @multiplier : Float32)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_PROCESSOR_CONTENT_DESC
    property input_frame_format : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT
    property input_frame_rate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL
    property input_width : UInt32
    property input_height : UInt32
    property output_frame_rate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL
    property output_width : UInt32
    property output_height : UInt32
    property usage : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_USAGE
    def initialize(@input_frame_format : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT, @input_frame_rate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL, @input_width : UInt32, @input_height : UInt32, @output_frame_rate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL, @output_width : UInt32, @output_height : UInt32, @usage : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_USAGE)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_COLOR_RGBA
    property r : Float32
    property g : Float32
    property b : Float32
    property a : Float32
    def initialize(@r : Float32, @g : Float32, @b : Float32, @a : Float32)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_COLOR_YCbCrA
    property y : Float32
    property cb : Float32
    property cr : Float32
    property a : Float32
    def initialize(@y : Float32, @cb : Float32, @cr : Float32, @a : Float32)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_COLOR
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property y_cb_cr : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR_YCbCrA
    property rgba : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR_RGBA
    def initialize(@y_cb_cr : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR_YCbCrA, @rgba : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR_RGBA)
    end
    end

    def initialize(@anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_PROCESSOR_COLOR_SPACE
    property _bitfield : UInt32
    def initialize(@_bitfield : UInt32)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_PROCESSOR_STREAM
    property enable : Win32cr::Foundation::BOOL
    property output_index : UInt32
    property input_frame_or_field : UInt32
    property past_frames : UInt32
    property future_frames : UInt32
    property ppPastSurfaces : Void**
    property pInputSurface : Void*
    property ppFutureSurfaces : Void**
    property ppPastSurfacesRight : Void**
    property pInputSurfaceRight : Void*
    property ppFutureSurfacesRight : Void**
    def initialize(@enable : Win32cr::Foundation::BOOL, @output_index : UInt32, @input_frame_or_field : UInt32, @past_frames : UInt32, @future_frames : UInt32, @ppPastSurfaces : Void**, @pInputSurface : Void*, @ppFutureSurfaces : Void**, @ppPastSurfacesRight : Void**, @pInputSurfaceRight : Void*, @ppFutureSurfacesRight : Void**)
    end
  end

  @[Extern]
  struct D3D11_OMAC
    property omac : UInt8[16]
    def initialize(@omac : UInt8[16])
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_INPUT
    property query_type : LibC::GUID
    property hChannel : Win32cr::Foundation::HANDLE
    property sequence_number : UInt32
    def initialize(@query_type : LibC::GUID, @hChannel : Win32cr::Foundation::HANDLE, @sequence_number : UInt32)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_OUTPUT
    property omac : Win32cr::Graphics::Direct3D11::D3D11_OMAC
    property query_type : LibC::GUID
    property hChannel : Win32cr::Foundation::HANDLE
    property sequence_number : UInt32
    property return_code : Win32cr::Foundation::HRESULT
    def initialize(@omac : Win32cr::Graphics::Direct3D11::D3D11_OMAC, @query_type : LibC::GUID, @hChannel : Win32cr::Foundation::HANDLE, @sequence_number : UInt32, @return_code : Win32cr::Foundation::HRESULT)
    end
  end

  @[Extern(union: true)]
  struct D3D11_AUTHENTICATED_PROTECTION_FLAGS
    property flags : Flags_e__Struct_
    property value : UInt32

    # Nested Type Flags_e__Struct_
    @[Extern]
    struct Flags_e__Struct_
    property _bitfield : UInt32
    def initialize(@_bitfield : UInt32)
    end
    end

    def initialize(@flags : Flags_e__Struct_, @value : UInt32)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT
    property output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT
    property protection_flags : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_PROTECTION_FLAGS
    def initialize(@output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT, @protection_flags : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_PROTECTION_FLAGS)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT
    property output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT
    property channel_type : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CHANNEL_TYPE
    def initialize(@output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT, @channel_type : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CHANNEL_TYPE)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT
    property output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT
    property device_handle : Win32cr::Foundation::HANDLE
    def initialize(@output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT, @device_handle : Win32cr::Foundation::HANDLE)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT
    property input : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_INPUT
    property decoder_handle : Win32cr::Foundation::HANDLE
    def initialize(@input : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_INPUT, @decoder_handle : Win32cr::Foundation::HANDLE)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT
    property output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT
    property decoder_handle : Win32cr::Foundation::HANDLE
    property crypto_session_handle : Win32cr::Foundation::HANDLE
    property device_handle : Win32cr::Foundation::HANDLE
    def initialize(@output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT, @decoder_handle : Win32cr::Foundation::HANDLE, @crypto_session_handle : Win32cr::Foundation::HANDLE, @device_handle : Win32cr::Foundation::HANDLE)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT
    property output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT
    property restricted_shared_resource_process_count : UInt32
    def initialize(@output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT, @restricted_shared_resource_process_count : UInt32)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT
    property input : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_INPUT
    property process_index : UInt32
    def initialize(@input : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_INPUT, @process_index : UInt32)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT
    property output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT
    property process_index : UInt32
    property process_identifier : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE
    property process_handle : Win32cr::Foundation::HANDLE
    def initialize(@output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT, @process_index : UInt32, @process_identifier : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE, @process_handle : Win32cr::Foundation::HANDLE)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT
    property output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT
    property unrestricted_protected_shared_resource_count : UInt32
    def initialize(@output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT, @unrestricted_protected_shared_resource_count : UInt32)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT
    property input : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_INPUT
    property device_handle : Win32cr::Foundation::HANDLE
    property crypto_session_handle : Win32cr::Foundation::HANDLE
    def initialize(@input : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_INPUT, @device_handle : Win32cr::Foundation::HANDLE, @crypto_session_handle : Win32cr::Foundation::HANDLE)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT
    property output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT
    property device_handle : Win32cr::Foundation::HANDLE
    property crypto_session_handle : Win32cr::Foundation::HANDLE
    property output_id_count : UInt32
    def initialize(@output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT, @device_handle : Win32cr::Foundation::HANDLE, @crypto_session_handle : Win32cr::Foundation::HANDLE, @output_id_count : UInt32)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT
    property input : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_INPUT
    property device_handle : Win32cr::Foundation::HANDLE
    property crypto_session_handle : Win32cr::Foundation::HANDLE
    property output_id_index : UInt32
    def initialize(@input : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_INPUT, @device_handle : Win32cr::Foundation::HANDLE, @crypto_session_handle : Win32cr::Foundation::HANDLE, @output_id_index : UInt32)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT
    property output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT
    property device_handle : Win32cr::Foundation::HANDLE
    property crypto_session_handle : Win32cr::Foundation::HANDLE
    property output_id_index : UInt32
    property output_id : UInt64
    def initialize(@output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT, @device_handle : Win32cr::Foundation::HANDLE, @crypto_session_handle : Win32cr::Foundation::HANDLE, @output_id_index : UInt32, @output_id : UInt64)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_OUTPUT
    property output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT
    property bus_type : Win32cr::Graphics::Direct3D11::D3D11_BUS_TYPE
    property accessible_in_contiguous_blocks : Win32cr::Foundation::BOOL
    property accessible_in_non_contiguous_blocks : Win32cr::Foundation::BOOL
    def initialize(@output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT, @bus_type : Win32cr::Graphics::Direct3D11::D3D11_BUS_TYPE, @accessible_in_contiguous_blocks : Win32cr::Foundation::BOOL, @accessible_in_non_contiguous_blocks : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT
    property output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT
    property encryption_guid_count : UInt32
    def initialize(@output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT, @encryption_guid_count : UInt32)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT
    property input : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_INPUT
    property encryption_guid_index : UInt32
    def initialize(@input : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_INPUT, @encryption_guid_index : UInt32)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT
    property output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT
    property encryption_guid_index : UInt32
    property encryption_guid : LibC::GUID
    def initialize(@output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT, @encryption_guid_index : UInt32, @encryption_guid : LibC::GUID)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT
    property output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT
    property encryption_guid : LibC::GUID
    def initialize(@output : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_QUERY_OUTPUT, @encryption_guid : LibC::GUID)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_CONFIGURE_INPUT
    property omac : Win32cr::Graphics::Direct3D11::D3D11_OMAC
    property configure_type : LibC::GUID
    property hChannel : Win32cr::Foundation::HANDLE
    property sequence_number : UInt32
    def initialize(@omac : Win32cr::Graphics::Direct3D11::D3D11_OMAC, @configure_type : LibC::GUID, @hChannel : Win32cr::Foundation::HANDLE, @sequence_number : UInt32)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_CONFIGURE_OUTPUT
    property omac : Win32cr::Graphics::Direct3D11::D3D11_OMAC
    property configure_type : LibC::GUID
    property hChannel : Win32cr::Foundation::HANDLE
    property sequence_number : UInt32
    property return_code : Win32cr::Foundation::HRESULT
    def initialize(@omac : Win32cr::Graphics::Direct3D11::D3D11_OMAC, @configure_type : LibC::GUID, @hChannel : Win32cr::Foundation::HANDLE, @sequence_number : UInt32, @return_code : Win32cr::Foundation::HRESULT)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT
    property parameters : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_INPUT
    property start_sequence_query : UInt32
    property start_sequence_configure : UInt32
    def initialize(@parameters : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_INPUT, @start_sequence_query : UInt32, @start_sequence_configure : UInt32)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT
    property parameters : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_INPUT
    property protections : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_PROTECTION_FLAGS
    def initialize(@parameters : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_INPUT, @protections : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_PROTECTION_FLAGS)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT
    property parameters : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_INPUT
    property decoder_handle : Win32cr::Foundation::HANDLE
    property crypto_session_handle : Win32cr::Foundation::HANDLE
    property device_handle : Win32cr::Foundation::HANDLE
    def initialize(@parameters : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_INPUT, @decoder_handle : Win32cr::Foundation::HANDLE, @crypto_session_handle : Win32cr::Foundation::HANDLE, @device_handle : Win32cr::Foundation::HANDLE)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT
    property parameters : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_INPUT
    property process_type : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE
    property process_handle : Win32cr::Foundation::HANDLE
    property allow_access : Win32cr::Foundation::BOOL
    def initialize(@parameters : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_INPUT, @process_type : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE, @process_handle : Win32cr::Foundation::HANDLE, @allow_access : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT
    property parameters : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_INPUT
    property encryption_guid : LibC::GUID
    def initialize(@parameters : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_INPUT, @encryption_guid : LibC::GUID)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_VDOV
    property array_slice : UInt32
    def initialize(@array_slice : UInt32)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC
    property decode_profile : LibC::GUID
    property view_dimension : Win32cr::Graphics::Direct3D11::D3D11_VDOV_DIMENSION
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_VDOV
    def initialize(@texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_VDOV)
    end
    end

    def initialize(@decode_profile : LibC::GUID, @view_dimension : Win32cr::Graphics::Direct3D11::D3D11_VDOV_DIMENSION, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_VPIV
    property mip_slice : UInt32
    property array_slice : UInt32
    def initialize(@mip_slice : UInt32, @array_slice : UInt32)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC
    property four_cc : UInt32
    property view_dimension : Win32cr::Graphics::Direct3D11::D3D11_VPIV_DIMENSION
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_VPIV
    def initialize(@texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_VPIV)
    end
    end

    def initialize(@four_cc : UInt32, @view_dimension : Win32cr::Graphics::Direct3D11::D3D11_VPIV_DIMENSION, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_VPOV
    property mip_slice : UInt32
    def initialize(@mip_slice : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_ARRAY_VPOV
    property mip_slice : UInt32
    property first_array_slice : UInt32
    property array_size : UInt32
    def initialize(@mip_slice : UInt32, @first_array_slice : UInt32, @array_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC
    property view_dimension : Win32cr::Graphics::Direct3D11::D3D11_VPOV_DIMENSION
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_VPOV
    property texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_VPOV
    def initialize(@texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_VPOV, @texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_VPOV)
    end
    end

    def initialize(@view_dimension : Win32cr::Graphics::Direct3D11::D3D11_VPOV_DIMENSION, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct D3D11_MESSAGE
    property category : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_CATEGORY
    property severity : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_SEVERITY
    property id : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_ID
    property pDescription : UInt8*
    property description_byte_length : LibC::UIntPtrT
    def initialize(@category : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_CATEGORY, @severity : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_SEVERITY, @id : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_ID, @pDescription : UInt8*, @description_byte_length : LibC::UIntPtrT)
    end
  end

  @[Extern]
  struct D3D11_INFO_QUEUE_FILTER_DESC
    property num_categories : UInt32
    property pCategoryList : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_CATEGORY*
    property num_severities : UInt32
    property pSeverityList : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_SEVERITY*
    property num_i_ds : UInt32
    property pIDList : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_ID*
    def initialize(@num_categories : UInt32, @pCategoryList : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_CATEGORY*, @num_severities : UInt32, @pSeverityList : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_SEVERITY*, @num_i_ds : UInt32, @pIDList : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_ID*)
    end
  end

  @[Extern]
  struct D3D11_INFO_QUEUE_FILTER
    property allow_list : Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER_DESC
    property deny_list : Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER_DESC
    def initialize(@allow_list : Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER_DESC, @deny_list : Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER_DESC)
    end
  end

  @[Extern]
  struct D3D11_RENDER_TARGET_BLEND_DESC1
    property blend_enable : Win32cr::Foundation::BOOL
    property logic_op_enable : Win32cr::Foundation::BOOL
    property src_blend : Win32cr::Graphics::Direct3D11::D3D11_BLEND
    property dest_blend : Win32cr::Graphics::Direct3D11::D3D11_BLEND
    property blend_op : Win32cr::Graphics::Direct3D11::D3D11_BLEND_OP
    property src_blend_alpha : Win32cr::Graphics::Direct3D11::D3D11_BLEND
    property dest_blend_alpha : Win32cr::Graphics::Direct3D11::D3D11_BLEND
    property blend_op_alpha : Win32cr::Graphics::Direct3D11::D3D11_BLEND_OP
    property logic_op : Win32cr::Graphics::Direct3D11::D3D11_LOGIC_OP
    property render_target_write_mask : UInt8
    def initialize(@blend_enable : Win32cr::Foundation::BOOL, @logic_op_enable : Win32cr::Foundation::BOOL, @src_blend : Win32cr::Graphics::Direct3D11::D3D11_BLEND, @dest_blend : Win32cr::Graphics::Direct3D11::D3D11_BLEND, @blend_op : Win32cr::Graphics::Direct3D11::D3D11_BLEND_OP, @src_blend_alpha : Win32cr::Graphics::Direct3D11::D3D11_BLEND, @dest_blend_alpha : Win32cr::Graphics::Direct3D11::D3D11_BLEND, @blend_op_alpha : Win32cr::Graphics::Direct3D11::D3D11_BLEND_OP, @logic_op : Win32cr::Graphics::Direct3D11::D3D11_LOGIC_OP, @render_target_write_mask : UInt8)
    end
  end

  @[Extern]
  struct D3D11_BLEND_DESC1
    property alpha_to_coverage_enable : Win32cr::Foundation::BOOL
    property independent_blend_enable : Win32cr::Foundation::BOOL
    property render_target : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_BLEND_DESC1[8]
    def initialize(@alpha_to_coverage_enable : Win32cr::Foundation::BOOL, @independent_blend_enable : Win32cr::Foundation::BOOL, @render_target : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_BLEND_DESC1[8])
    end
  end

  @[Extern]
  struct D3D11_RASTERIZER_DESC1
    property fill_mode : Win32cr::Graphics::Direct3D11::D3D11_FILL_MODE
    property cull_mode : Win32cr::Graphics::Direct3D11::D3D11_CULL_MODE
    property front_counter_clockwise : Win32cr::Foundation::BOOL
    property depth_bias : Int32
    property depth_bias_clamp : Float32
    property slope_scaled_depth_bias : Float32
    property depth_clip_enable : Win32cr::Foundation::BOOL
    property scissor_enable : Win32cr::Foundation::BOOL
    property multisample_enable : Win32cr::Foundation::BOOL
    property antialiased_line_enable : Win32cr::Foundation::BOOL
    property forced_sample_count : UInt32
    def initialize(@fill_mode : Win32cr::Graphics::Direct3D11::D3D11_FILL_MODE, @cull_mode : Win32cr::Graphics::Direct3D11::D3D11_CULL_MODE, @front_counter_clockwise : Win32cr::Foundation::BOOL, @depth_bias : Int32, @depth_bias_clamp : Float32, @slope_scaled_depth_bias : Float32, @depth_clip_enable : Win32cr::Foundation::BOOL, @scissor_enable : Win32cr::Foundation::BOOL, @multisample_enable : Win32cr::Foundation::BOOL, @antialiased_line_enable : Win32cr::Foundation::BOOL, @forced_sample_count : UInt32)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK
    property clear_size : UInt32
    property encrypted_size : UInt32
    def initialize(@clear_size : UInt32, @encrypted_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_DECODER_BUFFER_DESC1
    property buffer_type : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE
    property data_offset : UInt32
    property data_size : UInt32
    property pIV : Void*
    property iv_size : UInt32
    property pSubSampleMappingBlock : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK*
    property sub_sample_mapping_count : UInt32
    def initialize(@buffer_type : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE, @data_offset : UInt32, @data_size : UInt32, @pIV : Void*, @iv_size : UInt32, @pSubSampleMappingBlock : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK*, @sub_sample_mapping_count : UInt32)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_DECODER_BEGIN_FRAME_CRYPTO_SESSION
    property pCryptoSession : Void*
    property blob_size : UInt32
    property pBlob : Void*
    property pKeyInfoId : LibC::GUID*
    property private_data_size : UInt32
    property pPrivateData : Void*
    def initialize(@pCryptoSession : Void*, @blob_size : UInt32, @pBlob : Void*, @pKeyInfoId : LibC::GUID*, @private_data_size : UInt32, @pPrivateData : Void*)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT
    property enable : Win32cr::Foundation::BOOL
    property width : UInt32
    property height : UInt32
    property format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    def initialize(@enable : Win32cr::Foundation::BOOL, @width : UInt32, @height : UInt32, @format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT)
    end
  end

  @[Extern]
  struct D3D11_KEY_EXCHANGE_HW_PROTECTION_INPUT_DATA
    property private_data_size : UInt32
    property hw_protection_data_size : UInt32
    property pbInput : UInt8[4]
    def initialize(@private_data_size : UInt32, @hw_protection_data_size : UInt32, @pbInput : UInt8[4])
    end
  end

  @[Extern]
  struct D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA
    property private_data_size : UInt32
    property max_hw_protection_data_size : UInt32
    property hw_protection_data_size : UInt32
    property transport_time : UInt64
    property execution_time : UInt64
    property pbOutput : UInt8[4]
    def initialize(@private_data_size : UInt32, @max_hw_protection_data_size : UInt32, @hw_protection_data_size : UInt32, @transport_time : UInt64, @execution_time : UInt64, @pbOutput : UInt8[4])
    end
  end

  @[Extern]
  struct D3D11_KEY_EXCHANGE_HW_PROTECTION_DATA
    property hw_protection_function_id : UInt32
    property pInputData : Win32cr::Graphics::Direct3D11::D3D11_KEY_EXCHANGE_HW_PROTECTION_INPUT_DATA*
    property pOutputData : Win32cr::Graphics::Direct3D11::D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA*
    property status : Win32cr::Foundation::HRESULT
    def initialize(@hw_protection_function_id : UInt32, @pInputData : Win32cr::Graphics::Direct3D11::D3D11_KEY_EXCHANGE_HW_PROTECTION_INPUT_DATA*, @pOutputData : Win32cr::Graphics::Direct3D11::D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA*, @status : Win32cr::Foundation::HRESULT)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_SAMPLE_DESC
    property width : UInt32
    property height : UInt32
    property format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE
    def initialize(@width : UInt32, @height : UInt32, @format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE)
    end
  end

  @[Extern]
  struct D3D11_TILED_RESOURCE_COORDINATE
    property x : UInt32
    property y : UInt32
    property z : UInt32
    property subresource : UInt32
    def initialize(@x : UInt32, @y : UInt32, @z : UInt32, @subresource : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TILE_REGION_SIZE
    property num_tiles : UInt32
    property bUseBox : Win32cr::Foundation::BOOL
    property width : UInt32
    property height : UInt16
    property depth : UInt16
    def initialize(@num_tiles : UInt32, @bUseBox : Win32cr::Foundation::BOOL, @width : UInt32, @height : UInt16, @depth : UInt16)
    end
  end

  @[Extern]
  struct D3D11_SUBRESOURCE_TILING
    property width_in_tiles : UInt32
    property height_in_tiles : UInt16
    property depth_in_tiles : UInt16
    property start_tile_index_in_overall_resource : UInt32
    def initialize(@width_in_tiles : UInt32, @height_in_tiles : UInt16, @depth_in_tiles : UInt16, @start_tile_index_in_overall_resource : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TILE_SHAPE
    property width_in_texels : UInt32
    property height_in_texels : UInt32
    property depth_in_texels : UInt32
    def initialize(@width_in_texels : UInt32, @height_in_texels : UInt32, @depth_in_texels : UInt32)
    end
  end

  @[Extern]
  struct D3D11_PACKED_MIP_DESC
    property num_standard_mips : UInt8
    property num_packed_mips : UInt8
    property num_tiles_for_packed_mips : UInt32
    property start_tile_index_in_overall_resource : UInt32
    def initialize(@num_standard_mips : UInt8, @num_packed_mips : UInt8, @num_tiles_for_packed_mips : UInt32, @start_tile_index_in_overall_resource : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEXTURE2D_DESC1
    property width : UInt32
    property height : UInt32
    property mip_levels : UInt32
    property array_size : UInt32
    property format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property sample_desc : Win32cr::Graphics::Dxgi::Common::DXGI_SAMPLE_DESC
    property usage : Win32cr::Graphics::Direct3D11::D3D11_USAGE
    property bind_flags : Win32cr::Graphics::Direct3D11::D3D11_BIND_FLAG
    property cpu_access_flags : Win32cr::Graphics::Direct3D11::D3D11_CPU_ACCESS_FLAG
    property misc_flags : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_MISC_FLAG
    property texture_layout : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE_LAYOUT
    def initialize(@width : UInt32, @height : UInt32, @mip_levels : UInt32, @array_size : UInt32, @format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @sample_desc : Win32cr::Graphics::Dxgi::Common::DXGI_SAMPLE_DESC, @usage : Win32cr::Graphics::Direct3D11::D3D11_USAGE, @bind_flags : Win32cr::Graphics::Direct3D11::D3D11_BIND_FLAG, @cpu_access_flags : Win32cr::Graphics::Direct3D11::D3D11_CPU_ACCESS_FLAG, @misc_flags : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_MISC_FLAG, @texture_layout : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE_LAYOUT)
    end
  end

  @[Extern]
  struct D3D11_TEXTURE3D_DESC1
    property width : UInt32
    property height : UInt32
    property depth : UInt32
    property mip_levels : UInt32
    property format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property usage : Win32cr::Graphics::Direct3D11::D3D11_USAGE
    property bind_flags : Win32cr::Graphics::Direct3D11::D3D11_BIND_FLAG
    property cpu_access_flags : Win32cr::Graphics::Direct3D11::D3D11_CPU_ACCESS_FLAG
    property misc_flags : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_MISC_FLAG
    property texture_layout : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE_LAYOUT
    def initialize(@width : UInt32, @height : UInt32, @depth : UInt32, @mip_levels : UInt32, @format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @usage : Win32cr::Graphics::Direct3D11::D3D11_USAGE, @bind_flags : Win32cr::Graphics::Direct3D11::D3D11_BIND_FLAG, @cpu_access_flags : Win32cr::Graphics::Direct3D11::D3D11_CPU_ACCESS_FLAG, @misc_flags : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_MISC_FLAG, @texture_layout : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE_LAYOUT)
    end
  end

  @[Extern]
  struct D3D11_RASTERIZER_DESC2
    property fill_mode : Win32cr::Graphics::Direct3D11::D3D11_FILL_MODE
    property cull_mode : Win32cr::Graphics::Direct3D11::D3D11_CULL_MODE
    property front_counter_clockwise : Win32cr::Foundation::BOOL
    property depth_bias : Int32
    property depth_bias_clamp : Float32
    property slope_scaled_depth_bias : Float32
    property depth_clip_enable : Win32cr::Foundation::BOOL
    property scissor_enable : Win32cr::Foundation::BOOL
    property multisample_enable : Win32cr::Foundation::BOOL
    property antialiased_line_enable : Win32cr::Foundation::BOOL
    property forced_sample_count : UInt32
    property conservative_raster : Win32cr::Graphics::Direct3D11::D3D11_CONSERVATIVE_RASTERIZATION_MODE
    def initialize(@fill_mode : Win32cr::Graphics::Direct3D11::D3D11_FILL_MODE, @cull_mode : Win32cr::Graphics::Direct3D11::D3D11_CULL_MODE, @front_counter_clockwise : Win32cr::Foundation::BOOL, @depth_bias : Int32, @depth_bias_clamp : Float32, @slope_scaled_depth_bias : Float32, @depth_clip_enable : Win32cr::Foundation::BOOL, @scissor_enable : Win32cr::Foundation::BOOL, @multisample_enable : Win32cr::Foundation::BOOL, @antialiased_line_enable : Win32cr::Foundation::BOOL, @forced_sample_count : UInt32, @conservative_raster : Win32cr::Graphics::Direct3D11::D3D11_CONSERVATIVE_RASTERIZATION_MODE)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_SRV1
    property most_detailed_mip : UInt32
    property mip_levels : UInt32
    property plane_slice : UInt32
    def initialize(@most_detailed_mip : UInt32, @mip_levels : UInt32, @plane_slice : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_ARRAY_SRV1
    property most_detailed_mip : UInt32
    property mip_levels : UInt32
    property first_array_slice : UInt32
    property array_size : UInt32
    property plane_slice : UInt32
    def initialize(@most_detailed_mip : UInt32, @mip_levels : UInt32, @first_array_slice : UInt32, @array_size : UInt32, @plane_slice : UInt32)
    end
  end

  @[Extern]
  struct D3D11_SHADER_RESOURCE_VIEW_DESC1
    property format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property view_dimension : Win32cr::Graphics::Direct3D::D3D_SRV_DIMENSION
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property buffer : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_SRV
    property texture1_d : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_SRV
    property texture1_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_ARRAY_SRV
    property texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_SRV1
    property texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_SRV1
    property texture2_dms : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_SRV
    property texture2_dms_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_ARRAY_SRV
    property texture3_d : Win32cr::Graphics::Direct3D11::D3D11_TEX3D_SRV
    property texture_cube : Win32cr::Graphics::Direct3D11::D3D11_TEXCUBE_SRV
    property texture_cube_array : Win32cr::Graphics::Direct3D11::D3D11_TEXCUBE_ARRAY_SRV
    property buffer_ex : Win32cr::Graphics::Direct3D11::D3D11_BUFFEREX_SRV
    def initialize(@buffer : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_SRV, @texture1_d : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_SRV, @texture1_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_ARRAY_SRV, @texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_SRV1, @texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_SRV1, @texture2_dms : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_SRV, @texture2_dms_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_ARRAY_SRV, @texture3_d : Win32cr::Graphics::Direct3D11::D3D11_TEX3D_SRV, @texture_cube : Win32cr::Graphics::Direct3D11::D3D11_TEXCUBE_SRV, @texture_cube_array : Win32cr::Graphics::Direct3D11::D3D11_TEXCUBE_ARRAY_SRV, @buffer_ex : Win32cr::Graphics::Direct3D11::D3D11_BUFFEREX_SRV)
    end
    end

    def initialize(@format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @view_dimension : Win32cr::Graphics::Direct3D::D3D_SRV_DIMENSION, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_RTV1
    property mip_slice : UInt32
    property plane_slice : UInt32
    def initialize(@mip_slice : UInt32, @plane_slice : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_ARRAY_RTV1
    property mip_slice : UInt32
    property first_array_slice : UInt32
    property array_size : UInt32
    property plane_slice : UInt32
    def initialize(@mip_slice : UInt32, @first_array_slice : UInt32, @array_size : UInt32, @plane_slice : UInt32)
    end
  end

  @[Extern]
  struct D3D11_RENDER_TARGET_VIEW_DESC1
    property format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property view_dimension : Win32cr::Graphics::Direct3D11::D3D11_RTV_DIMENSION
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property buffer : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_RTV
    property texture1_d : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_RTV
    property texture1_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_ARRAY_RTV
    property texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_RTV1
    property texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_RTV1
    property texture2_dms : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_RTV
    property texture2_dms_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_ARRAY_RTV
    property texture3_d : Win32cr::Graphics::Direct3D11::D3D11_TEX3D_RTV
    def initialize(@buffer : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_RTV, @texture1_d : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_RTV, @texture1_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_ARRAY_RTV, @texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_RTV1, @texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_RTV1, @texture2_dms : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_RTV, @texture2_dms_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2DMS_ARRAY_RTV, @texture3_d : Win32cr::Graphics::Direct3D11::D3D11_TEX3D_RTV)
    end
    end

    def initialize(@format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @view_dimension : Win32cr::Graphics::Direct3D11::D3D11_RTV_DIMENSION, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_UAV1
    property mip_slice : UInt32
    property plane_slice : UInt32
    def initialize(@mip_slice : UInt32, @plane_slice : UInt32)
    end
  end

  @[Extern]
  struct D3D11_TEX2D_ARRAY_UAV1
    property mip_slice : UInt32
    property first_array_slice : UInt32
    property array_size : UInt32
    property plane_slice : UInt32
    def initialize(@mip_slice : UInt32, @first_array_slice : UInt32, @array_size : UInt32, @plane_slice : UInt32)
    end
  end

  @[Extern]
  struct D3D11_UNORDERED_ACCESS_VIEW_DESC1
    property format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT
    property view_dimension : Win32cr::Graphics::Direct3D11::D3D11_UAV_DIMENSION
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property buffer : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_UAV
    property texture1_d : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_UAV
    property texture1_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_ARRAY_UAV
    property texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_UAV1
    property texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_UAV1
    property texture3_d : Win32cr::Graphics::Direct3D11::D3D11_TEX3D_UAV
    def initialize(@buffer : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_UAV, @texture1_d : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_UAV, @texture1_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX1D_ARRAY_UAV, @texture2_d : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_UAV1, @texture2_d_array : Win32cr::Graphics::Direct3D11::D3D11_TEX2D_ARRAY_UAV1, @texture3_d : Win32cr::Graphics::Direct3D11::D3D11_TEX3D_UAV)
    end
    end

    def initialize(@format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, @view_dimension : Win32cr::Graphics::Direct3D11::D3D11_UAV_DIMENSION, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct D3D11_QUERY_DESC1
    property query : Win32cr::Graphics::Direct3D11::D3D11_QUERY
    property misc_flags : UInt32
    property context_type : Win32cr::Graphics::Direct3D11::D3D11_CONTEXT_TYPE
    def initialize(@query : Win32cr::Graphics::Direct3D11::D3D11_QUERY, @misc_flags : UInt32, @context_type : Win32cr::Graphics::Direct3D11::D3D11_CONTEXT_TYPE)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_VIDEO_DECODER_HISTOGRAM
    property decoder_desc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC
    property components : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS
    property bin_count : UInt32
    property counter_bit_depth : UInt32
    def initialize(@decoder_desc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC, @components : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS, @bin_count : UInt32, @counter_bit_depth : UInt32)
    end
  end

  @[Extern]
  struct D3D11_VIDEO_DECODER_BUFFER_DESC2
    property buffer_type : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE
    property data_offset : UInt32
    property data_size : UInt32
    property pIV : Void*
    property iv_size : UInt32
    property pSubSampleMappingBlock : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK*
    property sub_sample_mapping_count : UInt32
    property cBlocksStripeEncrypted : UInt32
    property cBlocksStripeClear : UInt32
    def initialize(@buffer_type : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE, @data_offset : UInt32, @data_size : UInt32, @pIV : Void*, @iv_size : UInt32, @pSubSampleMappingBlock : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK*, @sub_sample_mapping_count : UInt32, @cBlocksStripeEncrypted : UInt32, @cBlocksStripeClear : UInt32)
    end
  end

  @[Extern]
  struct D3D11_FEATURE_DATA_D3D11_OPTIONS4
    property extended_nv12_shared_texture_supported : Win32cr::Foundation::BOOL
    def initialize(@extended_nv12_shared_texture_supported : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_SIGNATURE_PARAMETER_DESC
    property semantic_name : Win32cr::Foundation::PSTR
    property semantic_index : UInt32
    property register : UInt32
    property system_value_type : Win32cr::Graphics::Direct3D::D3D_NAME
    property component_type : Win32cr::Graphics::Direct3D::D3D_REGISTER_COMPONENT_TYPE
    property mask : UInt8
    property read_write_mask : UInt8
    property stream : UInt32
    property min_precision : Win32cr::Graphics::Direct3D::D3D_MIN_PRECISION
    def initialize(@semantic_name : Win32cr::Foundation::PSTR, @semantic_index : UInt32, @register : UInt32, @system_value_type : Win32cr::Graphics::Direct3D::D3D_NAME, @component_type : Win32cr::Graphics::Direct3D::D3D_REGISTER_COMPONENT_TYPE, @mask : UInt8, @read_write_mask : UInt8, @stream : UInt32, @min_precision : Win32cr::Graphics::Direct3D::D3D_MIN_PRECISION)
    end
  end

  @[Extern]
  struct D3D11_SHADER_BUFFER_DESC
    property name : Win32cr::Foundation::PSTR
    property type__ : Win32cr::Graphics::Direct3D::D3D_CBUFFER_TYPE
    property variables : UInt32
    property size : UInt32
    property uFlags : UInt32
    def initialize(@name : Win32cr::Foundation::PSTR, @type__ : Win32cr::Graphics::Direct3D::D3D_CBUFFER_TYPE, @variables : UInt32, @size : UInt32, @uFlags : UInt32)
    end
  end

  @[Extern]
  struct D3D11_SHADER_VARIABLE_DESC
    property name : Win32cr::Foundation::PSTR
    property start_offset : UInt32
    property size : UInt32
    property uFlags : UInt32
    property default_value : Void*
    property start_texture : UInt32
    property texture_size : UInt32
    property start_sampler : UInt32
    property sampler_size : UInt32
    def initialize(@name : Win32cr::Foundation::PSTR, @start_offset : UInt32, @size : UInt32, @uFlags : UInt32, @default_value : Void*, @start_texture : UInt32, @texture_size : UInt32, @start_sampler : UInt32, @sampler_size : UInt32)
    end
  end

  @[Extern]
  struct D3D11_SHADER_TYPE_DESC
    property class__ : Win32cr::Graphics::Direct3D::D3D_SHADER_VARIABLE_CLASS
    property type__ : Win32cr::Graphics::Direct3D::D3D_SHADER_VARIABLE_TYPE
    property rows : UInt32
    property columns : UInt32
    property elements : UInt32
    property members : UInt32
    property offset : UInt32
    property name : Win32cr::Foundation::PSTR
    def initialize(@class__ : Win32cr::Graphics::Direct3D::D3D_SHADER_VARIABLE_CLASS, @type__ : Win32cr::Graphics::Direct3D::D3D_SHADER_VARIABLE_TYPE, @rows : UInt32, @columns : UInt32, @elements : UInt32, @members : UInt32, @offset : UInt32, @name : Win32cr::Foundation::PSTR)
    end
  end

  @[Extern]
  struct D3D11_SHADER_DESC
    property version : UInt32
    property creator : Win32cr::Foundation::PSTR
    property flags : UInt32
    property constant_buffers : UInt32
    property bound_resources : UInt32
    property input_parameters : UInt32
    property output_parameters : UInt32
    property instruction_count : UInt32
    property temp_register_count : UInt32
    property temp_array_count : UInt32
    property def_count : UInt32
    property dcl_count : UInt32
    property texture_normal_instructions : UInt32
    property texture_load_instructions : UInt32
    property texture_comp_instructions : UInt32
    property texture_bias_instructions : UInt32
    property texture_gradient_instructions : UInt32
    property float_instruction_count : UInt32
    property int_instruction_count : UInt32
    property uint_instruction_count : UInt32
    property static_flow_control_count : UInt32
    property dynamic_flow_control_count : UInt32
    property macro_instruction_count : UInt32
    property array_instruction_count : UInt32
    property cut_instruction_count : UInt32
    property emit_instruction_count : UInt32
    property gs_output_topology : Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY
    property gs_max_output_vertex_count : UInt32
    property input_primitive : Win32cr::Graphics::Direct3D::D3D_PRIMITIVE
    property patch_constant_parameters : UInt32
    property cGSInstanceCount : UInt32
    property cControlPoints : UInt32
    property hs_output_primitive : Win32cr::Graphics::Direct3D::D3D_TESSELLATOR_OUTPUT_PRIMITIVE
    property hs_partitioning : Win32cr::Graphics::Direct3D::D3D_TESSELLATOR_PARTITIONING
    property tessellator_domain : Win32cr::Graphics::Direct3D::D3D_TESSELLATOR_DOMAIN
    property cBarrierInstructions : UInt32
    property cInterlockedInstructions : UInt32
    property cTextureStoreInstructions : UInt32
    def initialize(@version : UInt32, @creator : Win32cr::Foundation::PSTR, @flags : UInt32, @constant_buffers : UInt32, @bound_resources : UInt32, @input_parameters : UInt32, @output_parameters : UInt32, @instruction_count : UInt32, @temp_register_count : UInt32, @temp_array_count : UInt32, @def_count : UInt32, @dcl_count : UInt32, @texture_normal_instructions : UInt32, @texture_load_instructions : UInt32, @texture_comp_instructions : UInt32, @texture_bias_instructions : UInt32, @texture_gradient_instructions : UInt32, @float_instruction_count : UInt32, @int_instruction_count : UInt32, @uint_instruction_count : UInt32, @static_flow_control_count : UInt32, @dynamic_flow_control_count : UInt32, @macro_instruction_count : UInt32, @array_instruction_count : UInt32, @cut_instruction_count : UInt32, @emit_instruction_count : UInt32, @gs_output_topology : Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY, @gs_max_output_vertex_count : UInt32, @input_primitive : Win32cr::Graphics::Direct3D::D3D_PRIMITIVE, @patch_constant_parameters : UInt32, @cGSInstanceCount : UInt32, @cControlPoints : UInt32, @hs_output_primitive : Win32cr::Graphics::Direct3D::D3D_TESSELLATOR_OUTPUT_PRIMITIVE, @hs_partitioning : Win32cr::Graphics::Direct3D::D3D_TESSELLATOR_PARTITIONING, @tessellator_domain : Win32cr::Graphics::Direct3D::D3D_TESSELLATOR_DOMAIN, @cBarrierInstructions : UInt32, @cInterlockedInstructions : UInt32, @cTextureStoreInstructions : UInt32)
    end
  end

  @[Extern]
  struct D3D11_SHADER_INPUT_BIND_DESC
    property name : Win32cr::Foundation::PSTR
    property type__ : Win32cr::Graphics::Direct3D::D3D_SHADER_INPUT_TYPE
    property bind_point : UInt32
    property bind_count : UInt32
    property uFlags : UInt32
    property return_type : Win32cr::Graphics::Direct3D::D3D_RESOURCE_RETURN_TYPE
    property dimension : Win32cr::Graphics::Direct3D::D3D_SRV_DIMENSION
    property num_samples : UInt32
    def initialize(@name : Win32cr::Foundation::PSTR, @type__ : Win32cr::Graphics::Direct3D::D3D_SHADER_INPUT_TYPE, @bind_point : UInt32, @bind_count : UInt32, @uFlags : UInt32, @return_type : Win32cr::Graphics::Direct3D::D3D_RESOURCE_RETURN_TYPE, @dimension : Win32cr::Graphics::Direct3D::D3D_SRV_DIMENSION, @num_samples : UInt32)
    end
  end

  @[Extern]
  struct D3D11_LIBRARY_DESC
    property creator : Win32cr::Foundation::PSTR
    property flags : UInt32
    property function_count : UInt32
    def initialize(@creator : Win32cr::Foundation::PSTR, @flags : UInt32, @function_count : UInt32)
    end
  end

  @[Extern]
  struct D3D11_FUNCTION_DESC
    property version : UInt32
    property creator : Win32cr::Foundation::PSTR
    property flags : UInt32
    property constant_buffers : UInt32
    property bound_resources : UInt32
    property instruction_count : UInt32
    property temp_register_count : UInt32
    property temp_array_count : UInt32
    property def_count : UInt32
    property dcl_count : UInt32
    property texture_normal_instructions : UInt32
    property texture_load_instructions : UInt32
    property texture_comp_instructions : UInt32
    property texture_bias_instructions : UInt32
    property texture_gradient_instructions : UInt32
    property float_instruction_count : UInt32
    property int_instruction_count : UInt32
    property uint_instruction_count : UInt32
    property static_flow_control_count : UInt32
    property dynamic_flow_control_count : UInt32
    property macro_instruction_count : UInt32
    property array_instruction_count : UInt32
    property mov_instruction_count : UInt32
    property movc_instruction_count : UInt32
    property conversion_instruction_count : UInt32
    property bitwise_instruction_count : UInt32
    property min_feature_level : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL
    property required_feature_flags : UInt64
    property name : Win32cr::Foundation::PSTR
    property function_parameter_count : Int32
    property has_return : Win32cr::Foundation::BOOL
    property has10_level9_vertex_shader : Win32cr::Foundation::BOOL
    property has10_level9_pixel_shader : Win32cr::Foundation::BOOL
    def initialize(@version : UInt32, @creator : Win32cr::Foundation::PSTR, @flags : UInt32, @constant_buffers : UInt32, @bound_resources : UInt32, @instruction_count : UInt32, @temp_register_count : UInt32, @temp_array_count : UInt32, @def_count : UInt32, @dcl_count : UInt32, @texture_normal_instructions : UInt32, @texture_load_instructions : UInt32, @texture_comp_instructions : UInt32, @texture_bias_instructions : UInt32, @texture_gradient_instructions : UInt32, @float_instruction_count : UInt32, @int_instruction_count : UInt32, @uint_instruction_count : UInt32, @static_flow_control_count : UInt32, @dynamic_flow_control_count : UInt32, @macro_instruction_count : UInt32, @array_instruction_count : UInt32, @mov_instruction_count : UInt32, @movc_instruction_count : UInt32, @conversion_instruction_count : UInt32, @bitwise_instruction_count : UInt32, @min_feature_level : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL, @required_feature_flags : UInt64, @name : Win32cr::Foundation::PSTR, @function_parameter_count : Int32, @has_return : Win32cr::Foundation::BOOL, @has10_level9_vertex_shader : Win32cr::Foundation::BOOL, @has10_level9_pixel_shader : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct D3D11_PARAMETER_DESC
    property name : Win32cr::Foundation::PSTR
    property semantic_name : Win32cr::Foundation::PSTR
    property type__ : Win32cr::Graphics::Direct3D::D3D_SHADER_VARIABLE_TYPE
    property class__ : Win32cr::Graphics::Direct3D::D3D_SHADER_VARIABLE_CLASS
    property rows : UInt32
    property columns : UInt32
    property interpolation_mode : Win32cr::Graphics::Direct3D::D3D_INTERPOLATION_MODE
    property flags : Win32cr::Graphics::Direct3D::D3D_PARAMETER_FLAGS
    property first_in_register : UInt32
    property first_in_component : UInt32
    property first_out_register : UInt32
    property first_out_component : UInt32
    def initialize(@name : Win32cr::Foundation::PSTR, @semantic_name : Win32cr::Foundation::PSTR, @type__ : Win32cr::Graphics::Direct3D::D3D_SHADER_VARIABLE_TYPE, @class__ : Win32cr::Graphics::Direct3D::D3D_SHADER_VARIABLE_CLASS, @rows : UInt32, @columns : UInt32, @interpolation_mode : Win32cr::Graphics::Direct3D::D3D_INTERPOLATION_MODE, @flags : Win32cr::Graphics::Direct3D::D3D_PARAMETER_FLAGS, @first_in_register : UInt32, @first_in_component : UInt32, @first_out_register : UInt32, @first_out_component : UInt32)
    end
  end

  @[Extern]
  struct D3D11_VERTEX_SHADER_TRACE_DESC
    property invocation : UInt64
    def initialize(@invocation : UInt64)
    end
  end

  @[Extern]
  struct D3D11_HULL_SHADER_TRACE_DESC
    property invocation : UInt64
    def initialize(@invocation : UInt64)
    end
  end

  @[Extern]
  struct D3D11_DOMAIN_SHADER_TRACE_DESC
    property invocation : UInt64
    def initialize(@invocation : UInt64)
    end
  end

  @[Extern]
  struct D3D11_GEOMETRY_SHADER_TRACE_DESC
    property invocation : UInt64
    def initialize(@invocation : UInt64)
    end
  end

  @[Extern]
  struct D3D11_PIXEL_SHADER_TRACE_DESC
    property invocation : UInt64
    property x : Int32
    property y : Int32
    property sample_mask : UInt64
    def initialize(@invocation : UInt64, @x : Int32, @y : Int32, @sample_mask : UInt64)
    end
  end

  @[Extern]
  struct D3D11_COMPUTE_SHADER_TRACE_DESC
    property invocation : UInt64
    property thread_id_in_group : UInt32[3]
    property thread_group_id : UInt32[3]
    def initialize(@invocation : UInt64, @thread_id_in_group : UInt32[3], @thread_group_id : UInt32[3])
    end
  end

  @[Extern]
  struct D3D11_SHADER_TRACE_DESC
    property type__ : Win32cr::Graphics::Direct3D11::D3D11_SHADER_TYPE
    property flags : UInt32
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property vertex_shader_trace_desc : Win32cr::Graphics::Direct3D11::D3D11_VERTEX_SHADER_TRACE_DESC
    property hull_shader_trace_desc : Win32cr::Graphics::Direct3D11::D3D11_HULL_SHADER_TRACE_DESC
    property domain_shader_trace_desc : Win32cr::Graphics::Direct3D11::D3D11_DOMAIN_SHADER_TRACE_DESC
    property geometry_shader_trace_desc : Win32cr::Graphics::Direct3D11::D3D11_GEOMETRY_SHADER_TRACE_DESC
    property pixel_shader_trace_desc : Win32cr::Graphics::Direct3D11::D3D11_PIXEL_SHADER_TRACE_DESC
    property compute_shader_trace_desc : Win32cr::Graphics::Direct3D11::D3D11_COMPUTE_SHADER_TRACE_DESC
    def initialize(@vertex_shader_trace_desc : Win32cr::Graphics::Direct3D11::D3D11_VERTEX_SHADER_TRACE_DESC, @hull_shader_trace_desc : Win32cr::Graphics::Direct3D11::D3D11_HULL_SHADER_TRACE_DESC, @domain_shader_trace_desc : Win32cr::Graphics::Direct3D11::D3D11_DOMAIN_SHADER_TRACE_DESC, @geometry_shader_trace_desc : Win32cr::Graphics::Direct3D11::D3D11_GEOMETRY_SHADER_TRACE_DESC, @pixel_shader_trace_desc : Win32cr::Graphics::Direct3D11::D3D11_PIXEL_SHADER_TRACE_DESC, @compute_shader_trace_desc : Win32cr::Graphics::Direct3D11::D3D11_COMPUTE_SHADER_TRACE_DESC)
    end
    end

    def initialize(@type__ : Win32cr::Graphics::Direct3D11::D3D11_SHADER_TYPE, @flags : UInt32, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct D3D11_TRACE_STATS
    property trace_desc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_TRACE_DESC
    property num_invocations_in_stamp : UInt8
    property target_stamp_index : UInt8
    property num_trace_steps : UInt32
    property input_mask : UInt8[32]
    property output_mask : UInt8[32]
    property num_temps : UInt16
    property max_indexable_temp_index : UInt16
    property indexable_temp_size : UInt16[4096]
    property immediate_constant_buffer_size : UInt16
    property pixel_position : UInt32[8]
    property pixel_coverage_mask : UInt64[4]
    property pixel_discarded_mask : UInt64[4]
    property pixel_coverage_mask_after_shader : UInt64[4]
    property pixel_coverage_mask_after_a2_c_sample_mask : UInt64[4]
    property pixel_coverage_mask_after_a2_c_sample_mask_depth : UInt64[4]
    property pixel_coverage_mask_after_a2_c_sample_mask_depth_stencil : UInt64[4]
    property ps_outputs_depth : Win32cr::Foundation::BOOL
    property ps_outputs_mask : Win32cr::Foundation::BOOL
    property gs_input_primitive : Win32cr::Graphics::Direct3D11::D3D11_TRACE_GS_INPUT_PRIMITIVE
    property gs_inputs_primitive_id : Win32cr::Foundation::BOOL
    property hs_output_patch_constant_mask : UInt8[32]
    property ds_input_patch_constant_mask : UInt8[32]
    def initialize(@trace_desc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_TRACE_DESC, @num_invocations_in_stamp : UInt8, @target_stamp_index : UInt8, @num_trace_steps : UInt32, @input_mask : UInt8[32], @output_mask : UInt8[32], @num_temps : UInt16, @max_indexable_temp_index : UInt16, @indexable_temp_size : UInt16[4096], @immediate_constant_buffer_size : UInt16, @pixel_position : UInt32[8], @pixel_coverage_mask : UInt64[4], @pixel_discarded_mask : UInt64[4], @pixel_coverage_mask_after_shader : UInt64[4], @pixel_coverage_mask_after_a2_c_sample_mask : UInt64[4], @pixel_coverage_mask_after_a2_c_sample_mask_depth : UInt64[4], @pixel_coverage_mask_after_a2_c_sample_mask_depth_stencil : UInt64[4], @ps_outputs_depth : Win32cr::Foundation::BOOL, @ps_outputs_mask : Win32cr::Foundation::BOOL, @gs_input_primitive : Win32cr::Graphics::Direct3D11::D3D11_TRACE_GS_INPUT_PRIMITIVE, @gs_inputs_primitive_id : Win32cr::Foundation::BOOL, @hs_output_patch_constant_mask : UInt8[32], @ds_input_patch_constant_mask : UInt8[32])
    end
  end

  @[Extern]
  struct D3D11_TRACE_VALUE
    property bits : UInt32[4]
    property valid_mask : UInt8
    def initialize(@bits : UInt32[4], @valid_mask : UInt8)
    end
  end

  @[Extern]
  struct D3D11_TRACE_REGISTER
    property reg_type : Win32cr::Graphics::Direct3D11::D3D11_TRACE_REGISTER_TYPE
    property anonymous : Anonymous_e__Union_
    property operand_index : UInt8
    property flags : UInt8

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property index1_d : UInt16
    property index2_d : UInt16[2]
    def initialize(@index1_d : UInt16, @index2_d : UInt16[2])
    end
    end

    def initialize(@reg_type : Win32cr::Graphics::Direct3D11::D3D11_TRACE_REGISTER_TYPE, @anonymous : Anonymous_e__Union_, @operand_index : UInt8, @flags : UInt8)
    end
  end

  @[Extern]
  struct D3D11_TRACE_STEP
    property id : UInt32
    property instruction_active : Win32cr::Foundation::BOOL
    property num_registers_written : UInt8
    property num_registers_read : UInt8
    property misc_operations : UInt16
    property opcode_type : UInt32
    property current_global_cycle : UInt64
    def initialize(@id : UInt32, @instruction_active : Win32cr::Foundation::BOOL, @num_registers_written : UInt8, @num_registers_read : UInt8, @misc_operations : UInt16, @opcode_type : UInt32, @current_global_cycle : UInt64)
    end
  end

  @[Extern]
  struct D3DX11_FFT_DESC
    property num_dimensions : UInt32
    property element_lengths : UInt32[32]
    property dimension_mask : UInt32
    property type__ : Win32cr::Graphics::Direct3D11::D3DX11_FFT_DATA_TYPE
    def initialize(@num_dimensions : UInt32, @element_lengths : UInt32[32], @dimension_mask : UInt32, @type__ : Win32cr::Graphics::Direct3D11::D3DX11_FFT_DATA_TYPE)
    end
  end

  @[Extern]
  struct D3DX11_FFT_BUFFER_INFO
    property num_temp_buffer_sizes : UInt32
    property temp_buffer_float_sizes : UInt32[4]
    property num_precompute_buffer_sizes : UInt32
    property precompute_buffer_float_sizes : UInt32[4]
    def initialize(@num_temp_buffer_sizes : UInt32, @temp_buffer_float_sizes : UInt32[4], @num_precompute_buffer_sizes : UInt32, @precompute_buffer_float_sizes : UInt32[4])
    end
  end

  @[Extern]
  record ID3D11DeviceChildVtbl,
    query_interface : Proc(ID3D11DeviceChild*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11DeviceChild*, UInt32),
    release : Proc(ID3D11DeviceChild*, UInt32),
    get_device : Proc(ID3D11DeviceChild*, Void**, Void),
    get_private_data : Proc(ID3D11DeviceChild*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11DeviceChild*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11DeviceChild*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11DeviceChild, lpVtbl : ID3D11DeviceChildVtbl* do
    GUID = LibC::GUID.new(0x1841e5c8_u32, 0x16b0_u16, 0x489b_u16, StaticArray[0xbc_u8, 0xc8_u8, 0x44_u8, 0xcf_u8, 0xb0_u8, 0xd5_u8, 0xde_u8, 0xae_u8])
    def query_interface(this : ID3D11DeviceChild*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11DeviceChild*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11DeviceChild*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11DeviceChild*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11DeviceChild*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11DeviceChild*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11DeviceChild*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end

  end

  @[Extern]
  record ID3D11DepthStencilStateVtbl,
    query_interface : Proc(ID3D11DepthStencilState*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11DepthStencilState*, UInt32),
    release : Proc(ID3D11DepthStencilState*, UInt32),
    get_device : Proc(ID3D11DepthStencilState*, Void**, Void),
    get_private_data : Proc(ID3D11DepthStencilState*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11DepthStencilState*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11DepthStencilState*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_desc : Proc(ID3D11DepthStencilState*, Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_DESC*, Void)


  @[Extern]
  record ID3D11DepthStencilState, lpVtbl : ID3D11DepthStencilStateVtbl* do
    GUID = LibC::GUID.new(0x3823efb_u32, 0x8d8f_u16, 0x4e1c_u16, StaticArray[0x9a_u8, 0xa2_u8, 0xf6_u8, 0x4b_u8, 0xb2_u8, 0xcb_u8, 0xfd_u8, 0xf1_u8])
    def query_interface(this : ID3D11DepthStencilState*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11DepthStencilState*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11DepthStencilState*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11DepthStencilState*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11DepthStencilState*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11DepthStencilState*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11DepthStencilState*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_desc(this : ID3D11DepthStencilState*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11BlendStateVtbl,
    query_interface : Proc(ID3D11BlendState*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11BlendState*, UInt32),
    release : Proc(ID3D11BlendState*, UInt32),
    get_device : Proc(ID3D11BlendState*, Void**, Void),
    get_private_data : Proc(ID3D11BlendState*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11BlendState*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11BlendState*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_desc : Proc(ID3D11BlendState*, Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*, Void)


  @[Extern]
  record ID3D11BlendState, lpVtbl : ID3D11BlendStateVtbl* do
    GUID = LibC::GUID.new(0x75b68faa_u32, 0x347d_u16, 0x4159_u16, StaticArray[0x8f_u8, 0x45_u8, 0xa0_u8, 0x64_u8, 0xf_u8, 0x1_u8, 0xcd_u8, 0x9a_u8])
    def query_interface(this : ID3D11BlendState*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11BlendState*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11BlendState*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11BlendState*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11BlendState*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11BlendState*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11BlendState*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_desc(this : ID3D11BlendState*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11RasterizerStateVtbl,
    query_interface : Proc(ID3D11RasterizerState*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11RasterizerState*, UInt32),
    release : Proc(ID3D11RasterizerState*, UInt32),
    get_device : Proc(ID3D11RasterizerState*, Void**, Void),
    get_private_data : Proc(ID3D11RasterizerState*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11RasterizerState*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11RasterizerState*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_desc : Proc(ID3D11RasterizerState*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*, Void)


  @[Extern]
  record ID3D11RasterizerState, lpVtbl : ID3D11RasterizerStateVtbl* do
    GUID = LibC::GUID.new(0x9bb4ab81_u32, 0xab1a_u16, 0x4d8f_u16, StaticArray[0xb5_u8, 0x6_u8, 0xfc_u8, 0x4_u8, 0x20_u8, 0xb_u8, 0x6e_u8, 0xe7_u8])
    def query_interface(this : ID3D11RasterizerState*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11RasterizerState*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11RasterizerState*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11RasterizerState*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11RasterizerState*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11RasterizerState*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11RasterizerState*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_desc(this : ID3D11RasterizerState*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11ResourceVtbl,
    query_interface : Proc(ID3D11Resource*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Resource*, UInt32),
    release : Proc(ID3D11Resource*, UInt32),
    get_device : Proc(ID3D11Resource*, Void**, Void),
    get_private_data : Proc(ID3D11Resource*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Resource*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Resource*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_type : Proc(ID3D11Resource*, Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_DIMENSION*, Void),
    set_eviction_priority : Proc(ID3D11Resource*, UInt32, Void),
    get_eviction_priority : Proc(ID3D11Resource*, UInt32)


  @[Extern]
  record ID3D11Resource, lpVtbl : ID3D11ResourceVtbl* do
    GUID = LibC::GUID.new(0xdc8e63f3_u32, 0xd12b_u16, 0x4952_u16, StaticArray[0xb4_u8, 0x7b_u8, 0x5e_u8, 0x45_u8, 0x2_u8, 0x6a_u8, 0x86_u8, 0x2d_u8])
    def query_interface(this : ID3D11Resource*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Resource*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Resource*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11Resource*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11Resource*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Resource*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Resource*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_type(this : ID3D11Resource*, pResourceDimension : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_DIMENSION*) : Void
      @lpVtbl.try &.value.get_type.call(this, pResourceDimension)
    end
    def set_eviction_priority(this : ID3D11Resource*, eviction_priority : UInt32) : Void
      @lpVtbl.try &.value.set_eviction_priority.call(this, eviction_priority)
    end
    def get_eviction_priority(this : ID3D11Resource*) : UInt32
      @lpVtbl.try &.value.get_eviction_priority.call(this)
    end

  end

  @[Extern]
  record ID3D11BufferVtbl,
    query_interface : Proc(ID3D11Buffer*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Buffer*, UInt32),
    release : Proc(ID3D11Buffer*, UInt32),
    get_device : Proc(ID3D11Buffer*, Void**, Void),
    get_private_data : Proc(ID3D11Buffer*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Buffer*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Buffer*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_type : Proc(ID3D11Buffer*, Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_DIMENSION*, Void),
    set_eviction_priority : Proc(ID3D11Buffer*, UInt32, Void),
    get_eviction_priority : Proc(ID3D11Buffer*, UInt32),
    get_desc : Proc(ID3D11Buffer*, Win32cr::Graphics::Direct3D11::D3D11_BUFFER_DESC*, Void)


  @[Extern]
  record ID3D11Buffer, lpVtbl : ID3D11BufferVtbl* do
    GUID = LibC::GUID.new(0x48570b85_u32, 0xd1ee_u16, 0x4fcd_u16, StaticArray[0xa2_u8, 0x50_u8, 0xeb_u8, 0x35_u8, 0x7_u8, 0x22_u8, 0xb0_u8, 0x37_u8])
    def query_interface(this : ID3D11Buffer*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Buffer*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Buffer*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11Buffer*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11Buffer*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Buffer*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Buffer*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_type(this : ID3D11Buffer*, pResourceDimension : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_DIMENSION*) : Void
      @lpVtbl.try &.value.get_type.call(this, pResourceDimension)
    end
    def set_eviction_priority(this : ID3D11Buffer*, eviction_priority : UInt32) : Void
      @lpVtbl.try &.value.set_eviction_priority.call(this, eviction_priority)
    end
    def get_eviction_priority(this : ID3D11Buffer*) : UInt32
      @lpVtbl.try &.value.get_eviction_priority.call(this)
    end
    def get_desc(this : ID3D11Buffer*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11Texture1DVtbl,
    query_interface : Proc(ID3D11Texture1D*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Texture1D*, UInt32),
    release : Proc(ID3D11Texture1D*, UInt32),
    get_device : Proc(ID3D11Texture1D*, Void**, Void),
    get_private_data : Proc(ID3D11Texture1D*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Texture1D*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Texture1D*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_type : Proc(ID3D11Texture1D*, Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_DIMENSION*, Void),
    set_eviction_priority : Proc(ID3D11Texture1D*, UInt32, Void),
    get_eviction_priority : Proc(ID3D11Texture1D*, UInt32),
    get_desc : Proc(ID3D11Texture1D*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE1D_DESC*, Void)


  @[Extern]
  record ID3D11Texture1D, lpVtbl : ID3D11Texture1DVtbl* do
    GUID = LibC::GUID.new(0xf8fb5c27_u32, 0xc6b3_u16, 0x4f75_u16, StaticArray[0xa4_u8, 0xc8_u8, 0x43_u8, 0x9a_u8, 0xf2_u8, 0xef_u8, 0x56_u8, 0x4c_u8])
    def query_interface(this : ID3D11Texture1D*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Texture1D*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Texture1D*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11Texture1D*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11Texture1D*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Texture1D*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Texture1D*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_type(this : ID3D11Texture1D*, pResourceDimension : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_DIMENSION*) : Void
      @lpVtbl.try &.value.get_type.call(this, pResourceDimension)
    end
    def set_eviction_priority(this : ID3D11Texture1D*, eviction_priority : UInt32) : Void
      @lpVtbl.try &.value.set_eviction_priority.call(this, eviction_priority)
    end
    def get_eviction_priority(this : ID3D11Texture1D*) : UInt32
      @lpVtbl.try &.value.get_eviction_priority.call(this)
    end
    def get_desc(this : ID3D11Texture1D*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE1D_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11Texture2DVtbl,
    query_interface : Proc(ID3D11Texture2D*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Texture2D*, UInt32),
    release : Proc(ID3D11Texture2D*, UInt32),
    get_device : Proc(ID3D11Texture2D*, Void**, Void),
    get_private_data : Proc(ID3D11Texture2D*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Texture2D*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Texture2D*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_type : Proc(ID3D11Texture2D*, Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_DIMENSION*, Void),
    set_eviction_priority : Proc(ID3D11Texture2D*, UInt32, Void),
    get_eviction_priority : Proc(ID3D11Texture2D*, UInt32),
    get_desc : Proc(ID3D11Texture2D*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*, Void)


  @[Extern]
  record ID3D11Texture2D, lpVtbl : ID3D11Texture2DVtbl* do
    GUID = LibC::GUID.new(0x6f15aaf2_u32, 0xd208_u16, 0x4e89_u16, StaticArray[0x9a_u8, 0xb4_u8, 0x48_u8, 0x95_u8, 0x35_u8, 0xd3_u8, 0x4f_u8, 0x9c_u8])
    def query_interface(this : ID3D11Texture2D*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Texture2D*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Texture2D*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11Texture2D*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11Texture2D*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Texture2D*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Texture2D*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_type(this : ID3D11Texture2D*, pResourceDimension : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_DIMENSION*) : Void
      @lpVtbl.try &.value.get_type.call(this, pResourceDimension)
    end
    def set_eviction_priority(this : ID3D11Texture2D*, eviction_priority : UInt32) : Void
      @lpVtbl.try &.value.set_eviction_priority.call(this, eviction_priority)
    end
    def get_eviction_priority(this : ID3D11Texture2D*) : UInt32
      @lpVtbl.try &.value.get_eviction_priority.call(this)
    end
    def get_desc(this : ID3D11Texture2D*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11Texture3DVtbl,
    query_interface : Proc(ID3D11Texture3D*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Texture3D*, UInt32),
    release : Proc(ID3D11Texture3D*, UInt32),
    get_device : Proc(ID3D11Texture3D*, Void**, Void),
    get_private_data : Proc(ID3D11Texture3D*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Texture3D*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Texture3D*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_type : Proc(ID3D11Texture3D*, Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_DIMENSION*, Void),
    set_eviction_priority : Proc(ID3D11Texture3D*, UInt32, Void),
    get_eviction_priority : Proc(ID3D11Texture3D*, UInt32),
    get_desc : Proc(ID3D11Texture3D*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*, Void)


  @[Extern]
  record ID3D11Texture3D, lpVtbl : ID3D11Texture3DVtbl* do
    GUID = LibC::GUID.new(0x37e866e_u32, 0xf56d_u16, 0x4357_u16, StaticArray[0xa8_u8, 0xaf_u8, 0x9d_u8, 0xab_u8, 0xbe_u8, 0x6e_u8, 0x25_u8, 0xe_u8])
    def query_interface(this : ID3D11Texture3D*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Texture3D*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Texture3D*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11Texture3D*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11Texture3D*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Texture3D*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Texture3D*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_type(this : ID3D11Texture3D*, pResourceDimension : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_DIMENSION*) : Void
      @lpVtbl.try &.value.get_type.call(this, pResourceDimension)
    end
    def set_eviction_priority(this : ID3D11Texture3D*, eviction_priority : UInt32) : Void
      @lpVtbl.try &.value.set_eviction_priority.call(this, eviction_priority)
    end
    def get_eviction_priority(this : ID3D11Texture3D*) : UInt32
      @lpVtbl.try &.value.get_eviction_priority.call(this)
    end
    def get_desc(this : ID3D11Texture3D*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11ViewVtbl,
    query_interface : Proc(ID3D11View*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11View*, UInt32),
    release : Proc(ID3D11View*, UInt32),
    get_device : Proc(ID3D11View*, Void**, Void),
    get_private_data : Proc(ID3D11View*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11View*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11View*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_resource : Proc(ID3D11View*, Void**, Void)


  @[Extern]
  record ID3D11View, lpVtbl : ID3D11ViewVtbl* do
    GUID = LibC::GUID.new(0x839d1216_u32, 0xbb2e_u16, 0x412b_u16, StaticArray[0xb7_u8, 0xf4_u8, 0xa9_u8, 0xdb_u8, 0xeb_u8, 0xe0_u8, 0x8e_u8, 0xd1_u8])
    def query_interface(this : ID3D11View*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11View*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11View*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11View*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11View*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11View*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11View*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_resource(this : ID3D11View*, ppResource : Void**) : Void
      @lpVtbl.try &.value.get_resource.call(this, ppResource)
    end

  end

  @[Extern]
  record ID3D11ShaderResourceViewVtbl,
    query_interface : Proc(ID3D11ShaderResourceView*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11ShaderResourceView*, UInt32),
    release : Proc(ID3D11ShaderResourceView*, UInt32),
    get_device : Proc(ID3D11ShaderResourceView*, Void**, Void),
    get_private_data : Proc(ID3D11ShaderResourceView*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11ShaderResourceView*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11ShaderResourceView*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_resource : Proc(ID3D11ShaderResourceView*, Void**, Void),
    get_desc : Proc(ID3D11ShaderResourceView*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*, Void)


  @[Extern]
  record ID3D11ShaderResourceView, lpVtbl : ID3D11ShaderResourceViewVtbl* do
    GUID = LibC::GUID.new(0xb0e06fe0_u32, 0x8192_u16, 0x4e1a_u16, StaticArray[0xb1_u8, 0xca_u8, 0x36_u8, 0xd7_u8, 0x41_u8, 0x47_u8, 0x10_u8, 0xb2_u8])
    def query_interface(this : ID3D11ShaderResourceView*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11ShaderResourceView*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11ShaderResourceView*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11ShaderResourceView*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11ShaderResourceView*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11ShaderResourceView*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11ShaderResourceView*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_resource(this : ID3D11ShaderResourceView*, ppResource : Void**) : Void
      @lpVtbl.try &.value.get_resource.call(this, ppResource)
    end
    def get_desc(this : ID3D11ShaderResourceView*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11RenderTargetViewVtbl,
    query_interface : Proc(ID3D11RenderTargetView*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11RenderTargetView*, UInt32),
    release : Proc(ID3D11RenderTargetView*, UInt32),
    get_device : Proc(ID3D11RenderTargetView*, Void**, Void),
    get_private_data : Proc(ID3D11RenderTargetView*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11RenderTargetView*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11RenderTargetView*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_resource : Proc(ID3D11RenderTargetView*, Void**, Void),
    get_desc : Proc(ID3D11RenderTargetView*, Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*, Void)


  @[Extern]
  record ID3D11RenderTargetView, lpVtbl : ID3D11RenderTargetViewVtbl* do
    GUID = LibC::GUID.new(0xdfdba067_u32, 0xb8d_u16, 0x4865_u16, StaticArray[0x87_u8, 0x5b_u8, 0xd7_u8, 0xb4_u8, 0x51_u8, 0x6c_u8, 0xc1_u8, 0x64_u8])
    def query_interface(this : ID3D11RenderTargetView*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11RenderTargetView*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11RenderTargetView*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11RenderTargetView*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11RenderTargetView*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11RenderTargetView*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11RenderTargetView*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_resource(this : ID3D11RenderTargetView*, ppResource : Void**) : Void
      @lpVtbl.try &.value.get_resource.call(this, ppResource)
    end
    def get_desc(this : ID3D11RenderTargetView*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11DepthStencilViewVtbl,
    query_interface : Proc(ID3D11DepthStencilView*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11DepthStencilView*, UInt32),
    release : Proc(ID3D11DepthStencilView*, UInt32),
    get_device : Proc(ID3D11DepthStencilView*, Void**, Void),
    get_private_data : Proc(ID3D11DepthStencilView*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11DepthStencilView*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11DepthStencilView*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_resource : Proc(ID3D11DepthStencilView*, Void**, Void),
    get_desc : Proc(ID3D11DepthStencilView*, Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_VIEW_DESC*, Void)


  @[Extern]
  record ID3D11DepthStencilView, lpVtbl : ID3D11DepthStencilViewVtbl* do
    GUID = LibC::GUID.new(0x9fdac92a_u32, 0x1876_u16, 0x48c3_u16, StaticArray[0xaf_u8, 0xad_u8, 0x25_u8, 0xb9_u8, 0x4f_u8, 0x84_u8, 0xa9_u8, 0xb6_u8])
    def query_interface(this : ID3D11DepthStencilView*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11DepthStencilView*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11DepthStencilView*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11DepthStencilView*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11DepthStencilView*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11DepthStencilView*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11DepthStencilView*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_resource(this : ID3D11DepthStencilView*, ppResource : Void**) : Void
      @lpVtbl.try &.value.get_resource.call(this, ppResource)
    end
    def get_desc(this : ID3D11DepthStencilView*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_VIEW_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11UnorderedAccessViewVtbl,
    query_interface : Proc(ID3D11UnorderedAccessView*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11UnorderedAccessView*, UInt32),
    release : Proc(ID3D11UnorderedAccessView*, UInt32),
    get_device : Proc(ID3D11UnorderedAccessView*, Void**, Void),
    get_private_data : Proc(ID3D11UnorderedAccessView*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11UnorderedAccessView*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11UnorderedAccessView*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_resource : Proc(ID3D11UnorderedAccessView*, Void**, Void),
    get_desc : Proc(ID3D11UnorderedAccessView*, Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*, Void)


  @[Extern]
  record ID3D11UnorderedAccessView, lpVtbl : ID3D11UnorderedAccessViewVtbl* do
    GUID = LibC::GUID.new(0x28acf509_u32, 0x7f5c_u16, 0x48f6_u16, StaticArray[0x86_u8, 0x11_u8, 0xf3_u8, 0x16_u8, 0x1_u8, 0xa_u8, 0x63_u8, 0x80_u8])
    def query_interface(this : ID3D11UnorderedAccessView*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11UnorderedAccessView*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11UnorderedAccessView*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11UnorderedAccessView*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11UnorderedAccessView*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11UnorderedAccessView*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11UnorderedAccessView*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_resource(this : ID3D11UnorderedAccessView*, ppResource : Void**) : Void
      @lpVtbl.try &.value.get_resource.call(this, ppResource)
    end
    def get_desc(this : ID3D11UnorderedAccessView*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11VertexShaderVtbl,
    query_interface : Proc(ID3D11VertexShader*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11VertexShader*, UInt32),
    release : Proc(ID3D11VertexShader*, UInt32),
    get_device : Proc(ID3D11VertexShader*, Void**, Void),
    get_private_data : Proc(ID3D11VertexShader*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11VertexShader*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11VertexShader*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11VertexShader, lpVtbl : ID3D11VertexShaderVtbl* do
    GUID = LibC::GUID.new(0x3b301d64_u32, 0xd678_u16, 0x4289_u16, StaticArray[0x88_u8, 0x97_u8, 0x22_u8, 0xf8_u8, 0x92_u8, 0x8b_u8, 0x72_u8, 0xf3_u8])
    def query_interface(this : ID3D11VertexShader*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11VertexShader*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11VertexShader*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11VertexShader*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11VertexShader*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11VertexShader*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11VertexShader*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end

  end

  @[Extern]
  record ID3D11HullShaderVtbl,
    query_interface : Proc(ID3D11HullShader*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11HullShader*, UInt32),
    release : Proc(ID3D11HullShader*, UInt32),
    get_device : Proc(ID3D11HullShader*, Void**, Void),
    get_private_data : Proc(ID3D11HullShader*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11HullShader*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11HullShader*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11HullShader, lpVtbl : ID3D11HullShaderVtbl* do
    GUID = LibC::GUID.new(0x8e5c6061_u32, 0x628a_u16, 0x4c8e_u16, StaticArray[0x82_u8, 0x64_u8, 0xbb_u8, 0xe4_u8, 0x5c_u8, 0xb3_u8, 0xd5_u8, 0xdd_u8])
    def query_interface(this : ID3D11HullShader*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11HullShader*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11HullShader*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11HullShader*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11HullShader*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11HullShader*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11HullShader*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end

  end

  @[Extern]
  record ID3D11DomainShaderVtbl,
    query_interface : Proc(ID3D11DomainShader*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11DomainShader*, UInt32),
    release : Proc(ID3D11DomainShader*, UInt32),
    get_device : Proc(ID3D11DomainShader*, Void**, Void),
    get_private_data : Proc(ID3D11DomainShader*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11DomainShader*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11DomainShader*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11DomainShader, lpVtbl : ID3D11DomainShaderVtbl* do
    GUID = LibC::GUID.new(0xf582c508_u32, 0xf36_u16, 0x490c_u16, StaticArray[0x99_u8, 0x77_u8, 0x31_u8, 0xee_u8, 0xce_u8, 0x26_u8, 0x8c_u8, 0xfa_u8])
    def query_interface(this : ID3D11DomainShader*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11DomainShader*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11DomainShader*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11DomainShader*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11DomainShader*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11DomainShader*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11DomainShader*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end

  end

  @[Extern]
  record ID3D11GeometryShaderVtbl,
    query_interface : Proc(ID3D11GeometryShader*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11GeometryShader*, UInt32),
    release : Proc(ID3D11GeometryShader*, UInt32),
    get_device : Proc(ID3D11GeometryShader*, Void**, Void),
    get_private_data : Proc(ID3D11GeometryShader*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11GeometryShader*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11GeometryShader*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11GeometryShader, lpVtbl : ID3D11GeometryShaderVtbl* do
    GUID = LibC::GUID.new(0x38325b96_u32, 0xeffb_u16, 0x4022_u16, StaticArray[0xba_u8, 0x2_u8, 0x2e_u8, 0x79_u8, 0x5b_u8, 0x70_u8, 0x27_u8, 0x5c_u8])
    def query_interface(this : ID3D11GeometryShader*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11GeometryShader*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11GeometryShader*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11GeometryShader*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11GeometryShader*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11GeometryShader*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11GeometryShader*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end

  end

  @[Extern]
  record ID3D11PixelShaderVtbl,
    query_interface : Proc(ID3D11PixelShader*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11PixelShader*, UInt32),
    release : Proc(ID3D11PixelShader*, UInt32),
    get_device : Proc(ID3D11PixelShader*, Void**, Void),
    get_private_data : Proc(ID3D11PixelShader*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11PixelShader*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11PixelShader*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11PixelShader, lpVtbl : ID3D11PixelShaderVtbl* do
    GUID = LibC::GUID.new(0xea82e40d_u32, 0x51dc_u16, 0x4f33_u16, StaticArray[0x93_u8, 0xd4_u8, 0xdb_u8, 0x7c_u8, 0x91_u8, 0x25_u8, 0xae_u8, 0x8c_u8])
    def query_interface(this : ID3D11PixelShader*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11PixelShader*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11PixelShader*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11PixelShader*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11PixelShader*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11PixelShader*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11PixelShader*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end

  end

  @[Extern]
  record ID3D11ComputeShaderVtbl,
    query_interface : Proc(ID3D11ComputeShader*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11ComputeShader*, UInt32),
    release : Proc(ID3D11ComputeShader*, UInt32),
    get_device : Proc(ID3D11ComputeShader*, Void**, Void),
    get_private_data : Proc(ID3D11ComputeShader*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11ComputeShader*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11ComputeShader*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11ComputeShader, lpVtbl : ID3D11ComputeShaderVtbl* do
    GUID = LibC::GUID.new(0x4f5b196e_u32, 0xc2bd_u16, 0x495e_u16, StaticArray[0xbd_u8, 0x1_u8, 0x1f_u8, 0xde_u8, 0xd3_u8, 0x8e_u8, 0x49_u8, 0x69_u8])
    def query_interface(this : ID3D11ComputeShader*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11ComputeShader*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11ComputeShader*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11ComputeShader*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11ComputeShader*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11ComputeShader*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11ComputeShader*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end

  end

  @[Extern]
  record ID3D11InputLayoutVtbl,
    query_interface : Proc(ID3D11InputLayout*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11InputLayout*, UInt32),
    release : Proc(ID3D11InputLayout*, UInt32),
    get_device : Proc(ID3D11InputLayout*, Void**, Void),
    get_private_data : Proc(ID3D11InputLayout*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11InputLayout*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11InputLayout*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11InputLayout, lpVtbl : ID3D11InputLayoutVtbl* do
    GUID = LibC::GUID.new(0xe4819ddc_u32, 0x4cf0_u16, 0x4025_u16, StaticArray[0xbd_u8, 0x26_u8, 0x5d_u8, 0xe8_u8, 0x2a_u8, 0x3e_u8, 0x7_u8, 0xb7_u8])
    def query_interface(this : ID3D11InputLayout*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11InputLayout*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11InputLayout*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11InputLayout*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11InputLayout*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11InputLayout*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11InputLayout*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end

  end

  @[Extern]
  record ID3D11SamplerStateVtbl,
    query_interface : Proc(ID3D11SamplerState*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11SamplerState*, UInt32),
    release : Proc(ID3D11SamplerState*, UInt32),
    get_device : Proc(ID3D11SamplerState*, Void**, Void),
    get_private_data : Proc(ID3D11SamplerState*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11SamplerState*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11SamplerState*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_desc : Proc(ID3D11SamplerState*, Win32cr::Graphics::Direct3D11::D3D11_SAMPLER_DESC*, Void)


  @[Extern]
  record ID3D11SamplerState, lpVtbl : ID3D11SamplerStateVtbl* do
    GUID = LibC::GUID.new(0xda6fea51_u32, 0x564c_u16, 0x4487_u16, StaticArray[0x98_u8, 0x10_u8, 0xf0_u8, 0xd0_u8, 0xf9_u8, 0xb4_u8, 0xe3_u8, 0xa5_u8])
    def query_interface(this : ID3D11SamplerState*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11SamplerState*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11SamplerState*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11SamplerState*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11SamplerState*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11SamplerState*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11SamplerState*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_desc(this : ID3D11SamplerState*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SAMPLER_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11AsynchronousVtbl,
    query_interface : Proc(ID3D11Asynchronous*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Asynchronous*, UInt32),
    release : Proc(ID3D11Asynchronous*, UInt32),
    get_device : Proc(ID3D11Asynchronous*, Void**, Void),
    get_private_data : Proc(ID3D11Asynchronous*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Asynchronous*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Asynchronous*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_data_size : Proc(ID3D11Asynchronous*, UInt32)


  @[Extern]
  record ID3D11Asynchronous, lpVtbl : ID3D11AsynchronousVtbl* do
    GUID = LibC::GUID.new(0x4b35d0cd_u32, 0x1e15_u16, 0x4258_u16, StaticArray[0x9c_u8, 0x98_u8, 0x1b_u8, 0x13_u8, 0x33_u8, 0xf6_u8, 0xdd_u8, 0x3b_u8])
    def query_interface(this : ID3D11Asynchronous*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Asynchronous*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Asynchronous*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11Asynchronous*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11Asynchronous*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Asynchronous*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Asynchronous*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_data_size(this : ID3D11Asynchronous*) : UInt32
      @lpVtbl.try &.value.get_data_size.call(this)
    end

  end

  @[Extern]
  record ID3D11QueryVtbl,
    query_interface : Proc(ID3D11Query*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Query*, UInt32),
    release : Proc(ID3D11Query*, UInt32),
    get_device : Proc(ID3D11Query*, Void**, Void),
    get_private_data : Proc(ID3D11Query*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Query*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Query*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_data_size : Proc(ID3D11Query*, UInt32),
    get_desc : Proc(ID3D11Query*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, Void)


  @[Extern]
  record ID3D11Query, lpVtbl : ID3D11QueryVtbl* do
    GUID = LibC::GUID.new(0xd6c00747_u32, 0x87b7_u16, 0x425e_u16, StaticArray[0xb8_u8, 0x4d_u8, 0x44_u8, 0xd1_u8, 0x8_u8, 0x56_u8, 0xa_u8, 0xfd_u8])
    def query_interface(this : ID3D11Query*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Query*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Query*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11Query*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11Query*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Query*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Query*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_data_size(this : ID3D11Query*) : UInt32
      @lpVtbl.try &.value.get_data_size.call(this)
    end
    def get_desc(this : ID3D11Query*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11PredicateVtbl,
    query_interface : Proc(ID3D11Predicate*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Predicate*, UInt32),
    release : Proc(ID3D11Predicate*, UInt32),
    get_device : Proc(ID3D11Predicate*, Void**, Void),
    get_private_data : Proc(ID3D11Predicate*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Predicate*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Predicate*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_data_size : Proc(ID3D11Predicate*, UInt32),
    get_desc : Proc(ID3D11Predicate*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, Void)


  @[Extern]
  record ID3D11Predicate, lpVtbl : ID3D11PredicateVtbl* do
    GUID = LibC::GUID.new(0x9eb576dd_u32, 0x9f77_u16, 0x4d86_u16, StaticArray[0x81_u8, 0xaa_u8, 0x8b_u8, 0xab_u8, 0x5f_u8, 0xe4_u8, 0x90_u8, 0xe2_u8])
    def query_interface(this : ID3D11Predicate*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Predicate*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Predicate*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11Predicate*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11Predicate*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Predicate*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Predicate*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_data_size(this : ID3D11Predicate*) : UInt32
      @lpVtbl.try &.value.get_data_size.call(this)
    end
    def get_desc(this : ID3D11Predicate*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11CounterVtbl,
    query_interface : Proc(ID3D11Counter*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Counter*, UInt32),
    release : Proc(ID3D11Counter*, UInt32),
    get_device : Proc(ID3D11Counter*, Void**, Void),
    get_private_data : Proc(ID3D11Counter*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Counter*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Counter*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_data_size : Proc(ID3D11Counter*, UInt32),
    get_desc : Proc(ID3D11Counter*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, Void)


  @[Extern]
  record ID3D11Counter, lpVtbl : ID3D11CounterVtbl* do
    GUID = LibC::GUID.new(0x6e8c49fb_u32, 0xa371_u16, 0x4770_u16, StaticArray[0xb4_u8, 0x40_u8, 0x29_u8, 0x8_u8, 0x60_u8, 0x22_u8, 0xb7_u8, 0x41_u8])
    def query_interface(this : ID3D11Counter*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Counter*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Counter*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11Counter*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11Counter*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Counter*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Counter*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_data_size(this : ID3D11Counter*) : UInt32
      @lpVtbl.try &.value.get_data_size.call(this)
    end
    def get_desc(this : ID3D11Counter*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11ClassInstanceVtbl,
    query_interface : Proc(ID3D11ClassInstance*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11ClassInstance*, UInt32),
    release : Proc(ID3D11ClassInstance*, UInt32),
    get_device : Proc(ID3D11ClassInstance*, Void**, Void),
    get_private_data : Proc(ID3D11ClassInstance*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11ClassInstance*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11ClassInstance*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_class_linkage : Proc(ID3D11ClassInstance*, Void**, Void),
    get_desc : Proc(ID3D11ClassInstance*, Win32cr::Graphics::Direct3D11::D3D11_CLASS_INSTANCE_DESC*, Void),
    get_instance_name : Proc(ID3D11ClassInstance*, UInt8*, LibC::UIntPtrT*, Void),
    get_type_name : Proc(ID3D11ClassInstance*, UInt8*, LibC::UIntPtrT*, Void)


  @[Extern]
  record ID3D11ClassInstance, lpVtbl : ID3D11ClassInstanceVtbl* do
    GUID = LibC::GUID.new(0xa6cd7faa_u32, 0xb0b7_u16, 0x4a2f_u16, StaticArray[0x94_u8, 0x36_u8, 0x86_u8, 0x62_u8, 0xa6_u8, 0x57_u8, 0x97_u8, 0xcb_u8])
    def query_interface(this : ID3D11ClassInstance*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11ClassInstance*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11ClassInstance*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11ClassInstance*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11ClassInstance*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11ClassInstance*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11ClassInstance*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_class_linkage(this : ID3D11ClassInstance*, ppLinkage : Void**) : Void
      @lpVtbl.try &.value.get_class_linkage.call(this, ppLinkage)
    end
    def get_desc(this : ID3D11ClassInstance*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_CLASS_INSTANCE_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_instance_name(this : ID3D11ClassInstance*, pInstanceName : UInt8*, pBufferLength : LibC::UIntPtrT*) : Void
      @lpVtbl.try &.value.get_instance_name.call(this, pInstanceName, pBufferLength)
    end
    def get_type_name(this : ID3D11ClassInstance*, pTypeName : UInt8*, pBufferLength : LibC::UIntPtrT*) : Void
      @lpVtbl.try &.value.get_type_name.call(this, pTypeName, pBufferLength)
    end

  end

  @[Extern]
  record ID3D11ClassLinkageVtbl,
    query_interface : Proc(ID3D11ClassLinkage*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11ClassLinkage*, UInt32),
    release : Proc(ID3D11ClassLinkage*, UInt32),
    get_device : Proc(ID3D11ClassLinkage*, Void**, Void),
    get_private_data : Proc(ID3D11ClassLinkage*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11ClassLinkage*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11ClassLinkage*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_class_instance : Proc(ID3D11ClassLinkage*, Win32cr::Foundation::PSTR, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_class_instance : Proc(ID3D11ClassLinkage*, Win32cr::Foundation::PSTR, UInt32, UInt32, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11ClassLinkage, lpVtbl : ID3D11ClassLinkageVtbl* do
    GUID = LibC::GUID.new(0xddf57cba_u32, 0x9543_u16, 0x46e4_u16, StaticArray[0xa1_u8, 0x2b_u8, 0xf2_u8, 0x7_u8, 0xa0_u8, 0xfe_u8, 0x7f_u8, 0xed_u8])
    def query_interface(this : ID3D11ClassLinkage*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11ClassLinkage*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11ClassLinkage*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11ClassLinkage*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11ClassLinkage*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11ClassLinkage*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11ClassLinkage*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_class_instance(this : ID3D11ClassLinkage*, pClassInstanceName : Win32cr::Foundation::PSTR, instance_index : UInt32, ppInstance : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_class_instance.call(this, pClassInstanceName, instance_index, ppInstance)
    end
    def create_class_instance(this : ID3D11ClassLinkage*, pClassTypeName : Win32cr::Foundation::PSTR, constant_buffer_offset : UInt32, constant_vector_offset : UInt32, texture_offset : UInt32, sampler_offset : UInt32, ppInstance : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_class_instance.call(this, pClassTypeName, constant_buffer_offset, constant_vector_offset, texture_offset, sampler_offset, ppInstance)
    end

  end

  @[Extern]
  record ID3D11CommandListVtbl,
    query_interface : Proc(ID3D11CommandList*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11CommandList*, UInt32),
    release : Proc(ID3D11CommandList*, UInt32),
    get_device : Proc(ID3D11CommandList*, Void**, Void),
    get_private_data : Proc(ID3D11CommandList*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11CommandList*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11CommandList*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_context_flags : Proc(ID3D11CommandList*, UInt32)


  @[Extern]
  record ID3D11CommandList, lpVtbl : ID3D11CommandListVtbl* do
    GUID = LibC::GUID.new(0xa24bc4d1_u32, 0x769e_u16, 0x43f7_u16, StaticArray[0x80_u8, 0x13_u8, 0x98_u8, 0xff_u8, 0x56_u8, 0x6c_u8, 0x18_u8, 0xe2_u8])
    def query_interface(this : ID3D11CommandList*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11CommandList*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11CommandList*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11CommandList*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11CommandList*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11CommandList*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11CommandList*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_context_flags(this : ID3D11CommandList*) : UInt32
      @lpVtbl.try &.value.get_context_flags.call(this)
    end

  end

  @[Extern]
  record ID3D11DeviceContextVtbl,
    query_interface : Proc(ID3D11DeviceContext*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11DeviceContext*, UInt32),
    release : Proc(ID3D11DeviceContext*, UInt32),
    get_device : Proc(ID3D11DeviceContext*, Void**, Void),
    get_private_data : Proc(ID3D11DeviceContext*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11DeviceContext*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11DeviceContext*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    vs_set_constant_buffers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    ps_set_shader_resources : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    ps_set_shader : Proc(ID3D11DeviceContext*, Void*, Void**, UInt32, Void),
    ps_set_samplers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    vs_set_shader : Proc(ID3D11DeviceContext*, Void*, Void**, UInt32, Void),
    draw_indexed : Proc(ID3D11DeviceContext*, UInt32, UInt32, Int32, Void),
    draw : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void),
    map : Proc(ID3D11DeviceContext*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_MAP, UInt32, Win32cr::Graphics::Direct3D11::D3D11_MAPPED_SUBRESOURCE*, Win32cr::Foundation::HRESULT),
    unmap : Proc(ID3D11DeviceContext*, Void*, UInt32, Void),
    ps_set_constant_buffers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    ia_set_input_layout : Proc(ID3D11DeviceContext*, Void*, Void),
    ia_set_vertex_buffers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ia_set_index_buffer : Proc(ID3D11DeviceContext*, Void*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, Void),
    draw_indexed_instanced : Proc(ID3D11DeviceContext*, UInt32, UInt32, UInt32, Int32, UInt32, Void),
    draw_instanced : Proc(ID3D11DeviceContext*, UInt32, UInt32, UInt32, UInt32, Void),
    gs_set_constant_buffers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    gs_set_shader : Proc(ID3D11DeviceContext*, Void*, Void**, UInt32, Void),
    ia_set_primitive_topology : Proc(ID3D11DeviceContext*, Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY, Void),
    vs_set_shader_resources : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    vs_set_samplers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    begin__ : Proc(ID3D11DeviceContext*, Void*, Void),
    end__ : Proc(ID3D11DeviceContext*, Void*, Void),
    get_data : Proc(ID3D11DeviceContext*, Void*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    set_predication : Proc(ID3D11DeviceContext*, Void*, Win32cr::Foundation::BOOL, Void),
    gs_set_shader_resources : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    gs_set_samplers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    om_set_render_targets : Proc(ID3D11DeviceContext*, UInt32, Void**, Void*, Void),
    om_set_render_targets_and_unordered_access_views : Proc(ID3D11DeviceContext*, UInt32, Void**, Void*, UInt32, UInt32, Void**, UInt32*, Void),
    om_set_blend_state : Proc(ID3D11DeviceContext*, Void*, Float32*, UInt32, Void),
    om_set_depth_stencil_state : Proc(ID3D11DeviceContext*, Void*, UInt32, Void),
    so_set_targets : Proc(ID3D11DeviceContext*, UInt32, Void**, UInt32*, Void),
    draw_auto : Proc(ID3D11DeviceContext*, Void),
    draw_indexed_instanced_indirect : Proc(ID3D11DeviceContext*, Void*, UInt32, Void),
    draw_instanced_indirect : Proc(ID3D11DeviceContext*, Void*, UInt32, Void),
    dispatch : Proc(ID3D11DeviceContext*, UInt32, UInt32, UInt32, Void),
    dispatch_indirect : Proc(ID3D11DeviceContext*, Void*, UInt32, Void),
    rs_set_state : Proc(ID3D11DeviceContext*, Void*, Void),
    rs_set_viewports : Proc(ID3D11DeviceContext*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*, Void),
    rs_set_scissor_rects : Proc(ID3D11DeviceContext*, UInt32, Win32cr::Foundation::RECT*, Void),
    copy_subresource_region : Proc(ID3D11DeviceContext*, Void*, UInt32, UInt32, UInt32, UInt32, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void),
    copy_resource : Proc(ID3D11DeviceContext*, Void*, Void*, Void),
    update_subresource : Proc(ID3D11DeviceContext*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void*, UInt32, UInt32, Void),
    copy_structure_count : Proc(ID3D11DeviceContext*, Void*, UInt32, Void*, Void),
    clear_render_target_view : Proc(ID3D11DeviceContext*, Void*, Float32*, Void),
    clear_unordered_access_view_uint : Proc(ID3D11DeviceContext*, Void*, UInt32*, Void),
    clear_unordered_access_view_float : Proc(ID3D11DeviceContext*, Void*, Float32*, Void),
    clear_depth_stencil_view : Proc(ID3D11DeviceContext*, Void*, UInt32, Float32, UInt8, Void),
    generate_mips : Proc(ID3D11DeviceContext*, Void*, Void),
    set_resource_min_lod : Proc(ID3D11DeviceContext*, Void*, Float32, Void),
    get_resource_min_lod : Proc(ID3D11DeviceContext*, Void*, Float32),
    resolve_subresource : Proc(ID3D11DeviceContext*, Void*, UInt32, Void*, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, Void),
    execute_command_list : Proc(ID3D11DeviceContext*, Void*, Win32cr::Foundation::BOOL, Void),
    hs_set_shader_resources : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    hs_set_shader : Proc(ID3D11DeviceContext*, Void*, Void**, UInt32, Void),
    hs_set_samplers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    hs_set_constant_buffers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    ds_set_shader_resources : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    ds_set_shader : Proc(ID3D11DeviceContext*, Void*, Void**, UInt32, Void),
    ds_set_samplers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    ds_set_constant_buffers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    cs_set_shader_resources : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    cs_set_unordered_access_views : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, UInt32*, Void),
    cs_set_shader : Proc(ID3D11DeviceContext*, Void*, Void**, UInt32, Void),
    cs_set_samplers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    cs_set_constant_buffers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    vs_get_constant_buffers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    ps_get_shader_resources : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    ps_get_shader : Proc(ID3D11DeviceContext*, Void**, Void**, UInt32*, Void),
    ps_get_samplers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    vs_get_shader : Proc(ID3D11DeviceContext*, Void**, Void**, UInt32*, Void),
    ps_get_constant_buffers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    ia_get_input_layout : Proc(ID3D11DeviceContext*, Void**, Void),
    ia_get_vertex_buffers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ia_get_index_buffer : Proc(ID3D11DeviceContext*, Void**, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT*, UInt32*, Void),
    gs_get_constant_buffers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    gs_get_shader : Proc(ID3D11DeviceContext*, Void**, Void**, UInt32*, Void),
    ia_get_primitive_topology : Proc(ID3D11DeviceContext*, Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY*, Void),
    vs_get_shader_resources : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    vs_get_samplers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    get_predication : Proc(ID3D11DeviceContext*, Void**, Win32cr::Foundation::BOOL*, Void),
    gs_get_shader_resources : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    gs_get_samplers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    om_get_render_targets : Proc(ID3D11DeviceContext*, UInt32, Void**, Void**, Void),
    om_get_render_targets_and_unordered_access_views : Proc(ID3D11DeviceContext*, UInt32, Void**, Void**, UInt32, UInt32, Void**, Void),
    om_get_blend_state : Proc(ID3D11DeviceContext*, Void**, Float32*, UInt32*, Void),
    om_get_depth_stencil_state : Proc(ID3D11DeviceContext*, Void**, UInt32*, Void),
    so_get_targets : Proc(ID3D11DeviceContext*, UInt32, Void**, Void),
    rs_get_state : Proc(ID3D11DeviceContext*, Void**, Void),
    rs_get_viewports : Proc(ID3D11DeviceContext*, UInt32*, Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*, Void),
    rs_get_scissor_rects : Proc(ID3D11DeviceContext*, UInt32*, Win32cr::Foundation::RECT*, Void),
    hs_get_shader_resources : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    hs_get_shader : Proc(ID3D11DeviceContext*, Void**, Void**, UInt32*, Void),
    hs_get_samplers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    hs_get_constant_buffers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    ds_get_shader_resources : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    ds_get_shader : Proc(ID3D11DeviceContext*, Void**, Void**, UInt32*, Void),
    ds_get_samplers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    ds_get_constant_buffers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    cs_get_shader_resources : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    cs_get_unordered_access_views : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    cs_get_shader : Proc(ID3D11DeviceContext*, Void**, Void**, UInt32*, Void),
    cs_get_samplers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    cs_get_constant_buffers : Proc(ID3D11DeviceContext*, UInt32, UInt32, Void**, Void),
    clear_state : Proc(ID3D11DeviceContext*, Void),
    flush : Proc(ID3D11DeviceContext*, Void),
    get_type : Proc(ID3D11DeviceContext*, Win32cr::Graphics::Direct3D11::D3D11_DEVICE_CONTEXT_TYPE),
    get_context_flags : Proc(ID3D11DeviceContext*, UInt32),
    finish_command_list : Proc(ID3D11DeviceContext*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11DeviceContext, lpVtbl : ID3D11DeviceContextVtbl* do
    GUID = LibC::GUID.new(0xc0bfa96c_u32, 0xe089_u16, 0x44fb_u16, StaticArray[0x8e_u8, 0xaf_u8, 0x26_u8, 0xf8_u8, 0x79_u8, 0x61_u8, 0x90_u8, 0xda_u8])
    def query_interface(this : ID3D11DeviceContext*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11DeviceContext*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11DeviceContext*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11DeviceContext*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11DeviceContext*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11DeviceContext*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11DeviceContext*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def vs_set_constant_buffers(this : ID3D11DeviceContext*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.vs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ps_set_shader_resources(this : ID3D11DeviceContext*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ps_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ps_set_shader(this : ID3D11DeviceContext*, pPixelShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.ps_set_shader.call(this, pPixelShader, ppClassInstances, num_class_instances)
    end
    def ps_set_samplers(this : ID3D11DeviceContext*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ps_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def vs_set_shader(this : ID3D11DeviceContext*, pVertexShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.vs_set_shader.call(this, pVertexShader, ppClassInstances, num_class_instances)
    end
    def draw_indexed(this : ID3D11DeviceContext*, index_count : UInt32, start_index_location : UInt32, base_vertex_location : Int32) : Void
      @lpVtbl.try &.value.draw_indexed.call(this, index_count, start_index_location, base_vertex_location)
    end
    def draw(this : ID3D11DeviceContext*, vertex_count : UInt32, start_vertex_location : UInt32) : Void
      @lpVtbl.try &.value.draw.call(this, vertex_count, start_vertex_location)
    end
    def map(this : ID3D11DeviceContext*, pResource : Void*, subresource : UInt32, map_type : Win32cr::Graphics::Direct3D11::D3D11_MAP, map_flags : UInt32, pMappedResource : Win32cr::Graphics::Direct3D11::D3D11_MAPPED_SUBRESOURCE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.map.call(this, pResource, subresource, map_type, map_flags, pMappedResource)
    end
    def unmap(this : ID3D11DeviceContext*, pResource : Void*, subresource : UInt32) : Void
      @lpVtbl.try &.value.unmap.call(this, pResource, subresource)
    end
    def ps_set_constant_buffers(this : ID3D11DeviceContext*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ps_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ia_set_input_layout(this : ID3D11DeviceContext*, pInputLayout : Void*) : Void
      @lpVtbl.try &.value.ia_set_input_layout.call(this, pInputLayout)
    end
    def ia_set_vertex_buffers(this : ID3D11DeviceContext*, start_slot : UInt32, num_buffers : UInt32, ppVertexBuffers : Void**, pStrides : UInt32*, pOffsets : UInt32*) : Void
      @lpVtbl.try &.value.ia_set_vertex_buffers.call(this, start_slot, num_buffers, ppVertexBuffers, pStrides, pOffsets)
    end
    def ia_set_index_buffer(this : ID3D11DeviceContext*, pIndexBuffer : Void*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, offset : UInt32) : Void
      @lpVtbl.try &.value.ia_set_index_buffer.call(this, pIndexBuffer, format, offset)
    end
    def draw_indexed_instanced(this : ID3D11DeviceContext*, index_count_per_instance : UInt32, instance_count : UInt32, start_index_location : UInt32, base_vertex_location : Int32, start_instance_location : UInt32) : Void
      @lpVtbl.try &.value.draw_indexed_instanced.call(this, index_count_per_instance, instance_count, start_index_location, base_vertex_location, start_instance_location)
    end
    def draw_instanced(this : ID3D11DeviceContext*, vertex_count_per_instance : UInt32, instance_count : UInt32, start_vertex_location : UInt32, start_instance_location : UInt32) : Void
      @lpVtbl.try &.value.draw_instanced.call(this, vertex_count_per_instance, instance_count, start_vertex_location, start_instance_location)
    end
    def gs_set_constant_buffers(this : ID3D11DeviceContext*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.gs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def gs_set_shader(this : ID3D11DeviceContext*, pShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.gs_set_shader.call(this, pShader, ppClassInstances, num_class_instances)
    end
    def ia_set_primitive_topology(this : ID3D11DeviceContext*, topology : Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY) : Void
      @lpVtbl.try &.value.ia_set_primitive_topology.call(this, topology)
    end
    def vs_set_shader_resources(this : ID3D11DeviceContext*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.vs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def vs_set_samplers(this : ID3D11DeviceContext*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.vs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def begin__(this : ID3D11DeviceContext*, pAsync : Void*) : Void
      @lpVtbl.try &.value.begin__.call(this, pAsync)
    end
    def end__(this : ID3D11DeviceContext*, pAsync : Void*) : Void
      @lpVtbl.try &.value.end__.call(this, pAsync)
    end
    def get_data(this : ID3D11DeviceContext*, pAsync : Void*, pData : Void*, data_size : UInt32, get_data_flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_data.call(this, pAsync, pData, data_size, get_data_flags)
    end
    def set_predication(this : ID3D11DeviceContext*, pPredicate : Void*, predicate_value : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.set_predication.call(this, pPredicate, predicate_value)
    end
    def gs_set_shader_resources(this : ID3D11DeviceContext*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.gs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def gs_set_samplers(this : ID3D11DeviceContext*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.gs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def om_set_render_targets(this : ID3D11DeviceContext*, num_views : UInt32, ppRenderTargetViews : Void**, pDepthStencilView : Void*) : Void
      @lpVtbl.try &.value.om_set_render_targets.call(this, num_views, ppRenderTargetViews, pDepthStencilView)
    end
    def om_set_render_targets_and_unordered_access_views(this : ID3D11DeviceContext*, num_rt_vs : UInt32, ppRenderTargetViews : Void**, pDepthStencilView : Void*, uav_start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**, pUAVInitialCounts : UInt32*) : Void
      @lpVtbl.try &.value.om_set_render_targets_and_unordered_access_views.call(this, num_rt_vs, ppRenderTargetViews, pDepthStencilView, uav_start_slot, num_ua_vs, ppUnorderedAccessViews, pUAVInitialCounts)
    end
    def om_set_blend_state(this : ID3D11DeviceContext*, pBlendState : Void*, blend_factor : Float32*, sample_mask : UInt32) : Void
      @lpVtbl.try &.value.om_set_blend_state.call(this, pBlendState, blend_factor, sample_mask)
    end
    def om_set_depth_stencil_state(this : ID3D11DeviceContext*, pDepthStencilState : Void*, stencil_ref : UInt32) : Void
      @lpVtbl.try &.value.om_set_depth_stencil_state.call(this, pDepthStencilState, stencil_ref)
    end
    def so_set_targets(this : ID3D11DeviceContext*, num_buffers : UInt32, ppSOTargets : Void**, pOffsets : UInt32*) : Void
      @lpVtbl.try &.value.so_set_targets.call(this, num_buffers, ppSOTargets, pOffsets)
    end
    def draw_auto(this : ID3D11DeviceContext*) : Void
      @lpVtbl.try &.value.draw_auto.call(this)
    end
    def draw_indexed_instanced_indirect(this : ID3D11DeviceContext*, pBufferForArgs : Void*, aligned_byte_offset_for_args : UInt32) : Void
      @lpVtbl.try &.value.draw_indexed_instanced_indirect.call(this, pBufferForArgs, aligned_byte_offset_for_args)
    end
    def draw_instanced_indirect(this : ID3D11DeviceContext*, pBufferForArgs : Void*, aligned_byte_offset_for_args : UInt32) : Void
      @lpVtbl.try &.value.draw_instanced_indirect.call(this, pBufferForArgs, aligned_byte_offset_for_args)
    end
    def dispatch(this : ID3D11DeviceContext*, thread_group_count_x : UInt32, thread_group_count_y : UInt32, thread_group_count_z : UInt32) : Void
      @lpVtbl.try &.value.dispatch.call(this, thread_group_count_x, thread_group_count_y, thread_group_count_z)
    end
    def dispatch_indirect(this : ID3D11DeviceContext*, pBufferForArgs : Void*, aligned_byte_offset_for_args : UInt32) : Void
      @lpVtbl.try &.value.dispatch_indirect.call(this, pBufferForArgs, aligned_byte_offset_for_args)
    end
    def rs_set_state(this : ID3D11DeviceContext*, pRasterizerState : Void*) : Void
      @lpVtbl.try &.value.rs_set_state.call(this, pRasterizerState)
    end
    def rs_set_viewports(this : ID3D11DeviceContext*, num_viewports : UInt32, pViewports : Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*) : Void
      @lpVtbl.try &.value.rs_set_viewports.call(this, num_viewports, pViewports)
    end
    def rs_set_scissor_rects(this : ID3D11DeviceContext*, num_rects : UInt32, pRects : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.rs_set_scissor_rects.call(this, num_rects, pRects)
    end
    def copy_subresource_region(this : ID3D11DeviceContext*, pDstResource : Void*, dst_subresource : UInt32, dst_x : UInt32, dst_y : UInt32, dst_z : UInt32, pSrcResource : Void*, src_subresource : UInt32, pSrcBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*) : Void
      @lpVtbl.try &.value.copy_subresource_region.call(this, pDstResource, dst_subresource, dst_x, dst_y, dst_z, pSrcResource, src_subresource, pSrcBox)
    end
    def copy_resource(this : ID3D11DeviceContext*, pDstResource : Void*, pSrcResource : Void*) : Void
      @lpVtbl.try &.value.copy_resource.call(this, pDstResource, pSrcResource)
    end
    def update_subresource(this : ID3D11DeviceContext*, pDstResource : Void*, dst_subresource : UInt32, pDstBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, pSrcData : Void*, src_row_pitch : UInt32, src_depth_pitch : UInt32) : Void
      @lpVtbl.try &.value.update_subresource.call(this, pDstResource, dst_subresource, pDstBox, pSrcData, src_row_pitch, src_depth_pitch)
    end
    def copy_structure_count(this : ID3D11DeviceContext*, pDstBuffer : Void*, dst_aligned_byte_offset : UInt32, pSrcView : Void*) : Void
      @lpVtbl.try &.value.copy_structure_count.call(this, pDstBuffer, dst_aligned_byte_offset, pSrcView)
    end
    def clear_render_target_view(this : ID3D11DeviceContext*, pRenderTargetView : Void*, color_rgba : Float32*) : Void
      @lpVtbl.try &.value.clear_render_target_view.call(this, pRenderTargetView, color_rgba)
    end
    def clear_unordered_access_view_uint(this : ID3D11DeviceContext*, pUnorderedAccessView : Void*, values : UInt32*) : Void
      @lpVtbl.try &.value.clear_unordered_access_view_uint.call(this, pUnorderedAccessView, values)
    end
    def clear_unordered_access_view_float(this : ID3D11DeviceContext*, pUnorderedAccessView : Void*, values : Float32*) : Void
      @lpVtbl.try &.value.clear_unordered_access_view_float.call(this, pUnorderedAccessView, values)
    end
    def clear_depth_stencil_view(this : ID3D11DeviceContext*, pDepthStencilView : Void*, clear_flags : UInt32, depth : Float32, stencil : UInt8) : Void
      @lpVtbl.try &.value.clear_depth_stencil_view.call(this, pDepthStencilView, clear_flags, depth, stencil)
    end
    def generate_mips(this : ID3D11DeviceContext*, pShaderResourceView : Void*) : Void
      @lpVtbl.try &.value.generate_mips.call(this, pShaderResourceView)
    end
    def set_resource_min_lod(this : ID3D11DeviceContext*, pResource : Void*, min_lod : Float32) : Void
      @lpVtbl.try &.value.set_resource_min_lod.call(this, pResource, min_lod)
    end
    def get_resource_min_lod(this : ID3D11DeviceContext*, pResource : Void*) : Float32
      @lpVtbl.try &.value.get_resource_min_lod.call(this, pResource)
    end
    def resolve_subresource(this : ID3D11DeviceContext*, pDstResource : Void*, dst_subresource : UInt32, pSrcResource : Void*, src_subresource : UInt32, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT) : Void
      @lpVtbl.try &.value.resolve_subresource.call(this, pDstResource, dst_subresource, pSrcResource, src_subresource, format)
    end
    def execute_command_list(this : ID3D11DeviceContext*, pCommandList : Void*, restore_context_state : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.execute_command_list.call(this, pCommandList, restore_context_state)
    end
    def hs_set_shader_resources(this : ID3D11DeviceContext*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.hs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def hs_set_shader(this : ID3D11DeviceContext*, pHullShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.hs_set_shader.call(this, pHullShader, ppClassInstances, num_class_instances)
    end
    def hs_set_samplers(this : ID3D11DeviceContext*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.hs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def hs_set_constant_buffers(this : ID3D11DeviceContext*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.hs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ds_set_shader_resources(this : ID3D11DeviceContext*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ds_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ds_set_shader(this : ID3D11DeviceContext*, pDomainShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.ds_set_shader.call(this, pDomainShader, ppClassInstances, num_class_instances)
    end
    def ds_set_samplers(this : ID3D11DeviceContext*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ds_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def ds_set_constant_buffers(this : ID3D11DeviceContext*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ds_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def cs_set_shader_resources(this : ID3D11DeviceContext*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.cs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def cs_set_unordered_access_views(this : ID3D11DeviceContext*, start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**, pUAVInitialCounts : UInt32*) : Void
      @lpVtbl.try &.value.cs_set_unordered_access_views.call(this, start_slot, num_ua_vs, ppUnorderedAccessViews, pUAVInitialCounts)
    end
    def cs_set_shader(this : ID3D11DeviceContext*, pComputeShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.cs_set_shader.call(this, pComputeShader, ppClassInstances, num_class_instances)
    end
    def cs_set_samplers(this : ID3D11DeviceContext*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.cs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def cs_set_constant_buffers(this : ID3D11DeviceContext*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.cs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def vs_get_constant_buffers(this : ID3D11DeviceContext*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.vs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ps_get_shader_resources(this : ID3D11DeviceContext*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ps_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ps_get_shader(this : ID3D11DeviceContext*, ppPixelShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.ps_get_shader.call(this, ppPixelShader, ppClassInstances, pNumClassInstances)
    end
    def ps_get_samplers(this : ID3D11DeviceContext*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ps_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def vs_get_shader(this : ID3D11DeviceContext*, ppVertexShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.vs_get_shader.call(this, ppVertexShader, ppClassInstances, pNumClassInstances)
    end
    def ps_get_constant_buffers(this : ID3D11DeviceContext*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ps_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ia_get_input_layout(this : ID3D11DeviceContext*, ppInputLayout : Void**) : Void
      @lpVtbl.try &.value.ia_get_input_layout.call(this, ppInputLayout)
    end
    def ia_get_vertex_buffers(this : ID3D11DeviceContext*, start_slot : UInt32, num_buffers : UInt32, ppVertexBuffers : Void**, pStrides : UInt32*, pOffsets : UInt32*) : Void
      @lpVtbl.try &.value.ia_get_vertex_buffers.call(this, start_slot, num_buffers, ppVertexBuffers, pStrides, pOffsets)
    end
    def ia_get_index_buffer(this : ID3D11DeviceContext*, pIndexBuffer : Void**, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT*, offset : UInt32*) : Void
      @lpVtbl.try &.value.ia_get_index_buffer.call(this, pIndexBuffer, format, offset)
    end
    def gs_get_constant_buffers(this : ID3D11DeviceContext*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.gs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def gs_get_shader(this : ID3D11DeviceContext*, ppGeometryShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.gs_get_shader.call(this, ppGeometryShader, ppClassInstances, pNumClassInstances)
    end
    def ia_get_primitive_topology(this : ID3D11DeviceContext*, pTopology : Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY*) : Void
      @lpVtbl.try &.value.ia_get_primitive_topology.call(this, pTopology)
    end
    def vs_get_shader_resources(this : ID3D11DeviceContext*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.vs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def vs_get_samplers(this : ID3D11DeviceContext*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.vs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def get_predication(this : ID3D11DeviceContext*, ppPredicate : Void**, pPredicateValue : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.get_predication.call(this, ppPredicate, pPredicateValue)
    end
    def gs_get_shader_resources(this : ID3D11DeviceContext*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.gs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def gs_get_samplers(this : ID3D11DeviceContext*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.gs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def om_get_render_targets(this : ID3D11DeviceContext*, num_views : UInt32, ppRenderTargetViews : Void**, ppDepthStencilView : Void**) : Void
      @lpVtbl.try &.value.om_get_render_targets.call(this, num_views, ppRenderTargetViews, ppDepthStencilView)
    end
    def om_get_render_targets_and_unordered_access_views(this : ID3D11DeviceContext*, num_rt_vs : UInt32, ppRenderTargetViews : Void**, ppDepthStencilView : Void**, uav_start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**) : Void
      @lpVtbl.try &.value.om_get_render_targets_and_unordered_access_views.call(this, num_rt_vs, ppRenderTargetViews, ppDepthStencilView, uav_start_slot, num_ua_vs, ppUnorderedAccessViews)
    end
    def om_get_blend_state(this : ID3D11DeviceContext*, ppBlendState : Void**, blend_factor : Float32*, pSampleMask : UInt32*) : Void
      @lpVtbl.try &.value.om_get_blend_state.call(this, ppBlendState, blend_factor, pSampleMask)
    end
    def om_get_depth_stencil_state(this : ID3D11DeviceContext*, ppDepthStencilState : Void**, pStencilRef : UInt32*) : Void
      @lpVtbl.try &.value.om_get_depth_stencil_state.call(this, ppDepthStencilState, pStencilRef)
    end
    def so_get_targets(this : ID3D11DeviceContext*, num_buffers : UInt32, ppSOTargets : Void**) : Void
      @lpVtbl.try &.value.so_get_targets.call(this, num_buffers, ppSOTargets)
    end
    def rs_get_state(this : ID3D11DeviceContext*, ppRasterizerState : Void**) : Void
      @lpVtbl.try &.value.rs_get_state.call(this, ppRasterizerState)
    end
    def rs_get_viewports(this : ID3D11DeviceContext*, pNumViewports : UInt32*, pViewports : Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*) : Void
      @lpVtbl.try &.value.rs_get_viewports.call(this, pNumViewports, pViewports)
    end
    def rs_get_scissor_rects(this : ID3D11DeviceContext*, pNumRects : UInt32*, pRects : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.rs_get_scissor_rects.call(this, pNumRects, pRects)
    end
    def hs_get_shader_resources(this : ID3D11DeviceContext*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.hs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def hs_get_shader(this : ID3D11DeviceContext*, ppHullShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.hs_get_shader.call(this, ppHullShader, ppClassInstances, pNumClassInstances)
    end
    def hs_get_samplers(this : ID3D11DeviceContext*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.hs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def hs_get_constant_buffers(this : ID3D11DeviceContext*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.hs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ds_get_shader_resources(this : ID3D11DeviceContext*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ds_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ds_get_shader(this : ID3D11DeviceContext*, ppDomainShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.ds_get_shader.call(this, ppDomainShader, ppClassInstances, pNumClassInstances)
    end
    def ds_get_samplers(this : ID3D11DeviceContext*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ds_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def ds_get_constant_buffers(this : ID3D11DeviceContext*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ds_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def cs_get_shader_resources(this : ID3D11DeviceContext*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.cs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def cs_get_unordered_access_views(this : ID3D11DeviceContext*, start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**) : Void
      @lpVtbl.try &.value.cs_get_unordered_access_views.call(this, start_slot, num_ua_vs, ppUnorderedAccessViews)
    end
    def cs_get_shader(this : ID3D11DeviceContext*, ppComputeShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.cs_get_shader.call(this, ppComputeShader, ppClassInstances, pNumClassInstances)
    end
    def cs_get_samplers(this : ID3D11DeviceContext*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.cs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def cs_get_constant_buffers(this : ID3D11DeviceContext*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.cs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def clear_state(this : ID3D11DeviceContext*) : Void
      @lpVtbl.try &.value.clear_state.call(this)
    end
    def flush(this : ID3D11DeviceContext*) : Void
      @lpVtbl.try &.value.flush.call(this)
    end
    def get_type(this : ID3D11DeviceContext*) : Win32cr::Graphics::Direct3D11::D3D11_DEVICE_CONTEXT_TYPE
      @lpVtbl.try &.value.get_type.call(this)
    end
    def get_context_flags(this : ID3D11DeviceContext*) : UInt32
      @lpVtbl.try &.value.get_context_flags.call(this)
    end
    def finish_command_list(this : ID3D11DeviceContext*, restore_deferred_context_state : Win32cr::Foundation::BOOL, ppCommandList : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.finish_command_list.call(this, restore_deferred_context_state, ppCommandList)
    end

  end

  @[Extern]
  record ID3D11VideoDecoderVtbl,
    query_interface : Proc(ID3D11VideoDecoder*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11VideoDecoder*, UInt32),
    release : Proc(ID3D11VideoDecoder*, UInt32),
    get_device : Proc(ID3D11VideoDecoder*, Void**, Void),
    get_private_data : Proc(ID3D11VideoDecoder*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11VideoDecoder*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11VideoDecoder*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_creation_parameters : Proc(ID3D11VideoDecoder*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, Win32cr::Foundation::HRESULT),
    get_driver_handle : Proc(ID3D11VideoDecoder*, Win32cr::Foundation::HANDLE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11VideoDecoder, lpVtbl : ID3D11VideoDecoderVtbl* do
    GUID = LibC::GUID.new(0x3c9c5b51_u32, 0x995d_u16, 0x48d1_u16, StaticArray[0x9b_u8, 0x8d_u8, 0xfa_u8, 0x5c_u8, 0xae_u8, 0xde_u8, 0xd6_u8, 0x5c_u8])
    def query_interface(this : ID3D11VideoDecoder*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11VideoDecoder*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11VideoDecoder*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11VideoDecoder*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11VideoDecoder*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11VideoDecoder*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11VideoDecoder*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_creation_parameters(this : ID3D11VideoDecoder*, pVideoDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, pConfig : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_creation_parameters.call(this, pVideoDesc, pConfig)
    end
    def get_driver_handle(this : ID3D11VideoDecoder*, pDriverHandle : Win32cr::Foundation::HANDLE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_driver_handle.call(this, pDriverHandle)
    end

  end

  @[Extern]
  record ID3D11VideoProcessorEnumeratorVtbl,
    query_interface : Proc(ID3D11VideoProcessorEnumerator*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11VideoProcessorEnumerator*, UInt32),
    release : Proc(ID3D11VideoProcessorEnumerator*, UInt32),
    get_device : Proc(ID3D11VideoProcessorEnumerator*, Void**, Void),
    get_private_data : Proc(ID3D11VideoProcessorEnumerator*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11VideoProcessorEnumerator*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11VideoProcessorEnumerator*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_video_processor_content_desc : Proc(ID3D11VideoProcessorEnumerator*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CONTENT_DESC*, Win32cr::Foundation::HRESULT),
    check_video_processor_format : Proc(ID3D11VideoProcessorEnumerator*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32*, Win32cr::Foundation::HRESULT),
    get_video_processor_caps : Proc(ID3D11VideoProcessorEnumerator*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CAPS*, Win32cr::Foundation::HRESULT),
    get_video_processor_rate_conversion_caps : Proc(ID3D11VideoProcessorEnumerator*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS*, Win32cr::Foundation::HRESULT),
    get_video_processor_custom_rate : Proc(ID3D11VideoProcessorEnumerator*, UInt32, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CUSTOM_RATE*, Win32cr::Foundation::HRESULT),
    get_video_processor_filter_range : Proc(ID3D11VideoProcessorEnumerator*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER_RANGE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11VideoProcessorEnumerator, lpVtbl : ID3D11VideoProcessorEnumeratorVtbl* do
    GUID = LibC::GUID.new(0x31627037_u32, 0x53ab_u16, 0x4200_u16, StaticArray[0x90_u8, 0x61_u8, 0x5_u8, 0xfa_u8, 0xa9_u8, 0xab_u8, 0x45_u8, 0xf9_u8])
    def query_interface(this : ID3D11VideoProcessorEnumerator*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11VideoProcessorEnumerator*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11VideoProcessorEnumerator*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11VideoProcessorEnumerator*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11VideoProcessorEnumerator*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11VideoProcessorEnumerator*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11VideoProcessorEnumerator*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_video_processor_content_desc(this : ID3D11VideoProcessorEnumerator*, pContentDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CONTENT_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_processor_content_desc.call(this, pContentDesc)
    end
    def check_video_processor_format(this : ID3D11VideoProcessorEnumerator*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, pFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_video_processor_format.call(this, format, pFlags)
    end
    def get_video_processor_caps(this : ID3D11VideoProcessorEnumerator*, pCaps : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_processor_caps.call(this, pCaps)
    end
    def get_video_processor_rate_conversion_caps(this : ID3D11VideoProcessorEnumerator*, type_index : UInt32, pCaps : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_processor_rate_conversion_caps.call(this, type_index, pCaps)
    end
    def get_video_processor_custom_rate(this : ID3D11VideoProcessorEnumerator*, type_index : UInt32, custom_rate_index : UInt32, pRate : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CUSTOM_RATE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_processor_custom_rate.call(this, type_index, custom_rate_index, pRate)
    end
    def get_video_processor_filter_range(this : ID3D11VideoProcessorEnumerator*, filter : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, pRange : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_processor_filter_range.call(this, filter, pRange)
    end

  end

  @[Extern]
  record ID3D11VideoProcessorVtbl,
    query_interface : Proc(ID3D11VideoProcessor*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11VideoProcessor*, UInt32),
    release : Proc(ID3D11VideoProcessor*, UInt32),
    get_device : Proc(ID3D11VideoProcessor*, Void**, Void),
    get_private_data : Proc(ID3D11VideoProcessor*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11VideoProcessor*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11VideoProcessor*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_content_desc : Proc(ID3D11VideoProcessor*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CONTENT_DESC*, Void),
    get_rate_conversion_caps : Proc(ID3D11VideoProcessor*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS*, Void)


  @[Extern]
  record ID3D11VideoProcessor, lpVtbl : ID3D11VideoProcessorVtbl* do
    GUID = LibC::GUID.new(0x1d7b0652_u32, 0x185f_u16, 0x41c6_u16, StaticArray[0x85_u8, 0xce_u8, 0xc_u8, 0x5b_u8, 0xe3_u8, 0xd4_u8, 0xae_u8, 0x6c_u8])
    def query_interface(this : ID3D11VideoProcessor*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11VideoProcessor*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11VideoProcessor*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11VideoProcessor*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11VideoProcessor*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11VideoProcessor*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11VideoProcessor*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_content_desc(this : ID3D11VideoProcessor*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CONTENT_DESC*) : Void
      @lpVtbl.try &.value.get_content_desc.call(this, pDesc)
    end
    def get_rate_conversion_caps(this : ID3D11VideoProcessor*, pCaps : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS*) : Void
      @lpVtbl.try &.value.get_rate_conversion_caps.call(this, pCaps)
    end

  end

  @[Extern]
  record ID3D11AuthenticatedChannelVtbl,
    query_interface : Proc(ID3D11AuthenticatedChannel*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11AuthenticatedChannel*, UInt32),
    release : Proc(ID3D11AuthenticatedChannel*, UInt32),
    get_device : Proc(ID3D11AuthenticatedChannel*, Void**, Void),
    get_private_data : Proc(ID3D11AuthenticatedChannel*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11AuthenticatedChannel*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11AuthenticatedChannel*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_certificate_size : Proc(ID3D11AuthenticatedChannel*, UInt32*, Win32cr::Foundation::HRESULT),
    get_certificate : Proc(ID3D11AuthenticatedChannel*, UInt32, UInt8*, Win32cr::Foundation::HRESULT),
    get_channel_handle : Proc(ID3D11AuthenticatedChannel*, Win32cr::Foundation::HANDLE*, Void)


  @[Extern]
  record ID3D11AuthenticatedChannel, lpVtbl : ID3D11AuthenticatedChannelVtbl* do
    GUID = LibC::GUID.new(0x3015a308_u32, 0xdcbd_u16, 0x47aa_u16, StaticArray[0xa7_u8, 0x47_u8, 0x19_u8, 0x24_u8, 0x86_u8, 0xd1_u8, 0x4d_u8, 0x4a_u8])
    def query_interface(this : ID3D11AuthenticatedChannel*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11AuthenticatedChannel*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11AuthenticatedChannel*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11AuthenticatedChannel*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11AuthenticatedChannel*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11AuthenticatedChannel*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11AuthenticatedChannel*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_certificate_size(this : ID3D11AuthenticatedChannel*, pCertificateSize : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_certificate_size.call(this, pCertificateSize)
    end
    def get_certificate(this : ID3D11AuthenticatedChannel*, certificate_size : UInt32, pCertificate : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_certificate.call(this, certificate_size, pCertificate)
    end
    def get_channel_handle(this : ID3D11AuthenticatedChannel*, pChannelHandle : Win32cr::Foundation::HANDLE*) : Void
      @lpVtbl.try &.value.get_channel_handle.call(this, pChannelHandle)
    end

  end

  @[Extern]
  record ID3D11CryptoSessionVtbl,
    query_interface : Proc(ID3D11CryptoSession*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11CryptoSession*, UInt32),
    release : Proc(ID3D11CryptoSession*, UInt32),
    get_device : Proc(ID3D11CryptoSession*, Void**, Void),
    get_private_data : Proc(ID3D11CryptoSession*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11CryptoSession*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11CryptoSession*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_crypto_type : Proc(ID3D11CryptoSession*, LibC::GUID*, Void),
    get_decoder_profile : Proc(ID3D11CryptoSession*, LibC::GUID*, Void),
    get_certificate_size : Proc(ID3D11CryptoSession*, UInt32*, Win32cr::Foundation::HRESULT),
    get_certificate : Proc(ID3D11CryptoSession*, UInt32, UInt8*, Win32cr::Foundation::HRESULT),
    get_crypto_session_handle : Proc(ID3D11CryptoSession*, Win32cr::Foundation::HANDLE*, Void)


  @[Extern]
  record ID3D11CryptoSession, lpVtbl : ID3D11CryptoSessionVtbl* do
    GUID = LibC::GUID.new(0x9b32f9ad_u32, 0xbdcc_u16, 0x40a6_u16, StaticArray[0xa3_u8, 0x9d_u8, 0xd5_u8, 0xc8_u8, 0x65_u8, 0x84_u8, 0x57_u8, 0x20_u8])
    def query_interface(this : ID3D11CryptoSession*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11CryptoSession*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11CryptoSession*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11CryptoSession*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11CryptoSession*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11CryptoSession*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11CryptoSession*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_crypto_type(this : ID3D11CryptoSession*, pCryptoType : LibC::GUID*) : Void
      @lpVtbl.try &.value.get_crypto_type.call(this, pCryptoType)
    end
    def get_decoder_profile(this : ID3D11CryptoSession*, pDecoderProfile : LibC::GUID*) : Void
      @lpVtbl.try &.value.get_decoder_profile.call(this, pDecoderProfile)
    end
    def get_certificate_size(this : ID3D11CryptoSession*, pCertificateSize : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_certificate_size.call(this, pCertificateSize)
    end
    def get_certificate(this : ID3D11CryptoSession*, certificate_size : UInt32, pCertificate : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_certificate.call(this, certificate_size, pCertificate)
    end
    def get_crypto_session_handle(this : ID3D11CryptoSession*, pCryptoSessionHandle : Win32cr::Foundation::HANDLE*) : Void
      @lpVtbl.try &.value.get_crypto_session_handle.call(this, pCryptoSessionHandle)
    end

  end

  @[Extern]
  record ID3D11VideoDecoderOutputViewVtbl,
    query_interface : Proc(ID3D11VideoDecoderOutputView*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11VideoDecoderOutputView*, UInt32),
    release : Proc(ID3D11VideoDecoderOutputView*, UInt32),
    get_device : Proc(ID3D11VideoDecoderOutputView*, Void**, Void),
    get_private_data : Proc(ID3D11VideoDecoderOutputView*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11VideoDecoderOutputView*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11VideoDecoderOutputView*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_resource : Proc(ID3D11VideoDecoderOutputView*, Void**, Void),
    get_desc : Proc(ID3D11VideoDecoderOutputView*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*, Void)


  @[Extern]
  record ID3D11VideoDecoderOutputView, lpVtbl : ID3D11VideoDecoderOutputViewVtbl* do
    GUID = LibC::GUID.new(0xc2931aea_u32, 0x2a85_u16, 0x4f20_u16, StaticArray[0x86_u8, 0xf_u8, 0xfb_u8, 0xa1_u8, 0xfd_u8, 0x25_u8, 0x6e_u8, 0x18_u8])
    def query_interface(this : ID3D11VideoDecoderOutputView*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11VideoDecoderOutputView*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11VideoDecoderOutputView*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11VideoDecoderOutputView*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11VideoDecoderOutputView*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11VideoDecoderOutputView*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11VideoDecoderOutputView*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_resource(this : ID3D11VideoDecoderOutputView*, ppResource : Void**) : Void
      @lpVtbl.try &.value.get_resource.call(this, ppResource)
    end
    def get_desc(this : ID3D11VideoDecoderOutputView*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11VideoProcessorInputViewVtbl,
    query_interface : Proc(ID3D11VideoProcessorInputView*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11VideoProcessorInputView*, UInt32),
    release : Proc(ID3D11VideoProcessorInputView*, UInt32),
    get_device : Proc(ID3D11VideoProcessorInputView*, Void**, Void),
    get_private_data : Proc(ID3D11VideoProcessorInputView*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11VideoProcessorInputView*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11VideoProcessorInputView*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_resource : Proc(ID3D11VideoProcessorInputView*, Void**, Void),
    get_desc : Proc(ID3D11VideoProcessorInputView*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*, Void)


  @[Extern]
  record ID3D11VideoProcessorInputView, lpVtbl : ID3D11VideoProcessorInputViewVtbl* do
    GUID = LibC::GUID.new(0x11ec5a5f_u32, 0x51dc_u16, 0x4945_u16, StaticArray[0xab_u8, 0x34_u8, 0x6e_u8, 0x8c_u8, 0x21_u8, 0x30_u8, 0xe_u8, 0xa5_u8])
    def query_interface(this : ID3D11VideoProcessorInputView*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11VideoProcessorInputView*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11VideoProcessorInputView*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11VideoProcessorInputView*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11VideoProcessorInputView*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11VideoProcessorInputView*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11VideoProcessorInputView*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_resource(this : ID3D11VideoProcessorInputView*, ppResource : Void**) : Void
      @lpVtbl.try &.value.get_resource.call(this, ppResource)
    end
    def get_desc(this : ID3D11VideoProcessorInputView*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11VideoProcessorOutputViewVtbl,
    query_interface : Proc(ID3D11VideoProcessorOutputView*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11VideoProcessorOutputView*, UInt32),
    release : Proc(ID3D11VideoProcessorOutputView*, UInt32),
    get_device : Proc(ID3D11VideoProcessorOutputView*, Void**, Void),
    get_private_data : Proc(ID3D11VideoProcessorOutputView*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11VideoProcessorOutputView*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11VideoProcessorOutputView*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_resource : Proc(ID3D11VideoProcessorOutputView*, Void**, Void),
    get_desc : Proc(ID3D11VideoProcessorOutputView*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*, Void)


  @[Extern]
  record ID3D11VideoProcessorOutputView, lpVtbl : ID3D11VideoProcessorOutputViewVtbl* do
    GUID = LibC::GUID.new(0xa048285e_u32, 0x25a9_u16, 0x4527_u16, StaticArray[0xbd_u8, 0x93_u8, 0xd6_u8, 0x8b_u8, 0x68_u8, 0xc4_u8, 0x42_u8, 0x54_u8])
    def query_interface(this : ID3D11VideoProcessorOutputView*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11VideoProcessorOutputView*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11VideoProcessorOutputView*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11VideoProcessorOutputView*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11VideoProcessorOutputView*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11VideoProcessorOutputView*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11VideoProcessorOutputView*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_resource(this : ID3D11VideoProcessorOutputView*, ppResource : Void**) : Void
      @lpVtbl.try &.value.get_resource.call(this, ppResource)
    end
    def get_desc(this : ID3D11VideoProcessorOutputView*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11VideoContextVtbl,
    query_interface : Proc(ID3D11VideoContext*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11VideoContext*, UInt32),
    release : Proc(ID3D11VideoContext*, UInt32),
    get_device : Proc(ID3D11VideoContext*, Void**, Void),
    get_private_data : Proc(ID3D11VideoContext*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11VideoContext*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11VideoContext*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_decoder_buffer : Proc(ID3D11VideoContext*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE, UInt32*, Void**, Win32cr::Foundation::HRESULT),
    release_decoder_buffer : Proc(ID3D11VideoContext*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE, Win32cr::Foundation::HRESULT),
    decoder_begin_frame : Proc(ID3D11VideoContext*, Void*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    decoder_end_frame : Proc(ID3D11VideoContext*, Void*, Win32cr::Foundation::HRESULT),
    submit_decoder_buffers : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC*, Win32cr::Foundation::HRESULT),
    decoder_extension : Proc(ID3D11VideoContext*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_EXTENSION*, Int32),
    video_processor_set_output_target_rect : Proc(ID3D11VideoContext*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::RECT*, Void),
    video_processor_set_output_background_color : Proc(ID3D11VideoContext*, Void*, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*, Void),
    video_processor_set_output_color_space : Proc(ID3D11VideoContext*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_set_output_alpha_fill_mode : Proc(ID3D11VideoContext*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE, UInt32, Void),
    video_processor_set_output_constriction : Proc(ID3D11VideoContext*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::SIZE, Void),
    video_processor_set_output_stereo_mode : Proc(ID3D11VideoContext*, Void*, Win32cr::Foundation::BOOL, Void),
    video_processor_set_output_extension : Proc(ID3D11VideoContext*, Void*, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_get_output_target_rect : Proc(ID3D11VideoContext*, Void*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::RECT*, Void),
    video_processor_get_output_background_color : Proc(ID3D11VideoContext*, Void*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*, Void),
    video_processor_get_output_color_space : Proc(ID3D11VideoContext*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_get_output_alpha_fill_mode : Proc(ID3D11VideoContext*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE*, UInt32*, Void),
    video_processor_get_output_constriction : Proc(ID3D11VideoContext*, Void*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::SIZE*, Void),
    video_processor_get_output_stereo_mode : Proc(ID3D11VideoContext*, Void*, Win32cr::Foundation::BOOL*, Void),
    video_processor_get_output_extension : Proc(ID3D11VideoContext*, Void*, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_set_stream_frame_format : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT, Void),
    video_processor_set_stream_color_space : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_set_stream_output_rate : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE, Win32cr::Foundation::BOOL, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_set_stream_source_rect : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::RECT*, Void),
    video_processor_set_stream_dest_rect : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::RECT*, Void),
    video_processor_set_stream_alpha : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL, Float32, Void),
    video_processor_set_stream_palette : Proc(ID3D11VideoContext*, Void*, UInt32, UInt32, UInt32*, Void),
    video_processor_set_stream_pixel_aspect_ratio : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_set_stream_luma_key : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL, Float32, Float32, Void),
    video_processor_set_stream_stereo_format : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE, Int32, Void),
    video_processor_set_stream_auto_processing_mode : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL, Void),
    video_processor_set_stream_filter : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, Win32cr::Foundation::BOOL, Int32, Void),
    video_processor_set_stream_extension : Proc(ID3D11VideoContext*, Void*, UInt32, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_get_stream_frame_format : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT*, Void),
    video_processor_get_stream_color_space : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_get_stream_output_rate : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_get_stream_source_rect : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::RECT*, Void),
    video_processor_get_stream_dest_rect : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::RECT*, Void),
    video_processor_get_stream_alpha : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL*, Float32*, Void),
    video_processor_get_stream_palette : Proc(ID3D11VideoContext*, Void*, UInt32, UInt32, UInt32*, Void),
    video_processor_get_stream_pixel_aspect_ratio : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_get_stream_luma_key : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL*, Float32*, Float32*, Void),
    video_processor_get_stream_stereo_format : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE*, Int32*, Void),
    video_processor_get_stream_auto_processing_mode : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL*, Void),
    video_processor_get_stream_filter : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, Win32cr::Foundation::BOOL*, Int32*, Void),
    video_processor_get_stream_extension : Proc(ID3D11VideoContext*, Void*, UInt32, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_blt : Proc(ID3D11VideoContext*, Void*, Void*, UInt32, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STREAM*, Win32cr::Foundation::HRESULT),
    negotiate_crypto_session_key_exchange : Proc(ID3D11VideoContext*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    encryption_blt : Proc(ID3D11VideoContext*, Void*, Void*, Void*, UInt32, Void*, Void),
    decryption_blt : Proc(ID3D11VideoContext*, Void*, Void*, Void*, Win32cr::Graphics::Direct3D11::D3D11_ENCRYPTED_BLOCK_INFO*, UInt32, Void*, UInt32, Void*, Void),
    start_session_key_refresh : Proc(ID3D11VideoContext*, Void*, UInt32, Void*, Void),
    finish_session_key_refresh : Proc(ID3D11VideoContext*, Void*, Void),
    get_encryption_blt_key : Proc(ID3D11VideoContext*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    negotiate_authenticated_channel_key_exchange : Proc(ID3D11VideoContext*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    query_authenticated_channel : Proc(ID3D11VideoContext*, Void*, UInt32, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    configure_authenticated_channel : Proc(ID3D11VideoContext*, Void*, UInt32, Void*, Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_OUTPUT*, Win32cr::Foundation::HRESULT),
    video_processor_set_stream_rotation : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION, Void),
    video_processor_get_stream_rotation : Proc(ID3D11VideoContext*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION*, Void)


  @[Extern]
  record ID3D11VideoContext, lpVtbl : ID3D11VideoContextVtbl* do
    GUID = LibC::GUID.new(0x61f21c45_u32, 0x3c0e_u16, 0x4a74_u16, StaticArray[0x9c_u8, 0xea_u8, 0x67_u8, 0x10_u8, 0xd_u8, 0x9a_u8, 0xd5_u8, 0xe4_u8])
    def query_interface(this : ID3D11VideoContext*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11VideoContext*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11VideoContext*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11VideoContext*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11VideoContext*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11VideoContext*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11VideoContext*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_decoder_buffer(this : ID3D11VideoContext*, pDecoder : Void*, type__ : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE, pBufferSize : UInt32*, ppBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_decoder_buffer.call(this, pDecoder, type__, pBufferSize, ppBuffer)
    end
    def release_decoder_buffer(this : ID3D11VideoContext*, pDecoder : Void*, type__ : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.release_decoder_buffer.call(this, pDecoder, type__)
    end
    def decoder_begin_frame(this : ID3D11VideoContext*, pDecoder : Void*, pView : Void*, content_key_size : UInt32, pContentKey : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decoder_begin_frame.call(this, pDecoder, pView, content_key_size, pContentKey)
    end
    def decoder_end_frame(this : ID3D11VideoContext*, pDecoder : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decoder_end_frame.call(this, pDecoder)
    end
    def submit_decoder_buffers(this : ID3D11VideoContext*, pDecoder : Void*, num_buffers : UInt32, pBufferDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.submit_decoder_buffers.call(this, pDecoder, num_buffers, pBufferDesc)
    end
    def decoder_extension(this : ID3D11VideoContext*, pDecoder : Void*, pExtensionData : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_EXTENSION*) : Int32
      @lpVtbl.try &.value.decoder_extension.call(this, pDecoder, pExtensionData)
    end
    def video_processor_set_output_target_rect(this : ID3D11VideoContext*, pVideoProcessor : Void*, enable : Win32cr::Foundation::BOOL, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_set_output_target_rect.call(this, pVideoProcessor, enable, pRect)
    end
    def video_processor_set_output_background_color(this : ID3D11VideoContext*, pVideoProcessor : Void*, y_cb_cr : Win32cr::Foundation::BOOL, pColor : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*) : Void
      @lpVtbl.try &.value.video_processor_set_output_background_color.call(this, pVideoProcessor, y_cb_cr, pColor)
    end
    def video_processor_set_output_color_space(this : ID3D11VideoContext*, pVideoProcessor : Void*, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_set_output_color_space.call(this, pVideoProcessor, pColorSpace)
    end
    def video_processor_set_output_alpha_fill_mode(this : ID3D11VideoContext*, pVideoProcessor : Void*, alpha_fill_mode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE, stream_index : UInt32) : Void
      @lpVtbl.try &.value.video_processor_set_output_alpha_fill_mode.call(this, pVideoProcessor, alpha_fill_mode, stream_index)
    end
    def video_processor_set_output_constriction(this : ID3D11VideoContext*, pVideoProcessor : Void*, enable : Win32cr::Foundation::BOOL, size : Win32cr::Foundation::SIZE) : Void
      @lpVtbl.try &.value.video_processor_set_output_constriction.call(this, pVideoProcessor, enable, size)
    end
    def video_processor_set_output_stereo_mode(this : ID3D11VideoContext*, pVideoProcessor : Void*, enable : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.video_processor_set_output_stereo_mode.call(this, pVideoProcessor, enable)
    end
    def video_processor_set_output_extension(this : ID3D11VideoContext*, pVideoProcessor : Void*, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_set_output_extension.call(this, pVideoProcessor, pExtensionGuid, data_size, pData)
    end
    def video_processor_get_output_target_rect(this : ID3D11VideoContext*, pVideoProcessor : Void*, enabled : Win32cr::Foundation::BOOL*, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_get_output_target_rect.call(this, pVideoProcessor, enabled, pRect)
    end
    def video_processor_get_output_background_color(this : ID3D11VideoContext*, pVideoProcessor : Void*, pYCbCr : Win32cr::Foundation::BOOL*, pColor : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*) : Void
      @lpVtbl.try &.value.video_processor_get_output_background_color.call(this, pVideoProcessor, pYCbCr, pColor)
    end
    def video_processor_get_output_color_space(this : ID3D11VideoContext*, pVideoProcessor : Void*, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_get_output_color_space.call(this, pVideoProcessor, pColorSpace)
    end
    def video_processor_get_output_alpha_fill_mode(this : ID3D11VideoContext*, pVideoProcessor : Void*, pAlphaFillMode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE*, pStreamIndex : UInt32*) : Void
      @lpVtbl.try &.value.video_processor_get_output_alpha_fill_mode.call(this, pVideoProcessor, pAlphaFillMode, pStreamIndex)
    end
    def video_processor_get_output_constriction(this : ID3D11VideoContext*, pVideoProcessor : Void*, pEnabled : Win32cr::Foundation::BOOL*, pSize : Win32cr::Foundation::SIZE*) : Void
      @lpVtbl.try &.value.video_processor_get_output_constriction.call(this, pVideoProcessor, pEnabled, pSize)
    end
    def video_processor_get_output_stereo_mode(this : ID3D11VideoContext*, pVideoProcessor : Void*, pEnabled : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.video_processor_get_output_stereo_mode.call(this, pVideoProcessor, pEnabled)
    end
    def video_processor_get_output_extension(this : ID3D11VideoContext*, pVideoProcessor : Void*, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_get_output_extension.call(this, pVideoProcessor, pExtensionGuid, data_size, pData)
    end
    def video_processor_set_stream_frame_format(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, frame_format : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT) : Void
      @lpVtbl.try &.value.video_processor_set_stream_frame_format.call(this, pVideoProcessor, stream_index, frame_format)
    end
    def video_processor_set_stream_color_space(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_color_space.call(this, pVideoProcessor, stream_index, pColorSpace)
    end
    def video_processor_set_stream_output_rate(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, output_rate : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE, repeat_frame : Win32cr::Foundation::BOOL, pCustomRate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_output_rate.call(this, pVideoProcessor, stream_index, output_rate, repeat_frame, pCustomRate)
    end
    def video_processor_set_stream_source_rect(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_source_rect.call(this, pVideoProcessor, stream_index, enable, pRect)
    end
    def video_processor_set_stream_dest_rect(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_dest_rect.call(this, pVideoProcessor, stream_index, enable, pRect)
    end
    def video_processor_set_stream_alpha(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, alpha : Float32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_alpha.call(this, pVideoProcessor, stream_index, enable, alpha)
    end
    def video_processor_set_stream_palette(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, count : UInt32, pEntries : UInt32*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_palette.call(this, pVideoProcessor, stream_index, count, pEntries)
    end
    def video_processor_set_stream_pixel_aspect_ratio(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, pSourceAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, pDestinationAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_pixel_aspect_ratio.call(this, pVideoProcessor, stream_index, enable, pSourceAspectRatio, pDestinationAspectRatio)
    end
    def video_processor_set_stream_luma_key(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, lower : Float32, upper : Float32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_luma_key.call(this, pVideoProcessor, stream_index, enable, lower, upper)
    end
    def video_processor_set_stream_stereo_format(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, format : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT, left_view_frame0 : Win32cr::Foundation::BOOL, base_view_frame0 : Win32cr::Foundation::BOOL, flip_mode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE, mono_offset : Int32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_stereo_format.call(this, pVideoProcessor, stream_index, enable, format, left_view_frame0, base_view_frame0, flip_mode, mono_offset)
    end
    def video_processor_set_stream_auto_processing_mode(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.video_processor_set_stream_auto_processing_mode.call(this, pVideoProcessor, stream_index, enable)
    end
    def video_processor_set_stream_filter(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, filter : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, enable : Win32cr::Foundation::BOOL, level : Int32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_filter.call(this, pVideoProcessor, stream_index, filter, enable, level)
    end
    def video_processor_set_stream_extension(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_set_stream_extension.call(this, pVideoProcessor, stream_index, pExtensionGuid, data_size, pData)
    end
    def video_processor_get_stream_frame_format(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, pFrameFormat : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_frame_format.call(this, pVideoProcessor, stream_index, pFrameFormat)
    end
    def video_processor_get_stream_color_space(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_color_space.call(this, pVideoProcessor, stream_index, pColorSpace)
    end
    def video_processor_get_stream_output_rate(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, pOutputRate : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE*, pRepeatFrame : Win32cr::Foundation::BOOL*, pCustomRate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_output_rate.call(this, pVideoProcessor, stream_index, pOutputRate, pRepeatFrame, pCustomRate)
    end
    def video_processor_get_stream_source_rect(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_source_rect.call(this, pVideoProcessor, stream_index, pEnabled, pRect)
    end
    def video_processor_get_stream_dest_rect(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_dest_rect.call(this, pVideoProcessor, stream_index, pEnabled, pRect)
    end
    def video_processor_get_stream_alpha(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pAlpha : Float32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_alpha.call(this, pVideoProcessor, stream_index, pEnabled, pAlpha)
    end
    def video_processor_get_stream_palette(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, count : UInt32, pEntries : UInt32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_palette.call(this, pVideoProcessor, stream_index, count, pEntries)
    end
    def video_processor_get_stream_pixel_aspect_ratio(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pSourceAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, pDestinationAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_pixel_aspect_ratio.call(this, pVideoProcessor, stream_index, pEnabled, pSourceAspectRatio, pDestinationAspectRatio)
    end
    def video_processor_get_stream_luma_key(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pLower : Float32*, pUpper : Float32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_luma_key.call(this, pVideoProcessor, stream_index, pEnabled, pLower, pUpper)
    end
    def video_processor_get_stream_stereo_format(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, pEnable : Win32cr::Foundation::BOOL*, pFormat : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT*, pLeftViewFrame0 : Win32cr::Foundation::BOOL*, pBaseViewFrame0 : Win32cr::Foundation::BOOL*, pFlipMode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE*, mono_offset : Int32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_stereo_format.call(this, pVideoProcessor, stream_index, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, mono_offset)
    end
    def video_processor_get_stream_auto_processing_mode(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_auto_processing_mode.call(this, pVideoProcessor, stream_index, pEnabled)
    end
    def video_processor_get_stream_filter(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, filter : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, pEnabled : Win32cr::Foundation::BOOL*, pLevel : Int32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_filter.call(this, pVideoProcessor, stream_index, filter, pEnabled, pLevel)
    end
    def video_processor_get_stream_extension(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_get_stream_extension.call(this, pVideoProcessor, stream_index, pExtensionGuid, data_size, pData)
    end
    def video_processor_blt(this : ID3D11VideoContext*, pVideoProcessor : Void*, pView : Void*, output_frame : UInt32, stream_count : UInt32, pStreams : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STREAM*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.video_processor_blt.call(this, pVideoProcessor, pView, output_frame, stream_count, pStreams)
    end
    def negotiate_crypto_session_key_exchange(this : ID3D11VideoContext*, pCryptoSession : Void*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.negotiate_crypto_session_key_exchange.call(this, pCryptoSession, data_size, pData)
    end
    def encryption_blt(this : ID3D11VideoContext*, pCryptoSession : Void*, pSrcSurface : Void*, pDstSurface : Void*, iv_size : UInt32, pIV : Void*) : Void
      @lpVtbl.try &.value.encryption_blt.call(this, pCryptoSession, pSrcSurface, pDstSurface, iv_size, pIV)
    end
    def decryption_blt(this : ID3D11VideoContext*, pCryptoSession : Void*, pSrcSurface : Void*, pDstSurface : Void*, pEncryptedBlockInfo : Win32cr::Graphics::Direct3D11::D3D11_ENCRYPTED_BLOCK_INFO*, content_key_size : UInt32, pContentKey : Void*, iv_size : UInt32, pIV : Void*) : Void
      @lpVtbl.try &.value.decryption_blt.call(this, pCryptoSession, pSrcSurface, pDstSurface, pEncryptedBlockInfo, content_key_size, pContentKey, iv_size, pIV)
    end
    def start_session_key_refresh(this : ID3D11VideoContext*, pCryptoSession : Void*, random_number_size : UInt32, pRandomNumber : Void*) : Void
      @lpVtbl.try &.value.start_session_key_refresh.call(this, pCryptoSession, random_number_size, pRandomNumber)
    end
    def finish_session_key_refresh(this : ID3D11VideoContext*, pCryptoSession : Void*) : Void
      @lpVtbl.try &.value.finish_session_key_refresh.call(this, pCryptoSession)
    end
    def get_encryption_blt_key(this : ID3D11VideoContext*, pCryptoSession : Void*, key_size : UInt32, pReadbackKey : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_encryption_blt_key.call(this, pCryptoSession, key_size, pReadbackKey)
    end
    def negotiate_authenticated_channel_key_exchange(this : ID3D11VideoContext*, pChannel : Void*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.negotiate_authenticated_channel_key_exchange.call(this, pChannel, data_size, pData)
    end
    def query_authenticated_channel(this : ID3D11VideoContext*, pChannel : Void*, input_size : UInt32, pInput : Void*, output_size : UInt32, pOutput : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_authenticated_channel.call(this, pChannel, input_size, pInput, output_size, pOutput)
    end
    def configure_authenticated_channel(this : ID3D11VideoContext*, pChannel : Void*, input_size : UInt32, pInput : Void*, pOutput : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_OUTPUT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.configure_authenticated_channel.call(this, pChannel, input_size, pInput, pOutput)
    end
    def video_processor_set_stream_rotation(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, rotation : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION) : Void
      @lpVtbl.try &.value.video_processor_set_stream_rotation.call(this, pVideoProcessor, stream_index, enable, rotation)
    end
    def video_processor_get_stream_rotation(this : ID3D11VideoContext*, pVideoProcessor : Void*, stream_index : UInt32, pEnable : Win32cr::Foundation::BOOL*, pRotation : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_rotation.call(this, pVideoProcessor, stream_index, pEnable, pRotation)
    end

  end

  @[Extern]
  record ID3D11VideoDeviceVtbl,
    query_interface : Proc(ID3D11VideoDevice*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11VideoDevice*, UInt32),
    release : Proc(ID3D11VideoDevice*, UInt32),
    create_video_decoder : Proc(ID3D11VideoDevice*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, Void**, Win32cr::Foundation::HRESULT),
    create_video_processor : Proc(ID3D11VideoDevice*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_authenticated_channel : Proc(ID3D11VideoDevice*, Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CHANNEL_TYPE, Void**, Win32cr::Foundation::HRESULT),
    create_crypto_session : Proc(ID3D11VideoDevice*, LibC::GUID*, LibC::GUID*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    create_video_decoder_output_view : Proc(ID3D11VideoDevice*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_video_processor_input_view : Proc(ID3D11VideoDevice*, Void*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_video_processor_output_view : Proc(ID3D11VideoDevice*, Void*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_video_processor_enumerator : Proc(ID3D11VideoDevice*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CONTENT_DESC*, Void**, Win32cr::Foundation::HRESULT),
    get_video_decoder_profile_count : Proc(ID3D11VideoDevice*, UInt32),
    get_video_decoder_profile : Proc(ID3D11VideoDevice*, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT),
    check_video_decoder_format : Proc(ID3D11VideoDevice*, LibC::GUID*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_video_decoder_config_count : Proc(ID3D11VideoDevice*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, UInt32*, Win32cr::Foundation::HRESULT),
    get_video_decoder_config : Proc(ID3D11VideoDevice*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, Win32cr::Foundation::HRESULT),
    get_content_protection_caps : Proc(ID3D11VideoDevice*, LibC::GUID*, LibC::GUID*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_CONTENT_PROTECTION_CAPS*, Win32cr::Foundation::HRESULT),
    check_crypto_key_exchange : Proc(ID3D11VideoDevice*, LibC::GUID*, LibC::GUID*, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11VideoDevice*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11VideoDevice*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11VideoDevice, lpVtbl : ID3D11VideoDeviceVtbl* do
    GUID = LibC::GUID.new(0x10ec4d5b_u32, 0x975a_u16, 0x4689_u16, StaticArray[0xb9_u8, 0xe4_u8, 0xd0_u8, 0xaa_u8, 0xc3_u8, 0xf_u8, 0xe3_u8, 0x33_u8])
    def query_interface(this : ID3D11VideoDevice*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11VideoDevice*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11VideoDevice*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_video_decoder(this : ID3D11VideoDevice*, pVideoDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, pConfig : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, ppDecoder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_decoder.call(this, pVideoDesc, pConfig, ppDecoder)
    end
    def create_video_processor(this : ID3D11VideoDevice*, pEnum : Void*, rate_conversion_index : UInt32, ppVideoProcessor : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_processor.call(this, pEnum, rate_conversion_index, ppVideoProcessor)
    end
    def create_authenticated_channel(this : ID3D11VideoDevice*, channel_type : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CHANNEL_TYPE, ppAuthenticatedChannel : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_authenticated_channel.call(this, channel_type, ppAuthenticatedChannel)
    end
    def create_crypto_session(this : ID3D11VideoDevice*, pCryptoType : LibC::GUID*, pDecoderProfile : LibC::GUID*, pKeyExchangeType : LibC::GUID*, ppCryptoSession : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_crypto_session.call(this, pCryptoType, pDecoderProfile, pKeyExchangeType, ppCryptoSession)
    end
    def create_video_decoder_output_view(this : ID3D11VideoDevice*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*, ppVDOVView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_decoder_output_view.call(this, pResource, pDesc, ppVDOVView)
    end
    def create_video_processor_input_view(this : ID3D11VideoDevice*, pResource : Void*, pEnum : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*, ppVPIView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_processor_input_view.call(this, pResource, pEnum, pDesc, ppVPIView)
    end
    def create_video_processor_output_view(this : ID3D11VideoDevice*, pResource : Void*, pEnum : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*, ppVPOView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_processor_output_view.call(this, pResource, pEnum, pDesc, ppVPOView)
    end
    def create_video_processor_enumerator(this : ID3D11VideoDevice*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CONTENT_DESC*, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_processor_enumerator.call(this, pDesc, ppEnum)
    end
    def get_video_decoder_profile_count(this : ID3D11VideoDevice*) : UInt32
      @lpVtbl.try &.value.get_video_decoder_profile_count.call(this)
    end
    def get_video_decoder_profile(this : ID3D11VideoDevice*, index : UInt32, pDecoderProfile : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_decoder_profile.call(this, index, pDecoderProfile)
    end
    def check_video_decoder_format(this : ID3D11VideoDevice*, pDecoderProfile : LibC::GUID*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, pSupported : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_video_decoder_format.call(this, pDecoderProfile, format, pSupported)
    end
    def get_video_decoder_config_count(this : ID3D11VideoDevice*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, pCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_decoder_config_count.call(this, pDesc, pCount)
    end
    def get_video_decoder_config(this : ID3D11VideoDevice*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, index : UInt32, pConfig : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_decoder_config.call(this, pDesc, index, pConfig)
    end
    def get_content_protection_caps(this : ID3D11VideoDevice*, pCryptoType : LibC::GUID*, pDecoderProfile : LibC::GUID*, pCaps : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_CONTENT_PROTECTION_CAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_content_protection_caps.call(this, pCryptoType, pDecoderProfile, pCaps)
    end
    def check_crypto_key_exchange(this : ID3D11VideoDevice*, pCryptoType : LibC::GUID*, pDecoderProfile : LibC::GUID*, index : UInt32, pKeyExchangeType : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_crypto_key_exchange.call(this, pCryptoType, pDecoderProfile, index, pKeyExchangeType)
    end
    def set_private_data(this : ID3D11VideoDevice*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11VideoDevice*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end

  end

  @[Extern]
  record ID3D11DeviceVtbl,
    query_interface : Proc(ID3D11Device*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Device*, UInt32),
    release : Proc(ID3D11Device*, UInt32),
    create_buffer : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D11::D3D11_BUFFER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture1_d : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE1D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture2_d : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture3_d : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_shader_resource_view : Proc(ID3D11Device*, Void*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_unordered_access_view : Proc(ID3D11Device*, Void*, Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_render_target_view : Proc(ID3D11Device*, Void*, Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_depth_stencil_view : Proc(ID3D11Device*, Void*, Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_input_layout : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D11::D3D11_INPUT_ELEMENT_DESC*, UInt32, Void*, LibC::UIntPtrT, Void**, Win32cr::Foundation::HRESULT),
    create_vertex_shader : Proc(ID3D11Device*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_geometry_shader : Proc(ID3D11Device*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_geometry_shader_with_stream_output : Proc(ID3D11Device*, Void*, LibC::UIntPtrT, Win32cr::Graphics::Direct3D11::D3D11_SO_DECLARATION_ENTRY*, UInt32, UInt32*, UInt32, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_pixel_shader : Proc(ID3D11Device*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_hull_shader : Proc(ID3D11Device*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_domain_shader : Proc(ID3D11Device*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_compute_shader : Proc(ID3D11Device*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_class_linkage : Proc(ID3D11Device*, Void**, Win32cr::Foundation::HRESULT),
    create_blend_state : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_depth_stencil_state : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_rasterizer_state : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_sampler_state : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D11::D3D11_SAMPLER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_query : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_predicate : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_counter : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_deferred_context : Proc(ID3D11Device*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource : Proc(ID3D11Device*, Win32cr::Foundation::HANDLE, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    check_format_support : Proc(ID3D11Device*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32*, Win32cr::Foundation::HRESULT),
    check_multisample_quality_levels : Proc(ID3D11Device*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    check_counter_info : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_INFO*, Void),
    check_counter : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_TYPE*, UInt32*, UInt8*, UInt32*, UInt8*, UInt32*, UInt8*, UInt32*, Win32cr::Foundation::HRESULT),
    check_feature_support : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D11::D3D11_FEATURE, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_private_data : Proc(ID3D11Device*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Device*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Device*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_feature_level : Proc(ID3D11Device*, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL),
    get_creation_flags : Proc(ID3D11Device*, UInt32),
    get_device_removed_reason : Proc(ID3D11Device*, Win32cr::Foundation::HRESULT),
    get_immediate_context : Proc(ID3D11Device*, Void**, Void),
    set_exception_mode : Proc(ID3D11Device*, UInt32, Win32cr::Foundation::HRESULT),
    get_exception_mode : Proc(ID3D11Device*, UInt32)


  @[Extern]
  record ID3D11Device, lpVtbl : ID3D11DeviceVtbl* do
    GUID = LibC::GUID.new(0xdb6f6ddb_u32, 0xac77_u16, 0x4e88_u16, StaticArray[0x82_u8, 0x53_u8, 0x81_u8, 0x9d_u8, 0xf9_u8, 0xbb_u8, 0xf1_u8, 0x40_u8])
    def query_interface(this : ID3D11Device*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Device*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Device*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_buffer(this : ID3D11Device*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_buffer.call(this, pDesc, pInitialData, ppBuffer)
    end
    def create_texture1_d(this : ID3D11Device*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE1D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture1D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture1_d.call(this, pDesc, pInitialData, ppTexture1D)
    end
    def create_texture2_d(this : ID3D11Device*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture2D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture2_d.call(this, pDesc, pInitialData, ppTexture2D)
    end
    def create_texture3_d(this : ID3D11Device*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture3D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture3_d.call(this, pDesc, pInitialData, ppTexture3D)
    end
    def create_shader_resource_view(this : ID3D11Device*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*, ppSRView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_shader_resource_view.call(this, pResource, pDesc, ppSRView)
    end
    def create_unordered_access_view(this : ID3D11Device*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*, ppUAView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_unordered_access_view.call(this, pResource, pDesc, ppUAView)
    end
    def create_render_target_view(this : ID3D11Device*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*, ppRTView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_render_target_view.call(this, pResource, pDesc, ppRTView)
    end
    def create_depth_stencil_view(this : ID3D11Device*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_VIEW_DESC*, ppDepthStencilView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_depth_stencil_view.call(this, pResource, pDesc, ppDepthStencilView)
    end
    def create_input_layout(this : ID3D11Device*, pInputElementDescs : Win32cr::Graphics::Direct3D11::D3D11_INPUT_ELEMENT_DESC*, num_elements : UInt32, pShaderBytecodeWithInputSignature : Void*, bytecode_length : LibC::UIntPtrT, ppInputLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_input_layout.call(this, pInputElementDescs, num_elements, pShaderBytecodeWithInputSignature, bytecode_length, ppInputLayout)
    end
    def create_vertex_shader(this : ID3D11Device*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppVertexShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_vertex_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppVertexShader)
    end
    def create_geometry_shader(this : ID3D11Device*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppGeometryShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_geometry_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppGeometryShader)
    end
    def create_geometry_shader_with_stream_output(this : ID3D11Device*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pSODeclaration : Win32cr::Graphics::Direct3D11::D3D11_SO_DECLARATION_ENTRY*, num_entries : UInt32, pBufferStrides : UInt32*, num_strides : UInt32, rasterized_stream : UInt32, pClassLinkage : Void*, ppGeometryShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_geometry_shader_with_stream_output.call(this, pShaderBytecode, bytecode_length, pSODeclaration, num_entries, pBufferStrides, num_strides, rasterized_stream, pClassLinkage, ppGeometryShader)
    end
    def create_pixel_shader(this : ID3D11Device*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppPixelShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_pixel_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppPixelShader)
    end
    def create_hull_shader(this : ID3D11Device*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppHullShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_hull_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppHullShader)
    end
    def create_domain_shader(this : ID3D11Device*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppDomainShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_domain_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppDomainShader)
    end
    def create_compute_shader(this : ID3D11Device*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppComputeShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_compute_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppComputeShader)
    end
    def create_class_linkage(this : ID3D11Device*, ppLinkage : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_class_linkage.call(this, ppLinkage)
    end
    def create_blend_state(this : ID3D11Device*, pBlendStateDesc : Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*, ppBlendState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_blend_state.call(this, pBlendStateDesc, ppBlendState)
    end
    def create_depth_stencil_state(this : ID3D11Device*, pDepthStencilDesc : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_DESC*, ppDepthStencilState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_depth_stencil_state.call(this, pDepthStencilDesc, ppDepthStencilState)
    end
    def create_rasterizer_state(this : ID3D11Device*, pRasterizerDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*, ppRasterizerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rasterizer_state.call(this, pRasterizerDesc, ppRasterizerState)
    end
    def create_sampler_state(this : ID3D11Device*, pSamplerDesc : Win32cr::Graphics::Direct3D11::D3D11_SAMPLER_DESC*, ppSamplerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_sampler_state.call(this, pSamplerDesc, ppSamplerState)
    end
    def create_query(this : ID3D11Device*, pQueryDesc : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, ppQuery : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_query.call(this, pQueryDesc, ppQuery)
    end
    def create_predicate(this : ID3D11Device*, pPredicateDesc : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, ppPredicate : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_predicate.call(this, pPredicateDesc, ppPredicate)
    end
    def create_counter(this : ID3D11Device*, pCounterDesc : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, ppCounter : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_counter.call(this, pCounterDesc, ppCounter)
    end
    def create_deferred_context(this : ID3D11Device*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context.call(this, context_flags, ppDeferredContext)
    end
    def open_shared_resource(this : ID3D11Device*, hResource : Win32cr::Foundation::HANDLE, returned_interface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource.call(this, hResource, returned_interface, ppResource)
    end
    def check_format_support(this : ID3D11Device*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, pFormatSupport : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_format_support.call(this, format, pFormatSupport)
    end
    def check_multisample_quality_levels(this : ID3D11Device*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, sample_count : UInt32, pNumQualityLevels : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_multisample_quality_levels.call(this, format, sample_count, pNumQualityLevels)
    end
    def check_counter_info(this : ID3D11Device*, pCounterInfo : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_INFO*) : Void
      @lpVtbl.try &.value.check_counter_info.call(this, pCounterInfo)
    end
    def check_counter(this : ID3D11Device*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, pType : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_TYPE*, pActiveCounters : UInt32*, szName : UInt8*, pNameLength : UInt32*, szUnits : UInt8*, pUnitsLength : UInt32*, szDescription : UInt8*, pDescriptionLength : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_counter.call(this, pDesc, pType, pActiveCounters, szName, pNameLength, szUnits, pUnitsLength, szDescription, pDescriptionLength)
    end
    def check_feature_support(this : ID3D11Device*, feature : Win32cr::Graphics::Direct3D11::D3D11_FEATURE, pFeatureSupportData : Void*, feature_support_data_size : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_feature_support.call(this, feature, pFeatureSupportData, feature_support_data_size)
    end
    def get_private_data(this : ID3D11Device*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Device*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Device*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_feature_level(this : ID3D11Device*) : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL
      @lpVtbl.try &.value.get_feature_level.call(this)
    end
    def get_creation_flags(this : ID3D11Device*) : UInt32
      @lpVtbl.try &.value.get_creation_flags.call(this)
    end
    def get_device_removed_reason(this : ID3D11Device*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_removed_reason.call(this)
    end
    def get_immediate_context(this : ID3D11Device*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context.call(this, ppImmediateContext)
    end
    def set_exception_mode(this : ID3D11Device*, raise_flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_exception_mode.call(this, raise_flags)
    end
    def get_exception_mode(this : ID3D11Device*) : UInt32
      @lpVtbl.try &.value.get_exception_mode.call(this)
    end

  end

  @[Extern]
  record ID3D11DebugVtbl,
    query_interface : Proc(ID3D11Debug*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Debug*, UInt32),
    release : Proc(ID3D11Debug*, UInt32),
    set_feature_mask : Proc(ID3D11Debug*, UInt32, Win32cr::Foundation::HRESULT),
    get_feature_mask : Proc(ID3D11Debug*, UInt32),
    set_present_per_render_op_delay : Proc(ID3D11Debug*, UInt32, Win32cr::Foundation::HRESULT),
    get_present_per_render_op_delay : Proc(ID3D11Debug*, UInt32),
    set_swap_chain : Proc(ID3D11Debug*, Void*, Win32cr::Foundation::HRESULT),
    get_swap_chain : Proc(ID3D11Debug*, Void**, Win32cr::Foundation::HRESULT),
    validate_context : Proc(ID3D11Debug*, Void*, Win32cr::Foundation::HRESULT),
    report_live_device_objects : Proc(ID3D11Debug*, Win32cr::Graphics::Direct3D11::D3D11_RLDO_FLAGS, Win32cr::Foundation::HRESULT),
    validate_context_for_dispatch : Proc(ID3D11Debug*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11Debug, lpVtbl : ID3D11DebugVtbl* do
    GUID = LibC::GUID.new(0x79cf2233_u32, 0x7536_u16, 0x4948_u16, StaticArray[0x9d_u8, 0x36_u8, 0x1e_u8, 0x46_u8, 0x92_u8, 0xdc_u8, 0x57_u8, 0x60_u8])
    def query_interface(this : ID3D11Debug*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Debug*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Debug*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_feature_mask(this : ID3D11Debug*, mask : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_feature_mask.call(this, mask)
    end
    def get_feature_mask(this : ID3D11Debug*) : UInt32
      @lpVtbl.try &.value.get_feature_mask.call(this)
    end
    def set_present_per_render_op_delay(this : ID3D11Debug*, milliseconds : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_present_per_render_op_delay.call(this, milliseconds)
    end
    def get_present_per_render_op_delay(this : ID3D11Debug*) : UInt32
      @lpVtbl.try &.value.get_present_per_render_op_delay.call(this)
    end
    def set_swap_chain(this : ID3D11Debug*, pSwapChain : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_swap_chain.call(this, pSwapChain)
    end
    def get_swap_chain(this : ID3D11Debug*, ppSwapChain : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_swap_chain.call(this, ppSwapChain)
    end
    def validate_context(this : ID3D11Debug*, pContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.validate_context.call(this, pContext)
    end
    def report_live_device_objects(this : ID3D11Debug*, flags : Win32cr::Graphics::Direct3D11::D3D11_RLDO_FLAGS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.report_live_device_objects.call(this, flags)
    end
    def validate_context_for_dispatch(this : ID3D11Debug*, pContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.validate_context_for_dispatch.call(this, pContext)
    end

  end

  @[Extern]
  record ID3D11SwitchToRefVtbl,
    query_interface : Proc(ID3D11SwitchToRef*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11SwitchToRef*, UInt32),
    release : Proc(ID3D11SwitchToRef*, UInt32),
    set_use_ref : Proc(ID3D11SwitchToRef*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL),
    get_use_ref : Proc(ID3D11SwitchToRef*, Win32cr::Foundation::BOOL)


  @[Extern]
  record ID3D11SwitchToRef, lpVtbl : ID3D11SwitchToRefVtbl* do
    GUID = LibC::GUID.new(0x1ef337e3_u32, 0x58e7_u16, 0x4f83_u16, StaticArray[0xa6_u8, 0x92_u8, 0xdb_u8, 0x22_u8, 0x1f_u8, 0x5e_u8, 0xd4_u8, 0x7e_u8])
    def query_interface(this : ID3D11SwitchToRef*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11SwitchToRef*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11SwitchToRef*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_use_ref(this : ID3D11SwitchToRef*, use_ref : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.set_use_ref.call(this, use_ref)
    end
    def get_use_ref(this : ID3D11SwitchToRef*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.get_use_ref.call(this)
    end

  end

  @[Extern]
  record ID3D11TracingDeviceVtbl,
    query_interface : Proc(ID3D11TracingDevice*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11TracingDevice*, UInt32),
    release : Proc(ID3D11TracingDevice*, UInt32),
    set_shader_tracking_options_by_type : Proc(ID3D11TracingDevice*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    set_shader_tracking_options : Proc(ID3D11TracingDevice*, Void*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11TracingDevice, lpVtbl : ID3D11TracingDeviceVtbl* do
    GUID = LibC::GUID.new(0x1911c771_u32, 0x1587_u16, 0x413e_u16, StaticArray[0xa7_u8, 0xe0_u8, 0xfb_u8, 0x26_u8, 0xc3_u8, 0xde_u8, 0x2_u8, 0x68_u8])
    def query_interface(this : ID3D11TracingDevice*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11TracingDevice*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11TracingDevice*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_shader_tracking_options_by_type(this : ID3D11TracingDevice*, resource_type_flags : UInt32, options : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_shader_tracking_options_by_type.call(this, resource_type_flags, options)
    end
    def set_shader_tracking_options(this : ID3D11TracingDevice*, pShader : Void*, options : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_shader_tracking_options.call(this, pShader, options)
    end

  end

  @[Extern]
  record ID3D11RefTrackingOptionsVtbl,
    query_interface : Proc(ID3D11RefTrackingOptions*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11RefTrackingOptions*, UInt32),
    release : Proc(ID3D11RefTrackingOptions*, UInt32),
    set_tracking_options : Proc(ID3D11RefTrackingOptions*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11RefTrackingOptions, lpVtbl : ID3D11RefTrackingOptionsVtbl* do
    GUID = LibC::GUID.new(0x193dacdf_u32, 0xdb2_u16, 0x4c05_u16, StaticArray[0xa5_u8, 0x5c_u8, 0xef_u8, 0x6_u8, 0xca_u8, 0xc5_u8, 0x6f_u8, 0xd9_u8])
    def query_interface(this : ID3D11RefTrackingOptions*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11RefTrackingOptions*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11RefTrackingOptions*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_tracking_options(this : ID3D11RefTrackingOptions*, uOptions : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_tracking_options.call(this, uOptions)
    end

  end

  @[Extern]
  record ID3D11RefDefaultTrackingOptionsVtbl,
    query_interface : Proc(ID3D11RefDefaultTrackingOptions*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11RefDefaultTrackingOptions*, UInt32),
    release : Proc(ID3D11RefDefaultTrackingOptions*, UInt32),
    set_tracking_options : Proc(ID3D11RefDefaultTrackingOptions*, UInt32, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11RefDefaultTrackingOptions, lpVtbl : ID3D11RefDefaultTrackingOptionsVtbl* do
    GUID = LibC::GUID.new(0x3916615_u32, 0xc644_u16, 0x418c_u16, StaticArray[0x9b_u8, 0xf4_u8, 0x75_u8, 0xdb_u8, 0x5b_u8, 0xe6_u8, 0x3c_u8, 0xa0_u8])
    def query_interface(this : ID3D11RefDefaultTrackingOptions*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11RefDefaultTrackingOptions*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11RefDefaultTrackingOptions*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_tracking_options(this : ID3D11RefDefaultTrackingOptions*, resource_type_flags : UInt32, options : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_tracking_options.call(this, resource_type_flags, options)
    end

  end

  @[Extern]
  record ID3D11InfoQueueVtbl,
    query_interface : Proc(ID3D11InfoQueue*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11InfoQueue*, UInt32),
    release : Proc(ID3D11InfoQueue*, UInt32),
    set_message_count_limit : Proc(ID3D11InfoQueue*, UInt64, Win32cr::Foundation::HRESULT),
    clear_stored_messages : Proc(ID3D11InfoQueue*, Void),
    get_message : Proc(ID3D11InfoQueue*, UInt64, Win32cr::Graphics::Direct3D11::D3D11_MESSAGE*, LibC::UIntPtrT*, Win32cr::Foundation::HRESULT),
    get_num_messages_allowed_by_storage_filter : Proc(ID3D11InfoQueue*, UInt64),
    get_num_messages_denied_by_storage_filter : Proc(ID3D11InfoQueue*, UInt64),
    get_num_stored_messages : Proc(ID3D11InfoQueue*, UInt64),
    get_num_stored_messages_allowed_by_retrieval_filter : Proc(ID3D11InfoQueue*, UInt64),
    get_num_messages_discarded_by_message_count_limit : Proc(ID3D11InfoQueue*, UInt64),
    get_message_count_limit : Proc(ID3D11InfoQueue*, UInt64),
    add_storage_filter_entries : Proc(ID3D11InfoQueue*, Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER*, Win32cr::Foundation::HRESULT),
    get_storage_filter : Proc(ID3D11InfoQueue*, Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER*, LibC::UIntPtrT*, Win32cr::Foundation::HRESULT),
    clear_storage_filter : Proc(ID3D11InfoQueue*, Void),
    push_empty_storage_filter : Proc(ID3D11InfoQueue*, Win32cr::Foundation::HRESULT),
    push_copy_of_storage_filter : Proc(ID3D11InfoQueue*, Win32cr::Foundation::HRESULT),
    push_storage_filter : Proc(ID3D11InfoQueue*, Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER*, Win32cr::Foundation::HRESULT),
    pop_storage_filter : Proc(ID3D11InfoQueue*, Void),
    get_storage_filter_stack_size : Proc(ID3D11InfoQueue*, UInt32),
    add_retrieval_filter_entries : Proc(ID3D11InfoQueue*, Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER*, Win32cr::Foundation::HRESULT),
    get_retrieval_filter : Proc(ID3D11InfoQueue*, Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER*, LibC::UIntPtrT*, Win32cr::Foundation::HRESULT),
    clear_retrieval_filter : Proc(ID3D11InfoQueue*, Void),
    push_empty_retrieval_filter : Proc(ID3D11InfoQueue*, Win32cr::Foundation::HRESULT),
    push_copy_of_retrieval_filter : Proc(ID3D11InfoQueue*, Win32cr::Foundation::HRESULT),
    push_retrieval_filter : Proc(ID3D11InfoQueue*, Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER*, Win32cr::Foundation::HRESULT),
    pop_retrieval_filter : Proc(ID3D11InfoQueue*, Void),
    get_retrieval_filter_stack_size : Proc(ID3D11InfoQueue*, UInt32),
    add_message : Proc(ID3D11InfoQueue*, Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_CATEGORY, Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_SEVERITY, Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_ID, Win32cr::Foundation::PSTR, Win32cr::Foundation::HRESULT),
    add_application_message : Proc(ID3D11InfoQueue*, Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_SEVERITY, Win32cr::Foundation::PSTR, Win32cr::Foundation::HRESULT),
    set_break_on_category : Proc(ID3D11InfoQueue*, Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_CATEGORY, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_break_on_severity : Proc(ID3D11InfoQueue*, Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_SEVERITY, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_break_on_id : Proc(ID3D11InfoQueue*, Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_ID, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_break_on_category : Proc(ID3D11InfoQueue*, Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_CATEGORY, Win32cr::Foundation::BOOL),
    get_break_on_severity : Proc(ID3D11InfoQueue*, Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_SEVERITY, Win32cr::Foundation::BOOL),
    get_break_on_id : Proc(ID3D11InfoQueue*, Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_ID, Win32cr::Foundation::BOOL),
    set_mute_debug_output : Proc(ID3D11InfoQueue*, Win32cr::Foundation::BOOL, Void),
    get_mute_debug_output : Proc(ID3D11InfoQueue*, Win32cr::Foundation::BOOL)


  @[Extern]
  record ID3D11InfoQueue, lpVtbl : ID3D11InfoQueueVtbl* do
    GUID = LibC::GUID.new(0x6543dbb6_u32, 0x1b48_u16, 0x42f5_u16, StaticArray[0xab_u8, 0x82_u8, 0xe9_u8, 0x7e_u8, 0xc7_u8, 0x43_u8, 0x26_u8, 0xf6_u8])
    def query_interface(this : ID3D11InfoQueue*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11InfoQueue*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11InfoQueue*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_message_count_limit(this : ID3D11InfoQueue*, message_count_limit : UInt64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_message_count_limit.call(this, message_count_limit)
    end
    def clear_stored_messages(this : ID3D11InfoQueue*) : Void
      @lpVtbl.try &.value.clear_stored_messages.call(this)
    end
    def get_message(this : ID3D11InfoQueue*, message_index : UInt64, pMessage : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE*, pMessageByteLength : LibC::UIntPtrT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_message.call(this, message_index, pMessage, pMessageByteLength)
    end
    def get_num_messages_allowed_by_storage_filter(this : ID3D11InfoQueue*) : UInt64
      @lpVtbl.try &.value.get_num_messages_allowed_by_storage_filter.call(this)
    end
    def get_num_messages_denied_by_storage_filter(this : ID3D11InfoQueue*) : UInt64
      @lpVtbl.try &.value.get_num_messages_denied_by_storage_filter.call(this)
    end
    def get_num_stored_messages(this : ID3D11InfoQueue*) : UInt64
      @lpVtbl.try &.value.get_num_stored_messages.call(this)
    end
    def get_num_stored_messages_allowed_by_retrieval_filter(this : ID3D11InfoQueue*) : UInt64
      @lpVtbl.try &.value.get_num_stored_messages_allowed_by_retrieval_filter.call(this)
    end
    def get_num_messages_discarded_by_message_count_limit(this : ID3D11InfoQueue*) : UInt64
      @lpVtbl.try &.value.get_num_messages_discarded_by_message_count_limit.call(this)
    end
    def get_message_count_limit(this : ID3D11InfoQueue*) : UInt64
      @lpVtbl.try &.value.get_message_count_limit.call(this)
    end
    def add_storage_filter_entries(this : ID3D11InfoQueue*, pFilter : Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_storage_filter_entries.call(this, pFilter)
    end
    def get_storage_filter(this : ID3D11InfoQueue*, pFilter : Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER*, pFilterByteLength : LibC::UIntPtrT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_storage_filter.call(this, pFilter, pFilterByteLength)
    end
    def clear_storage_filter(this : ID3D11InfoQueue*) : Void
      @lpVtbl.try &.value.clear_storage_filter.call(this)
    end
    def push_empty_storage_filter(this : ID3D11InfoQueue*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.push_empty_storage_filter.call(this)
    end
    def push_copy_of_storage_filter(this : ID3D11InfoQueue*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.push_copy_of_storage_filter.call(this)
    end
    def push_storage_filter(this : ID3D11InfoQueue*, pFilter : Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.push_storage_filter.call(this, pFilter)
    end
    def pop_storage_filter(this : ID3D11InfoQueue*) : Void
      @lpVtbl.try &.value.pop_storage_filter.call(this)
    end
    def get_storage_filter_stack_size(this : ID3D11InfoQueue*) : UInt32
      @lpVtbl.try &.value.get_storage_filter_stack_size.call(this)
    end
    def add_retrieval_filter_entries(this : ID3D11InfoQueue*, pFilter : Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_retrieval_filter_entries.call(this, pFilter)
    end
    def get_retrieval_filter(this : ID3D11InfoQueue*, pFilter : Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER*, pFilterByteLength : LibC::UIntPtrT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_retrieval_filter.call(this, pFilter, pFilterByteLength)
    end
    def clear_retrieval_filter(this : ID3D11InfoQueue*) : Void
      @lpVtbl.try &.value.clear_retrieval_filter.call(this)
    end
    def push_empty_retrieval_filter(this : ID3D11InfoQueue*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.push_empty_retrieval_filter.call(this)
    end
    def push_copy_of_retrieval_filter(this : ID3D11InfoQueue*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.push_copy_of_retrieval_filter.call(this)
    end
    def push_retrieval_filter(this : ID3D11InfoQueue*, pFilter : Win32cr::Graphics::Direct3D11::D3D11_INFO_QUEUE_FILTER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.push_retrieval_filter.call(this, pFilter)
    end
    def pop_retrieval_filter(this : ID3D11InfoQueue*) : Void
      @lpVtbl.try &.value.pop_retrieval_filter.call(this)
    end
    def get_retrieval_filter_stack_size(this : ID3D11InfoQueue*) : UInt32
      @lpVtbl.try &.value.get_retrieval_filter_stack_size.call(this)
    end
    def add_message(this : ID3D11InfoQueue*, category : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_CATEGORY, severity : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_SEVERITY, id : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_ID, pDescription : Win32cr::Foundation::PSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_message.call(this, category, severity, id, pDescription)
    end
    def add_application_message(this : ID3D11InfoQueue*, severity : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_SEVERITY, pDescription : Win32cr::Foundation::PSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_application_message.call(this, severity, pDescription)
    end
    def set_break_on_category(this : ID3D11InfoQueue*, category : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_CATEGORY, bEnable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_break_on_category.call(this, category, bEnable)
    end
    def set_break_on_severity(this : ID3D11InfoQueue*, severity : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_SEVERITY, bEnable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_break_on_severity.call(this, severity, bEnable)
    end
    def set_break_on_id(this : ID3D11InfoQueue*, id : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_ID, bEnable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_break_on_id.call(this, id, bEnable)
    end
    def get_break_on_category(this : ID3D11InfoQueue*, category : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_CATEGORY) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.get_break_on_category.call(this, category)
    end
    def get_break_on_severity(this : ID3D11InfoQueue*, severity : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_SEVERITY) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.get_break_on_severity.call(this, severity)
    end
    def get_break_on_id(this : ID3D11InfoQueue*, id : Win32cr::Graphics::Direct3D11::D3D11_MESSAGE_ID) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.get_break_on_id.call(this, id)
    end
    def set_mute_debug_output(this : ID3D11InfoQueue*, bMute : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.set_mute_debug_output.call(this, bMute)
    end
    def get_mute_debug_output(this : ID3D11InfoQueue*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.get_mute_debug_output.call(this)
    end

  end

  @[Extern]
  record ID3D11BlendState1Vtbl,
    query_interface : Proc(ID3D11BlendState1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11BlendState1*, UInt32),
    release : Proc(ID3D11BlendState1*, UInt32),
    get_device : Proc(ID3D11BlendState1*, Void**, Void),
    get_private_data : Proc(ID3D11BlendState1*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11BlendState1*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11BlendState1*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_desc : Proc(ID3D11BlendState1*, Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*, Void),
    get_desc1 : Proc(ID3D11BlendState1*, Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC1*, Void)


  @[Extern]
  record ID3D11BlendState1, lpVtbl : ID3D11BlendState1Vtbl* do
    GUID = LibC::GUID.new(0xcc86fabe_u32, 0xda55_u16, 0x401d_u16, StaticArray[0x85_u8, 0xe7_u8, 0xe3_u8, 0xc9_u8, 0xde_u8, 0x28_u8, 0x77_u8, 0xe9_u8])
    def query_interface(this : ID3D11BlendState1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11BlendState1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11BlendState1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11BlendState1*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11BlendState1*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11BlendState1*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11BlendState1*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_desc(this : ID3D11BlendState1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_desc1(this : ID3D11BlendState1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC1*) : Void
      @lpVtbl.try &.value.get_desc1.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11RasterizerState1Vtbl,
    query_interface : Proc(ID3D11RasterizerState1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11RasterizerState1*, UInt32),
    release : Proc(ID3D11RasterizerState1*, UInt32),
    get_device : Proc(ID3D11RasterizerState1*, Void**, Void),
    get_private_data : Proc(ID3D11RasterizerState1*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11RasterizerState1*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11RasterizerState1*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_desc : Proc(ID3D11RasterizerState1*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*, Void),
    get_desc1 : Proc(ID3D11RasterizerState1*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC1*, Void)


  @[Extern]
  record ID3D11RasterizerState1, lpVtbl : ID3D11RasterizerState1Vtbl* do
    GUID = LibC::GUID.new(0x1217d7a6_u32, 0x5039_u16, 0x418c_u16, StaticArray[0xb0_u8, 0x42_u8, 0x9c_u8, 0xbe_u8, 0x25_u8, 0x6a_u8, 0xfd_u8, 0x6e_u8])
    def query_interface(this : ID3D11RasterizerState1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11RasterizerState1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11RasterizerState1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11RasterizerState1*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11RasterizerState1*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11RasterizerState1*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11RasterizerState1*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_desc(this : ID3D11RasterizerState1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_desc1(this : ID3D11RasterizerState1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC1*) : Void
      @lpVtbl.try &.value.get_desc1.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3DDeviceContextStateVtbl,
    query_interface : Proc(ID3DDeviceContextState*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3DDeviceContextState*, UInt32),
    release : Proc(ID3DDeviceContextState*, UInt32),
    get_device : Proc(ID3DDeviceContextState*, Void**, Void),
    get_private_data : Proc(ID3DDeviceContextState*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3DDeviceContextState*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3DDeviceContextState*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3DDeviceContextState, lpVtbl : ID3DDeviceContextStateVtbl* do
    GUID = LibC::GUID.new(0x5c1e0d8a_u32, 0x7c23_u16, 0x48f9_u16, StaticArray[0x8c_u8, 0x59_u8, 0xa9_u8, 0x29_u8, 0x58_u8, 0xce_u8, 0xff_u8, 0x11_u8])
    def query_interface(this : ID3DDeviceContextState*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3DDeviceContextState*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3DDeviceContextState*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3DDeviceContextState*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3DDeviceContextState*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3DDeviceContextState*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3DDeviceContextState*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end

  end

  @[Extern]
  record ID3D11DeviceContext1Vtbl,
    query_interface : Proc(ID3D11DeviceContext1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11DeviceContext1*, UInt32),
    release : Proc(ID3D11DeviceContext1*, UInt32),
    get_device : Proc(ID3D11DeviceContext1*, Void**, Void),
    get_private_data : Proc(ID3D11DeviceContext1*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11DeviceContext1*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11DeviceContext1*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    vs_set_constant_buffers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    ps_set_shader_resources : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    ps_set_shader : Proc(ID3D11DeviceContext1*, Void*, Void**, UInt32, Void),
    ps_set_samplers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    vs_set_shader : Proc(ID3D11DeviceContext1*, Void*, Void**, UInt32, Void),
    draw_indexed : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Int32, Void),
    draw : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void),
    map : Proc(ID3D11DeviceContext1*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_MAP, UInt32, Win32cr::Graphics::Direct3D11::D3D11_MAPPED_SUBRESOURCE*, Win32cr::Foundation::HRESULT),
    unmap : Proc(ID3D11DeviceContext1*, Void*, UInt32, Void),
    ps_set_constant_buffers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    ia_set_input_layout : Proc(ID3D11DeviceContext1*, Void*, Void),
    ia_set_vertex_buffers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ia_set_index_buffer : Proc(ID3D11DeviceContext1*, Void*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, Void),
    draw_indexed_instanced : Proc(ID3D11DeviceContext1*, UInt32, UInt32, UInt32, Int32, UInt32, Void),
    draw_instanced : Proc(ID3D11DeviceContext1*, UInt32, UInt32, UInt32, UInt32, Void),
    gs_set_constant_buffers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    gs_set_shader : Proc(ID3D11DeviceContext1*, Void*, Void**, UInt32, Void),
    ia_set_primitive_topology : Proc(ID3D11DeviceContext1*, Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY, Void),
    vs_set_shader_resources : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    vs_set_samplers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    begin__ : Proc(ID3D11DeviceContext1*, Void*, Void),
    end__ : Proc(ID3D11DeviceContext1*, Void*, Void),
    get_data : Proc(ID3D11DeviceContext1*, Void*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    set_predication : Proc(ID3D11DeviceContext1*, Void*, Win32cr::Foundation::BOOL, Void),
    gs_set_shader_resources : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    gs_set_samplers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    om_set_render_targets : Proc(ID3D11DeviceContext1*, UInt32, Void**, Void*, Void),
    om_set_render_targets_and_unordered_access_views : Proc(ID3D11DeviceContext1*, UInt32, Void**, Void*, UInt32, UInt32, Void**, UInt32*, Void),
    om_set_blend_state : Proc(ID3D11DeviceContext1*, Void*, Float32*, UInt32, Void),
    om_set_depth_stencil_state : Proc(ID3D11DeviceContext1*, Void*, UInt32, Void),
    so_set_targets : Proc(ID3D11DeviceContext1*, UInt32, Void**, UInt32*, Void),
    draw_auto : Proc(ID3D11DeviceContext1*, Void),
    draw_indexed_instanced_indirect : Proc(ID3D11DeviceContext1*, Void*, UInt32, Void),
    draw_instanced_indirect : Proc(ID3D11DeviceContext1*, Void*, UInt32, Void),
    dispatch : Proc(ID3D11DeviceContext1*, UInt32, UInt32, UInt32, Void),
    dispatch_indirect : Proc(ID3D11DeviceContext1*, Void*, UInt32, Void),
    rs_set_state : Proc(ID3D11DeviceContext1*, Void*, Void),
    rs_set_viewports : Proc(ID3D11DeviceContext1*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*, Void),
    rs_set_scissor_rects : Proc(ID3D11DeviceContext1*, UInt32, Win32cr::Foundation::RECT*, Void),
    copy_subresource_region : Proc(ID3D11DeviceContext1*, Void*, UInt32, UInt32, UInt32, UInt32, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void),
    copy_resource : Proc(ID3D11DeviceContext1*, Void*, Void*, Void),
    update_subresource : Proc(ID3D11DeviceContext1*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void*, UInt32, UInt32, Void),
    copy_structure_count : Proc(ID3D11DeviceContext1*, Void*, UInt32, Void*, Void),
    clear_render_target_view : Proc(ID3D11DeviceContext1*, Void*, Float32*, Void),
    clear_unordered_access_view_uint : Proc(ID3D11DeviceContext1*, Void*, UInt32*, Void),
    clear_unordered_access_view_float : Proc(ID3D11DeviceContext1*, Void*, Float32*, Void),
    clear_depth_stencil_view : Proc(ID3D11DeviceContext1*, Void*, UInt32, Float32, UInt8, Void),
    generate_mips : Proc(ID3D11DeviceContext1*, Void*, Void),
    set_resource_min_lod : Proc(ID3D11DeviceContext1*, Void*, Float32, Void),
    get_resource_min_lod : Proc(ID3D11DeviceContext1*, Void*, Float32),
    resolve_subresource : Proc(ID3D11DeviceContext1*, Void*, UInt32, Void*, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, Void),
    execute_command_list : Proc(ID3D11DeviceContext1*, Void*, Win32cr::Foundation::BOOL, Void),
    hs_set_shader_resources : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    hs_set_shader : Proc(ID3D11DeviceContext1*, Void*, Void**, UInt32, Void),
    hs_set_samplers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    hs_set_constant_buffers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    ds_set_shader_resources : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    ds_set_shader : Proc(ID3D11DeviceContext1*, Void*, Void**, UInt32, Void),
    ds_set_samplers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    ds_set_constant_buffers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    cs_set_shader_resources : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    cs_set_unordered_access_views : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, UInt32*, Void),
    cs_set_shader : Proc(ID3D11DeviceContext1*, Void*, Void**, UInt32, Void),
    cs_set_samplers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    cs_set_constant_buffers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    vs_get_constant_buffers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    ps_get_shader_resources : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    ps_get_shader : Proc(ID3D11DeviceContext1*, Void**, Void**, UInt32*, Void),
    ps_get_samplers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    vs_get_shader : Proc(ID3D11DeviceContext1*, Void**, Void**, UInt32*, Void),
    ps_get_constant_buffers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    ia_get_input_layout : Proc(ID3D11DeviceContext1*, Void**, Void),
    ia_get_vertex_buffers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ia_get_index_buffer : Proc(ID3D11DeviceContext1*, Void**, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT*, UInt32*, Void),
    gs_get_constant_buffers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    gs_get_shader : Proc(ID3D11DeviceContext1*, Void**, Void**, UInt32*, Void),
    ia_get_primitive_topology : Proc(ID3D11DeviceContext1*, Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY*, Void),
    vs_get_shader_resources : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    vs_get_samplers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    get_predication : Proc(ID3D11DeviceContext1*, Void**, Win32cr::Foundation::BOOL*, Void),
    gs_get_shader_resources : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    gs_get_samplers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    om_get_render_targets : Proc(ID3D11DeviceContext1*, UInt32, Void**, Void**, Void),
    om_get_render_targets_and_unordered_access_views : Proc(ID3D11DeviceContext1*, UInt32, Void**, Void**, UInt32, UInt32, Void**, Void),
    om_get_blend_state : Proc(ID3D11DeviceContext1*, Void**, Float32*, UInt32*, Void),
    om_get_depth_stencil_state : Proc(ID3D11DeviceContext1*, Void**, UInt32*, Void),
    so_get_targets : Proc(ID3D11DeviceContext1*, UInt32, Void**, Void),
    rs_get_state : Proc(ID3D11DeviceContext1*, Void**, Void),
    rs_get_viewports : Proc(ID3D11DeviceContext1*, UInt32*, Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*, Void),
    rs_get_scissor_rects : Proc(ID3D11DeviceContext1*, UInt32*, Win32cr::Foundation::RECT*, Void),
    hs_get_shader_resources : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    hs_get_shader : Proc(ID3D11DeviceContext1*, Void**, Void**, UInt32*, Void),
    hs_get_samplers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    hs_get_constant_buffers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    ds_get_shader_resources : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    ds_get_shader : Proc(ID3D11DeviceContext1*, Void**, Void**, UInt32*, Void),
    ds_get_samplers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    ds_get_constant_buffers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    cs_get_shader_resources : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    cs_get_unordered_access_views : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    cs_get_shader : Proc(ID3D11DeviceContext1*, Void**, Void**, UInt32*, Void),
    cs_get_samplers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    cs_get_constant_buffers : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, Void),
    clear_state : Proc(ID3D11DeviceContext1*, Void),
    flush : Proc(ID3D11DeviceContext1*, Void),
    get_type : Proc(ID3D11DeviceContext1*, Win32cr::Graphics::Direct3D11::D3D11_DEVICE_CONTEXT_TYPE),
    get_context_flags : Proc(ID3D11DeviceContext1*, UInt32),
    finish_command_list : Proc(ID3D11DeviceContext1*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    copy_subresource_region1 : Proc(ID3D11DeviceContext1*, Void*, UInt32, UInt32, UInt32, UInt32, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, UInt32, Void),
    update_subresource1 : Proc(ID3D11DeviceContext1*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void*, UInt32, UInt32, UInt32, Void),
    discard_resource : Proc(ID3D11DeviceContext1*, Void*, Void),
    discard_view : Proc(ID3D11DeviceContext1*, Void*, Void),
    vs_set_constant_buffers1 : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    hs_set_constant_buffers1 : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ds_set_constant_buffers1 : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    gs_set_constant_buffers1 : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ps_set_constant_buffers1 : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    cs_set_constant_buffers1 : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    vs_get_constant_buffers1 : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    hs_get_constant_buffers1 : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ds_get_constant_buffers1 : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    gs_get_constant_buffers1 : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ps_get_constant_buffers1 : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    cs_get_constant_buffers1 : Proc(ID3D11DeviceContext1*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    swap_device_context_state : Proc(ID3D11DeviceContext1*, Void*, Void**, Void),
    clear_view : Proc(ID3D11DeviceContext1*, Void*, Float32*, Win32cr::Foundation::RECT*, UInt32, Void),
    discard_view1 : Proc(ID3D11DeviceContext1*, Void*, Win32cr::Foundation::RECT*, UInt32, Void)


  @[Extern]
  record ID3D11DeviceContext1, lpVtbl : ID3D11DeviceContext1Vtbl* do
    GUID = LibC::GUID.new(0xbb2c6faa_u32, 0xb5fb_u16, 0x4082_u16, StaticArray[0x8e_u8, 0x6b_u8, 0x38_u8, 0x8b_u8, 0x8c_u8, 0xfa_u8, 0x90_u8, 0xe1_u8])
    def query_interface(this : ID3D11DeviceContext1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11DeviceContext1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11DeviceContext1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11DeviceContext1*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11DeviceContext1*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11DeviceContext1*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11DeviceContext1*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def vs_set_constant_buffers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.vs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ps_set_shader_resources(this : ID3D11DeviceContext1*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ps_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ps_set_shader(this : ID3D11DeviceContext1*, pPixelShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.ps_set_shader.call(this, pPixelShader, ppClassInstances, num_class_instances)
    end
    def ps_set_samplers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ps_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def vs_set_shader(this : ID3D11DeviceContext1*, pVertexShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.vs_set_shader.call(this, pVertexShader, ppClassInstances, num_class_instances)
    end
    def draw_indexed(this : ID3D11DeviceContext1*, index_count : UInt32, start_index_location : UInt32, base_vertex_location : Int32) : Void
      @lpVtbl.try &.value.draw_indexed.call(this, index_count, start_index_location, base_vertex_location)
    end
    def draw(this : ID3D11DeviceContext1*, vertex_count : UInt32, start_vertex_location : UInt32) : Void
      @lpVtbl.try &.value.draw.call(this, vertex_count, start_vertex_location)
    end
    def map(this : ID3D11DeviceContext1*, pResource : Void*, subresource : UInt32, map_type : Win32cr::Graphics::Direct3D11::D3D11_MAP, map_flags : UInt32, pMappedResource : Win32cr::Graphics::Direct3D11::D3D11_MAPPED_SUBRESOURCE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.map.call(this, pResource, subresource, map_type, map_flags, pMappedResource)
    end
    def unmap(this : ID3D11DeviceContext1*, pResource : Void*, subresource : UInt32) : Void
      @lpVtbl.try &.value.unmap.call(this, pResource, subresource)
    end
    def ps_set_constant_buffers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ps_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ia_set_input_layout(this : ID3D11DeviceContext1*, pInputLayout : Void*) : Void
      @lpVtbl.try &.value.ia_set_input_layout.call(this, pInputLayout)
    end
    def ia_set_vertex_buffers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppVertexBuffers : Void**, pStrides : UInt32*, pOffsets : UInt32*) : Void
      @lpVtbl.try &.value.ia_set_vertex_buffers.call(this, start_slot, num_buffers, ppVertexBuffers, pStrides, pOffsets)
    end
    def ia_set_index_buffer(this : ID3D11DeviceContext1*, pIndexBuffer : Void*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, offset : UInt32) : Void
      @lpVtbl.try &.value.ia_set_index_buffer.call(this, pIndexBuffer, format, offset)
    end
    def draw_indexed_instanced(this : ID3D11DeviceContext1*, index_count_per_instance : UInt32, instance_count : UInt32, start_index_location : UInt32, base_vertex_location : Int32, start_instance_location : UInt32) : Void
      @lpVtbl.try &.value.draw_indexed_instanced.call(this, index_count_per_instance, instance_count, start_index_location, base_vertex_location, start_instance_location)
    end
    def draw_instanced(this : ID3D11DeviceContext1*, vertex_count_per_instance : UInt32, instance_count : UInt32, start_vertex_location : UInt32, start_instance_location : UInt32) : Void
      @lpVtbl.try &.value.draw_instanced.call(this, vertex_count_per_instance, instance_count, start_vertex_location, start_instance_location)
    end
    def gs_set_constant_buffers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.gs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def gs_set_shader(this : ID3D11DeviceContext1*, pShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.gs_set_shader.call(this, pShader, ppClassInstances, num_class_instances)
    end
    def ia_set_primitive_topology(this : ID3D11DeviceContext1*, topology : Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY) : Void
      @lpVtbl.try &.value.ia_set_primitive_topology.call(this, topology)
    end
    def vs_set_shader_resources(this : ID3D11DeviceContext1*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.vs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def vs_set_samplers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.vs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def begin__(this : ID3D11DeviceContext1*, pAsync : Void*) : Void
      @lpVtbl.try &.value.begin__.call(this, pAsync)
    end
    def end__(this : ID3D11DeviceContext1*, pAsync : Void*) : Void
      @lpVtbl.try &.value.end__.call(this, pAsync)
    end
    def get_data(this : ID3D11DeviceContext1*, pAsync : Void*, pData : Void*, data_size : UInt32, get_data_flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_data.call(this, pAsync, pData, data_size, get_data_flags)
    end
    def set_predication(this : ID3D11DeviceContext1*, pPredicate : Void*, predicate_value : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.set_predication.call(this, pPredicate, predicate_value)
    end
    def gs_set_shader_resources(this : ID3D11DeviceContext1*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.gs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def gs_set_samplers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.gs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def om_set_render_targets(this : ID3D11DeviceContext1*, num_views : UInt32, ppRenderTargetViews : Void**, pDepthStencilView : Void*) : Void
      @lpVtbl.try &.value.om_set_render_targets.call(this, num_views, ppRenderTargetViews, pDepthStencilView)
    end
    def om_set_render_targets_and_unordered_access_views(this : ID3D11DeviceContext1*, num_rt_vs : UInt32, ppRenderTargetViews : Void**, pDepthStencilView : Void*, uav_start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**, pUAVInitialCounts : UInt32*) : Void
      @lpVtbl.try &.value.om_set_render_targets_and_unordered_access_views.call(this, num_rt_vs, ppRenderTargetViews, pDepthStencilView, uav_start_slot, num_ua_vs, ppUnorderedAccessViews, pUAVInitialCounts)
    end
    def om_set_blend_state(this : ID3D11DeviceContext1*, pBlendState : Void*, blend_factor : Float32*, sample_mask : UInt32) : Void
      @lpVtbl.try &.value.om_set_blend_state.call(this, pBlendState, blend_factor, sample_mask)
    end
    def om_set_depth_stencil_state(this : ID3D11DeviceContext1*, pDepthStencilState : Void*, stencil_ref : UInt32) : Void
      @lpVtbl.try &.value.om_set_depth_stencil_state.call(this, pDepthStencilState, stencil_ref)
    end
    def so_set_targets(this : ID3D11DeviceContext1*, num_buffers : UInt32, ppSOTargets : Void**, pOffsets : UInt32*) : Void
      @lpVtbl.try &.value.so_set_targets.call(this, num_buffers, ppSOTargets, pOffsets)
    end
    def draw_auto(this : ID3D11DeviceContext1*) : Void
      @lpVtbl.try &.value.draw_auto.call(this)
    end
    def draw_indexed_instanced_indirect(this : ID3D11DeviceContext1*, pBufferForArgs : Void*, aligned_byte_offset_for_args : UInt32) : Void
      @lpVtbl.try &.value.draw_indexed_instanced_indirect.call(this, pBufferForArgs, aligned_byte_offset_for_args)
    end
    def draw_instanced_indirect(this : ID3D11DeviceContext1*, pBufferForArgs : Void*, aligned_byte_offset_for_args : UInt32) : Void
      @lpVtbl.try &.value.draw_instanced_indirect.call(this, pBufferForArgs, aligned_byte_offset_for_args)
    end
    def dispatch(this : ID3D11DeviceContext1*, thread_group_count_x : UInt32, thread_group_count_y : UInt32, thread_group_count_z : UInt32) : Void
      @lpVtbl.try &.value.dispatch.call(this, thread_group_count_x, thread_group_count_y, thread_group_count_z)
    end
    def dispatch_indirect(this : ID3D11DeviceContext1*, pBufferForArgs : Void*, aligned_byte_offset_for_args : UInt32) : Void
      @lpVtbl.try &.value.dispatch_indirect.call(this, pBufferForArgs, aligned_byte_offset_for_args)
    end
    def rs_set_state(this : ID3D11DeviceContext1*, pRasterizerState : Void*) : Void
      @lpVtbl.try &.value.rs_set_state.call(this, pRasterizerState)
    end
    def rs_set_viewports(this : ID3D11DeviceContext1*, num_viewports : UInt32, pViewports : Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*) : Void
      @lpVtbl.try &.value.rs_set_viewports.call(this, num_viewports, pViewports)
    end
    def rs_set_scissor_rects(this : ID3D11DeviceContext1*, num_rects : UInt32, pRects : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.rs_set_scissor_rects.call(this, num_rects, pRects)
    end
    def copy_subresource_region(this : ID3D11DeviceContext1*, pDstResource : Void*, dst_subresource : UInt32, dst_x : UInt32, dst_y : UInt32, dst_z : UInt32, pSrcResource : Void*, src_subresource : UInt32, pSrcBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*) : Void
      @lpVtbl.try &.value.copy_subresource_region.call(this, pDstResource, dst_subresource, dst_x, dst_y, dst_z, pSrcResource, src_subresource, pSrcBox)
    end
    def copy_resource(this : ID3D11DeviceContext1*, pDstResource : Void*, pSrcResource : Void*) : Void
      @lpVtbl.try &.value.copy_resource.call(this, pDstResource, pSrcResource)
    end
    def update_subresource(this : ID3D11DeviceContext1*, pDstResource : Void*, dst_subresource : UInt32, pDstBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, pSrcData : Void*, src_row_pitch : UInt32, src_depth_pitch : UInt32) : Void
      @lpVtbl.try &.value.update_subresource.call(this, pDstResource, dst_subresource, pDstBox, pSrcData, src_row_pitch, src_depth_pitch)
    end
    def copy_structure_count(this : ID3D11DeviceContext1*, pDstBuffer : Void*, dst_aligned_byte_offset : UInt32, pSrcView : Void*) : Void
      @lpVtbl.try &.value.copy_structure_count.call(this, pDstBuffer, dst_aligned_byte_offset, pSrcView)
    end
    def clear_render_target_view(this : ID3D11DeviceContext1*, pRenderTargetView : Void*, color_rgba : Float32*) : Void
      @lpVtbl.try &.value.clear_render_target_view.call(this, pRenderTargetView, color_rgba)
    end
    def clear_unordered_access_view_uint(this : ID3D11DeviceContext1*, pUnorderedAccessView : Void*, values : UInt32*) : Void
      @lpVtbl.try &.value.clear_unordered_access_view_uint.call(this, pUnorderedAccessView, values)
    end
    def clear_unordered_access_view_float(this : ID3D11DeviceContext1*, pUnorderedAccessView : Void*, values : Float32*) : Void
      @lpVtbl.try &.value.clear_unordered_access_view_float.call(this, pUnorderedAccessView, values)
    end
    def clear_depth_stencil_view(this : ID3D11DeviceContext1*, pDepthStencilView : Void*, clear_flags : UInt32, depth : Float32, stencil : UInt8) : Void
      @lpVtbl.try &.value.clear_depth_stencil_view.call(this, pDepthStencilView, clear_flags, depth, stencil)
    end
    def generate_mips(this : ID3D11DeviceContext1*, pShaderResourceView : Void*) : Void
      @lpVtbl.try &.value.generate_mips.call(this, pShaderResourceView)
    end
    def set_resource_min_lod(this : ID3D11DeviceContext1*, pResource : Void*, min_lod : Float32) : Void
      @lpVtbl.try &.value.set_resource_min_lod.call(this, pResource, min_lod)
    end
    def get_resource_min_lod(this : ID3D11DeviceContext1*, pResource : Void*) : Float32
      @lpVtbl.try &.value.get_resource_min_lod.call(this, pResource)
    end
    def resolve_subresource(this : ID3D11DeviceContext1*, pDstResource : Void*, dst_subresource : UInt32, pSrcResource : Void*, src_subresource : UInt32, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT) : Void
      @lpVtbl.try &.value.resolve_subresource.call(this, pDstResource, dst_subresource, pSrcResource, src_subresource, format)
    end
    def execute_command_list(this : ID3D11DeviceContext1*, pCommandList : Void*, restore_context_state : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.execute_command_list.call(this, pCommandList, restore_context_state)
    end
    def hs_set_shader_resources(this : ID3D11DeviceContext1*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.hs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def hs_set_shader(this : ID3D11DeviceContext1*, pHullShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.hs_set_shader.call(this, pHullShader, ppClassInstances, num_class_instances)
    end
    def hs_set_samplers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.hs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def hs_set_constant_buffers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.hs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ds_set_shader_resources(this : ID3D11DeviceContext1*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ds_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ds_set_shader(this : ID3D11DeviceContext1*, pDomainShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.ds_set_shader.call(this, pDomainShader, ppClassInstances, num_class_instances)
    end
    def ds_set_samplers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ds_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def ds_set_constant_buffers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ds_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def cs_set_shader_resources(this : ID3D11DeviceContext1*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.cs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def cs_set_unordered_access_views(this : ID3D11DeviceContext1*, start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**, pUAVInitialCounts : UInt32*) : Void
      @lpVtbl.try &.value.cs_set_unordered_access_views.call(this, start_slot, num_ua_vs, ppUnorderedAccessViews, pUAVInitialCounts)
    end
    def cs_set_shader(this : ID3D11DeviceContext1*, pComputeShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.cs_set_shader.call(this, pComputeShader, ppClassInstances, num_class_instances)
    end
    def cs_set_samplers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.cs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def cs_set_constant_buffers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.cs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def vs_get_constant_buffers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.vs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ps_get_shader_resources(this : ID3D11DeviceContext1*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ps_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ps_get_shader(this : ID3D11DeviceContext1*, ppPixelShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.ps_get_shader.call(this, ppPixelShader, ppClassInstances, pNumClassInstances)
    end
    def ps_get_samplers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ps_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def vs_get_shader(this : ID3D11DeviceContext1*, ppVertexShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.vs_get_shader.call(this, ppVertexShader, ppClassInstances, pNumClassInstances)
    end
    def ps_get_constant_buffers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ps_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ia_get_input_layout(this : ID3D11DeviceContext1*, ppInputLayout : Void**) : Void
      @lpVtbl.try &.value.ia_get_input_layout.call(this, ppInputLayout)
    end
    def ia_get_vertex_buffers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppVertexBuffers : Void**, pStrides : UInt32*, pOffsets : UInt32*) : Void
      @lpVtbl.try &.value.ia_get_vertex_buffers.call(this, start_slot, num_buffers, ppVertexBuffers, pStrides, pOffsets)
    end
    def ia_get_index_buffer(this : ID3D11DeviceContext1*, pIndexBuffer : Void**, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT*, offset : UInt32*) : Void
      @lpVtbl.try &.value.ia_get_index_buffer.call(this, pIndexBuffer, format, offset)
    end
    def gs_get_constant_buffers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.gs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def gs_get_shader(this : ID3D11DeviceContext1*, ppGeometryShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.gs_get_shader.call(this, ppGeometryShader, ppClassInstances, pNumClassInstances)
    end
    def ia_get_primitive_topology(this : ID3D11DeviceContext1*, pTopology : Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY*) : Void
      @lpVtbl.try &.value.ia_get_primitive_topology.call(this, pTopology)
    end
    def vs_get_shader_resources(this : ID3D11DeviceContext1*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.vs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def vs_get_samplers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.vs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def get_predication(this : ID3D11DeviceContext1*, ppPredicate : Void**, pPredicateValue : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.get_predication.call(this, ppPredicate, pPredicateValue)
    end
    def gs_get_shader_resources(this : ID3D11DeviceContext1*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.gs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def gs_get_samplers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.gs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def om_get_render_targets(this : ID3D11DeviceContext1*, num_views : UInt32, ppRenderTargetViews : Void**, ppDepthStencilView : Void**) : Void
      @lpVtbl.try &.value.om_get_render_targets.call(this, num_views, ppRenderTargetViews, ppDepthStencilView)
    end
    def om_get_render_targets_and_unordered_access_views(this : ID3D11DeviceContext1*, num_rt_vs : UInt32, ppRenderTargetViews : Void**, ppDepthStencilView : Void**, uav_start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**) : Void
      @lpVtbl.try &.value.om_get_render_targets_and_unordered_access_views.call(this, num_rt_vs, ppRenderTargetViews, ppDepthStencilView, uav_start_slot, num_ua_vs, ppUnorderedAccessViews)
    end
    def om_get_blend_state(this : ID3D11DeviceContext1*, ppBlendState : Void**, blend_factor : Float32*, pSampleMask : UInt32*) : Void
      @lpVtbl.try &.value.om_get_blend_state.call(this, ppBlendState, blend_factor, pSampleMask)
    end
    def om_get_depth_stencil_state(this : ID3D11DeviceContext1*, ppDepthStencilState : Void**, pStencilRef : UInt32*) : Void
      @lpVtbl.try &.value.om_get_depth_stencil_state.call(this, ppDepthStencilState, pStencilRef)
    end
    def so_get_targets(this : ID3D11DeviceContext1*, num_buffers : UInt32, ppSOTargets : Void**) : Void
      @lpVtbl.try &.value.so_get_targets.call(this, num_buffers, ppSOTargets)
    end
    def rs_get_state(this : ID3D11DeviceContext1*, ppRasterizerState : Void**) : Void
      @lpVtbl.try &.value.rs_get_state.call(this, ppRasterizerState)
    end
    def rs_get_viewports(this : ID3D11DeviceContext1*, pNumViewports : UInt32*, pViewports : Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*) : Void
      @lpVtbl.try &.value.rs_get_viewports.call(this, pNumViewports, pViewports)
    end
    def rs_get_scissor_rects(this : ID3D11DeviceContext1*, pNumRects : UInt32*, pRects : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.rs_get_scissor_rects.call(this, pNumRects, pRects)
    end
    def hs_get_shader_resources(this : ID3D11DeviceContext1*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.hs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def hs_get_shader(this : ID3D11DeviceContext1*, ppHullShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.hs_get_shader.call(this, ppHullShader, ppClassInstances, pNumClassInstances)
    end
    def hs_get_samplers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.hs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def hs_get_constant_buffers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.hs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ds_get_shader_resources(this : ID3D11DeviceContext1*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ds_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ds_get_shader(this : ID3D11DeviceContext1*, ppDomainShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.ds_get_shader.call(this, ppDomainShader, ppClassInstances, pNumClassInstances)
    end
    def ds_get_samplers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ds_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def ds_get_constant_buffers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ds_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def cs_get_shader_resources(this : ID3D11DeviceContext1*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.cs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def cs_get_unordered_access_views(this : ID3D11DeviceContext1*, start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**) : Void
      @lpVtbl.try &.value.cs_get_unordered_access_views.call(this, start_slot, num_ua_vs, ppUnorderedAccessViews)
    end
    def cs_get_shader(this : ID3D11DeviceContext1*, ppComputeShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.cs_get_shader.call(this, ppComputeShader, ppClassInstances, pNumClassInstances)
    end
    def cs_get_samplers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.cs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def cs_get_constant_buffers(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.cs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def clear_state(this : ID3D11DeviceContext1*) : Void
      @lpVtbl.try &.value.clear_state.call(this)
    end
    def flush(this : ID3D11DeviceContext1*) : Void
      @lpVtbl.try &.value.flush.call(this)
    end
    def get_type(this : ID3D11DeviceContext1*) : Win32cr::Graphics::Direct3D11::D3D11_DEVICE_CONTEXT_TYPE
      @lpVtbl.try &.value.get_type.call(this)
    end
    def get_context_flags(this : ID3D11DeviceContext1*) : UInt32
      @lpVtbl.try &.value.get_context_flags.call(this)
    end
    def finish_command_list(this : ID3D11DeviceContext1*, restore_deferred_context_state : Win32cr::Foundation::BOOL, ppCommandList : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.finish_command_list.call(this, restore_deferred_context_state, ppCommandList)
    end
    def copy_subresource_region1(this : ID3D11DeviceContext1*, pDstResource : Void*, dst_subresource : UInt32, dst_x : UInt32, dst_y : UInt32, dst_z : UInt32, pSrcResource : Void*, src_subresource : UInt32, pSrcBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, copy_flags : UInt32) : Void
      @lpVtbl.try &.value.copy_subresource_region1.call(this, pDstResource, dst_subresource, dst_x, dst_y, dst_z, pSrcResource, src_subresource, pSrcBox, copy_flags)
    end
    def update_subresource1(this : ID3D11DeviceContext1*, pDstResource : Void*, dst_subresource : UInt32, pDstBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, pSrcData : Void*, src_row_pitch : UInt32, src_depth_pitch : UInt32, copy_flags : UInt32) : Void
      @lpVtbl.try &.value.update_subresource1.call(this, pDstResource, dst_subresource, pDstBox, pSrcData, src_row_pitch, src_depth_pitch, copy_flags)
    end
    def discard_resource(this : ID3D11DeviceContext1*, pResource : Void*) : Void
      @lpVtbl.try &.value.discard_resource.call(this, pResource)
    end
    def discard_view(this : ID3D11DeviceContext1*, pResourceView : Void*) : Void
      @lpVtbl.try &.value.discard_view.call(this, pResourceView)
    end
    def vs_set_constant_buffers1(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.vs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def hs_set_constant_buffers1(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.hs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ds_set_constant_buffers1(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ds_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def gs_set_constant_buffers1(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.gs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ps_set_constant_buffers1(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ps_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def cs_set_constant_buffers1(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.cs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def vs_get_constant_buffers1(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.vs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def hs_get_constant_buffers1(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.hs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ds_get_constant_buffers1(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ds_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def gs_get_constant_buffers1(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.gs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ps_get_constant_buffers1(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ps_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def cs_get_constant_buffers1(this : ID3D11DeviceContext1*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.cs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def swap_device_context_state(this : ID3D11DeviceContext1*, pState : Void*, ppPreviousState : Void**) : Void
      @lpVtbl.try &.value.swap_device_context_state.call(this, pState, ppPreviousState)
    end
    def clear_view(this : ID3D11DeviceContext1*, pView : Void*, color : Float32*, pRect : Win32cr::Foundation::RECT*, num_rects : UInt32) : Void
      @lpVtbl.try &.value.clear_view.call(this, pView, color, pRect, num_rects)
    end
    def discard_view1(this : ID3D11DeviceContext1*, pResourceView : Void*, pRects : Win32cr::Foundation::RECT*, num_rects : UInt32) : Void
      @lpVtbl.try &.value.discard_view1.call(this, pResourceView, pRects, num_rects)
    end

  end

  @[Extern]
  record ID3D11VideoContext1Vtbl,
    query_interface : Proc(ID3D11VideoContext1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11VideoContext1*, UInt32),
    release : Proc(ID3D11VideoContext1*, UInt32),
    get_device : Proc(ID3D11VideoContext1*, Void**, Void),
    get_private_data : Proc(ID3D11VideoContext1*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11VideoContext1*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11VideoContext1*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_decoder_buffer : Proc(ID3D11VideoContext1*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE, UInt32*, Void**, Win32cr::Foundation::HRESULT),
    release_decoder_buffer : Proc(ID3D11VideoContext1*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE, Win32cr::Foundation::HRESULT),
    decoder_begin_frame : Proc(ID3D11VideoContext1*, Void*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    decoder_end_frame : Proc(ID3D11VideoContext1*, Void*, Win32cr::Foundation::HRESULT),
    submit_decoder_buffers : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC*, Win32cr::Foundation::HRESULT),
    decoder_extension : Proc(ID3D11VideoContext1*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_EXTENSION*, Int32),
    video_processor_set_output_target_rect : Proc(ID3D11VideoContext1*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::RECT*, Void),
    video_processor_set_output_background_color : Proc(ID3D11VideoContext1*, Void*, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*, Void),
    video_processor_set_output_color_space : Proc(ID3D11VideoContext1*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_set_output_alpha_fill_mode : Proc(ID3D11VideoContext1*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE, UInt32, Void),
    video_processor_set_output_constriction : Proc(ID3D11VideoContext1*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::SIZE, Void),
    video_processor_set_output_stereo_mode : Proc(ID3D11VideoContext1*, Void*, Win32cr::Foundation::BOOL, Void),
    video_processor_set_output_extension : Proc(ID3D11VideoContext1*, Void*, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_get_output_target_rect : Proc(ID3D11VideoContext1*, Void*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::RECT*, Void),
    video_processor_get_output_background_color : Proc(ID3D11VideoContext1*, Void*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*, Void),
    video_processor_get_output_color_space : Proc(ID3D11VideoContext1*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_get_output_alpha_fill_mode : Proc(ID3D11VideoContext1*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE*, UInt32*, Void),
    video_processor_get_output_constriction : Proc(ID3D11VideoContext1*, Void*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::SIZE*, Void),
    video_processor_get_output_stereo_mode : Proc(ID3D11VideoContext1*, Void*, Win32cr::Foundation::BOOL*, Void),
    video_processor_get_output_extension : Proc(ID3D11VideoContext1*, Void*, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_set_stream_frame_format : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT, Void),
    video_processor_set_stream_color_space : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_set_stream_output_rate : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE, Win32cr::Foundation::BOOL, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_set_stream_source_rect : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::RECT*, Void),
    video_processor_set_stream_dest_rect : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::RECT*, Void),
    video_processor_set_stream_alpha : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL, Float32, Void),
    video_processor_set_stream_palette : Proc(ID3D11VideoContext1*, Void*, UInt32, UInt32, UInt32*, Void),
    video_processor_set_stream_pixel_aspect_ratio : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_set_stream_luma_key : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL, Float32, Float32, Void),
    video_processor_set_stream_stereo_format : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE, Int32, Void),
    video_processor_set_stream_auto_processing_mode : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL, Void),
    video_processor_set_stream_filter : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, Win32cr::Foundation::BOOL, Int32, Void),
    video_processor_set_stream_extension : Proc(ID3D11VideoContext1*, Void*, UInt32, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_get_stream_frame_format : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT*, Void),
    video_processor_get_stream_color_space : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_get_stream_output_rate : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_get_stream_source_rect : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::RECT*, Void),
    video_processor_get_stream_dest_rect : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::RECT*, Void),
    video_processor_get_stream_alpha : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL*, Float32*, Void),
    video_processor_get_stream_palette : Proc(ID3D11VideoContext1*, Void*, UInt32, UInt32, UInt32*, Void),
    video_processor_get_stream_pixel_aspect_ratio : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_get_stream_luma_key : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL*, Float32*, Float32*, Void),
    video_processor_get_stream_stereo_format : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE*, Int32*, Void),
    video_processor_get_stream_auto_processing_mode : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL*, Void),
    video_processor_get_stream_filter : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, Win32cr::Foundation::BOOL*, Int32*, Void),
    video_processor_get_stream_extension : Proc(ID3D11VideoContext1*, Void*, UInt32, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_blt : Proc(ID3D11VideoContext1*, Void*, Void*, UInt32, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STREAM*, Win32cr::Foundation::HRESULT),
    negotiate_crypto_session_key_exchange : Proc(ID3D11VideoContext1*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    encryption_blt : Proc(ID3D11VideoContext1*, Void*, Void*, Void*, UInt32, Void*, Void),
    decryption_blt : Proc(ID3D11VideoContext1*, Void*, Void*, Void*, Win32cr::Graphics::Direct3D11::D3D11_ENCRYPTED_BLOCK_INFO*, UInt32, Void*, UInt32, Void*, Void),
    start_session_key_refresh : Proc(ID3D11VideoContext1*, Void*, UInt32, Void*, Void),
    finish_session_key_refresh : Proc(ID3D11VideoContext1*, Void*, Void),
    get_encryption_blt_key : Proc(ID3D11VideoContext1*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    negotiate_authenticated_channel_key_exchange : Proc(ID3D11VideoContext1*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    query_authenticated_channel : Proc(ID3D11VideoContext1*, Void*, UInt32, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    configure_authenticated_channel : Proc(ID3D11VideoContext1*, Void*, UInt32, Void*, Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_OUTPUT*, Win32cr::Foundation::HRESULT),
    video_processor_set_stream_rotation : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION, Void),
    video_processor_get_stream_rotation : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION*, Void),
    submit_decoder_buffers1 : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC1*, Win32cr::Foundation::HRESULT),
    get_data_for_new_hardware_key : Proc(ID3D11VideoContext1*, Void*, UInt32, Void*, UInt64*, Win32cr::Foundation::HRESULT),
    check_crypto_session_status : Proc(ID3D11VideoContext1*, Void*, Win32cr::Graphics::Direct3D11::D3D11_CRYPTO_SESSION_STATUS*, Win32cr::Foundation::HRESULT),
    decoder_enable_downsampling : Proc(ID3D11VideoContext1*, Void*, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*, UInt32, Win32cr::Foundation::HRESULT),
    decoder_update_downsampling : Proc(ID3D11VideoContext1*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*, Win32cr::Foundation::HRESULT),
    video_processor_set_output_color_space1 : Proc(ID3D11VideoContext1*, Void*, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, Void),
    video_processor_set_output_shader_usage : Proc(ID3D11VideoContext1*, Void*, Win32cr::Foundation::BOOL, Void),
    video_processor_get_output_color_space1 : Proc(ID3D11VideoContext1*, Void*, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE*, Void),
    video_processor_get_output_shader_usage : Proc(ID3D11VideoContext1*, Void*, Win32cr::Foundation::BOOL*, Void),
    video_processor_set_stream_color_space1 : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, Void),
    video_processor_set_stream_mirror : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Void),
    video_processor_get_stream_color_space1 : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE*, Void),
    video_processor_get_stream_mirror : Proc(ID3D11VideoContext1*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Void),
    video_processor_get_behavior_hints : Proc(ID3D11VideoContext1*, Void*, UInt32, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11VideoContext1, lpVtbl : ID3D11VideoContext1Vtbl* do
    GUID = LibC::GUID.new(0xa7f026da_u32, 0xa5f8_u16, 0x4487_u16, StaticArray[0xa5_u8, 0x64_u8, 0x15_u8, 0xe3_u8, 0x43_u8, 0x57_u8, 0x65_u8, 0x1e_u8])
    def query_interface(this : ID3D11VideoContext1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11VideoContext1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11VideoContext1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11VideoContext1*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11VideoContext1*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11VideoContext1*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11VideoContext1*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_decoder_buffer(this : ID3D11VideoContext1*, pDecoder : Void*, type__ : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE, pBufferSize : UInt32*, ppBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_decoder_buffer.call(this, pDecoder, type__, pBufferSize, ppBuffer)
    end
    def release_decoder_buffer(this : ID3D11VideoContext1*, pDecoder : Void*, type__ : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.release_decoder_buffer.call(this, pDecoder, type__)
    end
    def decoder_begin_frame(this : ID3D11VideoContext1*, pDecoder : Void*, pView : Void*, content_key_size : UInt32, pContentKey : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decoder_begin_frame.call(this, pDecoder, pView, content_key_size, pContentKey)
    end
    def decoder_end_frame(this : ID3D11VideoContext1*, pDecoder : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decoder_end_frame.call(this, pDecoder)
    end
    def submit_decoder_buffers(this : ID3D11VideoContext1*, pDecoder : Void*, num_buffers : UInt32, pBufferDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.submit_decoder_buffers.call(this, pDecoder, num_buffers, pBufferDesc)
    end
    def decoder_extension(this : ID3D11VideoContext1*, pDecoder : Void*, pExtensionData : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_EXTENSION*) : Int32
      @lpVtbl.try &.value.decoder_extension.call(this, pDecoder, pExtensionData)
    end
    def video_processor_set_output_target_rect(this : ID3D11VideoContext1*, pVideoProcessor : Void*, enable : Win32cr::Foundation::BOOL, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_set_output_target_rect.call(this, pVideoProcessor, enable, pRect)
    end
    def video_processor_set_output_background_color(this : ID3D11VideoContext1*, pVideoProcessor : Void*, y_cb_cr : Win32cr::Foundation::BOOL, pColor : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*) : Void
      @lpVtbl.try &.value.video_processor_set_output_background_color.call(this, pVideoProcessor, y_cb_cr, pColor)
    end
    def video_processor_set_output_color_space(this : ID3D11VideoContext1*, pVideoProcessor : Void*, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_set_output_color_space.call(this, pVideoProcessor, pColorSpace)
    end
    def video_processor_set_output_alpha_fill_mode(this : ID3D11VideoContext1*, pVideoProcessor : Void*, alpha_fill_mode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE, stream_index : UInt32) : Void
      @lpVtbl.try &.value.video_processor_set_output_alpha_fill_mode.call(this, pVideoProcessor, alpha_fill_mode, stream_index)
    end
    def video_processor_set_output_constriction(this : ID3D11VideoContext1*, pVideoProcessor : Void*, enable : Win32cr::Foundation::BOOL, size : Win32cr::Foundation::SIZE) : Void
      @lpVtbl.try &.value.video_processor_set_output_constriction.call(this, pVideoProcessor, enable, size)
    end
    def video_processor_set_output_stereo_mode(this : ID3D11VideoContext1*, pVideoProcessor : Void*, enable : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.video_processor_set_output_stereo_mode.call(this, pVideoProcessor, enable)
    end
    def video_processor_set_output_extension(this : ID3D11VideoContext1*, pVideoProcessor : Void*, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_set_output_extension.call(this, pVideoProcessor, pExtensionGuid, data_size, pData)
    end
    def video_processor_get_output_target_rect(this : ID3D11VideoContext1*, pVideoProcessor : Void*, enabled : Win32cr::Foundation::BOOL*, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_get_output_target_rect.call(this, pVideoProcessor, enabled, pRect)
    end
    def video_processor_get_output_background_color(this : ID3D11VideoContext1*, pVideoProcessor : Void*, pYCbCr : Win32cr::Foundation::BOOL*, pColor : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*) : Void
      @lpVtbl.try &.value.video_processor_get_output_background_color.call(this, pVideoProcessor, pYCbCr, pColor)
    end
    def video_processor_get_output_color_space(this : ID3D11VideoContext1*, pVideoProcessor : Void*, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_get_output_color_space.call(this, pVideoProcessor, pColorSpace)
    end
    def video_processor_get_output_alpha_fill_mode(this : ID3D11VideoContext1*, pVideoProcessor : Void*, pAlphaFillMode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE*, pStreamIndex : UInt32*) : Void
      @lpVtbl.try &.value.video_processor_get_output_alpha_fill_mode.call(this, pVideoProcessor, pAlphaFillMode, pStreamIndex)
    end
    def video_processor_get_output_constriction(this : ID3D11VideoContext1*, pVideoProcessor : Void*, pEnabled : Win32cr::Foundation::BOOL*, pSize : Win32cr::Foundation::SIZE*) : Void
      @lpVtbl.try &.value.video_processor_get_output_constriction.call(this, pVideoProcessor, pEnabled, pSize)
    end
    def video_processor_get_output_stereo_mode(this : ID3D11VideoContext1*, pVideoProcessor : Void*, pEnabled : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.video_processor_get_output_stereo_mode.call(this, pVideoProcessor, pEnabled)
    end
    def video_processor_get_output_extension(this : ID3D11VideoContext1*, pVideoProcessor : Void*, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_get_output_extension.call(this, pVideoProcessor, pExtensionGuid, data_size, pData)
    end
    def video_processor_set_stream_frame_format(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, frame_format : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT) : Void
      @lpVtbl.try &.value.video_processor_set_stream_frame_format.call(this, pVideoProcessor, stream_index, frame_format)
    end
    def video_processor_set_stream_color_space(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_color_space.call(this, pVideoProcessor, stream_index, pColorSpace)
    end
    def video_processor_set_stream_output_rate(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, output_rate : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE, repeat_frame : Win32cr::Foundation::BOOL, pCustomRate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_output_rate.call(this, pVideoProcessor, stream_index, output_rate, repeat_frame, pCustomRate)
    end
    def video_processor_set_stream_source_rect(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_source_rect.call(this, pVideoProcessor, stream_index, enable, pRect)
    end
    def video_processor_set_stream_dest_rect(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_dest_rect.call(this, pVideoProcessor, stream_index, enable, pRect)
    end
    def video_processor_set_stream_alpha(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, alpha : Float32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_alpha.call(this, pVideoProcessor, stream_index, enable, alpha)
    end
    def video_processor_set_stream_palette(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, count : UInt32, pEntries : UInt32*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_palette.call(this, pVideoProcessor, stream_index, count, pEntries)
    end
    def video_processor_set_stream_pixel_aspect_ratio(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, pSourceAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, pDestinationAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_pixel_aspect_ratio.call(this, pVideoProcessor, stream_index, enable, pSourceAspectRatio, pDestinationAspectRatio)
    end
    def video_processor_set_stream_luma_key(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, lower : Float32, upper : Float32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_luma_key.call(this, pVideoProcessor, stream_index, enable, lower, upper)
    end
    def video_processor_set_stream_stereo_format(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, format : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT, left_view_frame0 : Win32cr::Foundation::BOOL, base_view_frame0 : Win32cr::Foundation::BOOL, flip_mode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE, mono_offset : Int32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_stereo_format.call(this, pVideoProcessor, stream_index, enable, format, left_view_frame0, base_view_frame0, flip_mode, mono_offset)
    end
    def video_processor_set_stream_auto_processing_mode(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.video_processor_set_stream_auto_processing_mode.call(this, pVideoProcessor, stream_index, enable)
    end
    def video_processor_set_stream_filter(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, filter : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, enable : Win32cr::Foundation::BOOL, level : Int32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_filter.call(this, pVideoProcessor, stream_index, filter, enable, level)
    end
    def video_processor_set_stream_extension(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_set_stream_extension.call(this, pVideoProcessor, stream_index, pExtensionGuid, data_size, pData)
    end
    def video_processor_get_stream_frame_format(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pFrameFormat : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_frame_format.call(this, pVideoProcessor, stream_index, pFrameFormat)
    end
    def video_processor_get_stream_color_space(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_color_space.call(this, pVideoProcessor, stream_index, pColorSpace)
    end
    def video_processor_get_stream_output_rate(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pOutputRate : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE*, pRepeatFrame : Win32cr::Foundation::BOOL*, pCustomRate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_output_rate.call(this, pVideoProcessor, stream_index, pOutputRate, pRepeatFrame, pCustomRate)
    end
    def video_processor_get_stream_source_rect(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_source_rect.call(this, pVideoProcessor, stream_index, pEnabled, pRect)
    end
    def video_processor_get_stream_dest_rect(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_dest_rect.call(this, pVideoProcessor, stream_index, pEnabled, pRect)
    end
    def video_processor_get_stream_alpha(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pAlpha : Float32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_alpha.call(this, pVideoProcessor, stream_index, pEnabled, pAlpha)
    end
    def video_processor_get_stream_palette(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, count : UInt32, pEntries : UInt32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_palette.call(this, pVideoProcessor, stream_index, count, pEntries)
    end
    def video_processor_get_stream_pixel_aspect_ratio(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pSourceAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, pDestinationAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_pixel_aspect_ratio.call(this, pVideoProcessor, stream_index, pEnabled, pSourceAspectRatio, pDestinationAspectRatio)
    end
    def video_processor_get_stream_luma_key(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pLower : Float32*, pUpper : Float32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_luma_key.call(this, pVideoProcessor, stream_index, pEnabled, pLower, pUpper)
    end
    def video_processor_get_stream_stereo_format(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pEnable : Win32cr::Foundation::BOOL*, pFormat : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT*, pLeftViewFrame0 : Win32cr::Foundation::BOOL*, pBaseViewFrame0 : Win32cr::Foundation::BOOL*, pFlipMode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE*, mono_offset : Int32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_stereo_format.call(this, pVideoProcessor, stream_index, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, mono_offset)
    end
    def video_processor_get_stream_auto_processing_mode(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_auto_processing_mode.call(this, pVideoProcessor, stream_index, pEnabled)
    end
    def video_processor_get_stream_filter(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, filter : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, pEnabled : Win32cr::Foundation::BOOL*, pLevel : Int32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_filter.call(this, pVideoProcessor, stream_index, filter, pEnabled, pLevel)
    end
    def video_processor_get_stream_extension(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_get_stream_extension.call(this, pVideoProcessor, stream_index, pExtensionGuid, data_size, pData)
    end
    def video_processor_blt(this : ID3D11VideoContext1*, pVideoProcessor : Void*, pView : Void*, output_frame : UInt32, stream_count : UInt32, pStreams : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STREAM*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.video_processor_blt.call(this, pVideoProcessor, pView, output_frame, stream_count, pStreams)
    end
    def negotiate_crypto_session_key_exchange(this : ID3D11VideoContext1*, pCryptoSession : Void*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.negotiate_crypto_session_key_exchange.call(this, pCryptoSession, data_size, pData)
    end
    def encryption_blt(this : ID3D11VideoContext1*, pCryptoSession : Void*, pSrcSurface : Void*, pDstSurface : Void*, iv_size : UInt32, pIV : Void*) : Void
      @lpVtbl.try &.value.encryption_blt.call(this, pCryptoSession, pSrcSurface, pDstSurface, iv_size, pIV)
    end
    def decryption_blt(this : ID3D11VideoContext1*, pCryptoSession : Void*, pSrcSurface : Void*, pDstSurface : Void*, pEncryptedBlockInfo : Win32cr::Graphics::Direct3D11::D3D11_ENCRYPTED_BLOCK_INFO*, content_key_size : UInt32, pContentKey : Void*, iv_size : UInt32, pIV : Void*) : Void
      @lpVtbl.try &.value.decryption_blt.call(this, pCryptoSession, pSrcSurface, pDstSurface, pEncryptedBlockInfo, content_key_size, pContentKey, iv_size, pIV)
    end
    def start_session_key_refresh(this : ID3D11VideoContext1*, pCryptoSession : Void*, random_number_size : UInt32, pRandomNumber : Void*) : Void
      @lpVtbl.try &.value.start_session_key_refresh.call(this, pCryptoSession, random_number_size, pRandomNumber)
    end
    def finish_session_key_refresh(this : ID3D11VideoContext1*, pCryptoSession : Void*) : Void
      @lpVtbl.try &.value.finish_session_key_refresh.call(this, pCryptoSession)
    end
    def get_encryption_blt_key(this : ID3D11VideoContext1*, pCryptoSession : Void*, key_size : UInt32, pReadbackKey : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_encryption_blt_key.call(this, pCryptoSession, key_size, pReadbackKey)
    end
    def negotiate_authenticated_channel_key_exchange(this : ID3D11VideoContext1*, pChannel : Void*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.negotiate_authenticated_channel_key_exchange.call(this, pChannel, data_size, pData)
    end
    def query_authenticated_channel(this : ID3D11VideoContext1*, pChannel : Void*, input_size : UInt32, pInput : Void*, output_size : UInt32, pOutput : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_authenticated_channel.call(this, pChannel, input_size, pInput, output_size, pOutput)
    end
    def configure_authenticated_channel(this : ID3D11VideoContext1*, pChannel : Void*, input_size : UInt32, pInput : Void*, pOutput : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_OUTPUT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.configure_authenticated_channel.call(this, pChannel, input_size, pInput, pOutput)
    end
    def video_processor_set_stream_rotation(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, rotation : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION) : Void
      @lpVtbl.try &.value.video_processor_set_stream_rotation.call(this, pVideoProcessor, stream_index, enable, rotation)
    end
    def video_processor_get_stream_rotation(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pEnable : Win32cr::Foundation::BOOL*, pRotation : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_rotation.call(this, pVideoProcessor, stream_index, pEnable, pRotation)
    end
    def submit_decoder_buffers1(this : ID3D11VideoContext1*, pDecoder : Void*, num_buffers : UInt32, pBufferDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC1*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.submit_decoder_buffers1.call(this, pDecoder, num_buffers, pBufferDesc)
    end
    def get_data_for_new_hardware_key(this : ID3D11VideoContext1*, pCryptoSession : Void*, private_input_size : UInt32, pPrivatInputData : Void*, pPrivateOutputData : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_data_for_new_hardware_key.call(this, pCryptoSession, private_input_size, pPrivatInputData, pPrivateOutputData)
    end
    def check_crypto_session_status(this : ID3D11VideoContext1*, pCryptoSession : Void*, pStatus : Win32cr::Graphics::Direct3D11::D3D11_CRYPTO_SESSION_STATUS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_crypto_session_status.call(this, pCryptoSession, pStatus)
    end
    def decoder_enable_downsampling(this : ID3D11VideoContext1*, pDecoder : Void*, input_color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, pOutputDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*, reference_frame_count : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decoder_enable_downsampling.call(this, pDecoder, input_color_space, pOutputDesc, reference_frame_count)
    end
    def decoder_update_downsampling(this : ID3D11VideoContext1*, pDecoder : Void*, pOutputDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decoder_update_downsampling.call(this, pDecoder, pOutputDesc)
    end
    def video_processor_set_output_color_space1(this : ID3D11VideoContext1*, pVideoProcessor : Void*, color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE) : Void
      @lpVtbl.try &.value.video_processor_set_output_color_space1.call(this, pVideoProcessor, color_space)
    end
    def video_processor_set_output_shader_usage(this : ID3D11VideoContext1*, pVideoProcessor : Void*, shader_usage : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.video_processor_set_output_shader_usage.call(this, pVideoProcessor, shader_usage)
    end
    def video_processor_get_output_color_space1(this : ID3D11VideoContext1*, pVideoProcessor : Void*, pColorSpace : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE*) : Void
      @lpVtbl.try &.value.video_processor_get_output_color_space1.call(this, pVideoProcessor, pColorSpace)
    end
    def video_processor_get_output_shader_usage(this : ID3D11VideoContext1*, pVideoProcessor : Void*, pShaderUsage : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.video_processor_get_output_shader_usage.call(this, pVideoProcessor, pShaderUsage)
    end
    def video_processor_set_stream_color_space1(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE) : Void
      @lpVtbl.try &.value.video_processor_set_stream_color_space1.call(this, pVideoProcessor, stream_index, color_space)
    end
    def video_processor_set_stream_mirror(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, flip_horizontal : Win32cr::Foundation::BOOL, flip_vertical : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.video_processor_set_stream_mirror.call(this, pVideoProcessor, stream_index, enable, flip_horizontal, flip_vertical)
    end
    def video_processor_get_stream_color_space1(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pColorSpace : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_color_space1.call(this, pVideoProcessor, stream_index, pColorSpace)
    end
    def video_processor_get_stream_mirror(this : ID3D11VideoContext1*, pVideoProcessor : Void*, stream_index : UInt32, pEnable : Win32cr::Foundation::BOOL*, pFlipHorizontal : Win32cr::Foundation::BOOL*, pFlipVertical : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_mirror.call(this, pVideoProcessor, stream_index, pEnable, pFlipHorizontal, pFlipVertical)
    end
    def video_processor_get_behavior_hints(this : ID3D11VideoContext1*, pVideoProcessor : Void*, output_width : UInt32, output_height : UInt32, output_format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, stream_count : UInt32, pStreams : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT*, pBehaviorHints : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.video_processor_get_behavior_hints.call(this, pVideoProcessor, output_width, output_height, output_format, stream_count, pStreams, pBehaviorHints)
    end

  end

  @[Extern]
  record ID3D11VideoDevice1Vtbl,
    query_interface : Proc(ID3D11VideoDevice1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11VideoDevice1*, UInt32),
    release : Proc(ID3D11VideoDevice1*, UInt32),
    create_video_decoder : Proc(ID3D11VideoDevice1*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, Void**, Win32cr::Foundation::HRESULT),
    create_video_processor : Proc(ID3D11VideoDevice1*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_authenticated_channel : Proc(ID3D11VideoDevice1*, Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CHANNEL_TYPE, Void**, Win32cr::Foundation::HRESULT),
    create_crypto_session : Proc(ID3D11VideoDevice1*, LibC::GUID*, LibC::GUID*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    create_video_decoder_output_view : Proc(ID3D11VideoDevice1*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_video_processor_input_view : Proc(ID3D11VideoDevice1*, Void*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_video_processor_output_view : Proc(ID3D11VideoDevice1*, Void*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_video_processor_enumerator : Proc(ID3D11VideoDevice1*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CONTENT_DESC*, Void**, Win32cr::Foundation::HRESULT),
    get_video_decoder_profile_count : Proc(ID3D11VideoDevice1*, UInt32),
    get_video_decoder_profile : Proc(ID3D11VideoDevice1*, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT),
    check_video_decoder_format : Proc(ID3D11VideoDevice1*, LibC::GUID*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_video_decoder_config_count : Proc(ID3D11VideoDevice1*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, UInt32*, Win32cr::Foundation::HRESULT),
    get_video_decoder_config : Proc(ID3D11VideoDevice1*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, Win32cr::Foundation::HRESULT),
    get_content_protection_caps : Proc(ID3D11VideoDevice1*, LibC::GUID*, LibC::GUID*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_CONTENT_PROTECTION_CAPS*, Win32cr::Foundation::HRESULT),
    check_crypto_key_exchange : Proc(ID3D11VideoDevice1*, LibC::GUID*, LibC::GUID*, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11VideoDevice1*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11VideoDevice1*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_crypto_session_private_data_size : Proc(ID3D11VideoDevice1*, LibC::GUID*, LibC::GUID*, LibC::GUID*, UInt32*, UInt32*, Win32cr::Foundation::HRESULT),
    get_video_decoder_caps : Proc(ID3D11VideoDevice1*, LibC::GUID*, UInt32, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, UInt32, LibC::GUID*, UInt32*, Win32cr::Foundation::HRESULT),
    check_video_decoder_downsampling : Proc(ID3D11VideoDevice1*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    recommend_video_decoder_downsample_parameters : Proc(ID3D11VideoDevice1*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11VideoDevice1, lpVtbl : ID3D11VideoDevice1Vtbl* do
    GUID = LibC::GUID.new(0x29da1d51_u32, 0x1321_u16, 0x4454_u16, StaticArray[0x80_u8, 0x4b_u8, 0xf5_u8, 0xfc_u8, 0x9f_u8, 0x86_u8, 0x1f_u8, 0xf_u8])
    def query_interface(this : ID3D11VideoDevice1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11VideoDevice1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11VideoDevice1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_video_decoder(this : ID3D11VideoDevice1*, pVideoDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, pConfig : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, ppDecoder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_decoder.call(this, pVideoDesc, pConfig, ppDecoder)
    end
    def create_video_processor(this : ID3D11VideoDevice1*, pEnum : Void*, rate_conversion_index : UInt32, ppVideoProcessor : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_processor.call(this, pEnum, rate_conversion_index, ppVideoProcessor)
    end
    def create_authenticated_channel(this : ID3D11VideoDevice1*, channel_type : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CHANNEL_TYPE, ppAuthenticatedChannel : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_authenticated_channel.call(this, channel_type, ppAuthenticatedChannel)
    end
    def create_crypto_session(this : ID3D11VideoDevice1*, pCryptoType : LibC::GUID*, pDecoderProfile : LibC::GUID*, pKeyExchangeType : LibC::GUID*, ppCryptoSession : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_crypto_session.call(this, pCryptoType, pDecoderProfile, pKeyExchangeType, ppCryptoSession)
    end
    def create_video_decoder_output_view(this : ID3D11VideoDevice1*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*, ppVDOVView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_decoder_output_view.call(this, pResource, pDesc, ppVDOVView)
    end
    def create_video_processor_input_view(this : ID3D11VideoDevice1*, pResource : Void*, pEnum : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*, ppVPIView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_processor_input_view.call(this, pResource, pEnum, pDesc, ppVPIView)
    end
    def create_video_processor_output_view(this : ID3D11VideoDevice1*, pResource : Void*, pEnum : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*, ppVPOView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_processor_output_view.call(this, pResource, pEnum, pDesc, ppVPOView)
    end
    def create_video_processor_enumerator(this : ID3D11VideoDevice1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CONTENT_DESC*, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_processor_enumerator.call(this, pDesc, ppEnum)
    end
    def get_video_decoder_profile_count(this : ID3D11VideoDevice1*) : UInt32
      @lpVtbl.try &.value.get_video_decoder_profile_count.call(this)
    end
    def get_video_decoder_profile(this : ID3D11VideoDevice1*, index : UInt32, pDecoderProfile : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_decoder_profile.call(this, index, pDecoderProfile)
    end
    def check_video_decoder_format(this : ID3D11VideoDevice1*, pDecoderProfile : LibC::GUID*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, pSupported : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_video_decoder_format.call(this, pDecoderProfile, format, pSupported)
    end
    def get_video_decoder_config_count(this : ID3D11VideoDevice1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, pCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_decoder_config_count.call(this, pDesc, pCount)
    end
    def get_video_decoder_config(this : ID3D11VideoDevice1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, index : UInt32, pConfig : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_decoder_config.call(this, pDesc, index, pConfig)
    end
    def get_content_protection_caps(this : ID3D11VideoDevice1*, pCryptoType : LibC::GUID*, pDecoderProfile : LibC::GUID*, pCaps : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_CONTENT_PROTECTION_CAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_content_protection_caps.call(this, pCryptoType, pDecoderProfile, pCaps)
    end
    def check_crypto_key_exchange(this : ID3D11VideoDevice1*, pCryptoType : LibC::GUID*, pDecoderProfile : LibC::GUID*, index : UInt32, pKeyExchangeType : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_crypto_key_exchange.call(this, pCryptoType, pDecoderProfile, index, pKeyExchangeType)
    end
    def set_private_data(this : ID3D11VideoDevice1*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11VideoDevice1*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_crypto_session_private_data_size(this : ID3D11VideoDevice1*, pCryptoType : LibC::GUID*, pDecoderProfile : LibC::GUID*, pKeyExchangeType : LibC::GUID*, pPrivateInputSize : UInt32*, pPrivateOutputSize : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_crypto_session_private_data_size.call(this, pCryptoType, pDecoderProfile, pKeyExchangeType, pPrivateInputSize, pPrivateOutputSize)
    end
    def get_video_decoder_caps(this : ID3D11VideoDevice1*, pDecoderProfile : LibC::GUID*, sample_width : UInt32, sample_height : UInt32, pFrameRate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, bit_rate : UInt32, pCryptoType : LibC::GUID*, pDecoderCaps : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_decoder_caps.call(this, pDecoderProfile, sample_width, sample_height, pFrameRate, bit_rate, pCryptoType, pDecoderCaps)
    end
    def check_video_decoder_downsampling(this : ID3D11VideoDevice1*, pInputDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, input_color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, pInputConfig : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, pFrameRate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, pOutputDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*, pSupported : Win32cr::Foundation::BOOL*, pRealTimeHint : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_video_decoder_downsampling.call(this, pInputDesc, input_color_space, pInputConfig, pFrameRate, pOutputDesc, pSupported, pRealTimeHint)
    end
    def recommend_video_decoder_downsample_parameters(this : ID3D11VideoDevice1*, pInputDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, input_color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, pInputConfig : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, pFrameRate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, pRecommendedOutputDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.recommend_video_decoder_downsample_parameters.call(this, pInputDesc, input_color_space, pInputConfig, pFrameRate, pRecommendedOutputDesc)
    end

  end

  @[Extern]
  record ID3D11VideoProcessorEnumerator1Vtbl,
    query_interface : Proc(ID3D11VideoProcessorEnumerator1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11VideoProcessorEnumerator1*, UInt32),
    release : Proc(ID3D11VideoProcessorEnumerator1*, UInt32),
    get_device : Proc(ID3D11VideoProcessorEnumerator1*, Void**, Void),
    get_private_data : Proc(ID3D11VideoProcessorEnumerator1*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11VideoProcessorEnumerator1*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11VideoProcessorEnumerator1*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_video_processor_content_desc : Proc(ID3D11VideoProcessorEnumerator1*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CONTENT_DESC*, Win32cr::Foundation::HRESULT),
    check_video_processor_format : Proc(ID3D11VideoProcessorEnumerator1*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32*, Win32cr::Foundation::HRESULT),
    get_video_processor_caps : Proc(ID3D11VideoProcessorEnumerator1*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CAPS*, Win32cr::Foundation::HRESULT),
    get_video_processor_rate_conversion_caps : Proc(ID3D11VideoProcessorEnumerator1*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS*, Win32cr::Foundation::HRESULT),
    get_video_processor_custom_rate : Proc(ID3D11VideoProcessorEnumerator1*, UInt32, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CUSTOM_RATE*, Win32cr::Foundation::HRESULT),
    get_video_processor_filter_range : Proc(ID3D11VideoProcessorEnumerator1*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER_RANGE*, Win32cr::Foundation::HRESULT),
    check_video_processor_format_conversion : Proc(ID3D11VideoProcessorEnumerator1*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11VideoProcessorEnumerator1, lpVtbl : ID3D11VideoProcessorEnumerator1Vtbl* do
    GUID = LibC::GUID.new(0x465217f2_u32, 0x5568_u16, 0x43cf_u16, StaticArray[0xb5_u8, 0xb9_u8, 0xf6_u8, 0x1d_u8, 0x54_u8, 0x53_u8, 0x1c_u8, 0xa1_u8])
    def query_interface(this : ID3D11VideoProcessorEnumerator1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11VideoProcessorEnumerator1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11VideoProcessorEnumerator1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11VideoProcessorEnumerator1*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11VideoProcessorEnumerator1*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11VideoProcessorEnumerator1*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11VideoProcessorEnumerator1*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_video_processor_content_desc(this : ID3D11VideoProcessorEnumerator1*, pContentDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CONTENT_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_processor_content_desc.call(this, pContentDesc)
    end
    def check_video_processor_format(this : ID3D11VideoProcessorEnumerator1*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, pFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_video_processor_format.call(this, format, pFlags)
    end
    def get_video_processor_caps(this : ID3D11VideoProcessorEnumerator1*, pCaps : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_processor_caps.call(this, pCaps)
    end
    def get_video_processor_rate_conversion_caps(this : ID3D11VideoProcessorEnumerator1*, type_index : UInt32, pCaps : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_processor_rate_conversion_caps.call(this, type_index, pCaps)
    end
    def get_video_processor_custom_rate(this : ID3D11VideoProcessorEnumerator1*, type_index : UInt32, custom_rate_index : UInt32, pRate : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CUSTOM_RATE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_processor_custom_rate.call(this, type_index, custom_rate_index, pRate)
    end
    def get_video_processor_filter_range(this : ID3D11VideoProcessorEnumerator1*, filter : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, pRange : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER_RANGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_processor_filter_range.call(this, filter, pRange)
    end
    def check_video_processor_format_conversion(this : ID3D11VideoProcessorEnumerator1*, input_format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, input_color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, output_format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, output_color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, pSupported : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_video_processor_format_conversion.call(this, input_format, input_color_space, output_format, output_color_space, pSupported)
    end

  end

  @[Extern]
  record ID3D11Device1Vtbl,
    query_interface : Proc(ID3D11Device1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Device1*, UInt32),
    release : Proc(ID3D11Device1*, UInt32),
    create_buffer : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_BUFFER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture1_d : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE1D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture2_d : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture3_d : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_shader_resource_view : Proc(ID3D11Device1*, Void*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_unordered_access_view : Proc(ID3D11Device1*, Void*, Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_render_target_view : Proc(ID3D11Device1*, Void*, Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_depth_stencil_view : Proc(ID3D11Device1*, Void*, Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_input_layout : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_INPUT_ELEMENT_DESC*, UInt32, Void*, LibC::UIntPtrT, Void**, Win32cr::Foundation::HRESULT),
    create_vertex_shader : Proc(ID3D11Device1*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_geometry_shader : Proc(ID3D11Device1*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_geometry_shader_with_stream_output : Proc(ID3D11Device1*, Void*, LibC::UIntPtrT, Win32cr::Graphics::Direct3D11::D3D11_SO_DECLARATION_ENTRY*, UInt32, UInt32*, UInt32, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_pixel_shader : Proc(ID3D11Device1*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_hull_shader : Proc(ID3D11Device1*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_domain_shader : Proc(ID3D11Device1*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_compute_shader : Proc(ID3D11Device1*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_class_linkage : Proc(ID3D11Device1*, Void**, Win32cr::Foundation::HRESULT),
    create_blend_state : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_depth_stencil_state : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_rasterizer_state : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_sampler_state : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_SAMPLER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_query : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_predicate : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_counter : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_deferred_context : Proc(ID3D11Device1*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource : Proc(ID3D11Device1*, Win32cr::Foundation::HANDLE, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    check_format_support : Proc(ID3D11Device1*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32*, Win32cr::Foundation::HRESULT),
    check_multisample_quality_levels : Proc(ID3D11Device1*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    check_counter_info : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_INFO*, Void),
    check_counter : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_TYPE*, UInt32*, UInt8*, UInt32*, UInt8*, UInt32*, UInt8*, UInt32*, Win32cr::Foundation::HRESULT),
    check_feature_support : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_FEATURE, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_private_data : Proc(ID3D11Device1*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Device1*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Device1*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_feature_level : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL),
    get_creation_flags : Proc(ID3D11Device1*, UInt32),
    get_device_removed_reason : Proc(ID3D11Device1*, Win32cr::Foundation::HRESULT),
    get_immediate_context : Proc(ID3D11Device1*, Void**, Void),
    set_exception_mode : Proc(ID3D11Device1*, UInt32, Win32cr::Foundation::HRESULT),
    get_exception_mode : Proc(ID3D11Device1*, UInt32),
    get_immediate_context1 : Proc(ID3D11Device1*, Void**, Void),
    create_deferred_context1 : Proc(ID3D11Device1*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_blend_state1 : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_rasterizer_state1 : Proc(ID3D11Device1*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_device_context_state : Proc(ID3D11Device1*, UInt32, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, UInt32, UInt32, LibC::GUID*, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource1 : Proc(ID3D11Device1*, Win32cr::Foundation::HANDLE, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource_by_name : Proc(ID3D11Device1*, Win32cr::Foundation::PWSTR, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11Device1, lpVtbl : ID3D11Device1Vtbl* do
    GUID = LibC::GUID.new(0xa04bfb29_u32, 0x8ef_u16, 0x43d6_u16, StaticArray[0xa4_u8, 0x9c_u8, 0xa9_u8, 0xbd_u8, 0xbd_u8, 0xcb_u8, 0xe6_u8, 0x86_u8])
    def query_interface(this : ID3D11Device1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Device1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Device1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_buffer(this : ID3D11Device1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_buffer.call(this, pDesc, pInitialData, ppBuffer)
    end
    def create_texture1_d(this : ID3D11Device1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE1D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture1D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture1_d.call(this, pDesc, pInitialData, ppTexture1D)
    end
    def create_texture2_d(this : ID3D11Device1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture2D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture2_d.call(this, pDesc, pInitialData, ppTexture2D)
    end
    def create_texture3_d(this : ID3D11Device1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture3D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture3_d.call(this, pDesc, pInitialData, ppTexture3D)
    end
    def create_shader_resource_view(this : ID3D11Device1*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*, ppSRView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_shader_resource_view.call(this, pResource, pDesc, ppSRView)
    end
    def create_unordered_access_view(this : ID3D11Device1*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*, ppUAView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_unordered_access_view.call(this, pResource, pDesc, ppUAView)
    end
    def create_render_target_view(this : ID3D11Device1*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*, ppRTView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_render_target_view.call(this, pResource, pDesc, ppRTView)
    end
    def create_depth_stencil_view(this : ID3D11Device1*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_VIEW_DESC*, ppDepthStencilView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_depth_stencil_view.call(this, pResource, pDesc, ppDepthStencilView)
    end
    def create_input_layout(this : ID3D11Device1*, pInputElementDescs : Win32cr::Graphics::Direct3D11::D3D11_INPUT_ELEMENT_DESC*, num_elements : UInt32, pShaderBytecodeWithInputSignature : Void*, bytecode_length : LibC::UIntPtrT, ppInputLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_input_layout.call(this, pInputElementDescs, num_elements, pShaderBytecodeWithInputSignature, bytecode_length, ppInputLayout)
    end
    def create_vertex_shader(this : ID3D11Device1*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppVertexShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_vertex_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppVertexShader)
    end
    def create_geometry_shader(this : ID3D11Device1*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppGeometryShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_geometry_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppGeometryShader)
    end
    def create_geometry_shader_with_stream_output(this : ID3D11Device1*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pSODeclaration : Win32cr::Graphics::Direct3D11::D3D11_SO_DECLARATION_ENTRY*, num_entries : UInt32, pBufferStrides : UInt32*, num_strides : UInt32, rasterized_stream : UInt32, pClassLinkage : Void*, ppGeometryShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_geometry_shader_with_stream_output.call(this, pShaderBytecode, bytecode_length, pSODeclaration, num_entries, pBufferStrides, num_strides, rasterized_stream, pClassLinkage, ppGeometryShader)
    end
    def create_pixel_shader(this : ID3D11Device1*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppPixelShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_pixel_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppPixelShader)
    end
    def create_hull_shader(this : ID3D11Device1*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppHullShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_hull_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppHullShader)
    end
    def create_domain_shader(this : ID3D11Device1*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppDomainShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_domain_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppDomainShader)
    end
    def create_compute_shader(this : ID3D11Device1*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppComputeShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_compute_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppComputeShader)
    end
    def create_class_linkage(this : ID3D11Device1*, ppLinkage : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_class_linkage.call(this, ppLinkage)
    end
    def create_blend_state(this : ID3D11Device1*, pBlendStateDesc : Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*, ppBlendState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_blend_state.call(this, pBlendStateDesc, ppBlendState)
    end
    def create_depth_stencil_state(this : ID3D11Device1*, pDepthStencilDesc : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_DESC*, ppDepthStencilState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_depth_stencil_state.call(this, pDepthStencilDesc, ppDepthStencilState)
    end
    def create_rasterizer_state(this : ID3D11Device1*, pRasterizerDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*, ppRasterizerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rasterizer_state.call(this, pRasterizerDesc, ppRasterizerState)
    end
    def create_sampler_state(this : ID3D11Device1*, pSamplerDesc : Win32cr::Graphics::Direct3D11::D3D11_SAMPLER_DESC*, ppSamplerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_sampler_state.call(this, pSamplerDesc, ppSamplerState)
    end
    def create_query(this : ID3D11Device1*, pQueryDesc : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, ppQuery : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_query.call(this, pQueryDesc, ppQuery)
    end
    def create_predicate(this : ID3D11Device1*, pPredicateDesc : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, ppPredicate : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_predicate.call(this, pPredicateDesc, ppPredicate)
    end
    def create_counter(this : ID3D11Device1*, pCounterDesc : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, ppCounter : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_counter.call(this, pCounterDesc, ppCounter)
    end
    def create_deferred_context(this : ID3D11Device1*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context.call(this, context_flags, ppDeferredContext)
    end
    def open_shared_resource(this : ID3D11Device1*, hResource : Win32cr::Foundation::HANDLE, returned_interface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource.call(this, hResource, returned_interface, ppResource)
    end
    def check_format_support(this : ID3D11Device1*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, pFormatSupport : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_format_support.call(this, format, pFormatSupport)
    end
    def check_multisample_quality_levels(this : ID3D11Device1*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, sample_count : UInt32, pNumQualityLevels : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_multisample_quality_levels.call(this, format, sample_count, pNumQualityLevels)
    end
    def check_counter_info(this : ID3D11Device1*, pCounterInfo : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_INFO*) : Void
      @lpVtbl.try &.value.check_counter_info.call(this, pCounterInfo)
    end
    def check_counter(this : ID3D11Device1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, pType : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_TYPE*, pActiveCounters : UInt32*, szName : UInt8*, pNameLength : UInt32*, szUnits : UInt8*, pUnitsLength : UInt32*, szDescription : UInt8*, pDescriptionLength : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_counter.call(this, pDesc, pType, pActiveCounters, szName, pNameLength, szUnits, pUnitsLength, szDescription, pDescriptionLength)
    end
    def check_feature_support(this : ID3D11Device1*, feature : Win32cr::Graphics::Direct3D11::D3D11_FEATURE, pFeatureSupportData : Void*, feature_support_data_size : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_feature_support.call(this, feature, pFeatureSupportData, feature_support_data_size)
    end
    def get_private_data(this : ID3D11Device1*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Device1*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Device1*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_feature_level(this : ID3D11Device1*) : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL
      @lpVtbl.try &.value.get_feature_level.call(this)
    end
    def get_creation_flags(this : ID3D11Device1*) : UInt32
      @lpVtbl.try &.value.get_creation_flags.call(this)
    end
    def get_device_removed_reason(this : ID3D11Device1*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_removed_reason.call(this)
    end
    def get_immediate_context(this : ID3D11Device1*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context.call(this, ppImmediateContext)
    end
    def set_exception_mode(this : ID3D11Device1*, raise_flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_exception_mode.call(this, raise_flags)
    end
    def get_exception_mode(this : ID3D11Device1*) : UInt32
      @lpVtbl.try &.value.get_exception_mode.call(this)
    end
    def get_immediate_context1(this : ID3D11Device1*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context1.call(this, ppImmediateContext)
    end
    def create_deferred_context1(this : ID3D11Device1*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context1.call(this, context_flags, ppDeferredContext)
    end
    def create_blend_state1(this : ID3D11Device1*, pBlendStateDesc : Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC1*, ppBlendState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_blend_state1.call(this, pBlendStateDesc, ppBlendState)
    end
    def create_rasterizer_state1(this : ID3D11Device1*, pRasterizerDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC1*, ppRasterizerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rasterizer_state1.call(this, pRasterizerDesc, ppRasterizerState)
    end
    def create_device_context_state(this : ID3D11Device1*, flags : UInt32, pFeatureLevels : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, feature_levels : UInt32, sdk_version : UInt32, emulated_interface : LibC::GUID*, pChosenFeatureLevel : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, ppContextState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device_context_state.call(this, flags, pFeatureLevels, feature_levels, sdk_version, emulated_interface, pChosenFeatureLevel, ppContextState)
    end
    def open_shared_resource1(this : ID3D11Device1*, hResource : Win32cr::Foundation::HANDLE, returnedInterface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource1.call(this, hResource, returnedInterface, ppResource)
    end
    def open_shared_resource_by_name(this : ID3D11Device1*, lpName : Win32cr::Foundation::PWSTR, dwDesiredAccess : UInt32, returnedInterface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource_by_name.call(this, lpName, dwDesiredAccess, returnedInterface, ppResource)
    end

  end

  @[Extern]
  record ID3DUserDefinedAnnotationVtbl,
    query_interface : Proc(ID3DUserDefinedAnnotation*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3DUserDefinedAnnotation*, UInt32),
    release : Proc(ID3DUserDefinedAnnotation*, UInt32),
    begin_event : Proc(ID3DUserDefinedAnnotation*, Win32cr::Foundation::PWSTR, Int32),
    end_event : Proc(ID3DUserDefinedAnnotation*, Int32),
    set_marker : Proc(ID3DUserDefinedAnnotation*, Win32cr::Foundation::PWSTR, Void),
    get_status : Proc(ID3DUserDefinedAnnotation*, Win32cr::Foundation::BOOL)


  @[Extern]
  record ID3DUserDefinedAnnotation, lpVtbl : ID3DUserDefinedAnnotationVtbl* do
    GUID = LibC::GUID.new(0xb2daad8b_u32, 0x3d4_u16, 0x4dbf_u16, StaticArray[0x95_u8, 0xeb_u8, 0x32_u8, 0xab_u8, 0x4b_u8, 0x63_u8, 0xd0_u8, 0xab_u8])
    def query_interface(this : ID3DUserDefinedAnnotation*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3DUserDefinedAnnotation*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3DUserDefinedAnnotation*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def begin_event(this : ID3DUserDefinedAnnotation*, name : Win32cr::Foundation::PWSTR) : Int32
      @lpVtbl.try &.value.begin_event.call(this, name)
    end
    def end_event(this : ID3DUserDefinedAnnotation*) : Int32
      @lpVtbl.try &.value.end_event.call(this)
    end
    def set_marker(this : ID3DUserDefinedAnnotation*, name : Win32cr::Foundation::PWSTR) : Void
      @lpVtbl.try &.value.set_marker.call(this, name)
    end
    def get_status(this : ID3DUserDefinedAnnotation*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.get_status.call(this)
    end

  end

  @[Extern]
  record ID3D11DeviceContext2Vtbl,
    query_interface : Proc(ID3D11DeviceContext2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11DeviceContext2*, UInt32),
    release : Proc(ID3D11DeviceContext2*, UInt32),
    get_device : Proc(ID3D11DeviceContext2*, Void**, Void),
    get_private_data : Proc(ID3D11DeviceContext2*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11DeviceContext2*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11DeviceContext2*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    vs_set_constant_buffers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    ps_set_shader_resources : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    ps_set_shader : Proc(ID3D11DeviceContext2*, Void*, Void**, UInt32, Void),
    ps_set_samplers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    vs_set_shader : Proc(ID3D11DeviceContext2*, Void*, Void**, UInt32, Void),
    draw_indexed : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Int32, Void),
    draw : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void),
    map : Proc(ID3D11DeviceContext2*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_MAP, UInt32, Win32cr::Graphics::Direct3D11::D3D11_MAPPED_SUBRESOURCE*, Win32cr::Foundation::HRESULT),
    unmap : Proc(ID3D11DeviceContext2*, Void*, UInt32, Void),
    ps_set_constant_buffers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    ia_set_input_layout : Proc(ID3D11DeviceContext2*, Void*, Void),
    ia_set_vertex_buffers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ia_set_index_buffer : Proc(ID3D11DeviceContext2*, Void*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, Void),
    draw_indexed_instanced : Proc(ID3D11DeviceContext2*, UInt32, UInt32, UInt32, Int32, UInt32, Void),
    draw_instanced : Proc(ID3D11DeviceContext2*, UInt32, UInt32, UInt32, UInt32, Void),
    gs_set_constant_buffers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    gs_set_shader : Proc(ID3D11DeviceContext2*, Void*, Void**, UInt32, Void),
    ia_set_primitive_topology : Proc(ID3D11DeviceContext2*, Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY, Void),
    vs_set_shader_resources : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    vs_set_samplers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    begin__ : Proc(ID3D11DeviceContext2*, Void*, Void),
    end__ : Proc(ID3D11DeviceContext2*, Void*, Void),
    get_data : Proc(ID3D11DeviceContext2*, Void*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    set_predication : Proc(ID3D11DeviceContext2*, Void*, Win32cr::Foundation::BOOL, Void),
    gs_set_shader_resources : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    gs_set_samplers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    om_set_render_targets : Proc(ID3D11DeviceContext2*, UInt32, Void**, Void*, Void),
    om_set_render_targets_and_unordered_access_views : Proc(ID3D11DeviceContext2*, UInt32, Void**, Void*, UInt32, UInt32, Void**, UInt32*, Void),
    om_set_blend_state : Proc(ID3D11DeviceContext2*, Void*, Float32*, UInt32, Void),
    om_set_depth_stencil_state : Proc(ID3D11DeviceContext2*, Void*, UInt32, Void),
    so_set_targets : Proc(ID3D11DeviceContext2*, UInt32, Void**, UInt32*, Void),
    draw_auto : Proc(ID3D11DeviceContext2*, Void),
    draw_indexed_instanced_indirect : Proc(ID3D11DeviceContext2*, Void*, UInt32, Void),
    draw_instanced_indirect : Proc(ID3D11DeviceContext2*, Void*, UInt32, Void),
    dispatch : Proc(ID3D11DeviceContext2*, UInt32, UInt32, UInt32, Void),
    dispatch_indirect : Proc(ID3D11DeviceContext2*, Void*, UInt32, Void),
    rs_set_state : Proc(ID3D11DeviceContext2*, Void*, Void),
    rs_set_viewports : Proc(ID3D11DeviceContext2*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*, Void),
    rs_set_scissor_rects : Proc(ID3D11DeviceContext2*, UInt32, Win32cr::Foundation::RECT*, Void),
    copy_subresource_region : Proc(ID3D11DeviceContext2*, Void*, UInt32, UInt32, UInt32, UInt32, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void),
    copy_resource : Proc(ID3D11DeviceContext2*, Void*, Void*, Void),
    update_subresource : Proc(ID3D11DeviceContext2*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void*, UInt32, UInt32, Void),
    copy_structure_count : Proc(ID3D11DeviceContext2*, Void*, UInt32, Void*, Void),
    clear_render_target_view : Proc(ID3D11DeviceContext2*, Void*, Float32*, Void),
    clear_unordered_access_view_uint : Proc(ID3D11DeviceContext2*, Void*, UInt32*, Void),
    clear_unordered_access_view_float : Proc(ID3D11DeviceContext2*, Void*, Float32*, Void),
    clear_depth_stencil_view : Proc(ID3D11DeviceContext2*, Void*, UInt32, Float32, UInt8, Void),
    generate_mips : Proc(ID3D11DeviceContext2*, Void*, Void),
    set_resource_min_lod : Proc(ID3D11DeviceContext2*, Void*, Float32, Void),
    get_resource_min_lod : Proc(ID3D11DeviceContext2*, Void*, Float32),
    resolve_subresource : Proc(ID3D11DeviceContext2*, Void*, UInt32, Void*, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, Void),
    execute_command_list : Proc(ID3D11DeviceContext2*, Void*, Win32cr::Foundation::BOOL, Void),
    hs_set_shader_resources : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    hs_set_shader : Proc(ID3D11DeviceContext2*, Void*, Void**, UInt32, Void),
    hs_set_samplers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    hs_set_constant_buffers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    ds_set_shader_resources : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    ds_set_shader : Proc(ID3D11DeviceContext2*, Void*, Void**, UInt32, Void),
    ds_set_samplers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    ds_set_constant_buffers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    cs_set_shader_resources : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    cs_set_unordered_access_views : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, UInt32*, Void),
    cs_set_shader : Proc(ID3D11DeviceContext2*, Void*, Void**, UInt32, Void),
    cs_set_samplers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    cs_set_constant_buffers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    vs_get_constant_buffers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    ps_get_shader_resources : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    ps_get_shader : Proc(ID3D11DeviceContext2*, Void**, Void**, UInt32*, Void),
    ps_get_samplers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    vs_get_shader : Proc(ID3D11DeviceContext2*, Void**, Void**, UInt32*, Void),
    ps_get_constant_buffers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    ia_get_input_layout : Proc(ID3D11DeviceContext2*, Void**, Void),
    ia_get_vertex_buffers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ia_get_index_buffer : Proc(ID3D11DeviceContext2*, Void**, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT*, UInt32*, Void),
    gs_get_constant_buffers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    gs_get_shader : Proc(ID3D11DeviceContext2*, Void**, Void**, UInt32*, Void),
    ia_get_primitive_topology : Proc(ID3D11DeviceContext2*, Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY*, Void),
    vs_get_shader_resources : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    vs_get_samplers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    get_predication : Proc(ID3D11DeviceContext2*, Void**, Win32cr::Foundation::BOOL*, Void),
    gs_get_shader_resources : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    gs_get_samplers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    om_get_render_targets : Proc(ID3D11DeviceContext2*, UInt32, Void**, Void**, Void),
    om_get_render_targets_and_unordered_access_views : Proc(ID3D11DeviceContext2*, UInt32, Void**, Void**, UInt32, UInt32, Void**, Void),
    om_get_blend_state : Proc(ID3D11DeviceContext2*, Void**, Float32*, UInt32*, Void),
    om_get_depth_stencil_state : Proc(ID3D11DeviceContext2*, Void**, UInt32*, Void),
    so_get_targets : Proc(ID3D11DeviceContext2*, UInt32, Void**, Void),
    rs_get_state : Proc(ID3D11DeviceContext2*, Void**, Void),
    rs_get_viewports : Proc(ID3D11DeviceContext2*, UInt32*, Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*, Void),
    rs_get_scissor_rects : Proc(ID3D11DeviceContext2*, UInt32*, Win32cr::Foundation::RECT*, Void),
    hs_get_shader_resources : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    hs_get_shader : Proc(ID3D11DeviceContext2*, Void**, Void**, UInt32*, Void),
    hs_get_samplers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    hs_get_constant_buffers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    ds_get_shader_resources : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    ds_get_shader : Proc(ID3D11DeviceContext2*, Void**, Void**, UInt32*, Void),
    ds_get_samplers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    ds_get_constant_buffers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    cs_get_shader_resources : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    cs_get_unordered_access_views : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    cs_get_shader : Proc(ID3D11DeviceContext2*, Void**, Void**, UInt32*, Void),
    cs_get_samplers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    cs_get_constant_buffers : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, Void),
    clear_state : Proc(ID3D11DeviceContext2*, Void),
    flush : Proc(ID3D11DeviceContext2*, Void),
    get_type : Proc(ID3D11DeviceContext2*, Win32cr::Graphics::Direct3D11::D3D11_DEVICE_CONTEXT_TYPE),
    get_context_flags : Proc(ID3D11DeviceContext2*, UInt32),
    finish_command_list : Proc(ID3D11DeviceContext2*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    copy_subresource_region1 : Proc(ID3D11DeviceContext2*, Void*, UInt32, UInt32, UInt32, UInt32, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, UInt32, Void),
    update_subresource1 : Proc(ID3D11DeviceContext2*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void*, UInt32, UInt32, UInt32, Void),
    discard_resource : Proc(ID3D11DeviceContext2*, Void*, Void),
    discard_view : Proc(ID3D11DeviceContext2*, Void*, Void),
    vs_set_constant_buffers1 : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    hs_set_constant_buffers1 : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ds_set_constant_buffers1 : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    gs_set_constant_buffers1 : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ps_set_constant_buffers1 : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    cs_set_constant_buffers1 : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    vs_get_constant_buffers1 : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    hs_get_constant_buffers1 : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ds_get_constant_buffers1 : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    gs_get_constant_buffers1 : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ps_get_constant_buffers1 : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    cs_get_constant_buffers1 : Proc(ID3D11DeviceContext2*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    swap_device_context_state : Proc(ID3D11DeviceContext2*, Void*, Void**, Void),
    clear_view : Proc(ID3D11DeviceContext2*, Void*, Float32*, Win32cr::Foundation::RECT*, UInt32, Void),
    discard_view1 : Proc(ID3D11DeviceContext2*, Void*, Win32cr::Foundation::RECT*, UInt32, Void),
    update_tile_mappings : Proc(ID3D11DeviceContext2*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, Void*, UInt32, UInt32*, UInt32*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    copy_tile_mappings : Proc(ID3D11DeviceContext2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, Void*, Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, UInt32, Win32cr::Foundation::HRESULT),
    copy_tiles : Proc(ID3D11DeviceContext2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, Void*, UInt64, UInt32, Void),
    update_tiles : Proc(ID3D11DeviceContext2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, Void*, UInt32, Void),
    resize_tile_pool : Proc(ID3D11DeviceContext2*, Void*, UInt64, Win32cr::Foundation::HRESULT),
    tiled_resource_barrier : Proc(ID3D11DeviceContext2*, Void*, Void*, Void),
    is_annotation_enabled : Proc(ID3D11DeviceContext2*, Win32cr::Foundation::BOOL),
    set_marker_int : Proc(ID3D11DeviceContext2*, Win32cr::Foundation::PWSTR, Int32, Void),
    begin_event_int : Proc(ID3D11DeviceContext2*, Win32cr::Foundation::PWSTR, Int32, Void),
    end_event : Proc(ID3D11DeviceContext2*, Void)


  @[Extern]
  record ID3D11DeviceContext2, lpVtbl : ID3D11DeviceContext2Vtbl* do
    GUID = LibC::GUID.new(0x420d5b32_u32, 0xb90c_u16, 0x4da4_u16, StaticArray[0xbe_u8, 0xf0_u8, 0x35_u8, 0x9f_u8, 0x6a_u8, 0x24_u8, 0xa8_u8, 0x3a_u8])
    def query_interface(this : ID3D11DeviceContext2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11DeviceContext2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11DeviceContext2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11DeviceContext2*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11DeviceContext2*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11DeviceContext2*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11DeviceContext2*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def vs_set_constant_buffers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.vs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ps_set_shader_resources(this : ID3D11DeviceContext2*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ps_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ps_set_shader(this : ID3D11DeviceContext2*, pPixelShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.ps_set_shader.call(this, pPixelShader, ppClassInstances, num_class_instances)
    end
    def ps_set_samplers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ps_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def vs_set_shader(this : ID3D11DeviceContext2*, pVertexShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.vs_set_shader.call(this, pVertexShader, ppClassInstances, num_class_instances)
    end
    def draw_indexed(this : ID3D11DeviceContext2*, index_count : UInt32, start_index_location : UInt32, base_vertex_location : Int32) : Void
      @lpVtbl.try &.value.draw_indexed.call(this, index_count, start_index_location, base_vertex_location)
    end
    def draw(this : ID3D11DeviceContext2*, vertex_count : UInt32, start_vertex_location : UInt32) : Void
      @lpVtbl.try &.value.draw.call(this, vertex_count, start_vertex_location)
    end
    def map(this : ID3D11DeviceContext2*, pResource : Void*, subresource : UInt32, map_type : Win32cr::Graphics::Direct3D11::D3D11_MAP, map_flags : UInt32, pMappedResource : Win32cr::Graphics::Direct3D11::D3D11_MAPPED_SUBRESOURCE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.map.call(this, pResource, subresource, map_type, map_flags, pMappedResource)
    end
    def unmap(this : ID3D11DeviceContext2*, pResource : Void*, subresource : UInt32) : Void
      @lpVtbl.try &.value.unmap.call(this, pResource, subresource)
    end
    def ps_set_constant_buffers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ps_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ia_set_input_layout(this : ID3D11DeviceContext2*, pInputLayout : Void*) : Void
      @lpVtbl.try &.value.ia_set_input_layout.call(this, pInputLayout)
    end
    def ia_set_vertex_buffers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppVertexBuffers : Void**, pStrides : UInt32*, pOffsets : UInt32*) : Void
      @lpVtbl.try &.value.ia_set_vertex_buffers.call(this, start_slot, num_buffers, ppVertexBuffers, pStrides, pOffsets)
    end
    def ia_set_index_buffer(this : ID3D11DeviceContext2*, pIndexBuffer : Void*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, offset : UInt32) : Void
      @lpVtbl.try &.value.ia_set_index_buffer.call(this, pIndexBuffer, format, offset)
    end
    def draw_indexed_instanced(this : ID3D11DeviceContext2*, index_count_per_instance : UInt32, instance_count : UInt32, start_index_location : UInt32, base_vertex_location : Int32, start_instance_location : UInt32) : Void
      @lpVtbl.try &.value.draw_indexed_instanced.call(this, index_count_per_instance, instance_count, start_index_location, base_vertex_location, start_instance_location)
    end
    def draw_instanced(this : ID3D11DeviceContext2*, vertex_count_per_instance : UInt32, instance_count : UInt32, start_vertex_location : UInt32, start_instance_location : UInt32) : Void
      @lpVtbl.try &.value.draw_instanced.call(this, vertex_count_per_instance, instance_count, start_vertex_location, start_instance_location)
    end
    def gs_set_constant_buffers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.gs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def gs_set_shader(this : ID3D11DeviceContext2*, pShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.gs_set_shader.call(this, pShader, ppClassInstances, num_class_instances)
    end
    def ia_set_primitive_topology(this : ID3D11DeviceContext2*, topology : Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY) : Void
      @lpVtbl.try &.value.ia_set_primitive_topology.call(this, topology)
    end
    def vs_set_shader_resources(this : ID3D11DeviceContext2*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.vs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def vs_set_samplers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.vs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def begin__(this : ID3D11DeviceContext2*, pAsync : Void*) : Void
      @lpVtbl.try &.value.begin__.call(this, pAsync)
    end
    def end__(this : ID3D11DeviceContext2*, pAsync : Void*) : Void
      @lpVtbl.try &.value.end__.call(this, pAsync)
    end
    def get_data(this : ID3D11DeviceContext2*, pAsync : Void*, pData : Void*, data_size : UInt32, get_data_flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_data.call(this, pAsync, pData, data_size, get_data_flags)
    end
    def set_predication(this : ID3D11DeviceContext2*, pPredicate : Void*, predicate_value : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.set_predication.call(this, pPredicate, predicate_value)
    end
    def gs_set_shader_resources(this : ID3D11DeviceContext2*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.gs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def gs_set_samplers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.gs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def om_set_render_targets(this : ID3D11DeviceContext2*, num_views : UInt32, ppRenderTargetViews : Void**, pDepthStencilView : Void*) : Void
      @lpVtbl.try &.value.om_set_render_targets.call(this, num_views, ppRenderTargetViews, pDepthStencilView)
    end
    def om_set_render_targets_and_unordered_access_views(this : ID3D11DeviceContext2*, num_rt_vs : UInt32, ppRenderTargetViews : Void**, pDepthStencilView : Void*, uav_start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**, pUAVInitialCounts : UInt32*) : Void
      @lpVtbl.try &.value.om_set_render_targets_and_unordered_access_views.call(this, num_rt_vs, ppRenderTargetViews, pDepthStencilView, uav_start_slot, num_ua_vs, ppUnorderedAccessViews, pUAVInitialCounts)
    end
    def om_set_blend_state(this : ID3D11DeviceContext2*, pBlendState : Void*, blend_factor : Float32*, sample_mask : UInt32) : Void
      @lpVtbl.try &.value.om_set_blend_state.call(this, pBlendState, blend_factor, sample_mask)
    end
    def om_set_depth_stencil_state(this : ID3D11DeviceContext2*, pDepthStencilState : Void*, stencil_ref : UInt32) : Void
      @lpVtbl.try &.value.om_set_depth_stencil_state.call(this, pDepthStencilState, stencil_ref)
    end
    def so_set_targets(this : ID3D11DeviceContext2*, num_buffers : UInt32, ppSOTargets : Void**, pOffsets : UInt32*) : Void
      @lpVtbl.try &.value.so_set_targets.call(this, num_buffers, ppSOTargets, pOffsets)
    end
    def draw_auto(this : ID3D11DeviceContext2*) : Void
      @lpVtbl.try &.value.draw_auto.call(this)
    end
    def draw_indexed_instanced_indirect(this : ID3D11DeviceContext2*, pBufferForArgs : Void*, aligned_byte_offset_for_args : UInt32) : Void
      @lpVtbl.try &.value.draw_indexed_instanced_indirect.call(this, pBufferForArgs, aligned_byte_offset_for_args)
    end
    def draw_instanced_indirect(this : ID3D11DeviceContext2*, pBufferForArgs : Void*, aligned_byte_offset_for_args : UInt32) : Void
      @lpVtbl.try &.value.draw_instanced_indirect.call(this, pBufferForArgs, aligned_byte_offset_for_args)
    end
    def dispatch(this : ID3D11DeviceContext2*, thread_group_count_x : UInt32, thread_group_count_y : UInt32, thread_group_count_z : UInt32) : Void
      @lpVtbl.try &.value.dispatch.call(this, thread_group_count_x, thread_group_count_y, thread_group_count_z)
    end
    def dispatch_indirect(this : ID3D11DeviceContext2*, pBufferForArgs : Void*, aligned_byte_offset_for_args : UInt32) : Void
      @lpVtbl.try &.value.dispatch_indirect.call(this, pBufferForArgs, aligned_byte_offset_for_args)
    end
    def rs_set_state(this : ID3D11DeviceContext2*, pRasterizerState : Void*) : Void
      @lpVtbl.try &.value.rs_set_state.call(this, pRasterizerState)
    end
    def rs_set_viewports(this : ID3D11DeviceContext2*, num_viewports : UInt32, pViewports : Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*) : Void
      @lpVtbl.try &.value.rs_set_viewports.call(this, num_viewports, pViewports)
    end
    def rs_set_scissor_rects(this : ID3D11DeviceContext2*, num_rects : UInt32, pRects : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.rs_set_scissor_rects.call(this, num_rects, pRects)
    end
    def copy_subresource_region(this : ID3D11DeviceContext2*, pDstResource : Void*, dst_subresource : UInt32, dst_x : UInt32, dst_y : UInt32, dst_z : UInt32, pSrcResource : Void*, src_subresource : UInt32, pSrcBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*) : Void
      @lpVtbl.try &.value.copy_subresource_region.call(this, pDstResource, dst_subresource, dst_x, dst_y, dst_z, pSrcResource, src_subresource, pSrcBox)
    end
    def copy_resource(this : ID3D11DeviceContext2*, pDstResource : Void*, pSrcResource : Void*) : Void
      @lpVtbl.try &.value.copy_resource.call(this, pDstResource, pSrcResource)
    end
    def update_subresource(this : ID3D11DeviceContext2*, pDstResource : Void*, dst_subresource : UInt32, pDstBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, pSrcData : Void*, src_row_pitch : UInt32, src_depth_pitch : UInt32) : Void
      @lpVtbl.try &.value.update_subresource.call(this, pDstResource, dst_subresource, pDstBox, pSrcData, src_row_pitch, src_depth_pitch)
    end
    def copy_structure_count(this : ID3D11DeviceContext2*, pDstBuffer : Void*, dst_aligned_byte_offset : UInt32, pSrcView : Void*) : Void
      @lpVtbl.try &.value.copy_structure_count.call(this, pDstBuffer, dst_aligned_byte_offset, pSrcView)
    end
    def clear_render_target_view(this : ID3D11DeviceContext2*, pRenderTargetView : Void*, color_rgba : Float32*) : Void
      @lpVtbl.try &.value.clear_render_target_view.call(this, pRenderTargetView, color_rgba)
    end
    def clear_unordered_access_view_uint(this : ID3D11DeviceContext2*, pUnorderedAccessView : Void*, values : UInt32*) : Void
      @lpVtbl.try &.value.clear_unordered_access_view_uint.call(this, pUnorderedAccessView, values)
    end
    def clear_unordered_access_view_float(this : ID3D11DeviceContext2*, pUnorderedAccessView : Void*, values : Float32*) : Void
      @lpVtbl.try &.value.clear_unordered_access_view_float.call(this, pUnorderedAccessView, values)
    end
    def clear_depth_stencil_view(this : ID3D11DeviceContext2*, pDepthStencilView : Void*, clear_flags : UInt32, depth : Float32, stencil : UInt8) : Void
      @lpVtbl.try &.value.clear_depth_stencil_view.call(this, pDepthStencilView, clear_flags, depth, stencil)
    end
    def generate_mips(this : ID3D11DeviceContext2*, pShaderResourceView : Void*) : Void
      @lpVtbl.try &.value.generate_mips.call(this, pShaderResourceView)
    end
    def set_resource_min_lod(this : ID3D11DeviceContext2*, pResource : Void*, min_lod : Float32) : Void
      @lpVtbl.try &.value.set_resource_min_lod.call(this, pResource, min_lod)
    end
    def get_resource_min_lod(this : ID3D11DeviceContext2*, pResource : Void*) : Float32
      @lpVtbl.try &.value.get_resource_min_lod.call(this, pResource)
    end
    def resolve_subresource(this : ID3D11DeviceContext2*, pDstResource : Void*, dst_subresource : UInt32, pSrcResource : Void*, src_subresource : UInt32, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT) : Void
      @lpVtbl.try &.value.resolve_subresource.call(this, pDstResource, dst_subresource, pSrcResource, src_subresource, format)
    end
    def execute_command_list(this : ID3D11DeviceContext2*, pCommandList : Void*, restore_context_state : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.execute_command_list.call(this, pCommandList, restore_context_state)
    end
    def hs_set_shader_resources(this : ID3D11DeviceContext2*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.hs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def hs_set_shader(this : ID3D11DeviceContext2*, pHullShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.hs_set_shader.call(this, pHullShader, ppClassInstances, num_class_instances)
    end
    def hs_set_samplers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.hs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def hs_set_constant_buffers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.hs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ds_set_shader_resources(this : ID3D11DeviceContext2*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ds_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ds_set_shader(this : ID3D11DeviceContext2*, pDomainShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.ds_set_shader.call(this, pDomainShader, ppClassInstances, num_class_instances)
    end
    def ds_set_samplers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ds_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def ds_set_constant_buffers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ds_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def cs_set_shader_resources(this : ID3D11DeviceContext2*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.cs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def cs_set_unordered_access_views(this : ID3D11DeviceContext2*, start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**, pUAVInitialCounts : UInt32*) : Void
      @lpVtbl.try &.value.cs_set_unordered_access_views.call(this, start_slot, num_ua_vs, ppUnorderedAccessViews, pUAVInitialCounts)
    end
    def cs_set_shader(this : ID3D11DeviceContext2*, pComputeShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.cs_set_shader.call(this, pComputeShader, ppClassInstances, num_class_instances)
    end
    def cs_set_samplers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.cs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def cs_set_constant_buffers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.cs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def vs_get_constant_buffers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.vs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ps_get_shader_resources(this : ID3D11DeviceContext2*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ps_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ps_get_shader(this : ID3D11DeviceContext2*, ppPixelShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.ps_get_shader.call(this, ppPixelShader, ppClassInstances, pNumClassInstances)
    end
    def ps_get_samplers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ps_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def vs_get_shader(this : ID3D11DeviceContext2*, ppVertexShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.vs_get_shader.call(this, ppVertexShader, ppClassInstances, pNumClassInstances)
    end
    def ps_get_constant_buffers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ps_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ia_get_input_layout(this : ID3D11DeviceContext2*, ppInputLayout : Void**) : Void
      @lpVtbl.try &.value.ia_get_input_layout.call(this, ppInputLayout)
    end
    def ia_get_vertex_buffers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppVertexBuffers : Void**, pStrides : UInt32*, pOffsets : UInt32*) : Void
      @lpVtbl.try &.value.ia_get_vertex_buffers.call(this, start_slot, num_buffers, ppVertexBuffers, pStrides, pOffsets)
    end
    def ia_get_index_buffer(this : ID3D11DeviceContext2*, pIndexBuffer : Void**, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT*, offset : UInt32*) : Void
      @lpVtbl.try &.value.ia_get_index_buffer.call(this, pIndexBuffer, format, offset)
    end
    def gs_get_constant_buffers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.gs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def gs_get_shader(this : ID3D11DeviceContext2*, ppGeometryShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.gs_get_shader.call(this, ppGeometryShader, ppClassInstances, pNumClassInstances)
    end
    def ia_get_primitive_topology(this : ID3D11DeviceContext2*, pTopology : Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY*) : Void
      @lpVtbl.try &.value.ia_get_primitive_topology.call(this, pTopology)
    end
    def vs_get_shader_resources(this : ID3D11DeviceContext2*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.vs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def vs_get_samplers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.vs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def get_predication(this : ID3D11DeviceContext2*, ppPredicate : Void**, pPredicateValue : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.get_predication.call(this, ppPredicate, pPredicateValue)
    end
    def gs_get_shader_resources(this : ID3D11DeviceContext2*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.gs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def gs_get_samplers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.gs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def om_get_render_targets(this : ID3D11DeviceContext2*, num_views : UInt32, ppRenderTargetViews : Void**, ppDepthStencilView : Void**) : Void
      @lpVtbl.try &.value.om_get_render_targets.call(this, num_views, ppRenderTargetViews, ppDepthStencilView)
    end
    def om_get_render_targets_and_unordered_access_views(this : ID3D11DeviceContext2*, num_rt_vs : UInt32, ppRenderTargetViews : Void**, ppDepthStencilView : Void**, uav_start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**) : Void
      @lpVtbl.try &.value.om_get_render_targets_and_unordered_access_views.call(this, num_rt_vs, ppRenderTargetViews, ppDepthStencilView, uav_start_slot, num_ua_vs, ppUnorderedAccessViews)
    end
    def om_get_blend_state(this : ID3D11DeviceContext2*, ppBlendState : Void**, blend_factor : Float32*, pSampleMask : UInt32*) : Void
      @lpVtbl.try &.value.om_get_blend_state.call(this, ppBlendState, blend_factor, pSampleMask)
    end
    def om_get_depth_stencil_state(this : ID3D11DeviceContext2*, ppDepthStencilState : Void**, pStencilRef : UInt32*) : Void
      @lpVtbl.try &.value.om_get_depth_stencil_state.call(this, ppDepthStencilState, pStencilRef)
    end
    def so_get_targets(this : ID3D11DeviceContext2*, num_buffers : UInt32, ppSOTargets : Void**) : Void
      @lpVtbl.try &.value.so_get_targets.call(this, num_buffers, ppSOTargets)
    end
    def rs_get_state(this : ID3D11DeviceContext2*, ppRasterizerState : Void**) : Void
      @lpVtbl.try &.value.rs_get_state.call(this, ppRasterizerState)
    end
    def rs_get_viewports(this : ID3D11DeviceContext2*, pNumViewports : UInt32*, pViewports : Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*) : Void
      @lpVtbl.try &.value.rs_get_viewports.call(this, pNumViewports, pViewports)
    end
    def rs_get_scissor_rects(this : ID3D11DeviceContext2*, pNumRects : UInt32*, pRects : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.rs_get_scissor_rects.call(this, pNumRects, pRects)
    end
    def hs_get_shader_resources(this : ID3D11DeviceContext2*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.hs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def hs_get_shader(this : ID3D11DeviceContext2*, ppHullShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.hs_get_shader.call(this, ppHullShader, ppClassInstances, pNumClassInstances)
    end
    def hs_get_samplers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.hs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def hs_get_constant_buffers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.hs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ds_get_shader_resources(this : ID3D11DeviceContext2*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ds_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ds_get_shader(this : ID3D11DeviceContext2*, ppDomainShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.ds_get_shader.call(this, ppDomainShader, ppClassInstances, pNumClassInstances)
    end
    def ds_get_samplers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ds_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def ds_get_constant_buffers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ds_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def cs_get_shader_resources(this : ID3D11DeviceContext2*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.cs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def cs_get_unordered_access_views(this : ID3D11DeviceContext2*, start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**) : Void
      @lpVtbl.try &.value.cs_get_unordered_access_views.call(this, start_slot, num_ua_vs, ppUnorderedAccessViews)
    end
    def cs_get_shader(this : ID3D11DeviceContext2*, ppComputeShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.cs_get_shader.call(this, ppComputeShader, ppClassInstances, pNumClassInstances)
    end
    def cs_get_samplers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.cs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def cs_get_constant_buffers(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.cs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def clear_state(this : ID3D11DeviceContext2*) : Void
      @lpVtbl.try &.value.clear_state.call(this)
    end
    def flush(this : ID3D11DeviceContext2*) : Void
      @lpVtbl.try &.value.flush.call(this)
    end
    def get_type(this : ID3D11DeviceContext2*) : Win32cr::Graphics::Direct3D11::D3D11_DEVICE_CONTEXT_TYPE
      @lpVtbl.try &.value.get_type.call(this)
    end
    def get_context_flags(this : ID3D11DeviceContext2*) : UInt32
      @lpVtbl.try &.value.get_context_flags.call(this)
    end
    def finish_command_list(this : ID3D11DeviceContext2*, restore_deferred_context_state : Win32cr::Foundation::BOOL, ppCommandList : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.finish_command_list.call(this, restore_deferred_context_state, ppCommandList)
    end
    def copy_subresource_region1(this : ID3D11DeviceContext2*, pDstResource : Void*, dst_subresource : UInt32, dst_x : UInt32, dst_y : UInt32, dst_z : UInt32, pSrcResource : Void*, src_subresource : UInt32, pSrcBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, copy_flags : UInt32) : Void
      @lpVtbl.try &.value.copy_subresource_region1.call(this, pDstResource, dst_subresource, dst_x, dst_y, dst_z, pSrcResource, src_subresource, pSrcBox, copy_flags)
    end
    def update_subresource1(this : ID3D11DeviceContext2*, pDstResource : Void*, dst_subresource : UInt32, pDstBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, pSrcData : Void*, src_row_pitch : UInt32, src_depth_pitch : UInt32, copy_flags : UInt32) : Void
      @lpVtbl.try &.value.update_subresource1.call(this, pDstResource, dst_subresource, pDstBox, pSrcData, src_row_pitch, src_depth_pitch, copy_flags)
    end
    def discard_resource(this : ID3D11DeviceContext2*, pResource : Void*) : Void
      @lpVtbl.try &.value.discard_resource.call(this, pResource)
    end
    def discard_view(this : ID3D11DeviceContext2*, pResourceView : Void*) : Void
      @lpVtbl.try &.value.discard_view.call(this, pResourceView)
    end
    def vs_set_constant_buffers1(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.vs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def hs_set_constant_buffers1(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.hs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ds_set_constant_buffers1(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ds_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def gs_set_constant_buffers1(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.gs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ps_set_constant_buffers1(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ps_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def cs_set_constant_buffers1(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.cs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def vs_get_constant_buffers1(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.vs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def hs_get_constant_buffers1(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.hs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ds_get_constant_buffers1(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ds_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def gs_get_constant_buffers1(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.gs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ps_get_constant_buffers1(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ps_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def cs_get_constant_buffers1(this : ID3D11DeviceContext2*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.cs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def swap_device_context_state(this : ID3D11DeviceContext2*, pState : Void*, ppPreviousState : Void**) : Void
      @lpVtbl.try &.value.swap_device_context_state.call(this, pState, ppPreviousState)
    end
    def clear_view(this : ID3D11DeviceContext2*, pView : Void*, color : Float32*, pRect : Win32cr::Foundation::RECT*, num_rects : UInt32) : Void
      @lpVtbl.try &.value.clear_view.call(this, pView, color, pRect, num_rects)
    end
    def discard_view1(this : ID3D11DeviceContext2*, pResourceView : Void*, pRects : Win32cr::Foundation::RECT*, num_rects : UInt32) : Void
      @lpVtbl.try &.value.discard_view1.call(this, pResourceView, pRects, num_rects)
    end
    def update_tile_mappings(this : ID3D11DeviceContext2*, pTiledResource : Void*, num_tiled_resource_regions : UInt32, pTiledResourceRegionStartCoordinates : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, pTiledResourceRegionSizes : Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, pTilePool : Void*, num_ranges : UInt32, pRangeFlags : UInt32*, pTilePoolStartOffsets : UInt32*, pRangeTileCounts : UInt32*, flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_tile_mappings.call(this, pTiledResource, num_tiled_resource_regions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, num_ranges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags)
    end
    def copy_tile_mappings(this : ID3D11DeviceContext2*, pDestTiledResource : Void*, pDestRegionStartCoordinate : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, pSourceTiledResource : Void*, pSourceRegionStartCoordinate : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, pTileRegionSize : Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_tile_mappings.call(this, pDestTiledResource, pDestRegionStartCoordinate, pSourceTiledResource, pSourceRegionStartCoordinate, pTileRegionSize, flags)
    end
    def copy_tiles(this : ID3D11DeviceContext2*, pTiledResource : Void*, pTileRegionStartCoordinate : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, pTileRegionSize : Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, pBuffer : Void*, buffer_start_offset_in_bytes : UInt64, flags : UInt32) : Void
      @lpVtbl.try &.value.copy_tiles.call(this, pTiledResource, pTileRegionStartCoordinate, pTileRegionSize, pBuffer, buffer_start_offset_in_bytes, flags)
    end
    def update_tiles(this : ID3D11DeviceContext2*, pDestTiledResource : Void*, pDestTileRegionStartCoordinate : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, pDestTileRegionSize : Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, pSourceTileData : Void*, flags : UInt32) : Void
      @lpVtbl.try &.value.update_tiles.call(this, pDestTiledResource, pDestTileRegionStartCoordinate, pDestTileRegionSize, pSourceTileData, flags)
    end
    def resize_tile_pool(this : ID3D11DeviceContext2*, pTilePool : Void*, new_size_in_bytes : UInt64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resize_tile_pool.call(this, pTilePool, new_size_in_bytes)
    end
    def tiled_resource_barrier(this : ID3D11DeviceContext2*, pTiledResourceOrViewAccessBeforeBarrier : Void*, pTiledResourceOrViewAccessAfterBarrier : Void*) : Void
      @lpVtbl.try &.value.tiled_resource_barrier.call(this, pTiledResourceOrViewAccessBeforeBarrier, pTiledResourceOrViewAccessAfterBarrier)
    end
    def is_annotation_enabled(this : ID3D11DeviceContext2*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_annotation_enabled.call(this)
    end
    def set_marker_int(this : ID3D11DeviceContext2*, pLabel : Win32cr::Foundation::PWSTR, data : Int32) : Void
      @lpVtbl.try &.value.set_marker_int.call(this, pLabel, data)
    end
    def begin_event_int(this : ID3D11DeviceContext2*, pLabel : Win32cr::Foundation::PWSTR, data : Int32) : Void
      @lpVtbl.try &.value.begin_event_int.call(this, pLabel, data)
    end
    def end_event(this : ID3D11DeviceContext2*) : Void
      @lpVtbl.try &.value.end_event.call(this)
    end

  end

  @[Extern]
  record ID3D11Device2Vtbl,
    query_interface : Proc(ID3D11Device2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Device2*, UInt32),
    release : Proc(ID3D11Device2*, UInt32),
    create_buffer : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_BUFFER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture1_d : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE1D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture2_d : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture3_d : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_shader_resource_view : Proc(ID3D11Device2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_unordered_access_view : Proc(ID3D11Device2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_render_target_view : Proc(ID3D11Device2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_depth_stencil_view : Proc(ID3D11Device2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_input_layout : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_INPUT_ELEMENT_DESC*, UInt32, Void*, LibC::UIntPtrT, Void**, Win32cr::Foundation::HRESULT),
    create_vertex_shader : Proc(ID3D11Device2*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_geometry_shader : Proc(ID3D11Device2*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_geometry_shader_with_stream_output : Proc(ID3D11Device2*, Void*, LibC::UIntPtrT, Win32cr::Graphics::Direct3D11::D3D11_SO_DECLARATION_ENTRY*, UInt32, UInt32*, UInt32, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_pixel_shader : Proc(ID3D11Device2*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_hull_shader : Proc(ID3D11Device2*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_domain_shader : Proc(ID3D11Device2*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_compute_shader : Proc(ID3D11Device2*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_class_linkage : Proc(ID3D11Device2*, Void**, Win32cr::Foundation::HRESULT),
    create_blend_state : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_depth_stencil_state : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_rasterizer_state : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_sampler_state : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_SAMPLER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_query : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_predicate : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_counter : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_deferred_context : Proc(ID3D11Device2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource : Proc(ID3D11Device2*, Win32cr::Foundation::HANDLE, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    check_format_support : Proc(ID3D11Device2*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32*, Win32cr::Foundation::HRESULT),
    check_multisample_quality_levels : Proc(ID3D11Device2*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    check_counter_info : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_INFO*, Void),
    check_counter : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_TYPE*, UInt32*, UInt8*, UInt32*, UInt8*, UInt32*, UInt8*, UInt32*, Win32cr::Foundation::HRESULT),
    check_feature_support : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_FEATURE, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_private_data : Proc(ID3D11Device2*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Device2*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Device2*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_feature_level : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL),
    get_creation_flags : Proc(ID3D11Device2*, UInt32),
    get_device_removed_reason : Proc(ID3D11Device2*, Win32cr::Foundation::HRESULT),
    get_immediate_context : Proc(ID3D11Device2*, Void**, Void),
    set_exception_mode : Proc(ID3D11Device2*, UInt32, Win32cr::Foundation::HRESULT),
    get_exception_mode : Proc(ID3D11Device2*, UInt32),
    get_immediate_context1 : Proc(ID3D11Device2*, Void**, Void),
    create_deferred_context1 : Proc(ID3D11Device2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_blend_state1 : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_rasterizer_state1 : Proc(ID3D11Device2*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_device_context_state : Proc(ID3D11Device2*, UInt32, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, UInt32, UInt32, LibC::GUID*, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource1 : Proc(ID3D11Device2*, Win32cr::Foundation::HANDLE, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource_by_name : Proc(ID3D11Device2*, Win32cr::Foundation::PWSTR, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_immediate_context2 : Proc(ID3D11Device2*, Void**, Void),
    create_deferred_context2 : Proc(ID3D11Device2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_resource_tiling : Proc(ID3D11Device2*, Void*, UInt32*, Win32cr::Graphics::Direct3D11::D3D11_PACKED_MIP_DESC*, Win32cr::Graphics::Direct3D11::D3D11_TILE_SHAPE*, UInt32*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_TILING*, Void),
    check_multisample_quality_levels1 : Proc(ID3D11Device2*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, UInt32, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11Device2, lpVtbl : ID3D11Device2Vtbl* do
    GUID = LibC::GUID.new(0x9d06dffa_u32, 0xd1e5_u16, 0x4d07_u16, StaticArray[0x83_u8, 0xa8_u8, 0x1b_u8, 0xb1_u8, 0x23_u8, 0xf2_u8, 0xf8_u8, 0x41_u8])
    def query_interface(this : ID3D11Device2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Device2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Device2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_buffer(this : ID3D11Device2*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_buffer.call(this, pDesc, pInitialData, ppBuffer)
    end
    def create_texture1_d(this : ID3D11Device2*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE1D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture1D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture1_d.call(this, pDesc, pInitialData, ppTexture1D)
    end
    def create_texture2_d(this : ID3D11Device2*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture2D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture2_d.call(this, pDesc, pInitialData, ppTexture2D)
    end
    def create_texture3_d(this : ID3D11Device2*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture3D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture3_d.call(this, pDesc, pInitialData, ppTexture3D)
    end
    def create_shader_resource_view(this : ID3D11Device2*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*, ppSRView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_shader_resource_view.call(this, pResource, pDesc, ppSRView)
    end
    def create_unordered_access_view(this : ID3D11Device2*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*, ppUAView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_unordered_access_view.call(this, pResource, pDesc, ppUAView)
    end
    def create_render_target_view(this : ID3D11Device2*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*, ppRTView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_render_target_view.call(this, pResource, pDesc, ppRTView)
    end
    def create_depth_stencil_view(this : ID3D11Device2*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_VIEW_DESC*, ppDepthStencilView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_depth_stencil_view.call(this, pResource, pDesc, ppDepthStencilView)
    end
    def create_input_layout(this : ID3D11Device2*, pInputElementDescs : Win32cr::Graphics::Direct3D11::D3D11_INPUT_ELEMENT_DESC*, num_elements : UInt32, pShaderBytecodeWithInputSignature : Void*, bytecode_length : LibC::UIntPtrT, ppInputLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_input_layout.call(this, pInputElementDescs, num_elements, pShaderBytecodeWithInputSignature, bytecode_length, ppInputLayout)
    end
    def create_vertex_shader(this : ID3D11Device2*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppVertexShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_vertex_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppVertexShader)
    end
    def create_geometry_shader(this : ID3D11Device2*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppGeometryShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_geometry_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppGeometryShader)
    end
    def create_geometry_shader_with_stream_output(this : ID3D11Device2*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pSODeclaration : Win32cr::Graphics::Direct3D11::D3D11_SO_DECLARATION_ENTRY*, num_entries : UInt32, pBufferStrides : UInt32*, num_strides : UInt32, rasterized_stream : UInt32, pClassLinkage : Void*, ppGeometryShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_geometry_shader_with_stream_output.call(this, pShaderBytecode, bytecode_length, pSODeclaration, num_entries, pBufferStrides, num_strides, rasterized_stream, pClassLinkage, ppGeometryShader)
    end
    def create_pixel_shader(this : ID3D11Device2*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppPixelShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_pixel_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppPixelShader)
    end
    def create_hull_shader(this : ID3D11Device2*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppHullShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_hull_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppHullShader)
    end
    def create_domain_shader(this : ID3D11Device2*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppDomainShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_domain_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppDomainShader)
    end
    def create_compute_shader(this : ID3D11Device2*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppComputeShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_compute_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppComputeShader)
    end
    def create_class_linkage(this : ID3D11Device2*, ppLinkage : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_class_linkage.call(this, ppLinkage)
    end
    def create_blend_state(this : ID3D11Device2*, pBlendStateDesc : Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*, ppBlendState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_blend_state.call(this, pBlendStateDesc, ppBlendState)
    end
    def create_depth_stencil_state(this : ID3D11Device2*, pDepthStencilDesc : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_DESC*, ppDepthStencilState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_depth_stencil_state.call(this, pDepthStencilDesc, ppDepthStencilState)
    end
    def create_rasterizer_state(this : ID3D11Device2*, pRasterizerDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*, ppRasterizerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rasterizer_state.call(this, pRasterizerDesc, ppRasterizerState)
    end
    def create_sampler_state(this : ID3D11Device2*, pSamplerDesc : Win32cr::Graphics::Direct3D11::D3D11_SAMPLER_DESC*, ppSamplerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_sampler_state.call(this, pSamplerDesc, ppSamplerState)
    end
    def create_query(this : ID3D11Device2*, pQueryDesc : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, ppQuery : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_query.call(this, pQueryDesc, ppQuery)
    end
    def create_predicate(this : ID3D11Device2*, pPredicateDesc : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, ppPredicate : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_predicate.call(this, pPredicateDesc, ppPredicate)
    end
    def create_counter(this : ID3D11Device2*, pCounterDesc : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, ppCounter : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_counter.call(this, pCounterDesc, ppCounter)
    end
    def create_deferred_context(this : ID3D11Device2*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context.call(this, context_flags, ppDeferredContext)
    end
    def open_shared_resource(this : ID3D11Device2*, hResource : Win32cr::Foundation::HANDLE, returned_interface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource.call(this, hResource, returned_interface, ppResource)
    end
    def check_format_support(this : ID3D11Device2*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, pFormatSupport : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_format_support.call(this, format, pFormatSupport)
    end
    def check_multisample_quality_levels(this : ID3D11Device2*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, sample_count : UInt32, pNumQualityLevels : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_multisample_quality_levels.call(this, format, sample_count, pNumQualityLevels)
    end
    def check_counter_info(this : ID3D11Device2*, pCounterInfo : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_INFO*) : Void
      @lpVtbl.try &.value.check_counter_info.call(this, pCounterInfo)
    end
    def check_counter(this : ID3D11Device2*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, pType : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_TYPE*, pActiveCounters : UInt32*, szName : UInt8*, pNameLength : UInt32*, szUnits : UInt8*, pUnitsLength : UInt32*, szDescription : UInt8*, pDescriptionLength : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_counter.call(this, pDesc, pType, pActiveCounters, szName, pNameLength, szUnits, pUnitsLength, szDescription, pDescriptionLength)
    end
    def check_feature_support(this : ID3D11Device2*, feature : Win32cr::Graphics::Direct3D11::D3D11_FEATURE, pFeatureSupportData : Void*, feature_support_data_size : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_feature_support.call(this, feature, pFeatureSupportData, feature_support_data_size)
    end
    def get_private_data(this : ID3D11Device2*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Device2*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Device2*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_feature_level(this : ID3D11Device2*) : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL
      @lpVtbl.try &.value.get_feature_level.call(this)
    end
    def get_creation_flags(this : ID3D11Device2*) : UInt32
      @lpVtbl.try &.value.get_creation_flags.call(this)
    end
    def get_device_removed_reason(this : ID3D11Device2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_removed_reason.call(this)
    end
    def get_immediate_context(this : ID3D11Device2*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context.call(this, ppImmediateContext)
    end
    def set_exception_mode(this : ID3D11Device2*, raise_flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_exception_mode.call(this, raise_flags)
    end
    def get_exception_mode(this : ID3D11Device2*) : UInt32
      @lpVtbl.try &.value.get_exception_mode.call(this)
    end
    def get_immediate_context1(this : ID3D11Device2*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context1.call(this, ppImmediateContext)
    end
    def create_deferred_context1(this : ID3D11Device2*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context1.call(this, context_flags, ppDeferredContext)
    end
    def create_blend_state1(this : ID3D11Device2*, pBlendStateDesc : Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC1*, ppBlendState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_blend_state1.call(this, pBlendStateDesc, ppBlendState)
    end
    def create_rasterizer_state1(this : ID3D11Device2*, pRasterizerDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC1*, ppRasterizerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rasterizer_state1.call(this, pRasterizerDesc, ppRasterizerState)
    end
    def create_device_context_state(this : ID3D11Device2*, flags : UInt32, pFeatureLevels : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, feature_levels : UInt32, sdk_version : UInt32, emulated_interface : LibC::GUID*, pChosenFeatureLevel : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, ppContextState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device_context_state.call(this, flags, pFeatureLevels, feature_levels, sdk_version, emulated_interface, pChosenFeatureLevel, ppContextState)
    end
    def open_shared_resource1(this : ID3D11Device2*, hResource : Win32cr::Foundation::HANDLE, returnedInterface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource1.call(this, hResource, returnedInterface, ppResource)
    end
    def open_shared_resource_by_name(this : ID3D11Device2*, lpName : Win32cr::Foundation::PWSTR, dwDesiredAccess : UInt32, returnedInterface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource_by_name.call(this, lpName, dwDesiredAccess, returnedInterface, ppResource)
    end
    def get_immediate_context2(this : ID3D11Device2*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context2.call(this, ppImmediateContext)
    end
    def create_deferred_context2(this : ID3D11Device2*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context2.call(this, context_flags, ppDeferredContext)
    end
    def get_resource_tiling(this : ID3D11Device2*, pTiledResource : Void*, pNumTilesForEntireResource : UInt32*, pPackedMipDesc : Win32cr::Graphics::Direct3D11::D3D11_PACKED_MIP_DESC*, pStandardTileShapeForNonPackedMips : Win32cr::Graphics::Direct3D11::D3D11_TILE_SHAPE*, pNumSubresourceTilings : UInt32*, first_subresource_tiling_to_get : UInt32, pSubresourceTilingsForNonPackedMips : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_TILING*) : Void
      @lpVtbl.try &.value.get_resource_tiling.call(this, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, first_subresource_tiling_to_get, pSubresourceTilingsForNonPackedMips)
    end
    def check_multisample_quality_levels1(this : ID3D11Device2*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, sample_count : UInt32, flags : UInt32, pNumQualityLevels : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_multisample_quality_levels1.call(this, format, sample_count, flags, pNumQualityLevels)
    end

  end

  @[Extern]
  record ID3D11Texture2D1Vtbl,
    query_interface : Proc(ID3D11Texture2D1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Texture2D1*, UInt32),
    release : Proc(ID3D11Texture2D1*, UInt32),
    get_device : Proc(ID3D11Texture2D1*, Void**, Void),
    get_private_data : Proc(ID3D11Texture2D1*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Texture2D1*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Texture2D1*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_type : Proc(ID3D11Texture2D1*, Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_DIMENSION*, Void),
    set_eviction_priority : Proc(ID3D11Texture2D1*, UInt32, Void),
    get_eviction_priority : Proc(ID3D11Texture2D1*, UInt32),
    get_desc : Proc(ID3D11Texture2D1*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*, Void),
    get_desc1 : Proc(ID3D11Texture2D1*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC1*, Void)


  @[Extern]
  record ID3D11Texture2D1, lpVtbl : ID3D11Texture2D1Vtbl* do
    GUID = LibC::GUID.new(0x51218251_u32, 0x1e33_u16, 0x4617_u16, StaticArray[0x9c_u8, 0xcb_u8, 0x4d_u8, 0x3a_u8, 0x43_u8, 0x67_u8, 0xe7_u8, 0xbb_u8])
    def query_interface(this : ID3D11Texture2D1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Texture2D1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Texture2D1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11Texture2D1*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11Texture2D1*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Texture2D1*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Texture2D1*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_type(this : ID3D11Texture2D1*, pResourceDimension : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_DIMENSION*) : Void
      @lpVtbl.try &.value.get_type.call(this, pResourceDimension)
    end
    def set_eviction_priority(this : ID3D11Texture2D1*, eviction_priority : UInt32) : Void
      @lpVtbl.try &.value.set_eviction_priority.call(this, eviction_priority)
    end
    def get_eviction_priority(this : ID3D11Texture2D1*) : UInt32
      @lpVtbl.try &.value.get_eviction_priority.call(this)
    end
    def get_desc(this : ID3D11Texture2D1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_desc1(this : ID3D11Texture2D1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC1*) : Void
      @lpVtbl.try &.value.get_desc1.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11Texture3D1Vtbl,
    query_interface : Proc(ID3D11Texture3D1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Texture3D1*, UInt32),
    release : Proc(ID3D11Texture3D1*, UInt32),
    get_device : Proc(ID3D11Texture3D1*, Void**, Void),
    get_private_data : Proc(ID3D11Texture3D1*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Texture3D1*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Texture3D1*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_type : Proc(ID3D11Texture3D1*, Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_DIMENSION*, Void),
    set_eviction_priority : Proc(ID3D11Texture3D1*, UInt32, Void),
    get_eviction_priority : Proc(ID3D11Texture3D1*, UInt32),
    get_desc : Proc(ID3D11Texture3D1*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*, Void),
    get_desc1 : Proc(ID3D11Texture3D1*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC1*, Void)


  @[Extern]
  record ID3D11Texture3D1, lpVtbl : ID3D11Texture3D1Vtbl* do
    GUID = LibC::GUID.new(0xc711683_u32, 0x2853_u16, 0x4846_u16, StaticArray[0x9b_u8, 0xb0_u8, 0xf3_u8, 0xe6_u8, 0x6_u8, 0x39_u8, 0xe4_u8, 0x6a_u8])
    def query_interface(this : ID3D11Texture3D1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Texture3D1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Texture3D1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11Texture3D1*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11Texture3D1*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Texture3D1*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Texture3D1*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_type(this : ID3D11Texture3D1*, pResourceDimension : Win32cr::Graphics::Direct3D11::D3D11_RESOURCE_DIMENSION*) : Void
      @lpVtbl.try &.value.get_type.call(this, pResourceDimension)
    end
    def set_eviction_priority(this : ID3D11Texture3D1*, eviction_priority : UInt32) : Void
      @lpVtbl.try &.value.set_eviction_priority.call(this, eviction_priority)
    end
    def get_eviction_priority(this : ID3D11Texture3D1*) : UInt32
      @lpVtbl.try &.value.get_eviction_priority.call(this)
    end
    def get_desc(this : ID3D11Texture3D1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_desc1(this : ID3D11Texture3D1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC1*) : Void
      @lpVtbl.try &.value.get_desc1.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11RasterizerState2Vtbl,
    query_interface : Proc(ID3D11RasterizerState2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11RasterizerState2*, UInt32),
    release : Proc(ID3D11RasterizerState2*, UInt32),
    get_device : Proc(ID3D11RasterizerState2*, Void**, Void),
    get_private_data : Proc(ID3D11RasterizerState2*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11RasterizerState2*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11RasterizerState2*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_desc : Proc(ID3D11RasterizerState2*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*, Void),
    get_desc1 : Proc(ID3D11RasterizerState2*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC1*, Void),
    get_desc2 : Proc(ID3D11RasterizerState2*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC2*, Void)


  @[Extern]
  record ID3D11RasterizerState2, lpVtbl : ID3D11RasterizerState2Vtbl* do
    GUID = LibC::GUID.new(0x6fbd02fb_u32, 0x209f_u16, 0x46c4_u16, StaticArray[0xb0_u8, 0x59_u8, 0x2e_u8, 0xd1_u8, 0x55_u8, 0x86_u8, 0xa6_u8, 0xac_u8])
    def query_interface(this : ID3D11RasterizerState2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11RasterizerState2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11RasterizerState2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11RasterizerState2*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11RasterizerState2*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11RasterizerState2*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11RasterizerState2*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_desc(this : ID3D11RasterizerState2*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_desc1(this : ID3D11RasterizerState2*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC1*) : Void
      @lpVtbl.try &.value.get_desc1.call(this, pDesc)
    end
    def get_desc2(this : ID3D11RasterizerState2*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC2*) : Void
      @lpVtbl.try &.value.get_desc2.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11ShaderResourceView1Vtbl,
    query_interface : Proc(ID3D11ShaderResourceView1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11ShaderResourceView1*, UInt32),
    release : Proc(ID3D11ShaderResourceView1*, UInt32),
    get_device : Proc(ID3D11ShaderResourceView1*, Void**, Void),
    get_private_data : Proc(ID3D11ShaderResourceView1*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11ShaderResourceView1*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11ShaderResourceView1*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_resource : Proc(ID3D11ShaderResourceView1*, Void**, Void),
    get_desc : Proc(ID3D11ShaderResourceView1*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*, Void),
    get_desc1 : Proc(ID3D11ShaderResourceView1*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC1*, Void)


  @[Extern]
  record ID3D11ShaderResourceView1, lpVtbl : ID3D11ShaderResourceView1Vtbl* do
    GUID = LibC::GUID.new(0x91308b87_u32, 0x9040_u16, 0x411d_u16, StaticArray[0x8c_u8, 0x67_u8, 0xc3_u8, 0x92_u8, 0x53_u8, 0xce_u8, 0x38_u8, 0x2_u8])
    def query_interface(this : ID3D11ShaderResourceView1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11ShaderResourceView1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11ShaderResourceView1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11ShaderResourceView1*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11ShaderResourceView1*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11ShaderResourceView1*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11ShaderResourceView1*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_resource(this : ID3D11ShaderResourceView1*, ppResource : Void**) : Void
      @lpVtbl.try &.value.get_resource.call(this, ppResource)
    end
    def get_desc(this : ID3D11ShaderResourceView1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_desc1(this : ID3D11ShaderResourceView1*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC1*) : Void
      @lpVtbl.try &.value.get_desc1.call(this, pDesc1)
    end

  end

  @[Extern]
  record ID3D11RenderTargetView1Vtbl,
    query_interface : Proc(ID3D11RenderTargetView1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11RenderTargetView1*, UInt32),
    release : Proc(ID3D11RenderTargetView1*, UInt32),
    get_device : Proc(ID3D11RenderTargetView1*, Void**, Void),
    get_private_data : Proc(ID3D11RenderTargetView1*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11RenderTargetView1*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11RenderTargetView1*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_resource : Proc(ID3D11RenderTargetView1*, Void**, Void),
    get_desc : Proc(ID3D11RenderTargetView1*, Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*, Void),
    get_desc1 : Proc(ID3D11RenderTargetView1*, Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC1*, Void)


  @[Extern]
  record ID3D11RenderTargetView1, lpVtbl : ID3D11RenderTargetView1Vtbl* do
    GUID = LibC::GUID.new(0xffbe2e23_u32, 0xf011_u16, 0x418a_u16, StaticArray[0xac_u8, 0x56_u8, 0x5c_u8, 0xee_u8, 0xd7_u8, 0xc5_u8, 0xb9_u8, 0x4b_u8])
    def query_interface(this : ID3D11RenderTargetView1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11RenderTargetView1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11RenderTargetView1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11RenderTargetView1*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11RenderTargetView1*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11RenderTargetView1*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11RenderTargetView1*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_resource(this : ID3D11RenderTargetView1*, ppResource : Void**) : Void
      @lpVtbl.try &.value.get_resource.call(this, ppResource)
    end
    def get_desc(this : ID3D11RenderTargetView1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_desc1(this : ID3D11RenderTargetView1*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC1*) : Void
      @lpVtbl.try &.value.get_desc1.call(this, pDesc1)
    end

  end

  @[Extern]
  record ID3D11UnorderedAccessView1Vtbl,
    query_interface : Proc(ID3D11UnorderedAccessView1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11UnorderedAccessView1*, UInt32),
    release : Proc(ID3D11UnorderedAccessView1*, UInt32),
    get_device : Proc(ID3D11UnorderedAccessView1*, Void**, Void),
    get_private_data : Proc(ID3D11UnorderedAccessView1*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11UnorderedAccessView1*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11UnorderedAccessView1*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_resource : Proc(ID3D11UnorderedAccessView1*, Void**, Void),
    get_desc : Proc(ID3D11UnorderedAccessView1*, Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*, Void),
    get_desc1 : Proc(ID3D11UnorderedAccessView1*, Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC1*, Void)


  @[Extern]
  record ID3D11UnorderedAccessView1, lpVtbl : ID3D11UnorderedAccessView1Vtbl* do
    GUID = LibC::GUID.new(0x7b3b6153_u32, 0xa886_u16, 0x4544_u16, StaticArray[0xab_u8, 0x37_u8, 0x65_u8, 0x37_u8, 0xc8_u8, 0x50_u8, 0x4_u8, 0x3_u8])
    def query_interface(this : ID3D11UnorderedAccessView1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11UnorderedAccessView1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11UnorderedAccessView1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11UnorderedAccessView1*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11UnorderedAccessView1*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11UnorderedAccessView1*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11UnorderedAccessView1*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_resource(this : ID3D11UnorderedAccessView1*, ppResource : Void**) : Void
      @lpVtbl.try &.value.get_resource.call(this, ppResource)
    end
    def get_desc(this : ID3D11UnorderedAccessView1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_desc1(this : ID3D11UnorderedAccessView1*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC1*) : Void
      @lpVtbl.try &.value.get_desc1.call(this, pDesc1)
    end

  end

  @[Extern]
  record ID3D11Query1Vtbl,
    query_interface : Proc(ID3D11Query1*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Query1*, UInt32),
    release : Proc(ID3D11Query1*, UInt32),
    get_device : Proc(ID3D11Query1*, Void**, Void),
    get_private_data : Proc(ID3D11Query1*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Query1*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Query1*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_data_size : Proc(ID3D11Query1*, UInt32),
    get_desc : Proc(ID3D11Query1*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, Void),
    get_desc1 : Proc(ID3D11Query1*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC1*, Void)


  @[Extern]
  record ID3D11Query1, lpVtbl : ID3D11Query1Vtbl* do
    GUID = LibC::GUID.new(0x631b4766_u32, 0x36dc_u16, 0x461d_u16, StaticArray[0x8d_u8, 0xb6_u8, 0xc4_u8, 0x7e_u8, 0x13_u8, 0xe6_u8, 0x9_u8, 0x16_u8])
    def query_interface(this : ID3D11Query1*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Query1*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Query1*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11Query1*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11Query1*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Query1*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Query1*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_data_size(this : ID3D11Query1*) : UInt32
      @lpVtbl.try &.value.get_data_size.call(this)
    end
    def get_desc(this : ID3D11Query1*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*) : Void
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_desc1(this : ID3D11Query1*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC1*) : Void
      @lpVtbl.try &.value.get_desc1.call(this, pDesc1)
    end

  end

  @[Extern]
  record ID3D11DeviceContext3Vtbl,
    query_interface : Proc(ID3D11DeviceContext3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11DeviceContext3*, UInt32),
    release : Proc(ID3D11DeviceContext3*, UInt32),
    get_device : Proc(ID3D11DeviceContext3*, Void**, Void),
    get_private_data : Proc(ID3D11DeviceContext3*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11DeviceContext3*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11DeviceContext3*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    vs_set_constant_buffers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    ps_set_shader_resources : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    ps_set_shader : Proc(ID3D11DeviceContext3*, Void*, Void**, UInt32, Void),
    ps_set_samplers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    vs_set_shader : Proc(ID3D11DeviceContext3*, Void*, Void**, UInt32, Void),
    draw_indexed : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Int32, Void),
    draw : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void),
    map : Proc(ID3D11DeviceContext3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_MAP, UInt32, Win32cr::Graphics::Direct3D11::D3D11_MAPPED_SUBRESOURCE*, Win32cr::Foundation::HRESULT),
    unmap : Proc(ID3D11DeviceContext3*, Void*, UInt32, Void),
    ps_set_constant_buffers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    ia_set_input_layout : Proc(ID3D11DeviceContext3*, Void*, Void),
    ia_set_vertex_buffers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ia_set_index_buffer : Proc(ID3D11DeviceContext3*, Void*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, Void),
    draw_indexed_instanced : Proc(ID3D11DeviceContext3*, UInt32, UInt32, UInt32, Int32, UInt32, Void),
    draw_instanced : Proc(ID3D11DeviceContext3*, UInt32, UInt32, UInt32, UInt32, Void),
    gs_set_constant_buffers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    gs_set_shader : Proc(ID3D11DeviceContext3*, Void*, Void**, UInt32, Void),
    ia_set_primitive_topology : Proc(ID3D11DeviceContext3*, Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY, Void),
    vs_set_shader_resources : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    vs_set_samplers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    begin__ : Proc(ID3D11DeviceContext3*, Void*, Void),
    end__ : Proc(ID3D11DeviceContext3*, Void*, Void),
    get_data : Proc(ID3D11DeviceContext3*, Void*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    set_predication : Proc(ID3D11DeviceContext3*, Void*, Win32cr::Foundation::BOOL, Void),
    gs_set_shader_resources : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    gs_set_samplers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    om_set_render_targets : Proc(ID3D11DeviceContext3*, UInt32, Void**, Void*, Void),
    om_set_render_targets_and_unordered_access_views : Proc(ID3D11DeviceContext3*, UInt32, Void**, Void*, UInt32, UInt32, Void**, UInt32*, Void),
    om_set_blend_state : Proc(ID3D11DeviceContext3*, Void*, Float32*, UInt32, Void),
    om_set_depth_stencil_state : Proc(ID3D11DeviceContext3*, Void*, UInt32, Void),
    so_set_targets : Proc(ID3D11DeviceContext3*, UInt32, Void**, UInt32*, Void),
    draw_auto : Proc(ID3D11DeviceContext3*, Void),
    draw_indexed_instanced_indirect : Proc(ID3D11DeviceContext3*, Void*, UInt32, Void),
    draw_instanced_indirect : Proc(ID3D11DeviceContext3*, Void*, UInt32, Void),
    dispatch : Proc(ID3D11DeviceContext3*, UInt32, UInt32, UInt32, Void),
    dispatch_indirect : Proc(ID3D11DeviceContext3*, Void*, UInt32, Void),
    rs_set_state : Proc(ID3D11DeviceContext3*, Void*, Void),
    rs_set_viewports : Proc(ID3D11DeviceContext3*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*, Void),
    rs_set_scissor_rects : Proc(ID3D11DeviceContext3*, UInt32, Win32cr::Foundation::RECT*, Void),
    copy_subresource_region : Proc(ID3D11DeviceContext3*, Void*, UInt32, UInt32, UInt32, UInt32, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void),
    copy_resource : Proc(ID3D11DeviceContext3*, Void*, Void*, Void),
    update_subresource : Proc(ID3D11DeviceContext3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void*, UInt32, UInt32, Void),
    copy_structure_count : Proc(ID3D11DeviceContext3*, Void*, UInt32, Void*, Void),
    clear_render_target_view : Proc(ID3D11DeviceContext3*, Void*, Float32*, Void),
    clear_unordered_access_view_uint : Proc(ID3D11DeviceContext3*, Void*, UInt32*, Void),
    clear_unordered_access_view_float : Proc(ID3D11DeviceContext3*, Void*, Float32*, Void),
    clear_depth_stencil_view : Proc(ID3D11DeviceContext3*, Void*, UInt32, Float32, UInt8, Void),
    generate_mips : Proc(ID3D11DeviceContext3*, Void*, Void),
    set_resource_min_lod : Proc(ID3D11DeviceContext3*, Void*, Float32, Void),
    get_resource_min_lod : Proc(ID3D11DeviceContext3*, Void*, Float32),
    resolve_subresource : Proc(ID3D11DeviceContext3*, Void*, UInt32, Void*, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, Void),
    execute_command_list : Proc(ID3D11DeviceContext3*, Void*, Win32cr::Foundation::BOOL, Void),
    hs_set_shader_resources : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    hs_set_shader : Proc(ID3D11DeviceContext3*, Void*, Void**, UInt32, Void),
    hs_set_samplers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    hs_set_constant_buffers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    ds_set_shader_resources : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    ds_set_shader : Proc(ID3D11DeviceContext3*, Void*, Void**, UInt32, Void),
    ds_set_samplers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    ds_set_constant_buffers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    cs_set_shader_resources : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    cs_set_unordered_access_views : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, UInt32*, Void),
    cs_set_shader : Proc(ID3D11DeviceContext3*, Void*, Void**, UInt32, Void),
    cs_set_samplers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    cs_set_constant_buffers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    vs_get_constant_buffers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    ps_get_shader_resources : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    ps_get_shader : Proc(ID3D11DeviceContext3*, Void**, Void**, UInt32*, Void),
    ps_get_samplers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    vs_get_shader : Proc(ID3D11DeviceContext3*, Void**, Void**, UInt32*, Void),
    ps_get_constant_buffers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    ia_get_input_layout : Proc(ID3D11DeviceContext3*, Void**, Void),
    ia_get_vertex_buffers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ia_get_index_buffer : Proc(ID3D11DeviceContext3*, Void**, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT*, UInt32*, Void),
    gs_get_constant_buffers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    gs_get_shader : Proc(ID3D11DeviceContext3*, Void**, Void**, UInt32*, Void),
    ia_get_primitive_topology : Proc(ID3D11DeviceContext3*, Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY*, Void),
    vs_get_shader_resources : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    vs_get_samplers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    get_predication : Proc(ID3D11DeviceContext3*, Void**, Win32cr::Foundation::BOOL*, Void),
    gs_get_shader_resources : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    gs_get_samplers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    om_get_render_targets : Proc(ID3D11DeviceContext3*, UInt32, Void**, Void**, Void),
    om_get_render_targets_and_unordered_access_views : Proc(ID3D11DeviceContext3*, UInt32, Void**, Void**, UInt32, UInt32, Void**, Void),
    om_get_blend_state : Proc(ID3D11DeviceContext3*, Void**, Float32*, UInt32*, Void),
    om_get_depth_stencil_state : Proc(ID3D11DeviceContext3*, Void**, UInt32*, Void),
    so_get_targets : Proc(ID3D11DeviceContext3*, UInt32, Void**, Void),
    rs_get_state : Proc(ID3D11DeviceContext3*, Void**, Void),
    rs_get_viewports : Proc(ID3D11DeviceContext3*, UInt32*, Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*, Void),
    rs_get_scissor_rects : Proc(ID3D11DeviceContext3*, UInt32*, Win32cr::Foundation::RECT*, Void),
    hs_get_shader_resources : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    hs_get_shader : Proc(ID3D11DeviceContext3*, Void**, Void**, UInt32*, Void),
    hs_get_samplers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    hs_get_constant_buffers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    ds_get_shader_resources : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    ds_get_shader : Proc(ID3D11DeviceContext3*, Void**, Void**, UInt32*, Void),
    ds_get_samplers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    ds_get_constant_buffers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    cs_get_shader_resources : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    cs_get_unordered_access_views : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    cs_get_shader : Proc(ID3D11DeviceContext3*, Void**, Void**, UInt32*, Void),
    cs_get_samplers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    cs_get_constant_buffers : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, Void),
    clear_state : Proc(ID3D11DeviceContext3*, Void),
    flush : Proc(ID3D11DeviceContext3*, Void),
    get_type : Proc(ID3D11DeviceContext3*, Win32cr::Graphics::Direct3D11::D3D11_DEVICE_CONTEXT_TYPE),
    get_context_flags : Proc(ID3D11DeviceContext3*, UInt32),
    finish_command_list : Proc(ID3D11DeviceContext3*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    copy_subresource_region1 : Proc(ID3D11DeviceContext3*, Void*, UInt32, UInt32, UInt32, UInt32, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, UInt32, Void),
    update_subresource1 : Proc(ID3D11DeviceContext3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void*, UInt32, UInt32, UInt32, Void),
    discard_resource : Proc(ID3D11DeviceContext3*, Void*, Void),
    discard_view : Proc(ID3D11DeviceContext3*, Void*, Void),
    vs_set_constant_buffers1 : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    hs_set_constant_buffers1 : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ds_set_constant_buffers1 : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    gs_set_constant_buffers1 : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ps_set_constant_buffers1 : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    cs_set_constant_buffers1 : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    vs_get_constant_buffers1 : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    hs_get_constant_buffers1 : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ds_get_constant_buffers1 : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    gs_get_constant_buffers1 : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ps_get_constant_buffers1 : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    cs_get_constant_buffers1 : Proc(ID3D11DeviceContext3*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    swap_device_context_state : Proc(ID3D11DeviceContext3*, Void*, Void**, Void),
    clear_view : Proc(ID3D11DeviceContext3*, Void*, Float32*, Win32cr::Foundation::RECT*, UInt32, Void),
    discard_view1 : Proc(ID3D11DeviceContext3*, Void*, Win32cr::Foundation::RECT*, UInt32, Void),
    update_tile_mappings : Proc(ID3D11DeviceContext3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, Void*, UInt32, UInt32*, UInt32*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    copy_tile_mappings : Proc(ID3D11DeviceContext3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, Void*, Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, UInt32, Win32cr::Foundation::HRESULT),
    copy_tiles : Proc(ID3D11DeviceContext3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, Void*, UInt64, UInt32, Void),
    update_tiles : Proc(ID3D11DeviceContext3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, Void*, UInt32, Void),
    resize_tile_pool : Proc(ID3D11DeviceContext3*, Void*, UInt64, Win32cr::Foundation::HRESULT),
    tiled_resource_barrier : Proc(ID3D11DeviceContext3*, Void*, Void*, Void),
    is_annotation_enabled : Proc(ID3D11DeviceContext3*, Win32cr::Foundation::BOOL),
    set_marker_int : Proc(ID3D11DeviceContext3*, Win32cr::Foundation::PWSTR, Int32, Void),
    begin_event_int : Proc(ID3D11DeviceContext3*, Win32cr::Foundation::PWSTR, Int32, Void),
    end_event : Proc(ID3D11DeviceContext3*, Void),
    flush1 : Proc(ID3D11DeviceContext3*, Win32cr::Graphics::Direct3D11::D3D11_CONTEXT_TYPE, Win32cr::Foundation::HANDLE, Void),
    set_hardware_protection_state : Proc(ID3D11DeviceContext3*, Win32cr::Foundation::BOOL, Void),
    get_hardware_protection_state : Proc(ID3D11DeviceContext3*, Win32cr::Foundation::BOOL*, Void)


  @[Extern]
  record ID3D11DeviceContext3, lpVtbl : ID3D11DeviceContext3Vtbl* do
    GUID = LibC::GUID.new(0xb4e3c01d_u32, 0xe79e_u16, 0x4637_u16, StaticArray[0x91_u8, 0xb2_u8, 0x51_u8, 0xe_u8, 0x9f_u8, 0x4c_u8, 0x9b_u8, 0x8f_u8])
    def query_interface(this : ID3D11DeviceContext3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11DeviceContext3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11DeviceContext3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11DeviceContext3*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11DeviceContext3*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11DeviceContext3*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11DeviceContext3*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def vs_set_constant_buffers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.vs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ps_set_shader_resources(this : ID3D11DeviceContext3*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ps_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ps_set_shader(this : ID3D11DeviceContext3*, pPixelShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.ps_set_shader.call(this, pPixelShader, ppClassInstances, num_class_instances)
    end
    def ps_set_samplers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ps_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def vs_set_shader(this : ID3D11DeviceContext3*, pVertexShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.vs_set_shader.call(this, pVertexShader, ppClassInstances, num_class_instances)
    end
    def draw_indexed(this : ID3D11DeviceContext3*, index_count : UInt32, start_index_location : UInt32, base_vertex_location : Int32) : Void
      @lpVtbl.try &.value.draw_indexed.call(this, index_count, start_index_location, base_vertex_location)
    end
    def draw(this : ID3D11DeviceContext3*, vertex_count : UInt32, start_vertex_location : UInt32) : Void
      @lpVtbl.try &.value.draw.call(this, vertex_count, start_vertex_location)
    end
    def map(this : ID3D11DeviceContext3*, pResource : Void*, subresource : UInt32, map_type : Win32cr::Graphics::Direct3D11::D3D11_MAP, map_flags : UInt32, pMappedResource : Win32cr::Graphics::Direct3D11::D3D11_MAPPED_SUBRESOURCE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.map.call(this, pResource, subresource, map_type, map_flags, pMappedResource)
    end
    def unmap(this : ID3D11DeviceContext3*, pResource : Void*, subresource : UInt32) : Void
      @lpVtbl.try &.value.unmap.call(this, pResource, subresource)
    end
    def ps_set_constant_buffers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ps_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ia_set_input_layout(this : ID3D11DeviceContext3*, pInputLayout : Void*) : Void
      @lpVtbl.try &.value.ia_set_input_layout.call(this, pInputLayout)
    end
    def ia_set_vertex_buffers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppVertexBuffers : Void**, pStrides : UInt32*, pOffsets : UInt32*) : Void
      @lpVtbl.try &.value.ia_set_vertex_buffers.call(this, start_slot, num_buffers, ppVertexBuffers, pStrides, pOffsets)
    end
    def ia_set_index_buffer(this : ID3D11DeviceContext3*, pIndexBuffer : Void*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, offset : UInt32) : Void
      @lpVtbl.try &.value.ia_set_index_buffer.call(this, pIndexBuffer, format, offset)
    end
    def draw_indexed_instanced(this : ID3D11DeviceContext3*, index_count_per_instance : UInt32, instance_count : UInt32, start_index_location : UInt32, base_vertex_location : Int32, start_instance_location : UInt32) : Void
      @lpVtbl.try &.value.draw_indexed_instanced.call(this, index_count_per_instance, instance_count, start_index_location, base_vertex_location, start_instance_location)
    end
    def draw_instanced(this : ID3D11DeviceContext3*, vertex_count_per_instance : UInt32, instance_count : UInt32, start_vertex_location : UInt32, start_instance_location : UInt32) : Void
      @lpVtbl.try &.value.draw_instanced.call(this, vertex_count_per_instance, instance_count, start_vertex_location, start_instance_location)
    end
    def gs_set_constant_buffers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.gs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def gs_set_shader(this : ID3D11DeviceContext3*, pShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.gs_set_shader.call(this, pShader, ppClassInstances, num_class_instances)
    end
    def ia_set_primitive_topology(this : ID3D11DeviceContext3*, topology : Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY) : Void
      @lpVtbl.try &.value.ia_set_primitive_topology.call(this, topology)
    end
    def vs_set_shader_resources(this : ID3D11DeviceContext3*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.vs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def vs_set_samplers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.vs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def begin__(this : ID3D11DeviceContext3*, pAsync : Void*) : Void
      @lpVtbl.try &.value.begin__.call(this, pAsync)
    end
    def end__(this : ID3D11DeviceContext3*, pAsync : Void*) : Void
      @lpVtbl.try &.value.end__.call(this, pAsync)
    end
    def get_data(this : ID3D11DeviceContext3*, pAsync : Void*, pData : Void*, data_size : UInt32, get_data_flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_data.call(this, pAsync, pData, data_size, get_data_flags)
    end
    def set_predication(this : ID3D11DeviceContext3*, pPredicate : Void*, predicate_value : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.set_predication.call(this, pPredicate, predicate_value)
    end
    def gs_set_shader_resources(this : ID3D11DeviceContext3*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.gs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def gs_set_samplers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.gs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def om_set_render_targets(this : ID3D11DeviceContext3*, num_views : UInt32, ppRenderTargetViews : Void**, pDepthStencilView : Void*) : Void
      @lpVtbl.try &.value.om_set_render_targets.call(this, num_views, ppRenderTargetViews, pDepthStencilView)
    end
    def om_set_render_targets_and_unordered_access_views(this : ID3D11DeviceContext3*, num_rt_vs : UInt32, ppRenderTargetViews : Void**, pDepthStencilView : Void*, uav_start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**, pUAVInitialCounts : UInt32*) : Void
      @lpVtbl.try &.value.om_set_render_targets_and_unordered_access_views.call(this, num_rt_vs, ppRenderTargetViews, pDepthStencilView, uav_start_slot, num_ua_vs, ppUnorderedAccessViews, pUAVInitialCounts)
    end
    def om_set_blend_state(this : ID3D11DeviceContext3*, pBlendState : Void*, blend_factor : Float32*, sample_mask : UInt32) : Void
      @lpVtbl.try &.value.om_set_blend_state.call(this, pBlendState, blend_factor, sample_mask)
    end
    def om_set_depth_stencil_state(this : ID3D11DeviceContext3*, pDepthStencilState : Void*, stencil_ref : UInt32) : Void
      @lpVtbl.try &.value.om_set_depth_stencil_state.call(this, pDepthStencilState, stencil_ref)
    end
    def so_set_targets(this : ID3D11DeviceContext3*, num_buffers : UInt32, ppSOTargets : Void**, pOffsets : UInt32*) : Void
      @lpVtbl.try &.value.so_set_targets.call(this, num_buffers, ppSOTargets, pOffsets)
    end
    def draw_auto(this : ID3D11DeviceContext3*) : Void
      @lpVtbl.try &.value.draw_auto.call(this)
    end
    def draw_indexed_instanced_indirect(this : ID3D11DeviceContext3*, pBufferForArgs : Void*, aligned_byte_offset_for_args : UInt32) : Void
      @lpVtbl.try &.value.draw_indexed_instanced_indirect.call(this, pBufferForArgs, aligned_byte_offset_for_args)
    end
    def draw_instanced_indirect(this : ID3D11DeviceContext3*, pBufferForArgs : Void*, aligned_byte_offset_for_args : UInt32) : Void
      @lpVtbl.try &.value.draw_instanced_indirect.call(this, pBufferForArgs, aligned_byte_offset_for_args)
    end
    def dispatch(this : ID3D11DeviceContext3*, thread_group_count_x : UInt32, thread_group_count_y : UInt32, thread_group_count_z : UInt32) : Void
      @lpVtbl.try &.value.dispatch.call(this, thread_group_count_x, thread_group_count_y, thread_group_count_z)
    end
    def dispatch_indirect(this : ID3D11DeviceContext3*, pBufferForArgs : Void*, aligned_byte_offset_for_args : UInt32) : Void
      @lpVtbl.try &.value.dispatch_indirect.call(this, pBufferForArgs, aligned_byte_offset_for_args)
    end
    def rs_set_state(this : ID3D11DeviceContext3*, pRasterizerState : Void*) : Void
      @lpVtbl.try &.value.rs_set_state.call(this, pRasterizerState)
    end
    def rs_set_viewports(this : ID3D11DeviceContext3*, num_viewports : UInt32, pViewports : Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*) : Void
      @lpVtbl.try &.value.rs_set_viewports.call(this, num_viewports, pViewports)
    end
    def rs_set_scissor_rects(this : ID3D11DeviceContext3*, num_rects : UInt32, pRects : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.rs_set_scissor_rects.call(this, num_rects, pRects)
    end
    def copy_subresource_region(this : ID3D11DeviceContext3*, pDstResource : Void*, dst_subresource : UInt32, dst_x : UInt32, dst_y : UInt32, dst_z : UInt32, pSrcResource : Void*, src_subresource : UInt32, pSrcBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*) : Void
      @lpVtbl.try &.value.copy_subresource_region.call(this, pDstResource, dst_subresource, dst_x, dst_y, dst_z, pSrcResource, src_subresource, pSrcBox)
    end
    def copy_resource(this : ID3D11DeviceContext3*, pDstResource : Void*, pSrcResource : Void*) : Void
      @lpVtbl.try &.value.copy_resource.call(this, pDstResource, pSrcResource)
    end
    def update_subresource(this : ID3D11DeviceContext3*, pDstResource : Void*, dst_subresource : UInt32, pDstBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, pSrcData : Void*, src_row_pitch : UInt32, src_depth_pitch : UInt32) : Void
      @lpVtbl.try &.value.update_subresource.call(this, pDstResource, dst_subresource, pDstBox, pSrcData, src_row_pitch, src_depth_pitch)
    end
    def copy_structure_count(this : ID3D11DeviceContext3*, pDstBuffer : Void*, dst_aligned_byte_offset : UInt32, pSrcView : Void*) : Void
      @lpVtbl.try &.value.copy_structure_count.call(this, pDstBuffer, dst_aligned_byte_offset, pSrcView)
    end
    def clear_render_target_view(this : ID3D11DeviceContext3*, pRenderTargetView : Void*, color_rgba : Float32*) : Void
      @lpVtbl.try &.value.clear_render_target_view.call(this, pRenderTargetView, color_rgba)
    end
    def clear_unordered_access_view_uint(this : ID3D11DeviceContext3*, pUnorderedAccessView : Void*, values : UInt32*) : Void
      @lpVtbl.try &.value.clear_unordered_access_view_uint.call(this, pUnorderedAccessView, values)
    end
    def clear_unordered_access_view_float(this : ID3D11DeviceContext3*, pUnorderedAccessView : Void*, values : Float32*) : Void
      @lpVtbl.try &.value.clear_unordered_access_view_float.call(this, pUnorderedAccessView, values)
    end
    def clear_depth_stencil_view(this : ID3D11DeviceContext3*, pDepthStencilView : Void*, clear_flags : UInt32, depth : Float32, stencil : UInt8) : Void
      @lpVtbl.try &.value.clear_depth_stencil_view.call(this, pDepthStencilView, clear_flags, depth, stencil)
    end
    def generate_mips(this : ID3D11DeviceContext3*, pShaderResourceView : Void*) : Void
      @lpVtbl.try &.value.generate_mips.call(this, pShaderResourceView)
    end
    def set_resource_min_lod(this : ID3D11DeviceContext3*, pResource : Void*, min_lod : Float32) : Void
      @lpVtbl.try &.value.set_resource_min_lod.call(this, pResource, min_lod)
    end
    def get_resource_min_lod(this : ID3D11DeviceContext3*, pResource : Void*) : Float32
      @lpVtbl.try &.value.get_resource_min_lod.call(this, pResource)
    end
    def resolve_subresource(this : ID3D11DeviceContext3*, pDstResource : Void*, dst_subresource : UInt32, pSrcResource : Void*, src_subresource : UInt32, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT) : Void
      @lpVtbl.try &.value.resolve_subresource.call(this, pDstResource, dst_subresource, pSrcResource, src_subresource, format)
    end
    def execute_command_list(this : ID3D11DeviceContext3*, pCommandList : Void*, restore_context_state : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.execute_command_list.call(this, pCommandList, restore_context_state)
    end
    def hs_set_shader_resources(this : ID3D11DeviceContext3*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.hs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def hs_set_shader(this : ID3D11DeviceContext3*, pHullShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.hs_set_shader.call(this, pHullShader, ppClassInstances, num_class_instances)
    end
    def hs_set_samplers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.hs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def hs_set_constant_buffers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.hs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ds_set_shader_resources(this : ID3D11DeviceContext3*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ds_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ds_set_shader(this : ID3D11DeviceContext3*, pDomainShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.ds_set_shader.call(this, pDomainShader, ppClassInstances, num_class_instances)
    end
    def ds_set_samplers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ds_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def ds_set_constant_buffers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ds_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def cs_set_shader_resources(this : ID3D11DeviceContext3*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.cs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def cs_set_unordered_access_views(this : ID3D11DeviceContext3*, start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**, pUAVInitialCounts : UInt32*) : Void
      @lpVtbl.try &.value.cs_set_unordered_access_views.call(this, start_slot, num_ua_vs, ppUnorderedAccessViews, pUAVInitialCounts)
    end
    def cs_set_shader(this : ID3D11DeviceContext3*, pComputeShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.cs_set_shader.call(this, pComputeShader, ppClassInstances, num_class_instances)
    end
    def cs_set_samplers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.cs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def cs_set_constant_buffers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.cs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def vs_get_constant_buffers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.vs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ps_get_shader_resources(this : ID3D11DeviceContext3*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ps_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ps_get_shader(this : ID3D11DeviceContext3*, ppPixelShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.ps_get_shader.call(this, ppPixelShader, ppClassInstances, pNumClassInstances)
    end
    def ps_get_samplers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ps_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def vs_get_shader(this : ID3D11DeviceContext3*, ppVertexShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.vs_get_shader.call(this, ppVertexShader, ppClassInstances, pNumClassInstances)
    end
    def ps_get_constant_buffers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ps_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ia_get_input_layout(this : ID3D11DeviceContext3*, ppInputLayout : Void**) : Void
      @lpVtbl.try &.value.ia_get_input_layout.call(this, ppInputLayout)
    end
    def ia_get_vertex_buffers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppVertexBuffers : Void**, pStrides : UInt32*, pOffsets : UInt32*) : Void
      @lpVtbl.try &.value.ia_get_vertex_buffers.call(this, start_slot, num_buffers, ppVertexBuffers, pStrides, pOffsets)
    end
    def ia_get_index_buffer(this : ID3D11DeviceContext3*, pIndexBuffer : Void**, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT*, offset : UInt32*) : Void
      @lpVtbl.try &.value.ia_get_index_buffer.call(this, pIndexBuffer, format, offset)
    end
    def gs_get_constant_buffers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.gs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def gs_get_shader(this : ID3D11DeviceContext3*, ppGeometryShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.gs_get_shader.call(this, ppGeometryShader, ppClassInstances, pNumClassInstances)
    end
    def ia_get_primitive_topology(this : ID3D11DeviceContext3*, pTopology : Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY*) : Void
      @lpVtbl.try &.value.ia_get_primitive_topology.call(this, pTopology)
    end
    def vs_get_shader_resources(this : ID3D11DeviceContext3*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.vs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def vs_get_samplers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.vs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def get_predication(this : ID3D11DeviceContext3*, ppPredicate : Void**, pPredicateValue : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.get_predication.call(this, ppPredicate, pPredicateValue)
    end
    def gs_get_shader_resources(this : ID3D11DeviceContext3*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.gs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def gs_get_samplers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.gs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def om_get_render_targets(this : ID3D11DeviceContext3*, num_views : UInt32, ppRenderTargetViews : Void**, ppDepthStencilView : Void**) : Void
      @lpVtbl.try &.value.om_get_render_targets.call(this, num_views, ppRenderTargetViews, ppDepthStencilView)
    end
    def om_get_render_targets_and_unordered_access_views(this : ID3D11DeviceContext3*, num_rt_vs : UInt32, ppRenderTargetViews : Void**, ppDepthStencilView : Void**, uav_start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**) : Void
      @lpVtbl.try &.value.om_get_render_targets_and_unordered_access_views.call(this, num_rt_vs, ppRenderTargetViews, ppDepthStencilView, uav_start_slot, num_ua_vs, ppUnorderedAccessViews)
    end
    def om_get_blend_state(this : ID3D11DeviceContext3*, ppBlendState : Void**, blend_factor : Float32*, pSampleMask : UInt32*) : Void
      @lpVtbl.try &.value.om_get_blend_state.call(this, ppBlendState, blend_factor, pSampleMask)
    end
    def om_get_depth_stencil_state(this : ID3D11DeviceContext3*, ppDepthStencilState : Void**, pStencilRef : UInt32*) : Void
      @lpVtbl.try &.value.om_get_depth_stencil_state.call(this, ppDepthStencilState, pStencilRef)
    end
    def so_get_targets(this : ID3D11DeviceContext3*, num_buffers : UInt32, ppSOTargets : Void**) : Void
      @lpVtbl.try &.value.so_get_targets.call(this, num_buffers, ppSOTargets)
    end
    def rs_get_state(this : ID3D11DeviceContext3*, ppRasterizerState : Void**) : Void
      @lpVtbl.try &.value.rs_get_state.call(this, ppRasterizerState)
    end
    def rs_get_viewports(this : ID3D11DeviceContext3*, pNumViewports : UInt32*, pViewports : Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*) : Void
      @lpVtbl.try &.value.rs_get_viewports.call(this, pNumViewports, pViewports)
    end
    def rs_get_scissor_rects(this : ID3D11DeviceContext3*, pNumRects : UInt32*, pRects : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.rs_get_scissor_rects.call(this, pNumRects, pRects)
    end
    def hs_get_shader_resources(this : ID3D11DeviceContext3*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.hs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def hs_get_shader(this : ID3D11DeviceContext3*, ppHullShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.hs_get_shader.call(this, ppHullShader, ppClassInstances, pNumClassInstances)
    end
    def hs_get_samplers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.hs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def hs_get_constant_buffers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.hs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ds_get_shader_resources(this : ID3D11DeviceContext3*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ds_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ds_get_shader(this : ID3D11DeviceContext3*, ppDomainShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.ds_get_shader.call(this, ppDomainShader, ppClassInstances, pNumClassInstances)
    end
    def ds_get_samplers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ds_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def ds_get_constant_buffers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ds_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def cs_get_shader_resources(this : ID3D11DeviceContext3*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.cs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def cs_get_unordered_access_views(this : ID3D11DeviceContext3*, start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**) : Void
      @lpVtbl.try &.value.cs_get_unordered_access_views.call(this, start_slot, num_ua_vs, ppUnorderedAccessViews)
    end
    def cs_get_shader(this : ID3D11DeviceContext3*, ppComputeShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.cs_get_shader.call(this, ppComputeShader, ppClassInstances, pNumClassInstances)
    end
    def cs_get_samplers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.cs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def cs_get_constant_buffers(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.cs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def clear_state(this : ID3D11DeviceContext3*) : Void
      @lpVtbl.try &.value.clear_state.call(this)
    end
    def flush(this : ID3D11DeviceContext3*) : Void
      @lpVtbl.try &.value.flush.call(this)
    end
    def get_type(this : ID3D11DeviceContext3*) : Win32cr::Graphics::Direct3D11::D3D11_DEVICE_CONTEXT_TYPE
      @lpVtbl.try &.value.get_type.call(this)
    end
    def get_context_flags(this : ID3D11DeviceContext3*) : UInt32
      @lpVtbl.try &.value.get_context_flags.call(this)
    end
    def finish_command_list(this : ID3D11DeviceContext3*, restore_deferred_context_state : Win32cr::Foundation::BOOL, ppCommandList : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.finish_command_list.call(this, restore_deferred_context_state, ppCommandList)
    end
    def copy_subresource_region1(this : ID3D11DeviceContext3*, pDstResource : Void*, dst_subresource : UInt32, dst_x : UInt32, dst_y : UInt32, dst_z : UInt32, pSrcResource : Void*, src_subresource : UInt32, pSrcBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, copy_flags : UInt32) : Void
      @lpVtbl.try &.value.copy_subresource_region1.call(this, pDstResource, dst_subresource, dst_x, dst_y, dst_z, pSrcResource, src_subresource, pSrcBox, copy_flags)
    end
    def update_subresource1(this : ID3D11DeviceContext3*, pDstResource : Void*, dst_subresource : UInt32, pDstBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, pSrcData : Void*, src_row_pitch : UInt32, src_depth_pitch : UInt32, copy_flags : UInt32) : Void
      @lpVtbl.try &.value.update_subresource1.call(this, pDstResource, dst_subresource, pDstBox, pSrcData, src_row_pitch, src_depth_pitch, copy_flags)
    end
    def discard_resource(this : ID3D11DeviceContext3*, pResource : Void*) : Void
      @lpVtbl.try &.value.discard_resource.call(this, pResource)
    end
    def discard_view(this : ID3D11DeviceContext3*, pResourceView : Void*) : Void
      @lpVtbl.try &.value.discard_view.call(this, pResourceView)
    end
    def vs_set_constant_buffers1(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.vs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def hs_set_constant_buffers1(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.hs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ds_set_constant_buffers1(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ds_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def gs_set_constant_buffers1(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.gs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ps_set_constant_buffers1(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ps_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def cs_set_constant_buffers1(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.cs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def vs_get_constant_buffers1(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.vs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def hs_get_constant_buffers1(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.hs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ds_get_constant_buffers1(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ds_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def gs_get_constant_buffers1(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.gs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ps_get_constant_buffers1(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ps_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def cs_get_constant_buffers1(this : ID3D11DeviceContext3*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.cs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def swap_device_context_state(this : ID3D11DeviceContext3*, pState : Void*, ppPreviousState : Void**) : Void
      @lpVtbl.try &.value.swap_device_context_state.call(this, pState, ppPreviousState)
    end
    def clear_view(this : ID3D11DeviceContext3*, pView : Void*, color : Float32*, pRect : Win32cr::Foundation::RECT*, num_rects : UInt32) : Void
      @lpVtbl.try &.value.clear_view.call(this, pView, color, pRect, num_rects)
    end
    def discard_view1(this : ID3D11DeviceContext3*, pResourceView : Void*, pRects : Win32cr::Foundation::RECT*, num_rects : UInt32) : Void
      @lpVtbl.try &.value.discard_view1.call(this, pResourceView, pRects, num_rects)
    end
    def update_tile_mappings(this : ID3D11DeviceContext3*, pTiledResource : Void*, num_tiled_resource_regions : UInt32, pTiledResourceRegionStartCoordinates : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, pTiledResourceRegionSizes : Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, pTilePool : Void*, num_ranges : UInt32, pRangeFlags : UInt32*, pTilePoolStartOffsets : UInt32*, pRangeTileCounts : UInt32*, flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_tile_mappings.call(this, pTiledResource, num_tiled_resource_regions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, num_ranges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags)
    end
    def copy_tile_mappings(this : ID3D11DeviceContext3*, pDestTiledResource : Void*, pDestRegionStartCoordinate : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, pSourceTiledResource : Void*, pSourceRegionStartCoordinate : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, pTileRegionSize : Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_tile_mappings.call(this, pDestTiledResource, pDestRegionStartCoordinate, pSourceTiledResource, pSourceRegionStartCoordinate, pTileRegionSize, flags)
    end
    def copy_tiles(this : ID3D11DeviceContext3*, pTiledResource : Void*, pTileRegionStartCoordinate : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, pTileRegionSize : Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, pBuffer : Void*, buffer_start_offset_in_bytes : UInt64, flags : UInt32) : Void
      @lpVtbl.try &.value.copy_tiles.call(this, pTiledResource, pTileRegionStartCoordinate, pTileRegionSize, pBuffer, buffer_start_offset_in_bytes, flags)
    end
    def update_tiles(this : ID3D11DeviceContext3*, pDestTiledResource : Void*, pDestTileRegionStartCoordinate : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, pDestTileRegionSize : Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, pSourceTileData : Void*, flags : UInt32) : Void
      @lpVtbl.try &.value.update_tiles.call(this, pDestTiledResource, pDestTileRegionStartCoordinate, pDestTileRegionSize, pSourceTileData, flags)
    end
    def resize_tile_pool(this : ID3D11DeviceContext3*, pTilePool : Void*, new_size_in_bytes : UInt64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resize_tile_pool.call(this, pTilePool, new_size_in_bytes)
    end
    def tiled_resource_barrier(this : ID3D11DeviceContext3*, pTiledResourceOrViewAccessBeforeBarrier : Void*, pTiledResourceOrViewAccessAfterBarrier : Void*) : Void
      @lpVtbl.try &.value.tiled_resource_barrier.call(this, pTiledResourceOrViewAccessBeforeBarrier, pTiledResourceOrViewAccessAfterBarrier)
    end
    def is_annotation_enabled(this : ID3D11DeviceContext3*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_annotation_enabled.call(this)
    end
    def set_marker_int(this : ID3D11DeviceContext3*, pLabel : Win32cr::Foundation::PWSTR, data : Int32) : Void
      @lpVtbl.try &.value.set_marker_int.call(this, pLabel, data)
    end
    def begin_event_int(this : ID3D11DeviceContext3*, pLabel : Win32cr::Foundation::PWSTR, data : Int32) : Void
      @lpVtbl.try &.value.begin_event_int.call(this, pLabel, data)
    end
    def end_event(this : ID3D11DeviceContext3*) : Void
      @lpVtbl.try &.value.end_event.call(this)
    end
    def flush1(this : ID3D11DeviceContext3*, context_type : Win32cr::Graphics::Direct3D11::D3D11_CONTEXT_TYPE, hEvent : Win32cr::Foundation::HANDLE) : Void
      @lpVtbl.try &.value.flush1.call(this, context_type, hEvent)
    end
    def set_hardware_protection_state(this : ID3D11DeviceContext3*, hw_protection_enable : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.set_hardware_protection_state.call(this, hw_protection_enable)
    end
    def get_hardware_protection_state(this : ID3D11DeviceContext3*, pHwProtectionEnable : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.get_hardware_protection_state.call(this, pHwProtectionEnable)
    end

  end

  @[Extern]
  record ID3D11FenceVtbl,
    query_interface : Proc(ID3D11Fence*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Fence*, UInt32),
    release : Proc(ID3D11Fence*, UInt32),
    get_device : Proc(ID3D11Fence*, Void**, Void),
    get_private_data : Proc(ID3D11Fence*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Fence*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Fence*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    create_shared_handle : Proc(ID3D11Fence*, Win32cr::Security::SECURITY_ATTRIBUTES*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HANDLE*, Win32cr::Foundation::HRESULT),
    get_completed_value : Proc(ID3D11Fence*, UInt64),
    set_event_on_completion : Proc(ID3D11Fence*, UInt64, Win32cr::Foundation::HANDLE, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11Fence, lpVtbl : ID3D11FenceVtbl* do
    GUID = LibC::GUID.new(0xaffde9d1_u32, 0x1df7_u16, 0x4bb7_u16, StaticArray[0x8a_u8, 0x34_u8, 0xf_u8, 0x46_u8, 0x25_u8, 0x1d_u8, 0xab_u8, 0x80_u8])
    def query_interface(this : ID3D11Fence*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Fence*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Fence*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11Fence*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11Fence*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Fence*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Fence*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def create_shared_handle(this : ID3D11Fence*, pAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, dwAccess : UInt32, lpName : Win32cr::Foundation::PWSTR, pHandle : Win32cr::Foundation::HANDLE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_shared_handle.call(this, pAttributes, dwAccess, lpName, pHandle)
    end
    def get_completed_value(this : ID3D11Fence*) : UInt64
      @lpVtbl.try &.value.get_completed_value.call(this)
    end
    def set_event_on_completion(this : ID3D11Fence*, value : UInt64, hEvent : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_event_on_completion.call(this, value, hEvent)
    end

  end

  @[Extern]
  record ID3D11DeviceContext4Vtbl,
    query_interface : Proc(ID3D11DeviceContext4*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11DeviceContext4*, UInt32),
    release : Proc(ID3D11DeviceContext4*, UInt32),
    get_device : Proc(ID3D11DeviceContext4*, Void**, Void),
    get_private_data : Proc(ID3D11DeviceContext4*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11DeviceContext4*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11DeviceContext4*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    vs_set_constant_buffers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    ps_set_shader_resources : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    ps_set_shader : Proc(ID3D11DeviceContext4*, Void*, Void**, UInt32, Void),
    ps_set_samplers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    vs_set_shader : Proc(ID3D11DeviceContext4*, Void*, Void**, UInt32, Void),
    draw_indexed : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Int32, Void),
    draw : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void),
    map : Proc(ID3D11DeviceContext4*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_MAP, UInt32, Win32cr::Graphics::Direct3D11::D3D11_MAPPED_SUBRESOURCE*, Win32cr::Foundation::HRESULT),
    unmap : Proc(ID3D11DeviceContext4*, Void*, UInt32, Void),
    ps_set_constant_buffers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    ia_set_input_layout : Proc(ID3D11DeviceContext4*, Void*, Void),
    ia_set_vertex_buffers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ia_set_index_buffer : Proc(ID3D11DeviceContext4*, Void*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, Void),
    draw_indexed_instanced : Proc(ID3D11DeviceContext4*, UInt32, UInt32, UInt32, Int32, UInt32, Void),
    draw_instanced : Proc(ID3D11DeviceContext4*, UInt32, UInt32, UInt32, UInt32, Void),
    gs_set_constant_buffers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    gs_set_shader : Proc(ID3D11DeviceContext4*, Void*, Void**, UInt32, Void),
    ia_set_primitive_topology : Proc(ID3D11DeviceContext4*, Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY, Void),
    vs_set_shader_resources : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    vs_set_samplers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    begin__ : Proc(ID3D11DeviceContext4*, Void*, Void),
    end__ : Proc(ID3D11DeviceContext4*, Void*, Void),
    get_data : Proc(ID3D11DeviceContext4*, Void*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    set_predication : Proc(ID3D11DeviceContext4*, Void*, Win32cr::Foundation::BOOL, Void),
    gs_set_shader_resources : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    gs_set_samplers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    om_set_render_targets : Proc(ID3D11DeviceContext4*, UInt32, Void**, Void*, Void),
    om_set_render_targets_and_unordered_access_views : Proc(ID3D11DeviceContext4*, UInt32, Void**, Void*, UInt32, UInt32, Void**, UInt32*, Void),
    om_set_blend_state : Proc(ID3D11DeviceContext4*, Void*, Float32*, UInt32, Void),
    om_set_depth_stencil_state : Proc(ID3D11DeviceContext4*, Void*, UInt32, Void),
    so_set_targets : Proc(ID3D11DeviceContext4*, UInt32, Void**, UInt32*, Void),
    draw_auto : Proc(ID3D11DeviceContext4*, Void),
    draw_indexed_instanced_indirect : Proc(ID3D11DeviceContext4*, Void*, UInt32, Void),
    draw_instanced_indirect : Proc(ID3D11DeviceContext4*, Void*, UInt32, Void),
    dispatch : Proc(ID3D11DeviceContext4*, UInt32, UInt32, UInt32, Void),
    dispatch_indirect : Proc(ID3D11DeviceContext4*, Void*, UInt32, Void),
    rs_set_state : Proc(ID3D11DeviceContext4*, Void*, Void),
    rs_set_viewports : Proc(ID3D11DeviceContext4*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*, Void),
    rs_set_scissor_rects : Proc(ID3D11DeviceContext4*, UInt32, Win32cr::Foundation::RECT*, Void),
    copy_subresource_region : Proc(ID3D11DeviceContext4*, Void*, UInt32, UInt32, UInt32, UInt32, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void),
    copy_resource : Proc(ID3D11DeviceContext4*, Void*, Void*, Void),
    update_subresource : Proc(ID3D11DeviceContext4*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void*, UInt32, UInt32, Void),
    copy_structure_count : Proc(ID3D11DeviceContext4*, Void*, UInt32, Void*, Void),
    clear_render_target_view : Proc(ID3D11DeviceContext4*, Void*, Float32*, Void),
    clear_unordered_access_view_uint : Proc(ID3D11DeviceContext4*, Void*, UInt32*, Void),
    clear_unordered_access_view_float : Proc(ID3D11DeviceContext4*, Void*, Float32*, Void),
    clear_depth_stencil_view : Proc(ID3D11DeviceContext4*, Void*, UInt32, Float32, UInt8, Void),
    generate_mips : Proc(ID3D11DeviceContext4*, Void*, Void),
    set_resource_min_lod : Proc(ID3D11DeviceContext4*, Void*, Float32, Void),
    get_resource_min_lod : Proc(ID3D11DeviceContext4*, Void*, Float32),
    resolve_subresource : Proc(ID3D11DeviceContext4*, Void*, UInt32, Void*, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, Void),
    execute_command_list : Proc(ID3D11DeviceContext4*, Void*, Win32cr::Foundation::BOOL, Void),
    hs_set_shader_resources : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    hs_set_shader : Proc(ID3D11DeviceContext4*, Void*, Void**, UInt32, Void),
    hs_set_samplers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    hs_set_constant_buffers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    ds_set_shader_resources : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    ds_set_shader : Proc(ID3D11DeviceContext4*, Void*, Void**, UInt32, Void),
    ds_set_samplers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    ds_set_constant_buffers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    cs_set_shader_resources : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    cs_set_unordered_access_views : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, UInt32*, Void),
    cs_set_shader : Proc(ID3D11DeviceContext4*, Void*, Void**, UInt32, Void),
    cs_set_samplers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    cs_set_constant_buffers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    vs_get_constant_buffers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    ps_get_shader_resources : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    ps_get_shader : Proc(ID3D11DeviceContext4*, Void**, Void**, UInt32*, Void),
    ps_get_samplers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    vs_get_shader : Proc(ID3D11DeviceContext4*, Void**, Void**, UInt32*, Void),
    ps_get_constant_buffers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    ia_get_input_layout : Proc(ID3D11DeviceContext4*, Void**, Void),
    ia_get_vertex_buffers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ia_get_index_buffer : Proc(ID3D11DeviceContext4*, Void**, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT*, UInt32*, Void),
    gs_get_constant_buffers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    gs_get_shader : Proc(ID3D11DeviceContext4*, Void**, Void**, UInt32*, Void),
    ia_get_primitive_topology : Proc(ID3D11DeviceContext4*, Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY*, Void),
    vs_get_shader_resources : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    vs_get_samplers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    get_predication : Proc(ID3D11DeviceContext4*, Void**, Win32cr::Foundation::BOOL*, Void),
    gs_get_shader_resources : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    gs_get_samplers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    om_get_render_targets : Proc(ID3D11DeviceContext4*, UInt32, Void**, Void**, Void),
    om_get_render_targets_and_unordered_access_views : Proc(ID3D11DeviceContext4*, UInt32, Void**, Void**, UInt32, UInt32, Void**, Void),
    om_get_blend_state : Proc(ID3D11DeviceContext4*, Void**, Float32*, UInt32*, Void),
    om_get_depth_stencil_state : Proc(ID3D11DeviceContext4*, Void**, UInt32*, Void),
    so_get_targets : Proc(ID3D11DeviceContext4*, UInt32, Void**, Void),
    rs_get_state : Proc(ID3D11DeviceContext4*, Void**, Void),
    rs_get_viewports : Proc(ID3D11DeviceContext4*, UInt32*, Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*, Void),
    rs_get_scissor_rects : Proc(ID3D11DeviceContext4*, UInt32*, Win32cr::Foundation::RECT*, Void),
    hs_get_shader_resources : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    hs_get_shader : Proc(ID3D11DeviceContext4*, Void**, Void**, UInt32*, Void),
    hs_get_samplers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    hs_get_constant_buffers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    ds_get_shader_resources : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    ds_get_shader : Proc(ID3D11DeviceContext4*, Void**, Void**, UInt32*, Void),
    ds_get_samplers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    ds_get_constant_buffers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    cs_get_shader_resources : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    cs_get_unordered_access_views : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    cs_get_shader : Proc(ID3D11DeviceContext4*, Void**, Void**, UInt32*, Void),
    cs_get_samplers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    cs_get_constant_buffers : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, Void),
    clear_state : Proc(ID3D11DeviceContext4*, Void),
    flush : Proc(ID3D11DeviceContext4*, Void),
    get_type : Proc(ID3D11DeviceContext4*, Win32cr::Graphics::Direct3D11::D3D11_DEVICE_CONTEXT_TYPE),
    get_context_flags : Proc(ID3D11DeviceContext4*, UInt32),
    finish_command_list : Proc(ID3D11DeviceContext4*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    copy_subresource_region1 : Proc(ID3D11DeviceContext4*, Void*, UInt32, UInt32, UInt32, UInt32, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, UInt32, Void),
    update_subresource1 : Proc(ID3D11DeviceContext4*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void*, UInt32, UInt32, UInt32, Void),
    discard_resource : Proc(ID3D11DeviceContext4*, Void*, Void),
    discard_view : Proc(ID3D11DeviceContext4*, Void*, Void),
    vs_set_constant_buffers1 : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    hs_set_constant_buffers1 : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ds_set_constant_buffers1 : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    gs_set_constant_buffers1 : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ps_set_constant_buffers1 : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    cs_set_constant_buffers1 : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    vs_get_constant_buffers1 : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    hs_get_constant_buffers1 : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ds_get_constant_buffers1 : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    gs_get_constant_buffers1 : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    ps_get_constant_buffers1 : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    cs_get_constant_buffers1 : Proc(ID3D11DeviceContext4*, UInt32, UInt32, Void**, UInt32*, UInt32*, Void),
    swap_device_context_state : Proc(ID3D11DeviceContext4*, Void*, Void**, Void),
    clear_view : Proc(ID3D11DeviceContext4*, Void*, Float32*, Win32cr::Foundation::RECT*, UInt32, Void),
    discard_view1 : Proc(ID3D11DeviceContext4*, Void*, Win32cr::Foundation::RECT*, UInt32, Void),
    update_tile_mappings : Proc(ID3D11DeviceContext4*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, Void*, UInt32, UInt32*, UInt32*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    copy_tile_mappings : Proc(ID3D11DeviceContext4*, Void*, Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, Void*, Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, UInt32, Win32cr::Foundation::HRESULT),
    copy_tiles : Proc(ID3D11DeviceContext4*, Void*, Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, Void*, UInt64, UInt32, Void),
    update_tiles : Proc(ID3D11DeviceContext4*, Void*, Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, Void*, UInt32, Void),
    resize_tile_pool : Proc(ID3D11DeviceContext4*, Void*, UInt64, Win32cr::Foundation::HRESULT),
    tiled_resource_barrier : Proc(ID3D11DeviceContext4*, Void*, Void*, Void),
    is_annotation_enabled : Proc(ID3D11DeviceContext4*, Win32cr::Foundation::BOOL),
    set_marker_int : Proc(ID3D11DeviceContext4*, Win32cr::Foundation::PWSTR, Int32, Void),
    begin_event_int : Proc(ID3D11DeviceContext4*, Win32cr::Foundation::PWSTR, Int32, Void),
    end_event : Proc(ID3D11DeviceContext4*, Void),
    flush1 : Proc(ID3D11DeviceContext4*, Win32cr::Graphics::Direct3D11::D3D11_CONTEXT_TYPE, Win32cr::Foundation::HANDLE, Void),
    set_hardware_protection_state : Proc(ID3D11DeviceContext4*, Win32cr::Foundation::BOOL, Void),
    get_hardware_protection_state : Proc(ID3D11DeviceContext4*, Win32cr::Foundation::BOOL*, Void),
    signal : Proc(ID3D11DeviceContext4*, Void*, UInt64, Win32cr::Foundation::HRESULT),
    wait : Proc(ID3D11DeviceContext4*, Void*, UInt64, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11DeviceContext4, lpVtbl : ID3D11DeviceContext4Vtbl* do
    GUID = LibC::GUID.new(0x917600da_u32, 0xf58c_u16, 0x4c33_u16, StaticArray[0x98_u8, 0xd8_u8, 0x3e_u8, 0x15_u8, 0xb3_u8, 0x90_u8, 0xfa_u8, 0x24_u8])
    def query_interface(this : ID3D11DeviceContext4*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11DeviceContext4*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11DeviceContext4*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11DeviceContext4*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11DeviceContext4*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11DeviceContext4*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11DeviceContext4*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def vs_set_constant_buffers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.vs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ps_set_shader_resources(this : ID3D11DeviceContext4*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ps_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ps_set_shader(this : ID3D11DeviceContext4*, pPixelShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.ps_set_shader.call(this, pPixelShader, ppClassInstances, num_class_instances)
    end
    def ps_set_samplers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ps_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def vs_set_shader(this : ID3D11DeviceContext4*, pVertexShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.vs_set_shader.call(this, pVertexShader, ppClassInstances, num_class_instances)
    end
    def draw_indexed(this : ID3D11DeviceContext4*, index_count : UInt32, start_index_location : UInt32, base_vertex_location : Int32) : Void
      @lpVtbl.try &.value.draw_indexed.call(this, index_count, start_index_location, base_vertex_location)
    end
    def draw(this : ID3D11DeviceContext4*, vertex_count : UInt32, start_vertex_location : UInt32) : Void
      @lpVtbl.try &.value.draw.call(this, vertex_count, start_vertex_location)
    end
    def map(this : ID3D11DeviceContext4*, pResource : Void*, subresource : UInt32, map_type : Win32cr::Graphics::Direct3D11::D3D11_MAP, map_flags : UInt32, pMappedResource : Win32cr::Graphics::Direct3D11::D3D11_MAPPED_SUBRESOURCE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.map.call(this, pResource, subresource, map_type, map_flags, pMappedResource)
    end
    def unmap(this : ID3D11DeviceContext4*, pResource : Void*, subresource : UInt32) : Void
      @lpVtbl.try &.value.unmap.call(this, pResource, subresource)
    end
    def ps_set_constant_buffers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ps_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ia_set_input_layout(this : ID3D11DeviceContext4*, pInputLayout : Void*) : Void
      @lpVtbl.try &.value.ia_set_input_layout.call(this, pInputLayout)
    end
    def ia_set_vertex_buffers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppVertexBuffers : Void**, pStrides : UInt32*, pOffsets : UInt32*) : Void
      @lpVtbl.try &.value.ia_set_vertex_buffers.call(this, start_slot, num_buffers, ppVertexBuffers, pStrides, pOffsets)
    end
    def ia_set_index_buffer(this : ID3D11DeviceContext4*, pIndexBuffer : Void*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, offset : UInt32) : Void
      @lpVtbl.try &.value.ia_set_index_buffer.call(this, pIndexBuffer, format, offset)
    end
    def draw_indexed_instanced(this : ID3D11DeviceContext4*, index_count_per_instance : UInt32, instance_count : UInt32, start_index_location : UInt32, base_vertex_location : Int32, start_instance_location : UInt32) : Void
      @lpVtbl.try &.value.draw_indexed_instanced.call(this, index_count_per_instance, instance_count, start_index_location, base_vertex_location, start_instance_location)
    end
    def draw_instanced(this : ID3D11DeviceContext4*, vertex_count_per_instance : UInt32, instance_count : UInt32, start_vertex_location : UInt32, start_instance_location : UInt32) : Void
      @lpVtbl.try &.value.draw_instanced.call(this, vertex_count_per_instance, instance_count, start_vertex_location, start_instance_location)
    end
    def gs_set_constant_buffers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.gs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def gs_set_shader(this : ID3D11DeviceContext4*, pShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.gs_set_shader.call(this, pShader, ppClassInstances, num_class_instances)
    end
    def ia_set_primitive_topology(this : ID3D11DeviceContext4*, topology : Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY) : Void
      @lpVtbl.try &.value.ia_set_primitive_topology.call(this, topology)
    end
    def vs_set_shader_resources(this : ID3D11DeviceContext4*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.vs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def vs_set_samplers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.vs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def begin__(this : ID3D11DeviceContext4*, pAsync : Void*) : Void
      @lpVtbl.try &.value.begin__.call(this, pAsync)
    end
    def end__(this : ID3D11DeviceContext4*, pAsync : Void*) : Void
      @lpVtbl.try &.value.end__.call(this, pAsync)
    end
    def get_data(this : ID3D11DeviceContext4*, pAsync : Void*, pData : Void*, data_size : UInt32, get_data_flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_data.call(this, pAsync, pData, data_size, get_data_flags)
    end
    def set_predication(this : ID3D11DeviceContext4*, pPredicate : Void*, predicate_value : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.set_predication.call(this, pPredicate, predicate_value)
    end
    def gs_set_shader_resources(this : ID3D11DeviceContext4*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.gs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def gs_set_samplers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.gs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def om_set_render_targets(this : ID3D11DeviceContext4*, num_views : UInt32, ppRenderTargetViews : Void**, pDepthStencilView : Void*) : Void
      @lpVtbl.try &.value.om_set_render_targets.call(this, num_views, ppRenderTargetViews, pDepthStencilView)
    end
    def om_set_render_targets_and_unordered_access_views(this : ID3D11DeviceContext4*, num_rt_vs : UInt32, ppRenderTargetViews : Void**, pDepthStencilView : Void*, uav_start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**, pUAVInitialCounts : UInt32*) : Void
      @lpVtbl.try &.value.om_set_render_targets_and_unordered_access_views.call(this, num_rt_vs, ppRenderTargetViews, pDepthStencilView, uav_start_slot, num_ua_vs, ppUnorderedAccessViews, pUAVInitialCounts)
    end
    def om_set_blend_state(this : ID3D11DeviceContext4*, pBlendState : Void*, blend_factor : Float32*, sample_mask : UInt32) : Void
      @lpVtbl.try &.value.om_set_blend_state.call(this, pBlendState, blend_factor, sample_mask)
    end
    def om_set_depth_stencil_state(this : ID3D11DeviceContext4*, pDepthStencilState : Void*, stencil_ref : UInt32) : Void
      @lpVtbl.try &.value.om_set_depth_stencil_state.call(this, pDepthStencilState, stencil_ref)
    end
    def so_set_targets(this : ID3D11DeviceContext4*, num_buffers : UInt32, ppSOTargets : Void**, pOffsets : UInt32*) : Void
      @lpVtbl.try &.value.so_set_targets.call(this, num_buffers, ppSOTargets, pOffsets)
    end
    def draw_auto(this : ID3D11DeviceContext4*) : Void
      @lpVtbl.try &.value.draw_auto.call(this)
    end
    def draw_indexed_instanced_indirect(this : ID3D11DeviceContext4*, pBufferForArgs : Void*, aligned_byte_offset_for_args : UInt32) : Void
      @lpVtbl.try &.value.draw_indexed_instanced_indirect.call(this, pBufferForArgs, aligned_byte_offset_for_args)
    end
    def draw_instanced_indirect(this : ID3D11DeviceContext4*, pBufferForArgs : Void*, aligned_byte_offset_for_args : UInt32) : Void
      @lpVtbl.try &.value.draw_instanced_indirect.call(this, pBufferForArgs, aligned_byte_offset_for_args)
    end
    def dispatch(this : ID3D11DeviceContext4*, thread_group_count_x : UInt32, thread_group_count_y : UInt32, thread_group_count_z : UInt32) : Void
      @lpVtbl.try &.value.dispatch.call(this, thread_group_count_x, thread_group_count_y, thread_group_count_z)
    end
    def dispatch_indirect(this : ID3D11DeviceContext4*, pBufferForArgs : Void*, aligned_byte_offset_for_args : UInt32) : Void
      @lpVtbl.try &.value.dispatch_indirect.call(this, pBufferForArgs, aligned_byte_offset_for_args)
    end
    def rs_set_state(this : ID3D11DeviceContext4*, pRasterizerState : Void*) : Void
      @lpVtbl.try &.value.rs_set_state.call(this, pRasterizerState)
    end
    def rs_set_viewports(this : ID3D11DeviceContext4*, num_viewports : UInt32, pViewports : Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*) : Void
      @lpVtbl.try &.value.rs_set_viewports.call(this, num_viewports, pViewports)
    end
    def rs_set_scissor_rects(this : ID3D11DeviceContext4*, num_rects : UInt32, pRects : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.rs_set_scissor_rects.call(this, num_rects, pRects)
    end
    def copy_subresource_region(this : ID3D11DeviceContext4*, pDstResource : Void*, dst_subresource : UInt32, dst_x : UInt32, dst_y : UInt32, dst_z : UInt32, pSrcResource : Void*, src_subresource : UInt32, pSrcBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*) : Void
      @lpVtbl.try &.value.copy_subresource_region.call(this, pDstResource, dst_subresource, dst_x, dst_y, dst_z, pSrcResource, src_subresource, pSrcBox)
    end
    def copy_resource(this : ID3D11DeviceContext4*, pDstResource : Void*, pSrcResource : Void*) : Void
      @lpVtbl.try &.value.copy_resource.call(this, pDstResource, pSrcResource)
    end
    def update_subresource(this : ID3D11DeviceContext4*, pDstResource : Void*, dst_subresource : UInt32, pDstBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, pSrcData : Void*, src_row_pitch : UInt32, src_depth_pitch : UInt32) : Void
      @lpVtbl.try &.value.update_subresource.call(this, pDstResource, dst_subresource, pDstBox, pSrcData, src_row_pitch, src_depth_pitch)
    end
    def copy_structure_count(this : ID3D11DeviceContext4*, pDstBuffer : Void*, dst_aligned_byte_offset : UInt32, pSrcView : Void*) : Void
      @lpVtbl.try &.value.copy_structure_count.call(this, pDstBuffer, dst_aligned_byte_offset, pSrcView)
    end
    def clear_render_target_view(this : ID3D11DeviceContext4*, pRenderTargetView : Void*, color_rgba : Float32*) : Void
      @lpVtbl.try &.value.clear_render_target_view.call(this, pRenderTargetView, color_rgba)
    end
    def clear_unordered_access_view_uint(this : ID3D11DeviceContext4*, pUnorderedAccessView : Void*, values : UInt32*) : Void
      @lpVtbl.try &.value.clear_unordered_access_view_uint.call(this, pUnorderedAccessView, values)
    end
    def clear_unordered_access_view_float(this : ID3D11DeviceContext4*, pUnorderedAccessView : Void*, values : Float32*) : Void
      @lpVtbl.try &.value.clear_unordered_access_view_float.call(this, pUnorderedAccessView, values)
    end
    def clear_depth_stencil_view(this : ID3D11DeviceContext4*, pDepthStencilView : Void*, clear_flags : UInt32, depth : Float32, stencil : UInt8) : Void
      @lpVtbl.try &.value.clear_depth_stencil_view.call(this, pDepthStencilView, clear_flags, depth, stencil)
    end
    def generate_mips(this : ID3D11DeviceContext4*, pShaderResourceView : Void*) : Void
      @lpVtbl.try &.value.generate_mips.call(this, pShaderResourceView)
    end
    def set_resource_min_lod(this : ID3D11DeviceContext4*, pResource : Void*, min_lod : Float32) : Void
      @lpVtbl.try &.value.set_resource_min_lod.call(this, pResource, min_lod)
    end
    def get_resource_min_lod(this : ID3D11DeviceContext4*, pResource : Void*) : Float32
      @lpVtbl.try &.value.get_resource_min_lod.call(this, pResource)
    end
    def resolve_subresource(this : ID3D11DeviceContext4*, pDstResource : Void*, dst_subresource : UInt32, pSrcResource : Void*, src_subresource : UInt32, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT) : Void
      @lpVtbl.try &.value.resolve_subresource.call(this, pDstResource, dst_subresource, pSrcResource, src_subresource, format)
    end
    def execute_command_list(this : ID3D11DeviceContext4*, pCommandList : Void*, restore_context_state : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.execute_command_list.call(this, pCommandList, restore_context_state)
    end
    def hs_set_shader_resources(this : ID3D11DeviceContext4*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.hs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def hs_set_shader(this : ID3D11DeviceContext4*, pHullShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.hs_set_shader.call(this, pHullShader, ppClassInstances, num_class_instances)
    end
    def hs_set_samplers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.hs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def hs_set_constant_buffers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.hs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ds_set_shader_resources(this : ID3D11DeviceContext4*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ds_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ds_set_shader(this : ID3D11DeviceContext4*, pDomainShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.ds_set_shader.call(this, pDomainShader, ppClassInstances, num_class_instances)
    end
    def ds_set_samplers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ds_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def ds_set_constant_buffers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ds_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def cs_set_shader_resources(this : ID3D11DeviceContext4*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.cs_set_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def cs_set_unordered_access_views(this : ID3D11DeviceContext4*, start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**, pUAVInitialCounts : UInt32*) : Void
      @lpVtbl.try &.value.cs_set_unordered_access_views.call(this, start_slot, num_ua_vs, ppUnorderedAccessViews, pUAVInitialCounts)
    end
    def cs_set_shader(this : ID3D11DeviceContext4*, pComputeShader : Void*, ppClassInstances : Void**, num_class_instances : UInt32) : Void
      @lpVtbl.try &.value.cs_set_shader.call(this, pComputeShader, ppClassInstances, num_class_instances)
    end
    def cs_set_samplers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.cs_set_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def cs_set_constant_buffers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.cs_set_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def vs_get_constant_buffers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.vs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ps_get_shader_resources(this : ID3D11DeviceContext4*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ps_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ps_get_shader(this : ID3D11DeviceContext4*, ppPixelShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.ps_get_shader.call(this, ppPixelShader, ppClassInstances, pNumClassInstances)
    end
    def ps_get_samplers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ps_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def vs_get_shader(this : ID3D11DeviceContext4*, ppVertexShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.vs_get_shader.call(this, ppVertexShader, ppClassInstances, pNumClassInstances)
    end
    def ps_get_constant_buffers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ps_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ia_get_input_layout(this : ID3D11DeviceContext4*, ppInputLayout : Void**) : Void
      @lpVtbl.try &.value.ia_get_input_layout.call(this, ppInputLayout)
    end
    def ia_get_vertex_buffers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppVertexBuffers : Void**, pStrides : UInt32*, pOffsets : UInt32*) : Void
      @lpVtbl.try &.value.ia_get_vertex_buffers.call(this, start_slot, num_buffers, ppVertexBuffers, pStrides, pOffsets)
    end
    def ia_get_index_buffer(this : ID3D11DeviceContext4*, pIndexBuffer : Void**, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT*, offset : UInt32*) : Void
      @lpVtbl.try &.value.ia_get_index_buffer.call(this, pIndexBuffer, format, offset)
    end
    def gs_get_constant_buffers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.gs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def gs_get_shader(this : ID3D11DeviceContext4*, ppGeometryShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.gs_get_shader.call(this, ppGeometryShader, ppClassInstances, pNumClassInstances)
    end
    def ia_get_primitive_topology(this : ID3D11DeviceContext4*, pTopology : Win32cr::Graphics::Direct3D::D3D_PRIMITIVE_TOPOLOGY*) : Void
      @lpVtbl.try &.value.ia_get_primitive_topology.call(this, pTopology)
    end
    def vs_get_shader_resources(this : ID3D11DeviceContext4*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.vs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def vs_get_samplers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.vs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def get_predication(this : ID3D11DeviceContext4*, ppPredicate : Void**, pPredicateValue : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.get_predication.call(this, ppPredicate, pPredicateValue)
    end
    def gs_get_shader_resources(this : ID3D11DeviceContext4*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.gs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def gs_get_samplers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.gs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def om_get_render_targets(this : ID3D11DeviceContext4*, num_views : UInt32, ppRenderTargetViews : Void**, ppDepthStencilView : Void**) : Void
      @lpVtbl.try &.value.om_get_render_targets.call(this, num_views, ppRenderTargetViews, ppDepthStencilView)
    end
    def om_get_render_targets_and_unordered_access_views(this : ID3D11DeviceContext4*, num_rt_vs : UInt32, ppRenderTargetViews : Void**, ppDepthStencilView : Void**, uav_start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**) : Void
      @lpVtbl.try &.value.om_get_render_targets_and_unordered_access_views.call(this, num_rt_vs, ppRenderTargetViews, ppDepthStencilView, uav_start_slot, num_ua_vs, ppUnorderedAccessViews)
    end
    def om_get_blend_state(this : ID3D11DeviceContext4*, ppBlendState : Void**, blend_factor : Float32*, pSampleMask : UInt32*) : Void
      @lpVtbl.try &.value.om_get_blend_state.call(this, ppBlendState, blend_factor, pSampleMask)
    end
    def om_get_depth_stencil_state(this : ID3D11DeviceContext4*, ppDepthStencilState : Void**, pStencilRef : UInt32*) : Void
      @lpVtbl.try &.value.om_get_depth_stencil_state.call(this, ppDepthStencilState, pStencilRef)
    end
    def so_get_targets(this : ID3D11DeviceContext4*, num_buffers : UInt32, ppSOTargets : Void**) : Void
      @lpVtbl.try &.value.so_get_targets.call(this, num_buffers, ppSOTargets)
    end
    def rs_get_state(this : ID3D11DeviceContext4*, ppRasterizerState : Void**) : Void
      @lpVtbl.try &.value.rs_get_state.call(this, ppRasterizerState)
    end
    def rs_get_viewports(this : ID3D11DeviceContext4*, pNumViewports : UInt32*, pViewports : Win32cr::Graphics::Direct3D11::D3D11_VIEWPORT*) : Void
      @lpVtbl.try &.value.rs_get_viewports.call(this, pNumViewports, pViewports)
    end
    def rs_get_scissor_rects(this : ID3D11DeviceContext4*, pNumRects : UInt32*, pRects : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.rs_get_scissor_rects.call(this, pNumRects, pRects)
    end
    def hs_get_shader_resources(this : ID3D11DeviceContext4*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.hs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def hs_get_shader(this : ID3D11DeviceContext4*, ppHullShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.hs_get_shader.call(this, ppHullShader, ppClassInstances, pNumClassInstances)
    end
    def hs_get_samplers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.hs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def hs_get_constant_buffers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.hs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def ds_get_shader_resources(this : ID3D11DeviceContext4*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.ds_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def ds_get_shader(this : ID3D11DeviceContext4*, ppDomainShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.ds_get_shader.call(this, ppDomainShader, ppClassInstances, pNumClassInstances)
    end
    def ds_get_samplers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.ds_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def ds_get_constant_buffers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.ds_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def cs_get_shader_resources(this : ID3D11DeviceContext4*, start_slot : UInt32, num_views : UInt32, ppShaderResourceViews : Void**) : Void
      @lpVtbl.try &.value.cs_get_shader_resources.call(this, start_slot, num_views, ppShaderResourceViews)
    end
    def cs_get_unordered_access_views(this : ID3D11DeviceContext4*, start_slot : UInt32, num_ua_vs : UInt32, ppUnorderedAccessViews : Void**) : Void
      @lpVtbl.try &.value.cs_get_unordered_access_views.call(this, start_slot, num_ua_vs, ppUnorderedAccessViews)
    end
    def cs_get_shader(this : ID3D11DeviceContext4*, ppComputeShader : Void**, ppClassInstances : Void**, pNumClassInstances : UInt32*) : Void
      @lpVtbl.try &.value.cs_get_shader.call(this, ppComputeShader, ppClassInstances, pNumClassInstances)
    end
    def cs_get_samplers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_samplers : UInt32, ppSamplers : Void**) : Void
      @lpVtbl.try &.value.cs_get_samplers.call(this, start_slot, num_samplers, ppSamplers)
    end
    def cs_get_constant_buffers(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**) : Void
      @lpVtbl.try &.value.cs_get_constant_buffers.call(this, start_slot, num_buffers, ppConstantBuffers)
    end
    def clear_state(this : ID3D11DeviceContext4*) : Void
      @lpVtbl.try &.value.clear_state.call(this)
    end
    def flush(this : ID3D11DeviceContext4*) : Void
      @lpVtbl.try &.value.flush.call(this)
    end
    def get_type(this : ID3D11DeviceContext4*) : Win32cr::Graphics::Direct3D11::D3D11_DEVICE_CONTEXT_TYPE
      @lpVtbl.try &.value.get_type.call(this)
    end
    def get_context_flags(this : ID3D11DeviceContext4*) : UInt32
      @lpVtbl.try &.value.get_context_flags.call(this)
    end
    def finish_command_list(this : ID3D11DeviceContext4*, restore_deferred_context_state : Win32cr::Foundation::BOOL, ppCommandList : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.finish_command_list.call(this, restore_deferred_context_state, ppCommandList)
    end
    def copy_subresource_region1(this : ID3D11DeviceContext4*, pDstResource : Void*, dst_subresource : UInt32, dst_x : UInt32, dst_y : UInt32, dst_z : UInt32, pSrcResource : Void*, src_subresource : UInt32, pSrcBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, copy_flags : UInt32) : Void
      @lpVtbl.try &.value.copy_subresource_region1.call(this, pDstResource, dst_subresource, dst_x, dst_y, dst_z, pSrcResource, src_subresource, pSrcBox, copy_flags)
    end
    def update_subresource1(this : ID3D11DeviceContext4*, pDstResource : Void*, dst_subresource : UInt32, pDstBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, pSrcData : Void*, src_row_pitch : UInt32, src_depth_pitch : UInt32, copy_flags : UInt32) : Void
      @lpVtbl.try &.value.update_subresource1.call(this, pDstResource, dst_subresource, pDstBox, pSrcData, src_row_pitch, src_depth_pitch, copy_flags)
    end
    def discard_resource(this : ID3D11DeviceContext4*, pResource : Void*) : Void
      @lpVtbl.try &.value.discard_resource.call(this, pResource)
    end
    def discard_view(this : ID3D11DeviceContext4*, pResourceView : Void*) : Void
      @lpVtbl.try &.value.discard_view.call(this, pResourceView)
    end
    def vs_set_constant_buffers1(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.vs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def hs_set_constant_buffers1(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.hs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ds_set_constant_buffers1(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ds_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def gs_set_constant_buffers1(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.gs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ps_set_constant_buffers1(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ps_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def cs_set_constant_buffers1(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.cs_set_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def vs_get_constant_buffers1(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.vs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def hs_get_constant_buffers1(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.hs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ds_get_constant_buffers1(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ds_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def gs_get_constant_buffers1(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.gs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def ps_get_constant_buffers1(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.ps_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def cs_get_constant_buffers1(this : ID3D11DeviceContext4*, start_slot : UInt32, num_buffers : UInt32, ppConstantBuffers : Void**, pFirstConstant : UInt32*, pNumConstants : UInt32*) : Void
      @lpVtbl.try &.value.cs_get_constant_buffers1.call(this, start_slot, num_buffers, ppConstantBuffers, pFirstConstant, pNumConstants)
    end
    def swap_device_context_state(this : ID3D11DeviceContext4*, pState : Void*, ppPreviousState : Void**) : Void
      @lpVtbl.try &.value.swap_device_context_state.call(this, pState, ppPreviousState)
    end
    def clear_view(this : ID3D11DeviceContext4*, pView : Void*, color : Float32*, pRect : Win32cr::Foundation::RECT*, num_rects : UInt32) : Void
      @lpVtbl.try &.value.clear_view.call(this, pView, color, pRect, num_rects)
    end
    def discard_view1(this : ID3D11DeviceContext4*, pResourceView : Void*, pRects : Win32cr::Foundation::RECT*, num_rects : UInt32) : Void
      @lpVtbl.try &.value.discard_view1.call(this, pResourceView, pRects, num_rects)
    end
    def update_tile_mappings(this : ID3D11DeviceContext4*, pTiledResource : Void*, num_tiled_resource_regions : UInt32, pTiledResourceRegionStartCoordinates : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, pTiledResourceRegionSizes : Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, pTilePool : Void*, num_ranges : UInt32, pRangeFlags : UInt32*, pTilePoolStartOffsets : UInt32*, pRangeTileCounts : UInt32*, flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_tile_mappings.call(this, pTiledResource, num_tiled_resource_regions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, num_ranges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags)
    end
    def copy_tile_mappings(this : ID3D11DeviceContext4*, pDestTiledResource : Void*, pDestRegionStartCoordinate : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, pSourceTiledResource : Void*, pSourceRegionStartCoordinate : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, pTileRegionSize : Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_tile_mappings.call(this, pDestTiledResource, pDestRegionStartCoordinate, pSourceTiledResource, pSourceRegionStartCoordinate, pTileRegionSize, flags)
    end
    def copy_tiles(this : ID3D11DeviceContext4*, pTiledResource : Void*, pTileRegionStartCoordinate : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, pTileRegionSize : Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, pBuffer : Void*, buffer_start_offset_in_bytes : UInt64, flags : UInt32) : Void
      @lpVtbl.try &.value.copy_tiles.call(this, pTiledResource, pTileRegionStartCoordinate, pTileRegionSize, pBuffer, buffer_start_offset_in_bytes, flags)
    end
    def update_tiles(this : ID3D11DeviceContext4*, pDestTiledResource : Void*, pDestTileRegionStartCoordinate : Win32cr::Graphics::Direct3D11::D3D11_TILED_RESOURCE_COORDINATE*, pDestTileRegionSize : Win32cr::Graphics::Direct3D11::D3D11_TILE_REGION_SIZE*, pSourceTileData : Void*, flags : UInt32) : Void
      @lpVtbl.try &.value.update_tiles.call(this, pDestTiledResource, pDestTileRegionStartCoordinate, pDestTileRegionSize, pSourceTileData, flags)
    end
    def resize_tile_pool(this : ID3D11DeviceContext4*, pTilePool : Void*, new_size_in_bytes : UInt64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resize_tile_pool.call(this, pTilePool, new_size_in_bytes)
    end
    def tiled_resource_barrier(this : ID3D11DeviceContext4*, pTiledResourceOrViewAccessBeforeBarrier : Void*, pTiledResourceOrViewAccessAfterBarrier : Void*) : Void
      @lpVtbl.try &.value.tiled_resource_barrier.call(this, pTiledResourceOrViewAccessBeforeBarrier, pTiledResourceOrViewAccessAfterBarrier)
    end
    def is_annotation_enabled(this : ID3D11DeviceContext4*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_annotation_enabled.call(this)
    end
    def set_marker_int(this : ID3D11DeviceContext4*, pLabel : Win32cr::Foundation::PWSTR, data : Int32) : Void
      @lpVtbl.try &.value.set_marker_int.call(this, pLabel, data)
    end
    def begin_event_int(this : ID3D11DeviceContext4*, pLabel : Win32cr::Foundation::PWSTR, data : Int32) : Void
      @lpVtbl.try &.value.begin_event_int.call(this, pLabel, data)
    end
    def end_event(this : ID3D11DeviceContext4*) : Void
      @lpVtbl.try &.value.end_event.call(this)
    end
    def flush1(this : ID3D11DeviceContext4*, context_type : Win32cr::Graphics::Direct3D11::D3D11_CONTEXT_TYPE, hEvent : Win32cr::Foundation::HANDLE) : Void
      @lpVtbl.try &.value.flush1.call(this, context_type, hEvent)
    end
    def set_hardware_protection_state(this : ID3D11DeviceContext4*, hw_protection_enable : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.set_hardware_protection_state.call(this, hw_protection_enable)
    end
    def get_hardware_protection_state(this : ID3D11DeviceContext4*, pHwProtectionEnable : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.get_hardware_protection_state.call(this, pHwProtectionEnable)
    end
    def signal(this : ID3D11DeviceContext4*, pFence : Void*, value : UInt64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.signal.call(this, pFence, value)
    end
    def wait(this : ID3D11DeviceContext4*, pFence : Void*, value : UInt64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.wait.call(this, pFence, value)
    end

  end

  @[Extern]
  record ID3D11Device3Vtbl,
    query_interface : Proc(ID3D11Device3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Device3*, UInt32),
    release : Proc(ID3D11Device3*, UInt32),
    create_buffer : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_BUFFER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture1_d : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE1D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture2_d : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture3_d : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_shader_resource_view : Proc(ID3D11Device3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_unordered_access_view : Proc(ID3D11Device3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_render_target_view : Proc(ID3D11Device3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_depth_stencil_view : Proc(ID3D11Device3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_input_layout : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_INPUT_ELEMENT_DESC*, UInt32, Void*, LibC::UIntPtrT, Void**, Win32cr::Foundation::HRESULT),
    create_vertex_shader : Proc(ID3D11Device3*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_geometry_shader : Proc(ID3D11Device3*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_geometry_shader_with_stream_output : Proc(ID3D11Device3*, Void*, LibC::UIntPtrT, Win32cr::Graphics::Direct3D11::D3D11_SO_DECLARATION_ENTRY*, UInt32, UInt32*, UInt32, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_pixel_shader : Proc(ID3D11Device3*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_hull_shader : Proc(ID3D11Device3*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_domain_shader : Proc(ID3D11Device3*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_compute_shader : Proc(ID3D11Device3*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_class_linkage : Proc(ID3D11Device3*, Void**, Win32cr::Foundation::HRESULT),
    create_blend_state : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_depth_stencil_state : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_rasterizer_state : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_sampler_state : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_SAMPLER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_query : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_predicate : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_counter : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_deferred_context : Proc(ID3D11Device3*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource : Proc(ID3D11Device3*, Win32cr::Foundation::HANDLE, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    check_format_support : Proc(ID3D11Device3*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32*, Win32cr::Foundation::HRESULT),
    check_multisample_quality_levels : Proc(ID3D11Device3*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    check_counter_info : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_INFO*, Void),
    check_counter : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_TYPE*, UInt32*, UInt8*, UInt32*, UInt8*, UInt32*, UInt8*, UInt32*, Win32cr::Foundation::HRESULT),
    check_feature_support : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_FEATURE, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_private_data : Proc(ID3D11Device3*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Device3*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Device3*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_feature_level : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL),
    get_creation_flags : Proc(ID3D11Device3*, UInt32),
    get_device_removed_reason : Proc(ID3D11Device3*, Win32cr::Foundation::HRESULT),
    get_immediate_context : Proc(ID3D11Device3*, Void**, Void),
    set_exception_mode : Proc(ID3D11Device3*, UInt32, Win32cr::Foundation::HRESULT),
    get_exception_mode : Proc(ID3D11Device3*, UInt32),
    get_immediate_context1 : Proc(ID3D11Device3*, Void**, Void),
    create_deferred_context1 : Proc(ID3D11Device3*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_blend_state1 : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_rasterizer_state1 : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_device_context_state : Proc(ID3D11Device3*, UInt32, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, UInt32, UInt32, LibC::GUID*, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource1 : Proc(ID3D11Device3*, Win32cr::Foundation::HANDLE, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource_by_name : Proc(ID3D11Device3*, Win32cr::Foundation::PWSTR, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_immediate_context2 : Proc(ID3D11Device3*, Void**, Void),
    create_deferred_context2 : Proc(ID3D11Device3*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_resource_tiling : Proc(ID3D11Device3*, Void*, UInt32*, Win32cr::Graphics::Direct3D11::D3D11_PACKED_MIP_DESC*, Win32cr::Graphics::Direct3D11::D3D11_TILE_SHAPE*, UInt32*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_TILING*, Void),
    check_multisample_quality_levels1 : Proc(ID3D11Device3*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    create_texture2_d1 : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC1*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture3_d1 : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC1*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_rasterizer_state2 : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC2*, Void**, Win32cr::Foundation::HRESULT),
    create_shader_resource_view1 : Proc(ID3D11Device3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_unordered_access_view1 : Proc(ID3D11Device3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_render_target_view1 : Proc(ID3D11Device3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_query1 : Proc(ID3D11Device3*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    get_immediate_context3 : Proc(ID3D11Device3*, Void**, Void),
    create_deferred_context3 : Proc(ID3D11Device3*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    write_to_subresource : Proc(ID3D11Device3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void*, UInt32, UInt32, Void),
    read_from_subresource : Proc(ID3D11Device3*, Void*, UInt32, UInt32, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void)


  @[Extern]
  record ID3D11Device3, lpVtbl : ID3D11Device3Vtbl* do
    GUID = LibC::GUID.new(0xa05c8c37_u32, 0xd2c6_u16, 0x4732_u16, StaticArray[0xb3_u8, 0xa0_u8, 0x9c_u8, 0xe0_u8, 0xb0_u8, 0xdc_u8, 0x9a_u8, 0xe6_u8])
    def query_interface(this : ID3D11Device3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Device3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Device3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_buffer(this : ID3D11Device3*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_buffer.call(this, pDesc, pInitialData, ppBuffer)
    end
    def create_texture1_d(this : ID3D11Device3*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE1D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture1D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture1_d.call(this, pDesc, pInitialData, ppTexture1D)
    end
    def create_texture2_d(this : ID3D11Device3*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture2D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture2_d.call(this, pDesc, pInitialData, ppTexture2D)
    end
    def create_texture3_d(this : ID3D11Device3*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture3D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture3_d.call(this, pDesc, pInitialData, ppTexture3D)
    end
    def create_shader_resource_view(this : ID3D11Device3*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*, ppSRView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_shader_resource_view.call(this, pResource, pDesc, ppSRView)
    end
    def create_unordered_access_view(this : ID3D11Device3*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*, ppUAView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_unordered_access_view.call(this, pResource, pDesc, ppUAView)
    end
    def create_render_target_view(this : ID3D11Device3*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*, ppRTView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_render_target_view.call(this, pResource, pDesc, ppRTView)
    end
    def create_depth_stencil_view(this : ID3D11Device3*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_VIEW_DESC*, ppDepthStencilView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_depth_stencil_view.call(this, pResource, pDesc, ppDepthStencilView)
    end
    def create_input_layout(this : ID3D11Device3*, pInputElementDescs : Win32cr::Graphics::Direct3D11::D3D11_INPUT_ELEMENT_DESC*, num_elements : UInt32, pShaderBytecodeWithInputSignature : Void*, bytecode_length : LibC::UIntPtrT, ppInputLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_input_layout.call(this, pInputElementDescs, num_elements, pShaderBytecodeWithInputSignature, bytecode_length, ppInputLayout)
    end
    def create_vertex_shader(this : ID3D11Device3*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppVertexShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_vertex_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppVertexShader)
    end
    def create_geometry_shader(this : ID3D11Device3*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppGeometryShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_geometry_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppGeometryShader)
    end
    def create_geometry_shader_with_stream_output(this : ID3D11Device3*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pSODeclaration : Win32cr::Graphics::Direct3D11::D3D11_SO_DECLARATION_ENTRY*, num_entries : UInt32, pBufferStrides : UInt32*, num_strides : UInt32, rasterized_stream : UInt32, pClassLinkage : Void*, ppGeometryShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_geometry_shader_with_stream_output.call(this, pShaderBytecode, bytecode_length, pSODeclaration, num_entries, pBufferStrides, num_strides, rasterized_stream, pClassLinkage, ppGeometryShader)
    end
    def create_pixel_shader(this : ID3D11Device3*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppPixelShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_pixel_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppPixelShader)
    end
    def create_hull_shader(this : ID3D11Device3*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppHullShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_hull_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppHullShader)
    end
    def create_domain_shader(this : ID3D11Device3*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppDomainShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_domain_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppDomainShader)
    end
    def create_compute_shader(this : ID3D11Device3*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppComputeShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_compute_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppComputeShader)
    end
    def create_class_linkage(this : ID3D11Device3*, ppLinkage : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_class_linkage.call(this, ppLinkage)
    end
    def create_blend_state(this : ID3D11Device3*, pBlendStateDesc : Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*, ppBlendState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_blend_state.call(this, pBlendStateDesc, ppBlendState)
    end
    def create_depth_stencil_state(this : ID3D11Device3*, pDepthStencilDesc : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_DESC*, ppDepthStencilState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_depth_stencil_state.call(this, pDepthStencilDesc, ppDepthStencilState)
    end
    def create_rasterizer_state(this : ID3D11Device3*, pRasterizerDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*, ppRasterizerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rasterizer_state.call(this, pRasterizerDesc, ppRasterizerState)
    end
    def create_sampler_state(this : ID3D11Device3*, pSamplerDesc : Win32cr::Graphics::Direct3D11::D3D11_SAMPLER_DESC*, ppSamplerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_sampler_state.call(this, pSamplerDesc, ppSamplerState)
    end
    def create_query(this : ID3D11Device3*, pQueryDesc : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, ppQuery : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_query.call(this, pQueryDesc, ppQuery)
    end
    def create_predicate(this : ID3D11Device3*, pPredicateDesc : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, ppPredicate : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_predicate.call(this, pPredicateDesc, ppPredicate)
    end
    def create_counter(this : ID3D11Device3*, pCounterDesc : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, ppCounter : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_counter.call(this, pCounterDesc, ppCounter)
    end
    def create_deferred_context(this : ID3D11Device3*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context.call(this, context_flags, ppDeferredContext)
    end
    def open_shared_resource(this : ID3D11Device3*, hResource : Win32cr::Foundation::HANDLE, returned_interface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource.call(this, hResource, returned_interface, ppResource)
    end
    def check_format_support(this : ID3D11Device3*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, pFormatSupport : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_format_support.call(this, format, pFormatSupport)
    end
    def check_multisample_quality_levels(this : ID3D11Device3*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, sample_count : UInt32, pNumQualityLevels : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_multisample_quality_levels.call(this, format, sample_count, pNumQualityLevels)
    end
    def check_counter_info(this : ID3D11Device3*, pCounterInfo : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_INFO*) : Void
      @lpVtbl.try &.value.check_counter_info.call(this, pCounterInfo)
    end
    def check_counter(this : ID3D11Device3*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, pType : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_TYPE*, pActiveCounters : UInt32*, szName : UInt8*, pNameLength : UInt32*, szUnits : UInt8*, pUnitsLength : UInt32*, szDescription : UInt8*, pDescriptionLength : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_counter.call(this, pDesc, pType, pActiveCounters, szName, pNameLength, szUnits, pUnitsLength, szDescription, pDescriptionLength)
    end
    def check_feature_support(this : ID3D11Device3*, feature : Win32cr::Graphics::Direct3D11::D3D11_FEATURE, pFeatureSupportData : Void*, feature_support_data_size : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_feature_support.call(this, feature, pFeatureSupportData, feature_support_data_size)
    end
    def get_private_data(this : ID3D11Device3*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Device3*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Device3*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_feature_level(this : ID3D11Device3*) : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL
      @lpVtbl.try &.value.get_feature_level.call(this)
    end
    def get_creation_flags(this : ID3D11Device3*) : UInt32
      @lpVtbl.try &.value.get_creation_flags.call(this)
    end
    def get_device_removed_reason(this : ID3D11Device3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_removed_reason.call(this)
    end
    def get_immediate_context(this : ID3D11Device3*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context.call(this, ppImmediateContext)
    end
    def set_exception_mode(this : ID3D11Device3*, raise_flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_exception_mode.call(this, raise_flags)
    end
    def get_exception_mode(this : ID3D11Device3*) : UInt32
      @lpVtbl.try &.value.get_exception_mode.call(this)
    end
    def get_immediate_context1(this : ID3D11Device3*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context1.call(this, ppImmediateContext)
    end
    def create_deferred_context1(this : ID3D11Device3*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context1.call(this, context_flags, ppDeferredContext)
    end
    def create_blend_state1(this : ID3D11Device3*, pBlendStateDesc : Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC1*, ppBlendState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_blend_state1.call(this, pBlendStateDesc, ppBlendState)
    end
    def create_rasterizer_state1(this : ID3D11Device3*, pRasterizerDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC1*, ppRasterizerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rasterizer_state1.call(this, pRasterizerDesc, ppRasterizerState)
    end
    def create_device_context_state(this : ID3D11Device3*, flags : UInt32, pFeatureLevels : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, feature_levels : UInt32, sdk_version : UInt32, emulated_interface : LibC::GUID*, pChosenFeatureLevel : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, ppContextState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device_context_state.call(this, flags, pFeatureLevels, feature_levels, sdk_version, emulated_interface, pChosenFeatureLevel, ppContextState)
    end
    def open_shared_resource1(this : ID3D11Device3*, hResource : Win32cr::Foundation::HANDLE, returnedInterface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource1.call(this, hResource, returnedInterface, ppResource)
    end
    def open_shared_resource_by_name(this : ID3D11Device3*, lpName : Win32cr::Foundation::PWSTR, dwDesiredAccess : UInt32, returnedInterface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource_by_name.call(this, lpName, dwDesiredAccess, returnedInterface, ppResource)
    end
    def get_immediate_context2(this : ID3D11Device3*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context2.call(this, ppImmediateContext)
    end
    def create_deferred_context2(this : ID3D11Device3*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context2.call(this, context_flags, ppDeferredContext)
    end
    def get_resource_tiling(this : ID3D11Device3*, pTiledResource : Void*, pNumTilesForEntireResource : UInt32*, pPackedMipDesc : Win32cr::Graphics::Direct3D11::D3D11_PACKED_MIP_DESC*, pStandardTileShapeForNonPackedMips : Win32cr::Graphics::Direct3D11::D3D11_TILE_SHAPE*, pNumSubresourceTilings : UInt32*, first_subresource_tiling_to_get : UInt32, pSubresourceTilingsForNonPackedMips : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_TILING*) : Void
      @lpVtbl.try &.value.get_resource_tiling.call(this, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, first_subresource_tiling_to_get, pSubresourceTilingsForNonPackedMips)
    end
    def check_multisample_quality_levels1(this : ID3D11Device3*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, sample_count : UInt32, flags : UInt32, pNumQualityLevels : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_multisample_quality_levels1.call(this, format, sample_count, flags, pNumQualityLevels)
    end
    def create_texture2_d1(this : ID3D11Device3*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC1*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture2D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture2_d1.call(this, pDesc1, pInitialData, ppTexture2D)
    end
    def create_texture3_d1(this : ID3D11Device3*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC1*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture3D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture3_d1.call(this, pDesc1, pInitialData, ppTexture3D)
    end
    def create_rasterizer_state2(this : ID3D11Device3*, pRasterizerDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC2*, ppRasterizerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rasterizer_state2.call(this, pRasterizerDesc, ppRasterizerState)
    end
    def create_shader_resource_view1(this : ID3D11Device3*, pResource : Void*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC1*, ppSRView1 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_shader_resource_view1.call(this, pResource, pDesc1, ppSRView1)
    end
    def create_unordered_access_view1(this : ID3D11Device3*, pResource : Void*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC1*, ppUAView1 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_unordered_access_view1.call(this, pResource, pDesc1, ppUAView1)
    end
    def create_render_target_view1(this : ID3D11Device3*, pResource : Void*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC1*, ppRTView1 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_render_target_view1.call(this, pResource, pDesc1, ppRTView1)
    end
    def create_query1(this : ID3D11Device3*, pQueryDesc1 : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC1*, ppQuery1 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_query1.call(this, pQueryDesc1, ppQuery1)
    end
    def get_immediate_context3(this : ID3D11Device3*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context3.call(this, ppImmediateContext)
    end
    def create_deferred_context3(this : ID3D11Device3*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context3.call(this, context_flags, ppDeferredContext)
    end
    def write_to_subresource(this : ID3D11Device3*, pDstResource : Void*, dst_subresource : UInt32, pDstBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, pSrcData : Void*, src_row_pitch : UInt32, src_depth_pitch : UInt32) : Void
      @lpVtbl.try &.value.write_to_subresource.call(this, pDstResource, dst_subresource, pDstBox, pSrcData, src_row_pitch, src_depth_pitch)
    end
    def read_from_subresource(this : ID3D11Device3*, pDstData : Void*, dst_row_pitch : UInt32, dst_depth_pitch : UInt32, pSrcResource : Void*, src_subresource : UInt32, pSrcBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*) : Void
      @lpVtbl.try &.value.read_from_subresource.call(this, pDstData, dst_row_pitch, dst_depth_pitch, pSrcResource, src_subresource, pSrcBox)
    end

  end

  @[Extern]
  record ID3D11Device4Vtbl,
    query_interface : Proc(ID3D11Device4*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Device4*, UInt32),
    release : Proc(ID3D11Device4*, UInt32),
    create_buffer : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_BUFFER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture1_d : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE1D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture2_d : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture3_d : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_shader_resource_view : Proc(ID3D11Device4*, Void*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_unordered_access_view : Proc(ID3D11Device4*, Void*, Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_render_target_view : Proc(ID3D11Device4*, Void*, Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_depth_stencil_view : Proc(ID3D11Device4*, Void*, Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_input_layout : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_INPUT_ELEMENT_DESC*, UInt32, Void*, LibC::UIntPtrT, Void**, Win32cr::Foundation::HRESULT),
    create_vertex_shader : Proc(ID3D11Device4*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_geometry_shader : Proc(ID3D11Device4*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_geometry_shader_with_stream_output : Proc(ID3D11Device4*, Void*, LibC::UIntPtrT, Win32cr::Graphics::Direct3D11::D3D11_SO_DECLARATION_ENTRY*, UInt32, UInt32*, UInt32, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_pixel_shader : Proc(ID3D11Device4*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_hull_shader : Proc(ID3D11Device4*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_domain_shader : Proc(ID3D11Device4*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_compute_shader : Proc(ID3D11Device4*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_class_linkage : Proc(ID3D11Device4*, Void**, Win32cr::Foundation::HRESULT),
    create_blend_state : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_depth_stencil_state : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_rasterizer_state : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_sampler_state : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_SAMPLER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_query : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_predicate : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_counter : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_deferred_context : Proc(ID3D11Device4*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource : Proc(ID3D11Device4*, Win32cr::Foundation::HANDLE, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    check_format_support : Proc(ID3D11Device4*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32*, Win32cr::Foundation::HRESULT),
    check_multisample_quality_levels : Proc(ID3D11Device4*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    check_counter_info : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_INFO*, Void),
    check_counter : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_TYPE*, UInt32*, UInt8*, UInt32*, UInt8*, UInt32*, UInt8*, UInt32*, Win32cr::Foundation::HRESULT),
    check_feature_support : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_FEATURE, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_private_data : Proc(ID3D11Device4*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Device4*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Device4*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_feature_level : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL),
    get_creation_flags : Proc(ID3D11Device4*, UInt32),
    get_device_removed_reason : Proc(ID3D11Device4*, Win32cr::Foundation::HRESULT),
    get_immediate_context : Proc(ID3D11Device4*, Void**, Void),
    set_exception_mode : Proc(ID3D11Device4*, UInt32, Win32cr::Foundation::HRESULT),
    get_exception_mode : Proc(ID3D11Device4*, UInt32),
    get_immediate_context1 : Proc(ID3D11Device4*, Void**, Void),
    create_deferred_context1 : Proc(ID3D11Device4*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_blend_state1 : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_rasterizer_state1 : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_device_context_state : Proc(ID3D11Device4*, UInt32, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, UInt32, UInt32, LibC::GUID*, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource1 : Proc(ID3D11Device4*, Win32cr::Foundation::HANDLE, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource_by_name : Proc(ID3D11Device4*, Win32cr::Foundation::PWSTR, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_immediate_context2 : Proc(ID3D11Device4*, Void**, Void),
    create_deferred_context2 : Proc(ID3D11Device4*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_resource_tiling : Proc(ID3D11Device4*, Void*, UInt32*, Win32cr::Graphics::Direct3D11::D3D11_PACKED_MIP_DESC*, Win32cr::Graphics::Direct3D11::D3D11_TILE_SHAPE*, UInt32*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_TILING*, Void),
    check_multisample_quality_levels1 : Proc(ID3D11Device4*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    create_texture2_d1 : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC1*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture3_d1 : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC1*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_rasterizer_state2 : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC2*, Void**, Win32cr::Foundation::HRESULT),
    create_shader_resource_view1 : Proc(ID3D11Device4*, Void*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_unordered_access_view1 : Proc(ID3D11Device4*, Void*, Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_render_target_view1 : Proc(ID3D11Device4*, Void*, Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_query1 : Proc(ID3D11Device4*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    get_immediate_context3 : Proc(ID3D11Device4*, Void**, Void),
    create_deferred_context3 : Proc(ID3D11Device4*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    write_to_subresource : Proc(ID3D11Device4*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void*, UInt32, UInt32, Void),
    read_from_subresource : Proc(ID3D11Device4*, Void*, UInt32, UInt32, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void),
    register_device_removed_event : Proc(ID3D11Device4*, Win32cr::Foundation::HANDLE, UInt32*, Win32cr::Foundation::HRESULT),
    unregister_device_removed : Proc(ID3D11Device4*, UInt32, Void)


  @[Extern]
  record ID3D11Device4, lpVtbl : ID3D11Device4Vtbl* do
    GUID = LibC::GUID.new(0x8992ab71_u32, 0x2e6_u16, 0x4b8d_u16, StaticArray[0xba_u8, 0x48_u8, 0xb0_u8, 0x56_u8, 0xdc_u8, 0xda_u8, 0x42_u8, 0xc4_u8])
    def query_interface(this : ID3D11Device4*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Device4*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Device4*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_buffer(this : ID3D11Device4*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_buffer.call(this, pDesc, pInitialData, ppBuffer)
    end
    def create_texture1_d(this : ID3D11Device4*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE1D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture1D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture1_d.call(this, pDesc, pInitialData, ppTexture1D)
    end
    def create_texture2_d(this : ID3D11Device4*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture2D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture2_d.call(this, pDesc, pInitialData, ppTexture2D)
    end
    def create_texture3_d(this : ID3D11Device4*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture3D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture3_d.call(this, pDesc, pInitialData, ppTexture3D)
    end
    def create_shader_resource_view(this : ID3D11Device4*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*, ppSRView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_shader_resource_view.call(this, pResource, pDesc, ppSRView)
    end
    def create_unordered_access_view(this : ID3D11Device4*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*, ppUAView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_unordered_access_view.call(this, pResource, pDesc, ppUAView)
    end
    def create_render_target_view(this : ID3D11Device4*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*, ppRTView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_render_target_view.call(this, pResource, pDesc, ppRTView)
    end
    def create_depth_stencil_view(this : ID3D11Device4*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_VIEW_DESC*, ppDepthStencilView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_depth_stencil_view.call(this, pResource, pDesc, ppDepthStencilView)
    end
    def create_input_layout(this : ID3D11Device4*, pInputElementDescs : Win32cr::Graphics::Direct3D11::D3D11_INPUT_ELEMENT_DESC*, num_elements : UInt32, pShaderBytecodeWithInputSignature : Void*, bytecode_length : LibC::UIntPtrT, ppInputLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_input_layout.call(this, pInputElementDescs, num_elements, pShaderBytecodeWithInputSignature, bytecode_length, ppInputLayout)
    end
    def create_vertex_shader(this : ID3D11Device4*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppVertexShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_vertex_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppVertexShader)
    end
    def create_geometry_shader(this : ID3D11Device4*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppGeometryShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_geometry_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppGeometryShader)
    end
    def create_geometry_shader_with_stream_output(this : ID3D11Device4*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pSODeclaration : Win32cr::Graphics::Direct3D11::D3D11_SO_DECLARATION_ENTRY*, num_entries : UInt32, pBufferStrides : UInt32*, num_strides : UInt32, rasterized_stream : UInt32, pClassLinkage : Void*, ppGeometryShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_geometry_shader_with_stream_output.call(this, pShaderBytecode, bytecode_length, pSODeclaration, num_entries, pBufferStrides, num_strides, rasterized_stream, pClassLinkage, ppGeometryShader)
    end
    def create_pixel_shader(this : ID3D11Device4*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppPixelShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_pixel_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppPixelShader)
    end
    def create_hull_shader(this : ID3D11Device4*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppHullShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_hull_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppHullShader)
    end
    def create_domain_shader(this : ID3D11Device4*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppDomainShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_domain_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppDomainShader)
    end
    def create_compute_shader(this : ID3D11Device4*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppComputeShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_compute_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppComputeShader)
    end
    def create_class_linkage(this : ID3D11Device4*, ppLinkage : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_class_linkage.call(this, ppLinkage)
    end
    def create_blend_state(this : ID3D11Device4*, pBlendStateDesc : Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*, ppBlendState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_blend_state.call(this, pBlendStateDesc, ppBlendState)
    end
    def create_depth_stencil_state(this : ID3D11Device4*, pDepthStencilDesc : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_DESC*, ppDepthStencilState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_depth_stencil_state.call(this, pDepthStencilDesc, ppDepthStencilState)
    end
    def create_rasterizer_state(this : ID3D11Device4*, pRasterizerDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*, ppRasterizerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rasterizer_state.call(this, pRasterizerDesc, ppRasterizerState)
    end
    def create_sampler_state(this : ID3D11Device4*, pSamplerDesc : Win32cr::Graphics::Direct3D11::D3D11_SAMPLER_DESC*, ppSamplerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_sampler_state.call(this, pSamplerDesc, ppSamplerState)
    end
    def create_query(this : ID3D11Device4*, pQueryDesc : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, ppQuery : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_query.call(this, pQueryDesc, ppQuery)
    end
    def create_predicate(this : ID3D11Device4*, pPredicateDesc : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, ppPredicate : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_predicate.call(this, pPredicateDesc, ppPredicate)
    end
    def create_counter(this : ID3D11Device4*, pCounterDesc : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, ppCounter : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_counter.call(this, pCounterDesc, ppCounter)
    end
    def create_deferred_context(this : ID3D11Device4*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context.call(this, context_flags, ppDeferredContext)
    end
    def open_shared_resource(this : ID3D11Device4*, hResource : Win32cr::Foundation::HANDLE, returned_interface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource.call(this, hResource, returned_interface, ppResource)
    end
    def check_format_support(this : ID3D11Device4*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, pFormatSupport : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_format_support.call(this, format, pFormatSupport)
    end
    def check_multisample_quality_levels(this : ID3D11Device4*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, sample_count : UInt32, pNumQualityLevels : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_multisample_quality_levels.call(this, format, sample_count, pNumQualityLevels)
    end
    def check_counter_info(this : ID3D11Device4*, pCounterInfo : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_INFO*) : Void
      @lpVtbl.try &.value.check_counter_info.call(this, pCounterInfo)
    end
    def check_counter(this : ID3D11Device4*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, pType : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_TYPE*, pActiveCounters : UInt32*, szName : UInt8*, pNameLength : UInt32*, szUnits : UInt8*, pUnitsLength : UInt32*, szDescription : UInt8*, pDescriptionLength : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_counter.call(this, pDesc, pType, pActiveCounters, szName, pNameLength, szUnits, pUnitsLength, szDescription, pDescriptionLength)
    end
    def check_feature_support(this : ID3D11Device4*, feature : Win32cr::Graphics::Direct3D11::D3D11_FEATURE, pFeatureSupportData : Void*, feature_support_data_size : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_feature_support.call(this, feature, pFeatureSupportData, feature_support_data_size)
    end
    def get_private_data(this : ID3D11Device4*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Device4*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Device4*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_feature_level(this : ID3D11Device4*) : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL
      @lpVtbl.try &.value.get_feature_level.call(this)
    end
    def get_creation_flags(this : ID3D11Device4*) : UInt32
      @lpVtbl.try &.value.get_creation_flags.call(this)
    end
    def get_device_removed_reason(this : ID3D11Device4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_removed_reason.call(this)
    end
    def get_immediate_context(this : ID3D11Device4*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context.call(this, ppImmediateContext)
    end
    def set_exception_mode(this : ID3D11Device4*, raise_flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_exception_mode.call(this, raise_flags)
    end
    def get_exception_mode(this : ID3D11Device4*) : UInt32
      @lpVtbl.try &.value.get_exception_mode.call(this)
    end
    def get_immediate_context1(this : ID3D11Device4*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context1.call(this, ppImmediateContext)
    end
    def create_deferred_context1(this : ID3D11Device4*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context1.call(this, context_flags, ppDeferredContext)
    end
    def create_blend_state1(this : ID3D11Device4*, pBlendStateDesc : Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC1*, ppBlendState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_blend_state1.call(this, pBlendStateDesc, ppBlendState)
    end
    def create_rasterizer_state1(this : ID3D11Device4*, pRasterizerDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC1*, ppRasterizerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rasterizer_state1.call(this, pRasterizerDesc, ppRasterizerState)
    end
    def create_device_context_state(this : ID3D11Device4*, flags : UInt32, pFeatureLevels : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, feature_levels : UInt32, sdk_version : UInt32, emulated_interface : LibC::GUID*, pChosenFeatureLevel : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, ppContextState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device_context_state.call(this, flags, pFeatureLevels, feature_levels, sdk_version, emulated_interface, pChosenFeatureLevel, ppContextState)
    end
    def open_shared_resource1(this : ID3D11Device4*, hResource : Win32cr::Foundation::HANDLE, returnedInterface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource1.call(this, hResource, returnedInterface, ppResource)
    end
    def open_shared_resource_by_name(this : ID3D11Device4*, lpName : Win32cr::Foundation::PWSTR, dwDesiredAccess : UInt32, returnedInterface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource_by_name.call(this, lpName, dwDesiredAccess, returnedInterface, ppResource)
    end
    def get_immediate_context2(this : ID3D11Device4*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context2.call(this, ppImmediateContext)
    end
    def create_deferred_context2(this : ID3D11Device4*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context2.call(this, context_flags, ppDeferredContext)
    end
    def get_resource_tiling(this : ID3D11Device4*, pTiledResource : Void*, pNumTilesForEntireResource : UInt32*, pPackedMipDesc : Win32cr::Graphics::Direct3D11::D3D11_PACKED_MIP_DESC*, pStandardTileShapeForNonPackedMips : Win32cr::Graphics::Direct3D11::D3D11_TILE_SHAPE*, pNumSubresourceTilings : UInt32*, first_subresource_tiling_to_get : UInt32, pSubresourceTilingsForNonPackedMips : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_TILING*) : Void
      @lpVtbl.try &.value.get_resource_tiling.call(this, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, first_subresource_tiling_to_get, pSubresourceTilingsForNonPackedMips)
    end
    def check_multisample_quality_levels1(this : ID3D11Device4*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, sample_count : UInt32, flags : UInt32, pNumQualityLevels : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_multisample_quality_levels1.call(this, format, sample_count, flags, pNumQualityLevels)
    end
    def create_texture2_d1(this : ID3D11Device4*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC1*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture2D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture2_d1.call(this, pDesc1, pInitialData, ppTexture2D)
    end
    def create_texture3_d1(this : ID3D11Device4*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC1*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture3D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture3_d1.call(this, pDesc1, pInitialData, ppTexture3D)
    end
    def create_rasterizer_state2(this : ID3D11Device4*, pRasterizerDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC2*, ppRasterizerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rasterizer_state2.call(this, pRasterizerDesc, ppRasterizerState)
    end
    def create_shader_resource_view1(this : ID3D11Device4*, pResource : Void*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC1*, ppSRView1 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_shader_resource_view1.call(this, pResource, pDesc1, ppSRView1)
    end
    def create_unordered_access_view1(this : ID3D11Device4*, pResource : Void*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC1*, ppUAView1 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_unordered_access_view1.call(this, pResource, pDesc1, ppUAView1)
    end
    def create_render_target_view1(this : ID3D11Device4*, pResource : Void*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC1*, ppRTView1 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_render_target_view1.call(this, pResource, pDesc1, ppRTView1)
    end
    def create_query1(this : ID3D11Device4*, pQueryDesc1 : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC1*, ppQuery1 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_query1.call(this, pQueryDesc1, ppQuery1)
    end
    def get_immediate_context3(this : ID3D11Device4*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context3.call(this, ppImmediateContext)
    end
    def create_deferred_context3(this : ID3D11Device4*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context3.call(this, context_flags, ppDeferredContext)
    end
    def write_to_subresource(this : ID3D11Device4*, pDstResource : Void*, dst_subresource : UInt32, pDstBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, pSrcData : Void*, src_row_pitch : UInt32, src_depth_pitch : UInt32) : Void
      @lpVtbl.try &.value.write_to_subresource.call(this, pDstResource, dst_subresource, pDstBox, pSrcData, src_row_pitch, src_depth_pitch)
    end
    def read_from_subresource(this : ID3D11Device4*, pDstData : Void*, dst_row_pitch : UInt32, dst_depth_pitch : UInt32, pSrcResource : Void*, src_subresource : UInt32, pSrcBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*) : Void
      @lpVtbl.try &.value.read_from_subresource.call(this, pDstData, dst_row_pitch, dst_depth_pitch, pSrcResource, src_subresource, pSrcBox)
    end
    def register_device_removed_event(this : ID3D11Device4*, hEvent : Win32cr::Foundation::HANDLE, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_device_removed_event.call(this, hEvent, pdwCookie)
    end
    def unregister_device_removed(this : ID3D11Device4*, dwCookie : UInt32) : Void
      @lpVtbl.try &.value.unregister_device_removed.call(this, dwCookie)
    end

  end

  @[Extern]
  record ID3D11Device5Vtbl,
    query_interface : Proc(ID3D11Device5*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Device5*, UInt32),
    release : Proc(ID3D11Device5*, UInt32),
    create_buffer : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_BUFFER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture1_d : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE1D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture2_d : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture3_d : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_shader_resource_view : Proc(ID3D11Device5*, Void*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_unordered_access_view : Proc(ID3D11Device5*, Void*, Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_render_target_view : Proc(ID3D11Device5*, Void*, Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_depth_stencil_view : Proc(ID3D11Device5*, Void*, Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_input_layout : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_INPUT_ELEMENT_DESC*, UInt32, Void*, LibC::UIntPtrT, Void**, Win32cr::Foundation::HRESULT),
    create_vertex_shader : Proc(ID3D11Device5*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_geometry_shader : Proc(ID3D11Device5*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_geometry_shader_with_stream_output : Proc(ID3D11Device5*, Void*, LibC::UIntPtrT, Win32cr::Graphics::Direct3D11::D3D11_SO_DECLARATION_ENTRY*, UInt32, UInt32*, UInt32, UInt32, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_pixel_shader : Proc(ID3D11Device5*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_hull_shader : Proc(ID3D11Device5*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_domain_shader : Proc(ID3D11Device5*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_compute_shader : Proc(ID3D11Device5*, Void*, LibC::UIntPtrT, Void*, Void**, Win32cr::Foundation::HRESULT),
    create_class_linkage : Proc(ID3D11Device5*, Void**, Win32cr::Foundation::HRESULT),
    create_blend_state : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_depth_stencil_state : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_rasterizer_state : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_sampler_state : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_SAMPLER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_query : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_predicate : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_counter : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_deferred_context : Proc(ID3D11Device5*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource : Proc(ID3D11Device5*, Win32cr::Foundation::HANDLE, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    check_format_support : Proc(ID3D11Device5*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32*, Win32cr::Foundation::HRESULT),
    check_multisample_quality_levels : Proc(ID3D11Device5*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    check_counter_info : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_INFO*, Void),
    check_counter : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_COUNTER_TYPE*, UInt32*, UInt8*, UInt32*, UInt8*, UInt32*, UInt8*, UInt32*, Win32cr::Foundation::HRESULT),
    check_feature_support : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_FEATURE, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_private_data : Proc(ID3D11Device5*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11Device5*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11Device5*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_feature_level : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL),
    get_creation_flags : Proc(ID3D11Device5*, UInt32),
    get_device_removed_reason : Proc(ID3D11Device5*, Win32cr::Foundation::HRESULT),
    get_immediate_context : Proc(ID3D11Device5*, Void**, Void),
    set_exception_mode : Proc(ID3D11Device5*, UInt32, Win32cr::Foundation::HRESULT),
    get_exception_mode : Proc(ID3D11Device5*, UInt32),
    get_immediate_context1 : Proc(ID3D11Device5*, Void**, Void),
    create_deferred_context1 : Proc(ID3D11Device5*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_blend_state1 : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_rasterizer_state1 : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_device_context_state : Proc(ID3D11Device5*, UInt32, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, UInt32, UInt32, LibC::GUID*, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource1 : Proc(ID3D11Device5*, Win32cr::Foundation::HANDLE, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    open_shared_resource_by_name : Proc(ID3D11Device5*, Win32cr::Foundation::PWSTR, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_immediate_context2 : Proc(ID3D11Device5*, Void**, Void),
    create_deferred_context2 : Proc(ID3D11Device5*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_resource_tiling : Proc(ID3D11Device5*, Void*, UInt32*, Win32cr::Graphics::Direct3D11::D3D11_PACKED_MIP_DESC*, Win32cr::Graphics::Direct3D11::D3D11_TILE_SHAPE*, UInt32*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_TILING*, Void),
    check_multisample_quality_levels1 : Proc(ID3D11Device5*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    create_texture2_d1 : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC1*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_texture3_d1 : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC1*, Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, Void**, Win32cr::Foundation::HRESULT),
    create_rasterizer_state2 : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC2*, Void**, Win32cr::Foundation::HRESULT),
    create_shader_resource_view1 : Proc(ID3D11Device5*, Void*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_unordered_access_view1 : Proc(ID3D11Device5*, Void*, Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_render_target_view1 : Proc(ID3D11Device5*, Void*, Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    create_query1 : Proc(ID3D11Device5*, Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC1*, Void**, Win32cr::Foundation::HRESULT),
    get_immediate_context3 : Proc(ID3D11Device5*, Void**, Void),
    create_deferred_context3 : Proc(ID3D11Device5*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    write_to_subresource : Proc(ID3D11Device5*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void*, UInt32, UInt32, Void),
    read_from_subresource : Proc(ID3D11Device5*, Void*, UInt32, UInt32, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_BOX*, Void),
    register_device_removed_event : Proc(ID3D11Device5*, Win32cr::Foundation::HANDLE, UInt32*, Win32cr::Foundation::HRESULT),
    unregister_device_removed : Proc(ID3D11Device5*, UInt32, Void),
    open_shared_fence : Proc(ID3D11Device5*, Win32cr::Foundation::HANDLE, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    create_fence : Proc(ID3D11Device5*, UInt64, Win32cr::Graphics::Direct3D11::D3D11_FENCE_FLAG, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11Device5, lpVtbl : ID3D11Device5Vtbl* do
    GUID = LibC::GUID.new(0x8ffde202_u32, 0xa0e7_u16, 0x45df_u16, StaticArray[0x9e_u8, 0x1_u8, 0xe8_u8, 0x37_u8, 0x80_u8, 0x1b_u8, 0x5e_u8, 0xa0_u8])
    def query_interface(this : ID3D11Device5*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Device5*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Device5*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_buffer(this : ID3D11Device5*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_BUFFER_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_buffer.call(this, pDesc, pInitialData, ppBuffer)
    end
    def create_texture1_d(this : ID3D11Device5*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE1D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture1D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture1_d.call(this, pDesc, pInitialData, ppTexture1D)
    end
    def create_texture2_d(this : ID3D11Device5*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture2D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture2_d.call(this, pDesc, pInitialData, ppTexture2D)
    end
    def create_texture3_d(this : ID3D11Device5*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture3D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture3_d.call(this, pDesc, pInitialData, ppTexture3D)
    end
    def create_shader_resource_view(this : ID3D11Device5*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC*, ppSRView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_shader_resource_view.call(this, pResource, pDesc, ppSRView)
    end
    def create_unordered_access_view(this : ID3D11Device5*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC*, ppUAView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_unordered_access_view.call(this, pResource, pDesc, ppUAView)
    end
    def create_render_target_view(this : ID3D11Device5*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC*, ppRTView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_render_target_view.call(this, pResource, pDesc, ppRTView)
    end
    def create_depth_stencil_view(this : ID3D11Device5*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_VIEW_DESC*, ppDepthStencilView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_depth_stencil_view.call(this, pResource, pDesc, ppDepthStencilView)
    end
    def create_input_layout(this : ID3D11Device5*, pInputElementDescs : Win32cr::Graphics::Direct3D11::D3D11_INPUT_ELEMENT_DESC*, num_elements : UInt32, pShaderBytecodeWithInputSignature : Void*, bytecode_length : LibC::UIntPtrT, ppInputLayout : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_input_layout.call(this, pInputElementDescs, num_elements, pShaderBytecodeWithInputSignature, bytecode_length, ppInputLayout)
    end
    def create_vertex_shader(this : ID3D11Device5*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppVertexShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_vertex_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppVertexShader)
    end
    def create_geometry_shader(this : ID3D11Device5*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppGeometryShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_geometry_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppGeometryShader)
    end
    def create_geometry_shader_with_stream_output(this : ID3D11Device5*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pSODeclaration : Win32cr::Graphics::Direct3D11::D3D11_SO_DECLARATION_ENTRY*, num_entries : UInt32, pBufferStrides : UInt32*, num_strides : UInt32, rasterized_stream : UInt32, pClassLinkage : Void*, ppGeometryShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_geometry_shader_with_stream_output.call(this, pShaderBytecode, bytecode_length, pSODeclaration, num_entries, pBufferStrides, num_strides, rasterized_stream, pClassLinkage, ppGeometryShader)
    end
    def create_pixel_shader(this : ID3D11Device5*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppPixelShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_pixel_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppPixelShader)
    end
    def create_hull_shader(this : ID3D11Device5*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppHullShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_hull_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppHullShader)
    end
    def create_domain_shader(this : ID3D11Device5*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppDomainShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_domain_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppDomainShader)
    end
    def create_compute_shader(this : ID3D11Device5*, pShaderBytecode : Void*, bytecode_length : LibC::UIntPtrT, pClassLinkage : Void*, ppComputeShader : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_compute_shader.call(this, pShaderBytecode, bytecode_length, pClassLinkage, ppComputeShader)
    end
    def create_class_linkage(this : ID3D11Device5*, ppLinkage : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_class_linkage.call(this, ppLinkage)
    end
    def create_blend_state(this : ID3D11Device5*, pBlendStateDesc : Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC*, ppBlendState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_blend_state.call(this, pBlendStateDesc, ppBlendState)
    end
    def create_depth_stencil_state(this : ID3D11Device5*, pDepthStencilDesc : Win32cr::Graphics::Direct3D11::D3D11_DEPTH_STENCIL_DESC*, ppDepthStencilState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_depth_stencil_state.call(this, pDepthStencilDesc, ppDepthStencilState)
    end
    def create_rasterizer_state(this : ID3D11Device5*, pRasterizerDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC*, ppRasterizerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rasterizer_state.call(this, pRasterizerDesc, ppRasterizerState)
    end
    def create_sampler_state(this : ID3D11Device5*, pSamplerDesc : Win32cr::Graphics::Direct3D11::D3D11_SAMPLER_DESC*, ppSamplerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_sampler_state.call(this, pSamplerDesc, ppSamplerState)
    end
    def create_query(this : ID3D11Device5*, pQueryDesc : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, ppQuery : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_query.call(this, pQueryDesc, ppQuery)
    end
    def create_predicate(this : ID3D11Device5*, pPredicateDesc : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC*, ppPredicate : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_predicate.call(this, pPredicateDesc, ppPredicate)
    end
    def create_counter(this : ID3D11Device5*, pCounterDesc : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, ppCounter : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_counter.call(this, pCounterDesc, ppCounter)
    end
    def create_deferred_context(this : ID3D11Device5*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context.call(this, context_flags, ppDeferredContext)
    end
    def open_shared_resource(this : ID3D11Device5*, hResource : Win32cr::Foundation::HANDLE, returned_interface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource.call(this, hResource, returned_interface, ppResource)
    end
    def check_format_support(this : ID3D11Device5*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, pFormatSupport : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_format_support.call(this, format, pFormatSupport)
    end
    def check_multisample_quality_levels(this : ID3D11Device5*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, sample_count : UInt32, pNumQualityLevels : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_multisample_quality_levels.call(this, format, sample_count, pNumQualityLevels)
    end
    def check_counter_info(this : ID3D11Device5*, pCounterInfo : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_INFO*) : Void
      @lpVtbl.try &.value.check_counter_info.call(this, pCounterInfo)
    end
    def check_counter(this : ID3D11Device5*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_DESC*, pType : Win32cr::Graphics::Direct3D11::D3D11_COUNTER_TYPE*, pActiveCounters : UInt32*, szName : UInt8*, pNameLength : UInt32*, szUnits : UInt8*, pUnitsLength : UInt32*, szDescription : UInt8*, pDescriptionLength : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_counter.call(this, pDesc, pType, pActiveCounters, szName, pNameLength, szUnits, pUnitsLength, szDescription, pDescriptionLength)
    end
    def check_feature_support(this : ID3D11Device5*, feature : Win32cr::Graphics::Direct3D11::D3D11_FEATURE, pFeatureSupportData : Void*, feature_support_data_size : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_feature_support.call(this, feature, pFeatureSupportData, feature_support_data_size)
    end
    def get_private_data(this : ID3D11Device5*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11Device5*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11Device5*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_feature_level(this : ID3D11Device5*) : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL
      @lpVtbl.try &.value.get_feature_level.call(this)
    end
    def get_creation_flags(this : ID3D11Device5*) : UInt32
      @lpVtbl.try &.value.get_creation_flags.call(this)
    end
    def get_device_removed_reason(this : ID3D11Device5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_removed_reason.call(this)
    end
    def get_immediate_context(this : ID3D11Device5*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context.call(this, ppImmediateContext)
    end
    def set_exception_mode(this : ID3D11Device5*, raise_flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_exception_mode.call(this, raise_flags)
    end
    def get_exception_mode(this : ID3D11Device5*) : UInt32
      @lpVtbl.try &.value.get_exception_mode.call(this)
    end
    def get_immediate_context1(this : ID3D11Device5*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context1.call(this, ppImmediateContext)
    end
    def create_deferred_context1(this : ID3D11Device5*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context1.call(this, context_flags, ppDeferredContext)
    end
    def create_blend_state1(this : ID3D11Device5*, pBlendStateDesc : Win32cr::Graphics::Direct3D11::D3D11_BLEND_DESC1*, ppBlendState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_blend_state1.call(this, pBlendStateDesc, ppBlendState)
    end
    def create_rasterizer_state1(this : ID3D11Device5*, pRasterizerDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC1*, ppRasterizerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rasterizer_state1.call(this, pRasterizerDesc, ppRasterizerState)
    end
    def create_device_context_state(this : ID3D11Device5*, flags : UInt32, pFeatureLevels : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, feature_levels : UInt32, sdk_version : UInt32, emulated_interface : LibC::GUID*, pChosenFeatureLevel : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, ppContextState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device_context_state.call(this, flags, pFeatureLevels, feature_levels, sdk_version, emulated_interface, pChosenFeatureLevel, ppContextState)
    end
    def open_shared_resource1(this : ID3D11Device5*, hResource : Win32cr::Foundation::HANDLE, returnedInterface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource1.call(this, hResource, returnedInterface, ppResource)
    end
    def open_shared_resource_by_name(this : ID3D11Device5*, lpName : Win32cr::Foundation::PWSTR, dwDesiredAccess : UInt32, returnedInterface : LibC::GUID*, ppResource : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_resource_by_name.call(this, lpName, dwDesiredAccess, returnedInterface, ppResource)
    end
    def get_immediate_context2(this : ID3D11Device5*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context2.call(this, ppImmediateContext)
    end
    def create_deferred_context2(this : ID3D11Device5*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context2.call(this, context_flags, ppDeferredContext)
    end
    def get_resource_tiling(this : ID3D11Device5*, pTiledResource : Void*, pNumTilesForEntireResource : UInt32*, pPackedMipDesc : Win32cr::Graphics::Direct3D11::D3D11_PACKED_MIP_DESC*, pStandardTileShapeForNonPackedMips : Win32cr::Graphics::Direct3D11::D3D11_TILE_SHAPE*, pNumSubresourceTilings : UInt32*, first_subresource_tiling_to_get : UInt32, pSubresourceTilingsForNonPackedMips : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_TILING*) : Void
      @lpVtbl.try &.value.get_resource_tiling.call(this, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, first_subresource_tiling_to_get, pSubresourceTilingsForNonPackedMips)
    end
    def check_multisample_quality_levels1(this : ID3D11Device5*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, sample_count : UInt32, flags : UInt32, pNumQualityLevels : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_multisample_quality_levels1.call(this, format, sample_count, flags, pNumQualityLevels)
    end
    def create_texture2_d1(this : ID3D11Device5*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE2D_DESC1*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture2D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture2_d1.call(this, pDesc1, pInitialData, ppTexture2D)
    end
    def create_texture3_d1(this : ID3D11Device5*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_TEXTURE3D_DESC1*, pInitialData : Win32cr::Graphics::Direct3D11::D3D11_SUBRESOURCE_DATA*, ppTexture3D : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_texture3_d1.call(this, pDesc1, pInitialData, ppTexture3D)
    end
    def create_rasterizer_state2(this : ID3D11Device5*, pRasterizerDesc : Win32cr::Graphics::Direct3D11::D3D11_RASTERIZER_DESC2*, ppRasterizerState : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_rasterizer_state2.call(this, pRasterizerDesc, ppRasterizerState)
    end
    def create_shader_resource_view1(this : ID3D11Device5*, pResource : Void*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_SHADER_RESOURCE_VIEW_DESC1*, ppSRView1 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_shader_resource_view1.call(this, pResource, pDesc1, ppSRView1)
    end
    def create_unordered_access_view1(this : ID3D11Device5*, pResource : Void*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_UNORDERED_ACCESS_VIEW_DESC1*, ppUAView1 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_unordered_access_view1.call(this, pResource, pDesc1, ppUAView1)
    end
    def create_render_target_view1(this : ID3D11Device5*, pResource : Void*, pDesc1 : Win32cr::Graphics::Direct3D11::D3D11_RENDER_TARGET_VIEW_DESC1*, ppRTView1 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_render_target_view1.call(this, pResource, pDesc1, ppRTView1)
    end
    def create_query1(this : ID3D11Device5*, pQueryDesc1 : Win32cr::Graphics::Direct3D11::D3D11_QUERY_DESC1*, ppQuery1 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_query1.call(this, pQueryDesc1, ppQuery1)
    end
    def get_immediate_context3(this : ID3D11Device5*, ppImmediateContext : Void**) : Void
      @lpVtbl.try &.value.get_immediate_context3.call(this, ppImmediateContext)
    end
    def create_deferred_context3(this : ID3D11Device5*, context_flags : UInt32, ppDeferredContext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_deferred_context3.call(this, context_flags, ppDeferredContext)
    end
    def write_to_subresource(this : ID3D11Device5*, pDstResource : Void*, dst_subresource : UInt32, pDstBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*, pSrcData : Void*, src_row_pitch : UInt32, src_depth_pitch : UInt32) : Void
      @lpVtbl.try &.value.write_to_subresource.call(this, pDstResource, dst_subresource, pDstBox, pSrcData, src_row_pitch, src_depth_pitch)
    end
    def read_from_subresource(this : ID3D11Device5*, pDstData : Void*, dst_row_pitch : UInt32, dst_depth_pitch : UInt32, pSrcResource : Void*, src_subresource : UInt32, pSrcBox : Win32cr::Graphics::Direct3D11::D3D11_BOX*) : Void
      @lpVtbl.try &.value.read_from_subresource.call(this, pDstData, dst_row_pitch, dst_depth_pitch, pSrcResource, src_subresource, pSrcBox)
    end
    def register_device_removed_event(this : ID3D11Device5*, hEvent : Win32cr::Foundation::HANDLE, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_device_removed_event.call(this, hEvent, pdwCookie)
    end
    def unregister_device_removed(this : ID3D11Device5*, dwCookie : UInt32) : Void
      @lpVtbl.try &.value.unregister_device_removed.call(this, dwCookie)
    end
    def open_shared_fence(this : ID3D11Device5*, hFence : Win32cr::Foundation::HANDLE, returned_interface : LibC::GUID*, ppFence : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_shared_fence.call(this, hFence, returned_interface, ppFence)
    end
    def create_fence(this : ID3D11Device5*, initial_value : UInt64, flags : Win32cr::Graphics::Direct3D11::D3D11_FENCE_FLAG, returned_interface : LibC::GUID*, ppFence : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_fence.call(this, initial_value, flags, returned_interface, ppFence)
    end

  end

  @[Extern]
  record ID3D11MultithreadVtbl,
    query_interface : Proc(ID3D11Multithread*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Multithread*, UInt32),
    release : Proc(ID3D11Multithread*, UInt32),
    enter : Proc(ID3D11Multithread*, Void),
    leave : Proc(ID3D11Multithread*, Void),
    set_multithread_protected : Proc(ID3D11Multithread*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL),
    get_multithread_protected : Proc(ID3D11Multithread*, Win32cr::Foundation::BOOL)


  @[Extern]
  record ID3D11Multithread, lpVtbl : ID3D11MultithreadVtbl* do
    GUID = LibC::GUID.new(0x9b7e4e00_u32, 0x342c_u16, 0x4106_u16, StaticArray[0xa1_u8, 0x9f_u8, 0x4f_u8, 0x27_u8, 0x4_u8, 0xf6_u8, 0x89_u8, 0xf0_u8])
    def query_interface(this : ID3D11Multithread*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Multithread*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Multithread*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def enter(this : ID3D11Multithread*) : Void
      @lpVtbl.try &.value.enter.call(this)
    end
    def leave(this : ID3D11Multithread*) : Void
      @lpVtbl.try &.value.leave.call(this)
    end
    def set_multithread_protected(this : ID3D11Multithread*, bMTProtect : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.set_multithread_protected.call(this, bMTProtect)
    end
    def get_multithread_protected(this : ID3D11Multithread*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.get_multithread_protected.call(this)
    end

  end

  @[Extern]
  record ID3D11VideoContext2Vtbl,
    query_interface : Proc(ID3D11VideoContext2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11VideoContext2*, UInt32),
    release : Proc(ID3D11VideoContext2*, UInt32),
    get_device : Proc(ID3D11VideoContext2*, Void**, Void),
    get_private_data : Proc(ID3D11VideoContext2*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11VideoContext2*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11VideoContext2*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_decoder_buffer : Proc(ID3D11VideoContext2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE, UInt32*, Void**, Win32cr::Foundation::HRESULT),
    release_decoder_buffer : Proc(ID3D11VideoContext2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE, Win32cr::Foundation::HRESULT),
    decoder_begin_frame : Proc(ID3D11VideoContext2*, Void*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    decoder_end_frame : Proc(ID3D11VideoContext2*, Void*, Win32cr::Foundation::HRESULT),
    submit_decoder_buffers : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC*, Win32cr::Foundation::HRESULT),
    decoder_extension : Proc(ID3D11VideoContext2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_EXTENSION*, Int32),
    video_processor_set_output_target_rect : Proc(ID3D11VideoContext2*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::RECT*, Void),
    video_processor_set_output_background_color : Proc(ID3D11VideoContext2*, Void*, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*, Void),
    video_processor_set_output_color_space : Proc(ID3D11VideoContext2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_set_output_alpha_fill_mode : Proc(ID3D11VideoContext2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE, UInt32, Void),
    video_processor_set_output_constriction : Proc(ID3D11VideoContext2*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::SIZE, Void),
    video_processor_set_output_stereo_mode : Proc(ID3D11VideoContext2*, Void*, Win32cr::Foundation::BOOL, Void),
    video_processor_set_output_extension : Proc(ID3D11VideoContext2*, Void*, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_get_output_target_rect : Proc(ID3D11VideoContext2*, Void*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::RECT*, Void),
    video_processor_get_output_background_color : Proc(ID3D11VideoContext2*, Void*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*, Void),
    video_processor_get_output_color_space : Proc(ID3D11VideoContext2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_get_output_alpha_fill_mode : Proc(ID3D11VideoContext2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE*, UInt32*, Void),
    video_processor_get_output_constriction : Proc(ID3D11VideoContext2*, Void*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::SIZE*, Void),
    video_processor_get_output_stereo_mode : Proc(ID3D11VideoContext2*, Void*, Win32cr::Foundation::BOOL*, Void),
    video_processor_get_output_extension : Proc(ID3D11VideoContext2*, Void*, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_set_stream_frame_format : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT, Void),
    video_processor_set_stream_color_space : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_set_stream_output_rate : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE, Win32cr::Foundation::BOOL, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_set_stream_source_rect : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::RECT*, Void),
    video_processor_set_stream_dest_rect : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::RECT*, Void),
    video_processor_set_stream_alpha : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL, Float32, Void),
    video_processor_set_stream_palette : Proc(ID3D11VideoContext2*, Void*, UInt32, UInt32, UInt32*, Void),
    video_processor_set_stream_pixel_aspect_ratio : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_set_stream_luma_key : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL, Float32, Float32, Void),
    video_processor_set_stream_stereo_format : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE, Int32, Void),
    video_processor_set_stream_auto_processing_mode : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL, Void),
    video_processor_set_stream_filter : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, Win32cr::Foundation::BOOL, Int32, Void),
    video_processor_set_stream_extension : Proc(ID3D11VideoContext2*, Void*, UInt32, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_get_stream_frame_format : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT*, Void),
    video_processor_get_stream_color_space : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_get_stream_output_rate : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_get_stream_source_rect : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::RECT*, Void),
    video_processor_get_stream_dest_rect : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::RECT*, Void),
    video_processor_get_stream_alpha : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL*, Float32*, Void),
    video_processor_get_stream_palette : Proc(ID3D11VideoContext2*, Void*, UInt32, UInt32, UInt32*, Void),
    video_processor_get_stream_pixel_aspect_ratio : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_get_stream_luma_key : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL*, Float32*, Float32*, Void),
    video_processor_get_stream_stereo_format : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE*, Int32*, Void),
    video_processor_get_stream_auto_processing_mode : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL*, Void),
    video_processor_get_stream_filter : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, Win32cr::Foundation::BOOL*, Int32*, Void),
    video_processor_get_stream_extension : Proc(ID3D11VideoContext2*, Void*, UInt32, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_blt : Proc(ID3D11VideoContext2*, Void*, Void*, UInt32, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STREAM*, Win32cr::Foundation::HRESULT),
    negotiate_crypto_session_key_exchange : Proc(ID3D11VideoContext2*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    encryption_blt : Proc(ID3D11VideoContext2*, Void*, Void*, Void*, UInt32, Void*, Void),
    decryption_blt : Proc(ID3D11VideoContext2*, Void*, Void*, Void*, Win32cr::Graphics::Direct3D11::D3D11_ENCRYPTED_BLOCK_INFO*, UInt32, Void*, UInt32, Void*, Void),
    start_session_key_refresh : Proc(ID3D11VideoContext2*, Void*, UInt32, Void*, Void),
    finish_session_key_refresh : Proc(ID3D11VideoContext2*, Void*, Void),
    get_encryption_blt_key : Proc(ID3D11VideoContext2*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    negotiate_authenticated_channel_key_exchange : Proc(ID3D11VideoContext2*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    query_authenticated_channel : Proc(ID3D11VideoContext2*, Void*, UInt32, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    configure_authenticated_channel : Proc(ID3D11VideoContext2*, Void*, UInt32, Void*, Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_OUTPUT*, Win32cr::Foundation::HRESULT),
    video_processor_set_stream_rotation : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION, Void),
    video_processor_get_stream_rotation : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION*, Void),
    submit_decoder_buffers1 : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC1*, Win32cr::Foundation::HRESULT),
    get_data_for_new_hardware_key : Proc(ID3D11VideoContext2*, Void*, UInt32, Void*, UInt64*, Win32cr::Foundation::HRESULT),
    check_crypto_session_status : Proc(ID3D11VideoContext2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_CRYPTO_SESSION_STATUS*, Win32cr::Foundation::HRESULT),
    decoder_enable_downsampling : Proc(ID3D11VideoContext2*, Void*, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*, UInt32, Win32cr::Foundation::HRESULT),
    decoder_update_downsampling : Proc(ID3D11VideoContext2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*, Win32cr::Foundation::HRESULT),
    video_processor_set_output_color_space1 : Proc(ID3D11VideoContext2*, Void*, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, Void),
    video_processor_set_output_shader_usage : Proc(ID3D11VideoContext2*, Void*, Win32cr::Foundation::BOOL, Void),
    video_processor_get_output_color_space1 : Proc(ID3D11VideoContext2*, Void*, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE*, Void),
    video_processor_get_output_shader_usage : Proc(ID3D11VideoContext2*, Void*, Win32cr::Foundation::BOOL*, Void),
    video_processor_set_stream_color_space1 : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, Void),
    video_processor_set_stream_mirror : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Void),
    video_processor_get_stream_color_space1 : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE*, Void),
    video_processor_get_stream_mirror : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Void),
    video_processor_get_behavior_hints : Proc(ID3D11VideoContext2*, Void*, UInt32, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT*, UInt32*, Win32cr::Foundation::HRESULT),
    video_processor_set_output_hdr_meta_data : Proc(ID3D11VideoContext2*, Void*, Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE, UInt32, Void*, Void),
    video_processor_get_output_hdr_meta_data : Proc(ID3D11VideoContext2*, Void*, Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE*, UInt32, Void*, Void),
    video_processor_set_stream_hdr_meta_data : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE, UInt32, Void*, Void),
    video_processor_get_stream_hdr_meta_data : Proc(ID3D11VideoContext2*, Void*, UInt32, Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE*, UInt32, Void*, Void)


  @[Extern]
  record ID3D11VideoContext2, lpVtbl : ID3D11VideoContext2Vtbl* do
    GUID = LibC::GUID.new(0xc4e7374c_u32, 0x6243_u16, 0x4d1b_u16, StaticArray[0xae_u8, 0x87_u8, 0x52_u8, 0xb4_u8, 0xf7_u8, 0x40_u8, 0xe2_u8, 0x61_u8])
    def query_interface(this : ID3D11VideoContext2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11VideoContext2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11VideoContext2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11VideoContext2*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11VideoContext2*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11VideoContext2*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11VideoContext2*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_decoder_buffer(this : ID3D11VideoContext2*, pDecoder : Void*, type__ : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE, pBufferSize : UInt32*, ppBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_decoder_buffer.call(this, pDecoder, type__, pBufferSize, ppBuffer)
    end
    def release_decoder_buffer(this : ID3D11VideoContext2*, pDecoder : Void*, type__ : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.release_decoder_buffer.call(this, pDecoder, type__)
    end
    def decoder_begin_frame(this : ID3D11VideoContext2*, pDecoder : Void*, pView : Void*, content_key_size : UInt32, pContentKey : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decoder_begin_frame.call(this, pDecoder, pView, content_key_size, pContentKey)
    end
    def decoder_end_frame(this : ID3D11VideoContext2*, pDecoder : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decoder_end_frame.call(this, pDecoder)
    end
    def submit_decoder_buffers(this : ID3D11VideoContext2*, pDecoder : Void*, num_buffers : UInt32, pBufferDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.submit_decoder_buffers.call(this, pDecoder, num_buffers, pBufferDesc)
    end
    def decoder_extension(this : ID3D11VideoContext2*, pDecoder : Void*, pExtensionData : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_EXTENSION*) : Int32
      @lpVtbl.try &.value.decoder_extension.call(this, pDecoder, pExtensionData)
    end
    def video_processor_set_output_target_rect(this : ID3D11VideoContext2*, pVideoProcessor : Void*, enable : Win32cr::Foundation::BOOL, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_set_output_target_rect.call(this, pVideoProcessor, enable, pRect)
    end
    def video_processor_set_output_background_color(this : ID3D11VideoContext2*, pVideoProcessor : Void*, y_cb_cr : Win32cr::Foundation::BOOL, pColor : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*) : Void
      @lpVtbl.try &.value.video_processor_set_output_background_color.call(this, pVideoProcessor, y_cb_cr, pColor)
    end
    def video_processor_set_output_color_space(this : ID3D11VideoContext2*, pVideoProcessor : Void*, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_set_output_color_space.call(this, pVideoProcessor, pColorSpace)
    end
    def video_processor_set_output_alpha_fill_mode(this : ID3D11VideoContext2*, pVideoProcessor : Void*, alpha_fill_mode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE, stream_index : UInt32) : Void
      @lpVtbl.try &.value.video_processor_set_output_alpha_fill_mode.call(this, pVideoProcessor, alpha_fill_mode, stream_index)
    end
    def video_processor_set_output_constriction(this : ID3D11VideoContext2*, pVideoProcessor : Void*, enable : Win32cr::Foundation::BOOL, size : Win32cr::Foundation::SIZE) : Void
      @lpVtbl.try &.value.video_processor_set_output_constriction.call(this, pVideoProcessor, enable, size)
    end
    def video_processor_set_output_stereo_mode(this : ID3D11VideoContext2*, pVideoProcessor : Void*, enable : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.video_processor_set_output_stereo_mode.call(this, pVideoProcessor, enable)
    end
    def video_processor_set_output_extension(this : ID3D11VideoContext2*, pVideoProcessor : Void*, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_set_output_extension.call(this, pVideoProcessor, pExtensionGuid, data_size, pData)
    end
    def video_processor_get_output_target_rect(this : ID3D11VideoContext2*, pVideoProcessor : Void*, enabled : Win32cr::Foundation::BOOL*, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_get_output_target_rect.call(this, pVideoProcessor, enabled, pRect)
    end
    def video_processor_get_output_background_color(this : ID3D11VideoContext2*, pVideoProcessor : Void*, pYCbCr : Win32cr::Foundation::BOOL*, pColor : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*) : Void
      @lpVtbl.try &.value.video_processor_get_output_background_color.call(this, pVideoProcessor, pYCbCr, pColor)
    end
    def video_processor_get_output_color_space(this : ID3D11VideoContext2*, pVideoProcessor : Void*, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_get_output_color_space.call(this, pVideoProcessor, pColorSpace)
    end
    def video_processor_get_output_alpha_fill_mode(this : ID3D11VideoContext2*, pVideoProcessor : Void*, pAlphaFillMode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE*, pStreamIndex : UInt32*) : Void
      @lpVtbl.try &.value.video_processor_get_output_alpha_fill_mode.call(this, pVideoProcessor, pAlphaFillMode, pStreamIndex)
    end
    def video_processor_get_output_constriction(this : ID3D11VideoContext2*, pVideoProcessor : Void*, pEnabled : Win32cr::Foundation::BOOL*, pSize : Win32cr::Foundation::SIZE*) : Void
      @lpVtbl.try &.value.video_processor_get_output_constriction.call(this, pVideoProcessor, pEnabled, pSize)
    end
    def video_processor_get_output_stereo_mode(this : ID3D11VideoContext2*, pVideoProcessor : Void*, pEnabled : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.video_processor_get_output_stereo_mode.call(this, pVideoProcessor, pEnabled)
    end
    def video_processor_get_output_extension(this : ID3D11VideoContext2*, pVideoProcessor : Void*, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_get_output_extension.call(this, pVideoProcessor, pExtensionGuid, data_size, pData)
    end
    def video_processor_set_stream_frame_format(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, frame_format : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT) : Void
      @lpVtbl.try &.value.video_processor_set_stream_frame_format.call(this, pVideoProcessor, stream_index, frame_format)
    end
    def video_processor_set_stream_color_space(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_color_space.call(this, pVideoProcessor, stream_index, pColorSpace)
    end
    def video_processor_set_stream_output_rate(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, output_rate : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE, repeat_frame : Win32cr::Foundation::BOOL, pCustomRate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_output_rate.call(this, pVideoProcessor, stream_index, output_rate, repeat_frame, pCustomRate)
    end
    def video_processor_set_stream_source_rect(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_source_rect.call(this, pVideoProcessor, stream_index, enable, pRect)
    end
    def video_processor_set_stream_dest_rect(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_dest_rect.call(this, pVideoProcessor, stream_index, enable, pRect)
    end
    def video_processor_set_stream_alpha(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, alpha : Float32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_alpha.call(this, pVideoProcessor, stream_index, enable, alpha)
    end
    def video_processor_set_stream_palette(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, count : UInt32, pEntries : UInt32*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_palette.call(this, pVideoProcessor, stream_index, count, pEntries)
    end
    def video_processor_set_stream_pixel_aspect_ratio(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, pSourceAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, pDestinationAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_pixel_aspect_ratio.call(this, pVideoProcessor, stream_index, enable, pSourceAspectRatio, pDestinationAspectRatio)
    end
    def video_processor_set_stream_luma_key(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, lower : Float32, upper : Float32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_luma_key.call(this, pVideoProcessor, stream_index, enable, lower, upper)
    end
    def video_processor_set_stream_stereo_format(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, format : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT, left_view_frame0 : Win32cr::Foundation::BOOL, base_view_frame0 : Win32cr::Foundation::BOOL, flip_mode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE, mono_offset : Int32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_stereo_format.call(this, pVideoProcessor, stream_index, enable, format, left_view_frame0, base_view_frame0, flip_mode, mono_offset)
    end
    def video_processor_set_stream_auto_processing_mode(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.video_processor_set_stream_auto_processing_mode.call(this, pVideoProcessor, stream_index, enable)
    end
    def video_processor_set_stream_filter(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, filter : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, enable : Win32cr::Foundation::BOOL, level : Int32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_filter.call(this, pVideoProcessor, stream_index, filter, enable, level)
    end
    def video_processor_set_stream_extension(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_set_stream_extension.call(this, pVideoProcessor, stream_index, pExtensionGuid, data_size, pData)
    end
    def video_processor_get_stream_frame_format(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pFrameFormat : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_frame_format.call(this, pVideoProcessor, stream_index, pFrameFormat)
    end
    def video_processor_get_stream_color_space(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_color_space.call(this, pVideoProcessor, stream_index, pColorSpace)
    end
    def video_processor_get_stream_output_rate(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pOutputRate : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE*, pRepeatFrame : Win32cr::Foundation::BOOL*, pCustomRate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_output_rate.call(this, pVideoProcessor, stream_index, pOutputRate, pRepeatFrame, pCustomRate)
    end
    def video_processor_get_stream_source_rect(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_source_rect.call(this, pVideoProcessor, stream_index, pEnabled, pRect)
    end
    def video_processor_get_stream_dest_rect(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_dest_rect.call(this, pVideoProcessor, stream_index, pEnabled, pRect)
    end
    def video_processor_get_stream_alpha(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pAlpha : Float32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_alpha.call(this, pVideoProcessor, stream_index, pEnabled, pAlpha)
    end
    def video_processor_get_stream_palette(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, count : UInt32, pEntries : UInt32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_palette.call(this, pVideoProcessor, stream_index, count, pEntries)
    end
    def video_processor_get_stream_pixel_aspect_ratio(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pSourceAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, pDestinationAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_pixel_aspect_ratio.call(this, pVideoProcessor, stream_index, pEnabled, pSourceAspectRatio, pDestinationAspectRatio)
    end
    def video_processor_get_stream_luma_key(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pLower : Float32*, pUpper : Float32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_luma_key.call(this, pVideoProcessor, stream_index, pEnabled, pLower, pUpper)
    end
    def video_processor_get_stream_stereo_format(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pEnable : Win32cr::Foundation::BOOL*, pFormat : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT*, pLeftViewFrame0 : Win32cr::Foundation::BOOL*, pBaseViewFrame0 : Win32cr::Foundation::BOOL*, pFlipMode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE*, mono_offset : Int32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_stereo_format.call(this, pVideoProcessor, stream_index, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, mono_offset)
    end
    def video_processor_get_stream_auto_processing_mode(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_auto_processing_mode.call(this, pVideoProcessor, stream_index, pEnabled)
    end
    def video_processor_get_stream_filter(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, filter : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, pEnabled : Win32cr::Foundation::BOOL*, pLevel : Int32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_filter.call(this, pVideoProcessor, stream_index, filter, pEnabled, pLevel)
    end
    def video_processor_get_stream_extension(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_get_stream_extension.call(this, pVideoProcessor, stream_index, pExtensionGuid, data_size, pData)
    end
    def video_processor_blt(this : ID3D11VideoContext2*, pVideoProcessor : Void*, pView : Void*, output_frame : UInt32, stream_count : UInt32, pStreams : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STREAM*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.video_processor_blt.call(this, pVideoProcessor, pView, output_frame, stream_count, pStreams)
    end
    def negotiate_crypto_session_key_exchange(this : ID3D11VideoContext2*, pCryptoSession : Void*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.negotiate_crypto_session_key_exchange.call(this, pCryptoSession, data_size, pData)
    end
    def encryption_blt(this : ID3D11VideoContext2*, pCryptoSession : Void*, pSrcSurface : Void*, pDstSurface : Void*, iv_size : UInt32, pIV : Void*) : Void
      @lpVtbl.try &.value.encryption_blt.call(this, pCryptoSession, pSrcSurface, pDstSurface, iv_size, pIV)
    end
    def decryption_blt(this : ID3D11VideoContext2*, pCryptoSession : Void*, pSrcSurface : Void*, pDstSurface : Void*, pEncryptedBlockInfo : Win32cr::Graphics::Direct3D11::D3D11_ENCRYPTED_BLOCK_INFO*, content_key_size : UInt32, pContentKey : Void*, iv_size : UInt32, pIV : Void*) : Void
      @lpVtbl.try &.value.decryption_blt.call(this, pCryptoSession, pSrcSurface, pDstSurface, pEncryptedBlockInfo, content_key_size, pContentKey, iv_size, pIV)
    end
    def start_session_key_refresh(this : ID3D11VideoContext2*, pCryptoSession : Void*, random_number_size : UInt32, pRandomNumber : Void*) : Void
      @lpVtbl.try &.value.start_session_key_refresh.call(this, pCryptoSession, random_number_size, pRandomNumber)
    end
    def finish_session_key_refresh(this : ID3D11VideoContext2*, pCryptoSession : Void*) : Void
      @lpVtbl.try &.value.finish_session_key_refresh.call(this, pCryptoSession)
    end
    def get_encryption_blt_key(this : ID3D11VideoContext2*, pCryptoSession : Void*, key_size : UInt32, pReadbackKey : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_encryption_blt_key.call(this, pCryptoSession, key_size, pReadbackKey)
    end
    def negotiate_authenticated_channel_key_exchange(this : ID3D11VideoContext2*, pChannel : Void*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.negotiate_authenticated_channel_key_exchange.call(this, pChannel, data_size, pData)
    end
    def query_authenticated_channel(this : ID3D11VideoContext2*, pChannel : Void*, input_size : UInt32, pInput : Void*, output_size : UInt32, pOutput : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_authenticated_channel.call(this, pChannel, input_size, pInput, output_size, pOutput)
    end
    def configure_authenticated_channel(this : ID3D11VideoContext2*, pChannel : Void*, input_size : UInt32, pInput : Void*, pOutput : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_OUTPUT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.configure_authenticated_channel.call(this, pChannel, input_size, pInput, pOutput)
    end
    def video_processor_set_stream_rotation(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, rotation : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION) : Void
      @lpVtbl.try &.value.video_processor_set_stream_rotation.call(this, pVideoProcessor, stream_index, enable, rotation)
    end
    def video_processor_get_stream_rotation(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pEnable : Win32cr::Foundation::BOOL*, pRotation : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_rotation.call(this, pVideoProcessor, stream_index, pEnable, pRotation)
    end
    def submit_decoder_buffers1(this : ID3D11VideoContext2*, pDecoder : Void*, num_buffers : UInt32, pBufferDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC1*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.submit_decoder_buffers1.call(this, pDecoder, num_buffers, pBufferDesc)
    end
    def get_data_for_new_hardware_key(this : ID3D11VideoContext2*, pCryptoSession : Void*, private_input_size : UInt32, pPrivatInputData : Void*, pPrivateOutputData : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_data_for_new_hardware_key.call(this, pCryptoSession, private_input_size, pPrivatInputData, pPrivateOutputData)
    end
    def check_crypto_session_status(this : ID3D11VideoContext2*, pCryptoSession : Void*, pStatus : Win32cr::Graphics::Direct3D11::D3D11_CRYPTO_SESSION_STATUS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_crypto_session_status.call(this, pCryptoSession, pStatus)
    end
    def decoder_enable_downsampling(this : ID3D11VideoContext2*, pDecoder : Void*, input_color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, pOutputDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*, reference_frame_count : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decoder_enable_downsampling.call(this, pDecoder, input_color_space, pOutputDesc, reference_frame_count)
    end
    def decoder_update_downsampling(this : ID3D11VideoContext2*, pDecoder : Void*, pOutputDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decoder_update_downsampling.call(this, pDecoder, pOutputDesc)
    end
    def video_processor_set_output_color_space1(this : ID3D11VideoContext2*, pVideoProcessor : Void*, color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE) : Void
      @lpVtbl.try &.value.video_processor_set_output_color_space1.call(this, pVideoProcessor, color_space)
    end
    def video_processor_set_output_shader_usage(this : ID3D11VideoContext2*, pVideoProcessor : Void*, shader_usage : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.video_processor_set_output_shader_usage.call(this, pVideoProcessor, shader_usage)
    end
    def video_processor_get_output_color_space1(this : ID3D11VideoContext2*, pVideoProcessor : Void*, pColorSpace : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE*) : Void
      @lpVtbl.try &.value.video_processor_get_output_color_space1.call(this, pVideoProcessor, pColorSpace)
    end
    def video_processor_get_output_shader_usage(this : ID3D11VideoContext2*, pVideoProcessor : Void*, pShaderUsage : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.video_processor_get_output_shader_usage.call(this, pVideoProcessor, pShaderUsage)
    end
    def video_processor_set_stream_color_space1(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE) : Void
      @lpVtbl.try &.value.video_processor_set_stream_color_space1.call(this, pVideoProcessor, stream_index, color_space)
    end
    def video_processor_set_stream_mirror(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, flip_horizontal : Win32cr::Foundation::BOOL, flip_vertical : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.video_processor_set_stream_mirror.call(this, pVideoProcessor, stream_index, enable, flip_horizontal, flip_vertical)
    end
    def video_processor_get_stream_color_space1(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pColorSpace : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_color_space1.call(this, pVideoProcessor, stream_index, pColorSpace)
    end
    def video_processor_get_stream_mirror(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pEnable : Win32cr::Foundation::BOOL*, pFlipHorizontal : Win32cr::Foundation::BOOL*, pFlipVertical : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_mirror.call(this, pVideoProcessor, stream_index, pEnable, pFlipHorizontal, pFlipVertical)
    end
    def video_processor_get_behavior_hints(this : ID3D11VideoContext2*, pVideoProcessor : Void*, output_width : UInt32, output_height : UInt32, output_format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, stream_count : UInt32, pStreams : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT*, pBehaviorHints : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.video_processor_get_behavior_hints.call(this, pVideoProcessor, output_width, output_height, output_format, stream_count, pStreams, pBehaviorHints)
    end
    def video_processor_set_output_hdr_meta_data(this : ID3D11VideoContext2*, pVideoProcessor : Void*, type__ : Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE, size : UInt32, pHDRMetaData : Void*) : Void
      @lpVtbl.try &.value.video_processor_set_output_hdr_meta_data.call(this, pVideoProcessor, type__, size, pHDRMetaData)
    end
    def video_processor_get_output_hdr_meta_data(this : ID3D11VideoContext2*, pVideoProcessor : Void*, pType : Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE*, size : UInt32, pMetaData : Void*) : Void
      @lpVtbl.try &.value.video_processor_get_output_hdr_meta_data.call(this, pVideoProcessor, pType, size, pMetaData)
    end
    def video_processor_set_stream_hdr_meta_data(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, type__ : Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE, size : UInt32, pHDRMetaData : Void*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_hdr_meta_data.call(this, pVideoProcessor, stream_index, type__, size, pHDRMetaData)
    end
    def video_processor_get_stream_hdr_meta_data(this : ID3D11VideoContext2*, pVideoProcessor : Void*, stream_index : UInt32, pType : Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE*, size : UInt32, pMetaData : Void*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_hdr_meta_data.call(this, pVideoProcessor, stream_index, pType, size, pMetaData)
    end

  end

  @[Extern]
  record ID3D11VideoDevice2Vtbl,
    query_interface : Proc(ID3D11VideoDevice2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11VideoDevice2*, UInt32),
    release : Proc(ID3D11VideoDevice2*, UInt32),
    create_video_decoder : Proc(ID3D11VideoDevice2*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, Void**, Win32cr::Foundation::HRESULT),
    create_video_processor : Proc(ID3D11VideoDevice2*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    create_authenticated_channel : Proc(ID3D11VideoDevice2*, Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CHANNEL_TYPE, Void**, Win32cr::Foundation::HRESULT),
    create_crypto_session : Proc(ID3D11VideoDevice2*, LibC::GUID*, LibC::GUID*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    create_video_decoder_output_view : Proc(ID3D11VideoDevice2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_video_processor_input_view : Proc(ID3D11VideoDevice2*, Void*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_video_processor_output_view : Proc(ID3D11VideoDevice2*, Void*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*, Void**, Win32cr::Foundation::HRESULT),
    create_video_processor_enumerator : Proc(ID3D11VideoDevice2*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CONTENT_DESC*, Void**, Win32cr::Foundation::HRESULT),
    get_video_decoder_profile_count : Proc(ID3D11VideoDevice2*, UInt32),
    get_video_decoder_profile : Proc(ID3D11VideoDevice2*, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT),
    check_video_decoder_format : Proc(ID3D11VideoDevice2*, LibC::GUID*, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_video_decoder_config_count : Proc(ID3D11VideoDevice2*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, UInt32*, Win32cr::Foundation::HRESULT),
    get_video_decoder_config : Proc(ID3D11VideoDevice2*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, Win32cr::Foundation::HRESULT),
    get_content_protection_caps : Proc(ID3D11VideoDevice2*, LibC::GUID*, LibC::GUID*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_CONTENT_PROTECTION_CAPS*, Win32cr::Foundation::HRESULT),
    check_crypto_key_exchange : Proc(ID3D11VideoDevice2*, LibC::GUID*, LibC::GUID*, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11VideoDevice2*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11VideoDevice2*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_crypto_session_private_data_size : Proc(ID3D11VideoDevice2*, LibC::GUID*, LibC::GUID*, LibC::GUID*, UInt32*, UInt32*, Win32cr::Foundation::HRESULT),
    get_video_decoder_caps : Proc(ID3D11VideoDevice2*, LibC::GUID*, UInt32, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, UInt32, LibC::GUID*, UInt32*, Win32cr::Foundation::HRESULT),
    check_video_decoder_downsampling : Proc(ID3D11VideoDevice2*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    recommend_video_decoder_downsample_parameters : Proc(ID3D11VideoDevice2*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*, Win32cr::Foundation::HRESULT),
    check_feature_support : Proc(ID3D11VideoDevice2*, Win32cr::Graphics::Direct3D11::D3D11_FEATURE_VIDEO, Void*, UInt32, Win32cr::Foundation::HRESULT),
    negotiate_crypto_session_key_exchange_mt : Proc(ID3D11VideoDevice2*, Void*, Win32cr::Graphics::Direct3D11::D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS, UInt32, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11VideoDevice2, lpVtbl : ID3D11VideoDevice2Vtbl* do
    GUID = LibC::GUID.new(0x59c0cb01_u32, 0x35f0_u16, 0x4a70_u16, StaticArray[0x8f_u8, 0x67_u8, 0x87_u8, 0x90_u8, 0x5c_u8, 0x90_u8, 0x6a_u8, 0x53_u8])
    def query_interface(this : ID3D11VideoDevice2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11VideoDevice2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11VideoDevice2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_video_decoder(this : ID3D11VideoDevice2*, pVideoDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, pConfig : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, ppDecoder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_decoder.call(this, pVideoDesc, pConfig, ppDecoder)
    end
    def create_video_processor(this : ID3D11VideoDevice2*, pEnum : Void*, rate_conversion_index : UInt32, ppVideoProcessor : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_processor.call(this, pEnum, rate_conversion_index, ppVideoProcessor)
    end
    def create_authenticated_channel(this : ID3D11VideoDevice2*, channel_type : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CHANNEL_TYPE, ppAuthenticatedChannel : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_authenticated_channel.call(this, channel_type, ppAuthenticatedChannel)
    end
    def create_crypto_session(this : ID3D11VideoDevice2*, pCryptoType : LibC::GUID*, pDecoderProfile : LibC::GUID*, pKeyExchangeType : LibC::GUID*, ppCryptoSession : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_crypto_session.call(this, pCryptoType, pDecoderProfile, pKeyExchangeType, ppCryptoSession)
    end
    def create_video_decoder_output_view(this : ID3D11VideoDevice2*, pResource : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*, ppVDOVView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_decoder_output_view.call(this, pResource, pDesc, ppVDOVView)
    end
    def create_video_processor_input_view(this : ID3D11VideoDevice2*, pResource : Void*, pEnum : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*, ppVPIView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_processor_input_view.call(this, pResource, pEnum, pDesc, ppVPIView)
    end
    def create_video_processor_output_view(this : ID3D11VideoDevice2*, pResource : Void*, pEnum : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*, ppVPOView : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_processor_output_view.call(this, pResource, pEnum, pDesc, ppVPOView)
    end
    def create_video_processor_enumerator(this : ID3D11VideoDevice2*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_CONTENT_DESC*, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_processor_enumerator.call(this, pDesc, ppEnum)
    end
    def get_video_decoder_profile_count(this : ID3D11VideoDevice2*) : UInt32
      @lpVtbl.try &.value.get_video_decoder_profile_count.call(this)
    end
    def get_video_decoder_profile(this : ID3D11VideoDevice2*, index : UInt32, pDecoderProfile : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_decoder_profile.call(this, index, pDecoderProfile)
    end
    def check_video_decoder_format(this : ID3D11VideoDevice2*, pDecoderProfile : LibC::GUID*, format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, pSupported : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_video_decoder_format.call(this, pDecoderProfile, format, pSupported)
    end
    def get_video_decoder_config_count(this : ID3D11VideoDevice2*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, pCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_decoder_config_count.call(this, pDesc, pCount)
    end
    def get_video_decoder_config(this : ID3D11VideoDevice2*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, index : UInt32, pConfig : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_decoder_config.call(this, pDesc, index, pConfig)
    end
    def get_content_protection_caps(this : ID3D11VideoDevice2*, pCryptoType : LibC::GUID*, pDecoderProfile : LibC::GUID*, pCaps : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_CONTENT_PROTECTION_CAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_content_protection_caps.call(this, pCryptoType, pDecoderProfile, pCaps)
    end
    def check_crypto_key_exchange(this : ID3D11VideoDevice2*, pCryptoType : LibC::GUID*, pDecoderProfile : LibC::GUID*, index : UInt32, pKeyExchangeType : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_crypto_key_exchange.call(this, pCryptoType, pDecoderProfile, index, pKeyExchangeType)
    end
    def set_private_data(this : ID3D11VideoDevice2*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11VideoDevice2*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_crypto_session_private_data_size(this : ID3D11VideoDevice2*, pCryptoType : LibC::GUID*, pDecoderProfile : LibC::GUID*, pKeyExchangeType : LibC::GUID*, pPrivateInputSize : UInt32*, pPrivateOutputSize : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_crypto_session_private_data_size.call(this, pCryptoType, pDecoderProfile, pKeyExchangeType, pPrivateInputSize, pPrivateOutputSize)
    end
    def get_video_decoder_caps(this : ID3D11VideoDevice2*, pDecoderProfile : LibC::GUID*, sample_width : UInt32, sample_height : UInt32, pFrameRate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, bit_rate : UInt32, pCryptoType : LibC::GUID*, pDecoderCaps : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_video_decoder_caps.call(this, pDecoderProfile, sample_width, sample_height, pFrameRate, bit_rate, pCryptoType, pDecoderCaps)
    end
    def check_video_decoder_downsampling(this : ID3D11VideoDevice2*, pInputDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, input_color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, pInputConfig : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, pFrameRate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, pOutputDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*, pSupported : Win32cr::Foundation::BOOL*, pRealTimeHint : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_video_decoder_downsampling.call(this, pInputDesc, input_color_space, pInputConfig, pFrameRate, pOutputDesc, pSupported, pRealTimeHint)
    end
    def recommend_video_decoder_downsample_parameters(this : ID3D11VideoDevice2*, pInputDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_DESC*, input_color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, pInputConfig : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_CONFIG*, pFrameRate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, pRecommendedOutputDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.recommend_video_decoder_downsample_parameters.call(this, pInputDesc, input_color_space, pInputConfig, pFrameRate, pRecommendedOutputDesc)
    end
    def check_feature_support(this : ID3D11VideoDevice2*, feature : Win32cr::Graphics::Direct3D11::D3D11_FEATURE_VIDEO, pFeatureSupportData : Void*, feature_support_data_size : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_feature_support.call(this, feature, pFeatureSupportData, feature_support_data_size)
    end
    def negotiate_crypto_session_key_exchange_mt(this : ID3D11VideoDevice2*, pCryptoSession : Void*, flags : Win32cr::Graphics::Direct3D11::D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.negotiate_crypto_session_key_exchange_mt.call(this, pCryptoSession, flags, data_size, pData)
    end

  end

  @[Extern]
  record ID3D11VideoContext3Vtbl,
    query_interface : Proc(ID3D11VideoContext3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11VideoContext3*, UInt32),
    release : Proc(ID3D11VideoContext3*, UInt32),
    get_device : Proc(ID3D11VideoContext3*, Void**, Void),
    get_private_data : Proc(ID3D11VideoContext3*, LibC::GUID*, UInt32*, Void*, Win32cr::Foundation::HRESULT),
    set_private_data : Proc(ID3D11VideoContext3*, LibC::GUID*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    set_private_data_interface : Proc(ID3D11VideoContext3*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT),
    get_decoder_buffer : Proc(ID3D11VideoContext3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE, UInt32*, Void**, Win32cr::Foundation::HRESULT),
    release_decoder_buffer : Proc(ID3D11VideoContext3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE, Win32cr::Foundation::HRESULT),
    decoder_begin_frame : Proc(ID3D11VideoContext3*, Void*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    decoder_end_frame : Proc(ID3D11VideoContext3*, Void*, Win32cr::Foundation::HRESULT),
    submit_decoder_buffers : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC*, Win32cr::Foundation::HRESULT),
    decoder_extension : Proc(ID3D11VideoContext3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_EXTENSION*, Int32),
    video_processor_set_output_target_rect : Proc(ID3D11VideoContext3*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::RECT*, Void),
    video_processor_set_output_background_color : Proc(ID3D11VideoContext3*, Void*, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*, Void),
    video_processor_set_output_color_space : Proc(ID3D11VideoContext3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_set_output_alpha_fill_mode : Proc(ID3D11VideoContext3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE, UInt32, Void),
    video_processor_set_output_constriction : Proc(ID3D11VideoContext3*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::SIZE, Void),
    video_processor_set_output_stereo_mode : Proc(ID3D11VideoContext3*, Void*, Win32cr::Foundation::BOOL, Void),
    video_processor_set_output_extension : Proc(ID3D11VideoContext3*, Void*, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_get_output_target_rect : Proc(ID3D11VideoContext3*, Void*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::RECT*, Void),
    video_processor_get_output_background_color : Proc(ID3D11VideoContext3*, Void*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*, Void),
    video_processor_get_output_color_space : Proc(ID3D11VideoContext3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_get_output_alpha_fill_mode : Proc(ID3D11VideoContext3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE*, UInt32*, Void),
    video_processor_get_output_constriction : Proc(ID3D11VideoContext3*, Void*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::SIZE*, Void),
    video_processor_get_output_stereo_mode : Proc(ID3D11VideoContext3*, Void*, Win32cr::Foundation::BOOL*, Void),
    video_processor_get_output_extension : Proc(ID3D11VideoContext3*, Void*, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_set_stream_frame_format : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT, Void),
    video_processor_set_stream_color_space : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_set_stream_output_rate : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE, Win32cr::Foundation::BOOL, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_set_stream_source_rect : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::RECT*, Void),
    video_processor_set_stream_dest_rect : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::RECT*, Void),
    video_processor_set_stream_alpha : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL, Float32, Void),
    video_processor_set_stream_palette : Proc(ID3D11VideoContext3*, Void*, UInt32, UInt32, UInt32*, Void),
    video_processor_set_stream_pixel_aspect_ratio : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_set_stream_luma_key : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL, Float32, Float32, Void),
    video_processor_set_stream_stereo_format : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE, Int32, Void),
    video_processor_set_stream_auto_processing_mode : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL, Void),
    video_processor_set_stream_filter : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, Win32cr::Foundation::BOOL, Int32, Void),
    video_processor_set_stream_extension : Proc(ID3D11VideoContext3*, Void*, UInt32, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_get_stream_frame_format : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT*, Void),
    video_processor_get_stream_color_space : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*, Void),
    video_processor_get_stream_output_rate : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_get_stream_source_rect : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::RECT*, Void),
    video_processor_get_stream_dest_rect : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::RECT*, Void),
    video_processor_get_stream_alpha : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL*, Float32*, Void),
    video_processor_get_stream_palette : Proc(ID3D11VideoContext3*, Void*, UInt32, UInt32, UInt32*, Void),
    video_processor_get_stream_pixel_aspect_ratio : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, Void),
    video_processor_get_stream_luma_key : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL*, Float32*, Float32*, Void),
    video_processor_get_stream_stereo_format : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE*, Int32*, Void),
    video_processor_get_stream_auto_processing_mode : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL*, Void),
    video_processor_get_stream_filter : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, Win32cr::Foundation::BOOL*, Int32*, Void),
    video_processor_get_stream_extension : Proc(ID3D11VideoContext3*, Void*, UInt32, LibC::GUID*, UInt32, Void*, Int32),
    video_processor_blt : Proc(ID3D11VideoContext3*, Void*, Void*, UInt32, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STREAM*, Win32cr::Foundation::HRESULT),
    negotiate_crypto_session_key_exchange : Proc(ID3D11VideoContext3*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    encryption_blt : Proc(ID3D11VideoContext3*, Void*, Void*, Void*, UInt32, Void*, Void),
    decryption_blt : Proc(ID3D11VideoContext3*, Void*, Void*, Void*, Win32cr::Graphics::Direct3D11::D3D11_ENCRYPTED_BLOCK_INFO*, UInt32, Void*, UInt32, Void*, Void),
    start_session_key_refresh : Proc(ID3D11VideoContext3*, Void*, UInt32, Void*, Void),
    finish_session_key_refresh : Proc(ID3D11VideoContext3*, Void*, Void),
    get_encryption_blt_key : Proc(ID3D11VideoContext3*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    negotiate_authenticated_channel_key_exchange : Proc(ID3D11VideoContext3*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    query_authenticated_channel : Proc(ID3D11VideoContext3*, Void*, UInt32, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    configure_authenticated_channel : Proc(ID3D11VideoContext3*, Void*, UInt32, Void*, Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_OUTPUT*, Win32cr::Foundation::HRESULT),
    video_processor_set_stream_rotation : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION, Void),
    video_processor_get_stream_rotation : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION*, Void),
    submit_decoder_buffers1 : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC1*, Win32cr::Foundation::HRESULT),
    get_data_for_new_hardware_key : Proc(ID3D11VideoContext3*, Void*, UInt32, Void*, UInt64*, Win32cr::Foundation::HRESULT),
    check_crypto_session_status : Proc(ID3D11VideoContext3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_CRYPTO_SESSION_STATUS*, Win32cr::Foundation::HRESULT),
    decoder_enable_downsampling : Proc(ID3D11VideoContext3*, Void*, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*, UInt32, Win32cr::Foundation::HRESULT),
    decoder_update_downsampling : Proc(ID3D11VideoContext3*, Void*, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*, Win32cr::Foundation::HRESULT),
    video_processor_set_output_color_space1 : Proc(ID3D11VideoContext3*, Void*, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, Void),
    video_processor_set_output_shader_usage : Proc(ID3D11VideoContext3*, Void*, Win32cr::Foundation::BOOL, Void),
    video_processor_get_output_color_space1 : Proc(ID3D11VideoContext3*, Void*, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE*, Void),
    video_processor_get_output_shader_usage : Proc(ID3D11VideoContext3*, Void*, Win32cr::Foundation::BOOL*, Void),
    video_processor_set_stream_color_space1 : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, Void),
    video_processor_set_stream_mirror : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Void),
    video_processor_get_stream_color_space1 : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE*, Void),
    video_processor_get_stream_mirror : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Void),
    video_processor_get_behavior_hints : Proc(ID3D11VideoContext3*, Void*, UInt32, UInt32, Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT*, UInt32*, Win32cr::Foundation::HRESULT),
    video_processor_set_output_hdr_meta_data : Proc(ID3D11VideoContext3*, Void*, Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE, UInt32, Void*, Void),
    video_processor_get_output_hdr_meta_data : Proc(ID3D11VideoContext3*, Void*, Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE*, UInt32, Void*, Void),
    video_processor_set_stream_hdr_meta_data : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE, UInt32, Void*, Void),
    video_processor_get_stream_hdr_meta_data : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE*, UInt32, Void*, Void),
    decoder_begin_frame1 : Proc(ID3D11VideoContext3*, Void*, Void*, UInt32, Void*, UInt32, UInt32*, Void**, Win32cr::Foundation::HRESULT),
    submit_decoder_buffers2 : Proc(ID3D11VideoContext3*, Void*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC2*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11VideoContext3, lpVtbl : ID3D11VideoContext3Vtbl* do
    GUID = LibC::GUID.new(0xa9e2faa0_u32, 0xcb39_u16, 0x418f_u16, StaticArray[0xa0_u8, 0xb7_u8, 0xd8_u8, 0xaa_u8, 0xd4_u8, 0xde_u8, 0x67_u8, 0x2e_u8])
    def query_interface(this : ID3D11VideoContext3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11VideoContext3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11VideoContext3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_device(this : ID3D11VideoContext3*, ppDevice : Void**) : Void
      @lpVtbl.try &.value.get_device.call(this, ppDevice)
    end
    def get_private_data(this : ID3D11VideoContext3*, guid : LibC::GUID*, pDataSize : UInt32*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_private_data.call(this, guid, pDataSize, pData)
    end
    def set_private_data(this : ID3D11VideoContext3*, guid : LibC::GUID*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data.call(this, guid, data_size, pData)
    end
    def set_private_data_interface(this : ID3D11VideoContext3*, guid : LibC::GUID*, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_private_data_interface.call(this, guid, pData)
    end
    def get_decoder_buffer(this : ID3D11VideoContext3*, pDecoder : Void*, type__ : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE, pBufferSize : UInt32*, ppBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_decoder_buffer.call(this, pDecoder, type__, pBufferSize, ppBuffer)
    end
    def release_decoder_buffer(this : ID3D11VideoContext3*, pDecoder : Void*, type__ : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_TYPE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.release_decoder_buffer.call(this, pDecoder, type__)
    end
    def decoder_begin_frame(this : ID3D11VideoContext3*, pDecoder : Void*, pView : Void*, content_key_size : UInt32, pContentKey : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decoder_begin_frame.call(this, pDecoder, pView, content_key_size, pContentKey)
    end
    def decoder_end_frame(this : ID3D11VideoContext3*, pDecoder : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decoder_end_frame.call(this, pDecoder)
    end
    def submit_decoder_buffers(this : ID3D11VideoContext3*, pDecoder : Void*, num_buffers : UInt32, pBufferDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.submit_decoder_buffers.call(this, pDecoder, num_buffers, pBufferDesc)
    end
    def decoder_extension(this : ID3D11VideoContext3*, pDecoder : Void*, pExtensionData : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_EXTENSION*) : Int32
      @lpVtbl.try &.value.decoder_extension.call(this, pDecoder, pExtensionData)
    end
    def video_processor_set_output_target_rect(this : ID3D11VideoContext3*, pVideoProcessor : Void*, enable : Win32cr::Foundation::BOOL, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_set_output_target_rect.call(this, pVideoProcessor, enable, pRect)
    end
    def video_processor_set_output_background_color(this : ID3D11VideoContext3*, pVideoProcessor : Void*, y_cb_cr : Win32cr::Foundation::BOOL, pColor : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*) : Void
      @lpVtbl.try &.value.video_processor_set_output_background_color.call(this, pVideoProcessor, y_cb_cr, pColor)
    end
    def video_processor_set_output_color_space(this : ID3D11VideoContext3*, pVideoProcessor : Void*, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_set_output_color_space.call(this, pVideoProcessor, pColorSpace)
    end
    def video_processor_set_output_alpha_fill_mode(this : ID3D11VideoContext3*, pVideoProcessor : Void*, alpha_fill_mode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE, stream_index : UInt32) : Void
      @lpVtbl.try &.value.video_processor_set_output_alpha_fill_mode.call(this, pVideoProcessor, alpha_fill_mode, stream_index)
    end
    def video_processor_set_output_constriction(this : ID3D11VideoContext3*, pVideoProcessor : Void*, enable : Win32cr::Foundation::BOOL, size : Win32cr::Foundation::SIZE) : Void
      @lpVtbl.try &.value.video_processor_set_output_constriction.call(this, pVideoProcessor, enable, size)
    end
    def video_processor_set_output_stereo_mode(this : ID3D11VideoContext3*, pVideoProcessor : Void*, enable : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.video_processor_set_output_stereo_mode.call(this, pVideoProcessor, enable)
    end
    def video_processor_set_output_extension(this : ID3D11VideoContext3*, pVideoProcessor : Void*, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_set_output_extension.call(this, pVideoProcessor, pExtensionGuid, data_size, pData)
    end
    def video_processor_get_output_target_rect(this : ID3D11VideoContext3*, pVideoProcessor : Void*, enabled : Win32cr::Foundation::BOOL*, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_get_output_target_rect.call(this, pVideoProcessor, enabled, pRect)
    end
    def video_processor_get_output_background_color(this : ID3D11VideoContext3*, pVideoProcessor : Void*, pYCbCr : Win32cr::Foundation::BOOL*, pColor : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_COLOR*) : Void
      @lpVtbl.try &.value.video_processor_get_output_background_color.call(this, pVideoProcessor, pYCbCr, pColor)
    end
    def video_processor_get_output_color_space(this : ID3D11VideoContext3*, pVideoProcessor : Void*, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_get_output_color_space.call(this, pVideoProcessor, pColorSpace)
    end
    def video_processor_get_output_alpha_fill_mode(this : ID3D11VideoContext3*, pVideoProcessor : Void*, pAlphaFillMode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE*, pStreamIndex : UInt32*) : Void
      @lpVtbl.try &.value.video_processor_get_output_alpha_fill_mode.call(this, pVideoProcessor, pAlphaFillMode, pStreamIndex)
    end
    def video_processor_get_output_constriction(this : ID3D11VideoContext3*, pVideoProcessor : Void*, pEnabled : Win32cr::Foundation::BOOL*, pSize : Win32cr::Foundation::SIZE*) : Void
      @lpVtbl.try &.value.video_processor_get_output_constriction.call(this, pVideoProcessor, pEnabled, pSize)
    end
    def video_processor_get_output_stereo_mode(this : ID3D11VideoContext3*, pVideoProcessor : Void*, pEnabled : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.video_processor_get_output_stereo_mode.call(this, pVideoProcessor, pEnabled)
    end
    def video_processor_get_output_extension(this : ID3D11VideoContext3*, pVideoProcessor : Void*, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_get_output_extension.call(this, pVideoProcessor, pExtensionGuid, data_size, pData)
    end
    def video_processor_set_stream_frame_format(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, frame_format : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT) : Void
      @lpVtbl.try &.value.video_processor_set_stream_frame_format.call(this, pVideoProcessor, stream_index, frame_format)
    end
    def video_processor_set_stream_color_space(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_color_space.call(this, pVideoProcessor, stream_index, pColorSpace)
    end
    def video_processor_set_stream_output_rate(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, output_rate : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE, repeat_frame : Win32cr::Foundation::BOOL, pCustomRate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_output_rate.call(this, pVideoProcessor, stream_index, output_rate, repeat_frame, pCustomRate)
    end
    def video_processor_set_stream_source_rect(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_source_rect.call(this, pVideoProcessor, stream_index, enable, pRect)
    end
    def video_processor_set_stream_dest_rect(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_dest_rect.call(this, pVideoProcessor, stream_index, enable, pRect)
    end
    def video_processor_set_stream_alpha(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, alpha : Float32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_alpha.call(this, pVideoProcessor, stream_index, enable, alpha)
    end
    def video_processor_set_stream_palette(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, count : UInt32, pEntries : UInt32*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_palette.call(this, pVideoProcessor, stream_index, count, pEntries)
    end
    def video_processor_set_stream_pixel_aspect_ratio(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, pSourceAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, pDestinationAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_pixel_aspect_ratio.call(this, pVideoProcessor, stream_index, enable, pSourceAspectRatio, pDestinationAspectRatio)
    end
    def video_processor_set_stream_luma_key(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, lower : Float32, upper : Float32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_luma_key.call(this, pVideoProcessor, stream_index, enable, lower, upper)
    end
    def video_processor_set_stream_stereo_format(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, format : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT, left_view_frame0 : Win32cr::Foundation::BOOL, base_view_frame0 : Win32cr::Foundation::BOOL, flip_mode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE, mono_offset : Int32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_stereo_format.call(this, pVideoProcessor, stream_index, enable, format, left_view_frame0, base_view_frame0, flip_mode, mono_offset)
    end
    def video_processor_set_stream_auto_processing_mode(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.video_processor_set_stream_auto_processing_mode.call(this, pVideoProcessor, stream_index, enable)
    end
    def video_processor_set_stream_filter(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, filter : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, enable : Win32cr::Foundation::BOOL, level : Int32) : Void
      @lpVtbl.try &.value.video_processor_set_stream_filter.call(this, pVideoProcessor, stream_index, filter, enable, level)
    end
    def video_processor_set_stream_extension(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_set_stream_extension.call(this, pVideoProcessor, stream_index, pExtensionGuid, data_size, pData)
    end
    def video_processor_get_stream_frame_format(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pFrameFormat : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_FRAME_FORMAT*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_frame_format.call(this, pVideoProcessor, stream_index, pFrameFormat)
    end
    def video_processor_get_stream_color_space(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pColorSpace : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_COLOR_SPACE*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_color_space.call(this, pVideoProcessor, stream_index, pColorSpace)
    end
    def video_processor_get_stream_output_rate(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pOutputRate : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_OUTPUT_RATE*, pRepeatFrame : Win32cr::Foundation::BOOL*, pCustomRate : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_output_rate.call(this, pVideoProcessor, stream_index, pOutputRate, pRepeatFrame, pCustomRate)
    end
    def video_processor_get_stream_source_rect(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_source_rect.call(this, pVideoProcessor, stream_index, pEnabled, pRect)
    end
    def video_processor_get_stream_dest_rect(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pRect : Win32cr::Foundation::RECT*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_dest_rect.call(this, pVideoProcessor, stream_index, pEnabled, pRect)
    end
    def video_processor_get_stream_alpha(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pAlpha : Float32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_alpha.call(this, pVideoProcessor, stream_index, pEnabled, pAlpha)
    end
    def video_processor_get_stream_palette(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, count : UInt32, pEntries : UInt32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_palette.call(this, pVideoProcessor, stream_index, count, pEntries)
    end
    def video_processor_get_stream_pixel_aspect_ratio(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pSourceAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*, pDestinationAspectRatio : Win32cr::Graphics::Dxgi::Common::DXGI_RATIONAL*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_pixel_aspect_ratio.call(this, pVideoProcessor, stream_index, pEnabled, pSourceAspectRatio, pDestinationAspectRatio)
    end
    def video_processor_get_stream_luma_key(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*, pLower : Float32*, pUpper : Float32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_luma_key.call(this, pVideoProcessor, stream_index, pEnabled, pLower, pUpper)
    end
    def video_processor_get_stream_stereo_format(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pEnable : Win32cr::Foundation::BOOL*, pFormat : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FORMAT*, pLeftViewFrame0 : Win32cr::Foundation::BOOL*, pBaseViewFrame0 : Win32cr::Foundation::BOOL*, pFlipMode : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE*, mono_offset : Int32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_stereo_format.call(this, pVideoProcessor, stream_index, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, mono_offset)
    end
    def video_processor_get_stream_auto_processing_mode(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pEnabled : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_auto_processing_mode.call(this, pVideoProcessor, stream_index, pEnabled)
    end
    def video_processor_get_stream_filter(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, filter : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_FILTER, pEnabled : Win32cr::Foundation::BOOL*, pLevel : Int32*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_filter.call(this, pVideoProcessor, stream_index, filter, pEnabled, pLevel)
    end
    def video_processor_get_stream_extension(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pExtensionGuid : LibC::GUID*, data_size : UInt32, pData : Void*) : Int32
      @lpVtbl.try &.value.video_processor_get_stream_extension.call(this, pVideoProcessor, stream_index, pExtensionGuid, data_size, pData)
    end
    def video_processor_blt(this : ID3D11VideoContext3*, pVideoProcessor : Void*, pView : Void*, output_frame : UInt32, stream_count : UInt32, pStreams : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STREAM*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.video_processor_blt.call(this, pVideoProcessor, pView, output_frame, stream_count, pStreams)
    end
    def negotiate_crypto_session_key_exchange(this : ID3D11VideoContext3*, pCryptoSession : Void*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.negotiate_crypto_session_key_exchange.call(this, pCryptoSession, data_size, pData)
    end
    def encryption_blt(this : ID3D11VideoContext3*, pCryptoSession : Void*, pSrcSurface : Void*, pDstSurface : Void*, iv_size : UInt32, pIV : Void*) : Void
      @lpVtbl.try &.value.encryption_blt.call(this, pCryptoSession, pSrcSurface, pDstSurface, iv_size, pIV)
    end
    def decryption_blt(this : ID3D11VideoContext3*, pCryptoSession : Void*, pSrcSurface : Void*, pDstSurface : Void*, pEncryptedBlockInfo : Win32cr::Graphics::Direct3D11::D3D11_ENCRYPTED_BLOCK_INFO*, content_key_size : UInt32, pContentKey : Void*, iv_size : UInt32, pIV : Void*) : Void
      @lpVtbl.try &.value.decryption_blt.call(this, pCryptoSession, pSrcSurface, pDstSurface, pEncryptedBlockInfo, content_key_size, pContentKey, iv_size, pIV)
    end
    def start_session_key_refresh(this : ID3D11VideoContext3*, pCryptoSession : Void*, random_number_size : UInt32, pRandomNumber : Void*) : Void
      @lpVtbl.try &.value.start_session_key_refresh.call(this, pCryptoSession, random_number_size, pRandomNumber)
    end
    def finish_session_key_refresh(this : ID3D11VideoContext3*, pCryptoSession : Void*) : Void
      @lpVtbl.try &.value.finish_session_key_refresh.call(this, pCryptoSession)
    end
    def get_encryption_blt_key(this : ID3D11VideoContext3*, pCryptoSession : Void*, key_size : UInt32, pReadbackKey : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_encryption_blt_key.call(this, pCryptoSession, key_size, pReadbackKey)
    end
    def negotiate_authenticated_channel_key_exchange(this : ID3D11VideoContext3*, pChannel : Void*, data_size : UInt32, pData : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.negotiate_authenticated_channel_key_exchange.call(this, pChannel, data_size, pData)
    end
    def query_authenticated_channel(this : ID3D11VideoContext3*, pChannel : Void*, input_size : UInt32, pInput : Void*, output_size : UInt32, pOutput : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_authenticated_channel.call(this, pChannel, input_size, pInput, output_size, pOutput)
    end
    def configure_authenticated_channel(this : ID3D11VideoContext3*, pChannel : Void*, input_size : UInt32, pInput : Void*, pOutput : Win32cr::Graphics::Direct3D11::D3D11_AUTHENTICATED_CONFIGURE_OUTPUT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.configure_authenticated_channel.call(this, pChannel, input_size, pInput, pOutput)
    end
    def video_processor_set_stream_rotation(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, rotation : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION) : Void
      @lpVtbl.try &.value.video_processor_set_stream_rotation.call(this, pVideoProcessor, stream_index, enable, rotation)
    end
    def video_processor_get_stream_rotation(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pEnable : Win32cr::Foundation::BOOL*, pRotation : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_ROTATION*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_rotation.call(this, pVideoProcessor, stream_index, pEnable, pRotation)
    end
    def submit_decoder_buffers1(this : ID3D11VideoContext3*, pDecoder : Void*, num_buffers : UInt32, pBufferDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC1*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.submit_decoder_buffers1.call(this, pDecoder, num_buffers, pBufferDesc)
    end
    def get_data_for_new_hardware_key(this : ID3D11VideoContext3*, pCryptoSession : Void*, private_input_size : UInt32, pPrivatInputData : Void*, pPrivateOutputData : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_data_for_new_hardware_key.call(this, pCryptoSession, private_input_size, pPrivatInputData, pPrivateOutputData)
    end
    def check_crypto_session_status(this : ID3D11VideoContext3*, pCryptoSession : Void*, pStatus : Win32cr::Graphics::Direct3D11::D3D11_CRYPTO_SESSION_STATUS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_crypto_session_status.call(this, pCryptoSession, pStatus)
    end
    def decoder_enable_downsampling(this : ID3D11VideoContext3*, pDecoder : Void*, input_color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE, pOutputDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*, reference_frame_count : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decoder_enable_downsampling.call(this, pDecoder, input_color_space, pOutputDesc, reference_frame_count)
    end
    def decoder_update_downsampling(this : ID3D11VideoContext3*, pDecoder : Void*, pOutputDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_SAMPLE_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decoder_update_downsampling.call(this, pDecoder, pOutputDesc)
    end
    def video_processor_set_output_color_space1(this : ID3D11VideoContext3*, pVideoProcessor : Void*, color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE) : Void
      @lpVtbl.try &.value.video_processor_set_output_color_space1.call(this, pVideoProcessor, color_space)
    end
    def video_processor_set_output_shader_usage(this : ID3D11VideoContext3*, pVideoProcessor : Void*, shader_usage : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.video_processor_set_output_shader_usage.call(this, pVideoProcessor, shader_usage)
    end
    def video_processor_get_output_color_space1(this : ID3D11VideoContext3*, pVideoProcessor : Void*, pColorSpace : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE*) : Void
      @lpVtbl.try &.value.video_processor_get_output_color_space1.call(this, pVideoProcessor, pColorSpace)
    end
    def video_processor_get_output_shader_usage(this : ID3D11VideoContext3*, pVideoProcessor : Void*, pShaderUsage : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.video_processor_get_output_shader_usage.call(this, pVideoProcessor, pShaderUsage)
    end
    def video_processor_set_stream_color_space1(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, color_space : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE) : Void
      @lpVtbl.try &.value.video_processor_set_stream_color_space1.call(this, pVideoProcessor, stream_index, color_space)
    end
    def video_processor_set_stream_mirror(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, enable : Win32cr::Foundation::BOOL, flip_horizontal : Win32cr::Foundation::BOOL, flip_vertical : Win32cr::Foundation::BOOL) : Void
      @lpVtbl.try &.value.video_processor_set_stream_mirror.call(this, pVideoProcessor, stream_index, enable, flip_horizontal, flip_vertical)
    end
    def video_processor_get_stream_color_space1(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pColorSpace : Win32cr::Graphics::Dxgi::Common::DXGI_COLOR_SPACE_TYPE*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_color_space1.call(this, pVideoProcessor, stream_index, pColorSpace)
    end
    def video_processor_get_stream_mirror(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pEnable : Win32cr::Foundation::BOOL*, pFlipHorizontal : Win32cr::Foundation::BOOL*, pFlipVertical : Win32cr::Foundation::BOOL*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_mirror.call(this, pVideoProcessor, stream_index, pEnable, pFlipHorizontal, pFlipVertical)
    end
    def video_processor_get_behavior_hints(this : ID3D11VideoContext3*, pVideoProcessor : Void*, output_width : UInt32, output_height : UInt32, output_format : Win32cr::Graphics::Dxgi::Common::DXGI_FORMAT, stream_count : UInt32, pStreams : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT*, pBehaviorHints : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.video_processor_get_behavior_hints.call(this, pVideoProcessor, output_width, output_height, output_format, stream_count, pStreams, pBehaviorHints)
    end
    def video_processor_set_output_hdr_meta_data(this : ID3D11VideoContext3*, pVideoProcessor : Void*, type__ : Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE, size : UInt32, pHDRMetaData : Void*) : Void
      @lpVtbl.try &.value.video_processor_set_output_hdr_meta_data.call(this, pVideoProcessor, type__, size, pHDRMetaData)
    end
    def video_processor_get_output_hdr_meta_data(this : ID3D11VideoContext3*, pVideoProcessor : Void*, pType : Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE*, size : UInt32, pMetaData : Void*) : Void
      @lpVtbl.try &.value.video_processor_get_output_hdr_meta_data.call(this, pVideoProcessor, pType, size, pMetaData)
    end
    def video_processor_set_stream_hdr_meta_data(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, type__ : Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE, size : UInt32, pHDRMetaData : Void*) : Void
      @lpVtbl.try &.value.video_processor_set_stream_hdr_meta_data.call(this, pVideoProcessor, stream_index, type__, size, pHDRMetaData)
    end
    def video_processor_get_stream_hdr_meta_data(this : ID3D11VideoContext3*, pVideoProcessor : Void*, stream_index : UInt32, pType : Win32cr::Graphics::Dxgi::DXGI_HDR_METADATA_TYPE*, size : UInt32, pMetaData : Void*) : Void
      @lpVtbl.try &.value.video_processor_get_stream_hdr_meta_data.call(this, pVideoProcessor, stream_index, pType, size, pMetaData)
    end
    def decoder_begin_frame1(this : ID3D11VideoContext3*, pDecoder : Void*, pView : Void*, content_key_size : UInt32, pContentKey : Void*, num_component_histograms : UInt32, pHistogramOffsets : UInt32*, ppHistogramBuffers : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decoder_begin_frame1.call(this, pDecoder, pView, content_key_size, pContentKey, num_component_histograms, pHistogramOffsets, ppHistogramBuffers)
    end
    def submit_decoder_buffers2(this : ID3D11VideoContext3*, pDecoder : Void*, num_buffers : UInt32, pBufferDesc : Win32cr::Graphics::Direct3D11::D3D11_VIDEO_DECODER_BUFFER_DESC2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.submit_decoder_buffers2.call(this, pDecoder, num_buffers, pBufferDesc)
    end

  end

  @[Extern]
  record ID3D11ShaderReflectionTypeVtbl,
    get_desc : Proc(ID3D11ShaderReflectionType*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_TYPE_DESC*, Win32cr::Foundation::HRESULT),
    get_member_type_by_index : Proc(ID3D11ShaderReflectionType*, UInt32, Void*),
    get_member_type_by_name : Proc(ID3D11ShaderReflectionType*, Win32cr::Foundation::PSTR, Void*),
    get_member_type_name : Proc(ID3D11ShaderReflectionType*, UInt32, Win32cr::Foundation::PSTR),
    is_equal : Proc(ID3D11ShaderReflectionType*, Void*, Win32cr::Foundation::HRESULT),
    get_sub_type : Proc(ID3D11ShaderReflectionType*, Void*),
    get_base_class : Proc(ID3D11ShaderReflectionType*, Void*),
    get_num_interfaces : Proc(ID3D11ShaderReflectionType*, UInt32),
    get_interface_by_index : Proc(ID3D11ShaderReflectionType*, UInt32, Void*),
    is_of_type : Proc(ID3D11ShaderReflectionType*, Void*, Win32cr::Foundation::HRESULT),
    implements_interface : Proc(ID3D11ShaderReflectionType*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11ShaderReflectionType, lpVtbl : ID3D11ShaderReflectionTypeVtbl* do
    GUID = LibC::GUID.new(0x6e6ffa6a_u32, 0x9bae_u16, 0x4613_u16, StaticArray[0xa5_u8, 0x1e_u8, 0x91_u8, 0x65_u8, 0x2d_u8, 0x50_u8, 0x8c_u8, 0x21_u8])
    def get_desc(this : ID3D11ShaderReflectionType*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_TYPE_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_member_type_by_index(this : ID3D11ShaderReflectionType*, index : UInt32) : Void*
      @lpVtbl.try &.value.get_member_type_by_index.call(this, index)
    end
    def get_member_type_by_name(this : ID3D11ShaderReflectionType*, name : Win32cr::Foundation::PSTR) : Void*
      @lpVtbl.try &.value.get_member_type_by_name.call(this, name)
    end
    def get_member_type_name(this : ID3D11ShaderReflectionType*, index : UInt32) : Win32cr::Foundation::PSTR
      @lpVtbl.try &.value.get_member_type_name.call(this, index)
    end
    def is_equal(this : ID3D11ShaderReflectionType*, pType : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_equal.call(this, pType)
    end
    def get_sub_type(this : ID3D11ShaderReflectionType*) : Void*
      @lpVtbl.try &.value.get_sub_type.call(this)
    end
    def get_base_class(this : ID3D11ShaderReflectionType*) : Void*
      @lpVtbl.try &.value.get_base_class.call(this)
    end
    def get_num_interfaces(this : ID3D11ShaderReflectionType*) : UInt32
      @lpVtbl.try &.value.get_num_interfaces.call(this)
    end
    def get_interface_by_index(this : ID3D11ShaderReflectionType*, uIndex : UInt32) : Void*
      @lpVtbl.try &.value.get_interface_by_index.call(this, uIndex)
    end
    def is_of_type(this : ID3D11ShaderReflectionType*, pType : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_of_type.call(this, pType)
    end
    def implements_interface(this : ID3D11ShaderReflectionType*, pBase : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.implements_interface.call(this, pBase)
    end

  end

  @[Extern]
  record ID3D11ShaderReflectionVariableVtbl,
    get_desc : Proc(ID3D11ShaderReflectionVariable*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_VARIABLE_DESC*, Win32cr::Foundation::HRESULT),
    get_type : Proc(ID3D11ShaderReflectionVariable*, Void*),
    get_buffer : Proc(ID3D11ShaderReflectionVariable*, Void*),
    get_interface_slot : Proc(ID3D11ShaderReflectionVariable*, UInt32, UInt32)


  @[Extern]
  record ID3D11ShaderReflectionVariable, lpVtbl : ID3D11ShaderReflectionVariableVtbl* do
    GUID = LibC::GUID.new(0x51f23923_u32, 0xf3e5_u16, 0x4bd1_u16, StaticArray[0x91_u8, 0xcb_u8, 0x60_u8, 0x61_u8, 0x77_u8, 0xd8_u8, 0xdb_u8, 0x4c_u8])
    def get_desc(this : ID3D11ShaderReflectionVariable*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_VARIABLE_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_type(this : ID3D11ShaderReflectionVariable*) : Void*
      @lpVtbl.try &.value.get_type.call(this)
    end
    def get_buffer(this : ID3D11ShaderReflectionVariable*) : Void*
      @lpVtbl.try &.value.get_buffer.call(this)
    end
    def get_interface_slot(this : ID3D11ShaderReflectionVariable*, uArrayIndex : UInt32) : UInt32
      @lpVtbl.try &.value.get_interface_slot.call(this, uArrayIndex)
    end

  end

  @[Extern]
  record ID3D11ShaderReflectionConstantBufferVtbl,
    get_desc : Proc(ID3D11ShaderReflectionConstantBuffer*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_BUFFER_DESC*, Win32cr::Foundation::HRESULT),
    get_variable_by_index : Proc(ID3D11ShaderReflectionConstantBuffer*, UInt32, Void*),
    get_variable_by_name : Proc(ID3D11ShaderReflectionConstantBuffer*, Win32cr::Foundation::PSTR, Void*)


  @[Extern]
  record ID3D11ShaderReflectionConstantBuffer, lpVtbl : ID3D11ShaderReflectionConstantBufferVtbl* do
    GUID = LibC::GUID.new(0xeb62d63d_u32, 0x93dd_u16, 0x4318_u16, StaticArray[0x8a_u8, 0xe8_u8, 0xc6_u8, 0xf8_u8, 0x3a_u8, 0xd3_u8, 0x71_u8, 0xb8_u8])
    def get_desc(this : ID3D11ShaderReflectionConstantBuffer*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_BUFFER_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_variable_by_index(this : ID3D11ShaderReflectionConstantBuffer*, index : UInt32) : Void*
      @lpVtbl.try &.value.get_variable_by_index.call(this, index)
    end
    def get_variable_by_name(this : ID3D11ShaderReflectionConstantBuffer*, name : Win32cr::Foundation::PSTR) : Void*
      @lpVtbl.try &.value.get_variable_by_name.call(this, name)
    end

  end

  @[Extern]
  record ID3D11ShaderReflectionVtbl,
    query_interface : Proc(ID3D11ShaderReflection*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11ShaderReflection*, UInt32),
    release : Proc(ID3D11ShaderReflection*, UInt32),
    get_desc : Proc(ID3D11ShaderReflection*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_DESC*, Win32cr::Foundation::HRESULT),
    get_constant_buffer_by_index : Proc(ID3D11ShaderReflection*, UInt32, Void*),
    get_constant_buffer_by_name : Proc(ID3D11ShaderReflection*, Win32cr::Foundation::PSTR, Void*),
    get_resource_binding_desc : Proc(ID3D11ShaderReflection*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_SHADER_INPUT_BIND_DESC*, Win32cr::Foundation::HRESULT),
    get_input_parameter_desc : Proc(ID3D11ShaderReflection*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_SIGNATURE_PARAMETER_DESC*, Win32cr::Foundation::HRESULT),
    get_output_parameter_desc : Proc(ID3D11ShaderReflection*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_SIGNATURE_PARAMETER_DESC*, Win32cr::Foundation::HRESULT),
    get_patch_constant_parameter_desc : Proc(ID3D11ShaderReflection*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_SIGNATURE_PARAMETER_DESC*, Win32cr::Foundation::HRESULT),
    get_variable_by_name : Proc(ID3D11ShaderReflection*, Win32cr::Foundation::PSTR, Void*),
    get_resource_binding_desc_by_name : Proc(ID3D11ShaderReflection*, Win32cr::Foundation::PSTR, Win32cr::Graphics::Direct3D11::D3D11_SHADER_INPUT_BIND_DESC*, Win32cr::Foundation::HRESULT),
    get_mov_instruction_count : Proc(ID3D11ShaderReflection*, UInt32),
    get_movc_instruction_count : Proc(ID3D11ShaderReflection*, UInt32),
    get_conversion_instruction_count : Proc(ID3D11ShaderReflection*, UInt32),
    get_bitwise_instruction_count : Proc(ID3D11ShaderReflection*, UInt32),
    get_gs_input_primitive : Proc(ID3D11ShaderReflection*, Win32cr::Graphics::Direct3D::D3D_PRIMITIVE),
    is_sample_frequency_shader : Proc(ID3D11ShaderReflection*, Win32cr::Foundation::BOOL),
    get_num_interface_slots : Proc(ID3D11ShaderReflection*, UInt32),
    get_min_feature_level : Proc(ID3D11ShaderReflection*, Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, Win32cr::Foundation::HRESULT),
    get_thread_group_size : Proc(ID3D11ShaderReflection*, UInt32*, UInt32*, UInt32*, UInt32),
    get_requires_flags : Proc(ID3D11ShaderReflection*, UInt64)


  @[Extern]
  record ID3D11ShaderReflection, lpVtbl : ID3D11ShaderReflectionVtbl* do
    GUID = LibC::GUID.new(0x8d536ca1_u32, 0xcca_u16, 0x4956_u16, StaticArray[0xa8_u8, 0x37_u8, 0x78_u8, 0x69_u8, 0x63_u8, 0x75_u8, 0x55_u8, 0x84_u8])
    def query_interface(this : ID3D11ShaderReflection*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11ShaderReflection*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11ShaderReflection*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_desc(this : ID3D11ShaderReflection*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_constant_buffer_by_index(this : ID3D11ShaderReflection*, index : UInt32) : Void*
      @lpVtbl.try &.value.get_constant_buffer_by_index.call(this, index)
    end
    def get_constant_buffer_by_name(this : ID3D11ShaderReflection*, name : Win32cr::Foundation::PSTR) : Void*
      @lpVtbl.try &.value.get_constant_buffer_by_name.call(this, name)
    end
    def get_resource_binding_desc(this : ID3D11ShaderReflection*, resource_index : UInt32, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_INPUT_BIND_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_resource_binding_desc.call(this, resource_index, pDesc)
    end
    def get_input_parameter_desc(this : ID3D11ShaderReflection*, parameter_index : UInt32, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SIGNATURE_PARAMETER_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_input_parameter_desc.call(this, parameter_index, pDesc)
    end
    def get_output_parameter_desc(this : ID3D11ShaderReflection*, parameter_index : UInt32, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SIGNATURE_PARAMETER_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_output_parameter_desc.call(this, parameter_index, pDesc)
    end
    def get_patch_constant_parameter_desc(this : ID3D11ShaderReflection*, parameter_index : UInt32, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SIGNATURE_PARAMETER_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_patch_constant_parameter_desc.call(this, parameter_index, pDesc)
    end
    def get_variable_by_name(this : ID3D11ShaderReflection*, name : Win32cr::Foundation::PSTR) : Void*
      @lpVtbl.try &.value.get_variable_by_name.call(this, name)
    end
    def get_resource_binding_desc_by_name(this : ID3D11ShaderReflection*, name : Win32cr::Foundation::PSTR, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_INPUT_BIND_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_resource_binding_desc_by_name.call(this, name, pDesc)
    end
    def get_mov_instruction_count(this : ID3D11ShaderReflection*) : UInt32
      @lpVtbl.try &.value.get_mov_instruction_count.call(this)
    end
    def get_movc_instruction_count(this : ID3D11ShaderReflection*) : UInt32
      @lpVtbl.try &.value.get_movc_instruction_count.call(this)
    end
    def get_conversion_instruction_count(this : ID3D11ShaderReflection*) : UInt32
      @lpVtbl.try &.value.get_conversion_instruction_count.call(this)
    end
    def get_bitwise_instruction_count(this : ID3D11ShaderReflection*) : UInt32
      @lpVtbl.try &.value.get_bitwise_instruction_count.call(this)
    end
    def get_gs_input_primitive(this : ID3D11ShaderReflection*) : Win32cr::Graphics::Direct3D::D3D_PRIMITIVE
      @lpVtbl.try &.value.get_gs_input_primitive.call(this)
    end
    def is_sample_frequency_shader(this : ID3D11ShaderReflection*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.is_sample_frequency_shader.call(this)
    end
    def get_num_interface_slots(this : ID3D11ShaderReflection*) : UInt32
      @lpVtbl.try &.value.get_num_interface_slots.call(this)
    end
    def get_min_feature_level(this : ID3D11ShaderReflection*, pLevel : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_min_feature_level.call(this, pLevel)
    end
    def get_thread_group_size(this : ID3D11ShaderReflection*, pSizeX : UInt32*, pSizeY : UInt32*, pSizeZ : UInt32*) : UInt32
      @lpVtbl.try &.value.get_thread_group_size.call(this, pSizeX, pSizeY, pSizeZ)
    end
    def get_requires_flags(this : ID3D11ShaderReflection*) : UInt64
      @lpVtbl.try &.value.get_requires_flags.call(this)
    end

  end

  @[Extern]
  record ID3D11LibraryReflectionVtbl,
    query_interface : Proc(ID3D11LibraryReflection*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11LibraryReflection*, UInt32),
    release : Proc(ID3D11LibraryReflection*, UInt32),
    get_desc : Proc(ID3D11LibraryReflection*, Win32cr::Graphics::Direct3D11::D3D11_LIBRARY_DESC*, Win32cr::Foundation::HRESULT),
    get_function_by_index : Proc(ID3D11LibraryReflection*, Int32, Void*)


  @[Extern]
  record ID3D11LibraryReflection, lpVtbl : ID3D11LibraryReflectionVtbl* do
    GUID = LibC::GUID.new(0x54384f1b_u32, 0x5b3e_u16, 0x4bb7_u16, StaticArray[0xae_u8, 0x1_u8, 0x60_u8, 0xba_u8, 0x30_u8, 0x97_u8, 0xcb_u8, 0xb6_u8])
    def query_interface(this : ID3D11LibraryReflection*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11LibraryReflection*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11LibraryReflection*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_desc(this : ID3D11LibraryReflection*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_LIBRARY_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_function_by_index(this : ID3D11LibraryReflection*, function_index : Int32) : Void*
      @lpVtbl.try &.value.get_function_by_index.call(this, function_index)
    end

  end

  @[Extern]
  record ID3D11FunctionReflectionVtbl,
    get_desc : Proc(ID3D11FunctionReflection*, Win32cr::Graphics::Direct3D11::D3D11_FUNCTION_DESC*, Win32cr::Foundation::HRESULT),
    get_constant_buffer_by_index : Proc(ID3D11FunctionReflection*, UInt32, Void*),
    get_constant_buffer_by_name : Proc(ID3D11FunctionReflection*, Win32cr::Foundation::PSTR, Void*),
    get_resource_binding_desc : Proc(ID3D11FunctionReflection*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_SHADER_INPUT_BIND_DESC*, Win32cr::Foundation::HRESULT),
    get_variable_by_name : Proc(ID3D11FunctionReflection*, Win32cr::Foundation::PSTR, Void*),
    get_resource_binding_desc_by_name : Proc(ID3D11FunctionReflection*, Win32cr::Foundation::PSTR, Win32cr::Graphics::Direct3D11::D3D11_SHADER_INPUT_BIND_DESC*, Win32cr::Foundation::HRESULT),
    get_function_parameter : Proc(ID3D11FunctionReflection*, Int32, Void*)


  @[Extern]
  record ID3D11FunctionReflection, lpVtbl : ID3D11FunctionReflectionVtbl* do
    GUID = LibC::GUID.new(0x207bcecb_u32, 0xd683_u16, 0x4a06_u16, StaticArray[0xa8_u8, 0xa3_u8, 0x9b_u8, 0x14_u8, 0x9b_u8, 0x9f_u8, 0x73_u8, 0xa4_u8])
    def get_desc(this : ID3D11FunctionReflection*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_FUNCTION_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end
    def get_constant_buffer_by_index(this : ID3D11FunctionReflection*, buffer_index : UInt32) : Void*
      @lpVtbl.try &.value.get_constant_buffer_by_index.call(this, buffer_index)
    end
    def get_constant_buffer_by_name(this : ID3D11FunctionReflection*, name : Win32cr::Foundation::PSTR) : Void*
      @lpVtbl.try &.value.get_constant_buffer_by_name.call(this, name)
    end
    def get_resource_binding_desc(this : ID3D11FunctionReflection*, resource_index : UInt32, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_INPUT_BIND_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_resource_binding_desc.call(this, resource_index, pDesc)
    end
    def get_variable_by_name(this : ID3D11FunctionReflection*, name : Win32cr::Foundation::PSTR) : Void*
      @lpVtbl.try &.value.get_variable_by_name.call(this, name)
    end
    def get_resource_binding_desc_by_name(this : ID3D11FunctionReflection*, name : Win32cr::Foundation::PSTR, pDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_INPUT_BIND_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_resource_binding_desc_by_name.call(this, name, pDesc)
    end
    def get_function_parameter(this : ID3D11FunctionReflection*, parameter_index : Int32) : Void*
      @lpVtbl.try &.value.get_function_parameter.call(this, parameter_index)
    end

  end

  @[Extern]
  record ID3D11FunctionParameterReflectionVtbl,
    get_desc : Proc(ID3D11FunctionParameterReflection*, Win32cr::Graphics::Direct3D11::D3D11_PARAMETER_DESC*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11FunctionParameterReflection, lpVtbl : ID3D11FunctionParameterReflectionVtbl* do
    GUID = LibC::GUID.new(0x42757488_u32, 0x334f_u16, 0x47fe_u16, StaticArray[0x98_u8, 0x2e_u8, 0x1a_u8, 0x65_u8, 0xd0_u8, 0x8c_u8, 0xc4_u8, 0x62_u8])
    def get_desc(this : ID3D11FunctionParameterReflection*, pDesc : Win32cr::Graphics::Direct3D11::D3D11_PARAMETER_DESC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_desc.call(this, pDesc)
    end

  end

  @[Extern]
  record ID3D11ModuleInstanceVtbl,
    query_interface : Proc(ID3D11ModuleInstance*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11ModuleInstance*, UInt32),
    release : Proc(ID3D11ModuleInstance*, UInt32),
    bind_constant_buffer : Proc(ID3D11ModuleInstance*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    bind_constant_buffer_by_name : Proc(ID3D11ModuleInstance*, Win32cr::Foundation::PSTR, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    bind_resource : Proc(ID3D11ModuleInstance*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    bind_resource_by_name : Proc(ID3D11ModuleInstance*, Win32cr::Foundation::PSTR, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    bind_sampler : Proc(ID3D11ModuleInstance*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    bind_sampler_by_name : Proc(ID3D11ModuleInstance*, Win32cr::Foundation::PSTR, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    bind_unordered_access_view : Proc(ID3D11ModuleInstance*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    bind_unordered_access_view_by_name : Proc(ID3D11ModuleInstance*, Win32cr::Foundation::PSTR, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    bind_resource_as_unordered_access_view : Proc(ID3D11ModuleInstance*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    bind_resource_as_unordered_access_view_by_name : Proc(ID3D11ModuleInstance*, Win32cr::Foundation::PSTR, UInt32, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11ModuleInstance, lpVtbl : ID3D11ModuleInstanceVtbl* do
    GUID = LibC::GUID.new(0x469e07f7_u32, 0x45a_u16, 0x48d5_u16, StaticArray[0xaa_u8, 0x12_u8, 0x68_u8, 0xa4_u8, 0x78_u8, 0xcd_u8, 0xf7_u8, 0x5d_u8])
    def query_interface(this : ID3D11ModuleInstance*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11ModuleInstance*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11ModuleInstance*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def bind_constant_buffer(this : ID3D11ModuleInstance*, uSrcSlot : UInt32, uDstSlot : UInt32, cbDstOffset : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_constant_buffer.call(this, uSrcSlot, uDstSlot, cbDstOffset)
    end
    def bind_constant_buffer_by_name(this : ID3D11ModuleInstance*, pName : Win32cr::Foundation::PSTR, uDstSlot : UInt32, cbDstOffset : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_constant_buffer_by_name.call(this, pName, uDstSlot, cbDstOffset)
    end
    def bind_resource(this : ID3D11ModuleInstance*, uSrcSlot : UInt32, uDstSlot : UInt32, uCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_resource.call(this, uSrcSlot, uDstSlot, uCount)
    end
    def bind_resource_by_name(this : ID3D11ModuleInstance*, pName : Win32cr::Foundation::PSTR, uDstSlot : UInt32, uCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_resource_by_name.call(this, pName, uDstSlot, uCount)
    end
    def bind_sampler(this : ID3D11ModuleInstance*, uSrcSlot : UInt32, uDstSlot : UInt32, uCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_sampler.call(this, uSrcSlot, uDstSlot, uCount)
    end
    def bind_sampler_by_name(this : ID3D11ModuleInstance*, pName : Win32cr::Foundation::PSTR, uDstSlot : UInt32, uCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_sampler_by_name.call(this, pName, uDstSlot, uCount)
    end
    def bind_unordered_access_view(this : ID3D11ModuleInstance*, uSrcSlot : UInt32, uDstSlot : UInt32, uCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_unordered_access_view.call(this, uSrcSlot, uDstSlot, uCount)
    end
    def bind_unordered_access_view_by_name(this : ID3D11ModuleInstance*, pName : Win32cr::Foundation::PSTR, uDstSlot : UInt32, uCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_unordered_access_view_by_name.call(this, pName, uDstSlot, uCount)
    end
    def bind_resource_as_unordered_access_view(this : ID3D11ModuleInstance*, uSrcSrvSlot : UInt32, uDstUavSlot : UInt32, uCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_resource_as_unordered_access_view.call(this, uSrcSrvSlot, uDstUavSlot, uCount)
    end
    def bind_resource_as_unordered_access_view_by_name(this : ID3D11ModuleInstance*, pSrvName : Win32cr::Foundation::PSTR, uDstUavSlot : UInt32, uCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_resource_as_unordered_access_view_by_name.call(this, pSrvName, uDstUavSlot, uCount)
    end

  end

  @[Extern]
  record ID3D11ModuleVtbl,
    query_interface : Proc(ID3D11Module*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Module*, UInt32),
    release : Proc(ID3D11Module*, UInt32),
    create_instance : Proc(ID3D11Module*, Win32cr::Foundation::PSTR, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11Module, lpVtbl : ID3D11ModuleVtbl* do
    GUID = LibC::GUID.new(0xcac701ee_u32, 0x80fc_u16, 0x4122_u16, StaticArray[0x82_u8, 0x42_u8, 0x10_u8, 0xb3_u8, 0x9c_u8, 0x8c_u8, 0xec_u8, 0x34_u8])
    def query_interface(this : ID3D11Module*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Module*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Module*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_instance(this : ID3D11Module*, pNamespace : Win32cr::Foundation::PSTR, ppModuleInstance : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_instance.call(this, pNamespace, ppModuleInstance)
    end

  end

  @[Extern]
  record ID3D11LinkerVtbl,
    query_interface : Proc(ID3D11Linker*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11Linker*, UInt32),
    release : Proc(ID3D11Linker*, UInt32),
    link : Proc(ID3D11Linker*, Void*, Win32cr::Foundation::PSTR, Win32cr::Foundation::PSTR, UInt32, Void**, Void**, Win32cr::Foundation::HRESULT),
    use_library : Proc(ID3D11Linker*, Void*, Win32cr::Foundation::HRESULT),
    add_clip_plane_from_c_buffer : Proc(ID3D11Linker*, UInt32, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11Linker, lpVtbl : ID3D11LinkerVtbl* do
    GUID = LibC::GUID.new(0x59a6cd0e_u32, 0xe10d_u16, 0x4c1f_u16, StaticArray[0x88_u8, 0xc0_u8, 0x63_u8, 0xab_u8, 0xa1_u8, 0xda_u8, 0xf3_u8, 0xe_u8])
    def query_interface(this : ID3D11Linker*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11Linker*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11Linker*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def link(this : ID3D11Linker*, pEntry : Void*, pEntryName : Win32cr::Foundation::PSTR, pTargetName : Win32cr::Foundation::PSTR, uFlags : UInt32, ppShaderBlob : Void**, ppErrorBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.link.call(this, pEntry, pEntryName, pTargetName, uFlags, ppShaderBlob, ppErrorBuffer)
    end
    def use_library(this : ID3D11Linker*, pLibraryMI : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.use_library.call(this, pLibraryMI)
    end
    def add_clip_plane_from_c_buffer(this : ID3D11Linker*, uCBufferSlot : UInt32, uCBufferEntry : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_clip_plane_from_c_buffer.call(this, uCBufferSlot, uCBufferEntry)
    end

  end

  @[Extern]
  record ID3D11LinkingNodeVtbl,
    query_interface : Proc(ID3D11LinkingNode*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11LinkingNode*, UInt32),
    release : Proc(ID3D11LinkingNode*, UInt32)


  @[Extern]
  record ID3D11LinkingNode, lpVtbl : ID3D11LinkingNodeVtbl* do
    GUID = LibC::GUID.new(0xd80dd70c_u32, 0x8d2f_u16, 0x4751_u16, StaticArray[0x94_u8, 0xa1_u8, 0x3_u8, 0xc7_u8, 0x9b_u8, 0x35_u8, 0x56_u8, 0xdb_u8])
    def query_interface(this : ID3D11LinkingNode*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11LinkingNode*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11LinkingNode*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end

  end

  @[Extern]
  record ID3D11FunctionLinkingGraphVtbl,
    query_interface : Proc(ID3D11FunctionLinkingGraph*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11FunctionLinkingGraph*, UInt32),
    release : Proc(ID3D11FunctionLinkingGraph*, UInt32),
    create_module_instance : Proc(ID3D11FunctionLinkingGraph*, Void**, Void**, Win32cr::Foundation::HRESULT),
    set_input_signature : Proc(ID3D11FunctionLinkingGraph*, Win32cr::Graphics::Direct3D11::D3D11_PARAMETER_DESC*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    set_output_signature : Proc(ID3D11FunctionLinkingGraph*, Win32cr::Graphics::Direct3D11::D3D11_PARAMETER_DESC*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    call_function : Proc(ID3D11FunctionLinkingGraph*, Win32cr::Foundation::PSTR, Void*, Win32cr::Foundation::PSTR, Void**, Win32cr::Foundation::HRESULT),
    pass_value : Proc(ID3D11FunctionLinkingGraph*, Void*, Int32, Void*, Int32, Win32cr::Foundation::HRESULT),
    pass_value_with_swizzle : Proc(ID3D11FunctionLinkingGraph*, Void*, Int32, Win32cr::Foundation::PSTR, Void*, Int32, Win32cr::Foundation::PSTR, Win32cr::Foundation::HRESULT),
    get_last_error : Proc(ID3D11FunctionLinkingGraph*, Void**, Win32cr::Foundation::HRESULT),
    generate_hlsl : Proc(ID3D11FunctionLinkingGraph*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11FunctionLinkingGraph, lpVtbl : ID3D11FunctionLinkingGraphVtbl* do
    GUID = LibC::GUID.new(0x54133220_u32, 0x1ce8_u16, 0x43d3_u16, StaticArray[0x82_u8, 0x36_u8, 0x98_u8, 0x55_u8, 0xc5_u8, 0xce_u8, 0xec_u8, 0xff_u8])
    def query_interface(this : ID3D11FunctionLinkingGraph*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11FunctionLinkingGraph*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11FunctionLinkingGraph*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_module_instance(this : ID3D11FunctionLinkingGraph*, ppModuleInstance : Void**, ppErrorBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_module_instance.call(this, ppModuleInstance, ppErrorBuffer)
    end
    def set_input_signature(this : ID3D11FunctionLinkingGraph*, pInputParameters : Win32cr::Graphics::Direct3D11::D3D11_PARAMETER_DESC*, cInputParameters : UInt32, ppInputNode : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_input_signature.call(this, pInputParameters, cInputParameters, ppInputNode)
    end
    def set_output_signature(this : ID3D11FunctionLinkingGraph*, pOutputParameters : Win32cr::Graphics::Direct3D11::D3D11_PARAMETER_DESC*, cOutputParameters : UInt32, ppOutputNode : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_output_signature.call(this, pOutputParameters, cOutputParameters, ppOutputNode)
    end
    def call_function(this : ID3D11FunctionLinkingGraph*, pModuleInstanceNamespace : Win32cr::Foundation::PSTR, pModuleWithFunctionPrototype : Void*, pFunctionName : Win32cr::Foundation::PSTR, ppCallNode : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.call_function.call(this, pModuleInstanceNamespace, pModuleWithFunctionPrototype, pFunctionName, ppCallNode)
    end
    def pass_value(this : ID3D11FunctionLinkingGraph*, pSrcNode : Void*, src_parameter_index : Int32, pDstNode : Void*, dst_parameter_index : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.pass_value.call(this, pSrcNode, src_parameter_index, pDstNode, dst_parameter_index)
    end
    def pass_value_with_swizzle(this : ID3D11FunctionLinkingGraph*, pSrcNode : Void*, src_parameter_index : Int32, pSrcSwizzle : Win32cr::Foundation::PSTR, pDstNode : Void*, dst_parameter_index : Int32, pDstSwizzle : Win32cr::Foundation::PSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.pass_value_with_swizzle.call(this, pSrcNode, src_parameter_index, pSrcSwizzle, pDstNode, dst_parameter_index, pDstSwizzle)
    end
    def get_last_error(this : ID3D11FunctionLinkingGraph*, ppErrorBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_last_error.call(this, ppErrorBuffer)
    end
    def generate_hlsl(this : ID3D11FunctionLinkingGraph*, uFlags : UInt32, ppBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.generate_hlsl.call(this, uFlags, ppBuffer)
    end

  end

  @[Extern]
  record ID3D11ShaderTraceVtbl,
    query_interface : Proc(ID3D11ShaderTrace*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11ShaderTrace*, UInt32),
    release : Proc(ID3D11ShaderTrace*, UInt32),
    trace_ready : Proc(ID3D11ShaderTrace*, UInt64*, Win32cr::Foundation::HRESULT),
    reset_trace : Proc(ID3D11ShaderTrace*, Void),
    get_trace_stats : Proc(ID3D11ShaderTrace*, Win32cr::Graphics::Direct3D11::D3D11_TRACE_STATS*, Win32cr::Foundation::HRESULT),
    ps_select_stamp : Proc(ID3D11ShaderTrace*, UInt32, Win32cr::Foundation::HRESULT),
    get_initial_register_contents : Proc(ID3D11ShaderTrace*, Win32cr::Graphics::Direct3D11::D3D11_TRACE_REGISTER*, Win32cr::Graphics::Direct3D11::D3D11_TRACE_VALUE*, Win32cr::Foundation::HRESULT),
    get_step : Proc(ID3D11ShaderTrace*, UInt32, Win32cr::Graphics::Direct3D11::D3D11_TRACE_STEP*, Win32cr::Foundation::HRESULT),
    get_written_register : Proc(ID3D11ShaderTrace*, UInt32, UInt32, Win32cr::Graphics::Direct3D11::D3D11_TRACE_REGISTER*, Win32cr::Graphics::Direct3D11::D3D11_TRACE_VALUE*, Win32cr::Foundation::HRESULT),
    get_read_register : Proc(ID3D11ShaderTrace*, UInt32, UInt32, Win32cr::Graphics::Direct3D11::D3D11_TRACE_REGISTER*, Win32cr::Graphics::Direct3D11::D3D11_TRACE_VALUE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11ShaderTrace, lpVtbl : ID3D11ShaderTraceVtbl* do
    GUID = LibC::GUID.new(0x36b013e6_u32, 0x2811_u16, 0x4845_u16, StaticArray[0xba_u8, 0xa7_u8, 0xd6_u8, 0x23_u8, 0xfe_u8, 0xd_u8, 0xf1_u8, 0x4_u8])
    def query_interface(this : ID3D11ShaderTrace*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11ShaderTrace*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11ShaderTrace*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def trace_ready(this : ID3D11ShaderTrace*, pTestCount : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.trace_ready.call(this, pTestCount)
    end
    def reset_trace(this : ID3D11ShaderTrace*) : Void
      @lpVtbl.try &.value.reset_trace.call(this)
    end
    def get_trace_stats(this : ID3D11ShaderTrace*, pTraceStats : Win32cr::Graphics::Direct3D11::D3D11_TRACE_STATS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_trace_stats.call(this, pTraceStats)
    end
    def ps_select_stamp(this : ID3D11ShaderTrace*, stampIndex : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ps_select_stamp.call(this, stampIndex)
    end
    def get_initial_register_contents(this : ID3D11ShaderTrace*, pRegister : Win32cr::Graphics::Direct3D11::D3D11_TRACE_REGISTER*, pValue : Win32cr::Graphics::Direct3D11::D3D11_TRACE_VALUE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_initial_register_contents.call(this, pRegister, pValue)
    end
    def get_step(this : ID3D11ShaderTrace*, stepIndex : UInt32, pTraceStep : Win32cr::Graphics::Direct3D11::D3D11_TRACE_STEP*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_step.call(this, stepIndex, pTraceStep)
    end
    def get_written_register(this : ID3D11ShaderTrace*, stepIndex : UInt32, writtenRegisterIndex : UInt32, pRegister : Win32cr::Graphics::Direct3D11::D3D11_TRACE_REGISTER*, pValue : Win32cr::Graphics::Direct3D11::D3D11_TRACE_VALUE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_written_register.call(this, stepIndex, writtenRegisterIndex, pRegister, pValue)
    end
    def get_read_register(this : ID3D11ShaderTrace*, stepIndex : UInt32, readRegisterIndex : UInt32, pRegister : Win32cr::Graphics::Direct3D11::D3D11_TRACE_REGISTER*, pValue : Win32cr::Graphics::Direct3D11::D3D11_TRACE_VALUE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_read_register.call(this, stepIndex, readRegisterIndex, pRegister, pValue)
    end

  end

  @[Extern]
  record ID3D11ShaderTraceFactoryVtbl,
    query_interface : Proc(ID3D11ShaderTraceFactory*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3D11ShaderTraceFactory*, UInt32),
    release : Proc(ID3D11ShaderTraceFactory*, UInt32),
    create_shader_trace : Proc(ID3D11ShaderTraceFactory*, Void*, Win32cr::Graphics::Direct3D11::D3D11_SHADER_TRACE_DESC*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3D11ShaderTraceFactory, lpVtbl : ID3D11ShaderTraceFactoryVtbl* do
    GUID = LibC::GUID.new(0x1fbad429_u32, 0x66ab_u16, 0x41cc_u16, StaticArray[0x96_u8, 0x17_u8, 0x66_u8, 0x7a_u8, 0xc1_u8, 0xe_u8, 0x44_u8, 0x59_u8])
    def query_interface(this : ID3D11ShaderTraceFactory*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3D11ShaderTraceFactory*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3D11ShaderTraceFactory*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_shader_trace(this : ID3D11ShaderTraceFactory*, pShader : Void*, pTraceDesc : Win32cr::Graphics::Direct3D11::D3D11_SHADER_TRACE_DESC*, ppShaderTrace : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_shader_trace.call(this, pShader, pTraceDesc, ppShaderTrace)
    end

  end

  @[Extern]
  record ID3DX11ScanVtbl,
    query_interface : Proc(ID3DX11Scan*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3DX11Scan*, UInt32),
    release : Proc(ID3DX11Scan*, UInt32),
    set_scan_direction : Proc(ID3DX11Scan*, Win32cr::Graphics::Direct3D11::D3DX11_SCAN_DIRECTION, Win32cr::Foundation::HRESULT),
    scan : Proc(ID3DX11Scan*, Win32cr::Graphics::Direct3D11::D3DX11_SCAN_DATA_TYPE, Win32cr::Graphics::Direct3D11::D3DX11_SCAN_OPCODE, UInt32, Void*, Void*, Win32cr::Foundation::HRESULT),
    multiscan : Proc(ID3DX11Scan*, Win32cr::Graphics::Direct3D11::D3DX11_SCAN_DATA_TYPE, Win32cr::Graphics::Direct3D11::D3DX11_SCAN_OPCODE, UInt32, UInt32, UInt32, Void*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3DX11Scan, lpVtbl : ID3DX11ScanVtbl* do
    GUID = LibC::GUID.new(0x5089b68f_u32, 0xe71d_u16, 0x4d38_u16, StaticArray[0xbe_u8, 0x8e_u8, 0xf3_u8, 0x63_u8, 0xb9_u8, 0x5a_u8, 0x94_u8, 0x5_u8])
    def query_interface(this : ID3DX11Scan*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3DX11Scan*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3DX11Scan*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_scan_direction(this : ID3DX11Scan*, direction : Win32cr::Graphics::Direct3D11::D3DX11_SCAN_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_scan_direction.call(this, direction)
    end
    def scan(this : ID3DX11Scan*, element_type : Win32cr::Graphics::Direct3D11::D3DX11_SCAN_DATA_TYPE, op_code : Win32cr::Graphics::Direct3D11::D3DX11_SCAN_OPCODE, element_scan_size : UInt32, pSrc : Void*, pDst : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.scan.call(this, element_type, op_code, element_scan_size, pSrc, pDst)
    end
    def multiscan(this : ID3DX11Scan*, element_type : Win32cr::Graphics::Direct3D11::D3DX11_SCAN_DATA_TYPE, op_code : Win32cr::Graphics::Direct3D11::D3DX11_SCAN_OPCODE, element_scan_size : UInt32, element_scan_pitch : UInt32, scan_count : UInt32, pSrc : Void*, pDst : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.multiscan.call(this, element_type, op_code, element_scan_size, element_scan_pitch, scan_count, pSrc, pDst)
    end

  end

  @[Extern]
  record ID3DX11SegmentedScanVtbl,
    query_interface : Proc(ID3DX11SegmentedScan*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3DX11SegmentedScan*, UInt32),
    release : Proc(ID3DX11SegmentedScan*, UInt32),
    set_scan_direction : Proc(ID3DX11SegmentedScan*, Win32cr::Graphics::Direct3D11::D3DX11_SCAN_DIRECTION, Win32cr::Foundation::HRESULT),
    seg_scan : Proc(ID3DX11SegmentedScan*, Win32cr::Graphics::Direct3D11::D3DX11_SCAN_DATA_TYPE, Win32cr::Graphics::Direct3D11::D3DX11_SCAN_OPCODE, UInt32, Void*, Void*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3DX11SegmentedScan, lpVtbl : ID3DX11SegmentedScanVtbl* do
    GUID = LibC::GUID.new(0xa915128c_u32, 0xd954_u16, 0x4c79_u16, StaticArray[0xbf_u8, 0xe1_u8, 0x64_u8, 0xdb_u8, 0x92_u8, 0x31_u8, 0x94_u8, 0xd6_u8])
    def query_interface(this : ID3DX11SegmentedScan*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3DX11SegmentedScan*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3DX11SegmentedScan*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_scan_direction(this : ID3DX11SegmentedScan*, direction : Win32cr::Graphics::Direct3D11::D3DX11_SCAN_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_scan_direction.call(this, direction)
    end
    def seg_scan(this : ID3DX11SegmentedScan*, element_type : Win32cr::Graphics::Direct3D11::D3DX11_SCAN_DATA_TYPE, op_code : Win32cr::Graphics::Direct3D11::D3DX11_SCAN_OPCODE, element_scan_size : UInt32, pSrc : Void*, pSrcElementFlags : Void*, pDst : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.seg_scan.call(this, element_type, op_code, element_scan_size, pSrc, pSrcElementFlags, pDst)
    end

  end

  @[Extern]
  record ID3DX11FFTVtbl,
    query_interface : Proc(ID3DX11FFT*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ID3DX11FFT*, UInt32),
    release : Proc(ID3DX11FFT*, UInt32),
    set_forward_scale : Proc(ID3DX11FFT*, Float32, Win32cr::Foundation::HRESULT),
    get_forward_scale : Proc(ID3DX11FFT*, Float32),
    set_inverse_scale : Proc(ID3DX11FFT*, Float32, Win32cr::Foundation::HRESULT),
    get_inverse_scale : Proc(ID3DX11FFT*, Float32),
    attach_buffers_and_precompute : Proc(ID3DX11FFT*, UInt32, Void**, UInt32, Void**, Win32cr::Foundation::HRESULT),
    forward_transform : Proc(ID3DX11FFT*, Void*, Void**, Win32cr::Foundation::HRESULT),
    inverse_transform : Proc(ID3DX11FFT*, Void*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ID3DX11FFT, lpVtbl : ID3DX11FFTVtbl* do
    GUID = LibC::GUID.new(0xb3f7a938_u32, 0x4c93_u16, 0x4310_u16, StaticArray[0xa6_u8, 0x75_u8, 0xb3_u8, 0xd_u8, 0x6d_u8, 0xe5_u8, 0x5_u8, 0x53_u8])
    def query_interface(this : ID3DX11FFT*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ID3DX11FFT*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ID3DX11FFT*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_forward_scale(this : ID3DX11FFT*, forward_scale : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_forward_scale.call(this, forward_scale)
    end
    def get_forward_scale(this : ID3DX11FFT*) : Float32
      @lpVtbl.try &.value.get_forward_scale.call(this)
    end
    def set_inverse_scale(this : ID3DX11FFT*, inverse_scale : Float32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_inverse_scale.call(this, inverse_scale)
    end
    def get_inverse_scale(this : ID3DX11FFT*) : Float32
      @lpVtbl.try &.value.get_inverse_scale.call(this)
    end
    def attach_buffers_and_precompute(this : ID3DX11FFT*, num_temp_buffers : UInt32, ppTempBuffers : Void**, num_precompute_buffers : UInt32, ppPrecomputeBufferSizes : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.attach_buffers_and_precompute.call(this, num_temp_buffers, ppTempBuffers, num_precompute_buffers, ppPrecomputeBufferSizes)
    end
    def forward_transform(this : ID3DX11FFT*, pInputBuffer : Void*, ppOutputBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.forward_transform.call(this, pInputBuffer, ppOutputBuffer)
    end
    def inverse_transform(this : ID3DX11FFT*, pInputBuffer : Void*, ppOutputBuffer : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.inverse_transform.call(this, pInputBuffer, ppOutputBuffer)
    end

  end

  @[Link("d3d11")]
  @[Link("d3dcompiler_47")]
  @[Link("d3dcsx")]
  lib C
    fun D3D11CreateDevice(pAdapter : Void*, driver_type : Win32cr::Graphics::Direct3D::D3D_DRIVER_TYPE, software : Win32cr::Foundation::HINSTANCE, flags : Win32cr::Graphics::Direct3D11::D3D11_CREATE_DEVICE_FLAG, pFeatureLevels : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, feature_levels : UInt32, sdk_version : UInt32, ppDevice : Void**, pFeatureLevel : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, ppImmediateContext : Void**) : Win32cr::Foundation::HRESULT

    fun D3D11CreateDeviceAndSwapChain(pAdapter : Void*, driver_type : Win32cr::Graphics::Direct3D::D3D_DRIVER_TYPE, software : Win32cr::Foundation::HINSTANCE, flags : Win32cr::Graphics::Direct3D11::D3D11_CREATE_DEVICE_FLAG, pFeatureLevels : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, feature_levels : UInt32, sdk_version : UInt32, pSwapChainDesc : Win32cr::Graphics::Dxgi::DXGI_SWAP_CHAIN_DESC*, ppSwapChain : Void**, ppDevice : Void**, pFeatureLevel : Win32cr::Graphics::Direct3D::D3D_FEATURE_LEVEL*, ppImmediateContext : Void**) : Win32cr::Foundation::HRESULT

    fun D3DDisassemble11Trace(pSrcData : Void*, src_data_size : LibC::UIntPtrT, pTrace : Void*, start_step : UInt32, num_steps : UInt32, flags : UInt32, ppDisassembly : Void**) : Win32cr::Foundation::HRESULT

    fun D3DX11CreateScan(pDeviceContext : Void*, max_element_scan_size : UInt32, max_scan_count : UInt32, ppScan : Void**) : Win32cr::Foundation::HRESULT

    fun D3DX11CreateSegmentedScan(pDeviceContext : Void*, max_element_scan_size : UInt32, ppScan : Void**) : Win32cr::Foundation::HRESULT

    fun D3DX11CreateFFT(pDeviceContext : Void*, pDesc : Win32cr::Graphics::Direct3D11::D3DX11_FFT_DESC*, flags : UInt32, pBufferInfo : Win32cr::Graphics::Direct3D11::D3DX11_FFT_BUFFER_INFO*, ppFFT : Void**) : Win32cr::Foundation::HRESULT

    fun D3DX11CreateFFT1DReal(pDeviceContext : Void*, x : UInt32, flags : UInt32, pBufferInfo : Win32cr::Graphics::Direct3D11::D3DX11_FFT_BUFFER_INFO*, ppFFT : Void**) : Win32cr::Foundation::HRESULT

    fun D3DX11CreateFFT1DComplex(pDeviceContext : Void*, x : UInt32, flags : UInt32, pBufferInfo : Win32cr::Graphics::Direct3D11::D3DX11_FFT_BUFFER_INFO*, ppFFT : Void**) : Win32cr::Foundation::HRESULT

    fun D3DX11CreateFFT2DReal(pDeviceContext : Void*, x : UInt32, y : UInt32, flags : UInt32, pBufferInfo : Win32cr::Graphics::Direct3D11::D3DX11_FFT_BUFFER_INFO*, ppFFT : Void**) : Win32cr::Foundation::HRESULT

    fun D3DX11CreateFFT2DComplex(pDeviceContext : Void*, x : UInt32, y : UInt32, flags : UInt32, pBufferInfo : Win32cr::Graphics::Direct3D11::D3DX11_FFT_BUFFER_INFO*, ppFFT : Void**) : Win32cr::Foundation::HRESULT

    fun D3DX11CreateFFT3DReal(pDeviceContext : Void*, x : UInt32, y : UInt32, z : UInt32, flags : UInt32, pBufferInfo : Win32cr::Graphics::Direct3D11::D3DX11_FFT_BUFFER_INFO*, ppFFT : Void**) : Win32cr::Foundation::HRESULT

    fun D3DX11CreateFFT3DComplex(pDeviceContext : Void*, x : UInt32, y : UInt32, z : UInt32, flags : UInt32, pBufferInfo : Win32cr::Graphics::Direct3D11::D3DX11_FFT_BUFFER_INFO*, ppFFT : Void**) : Win32cr::Foundation::HRESULT

  end
end