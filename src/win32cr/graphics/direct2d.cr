require "../graphics/direct2d/common.cr"
require "../foundation.cr"
require "../system/com.cr"
require "../graphics/directwrite.cr"
require "../graphics/imaging.cr"
require "../graphics/gdi.cr"
require "../graphics/dxgi.cr"
require "../graphics/dxgi/common.cr"
require "../storage/xps/printing.cr"
require "../graphics/direct3d.cr"

{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link("delayimp")]
{% end %}
@[Link("user32")]
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/IGNORE:4199")]
{% end %}
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/DELAYLOAD:d2d1.dll")]
{% else %}
@[Link("d2d1")]
{% end %}
lib LibWin32
  D2D1_DEFAULT_FLATTENING_TOLERANCE = "0.25_f32"
  CLSID_D2D12DAffineTransform = "6aa97485-6354-4cfc-908c-e4a74f62c96c"
  CLSID_D2D13DPerspectiveTransform = "c2844d0b-3d86-46e7-85ba-526c9240f3fb"
  CLSID_D2D13DTransform = "e8467b04-ec61-4b8a-b5de-d4d73debea5a"
  CLSID_D2D1ArithmeticComposite = "fc151437-049a-4784-a24a-f1c4daf20987"
  CLSID_D2D1Atlas = "913e2be4-fdcf-4fe2-a5f0-2454f14ff408"
  CLSID_D2D1BitmapSource = "5fb6c24d-c6dd-4231-9404-50f4d5c3252d"
  CLSID_D2D1Blend = "81c5b77b-13f8-4cdd-ad20-c890547ac65d"
  CLSID_D2D1Border = "2a2d49c0-4acf-43c7-8c6a-7c4a27874d27"
  CLSID_D2D1Brightness = "8cea8d1e-77b0-4986-b3b9-2f0c0eae7887"
  CLSID_D2D1ColorManagement = "1a28524c-fdd6-4aa4-ae8f-837eb8267b37"
  CLSID_D2D1ColorMatrix = "921f03d6-641c-47df-852d-b4bb6153ae11"
  CLSID_D2D1Composite = "48fc9f51-f6ac-48f1-8b58-3b28ac46f76d"
  CLSID_D2D1ConvolveMatrix = "407f8c08-5533-4331-a341-23cc3877843e"
  CLSID_D2D1Crop = "e23f7110-0e9a-4324-af47-6a2c0c46f35b"
  CLSID_D2D1DirectionalBlur = "174319a6-58e9-49b2-bb63-caf2c811a3db"
  CLSID_D2D1DiscreteTransfer = "90866fcd-488e-454b-af06-e5041b66c36c"
  CLSID_D2D1DisplacementMap = "edc48364-0417-4111-9450-43845fa9f890"
  CLSID_D2D1DistantDiffuse = "3e7efd62-a32d-46d4-a83c-5278889ac954"
  CLSID_D2D1DistantSpecular = "428c1ee5-77b8-4450-8ab5-72219c21abda"
  CLSID_D2D1DpiCompensation = "6c26c5c7-34e0-46fc-9cfd-e5823706e228"
  CLSID_D2D1Flood = "61c23c20-ae69-4d8e-94cf-50078df638f2"
  CLSID_D2D1GammaTransfer = "409444c4-c419-41a0-b0c1-8cd0c0a18e42"
  CLSID_D2D1GaussianBlur = "1feb6d69-2fe6-4ac9-8c58-1d7f93e7a6a5"
  CLSID_D2D1Scale = "9daf9369-3846-4d0e-a44e-0c607934a5d7"
  CLSID_D2D1Histogram = "881db7d0-f7ee-4d4d-a6d2-4697acc66ee8"
  CLSID_D2D1HueRotation = "0f4458ec-4b32-491b-9e85-bd73f44d3eb6"
  CLSID_D2D1LinearTransfer = "ad47c8fd-63ef-4acc-9b51-67979c036c06"
  CLSID_D2D1LuminanceToAlpha = "41251ab7-0beb-46f8-9da7-59e93fcce5de"
  CLSID_D2D1Morphology = "eae6c40d-626a-4c2d-bfcb-391001abe202"
  CLSID_D2D1OpacityMetadata = "6c53006a-4450-4199-aa5b-ad1656fece5e"
  CLSID_D2D1PointDiffuse = "b9e303c3-c08c-4f91-8b7b-38656bc48c20"
  CLSID_D2D1PointSpecular = "09c3ca26-3ae2-4f09-9ebc-ed3865d53f22"
  CLSID_D2D1Premultiply = "06eab419-deed-4018-80d2-3e1d471adeb2"
  CLSID_D2D1Saturation = "5cb2d9cf-327d-459f-a0ce-40c0b2086bf7"
  CLSID_D2D1Shadow = "c67ea361-1863-4e69-89db-695d3e9a5b6b"
  CLSID_D2D1SpotDiffuse = "818a1105-7932-44f4-aa86-08ae7b2f2c93"
  CLSID_D2D1SpotSpecular = "edae421e-7654-4a37-9db8-71acc1beb3c1"
  CLSID_D2D1TableTransfer = "5bf818c3-5e43-48cb-b631-868396d6a1d4"
  CLSID_D2D1Tile = "b0784138-3b76-4bc5-b13b-0fa2ad02659f"
  CLSID_D2D1Turbulence = "cf2bb6ae-889a-4ad7-ba29-a2fd732c9fc9"
  CLSID_D2D1UnPremultiply = "fb9ac489-ad8d-41ed-9999-bb6347d110f7"
  CLSID_D2D1YCbCr = "99503cc1-66c7-45c9-a875-8ad8a7914401"
  CLSID_D2D1Contrast = "b648a78a-0ed5-4f80-a94a-8e825aca6b77"
  CLSID_D2D1RgbToHue = "23f3e5ec-91e8-4d3d-ad0a-afadc1004aa1"
  CLSID_D2D1HueToRgb = "7b78a6bd-0141-4def-8a52-6356ee0cbdd5"
  CLSID_D2D1ChromaKey = "74c01f5b-2a0d-408c-88e2-c7a3c7197742"
  CLSID_D2D1Emboss = "b1c5eb2b-0348-43f0-8107-4957cacba2ae"
  CLSID_D2D1Exposure = "b56c8cfa-f634-41ee-bee0-ffa617106004"
  CLSID_D2D1Grayscale = "36dde0eb-3725-42e0-836d-52fb20aee644"
  CLSID_D2D1Invert = "e0c3784d-cb39-4e84-b6fd-6b72f0810263"
  CLSID_D2D1Posterize = "2188945e-33a3-4366-b7bc-086bd02d0884"
  CLSID_D2D1Sepia = "3a1af410-5f1d-4dbe-84df-915da79b7153"
  CLSID_D2D1Sharpen = "c9b887cb-c5ff-4dc5-9779-273dcf417c7d"
  CLSID_D2D1Straighten = "4da47b12-79a3-4fb0-8237-bbc3b2a4de08"
  CLSID_D2D1TemperatureTint = "89176087-8af9-4a08-aeb1-895f38db1766"
  CLSID_D2D1Vignette = "c00c40be-5e67-4ca3-95b4-f4b02c115135"
  CLSID_D2D1EdgeDetection = "eff583ca-cb07-4aa9-ac5d-2cc44c76460f"
  CLSID_D2D1HighlightsShadows = "cadc8384-323f-4c7e-a361-2e2b24df6ee4"
  CLSID_D2D1LookupTable3D = "349e0eda-0088-4a79-9ca3-c7e300202020"
  CLSID_D2D1Opacity = "811d79a4-de28-4454-8094-c64685f8bd4c"
  CLSID_D2D1AlphaMask = "c80ecff0-3fd5-4f05-8328-c5d1724b4f0a"
  CLSID_D2D1CrossFade = "12f575e8-4db1-485f-9a84-03a07dd3829f"
  CLSID_D2D1Tint = "36312b17-f7dd-4014-915d-ffca768cf211"
  D2D1_SCENE_REFERRED_SDR_WHITE_LEVEL = "80.0_f32"
  CLSID_D2D1WhiteLevelAdjustment = "44a1cadb-6cdd-4818-8ff4-26c1cfe95bdb"
  CLSID_D2D1HdrToneMap = "7b0b748d-4610-4486-a90c-999d9a2e2b11"
  D2D1_APPEND_ALIGNED_ELEMENT = 4294967295_u32
  FACILITY_D2D = 2201_u32

  alias PD2D1_EFFECT_FACTORY = Proc(IUnknown*, HRESULT)
  alias PD2D1_PROPERTY_SET_FUNCTION = Proc(IUnknown, UInt8*, UInt32, HRESULT)
  alias PD2D1_PROPERTY_GET_FUNCTION = Proc(IUnknown, UInt8*, UInt32, UInt32*, HRESULT)


  enum D2D1_INTERPOLATION_MODE_DEFINITION : Int32
    D2D1_INTERPOLATION_MODE_DEFINITION_NEAREST_NEIGHBOR = 0
    D2D1_INTERPOLATION_MODE_DEFINITION_LINEAR = 1
    D2D1_INTERPOLATION_MODE_DEFINITION_CUBIC = 2
    D2D1_INTERPOLATION_MODE_DEFINITION_MULTI_SAMPLE_LINEAR = 3
    D2D1_INTERPOLATION_MODE_DEFINITION_ANISOTROPIC = 4
    D2D1_INTERPOLATION_MODE_DEFINITION_HIGH_QUALITY_CUBIC = 5
    D2D1_INTERPOLATION_MODE_DEFINITION_FANT = 6
    D2D1_INTERPOLATION_MODE_DEFINITION_MIPMAP_LINEAR = 7
  end

  enum D2D1_GAMMA : UInt32
    D2D1_GAMMA_2_2 = 0
    D2D1_GAMMA_1_0 = 1
    D2D1_GAMMA_FORCE_DWORD = 4294967295
  end

  enum D2D1_OPACITY_MASK_CONTENT : UInt32
    D2D1_OPACITY_MASK_CONTENT_GRAPHICS = 0
    D2D1_OPACITY_MASK_CONTENT_TEXT_NATURAL = 1
    D2D1_OPACITY_MASK_CONTENT_TEXT_GDI_COMPATIBLE = 2
    D2D1_OPACITY_MASK_CONTENT_FORCE_DWORD = 4294967295
  end

  enum D2D1_EXTEND_MODE : UInt32
    D2D1_EXTEND_MODE_CLAMP = 0
    D2D1_EXTEND_MODE_WRAP = 1
    D2D1_EXTEND_MODE_MIRROR = 2
    D2D1_EXTEND_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_ANTIALIAS_MODE : UInt32
    D2D1_ANTIALIAS_MODE_PER_PRIMITIVE = 0
    D2D1_ANTIALIAS_MODE_ALIASED = 1
    D2D1_ANTIALIAS_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_TEXT_ANTIALIAS_MODE : UInt32
    D2D1_TEXT_ANTIALIAS_MODE_DEFAULT = 0
    D2D1_TEXT_ANTIALIAS_MODE_CLEARTYPE = 1
    D2D1_TEXT_ANTIALIAS_MODE_GRAYSCALE = 2
    D2D1_TEXT_ANTIALIAS_MODE_ALIASED = 3
    D2D1_TEXT_ANTIALIAS_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_BITMAP_INTERPOLATION_MODE : UInt32
    D2D1_BITMAP_INTERPOLATION_MODE_NEAREST_NEIGHBOR = 0
    D2D1_BITMAP_INTERPOLATION_MODE_LINEAR = 1
    D2D1_BITMAP_INTERPOLATION_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_DRAW_TEXT_OPTIONS : UInt32
    D2D1_DRAW_TEXT_OPTIONS_NO_SNAP = 1
    D2D1_DRAW_TEXT_OPTIONS_CLIP = 2
    D2D1_DRAW_TEXT_OPTIONS_ENABLE_COLOR_FONT = 4
    D2D1_DRAW_TEXT_OPTIONS_DISABLE_COLOR_BITMAP_SNAPPING = 8
    D2D1_DRAW_TEXT_OPTIONS_NONE = 0
    D2D1_DRAW_TEXT_OPTIONS_FORCE_DWORD = 4294967295
  end

  enum D2D1_ARC_SIZE : UInt32
    D2D1_ARC_SIZE_SMALL = 0
    D2D1_ARC_SIZE_LARGE = 1
    D2D1_ARC_SIZE_FORCE_DWORD = 4294967295
  end

  enum D2D1_CAP_STYLE : UInt32
    D2D1_CAP_STYLE_FLAT = 0
    D2D1_CAP_STYLE_SQUARE = 1
    D2D1_CAP_STYLE_ROUND = 2
    D2D1_CAP_STYLE_TRIANGLE = 3
    D2D1_CAP_STYLE_FORCE_DWORD = 4294967295
  end

  enum D2D1_DASH_STYLE : UInt32
    D2D1_DASH_STYLE_SOLID = 0
    D2D1_DASH_STYLE_DASH = 1
    D2D1_DASH_STYLE_DOT = 2
    D2D1_DASH_STYLE_DASH_DOT = 3
    D2D1_DASH_STYLE_DASH_DOT_DOT = 4
    D2D1_DASH_STYLE_CUSTOM = 5
    D2D1_DASH_STYLE_FORCE_DWORD = 4294967295
  end

  enum D2D1_LINE_JOIN : UInt32
    D2D1_LINE_JOIN_MITER = 0
    D2D1_LINE_JOIN_BEVEL = 1
    D2D1_LINE_JOIN_ROUND = 2
    D2D1_LINE_JOIN_MITER_OR_BEVEL = 3
    D2D1_LINE_JOIN_FORCE_DWORD = 4294967295
  end

  enum D2D1_COMBINE_MODE : UInt32
    D2D1_COMBINE_MODE_UNION = 0
    D2D1_COMBINE_MODE_INTERSECT = 1
    D2D1_COMBINE_MODE_XOR = 2
    D2D1_COMBINE_MODE_EXCLUDE = 3
    D2D1_COMBINE_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_GEOMETRY_RELATION : UInt32
    D2D1_GEOMETRY_RELATION_UNKNOWN = 0
    D2D1_GEOMETRY_RELATION_DISJOINT = 1
    D2D1_GEOMETRY_RELATION_IS_CONTAINED = 2
    D2D1_GEOMETRY_RELATION_CONTAINS = 3
    D2D1_GEOMETRY_RELATION_OVERLAP = 4
    D2D1_GEOMETRY_RELATION_FORCE_DWORD = 4294967295
  end

  enum D2D1_GEOMETRY_SIMPLIFICATION_OPTION : UInt32
    D2D1_GEOMETRY_SIMPLIFICATION_OPTION_CUBICS_AND_LINES = 0
    D2D1_GEOMETRY_SIMPLIFICATION_OPTION_LINES = 1
    D2D1_GEOMETRY_SIMPLIFICATION_OPTION_FORCE_DWORD = 4294967295
  end

  enum D2D1_SWEEP_DIRECTION : UInt32
    D2D1_SWEEP_DIRECTION_COUNTER_CLOCKWISE = 0
    D2D1_SWEEP_DIRECTION_CLOCKWISE = 1
    D2D1_SWEEP_DIRECTION_FORCE_DWORD = 4294967295
  end

  enum D2D1_LAYER_OPTIONS : UInt32
    D2D1_LAYER_OPTIONS_NONE = 0
    D2D1_LAYER_OPTIONS_INITIALIZE_FOR_CLEARTYPE = 1
    D2D1_LAYER_OPTIONS_FORCE_DWORD = 4294967295
  end

  enum D2D1_WINDOW_STATE : UInt32
    D2D1_WINDOW_STATE_NONE = 0
    D2D1_WINDOW_STATE_OCCLUDED = 1
    D2D1_WINDOW_STATE_FORCE_DWORD = 4294967295
  end

  enum D2D1_RENDER_TARGET_TYPE : UInt32
    D2D1_RENDER_TARGET_TYPE_DEFAULT = 0
    D2D1_RENDER_TARGET_TYPE_SOFTWARE = 1
    D2D1_RENDER_TARGET_TYPE_HARDWARE = 2
    D2D1_RENDER_TARGET_TYPE_FORCE_DWORD = 4294967295
  end

  enum D2D1_FEATURE_LEVEL : UInt32
    D2D1_FEATURE_LEVEL_DEFAULT = 0
    D2D1_FEATURE_LEVEL_9 = 37120
    D2D1_FEATURE_LEVEL_10 = 40960
    D2D1_FEATURE_LEVEL_FORCE_DWORD = 4294967295
  end

  enum D2D1_RENDER_TARGET_USAGE : UInt32
    D2D1_RENDER_TARGET_USAGE_NONE = 0
    D2D1_RENDER_TARGET_USAGE_FORCE_BITMAP_REMOTING = 1
    D2D1_RENDER_TARGET_USAGE_GDI_COMPATIBLE = 2
    D2D1_RENDER_TARGET_USAGE_FORCE_DWORD = 4294967295
  end

  enum D2D1_PRESENT_OPTIONS : UInt32
    D2D1_PRESENT_OPTIONS_NONE = 0
    D2D1_PRESENT_OPTIONS_RETAIN_CONTENTS = 1
    D2D1_PRESENT_OPTIONS_IMMEDIATELY = 2
    D2D1_PRESENT_OPTIONS_FORCE_DWORD = 4294967295
  end

  enum D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS : UInt32
    D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS_NONE = 0
    D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS_GDI_COMPATIBLE = 1
    D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS_FORCE_DWORD = 4294967295
  end

  enum D2D1_DC_INITIALIZE_MODE : UInt32
    D2D1_DC_INITIALIZE_MODE_COPY = 0
    D2D1_DC_INITIALIZE_MODE_CLEAR = 1
    D2D1_DC_INITIALIZE_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_DEBUG_LEVEL : UInt32
    D2D1_DEBUG_LEVEL_NONE = 0
    D2D1_DEBUG_LEVEL_ERROR = 1
    D2D1_DEBUG_LEVEL_WARNING = 2
    D2D1_DEBUG_LEVEL_INFORMATION = 3
    D2D1_DEBUG_LEVEL_FORCE_DWORD = 4294967295
  end

  enum D2D1_FACTORY_TYPE : UInt32
    D2D1_FACTORY_TYPE_SINGLE_THREADED = 0
    D2D1_FACTORY_TYPE_MULTI_THREADED = 1
    D2D1_FACTORY_TYPE_FORCE_DWORD = 4294967295
  end

  enum D2D1_CHANNEL_SELECTOR : UInt32
    D2D1_CHANNEL_SELECTOR_R = 0
    D2D1_CHANNEL_SELECTOR_G = 1
    D2D1_CHANNEL_SELECTOR_B = 2
    D2D1_CHANNEL_SELECTOR_A = 3
    D2D1_CHANNEL_SELECTOR_FORCE_DWORD = 4294967295
  end

  enum D2D1_BITMAPSOURCE_ORIENTATION : UInt32
    D2D1_BITMAPSOURCE_ORIENTATION_DEFAULT = 1
    D2D1_BITMAPSOURCE_ORIENTATION_FLIP_HORIZONTAL = 2
    D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE180 = 3
    D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE180_FLIP_HORIZONTAL = 4
    D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE270_FLIP_HORIZONTAL = 5
    D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE90 = 6
    D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE90_FLIP_HORIZONTAL = 7
    D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE270 = 8
    D2D1_BITMAPSOURCE_ORIENTATION_FORCE_DWORD = 4294967295
  end

  enum D2D1_GAUSSIANBLUR_PROP : UInt32
    D2D1_GAUSSIANBLUR_PROP_STANDARD_DEVIATION = 0
    D2D1_GAUSSIANBLUR_PROP_OPTIMIZATION = 1
    D2D1_GAUSSIANBLUR_PROP_BORDER_MODE = 2
    D2D1_GAUSSIANBLUR_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_GAUSSIANBLUR_OPTIMIZATION : UInt32
    D2D1_GAUSSIANBLUR_OPTIMIZATION_SPEED = 0
    D2D1_GAUSSIANBLUR_OPTIMIZATION_BALANCED = 1
    D2D1_GAUSSIANBLUR_OPTIMIZATION_QUALITY = 2
    D2D1_GAUSSIANBLUR_OPTIMIZATION_FORCE_DWORD = 4294967295
  end

  enum D2D1_DIRECTIONALBLUR_PROP : UInt32
    D2D1_DIRECTIONALBLUR_PROP_STANDARD_DEVIATION = 0
    D2D1_DIRECTIONALBLUR_PROP_ANGLE = 1
    D2D1_DIRECTIONALBLUR_PROP_OPTIMIZATION = 2
    D2D1_DIRECTIONALBLUR_PROP_BORDER_MODE = 3
    D2D1_DIRECTIONALBLUR_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_DIRECTIONALBLUR_OPTIMIZATION : UInt32
    D2D1_DIRECTIONALBLUR_OPTIMIZATION_SPEED = 0
    D2D1_DIRECTIONALBLUR_OPTIMIZATION_BALANCED = 1
    D2D1_DIRECTIONALBLUR_OPTIMIZATION_QUALITY = 2
    D2D1_DIRECTIONALBLUR_OPTIMIZATION_FORCE_DWORD = 4294967295
  end

  enum D2D1_SHADOW_PROP : UInt32
    D2D1_SHADOW_PROP_BLUR_STANDARD_DEVIATION = 0
    D2D1_SHADOW_PROP_COLOR = 1
    D2D1_SHADOW_PROP_OPTIMIZATION = 2
    D2D1_SHADOW_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_SHADOW_OPTIMIZATION : UInt32
    D2D1_SHADOW_OPTIMIZATION_SPEED = 0
    D2D1_SHADOW_OPTIMIZATION_BALANCED = 1
    D2D1_SHADOW_OPTIMIZATION_QUALITY = 2
    D2D1_SHADOW_OPTIMIZATION_FORCE_DWORD = 4294967295
  end

  enum D2D1_BLEND_PROP : UInt32
    D2D1_BLEND_PROP_MODE = 0
    D2D1_BLEND_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_SATURATION_PROP : UInt32
    D2D1_SATURATION_PROP_SATURATION = 0
    D2D1_SATURATION_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_HUEROTATION_PROP : UInt32
    D2D1_HUEROTATION_PROP_ANGLE = 0
    D2D1_HUEROTATION_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_COLORMATRIX_PROP : UInt32
    D2D1_COLORMATRIX_PROP_COLOR_MATRIX = 0
    D2D1_COLORMATRIX_PROP_ALPHA_MODE = 1
    D2D1_COLORMATRIX_PROP_CLAMP_OUTPUT = 2
    D2D1_COLORMATRIX_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_BITMAPSOURCE_PROP : UInt32
    D2D1_BITMAPSOURCE_PROP_WIC_BITMAP_SOURCE = 0
    D2D1_BITMAPSOURCE_PROP_SCALE = 1
    D2D1_BITMAPSOURCE_PROP_INTERPOLATION_MODE = 2
    D2D1_BITMAPSOURCE_PROP_ENABLE_DPI_CORRECTION = 3
    D2D1_BITMAPSOURCE_PROP_ALPHA_MODE = 4
    D2D1_BITMAPSOURCE_PROP_ORIENTATION = 5
    D2D1_BITMAPSOURCE_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_BITMAPSOURCE_INTERPOLATION_MODE : UInt32
    D2D1_BITMAPSOURCE_INTERPOLATION_MODE_NEAREST_NEIGHBOR = 0
    D2D1_BITMAPSOURCE_INTERPOLATION_MODE_LINEAR = 1
    D2D1_BITMAPSOURCE_INTERPOLATION_MODE_CUBIC = 2
    D2D1_BITMAPSOURCE_INTERPOLATION_MODE_FANT = 6
    D2D1_BITMAPSOURCE_INTERPOLATION_MODE_MIPMAP_LINEAR = 7
    D2D1_BITMAPSOURCE_INTERPOLATION_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_BITMAPSOURCE_ALPHA_MODE : UInt32
    D2D1_BITMAPSOURCE_ALPHA_MODE_PREMULTIPLIED = 1
    D2D1_BITMAPSOURCE_ALPHA_MODE_STRAIGHT = 2
    D2D1_BITMAPSOURCE_ALPHA_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_COMPOSITE_PROP : UInt32
    D2D1_COMPOSITE_PROP_MODE = 0
    D2D1_COMPOSITE_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_3DTRANSFORM_PROP : UInt32
    D2D1_3DTRANSFORM_PROP_INTERPOLATION_MODE = 0
    D2D1_3DTRANSFORM_PROP_BORDER_MODE = 1
    D2D1_3DTRANSFORM_PROP_TRANSFORM_MATRIX = 2
    D2D1_3DTRANSFORM_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_3DTRANSFORM_INTERPOLATION_MODE : UInt32
    D2D1_3DTRANSFORM_INTERPOLATION_MODE_NEAREST_NEIGHBOR = 0
    D2D1_3DTRANSFORM_INTERPOLATION_MODE_LINEAR = 1
    D2D1_3DTRANSFORM_INTERPOLATION_MODE_CUBIC = 2
    D2D1_3DTRANSFORM_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR = 3
    D2D1_3DTRANSFORM_INTERPOLATION_MODE_ANISOTROPIC = 4
    D2D1_3DTRANSFORM_INTERPOLATION_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_3DPERSPECTIVETRANSFORM_PROP : UInt32
    D2D1_3DPERSPECTIVETRANSFORM_PROP_INTERPOLATION_MODE = 0
    D2D1_3DPERSPECTIVETRANSFORM_PROP_BORDER_MODE = 1
    D2D1_3DPERSPECTIVETRANSFORM_PROP_DEPTH = 2
    D2D1_3DPERSPECTIVETRANSFORM_PROP_PERSPECTIVE_ORIGIN = 3
    D2D1_3DPERSPECTIVETRANSFORM_PROP_LOCAL_OFFSET = 4
    D2D1_3DPERSPECTIVETRANSFORM_PROP_GLOBAL_OFFSET = 5
    D2D1_3DPERSPECTIVETRANSFORM_PROP_ROTATION_ORIGIN = 6
    D2D1_3DPERSPECTIVETRANSFORM_PROP_ROTATION = 7
    D2D1_3DPERSPECTIVETRANSFORM_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE : UInt32
    D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_NEAREST_NEIGHBOR = 0
    D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_LINEAR = 1
    D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_CUBIC = 2
    D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR = 3
    D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_ANISOTROPIC = 4
    D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_2DAFFINETRANSFORM_PROP : UInt32
    D2D1_2DAFFINETRANSFORM_PROP_INTERPOLATION_MODE = 0
    D2D1_2DAFFINETRANSFORM_PROP_BORDER_MODE = 1
    D2D1_2DAFFINETRANSFORM_PROP_TRANSFORM_MATRIX = 2
    D2D1_2DAFFINETRANSFORM_PROP_SHARPNESS = 3
    D2D1_2DAFFINETRANSFORM_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_DPICOMPENSATION_PROP : UInt32
    D2D1_DPICOMPENSATION_PROP_INTERPOLATION_MODE = 0
    D2D1_DPICOMPENSATION_PROP_BORDER_MODE = 1
    D2D1_DPICOMPENSATION_PROP_INPUT_DPI = 2
    D2D1_DPICOMPENSATION_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_DPICOMPENSATION_INTERPOLATION_MODE : UInt32
    D2D1_DPICOMPENSATION_INTERPOLATION_MODE_NEAREST_NEIGHBOR = 0
    D2D1_DPICOMPENSATION_INTERPOLATION_MODE_LINEAR = 1
    D2D1_DPICOMPENSATION_INTERPOLATION_MODE_CUBIC = 2
    D2D1_DPICOMPENSATION_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR = 3
    D2D1_DPICOMPENSATION_INTERPOLATION_MODE_ANISOTROPIC = 4
    D2D1_DPICOMPENSATION_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC = 5
    D2D1_DPICOMPENSATION_INTERPOLATION_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_SCALE_PROP : UInt32
    D2D1_SCALE_PROP_SCALE = 0
    D2D1_SCALE_PROP_CENTER_POINT = 1
    D2D1_SCALE_PROP_INTERPOLATION_MODE = 2
    D2D1_SCALE_PROP_BORDER_MODE = 3
    D2D1_SCALE_PROP_SHARPNESS = 4
    D2D1_SCALE_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_SCALE_INTERPOLATION_MODE : UInt32
    D2D1_SCALE_INTERPOLATION_MODE_NEAREST_NEIGHBOR = 0
    D2D1_SCALE_INTERPOLATION_MODE_LINEAR = 1
    D2D1_SCALE_INTERPOLATION_MODE_CUBIC = 2
    D2D1_SCALE_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR = 3
    D2D1_SCALE_INTERPOLATION_MODE_ANISOTROPIC = 4
    D2D1_SCALE_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC = 5
    D2D1_SCALE_INTERPOLATION_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_TURBULENCE_PROP : UInt32
    D2D1_TURBULENCE_PROP_OFFSET = 0
    D2D1_TURBULENCE_PROP_SIZE = 1
    D2D1_TURBULENCE_PROP_BASE_FREQUENCY = 2
    D2D1_TURBULENCE_PROP_NUM_OCTAVES = 3
    D2D1_TURBULENCE_PROP_SEED = 4
    D2D1_TURBULENCE_PROP_NOISE = 5
    D2D1_TURBULENCE_PROP_STITCHABLE = 6
    D2D1_TURBULENCE_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_DISPLACEMENTMAP_PROP : UInt32
    D2D1_DISPLACEMENTMAP_PROP_SCALE = 0
    D2D1_DISPLACEMENTMAP_PROP_X_CHANNEL_SELECT = 1
    D2D1_DISPLACEMENTMAP_PROP_Y_CHANNEL_SELECT = 2
    D2D1_DISPLACEMENTMAP_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_COLORMANAGEMENT_PROP : UInt32
    D2D1_COLORMANAGEMENT_PROP_SOURCE_COLOR_CONTEXT = 0
    D2D1_COLORMANAGEMENT_PROP_SOURCE_RENDERING_INTENT = 1
    D2D1_COLORMANAGEMENT_PROP_DESTINATION_COLOR_CONTEXT = 2
    D2D1_COLORMANAGEMENT_PROP_DESTINATION_RENDERING_INTENT = 3
    D2D1_COLORMANAGEMENT_PROP_ALPHA_MODE = 4
    D2D1_COLORMANAGEMENT_PROP_QUALITY = 5
    D2D1_COLORMANAGEMENT_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_COLORMANAGEMENT_ALPHA_MODE : UInt32
    D2D1_COLORMANAGEMENT_ALPHA_MODE_PREMULTIPLIED = 1
    D2D1_COLORMANAGEMENT_ALPHA_MODE_STRAIGHT = 2
    D2D1_COLORMANAGEMENT_ALPHA_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_COLORMANAGEMENT_QUALITY : UInt32
    D2D1_COLORMANAGEMENT_QUALITY_PROOF = 0
    D2D1_COLORMANAGEMENT_QUALITY_NORMAL = 1
    D2D1_COLORMANAGEMENT_QUALITY_BEST = 2
    D2D1_COLORMANAGEMENT_QUALITY_FORCE_DWORD = 4294967295
  end

  enum D2D1_COLORMANAGEMENT_RENDERING_INTENT : UInt32
    D2D1_COLORMANAGEMENT_RENDERING_INTENT_PERCEPTUAL = 0
    D2D1_COLORMANAGEMENT_RENDERING_INTENT_RELATIVE_COLORIMETRIC = 1
    D2D1_COLORMANAGEMENT_RENDERING_INTENT_SATURATION = 2
    D2D1_COLORMANAGEMENT_RENDERING_INTENT_ABSOLUTE_COLORIMETRIC = 3
    D2D1_COLORMANAGEMENT_RENDERING_INTENT_FORCE_DWORD = 4294967295
  end

  enum D2D1_HISTOGRAM_PROP : UInt32
    D2D1_HISTOGRAM_PROP_NUM_BINS = 0
    D2D1_HISTOGRAM_PROP_CHANNEL_SELECT = 1
    D2D1_HISTOGRAM_PROP_HISTOGRAM_OUTPUT = 2
    D2D1_HISTOGRAM_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_POINTSPECULAR_PROP : UInt32
    D2D1_POINTSPECULAR_PROP_LIGHT_POSITION = 0
    D2D1_POINTSPECULAR_PROP_SPECULAR_EXPONENT = 1
    D2D1_POINTSPECULAR_PROP_SPECULAR_CONSTANT = 2
    D2D1_POINTSPECULAR_PROP_SURFACE_SCALE = 3
    D2D1_POINTSPECULAR_PROP_COLOR = 4
    D2D1_POINTSPECULAR_PROP_KERNEL_UNIT_LENGTH = 5
    D2D1_POINTSPECULAR_PROP_SCALE_MODE = 6
    D2D1_POINTSPECULAR_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_POINTSPECULAR_SCALE_MODE : UInt32
    D2D1_POINTSPECULAR_SCALE_MODE_NEAREST_NEIGHBOR = 0
    D2D1_POINTSPECULAR_SCALE_MODE_LINEAR = 1
    D2D1_POINTSPECULAR_SCALE_MODE_CUBIC = 2
    D2D1_POINTSPECULAR_SCALE_MODE_MULTI_SAMPLE_LINEAR = 3
    D2D1_POINTSPECULAR_SCALE_MODE_ANISOTROPIC = 4
    D2D1_POINTSPECULAR_SCALE_MODE_HIGH_QUALITY_CUBIC = 5
    D2D1_POINTSPECULAR_SCALE_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_SPOTSPECULAR_PROP : UInt32
    D2D1_SPOTSPECULAR_PROP_LIGHT_POSITION = 0
    D2D1_SPOTSPECULAR_PROP_POINTS_AT = 1
    D2D1_SPOTSPECULAR_PROP_FOCUS = 2
    D2D1_SPOTSPECULAR_PROP_LIMITING_CONE_ANGLE = 3
    D2D1_SPOTSPECULAR_PROP_SPECULAR_EXPONENT = 4
    D2D1_SPOTSPECULAR_PROP_SPECULAR_CONSTANT = 5
    D2D1_SPOTSPECULAR_PROP_SURFACE_SCALE = 6
    D2D1_SPOTSPECULAR_PROP_COLOR = 7
    D2D1_SPOTSPECULAR_PROP_KERNEL_UNIT_LENGTH = 8
    D2D1_SPOTSPECULAR_PROP_SCALE_MODE = 9
    D2D1_SPOTSPECULAR_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_SPOTSPECULAR_SCALE_MODE : UInt32
    D2D1_SPOTSPECULAR_SCALE_MODE_NEAREST_NEIGHBOR = 0
    D2D1_SPOTSPECULAR_SCALE_MODE_LINEAR = 1
    D2D1_SPOTSPECULAR_SCALE_MODE_CUBIC = 2
    D2D1_SPOTSPECULAR_SCALE_MODE_MULTI_SAMPLE_LINEAR = 3
    D2D1_SPOTSPECULAR_SCALE_MODE_ANISOTROPIC = 4
    D2D1_SPOTSPECULAR_SCALE_MODE_HIGH_QUALITY_CUBIC = 5
    D2D1_SPOTSPECULAR_SCALE_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_DISTANTSPECULAR_PROP : UInt32
    D2D1_DISTANTSPECULAR_PROP_AZIMUTH = 0
    D2D1_DISTANTSPECULAR_PROP_ELEVATION = 1
    D2D1_DISTANTSPECULAR_PROP_SPECULAR_EXPONENT = 2
    D2D1_DISTANTSPECULAR_PROP_SPECULAR_CONSTANT = 3
    D2D1_DISTANTSPECULAR_PROP_SURFACE_SCALE = 4
    D2D1_DISTANTSPECULAR_PROP_COLOR = 5
    D2D1_DISTANTSPECULAR_PROP_KERNEL_UNIT_LENGTH = 6
    D2D1_DISTANTSPECULAR_PROP_SCALE_MODE = 7
    D2D1_DISTANTSPECULAR_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_DISTANTSPECULAR_SCALE_MODE : UInt32
    D2D1_DISTANTSPECULAR_SCALE_MODE_NEAREST_NEIGHBOR = 0
    D2D1_DISTANTSPECULAR_SCALE_MODE_LINEAR = 1
    D2D1_DISTANTSPECULAR_SCALE_MODE_CUBIC = 2
    D2D1_DISTANTSPECULAR_SCALE_MODE_MULTI_SAMPLE_LINEAR = 3
    D2D1_DISTANTSPECULAR_SCALE_MODE_ANISOTROPIC = 4
    D2D1_DISTANTSPECULAR_SCALE_MODE_HIGH_QUALITY_CUBIC = 5
    D2D1_DISTANTSPECULAR_SCALE_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_POINTDIFFUSE_PROP : UInt32
    D2D1_POINTDIFFUSE_PROP_LIGHT_POSITION = 0
    D2D1_POINTDIFFUSE_PROP_DIFFUSE_CONSTANT = 1
    D2D1_POINTDIFFUSE_PROP_SURFACE_SCALE = 2
    D2D1_POINTDIFFUSE_PROP_COLOR = 3
    D2D1_POINTDIFFUSE_PROP_KERNEL_UNIT_LENGTH = 4
    D2D1_POINTDIFFUSE_PROP_SCALE_MODE = 5
    D2D1_POINTDIFFUSE_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_POINTDIFFUSE_SCALE_MODE : UInt32
    D2D1_POINTDIFFUSE_SCALE_MODE_NEAREST_NEIGHBOR = 0
    D2D1_POINTDIFFUSE_SCALE_MODE_LINEAR = 1
    D2D1_POINTDIFFUSE_SCALE_MODE_CUBIC = 2
    D2D1_POINTDIFFUSE_SCALE_MODE_MULTI_SAMPLE_LINEAR = 3
    D2D1_POINTDIFFUSE_SCALE_MODE_ANISOTROPIC = 4
    D2D1_POINTDIFFUSE_SCALE_MODE_HIGH_QUALITY_CUBIC = 5
    D2D1_POINTDIFFUSE_SCALE_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_SPOTDIFFUSE_PROP : UInt32
    D2D1_SPOTDIFFUSE_PROP_LIGHT_POSITION = 0
    D2D1_SPOTDIFFUSE_PROP_POINTS_AT = 1
    D2D1_SPOTDIFFUSE_PROP_FOCUS = 2
    D2D1_SPOTDIFFUSE_PROP_LIMITING_CONE_ANGLE = 3
    D2D1_SPOTDIFFUSE_PROP_DIFFUSE_CONSTANT = 4
    D2D1_SPOTDIFFUSE_PROP_SURFACE_SCALE = 5
    D2D1_SPOTDIFFUSE_PROP_COLOR = 6
    D2D1_SPOTDIFFUSE_PROP_KERNEL_UNIT_LENGTH = 7
    D2D1_SPOTDIFFUSE_PROP_SCALE_MODE = 8
    D2D1_SPOTDIFFUSE_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_SPOTDIFFUSE_SCALE_MODE : UInt32
    D2D1_SPOTDIFFUSE_SCALE_MODE_NEAREST_NEIGHBOR = 0
    D2D1_SPOTDIFFUSE_SCALE_MODE_LINEAR = 1
    D2D1_SPOTDIFFUSE_SCALE_MODE_CUBIC = 2
    D2D1_SPOTDIFFUSE_SCALE_MODE_MULTI_SAMPLE_LINEAR = 3
    D2D1_SPOTDIFFUSE_SCALE_MODE_ANISOTROPIC = 4
    D2D1_SPOTDIFFUSE_SCALE_MODE_HIGH_QUALITY_CUBIC = 5
    D2D1_SPOTDIFFUSE_SCALE_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_DISTANTDIFFUSE_PROP : UInt32
    D2D1_DISTANTDIFFUSE_PROP_AZIMUTH = 0
    D2D1_DISTANTDIFFUSE_PROP_ELEVATION = 1
    D2D1_DISTANTDIFFUSE_PROP_DIFFUSE_CONSTANT = 2
    D2D1_DISTANTDIFFUSE_PROP_SURFACE_SCALE = 3
    D2D1_DISTANTDIFFUSE_PROP_COLOR = 4
    D2D1_DISTANTDIFFUSE_PROP_KERNEL_UNIT_LENGTH = 5
    D2D1_DISTANTDIFFUSE_PROP_SCALE_MODE = 6
    D2D1_DISTANTDIFFUSE_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_DISTANTDIFFUSE_SCALE_MODE : UInt32
    D2D1_DISTANTDIFFUSE_SCALE_MODE_NEAREST_NEIGHBOR = 0
    D2D1_DISTANTDIFFUSE_SCALE_MODE_LINEAR = 1
    D2D1_DISTANTDIFFUSE_SCALE_MODE_CUBIC = 2
    D2D1_DISTANTDIFFUSE_SCALE_MODE_MULTI_SAMPLE_LINEAR = 3
    D2D1_DISTANTDIFFUSE_SCALE_MODE_ANISOTROPIC = 4
    D2D1_DISTANTDIFFUSE_SCALE_MODE_HIGH_QUALITY_CUBIC = 5
    D2D1_DISTANTDIFFUSE_SCALE_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_FLOOD_PROP : UInt32
    D2D1_FLOOD_PROP_COLOR = 0
    D2D1_FLOOD_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_LINEARTRANSFER_PROP : UInt32
    D2D1_LINEARTRANSFER_PROP_RED_Y_INTERCEPT = 0
    D2D1_LINEARTRANSFER_PROP_RED_SLOPE = 1
    D2D1_LINEARTRANSFER_PROP_RED_DISABLE = 2
    D2D1_LINEARTRANSFER_PROP_GREEN_Y_INTERCEPT = 3
    D2D1_LINEARTRANSFER_PROP_GREEN_SLOPE = 4
    D2D1_LINEARTRANSFER_PROP_GREEN_DISABLE = 5
    D2D1_LINEARTRANSFER_PROP_BLUE_Y_INTERCEPT = 6
    D2D1_LINEARTRANSFER_PROP_BLUE_SLOPE = 7
    D2D1_LINEARTRANSFER_PROP_BLUE_DISABLE = 8
    D2D1_LINEARTRANSFER_PROP_ALPHA_Y_INTERCEPT = 9
    D2D1_LINEARTRANSFER_PROP_ALPHA_SLOPE = 10
    D2D1_LINEARTRANSFER_PROP_ALPHA_DISABLE = 11
    D2D1_LINEARTRANSFER_PROP_CLAMP_OUTPUT = 12
    D2D1_LINEARTRANSFER_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_GAMMATRANSFER_PROP : UInt32
    D2D1_GAMMATRANSFER_PROP_RED_AMPLITUDE = 0
    D2D1_GAMMATRANSFER_PROP_RED_EXPONENT = 1
    D2D1_GAMMATRANSFER_PROP_RED_OFFSET = 2
    D2D1_GAMMATRANSFER_PROP_RED_DISABLE = 3
    D2D1_GAMMATRANSFER_PROP_GREEN_AMPLITUDE = 4
    D2D1_GAMMATRANSFER_PROP_GREEN_EXPONENT = 5
    D2D1_GAMMATRANSFER_PROP_GREEN_OFFSET = 6
    D2D1_GAMMATRANSFER_PROP_GREEN_DISABLE = 7
    D2D1_GAMMATRANSFER_PROP_BLUE_AMPLITUDE = 8
    D2D1_GAMMATRANSFER_PROP_BLUE_EXPONENT = 9
    D2D1_GAMMATRANSFER_PROP_BLUE_OFFSET = 10
    D2D1_GAMMATRANSFER_PROP_BLUE_DISABLE = 11
    D2D1_GAMMATRANSFER_PROP_ALPHA_AMPLITUDE = 12
    D2D1_GAMMATRANSFER_PROP_ALPHA_EXPONENT = 13
    D2D1_GAMMATRANSFER_PROP_ALPHA_OFFSET = 14
    D2D1_GAMMATRANSFER_PROP_ALPHA_DISABLE = 15
    D2D1_GAMMATRANSFER_PROP_CLAMP_OUTPUT = 16
    D2D1_GAMMATRANSFER_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_TABLETRANSFER_PROP : UInt32
    D2D1_TABLETRANSFER_PROP_RED_TABLE = 0
    D2D1_TABLETRANSFER_PROP_RED_DISABLE = 1
    D2D1_TABLETRANSFER_PROP_GREEN_TABLE = 2
    D2D1_TABLETRANSFER_PROP_GREEN_DISABLE = 3
    D2D1_TABLETRANSFER_PROP_BLUE_TABLE = 4
    D2D1_TABLETRANSFER_PROP_BLUE_DISABLE = 5
    D2D1_TABLETRANSFER_PROP_ALPHA_TABLE = 6
    D2D1_TABLETRANSFER_PROP_ALPHA_DISABLE = 7
    D2D1_TABLETRANSFER_PROP_CLAMP_OUTPUT = 8
    D2D1_TABLETRANSFER_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_DISCRETETRANSFER_PROP : UInt32
    D2D1_DISCRETETRANSFER_PROP_RED_TABLE = 0
    D2D1_DISCRETETRANSFER_PROP_RED_DISABLE = 1
    D2D1_DISCRETETRANSFER_PROP_GREEN_TABLE = 2
    D2D1_DISCRETETRANSFER_PROP_GREEN_DISABLE = 3
    D2D1_DISCRETETRANSFER_PROP_BLUE_TABLE = 4
    D2D1_DISCRETETRANSFER_PROP_BLUE_DISABLE = 5
    D2D1_DISCRETETRANSFER_PROP_ALPHA_TABLE = 6
    D2D1_DISCRETETRANSFER_PROP_ALPHA_DISABLE = 7
    D2D1_DISCRETETRANSFER_PROP_CLAMP_OUTPUT = 8
    D2D1_DISCRETETRANSFER_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_CONVOLVEMATRIX_PROP : UInt32
    D2D1_CONVOLVEMATRIX_PROP_KERNEL_UNIT_LENGTH = 0
    D2D1_CONVOLVEMATRIX_PROP_SCALE_MODE = 1
    D2D1_CONVOLVEMATRIX_PROP_KERNEL_SIZE_X = 2
    D2D1_CONVOLVEMATRIX_PROP_KERNEL_SIZE_Y = 3
    D2D1_CONVOLVEMATRIX_PROP_KERNEL_MATRIX = 4
    D2D1_CONVOLVEMATRIX_PROP_DIVISOR = 5
    D2D1_CONVOLVEMATRIX_PROP_BIAS = 6
    D2D1_CONVOLVEMATRIX_PROP_KERNEL_OFFSET = 7
    D2D1_CONVOLVEMATRIX_PROP_PRESERVE_ALPHA = 8
    D2D1_CONVOLVEMATRIX_PROP_BORDER_MODE = 9
    D2D1_CONVOLVEMATRIX_PROP_CLAMP_OUTPUT = 10
    D2D1_CONVOLVEMATRIX_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_CONVOLVEMATRIX_SCALE_MODE : UInt32
    D2D1_CONVOLVEMATRIX_SCALE_MODE_NEAREST_NEIGHBOR = 0
    D2D1_CONVOLVEMATRIX_SCALE_MODE_LINEAR = 1
    D2D1_CONVOLVEMATRIX_SCALE_MODE_CUBIC = 2
    D2D1_CONVOLVEMATRIX_SCALE_MODE_MULTI_SAMPLE_LINEAR = 3
    D2D1_CONVOLVEMATRIX_SCALE_MODE_ANISOTROPIC = 4
    D2D1_CONVOLVEMATRIX_SCALE_MODE_HIGH_QUALITY_CUBIC = 5
    D2D1_CONVOLVEMATRIX_SCALE_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_BRIGHTNESS_PROP : UInt32
    D2D1_BRIGHTNESS_PROP_WHITE_POINT = 0
    D2D1_BRIGHTNESS_PROP_BLACK_POINT = 1
    D2D1_BRIGHTNESS_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_ARITHMETICCOMPOSITE_PROP : UInt32
    D2D1_ARITHMETICCOMPOSITE_PROP_COEFFICIENTS = 0
    D2D1_ARITHMETICCOMPOSITE_PROP_CLAMP_OUTPUT = 1
    D2D1_ARITHMETICCOMPOSITE_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_CROP_PROP : UInt32
    D2D1_CROP_PROP_RECT = 0
    D2D1_CROP_PROP_BORDER_MODE = 1
    D2D1_CROP_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_BORDER_PROP : UInt32
    D2D1_BORDER_PROP_EDGE_MODE_X = 0
    D2D1_BORDER_PROP_EDGE_MODE_Y = 1
    D2D1_BORDER_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_BORDER_EDGE_MODE : UInt32
    D2D1_BORDER_EDGE_MODE_CLAMP = 0
    D2D1_BORDER_EDGE_MODE_WRAP = 1
    D2D1_BORDER_EDGE_MODE_MIRROR = 2
    D2D1_BORDER_EDGE_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_MORPHOLOGY_PROP : UInt32
    D2D1_MORPHOLOGY_PROP_MODE = 0
    D2D1_MORPHOLOGY_PROP_WIDTH = 1
    D2D1_MORPHOLOGY_PROP_HEIGHT = 2
    D2D1_MORPHOLOGY_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_MORPHOLOGY_MODE : UInt32
    D2D1_MORPHOLOGY_MODE_ERODE = 0
    D2D1_MORPHOLOGY_MODE_DILATE = 1
    D2D1_MORPHOLOGY_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_TILE_PROP : UInt32
    D2D1_TILE_PROP_RECT = 0
    D2D1_TILE_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_ATLAS_PROP : UInt32
    D2D1_ATLAS_PROP_INPUT_RECT = 0
    D2D1_ATLAS_PROP_INPUT_PADDING_RECT = 1
    D2D1_ATLAS_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_OPACITYMETADATA_PROP : UInt32
    D2D1_OPACITYMETADATA_PROP_INPUT_OPAQUE_RECT = 0
    D2D1_OPACITYMETADATA_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_PROPERTY_TYPE : UInt32
    D2D1_PROPERTY_TYPE_UNKNOWN = 0
    D2D1_PROPERTY_TYPE_STRING = 1
    D2D1_PROPERTY_TYPE_BOOL = 2
    D2D1_PROPERTY_TYPE_UINT32 = 3
    D2D1_PROPERTY_TYPE_INT32 = 4
    D2D1_PROPERTY_TYPE_FLOAT = 5
    D2D1_PROPERTY_TYPE_VECTOR2 = 6
    D2D1_PROPERTY_TYPE_VECTOR3 = 7
    D2D1_PROPERTY_TYPE_VECTOR4 = 8
    D2D1_PROPERTY_TYPE_BLOB = 9
    D2D1_PROPERTY_TYPE_IUNKNOWN = 10
    D2D1_PROPERTY_TYPE_ENUM = 11
    D2D1_PROPERTY_TYPE_ARRAY = 12
    D2D1_PROPERTY_TYPE_CLSID = 13
    D2D1_PROPERTY_TYPE_MATRIX_3X2 = 14
    D2D1_PROPERTY_TYPE_MATRIX_4X3 = 15
    D2D1_PROPERTY_TYPE_MATRIX_4X4 = 16
    D2D1_PROPERTY_TYPE_MATRIX_5X4 = 17
    D2D1_PROPERTY_TYPE_COLOR_CONTEXT = 18
    D2D1_PROPERTY_TYPE_FORCE_DWORD = 4294967295
  end

  enum D2D1_PROPERTY : UInt32
    D2D1_PROPERTY_CLSID = 2147483648
    D2D1_PROPERTY_DISPLAYNAME = 2147483649
    D2D1_PROPERTY_AUTHOR = 2147483650
    D2D1_PROPERTY_CATEGORY = 2147483651
    D2D1_PROPERTY_DESCRIPTION = 2147483652
    D2D1_PROPERTY_INPUTS = 2147483653
    D2D1_PROPERTY_CACHED = 2147483654
    D2D1_PROPERTY_PRECISION = 2147483655
    D2D1_PROPERTY_MIN_INPUTS = 2147483656
    D2D1_PROPERTY_MAX_INPUTS = 2147483657
    D2D1_PROPERTY_FORCE_DWORD = 4294967295
  end

  enum D2D1_SUBPROPERTY : UInt32
    D2D1_SUBPROPERTY_DISPLAYNAME = 2147483648
    D2D1_SUBPROPERTY_ISREADONLY = 2147483649
    D2D1_SUBPROPERTY_MIN = 2147483650
    D2D1_SUBPROPERTY_MAX = 2147483651
    D2D1_SUBPROPERTY_DEFAULT = 2147483652
    D2D1_SUBPROPERTY_FIELDS = 2147483653
    D2D1_SUBPROPERTY_INDEX = 2147483654
    D2D1_SUBPROPERTY_FORCE_DWORD = 4294967295
  end

  enum D2D1_BITMAP_OPTIONS : UInt32
    D2D1_BITMAP_OPTIONS_NONE = 0
    D2D1_BITMAP_OPTIONS_TARGET = 1
    D2D1_BITMAP_OPTIONS_CANNOT_DRAW = 2
    D2D1_BITMAP_OPTIONS_CPU_READ = 4
    D2D1_BITMAP_OPTIONS_GDI_COMPATIBLE = 8
    D2D1_BITMAP_OPTIONS_FORCE_DWORD = 4294967295
  end

  enum D2D1_BUFFER_PRECISION : UInt32
    D2D1_BUFFER_PRECISION_UNKNOWN = 0
    D2D1_BUFFER_PRECISION_8BPC_UNORM = 1
    D2D1_BUFFER_PRECISION_8BPC_UNORM_SRGB = 2
    D2D1_BUFFER_PRECISION_16BPC_UNORM = 3
    D2D1_BUFFER_PRECISION_16BPC_FLOAT = 4
    D2D1_BUFFER_PRECISION_32BPC_FLOAT = 5
    D2D1_BUFFER_PRECISION_FORCE_DWORD = 4294967295
  end

  enum D2D1_MAP_OPTIONS : UInt32
    D2D1_MAP_OPTIONS_NONE = 0
    D2D1_MAP_OPTIONS_READ = 1
    D2D1_MAP_OPTIONS_WRITE = 2
    D2D1_MAP_OPTIONS_DISCARD = 4
    D2D1_MAP_OPTIONS_FORCE_DWORD = 4294967295
  end

  enum D2D1_INTERPOLATION_MODE : UInt32
    D2D1_INTERPOLATION_MODE_NEAREST_NEIGHBOR = 0
    D2D1_INTERPOLATION_MODE_LINEAR = 1
    D2D1_INTERPOLATION_MODE_CUBIC = 2
    D2D1_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR = 3
    D2D1_INTERPOLATION_MODE_ANISOTROPIC = 4
    D2D1_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC = 5
    D2D1_INTERPOLATION_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_UNIT_MODE : UInt32
    D2D1_UNIT_MODE_DIPS = 0
    D2D1_UNIT_MODE_PIXELS = 1
    D2D1_UNIT_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_COLOR_SPACE : UInt32
    D2D1_COLOR_SPACE_CUSTOM = 0
    D2D1_COLOR_SPACE_SRGB = 1
    D2D1_COLOR_SPACE_SCRGB = 2
    D2D1_COLOR_SPACE_FORCE_DWORD = 4294967295
  end

  enum D2D1_DEVICE_CONTEXT_OPTIONS : UInt32
    D2D1_DEVICE_CONTEXT_OPTIONS_NONE = 0
    D2D1_DEVICE_CONTEXT_OPTIONS_ENABLE_MULTITHREADED_OPTIMIZATIONS = 1
    D2D1_DEVICE_CONTEXT_OPTIONS_FORCE_DWORD = 4294967295
  end

  enum D2D1_STROKE_TRANSFORM_TYPE : UInt32
    D2D1_STROKE_TRANSFORM_TYPE_NORMAL = 0
    D2D1_STROKE_TRANSFORM_TYPE_FIXED = 1
    D2D1_STROKE_TRANSFORM_TYPE_HAIRLINE = 2
    D2D1_STROKE_TRANSFORM_TYPE_FORCE_DWORD = 4294967295
  end

  enum D2D1_PRIMITIVE_BLEND : UInt32
    D2D1_PRIMITIVE_BLEND_SOURCE_OVER = 0
    D2D1_PRIMITIVE_BLEND_COPY = 1
    D2D1_PRIMITIVE_BLEND_MIN = 2
    D2D1_PRIMITIVE_BLEND_ADD = 3
    D2D1_PRIMITIVE_BLEND_MAX = 4
    D2D1_PRIMITIVE_BLEND_FORCE_DWORD = 4294967295
  end

  enum D2D1_THREADING_MODE : UInt32
    D2D1_THREADING_MODE_SINGLE_THREADED = 0
    D2D1_THREADING_MODE_MULTI_THREADED = 1
    D2D1_THREADING_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_COLOR_INTERPOLATION_MODE : UInt32
    D2D1_COLOR_INTERPOLATION_MODE_STRAIGHT = 0
    D2D1_COLOR_INTERPOLATION_MODE_PREMULTIPLIED = 1
    D2D1_COLOR_INTERPOLATION_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_LAYER_OPTIONS1 : UInt32
    D2D1_LAYER_OPTIONS1_NONE = 0
    D2D1_LAYER_OPTIONS1_INITIALIZE_FROM_BACKGROUND = 1
    D2D1_LAYER_OPTIONS1_IGNORE_ALPHA = 2
    D2D1_LAYER_OPTIONS1_FORCE_DWORD = 4294967295
  end

  enum D2D1_PRINT_FONT_SUBSET_MODE : UInt32
    D2D1_PRINT_FONT_SUBSET_MODE_DEFAULT = 0
    D2D1_PRINT_FONT_SUBSET_MODE_EACHPAGE = 1
    D2D1_PRINT_FONT_SUBSET_MODE_NONE = 2
    D2D1_PRINT_FONT_SUBSET_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_CHANGE_TYPE : UInt32
    D2D1_CHANGE_TYPE_NONE = 0
    D2D1_CHANGE_TYPE_PROPERTIES = 1
    D2D1_CHANGE_TYPE_CONTEXT = 2
    D2D1_CHANGE_TYPE_GRAPH = 3
    D2D1_CHANGE_TYPE_FORCE_DWORD = 4294967295
  end

  enum D2D1_PIXEL_OPTIONS : UInt32
    D2D1_PIXEL_OPTIONS_NONE = 0
    D2D1_PIXEL_OPTIONS_TRIVIAL_SAMPLING = 1
    D2D1_PIXEL_OPTIONS_FORCE_DWORD = 4294967295
  end

  enum D2D1_VERTEX_OPTIONS : UInt32
    D2D1_VERTEX_OPTIONS_NONE = 0
    D2D1_VERTEX_OPTIONS_DO_NOT_CLEAR = 1
    D2D1_VERTEX_OPTIONS_USE_DEPTH_BUFFER = 2
    D2D1_VERTEX_OPTIONS_ASSUME_NO_OVERLAP = 4
    D2D1_VERTEX_OPTIONS_FORCE_DWORD = 4294967295
  end

  enum D2D1_VERTEX_USAGE : UInt32
    D2D1_VERTEX_USAGE_STATIC = 0
    D2D1_VERTEX_USAGE_DYNAMIC = 1
    D2D1_VERTEX_USAGE_FORCE_DWORD = 4294967295
  end

  enum D2D1_BLEND_OPERATION : UInt32
    D2D1_BLEND_OPERATION_ADD = 1
    D2D1_BLEND_OPERATION_SUBTRACT = 2
    D2D1_BLEND_OPERATION_REV_SUBTRACT = 3
    D2D1_BLEND_OPERATION_MIN = 4
    D2D1_BLEND_OPERATION_MAX = 5
    D2D1_BLEND_OPERATION_FORCE_DWORD = 4294967295
  end

  enum D2D1_BLEND : UInt32
    D2D1_BLEND_ZERO = 1
    D2D1_BLEND_ONE = 2
    D2D1_BLEND_SRC_COLOR = 3
    D2D1_BLEND_INV_SRC_COLOR = 4
    D2D1_BLEND_SRC_ALPHA = 5
    D2D1_BLEND_INV_SRC_ALPHA = 6
    D2D1_BLEND_DEST_ALPHA = 7
    D2D1_BLEND_INV_DEST_ALPHA = 8
    D2D1_BLEND_DEST_COLOR = 9
    D2D1_BLEND_INV_DEST_COLOR = 10
    D2D1_BLEND_SRC_ALPHA_SAT = 11
    D2D1_BLEND_BLEND_FACTOR = 14
    D2D1_BLEND_INV_BLEND_FACTOR = 15
    D2D1_BLEND_FORCE_DWORD = 4294967295
  end

  enum D2D1_CHANNEL_DEPTH : UInt32
    D2D1_CHANNEL_DEPTH_DEFAULT = 0
    D2D1_CHANNEL_DEPTH_1 = 1
    D2D1_CHANNEL_DEPTH_4 = 4
    D2D1_CHANNEL_DEPTH_FORCE_DWORD = 4294967295
  end

  enum D2D1_FILTER : UInt32
    D2D1_FILTER_MIN_MAG_MIP_POINT = 0
    D2D1_FILTER_MIN_MAG_POINT_MIP_LINEAR = 1
    D2D1_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT = 4
    D2D1_FILTER_MIN_POINT_MAG_MIP_LINEAR = 5
    D2D1_FILTER_MIN_LINEAR_MAG_MIP_POINT = 16
    D2D1_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 17
    D2D1_FILTER_MIN_MAG_LINEAR_MIP_POINT = 20
    D2D1_FILTER_MIN_MAG_MIP_LINEAR = 21
    D2D1_FILTER_ANISOTROPIC = 85
    D2D1_FILTER_FORCE_DWORD = 4294967295
  end

  enum D2D1_FEATURE : UInt32
    D2D1_FEATURE_DOUBLES = 0
    D2D1_FEATURE_D3D10_X_HARDWARE_OPTIONS = 1
    D2D1_FEATURE_FORCE_DWORD = 4294967295
  end

  enum D2D1_YCBCR_PROP : UInt32
    D2D1_YCBCR_PROP_CHROMA_SUBSAMPLING = 0
    D2D1_YCBCR_PROP_TRANSFORM_MATRIX = 1
    D2D1_YCBCR_PROP_INTERPOLATION_MODE = 2
    D2D1_YCBCR_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_YCBCR_CHROMA_SUBSAMPLING : UInt32
    D2D1_YCBCR_CHROMA_SUBSAMPLING_AUTO = 0
    D2D1_YCBCR_CHROMA_SUBSAMPLING_420 = 1
    D2D1_YCBCR_CHROMA_SUBSAMPLING_422 = 2
    D2D1_YCBCR_CHROMA_SUBSAMPLING_444 = 3
    D2D1_YCBCR_CHROMA_SUBSAMPLING_440 = 4
    D2D1_YCBCR_CHROMA_SUBSAMPLING_FORCE_DWORD = 4294967295
  end

  enum D2D1_YCBCR_INTERPOLATION_MODE : UInt32
    D2D1_YCBCR_INTERPOLATION_MODE_NEAREST_NEIGHBOR = 0
    D2D1_YCBCR_INTERPOLATION_MODE_LINEAR = 1
    D2D1_YCBCR_INTERPOLATION_MODE_CUBIC = 2
    D2D1_YCBCR_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR = 3
    D2D1_YCBCR_INTERPOLATION_MODE_ANISOTROPIC = 4
    D2D1_YCBCR_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC = 5
    D2D1_YCBCR_INTERPOLATION_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_CONTRAST_PROP : UInt32
    D2D1_CONTRAST_PROP_CONTRAST = 0
    D2D1_CONTRAST_PROP_CLAMP_INPUT = 1
    D2D1_CONTRAST_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_RGBTOHUE_PROP : UInt32
    D2D1_RGBTOHUE_PROP_OUTPUT_COLOR_SPACE = 0
    D2D1_RGBTOHUE_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE : UInt32
    D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE_HUE_SATURATION_VALUE = 0
    D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE_HUE_SATURATION_LIGHTNESS = 1
    D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE_FORCE_DWORD = 4294967295
  end

  enum D2D1_HUETORGB_PROP : UInt32
    D2D1_HUETORGB_PROP_INPUT_COLOR_SPACE = 0
    D2D1_HUETORGB_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_HUETORGB_INPUT_COLOR_SPACE : UInt32
    D2D1_HUETORGB_INPUT_COLOR_SPACE_HUE_SATURATION_VALUE = 0
    D2D1_HUETORGB_INPUT_COLOR_SPACE_HUE_SATURATION_LIGHTNESS = 1
    D2D1_HUETORGB_INPUT_COLOR_SPACE_FORCE_DWORD = 4294967295
  end

  enum D2D1_CHROMAKEY_PROP : UInt32
    D2D1_CHROMAKEY_PROP_COLOR = 0
    D2D1_CHROMAKEY_PROP_TOLERANCE = 1
    D2D1_CHROMAKEY_PROP_INVERT_ALPHA = 2
    D2D1_CHROMAKEY_PROP_FEATHER = 3
    D2D1_CHROMAKEY_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_EMBOSS_PROP : UInt32
    D2D1_EMBOSS_PROP_HEIGHT = 0
    D2D1_EMBOSS_PROP_DIRECTION = 1
    D2D1_EMBOSS_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_EXPOSURE_PROP : UInt32
    D2D1_EXPOSURE_PROP_EXPOSURE_VALUE = 0
    D2D1_EXPOSURE_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_POSTERIZE_PROP : UInt32
    D2D1_POSTERIZE_PROP_RED_VALUE_COUNT = 0
    D2D1_POSTERIZE_PROP_GREEN_VALUE_COUNT = 1
    D2D1_POSTERIZE_PROP_BLUE_VALUE_COUNT = 2
    D2D1_POSTERIZE_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_SEPIA_PROP : UInt32
    D2D1_SEPIA_PROP_INTENSITY = 0
    D2D1_SEPIA_PROP_ALPHA_MODE = 1
    D2D1_SEPIA_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_SHARPEN_PROP : UInt32
    D2D1_SHARPEN_PROP_SHARPNESS = 0
    D2D1_SHARPEN_PROP_THRESHOLD = 1
    D2D1_SHARPEN_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_STRAIGHTEN_PROP : UInt32
    D2D1_STRAIGHTEN_PROP_ANGLE = 0
    D2D1_STRAIGHTEN_PROP_MAINTAIN_SIZE = 1
    D2D1_STRAIGHTEN_PROP_SCALE_MODE = 2
    D2D1_STRAIGHTEN_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_STRAIGHTEN_SCALE_MODE : UInt32
    D2D1_STRAIGHTEN_SCALE_MODE_NEAREST_NEIGHBOR = 0
    D2D1_STRAIGHTEN_SCALE_MODE_LINEAR = 1
    D2D1_STRAIGHTEN_SCALE_MODE_CUBIC = 2
    D2D1_STRAIGHTEN_SCALE_MODE_MULTI_SAMPLE_LINEAR = 3
    D2D1_STRAIGHTEN_SCALE_MODE_ANISOTROPIC = 4
    D2D1_STRAIGHTEN_SCALE_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_TEMPERATUREANDTINT_PROP : UInt32
    D2D1_TEMPERATUREANDTINT_PROP_TEMPERATURE = 0
    D2D1_TEMPERATUREANDTINT_PROP_TINT = 1
    D2D1_TEMPERATUREANDTINT_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_VIGNETTE_PROP : UInt32
    D2D1_VIGNETTE_PROP_COLOR = 0
    D2D1_VIGNETTE_PROP_TRANSITION_SIZE = 1
    D2D1_VIGNETTE_PROP_STRENGTH = 2
    D2D1_VIGNETTE_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_EDGEDETECTION_PROP : UInt32
    D2D1_EDGEDETECTION_PROP_STRENGTH = 0
    D2D1_EDGEDETECTION_PROP_BLUR_RADIUS = 1
    D2D1_EDGEDETECTION_PROP_MODE = 2
    D2D1_EDGEDETECTION_PROP_OVERLAY_EDGES = 3
    D2D1_EDGEDETECTION_PROP_ALPHA_MODE = 4
    D2D1_EDGEDETECTION_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_EDGEDETECTION_MODE : UInt32
    D2D1_EDGEDETECTION_MODE_SOBEL = 0
    D2D1_EDGEDETECTION_MODE_PREWITT = 1
    D2D1_EDGEDETECTION_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_HIGHLIGHTSANDSHADOWS_PROP : UInt32
    D2D1_HIGHLIGHTSANDSHADOWS_PROP_HIGHLIGHTS = 0
    D2D1_HIGHLIGHTSANDSHADOWS_PROP_SHADOWS = 1
    D2D1_HIGHLIGHTSANDSHADOWS_PROP_CLARITY = 2
    D2D1_HIGHLIGHTSANDSHADOWS_PROP_INPUT_GAMMA = 3
    D2D1_HIGHLIGHTSANDSHADOWS_PROP_MASK_BLUR_RADIUS = 4
    D2D1_HIGHLIGHTSANDSHADOWS_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA : UInt32
    D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA_LINEAR = 0
    D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA_SRGB = 1
    D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA_FORCE_DWORD = 4294967295
  end

  enum D2D1_LOOKUPTABLE3D_PROP : UInt32
    D2D1_LOOKUPTABLE3D_PROP_LUT = 0
    D2D1_LOOKUPTABLE3D_PROP_ALPHA_MODE = 1
    D2D1_LOOKUPTABLE3D_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_OPACITY_PROP : UInt32
    D2D1_OPACITY_PROP_OPACITY = 0
    D2D1_OPACITY_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_CROSSFADE_PROP : UInt32
    D2D1_CROSSFADE_PROP_WEIGHT = 0
    D2D1_CROSSFADE_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_TINT_PROP : UInt32
    D2D1_TINT_PROP_COLOR = 0
    D2D1_TINT_PROP_CLAMP_OUTPUT = 1
    D2D1_TINT_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_WHITELEVELADJUSTMENT_PROP : UInt32
    D2D1_WHITELEVELADJUSTMENT_PROP_INPUT_WHITE_LEVEL = 0
    D2D1_WHITELEVELADJUSTMENT_PROP_OUTPUT_WHITE_LEVEL = 1
    D2D1_WHITELEVELADJUSTMENT_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_HDRTONEMAP_PROP : UInt32
    D2D1_HDRTONEMAP_PROP_INPUT_MAX_LUMINANCE = 0
    D2D1_HDRTONEMAP_PROP_OUTPUT_MAX_LUMINANCE = 1
    D2D1_HDRTONEMAP_PROP_DISPLAY_MODE = 2
    D2D1_HDRTONEMAP_PROP_FORCE_DWORD = 4294967295
  end

  enum D2D1_HDRTONEMAP_DISPLAY_MODE : UInt32
    D2D1_HDRTONEMAP_DISPLAY_MODE_SDR = 0
    D2D1_HDRTONEMAP_DISPLAY_MODE_HDR = 1
    D2D1_HDRTONEMAP_DISPLAY_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_RENDERING_PRIORITY : UInt32
    D2D1_RENDERING_PRIORITY_NORMAL = 0
    D2D1_RENDERING_PRIORITY_LOW = 1
    D2D1_RENDERING_PRIORITY_FORCE_DWORD = 4294967295
  end

  enum D2D1_SVG_PAINT_TYPE : UInt32
    D2D1_SVG_PAINT_TYPE_NONE = 0
    D2D1_SVG_PAINT_TYPE_COLOR = 1
    D2D1_SVG_PAINT_TYPE_CURRENT_COLOR = 2
    D2D1_SVG_PAINT_TYPE_URI = 3
    D2D1_SVG_PAINT_TYPE_URI_NONE = 4
    D2D1_SVG_PAINT_TYPE_URI_COLOR = 5
    D2D1_SVG_PAINT_TYPE_URI_CURRENT_COLOR = 6
    D2D1_SVG_PAINT_TYPE_FORCE_DWORD = 4294967295
  end

  enum D2D1_SVG_LENGTH_UNITS : UInt32
    D2D1_SVG_LENGTH_UNITS_NUMBER = 0
    D2D1_SVG_LENGTH_UNITS_PERCENTAGE = 1
    D2D1_SVG_LENGTH_UNITS_FORCE_DWORD = 4294967295
  end

  enum D2D1_SVG_DISPLAY : UInt32
    D2D1_SVG_DISPLAY_INLINE = 0
    D2D1_SVG_DISPLAY_NONE = 1
    D2D1_SVG_DISPLAY_FORCE_DWORD = 4294967295
  end

  enum D2D1_SVG_VISIBILITY : UInt32
    D2D1_SVG_VISIBILITY_VISIBLE = 0
    D2D1_SVG_VISIBILITY_HIDDEN = 1
    D2D1_SVG_VISIBILITY_FORCE_DWORD = 4294967295
  end

  enum D2D1_SVG_OVERFLOW : UInt32
    D2D1_SVG_OVERFLOW_VISIBLE = 0
    D2D1_SVG_OVERFLOW_HIDDEN = 1
    D2D1_SVG_OVERFLOW_FORCE_DWORD = 4294967295
  end

  enum D2D1_SVG_LINE_CAP : UInt32
    D2D1_SVG_LINE_CAP_BUTT = 0
    D2D1_SVG_LINE_CAP_SQUARE = 1
    D2D1_SVG_LINE_CAP_ROUND = 2
    D2D1_SVG_LINE_CAP_FORCE_DWORD = 4294967295
  end

  enum D2D1_SVG_LINE_JOIN : UInt32
    D2D1_SVG_LINE_JOIN_BEVEL = 1
    D2D1_SVG_LINE_JOIN_MITER = 3
    D2D1_SVG_LINE_JOIN_ROUND = 2
    D2D1_SVG_LINE_JOIN_FORCE_DWORD = 4294967295
  end

  enum D2D1_SVG_ASPECT_ALIGN : UInt32
    D2D1_SVG_ASPECT_ALIGN_NONE = 0
    D2D1_SVG_ASPECT_ALIGN_X_MIN_Y_MIN = 1
    D2D1_SVG_ASPECT_ALIGN_X_MID_Y_MIN = 2
    D2D1_SVG_ASPECT_ALIGN_X_MAX_Y_MIN = 3
    D2D1_SVG_ASPECT_ALIGN_X_MIN_Y_MID = 4
    D2D1_SVG_ASPECT_ALIGN_X_MID_Y_MID = 5
    D2D1_SVG_ASPECT_ALIGN_X_MAX_Y_MID = 6
    D2D1_SVG_ASPECT_ALIGN_X_MIN_Y_MAX = 7
    D2D1_SVG_ASPECT_ALIGN_X_MID_Y_MAX = 8
    D2D1_SVG_ASPECT_ALIGN_X_MAX_Y_MAX = 9
    D2D1_SVG_ASPECT_ALIGN_FORCE_DWORD = 4294967295
  end

  enum D2D1_SVG_ASPECT_SCALING : UInt32
    D2D1_SVG_ASPECT_SCALING_MEET = 0
    D2D1_SVG_ASPECT_SCALING_SLICE = 1
    D2D1_SVG_ASPECT_SCALING_FORCE_DWORD = 4294967295
  end

  enum D2D1_SVG_PATH_COMMAND : UInt32
    D2D1_SVG_PATH_COMMAND_CLOSE_PATH = 0
    D2D1_SVG_PATH_COMMAND_MOVE_ABSOLUTE = 1
    D2D1_SVG_PATH_COMMAND_MOVE_RELATIVE = 2
    D2D1_SVG_PATH_COMMAND_LINE_ABSOLUTE = 3
    D2D1_SVG_PATH_COMMAND_LINE_RELATIVE = 4
    D2D1_SVG_PATH_COMMAND_CUBIC_ABSOLUTE = 5
    D2D1_SVG_PATH_COMMAND_CUBIC_RELATIVE = 6
    D2D1_SVG_PATH_COMMAND_QUADRADIC_ABSOLUTE = 7
    D2D1_SVG_PATH_COMMAND_QUADRADIC_RELATIVE = 8
    D2D1_SVG_PATH_COMMAND_ARC_ABSOLUTE = 9
    D2D1_SVG_PATH_COMMAND_ARC_RELATIVE = 10
    D2D1_SVG_PATH_COMMAND_HORIZONTAL_ABSOLUTE = 11
    D2D1_SVG_PATH_COMMAND_HORIZONTAL_RELATIVE = 12
    D2D1_SVG_PATH_COMMAND_VERTICAL_ABSOLUTE = 13
    D2D1_SVG_PATH_COMMAND_VERTICAL_RELATIVE = 14
    D2D1_SVG_PATH_COMMAND_CUBIC_SMOOTH_ABSOLUTE = 15
    D2D1_SVG_PATH_COMMAND_CUBIC_SMOOTH_RELATIVE = 16
    D2D1_SVG_PATH_COMMAND_QUADRADIC_SMOOTH_ABSOLUTE = 17
    D2D1_SVG_PATH_COMMAND_QUADRADIC_SMOOTH_RELATIVE = 18
    D2D1_SVG_PATH_COMMAND_FORCE_DWORD = 4294967295
  end

  enum D2D1_SVG_UNIT_TYPE : UInt32
    D2D1_SVG_UNIT_TYPE_USER_SPACE_ON_USE = 0
    D2D1_SVG_UNIT_TYPE_OBJECT_BOUNDING_BOX = 1
    D2D1_SVG_UNIT_TYPE_FORCE_DWORD = 4294967295
  end

  enum D2D1_SVG_ATTRIBUTE_STRING_TYPE : UInt32
    D2D1_SVG_ATTRIBUTE_STRING_TYPE_SVG = 0
    D2D1_SVG_ATTRIBUTE_STRING_TYPE_ID = 1
    D2D1_SVG_ATTRIBUTE_STRING_TYPE_FORCE_DWORD = 4294967295
  end

  enum D2D1_SVG_ATTRIBUTE_POD_TYPE : UInt32
    D2D1_SVG_ATTRIBUTE_POD_TYPE_FLOAT = 0
    D2D1_SVG_ATTRIBUTE_POD_TYPE_COLOR = 1
    D2D1_SVG_ATTRIBUTE_POD_TYPE_FILL_MODE = 2
    D2D1_SVG_ATTRIBUTE_POD_TYPE_DISPLAY = 3
    D2D1_SVG_ATTRIBUTE_POD_TYPE_OVERFLOW = 4
    D2D1_SVG_ATTRIBUTE_POD_TYPE_LINE_CAP = 5
    D2D1_SVG_ATTRIBUTE_POD_TYPE_LINE_JOIN = 6
    D2D1_SVG_ATTRIBUTE_POD_TYPE_VISIBILITY = 7
    D2D1_SVG_ATTRIBUTE_POD_TYPE_MATRIX = 8
    D2D1_SVG_ATTRIBUTE_POD_TYPE_UNIT_TYPE = 9
    D2D1_SVG_ATTRIBUTE_POD_TYPE_EXTEND_MODE = 10
    D2D1_SVG_ATTRIBUTE_POD_TYPE_PRESERVE_ASPECT_RATIO = 11
    D2D1_SVG_ATTRIBUTE_POD_TYPE_VIEWBOX = 12
    D2D1_SVG_ATTRIBUTE_POD_TYPE_LENGTH = 13
    D2D1_SVG_ATTRIBUTE_POD_TYPE_FORCE_DWORD = 4294967295
  end

  enum D2D1_INK_NIB_SHAPE : UInt32
    D2D1_INK_NIB_SHAPE_ROUND = 0
    D2D1_INK_NIB_SHAPE_SQUARE = 1
    D2D1_INK_NIB_SHAPE_FORCE_DWORD = 4294967295
  end

  enum D2D1_ORIENTATION : UInt32
    D2D1_ORIENTATION_DEFAULT = 1
    D2D1_ORIENTATION_FLIP_HORIZONTAL = 2
    D2D1_ORIENTATION_ROTATE_CLOCKWISE180 = 3
    D2D1_ORIENTATION_ROTATE_CLOCKWISE180_FLIP_HORIZONTAL = 4
    D2D1_ORIENTATION_ROTATE_CLOCKWISE90_FLIP_HORIZONTAL = 5
    D2D1_ORIENTATION_ROTATE_CLOCKWISE270 = 6
    D2D1_ORIENTATION_ROTATE_CLOCKWISE270_FLIP_HORIZONTAL = 7
    D2D1_ORIENTATION_ROTATE_CLOCKWISE90 = 8
    D2D1_ORIENTATION_FORCE_DWORD = 4294967295
  end

  enum D2D1_IMAGE_SOURCE_LOADING_OPTIONS : UInt32
    D2D1_IMAGE_SOURCE_LOADING_OPTIONS_NONE = 0
    D2D1_IMAGE_SOURCE_LOADING_OPTIONS_RELEASE_SOURCE = 1
    D2D1_IMAGE_SOURCE_LOADING_OPTIONS_CACHE_ON_DEMAND = 2
    D2D1_IMAGE_SOURCE_LOADING_OPTIONS_FORCE_DWORD = 4294967295
  end

  enum D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS : UInt32
    D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS_NONE = 0
    D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS_LOW_QUALITY_PRIMARY_CONVERSION = 1
    D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS_FORCE_DWORD = 4294967295
  end

  enum D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS : UInt32
    D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS_NONE = 0
    D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS_DISABLE_DPI_SCALE = 1
    D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS_FORCE_DWORD = 4294967295
  end

  enum D2D1_PATCH_EDGE_MODE : UInt32
    D2D1_PATCH_EDGE_MODE_ALIASED = 0
    D2D1_PATCH_EDGE_MODE_ANTIALIASED = 1
    D2D1_PATCH_EDGE_MODE_ALIASED_INFLATED = 2
    D2D1_PATCH_EDGE_MODE_FORCE_DWORD = 4294967295
  end

  enum D2D1_SPRITE_OPTIONS : UInt32
    D2D1_SPRITE_OPTIONS_NONE = 0
    D2D1_SPRITE_OPTIONS_CLAMP_TO_SOURCE_RECTANGLE = 1
    D2D1_SPRITE_OPTIONS_FORCE_DWORD = 4294967295
  end

  enum D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION : UInt32
    D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION_DEFAULT = 0
    D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION_DISABLE = 1
    D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION_FORCE_DWORD = 4294967295
  end

  enum D2D1_GAMMA1 : UInt32
    D2D1_GAMMA1_G22 = 0
    D2D1_GAMMA1_G10 = 1
    D2D1_GAMMA1_G2084 = 2
    D2D1_GAMMA1_FORCE_DWORD = 4294967295
  end

  enum D2D1_COLOR_CONTEXT_TYPE : UInt32
    D2D1_COLOR_CONTEXT_TYPE_ICC = 0
    D2D1_COLOR_CONTEXT_TYPE_SIMPLE = 1
    D2D1_COLOR_CONTEXT_TYPE_DXGI = 2
    D2D1_COLOR_CONTEXT_TYPE_FORCE_DWORD = 4294967295
  end

  struct D2D1_BITMAP_PROPERTIES
    pixel_format : D2D1_PIXEL_FORMAT
    dpi_x : Float32
    dpi_y : Float32
  end
  struct D2D1_GRADIENT_STOP
    position : Float32
    color : D2D1_COLOR_F
  end
  struct D2D1_BRUSH_PROPERTIES
    opacity : Float32
    transform : D2D_MATRIX_3X2_F
  end
  struct D2D1_BITMAP_BRUSH_PROPERTIES
    extend_mode_x : D2D1_EXTEND_MODE
    extend_mode_y : D2D1_EXTEND_MODE
    interpolation_mode : D2D1_BITMAP_INTERPOLATION_MODE
  end
  struct D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES
    start_point : D2D_POINT_2F
    end_point : D2D_POINT_2F
  end
  struct D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES
    center : D2D_POINT_2F
    gradient_origin_offset : D2D_POINT_2F
    radius_x : Float32
    radius_y : Float32
  end
  struct D2D1_TRIANGLE
    point1 : D2D_POINT_2F
    point2 : D2D_POINT_2F
    point3 : D2D_POINT_2F
  end
  struct D2D1_ARC_SEGMENT
    point : D2D_POINT_2F
    size : D2D_SIZE_F
    rotation_angle : Float32
    sweep_direction : D2D1_SWEEP_DIRECTION
    arc_size : D2D1_ARC_SIZE
  end
  struct D2D1_QUADRATIC_BEZIER_SEGMENT
    point1 : D2D_POINT_2F
    point2 : D2D_POINT_2F
  end
  struct D2D1_ELLIPSE
    point : D2D_POINT_2F
    radius_x : Float32
    radius_y : Float32
  end
  struct D2D1_ROUNDED_RECT
    rect : D2D_RECT_F
    radius_x : Float32
    radius_y : Float32
  end
  struct D2D1_STROKE_STYLE_PROPERTIES
    start_cap : D2D1_CAP_STYLE
    end_cap : D2D1_CAP_STYLE
    dash_cap : D2D1_CAP_STYLE
    line_join : D2D1_LINE_JOIN
    miter_limit : Float32
    dash_style : D2D1_DASH_STYLE
    dash_offset : Float32
  end
  struct D2D1_LAYER_PARAMETERS
    content_bounds : D2D_RECT_F
    geometric_mask : ID2D1Geometry
    mask_antialias_mode : D2D1_ANTIALIAS_MODE
    mask_transform : D2D_MATRIX_3X2_F
    opacity : Float32
    opacity_brush : ID2D1Brush
    layer_options : D2D1_LAYER_OPTIONS
  end
  struct D2D1_RENDER_TARGET_PROPERTIES
    type : D2D1_RENDER_TARGET_TYPE
    pixel_format : D2D1_PIXEL_FORMAT
    dpi_x : Float32
    dpi_y : Float32
    usage : D2D1_RENDER_TARGET_USAGE
    min_level : D2D1_FEATURE_LEVEL
  end
  struct D2D1_HWND_RENDER_TARGET_PROPERTIES
    hwnd : HANDLE
    pixel_size : D2D_SIZE_U
    present_options : D2D1_PRESENT_OPTIONS
  end
  struct D2D1_DRAWING_STATE_DESCRIPTION
    antialias_mode : D2D1_ANTIALIAS_MODE
    text_antialias_mode : D2D1_TEXT_ANTIALIAS_MODE
    tag1 : UInt64
    tag2 : UInt64
    transform : D2D_MATRIX_3X2_F
  end
  struct D2D1_FACTORY_OPTIONS
    debug_level : D2D1_DEBUG_LEVEL
  end
  struct D2D1_BITMAP_PROPERTIES1
    pixel_format : D2D1_PIXEL_FORMAT
    dpi_x : Float32
    dpi_y : Float32
    bitmap_options : D2D1_BITMAP_OPTIONS
    color_context : ID2D1ColorContext
  end
  struct D2D1_MAPPED_RECT
    pitch : UInt32
    bits : UInt8*
  end
  struct D2D1_RENDERING_CONTROLS
    buffer_precision : D2D1_BUFFER_PRECISION
    tile_size : D2D_SIZE_U
  end
  struct D2D1_EFFECT_INPUT_DESCRIPTION
    effect : ID2D1Effect
    input_index : UInt32
    input_rectangle : D2D_RECT_F
  end
  struct D2D1_POINT_DESCRIPTION
    point : D2D_POINT_2F
    unit_tangent_vector : D2D_POINT_2F
    end_segment : UInt32
    end_figure : UInt32
    length_to_end_segment : Float32
  end
  struct D2D1_IMAGE_BRUSH_PROPERTIES
    source_rectangle : D2D_RECT_F
    extend_mode_x : D2D1_EXTEND_MODE
    extend_mode_y : D2D1_EXTEND_MODE
    interpolation_mode : D2D1_INTERPOLATION_MODE
  end
  struct D2D1_BITMAP_BRUSH_PROPERTIES1
    extend_mode_x : D2D1_EXTEND_MODE
    extend_mode_y : D2D1_EXTEND_MODE
    interpolation_mode : D2D1_INTERPOLATION_MODE
  end
  struct D2D1_STROKE_STYLE_PROPERTIES1
    start_cap : D2D1_CAP_STYLE
    end_cap : D2D1_CAP_STYLE
    dash_cap : D2D1_CAP_STYLE
    line_join : D2D1_LINE_JOIN
    miter_limit : Float32
    dash_style : D2D1_DASH_STYLE
    dash_offset : Float32
    transform_type : D2D1_STROKE_TRANSFORM_TYPE
  end
  struct D2D1_LAYER_PARAMETERS1
    content_bounds : D2D_RECT_F
    geometric_mask : ID2D1Geometry
    mask_antialias_mode : D2D1_ANTIALIAS_MODE
    mask_transform : D2D_MATRIX_3X2_F
    opacity : Float32
    opacity_brush : ID2D1Brush
    layer_options : D2D1_LAYER_OPTIONS1
  end
  struct D2D1_DRAWING_STATE_DESCRIPTION1
    antialias_mode : D2D1_ANTIALIAS_MODE
    text_antialias_mode : D2D1_TEXT_ANTIALIAS_MODE
    tag1 : UInt64
    tag2 : UInt64
    transform : D2D_MATRIX_3X2_F
    primitive_blend : D2D1_PRIMITIVE_BLEND
    unit_mode : D2D1_UNIT_MODE
  end
  struct D2D1_PRINT_CONTROL_PROPERTIES
    font_subset : D2D1_PRINT_FONT_SUBSET_MODE
    raster_dpi : Float32
    color_space : D2D1_COLOR_SPACE
  end
  struct D2D1_CREATION_PROPERTIES
    threading_mode : D2D1_THREADING_MODE
    debug_level : D2D1_DEBUG_LEVEL
    options : D2D1_DEVICE_CONTEXT_OPTIONS
  end
  struct Matrix4x3F
    __anonymous_base_d2d1_1helper_l45_c31 : D2D_MATRIX_4X3_F
  end
  struct Matrix4x4F
    __anonymous_base_d2d1_1helper_l97_c31 : D2D_MATRIX_4X4_F
  end
  struct Matrix5x4F
    __anonymous_base_d2d1_1helper_l472_c31 : D2D_MATRIX_5X4_F
  end
  struct D2D1_PROPERTY_BINDING
    property_name : LibC::LPWSTR
    set_function : PD2D1_PROPERTY_SET_FUNCTION
    get_function : PD2D1_PROPERTY_GET_FUNCTION
  end
  struct D2D1_RESOURCE_TEXTURE_PROPERTIES
    extents : UInt32*
    dimensions : UInt32
    buffer_precision : D2D1_BUFFER_PRECISION
    channel_depth : D2D1_CHANNEL_DEPTH
    filter : D2D1_FILTER
    extend_modes : D2D1_EXTEND_MODE*
  end
  struct D2D1_INPUT_ELEMENT_DESC
    semantic_name : PSTR
    semantic_index : UInt32
    format : DXGI_FORMAT
    input_slot : UInt32
    aligned_byte_offset : UInt32
  end
  struct D2D1_VERTEX_BUFFER_PROPERTIES
    input_count : UInt32
    usage : D2D1_VERTEX_USAGE
    data : UInt8*
    byte_width : UInt32
  end
  struct D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES
    shader_buffer_with_input_signature : UInt8*
    shader_buffer_size : UInt32
    input_elements : D2D1_INPUT_ELEMENT_DESC*
    element_count : UInt32
    stride : UInt32
  end
  struct D2D1_VERTEX_RANGE
    start_vertex : UInt32
    vertex_count : UInt32
  end
  struct D2D1_BLEND_DESCRIPTION
    source_blend : D2D1_BLEND
    destination_blend : D2D1_BLEND
    blend_operation : D2D1_BLEND_OPERATION
    source_blend_alpha : D2D1_BLEND
    destination_blend_alpha : D2D1_BLEND
    blend_operation_alpha : D2D1_BLEND_OPERATION
    blend_factor : Float32[4]*
  end
  struct D2D1_INPUT_DESCRIPTION
    filter : D2D1_FILTER
    level_of_detail_count : UInt32
  end
  struct D2D1_FEATURE_DATA_DOUBLES
    double_precision_float_shader_ops : LibC::BOOL
  end
  struct D2D1_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS
    compute_shaders_plus_raw_and_structured_buffers_via_shader_4_x : LibC::BOOL
  end
  struct D2D1_SVG_LENGTH
    value : Float32
    units : D2D1_SVG_LENGTH_UNITS
  end
  struct D2D1_SVG_PRESERVE_ASPECT_RATIO
    defer : LibC::BOOL
    align : D2D1_SVG_ASPECT_ALIGN
    meet_or_slice : D2D1_SVG_ASPECT_SCALING
  end
  struct D2D1_SVG_VIEWBOX
    x : Float32
    y : Float32
    width : Float32
    height : Float32
  end
  struct D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES
    orientation : D2D1_ORIENTATION
    scale_x : Float32
    scale_y : Float32
    interpolation_mode : D2D1_INTERPOLATION_MODE
    options : D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS
  end
  struct D2D1_INK_POINT
    x : Float32
    y : Float32
    radius : Float32
  end
  struct D2D1_INK_BEZIER_SEGMENT
    point1 : D2D1_INK_POINT
    point2 : D2D1_INK_POINT
    point3 : D2D1_INK_POINT
  end
  struct D2D1_INK_STYLE_PROPERTIES
    nib_shape : D2D1_INK_NIB_SHAPE
    nib_transform : D2D_MATRIX_3X2_F
  end
  struct D2D1_GRADIENT_MESH_PATCH
    point00 : D2D_POINT_2F
    point01 : D2D_POINT_2F
    point02 : D2D_POINT_2F
    point03 : D2D_POINT_2F
    point10 : D2D_POINT_2F
    point11 : D2D_POINT_2F
    point12 : D2D_POINT_2F
    point13 : D2D_POINT_2F
    point20 : D2D_POINT_2F
    point21 : D2D_POINT_2F
    point22 : D2D_POINT_2F
    point23 : D2D_POINT_2F
    point30 : D2D_POINT_2F
    point31 : D2D_POINT_2F
    point32 : D2D_POINT_2F
    point33 : D2D_POINT_2F
    color00 : D2D1_COLOR_F
    color03 : D2D1_COLOR_F
    color30 : D2D1_COLOR_F
    color33 : D2D1_COLOR_F
    top_edge_mode : D2D1_PATCH_EDGE_MODE
    left_edge_mode : D2D1_PATCH_EDGE_MODE
    bottom_edge_mode : D2D1_PATCH_EDGE_MODE
    right_edge_mode : D2D1_PATCH_EDGE_MODE
  end
  struct D2D1_SIMPLE_COLOR_PROFILE
    red_primary : D2D_POINT_2F
    green_primary : D2D_POINT_2F
    blue_primary : D2D_POINT_2F
    white_point_xz : D2D_POINT_2F
    gamma : D2D1_GAMMA1
  end


  struct ID2D1ResourceVTbl
    query_interface : Proc(ID2D1Resource*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Resource*, UInt32)
    release : Proc(ID2D1Resource*, UInt32)
    get_factory : Proc(ID2D1Resource*, ID2D1Factory*, Void)
  end

  ID2D1Resource_GUID = LibC::GUID.new("2cd90691-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1Resource = "2cd90691-12e2-11dc-9fed-001143a055f9"
  struct ID2D1Resource
    lpVtbl : ID2D1ResourceVTbl*
  end

  struct ID2D1ImageVTbl
    query_interface : Proc(ID2D1Image*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Image*, UInt32)
    release : Proc(ID2D1Image*, UInt32)
    get_factory : Proc(ID2D1Image*, ID2D1Factory*, Void)
  end

  ID2D1Image_GUID = LibC::GUID.new("65019f75-8da2-497c-b32c-dfa34e48ede6")
  CLSID_ID2D1Image = "65019f75-8da2-497c-b32c-dfa34e48ede6"
  struct ID2D1Image
    lpVtbl : ID2D1ImageVTbl*
  end

  struct ID2D1BitmapVTbl
    query_interface : Proc(ID2D1Bitmap*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Bitmap*, UInt32)
    release : Proc(ID2D1Bitmap*, UInt32)
    get_factory : Proc(ID2D1Bitmap*, ID2D1Factory*, Void)
    get_size : Proc(ID2D1Bitmap*, D2D_SIZE_F)
    get_pixel_size : Proc(ID2D1Bitmap*, D2D_SIZE_U)
    get_pixel_format : Proc(ID2D1Bitmap*, D2D1_PIXEL_FORMAT)
    get_dpi : Proc(ID2D1Bitmap*, Float32*, Float32*, Void)
    copy_from_bitmap : Proc(ID2D1Bitmap*, D2D_POINT_2U*, ID2D1Bitmap, D2D_RECT_U*, HRESULT)
    copy_from_render_target : Proc(ID2D1Bitmap*, D2D_POINT_2U*, ID2D1RenderTarget, D2D_RECT_U*, HRESULT)
    copy_from_memory : Proc(ID2D1Bitmap*, D2D_RECT_U*, Void*, UInt32, HRESULT)
  end

  ID2D1Bitmap_GUID = LibC::GUID.new("a2296057-ea42-4099-983b-539fb6505426")
  CLSID_ID2D1Bitmap = "a2296057-ea42-4099-983b-539fb6505426"
  struct ID2D1Bitmap
    lpVtbl : ID2D1BitmapVTbl*
  end

  struct ID2D1GradientStopCollectionVTbl
    query_interface : Proc(ID2D1GradientStopCollection*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1GradientStopCollection*, UInt32)
    release : Proc(ID2D1GradientStopCollection*, UInt32)
    get_factory : Proc(ID2D1GradientStopCollection*, ID2D1Factory*, Void)
    get_gradient_stop_count : Proc(ID2D1GradientStopCollection*, UInt32)
    get_gradient_stops : Proc(ID2D1GradientStopCollection*, D2D1_GRADIENT_STOP*, UInt32, Void)
    get_color_interpolation_gamma : Proc(ID2D1GradientStopCollection*, D2D1_GAMMA)
    get_extend_mode : Proc(ID2D1GradientStopCollection*, D2D1_EXTEND_MODE)
  end

  ID2D1GradientStopCollection_GUID = LibC::GUID.new("2cd906a7-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1GradientStopCollection = "2cd906a7-12e2-11dc-9fed-001143a055f9"
  struct ID2D1GradientStopCollection
    lpVtbl : ID2D1GradientStopCollectionVTbl*
  end

  struct ID2D1BrushVTbl
    query_interface : Proc(ID2D1Brush*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Brush*, UInt32)
    release : Proc(ID2D1Brush*, UInt32)
    get_factory : Proc(ID2D1Brush*, ID2D1Factory*, Void)
    set_opacity : Proc(ID2D1Brush*, Float32, Void)
    set_transform : Proc(ID2D1Brush*, D2D_MATRIX_3X2_F*, Void)
    get_opacity : Proc(ID2D1Brush*, Float32)
    get_transform : Proc(ID2D1Brush*, D2D_MATRIX_3X2_F*, Void)
  end

  ID2D1Brush_GUID = LibC::GUID.new("2cd906a8-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1Brush = "2cd906a8-12e2-11dc-9fed-001143a055f9"
  struct ID2D1Brush
    lpVtbl : ID2D1BrushVTbl*
  end

  struct ID2D1BitmapBrushVTbl
    query_interface : Proc(ID2D1BitmapBrush*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1BitmapBrush*, UInt32)
    release : Proc(ID2D1BitmapBrush*, UInt32)
    get_factory : Proc(ID2D1BitmapBrush*, ID2D1Factory*, Void)
    set_opacity : Proc(ID2D1BitmapBrush*, Float32, Void)
    set_transform : Proc(ID2D1BitmapBrush*, D2D_MATRIX_3X2_F*, Void)
    get_opacity : Proc(ID2D1BitmapBrush*, Float32)
    get_transform : Proc(ID2D1BitmapBrush*, D2D_MATRIX_3X2_F*, Void)
    set_extend_mode_x : Proc(ID2D1BitmapBrush*, D2D1_EXTEND_MODE, Void)
    set_extend_mode_y : Proc(ID2D1BitmapBrush*, D2D1_EXTEND_MODE, Void)
    set_interpolation_mode : Proc(ID2D1BitmapBrush*, D2D1_BITMAP_INTERPOLATION_MODE, Void)
    set_bitmap : Proc(ID2D1BitmapBrush*, ID2D1Bitmap, Void)
    get_extend_mode_x : Proc(ID2D1BitmapBrush*, D2D1_EXTEND_MODE)
    get_extend_mode_y : Proc(ID2D1BitmapBrush*, D2D1_EXTEND_MODE)
    get_interpolation_mode : Proc(ID2D1BitmapBrush*, D2D1_BITMAP_INTERPOLATION_MODE)
    get_bitmap : Proc(ID2D1BitmapBrush*, ID2D1Bitmap*, Void)
  end

  ID2D1BitmapBrush_GUID = LibC::GUID.new("2cd906aa-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1BitmapBrush = "2cd906aa-12e2-11dc-9fed-001143a055f9"
  struct ID2D1BitmapBrush
    lpVtbl : ID2D1BitmapBrushVTbl*
  end

  struct ID2D1SolidColorBrushVTbl
    query_interface : Proc(ID2D1SolidColorBrush*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1SolidColorBrush*, UInt32)
    release : Proc(ID2D1SolidColorBrush*, UInt32)
    get_factory : Proc(ID2D1SolidColorBrush*, ID2D1Factory*, Void)
    set_opacity : Proc(ID2D1SolidColorBrush*, Float32, Void)
    set_transform : Proc(ID2D1SolidColorBrush*, D2D_MATRIX_3X2_F*, Void)
    get_opacity : Proc(ID2D1SolidColorBrush*, Float32)
    get_transform : Proc(ID2D1SolidColorBrush*, D2D_MATRIX_3X2_F*, Void)
    set_color : Proc(ID2D1SolidColorBrush*, D2D1_COLOR_F*, Void)
    get_color : Proc(ID2D1SolidColorBrush*, D2D1_COLOR_F)
  end

  ID2D1SolidColorBrush_GUID = LibC::GUID.new("2cd906a9-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1SolidColorBrush = "2cd906a9-12e2-11dc-9fed-001143a055f9"
  struct ID2D1SolidColorBrush
    lpVtbl : ID2D1SolidColorBrushVTbl*
  end

  struct ID2D1LinearGradientBrushVTbl
    query_interface : Proc(ID2D1LinearGradientBrush*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1LinearGradientBrush*, UInt32)
    release : Proc(ID2D1LinearGradientBrush*, UInt32)
    get_factory : Proc(ID2D1LinearGradientBrush*, ID2D1Factory*, Void)
    set_opacity : Proc(ID2D1LinearGradientBrush*, Float32, Void)
    set_transform : Proc(ID2D1LinearGradientBrush*, D2D_MATRIX_3X2_F*, Void)
    get_opacity : Proc(ID2D1LinearGradientBrush*, Float32)
    get_transform : Proc(ID2D1LinearGradientBrush*, D2D_MATRIX_3X2_F*, Void)
    set_start_point : Proc(ID2D1LinearGradientBrush*, D2D_POINT_2F, Void)
    set_end_point : Proc(ID2D1LinearGradientBrush*, D2D_POINT_2F, Void)
    get_start_point : Proc(ID2D1LinearGradientBrush*, D2D_POINT_2F)
    get_end_point : Proc(ID2D1LinearGradientBrush*, D2D_POINT_2F)
    get_gradient_stop_collection : Proc(ID2D1LinearGradientBrush*, ID2D1GradientStopCollection*, Void)
  end

  ID2D1LinearGradientBrush_GUID = LibC::GUID.new("2cd906ab-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1LinearGradientBrush = "2cd906ab-12e2-11dc-9fed-001143a055f9"
  struct ID2D1LinearGradientBrush
    lpVtbl : ID2D1LinearGradientBrushVTbl*
  end

  struct ID2D1RadialGradientBrushVTbl
    query_interface : Proc(ID2D1RadialGradientBrush*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1RadialGradientBrush*, UInt32)
    release : Proc(ID2D1RadialGradientBrush*, UInt32)
    get_factory : Proc(ID2D1RadialGradientBrush*, ID2D1Factory*, Void)
    set_opacity : Proc(ID2D1RadialGradientBrush*, Float32, Void)
    set_transform : Proc(ID2D1RadialGradientBrush*, D2D_MATRIX_3X2_F*, Void)
    get_opacity : Proc(ID2D1RadialGradientBrush*, Float32)
    get_transform : Proc(ID2D1RadialGradientBrush*, D2D_MATRIX_3X2_F*, Void)
    set_center : Proc(ID2D1RadialGradientBrush*, D2D_POINT_2F, Void)
    set_gradient_origin_offset : Proc(ID2D1RadialGradientBrush*, D2D_POINT_2F, Void)
    set_radius_x : Proc(ID2D1RadialGradientBrush*, Float32, Void)
    set_radius_y : Proc(ID2D1RadialGradientBrush*, Float32, Void)
    get_center : Proc(ID2D1RadialGradientBrush*, D2D_POINT_2F)
    get_gradient_origin_offset : Proc(ID2D1RadialGradientBrush*, D2D_POINT_2F)
    get_radius_x : Proc(ID2D1RadialGradientBrush*, Float32)
    get_radius_y : Proc(ID2D1RadialGradientBrush*, Float32)
    get_gradient_stop_collection : Proc(ID2D1RadialGradientBrush*, ID2D1GradientStopCollection*, Void)
  end

  ID2D1RadialGradientBrush_GUID = LibC::GUID.new("2cd906ac-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1RadialGradientBrush = "2cd906ac-12e2-11dc-9fed-001143a055f9"
  struct ID2D1RadialGradientBrush
    lpVtbl : ID2D1RadialGradientBrushVTbl*
  end

  struct ID2D1StrokeStyleVTbl
    query_interface : Proc(ID2D1StrokeStyle*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1StrokeStyle*, UInt32)
    release : Proc(ID2D1StrokeStyle*, UInt32)
    get_factory : Proc(ID2D1StrokeStyle*, ID2D1Factory*, Void)
    get_start_cap : Proc(ID2D1StrokeStyle*, D2D1_CAP_STYLE)
    get_end_cap : Proc(ID2D1StrokeStyle*, D2D1_CAP_STYLE)
    get_dash_cap : Proc(ID2D1StrokeStyle*, D2D1_CAP_STYLE)
    get_miter_limit : Proc(ID2D1StrokeStyle*, Float32)
    get_line_join : Proc(ID2D1StrokeStyle*, D2D1_LINE_JOIN)
    get_dash_offset : Proc(ID2D1StrokeStyle*, Float32)
    get_dash_style : Proc(ID2D1StrokeStyle*, D2D1_DASH_STYLE)
    get_dashes_count : Proc(ID2D1StrokeStyle*, UInt32)
    get_dashes : Proc(ID2D1StrokeStyle*, Float32*, UInt32, Void)
  end

  ID2D1StrokeStyle_GUID = LibC::GUID.new("2cd9069d-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1StrokeStyle = "2cd9069d-12e2-11dc-9fed-001143a055f9"
  struct ID2D1StrokeStyle
    lpVtbl : ID2D1StrokeStyleVTbl*
  end

  struct ID2D1GeometryVTbl
    query_interface : Proc(ID2D1Geometry*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Geometry*, UInt32)
    release : Proc(ID2D1Geometry*, UInt32)
    get_factory : Proc(ID2D1Geometry*, ID2D1Factory*, Void)
    get_bounds : Proc(ID2D1Geometry*, D2D_MATRIX_3X2_F*, D2D_RECT_F*, HRESULT)
    get_widened_bounds : Proc(ID2D1Geometry*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, D2D_RECT_F*, HRESULT)
    stroke_contains_point : Proc(ID2D1Geometry*, D2D_POINT_2F, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    fill_contains_point : Proc(ID2D1Geometry*, D2D_POINT_2F, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    compare_with_geometry : Proc(ID2D1Geometry*, ID2D1Geometry, D2D_MATRIX_3X2_F*, Float32, D2D1_GEOMETRY_RELATION*, HRESULT)
    simplify : Proc(ID2D1Geometry*, D2D1_GEOMETRY_SIMPLIFICATION_OPTION, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    tessellate : Proc(ID2D1Geometry*, D2D_MATRIX_3X2_F*, Float32, ID2D1TessellationSink, HRESULT)
    combine_with_geometry : Proc(ID2D1Geometry*, ID2D1Geometry, D2D1_COMBINE_MODE, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    outline : Proc(ID2D1Geometry*, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    compute_area : Proc(ID2D1Geometry*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_length : Proc(ID2D1Geometry*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_point_at_length : Proc(ID2D1Geometry*, Float32, D2D_MATRIX_3X2_F*, Float32, D2D_POINT_2F*, D2D_POINT_2F*, HRESULT)
    widen : Proc(ID2D1Geometry*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
  end

  ID2D1Geometry_GUID = LibC::GUID.new("2cd906a1-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1Geometry = "2cd906a1-12e2-11dc-9fed-001143a055f9"
  struct ID2D1Geometry
    lpVtbl : ID2D1GeometryVTbl*
  end

  struct ID2D1RectangleGeometryVTbl
    query_interface : Proc(ID2D1RectangleGeometry*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1RectangleGeometry*, UInt32)
    release : Proc(ID2D1RectangleGeometry*, UInt32)
    get_factory : Proc(ID2D1RectangleGeometry*, ID2D1Factory*, Void)
    get_bounds : Proc(ID2D1RectangleGeometry*, D2D_MATRIX_3X2_F*, D2D_RECT_F*, HRESULT)
    get_widened_bounds : Proc(ID2D1RectangleGeometry*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, D2D_RECT_F*, HRESULT)
    stroke_contains_point : Proc(ID2D1RectangleGeometry*, D2D_POINT_2F, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    fill_contains_point : Proc(ID2D1RectangleGeometry*, D2D_POINT_2F, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    compare_with_geometry : Proc(ID2D1RectangleGeometry*, ID2D1Geometry, D2D_MATRIX_3X2_F*, Float32, D2D1_GEOMETRY_RELATION*, HRESULT)
    simplify : Proc(ID2D1RectangleGeometry*, D2D1_GEOMETRY_SIMPLIFICATION_OPTION, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    tessellate : Proc(ID2D1RectangleGeometry*, D2D_MATRIX_3X2_F*, Float32, ID2D1TessellationSink, HRESULT)
    combine_with_geometry : Proc(ID2D1RectangleGeometry*, ID2D1Geometry, D2D1_COMBINE_MODE, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    outline : Proc(ID2D1RectangleGeometry*, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    compute_area : Proc(ID2D1RectangleGeometry*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_length : Proc(ID2D1RectangleGeometry*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_point_at_length : Proc(ID2D1RectangleGeometry*, Float32, D2D_MATRIX_3X2_F*, Float32, D2D_POINT_2F*, D2D_POINT_2F*, HRESULT)
    widen : Proc(ID2D1RectangleGeometry*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    get_rect : Proc(ID2D1RectangleGeometry*, D2D_RECT_F*, Void)
  end

  ID2D1RectangleGeometry_GUID = LibC::GUID.new("2cd906a2-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1RectangleGeometry = "2cd906a2-12e2-11dc-9fed-001143a055f9"
  struct ID2D1RectangleGeometry
    lpVtbl : ID2D1RectangleGeometryVTbl*
  end

  struct ID2D1RoundedRectangleGeometryVTbl
    query_interface : Proc(ID2D1RoundedRectangleGeometry*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1RoundedRectangleGeometry*, UInt32)
    release : Proc(ID2D1RoundedRectangleGeometry*, UInt32)
    get_factory : Proc(ID2D1RoundedRectangleGeometry*, ID2D1Factory*, Void)
    get_bounds : Proc(ID2D1RoundedRectangleGeometry*, D2D_MATRIX_3X2_F*, D2D_RECT_F*, HRESULT)
    get_widened_bounds : Proc(ID2D1RoundedRectangleGeometry*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, D2D_RECT_F*, HRESULT)
    stroke_contains_point : Proc(ID2D1RoundedRectangleGeometry*, D2D_POINT_2F, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    fill_contains_point : Proc(ID2D1RoundedRectangleGeometry*, D2D_POINT_2F, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    compare_with_geometry : Proc(ID2D1RoundedRectangleGeometry*, ID2D1Geometry, D2D_MATRIX_3X2_F*, Float32, D2D1_GEOMETRY_RELATION*, HRESULT)
    simplify : Proc(ID2D1RoundedRectangleGeometry*, D2D1_GEOMETRY_SIMPLIFICATION_OPTION, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    tessellate : Proc(ID2D1RoundedRectangleGeometry*, D2D_MATRIX_3X2_F*, Float32, ID2D1TessellationSink, HRESULT)
    combine_with_geometry : Proc(ID2D1RoundedRectangleGeometry*, ID2D1Geometry, D2D1_COMBINE_MODE, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    outline : Proc(ID2D1RoundedRectangleGeometry*, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    compute_area : Proc(ID2D1RoundedRectangleGeometry*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_length : Proc(ID2D1RoundedRectangleGeometry*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_point_at_length : Proc(ID2D1RoundedRectangleGeometry*, Float32, D2D_MATRIX_3X2_F*, Float32, D2D_POINT_2F*, D2D_POINT_2F*, HRESULT)
    widen : Proc(ID2D1RoundedRectangleGeometry*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    get_rounded_rect : Proc(ID2D1RoundedRectangleGeometry*, D2D1_ROUNDED_RECT*, Void)
  end

  ID2D1RoundedRectangleGeometry_GUID = LibC::GUID.new("2cd906a3-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1RoundedRectangleGeometry = "2cd906a3-12e2-11dc-9fed-001143a055f9"
  struct ID2D1RoundedRectangleGeometry
    lpVtbl : ID2D1RoundedRectangleGeometryVTbl*
  end

  struct ID2D1EllipseGeometryVTbl
    query_interface : Proc(ID2D1EllipseGeometry*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1EllipseGeometry*, UInt32)
    release : Proc(ID2D1EllipseGeometry*, UInt32)
    get_factory : Proc(ID2D1EllipseGeometry*, ID2D1Factory*, Void)
    get_bounds : Proc(ID2D1EllipseGeometry*, D2D_MATRIX_3X2_F*, D2D_RECT_F*, HRESULT)
    get_widened_bounds : Proc(ID2D1EllipseGeometry*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, D2D_RECT_F*, HRESULT)
    stroke_contains_point : Proc(ID2D1EllipseGeometry*, D2D_POINT_2F, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    fill_contains_point : Proc(ID2D1EllipseGeometry*, D2D_POINT_2F, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    compare_with_geometry : Proc(ID2D1EllipseGeometry*, ID2D1Geometry, D2D_MATRIX_3X2_F*, Float32, D2D1_GEOMETRY_RELATION*, HRESULT)
    simplify : Proc(ID2D1EllipseGeometry*, D2D1_GEOMETRY_SIMPLIFICATION_OPTION, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    tessellate : Proc(ID2D1EllipseGeometry*, D2D_MATRIX_3X2_F*, Float32, ID2D1TessellationSink, HRESULT)
    combine_with_geometry : Proc(ID2D1EllipseGeometry*, ID2D1Geometry, D2D1_COMBINE_MODE, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    outline : Proc(ID2D1EllipseGeometry*, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    compute_area : Proc(ID2D1EllipseGeometry*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_length : Proc(ID2D1EllipseGeometry*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_point_at_length : Proc(ID2D1EllipseGeometry*, Float32, D2D_MATRIX_3X2_F*, Float32, D2D_POINT_2F*, D2D_POINT_2F*, HRESULT)
    widen : Proc(ID2D1EllipseGeometry*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    get_ellipse : Proc(ID2D1EllipseGeometry*, D2D1_ELLIPSE*, Void)
  end

  ID2D1EllipseGeometry_GUID = LibC::GUID.new("2cd906a4-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1EllipseGeometry = "2cd906a4-12e2-11dc-9fed-001143a055f9"
  struct ID2D1EllipseGeometry
    lpVtbl : ID2D1EllipseGeometryVTbl*
  end

  struct ID2D1GeometryGroupVTbl
    query_interface : Proc(ID2D1GeometryGroup*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1GeometryGroup*, UInt32)
    release : Proc(ID2D1GeometryGroup*, UInt32)
    get_factory : Proc(ID2D1GeometryGroup*, ID2D1Factory*, Void)
    get_bounds : Proc(ID2D1GeometryGroup*, D2D_MATRIX_3X2_F*, D2D_RECT_F*, HRESULT)
    get_widened_bounds : Proc(ID2D1GeometryGroup*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, D2D_RECT_F*, HRESULT)
    stroke_contains_point : Proc(ID2D1GeometryGroup*, D2D_POINT_2F, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    fill_contains_point : Proc(ID2D1GeometryGroup*, D2D_POINT_2F, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    compare_with_geometry : Proc(ID2D1GeometryGroup*, ID2D1Geometry, D2D_MATRIX_3X2_F*, Float32, D2D1_GEOMETRY_RELATION*, HRESULT)
    simplify : Proc(ID2D1GeometryGroup*, D2D1_GEOMETRY_SIMPLIFICATION_OPTION, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    tessellate : Proc(ID2D1GeometryGroup*, D2D_MATRIX_3X2_F*, Float32, ID2D1TessellationSink, HRESULT)
    combine_with_geometry : Proc(ID2D1GeometryGroup*, ID2D1Geometry, D2D1_COMBINE_MODE, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    outline : Proc(ID2D1GeometryGroup*, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    compute_area : Proc(ID2D1GeometryGroup*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_length : Proc(ID2D1GeometryGroup*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_point_at_length : Proc(ID2D1GeometryGroup*, Float32, D2D_MATRIX_3X2_F*, Float32, D2D_POINT_2F*, D2D_POINT_2F*, HRESULT)
    widen : Proc(ID2D1GeometryGroup*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    get_fill_mode : Proc(ID2D1GeometryGroup*, D2D1_FILL_MODE)
    get_source_geometry_count : Proc(ID2D1GeometryGroup*, UInt32)
    get_source_geometries : Proc(ID2D1GeometryGroup*, ID2D1Geometry*, UInt32, Void)
  end

  ID2D1GeometryGroup_GUID = LibC::GUID.new("2cd906a6-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1GeometryGroup = "2cd906a6-12e2-11dc-9fed-001143a055f9"
  struct ID2D1GeometryGroup
    lpVtbl : ID2D1GeometryGroupVTbl*
  end

  struct ID2D1TransformedGeometryVTbl
    query_interface : Proc(ID2D1TransformedGeometry*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1TransformedGeometry*, UInt32)
    release : Proc(ID2D1TransformedGeometry*, UInt32)
    get_factory : Proc(ID2D1TransformedGeometry*, ID2D1Factory*, Void)
    get_bounds : Proc(ID2D1TransformedGeometry*, D2D_MATRIX_3X2_F*, D2D_RECT_F*, HRESULT)
    get_widened_bounds : Proc(ID2D1TransformedGeometry*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, D2D_RECT_F*, HRESULT)
    stroke_contains_point : Proc(ID2D1TransformedGeometry*, D2D_POINT_2F, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    fill_contains_point : Proc(ID2D1TransformedGeometry*, D2D_POINT_2F, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    compare_with_geometry : Proc(ID2D1TransformedGeometry*, ID2D1Geometry, D2D_MATRIX_3X2_F*, Float32, D2D1_GEOMETRY_RELATION*, HRESULT)
    simplify : Proc(ID2D1TransformedGeometry*, D2D1_GEOMETRY_SIMPLIFICATION_OPTION, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    tessellate : Proc(ID2D1TransformedGeometry*, D2D_MATRIX_3X2_F*, Float32, ID2D1TessellationSink, HRESULT)
    combine_with_geometry : Proc(ID2D1TransformedGeometry*, ID2D1Geometry, D2D1_COMBINE_MODE, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    outline : Proc(ID2D1TransformedGeometry*, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    compute_area : Proc(ID2D1TransformedGeometry*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_length : Proc(ID2D1TransformedGeometry*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_point_at_length : Proc(ID2D1TransformedGeometry*, Float32, D2D_MATRIX_3X2_F*, Float32, D2D_POINT_2F*, D2D_POINT_2F*, HRESULT)
    widen : Proc(ID2D1TransformedGeometry*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    get_source_geometry : Proc(ID2D1TransformedGeometry*, ID2D1Geometry*, Void)
    get_transform : Proc(ID2D1TransformedGeometry*, D2D_MATRIX_3X2_F*, Void)
  end

  ID2D1TransformedGeometry_GUID = LibC::GUID.new("2cd906bb-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1TransformedGeometry = "2cd906bb-12e2-11dc-9fed-001143a055f9"
  struct ID2D1TransformedGeometry
    lpVtbl : ID2D1TransformedGeometryVTbl*
  end

  struct ID2D1GeometrySinkVTbl
    query_interface : Proc(ID2D1GeometrySink*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1GeometrySink*, UInt32)
    release : Proc(ID2D1GeometrySink*, UInt32)
    set_fill_mode : Proc(ID2D1GeometrySink*, D2D1_FILL_MODE, Void)
    set_segment_flags : Proc(ID2D1GeometrySink*, D2D1_PATH_SEGMENT, Void)
    begin_figure : Proc(ID2D1GeometrySink*, D2D_POINT_2F, D2D1_FIGURE_BEGIN, Void)
    add_lines : Proc(ID2D1GeometrySink*, D2D_POINT_2F*, UInt32, Void)
    add_beziers : Proc(ID2D1GeometrySink*, D2D1_BEZIER_SEGMENT*, UInt32, Void)
    end_figure : Proc(ID2D1GeometrySink*, D2D1_FIGURE_END, Void)
    close : Proc(ID2D1GeometrySink*, HRESULT)
    add_line : Proc(ID2D1GeometrySink*, D2D_POINT_2F, Void)
    add_bezier : Proc(ID2D1GeometrySink*, D2D1_BEZIER_SEGMENT*, Void)
    add_quadratic_bezier : Proc(ID2D1GeometrySink*, D2D1_QUADRATIC_BEZIER_SEGMENT*, Void)
    add_quadratic_beziers : Proc(ID2D1GeometrySink*, D2D1_QUADRATIC_BEZIER_SEGMENT*, UInt32, Void)
    add_arc : Proc(ID2D1GeometrySink*, D2D1_ARC_SEGMENT*, Void)
  end

  ID2D1GeometrySink_GUID = LibC::GUID.new("2cd9069f-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1GeometrySink = "2cd9069f-12e2-11dc-9fed-001143a055f9"
  struct ID2D1GeometrySink
    lpVtbl : ID2D1GeometrySinkVTbl*
  end

  struct ID2D1TessellationSinkVTbl
    query_interface : Proc(ID2D1TessellationSink*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1TessellationSink*, UInt32)
    release : Proc(ID2D1TessellationSink*, UInt32)
    add_triangles : Proc(ID2D1TessellationSink*, D2D1_TRIANGLE*, UInt32, Void)
    close : Proc(ID2D1TessellationSink*, HRESULT)
  end

  ID2D1TessellationSink_GUID = LibC::GUID.new("2cd906c1-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1TessellationSink = "2cd906c1-12e2-11dc-9fed-001143a055f9"
  struct ID2D1TessellationSink
    lpVtbl : ID2D1TessellationSinkVTbl*
  end

  struct ID2D1PathGeometryVTbl
    query_interface : Proc(ID2D1PathGeometry*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1PathGeometry*, UInt32)
    release : Proc(ID2D1PathGeometry*, UInt32)
    get_factory : Proc(ID2D1PathGeometry*, ID2D1Factory*, Void)
    get_bounds : Proc(ID2D1PathGeometry*, D2D_MATRIX_3X2_F*, D2D_RECT_F*, HRESULT)
    get_widened_bounds : Proc(ID2D1PathGeometry*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, D2D_RECT_F*, HRESULT)
    stroke_contains_point : Proc(ID2D1PathGeometry*, D2D_POINT_2F, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    fill_contains_point : Proc(ID2D1PathGeometry*, D2D_POINT_2F, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    compare_with_geometry : Proc(ID2D1PathGeometry*, ID2D1Geometry, D2D_MATRIX_3X2_F*, Float32, D2D1_GEOMETRY_RELATION*, HRESULT)
    simplify : Proc(ID2D1PathGeometry*, D2D1_GEOMETRY_SIMPLIFICATION_OPTION, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    tessellate : Proc(ID2D1PathGeometry*, D2D_MATRIX_3X2_F*, Float32, ID2D1TessellationSink, HRESULT)
    combine_with_geometry : Proc(ID2D1PathGeometry*, ID2D1Geometry, D2D1_COMBINE_MODE, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    outline : Proc(ID2D1PathGeometry*, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    compute_area : Proc(ID2D1PathGeometry*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_length : Proc(ID2D1PathGeometry*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_point_at_length : Proc(ID2D1PathGeometry*, Float32, D2D_MATRIX_3X2_F*, Float32, D2D_POINT_2F*, D2D_POINT_2F*, HRESULT)
    widen : Proc(ID2D1PathGeometry*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    open : Proc(ID2D1PathGeometry*, ID2D1GeometrySink*, HRESULT)
    stream : Proc(ID2D1PathGeometry*, ID2D1GeometrySink, HRESULT)
    get_segment_count : Proc(ID2D1PathGeometry*, UInt32*, HRESULT)
    get_figure_count : Proc(ID2D1PathGeometry*, UInt32*, HRESULT)
  end

  ID2D1PathGeometry_GUID = LibC::GUID.new("2cd906a5-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1PathGeometry = "2cd906a5-12e2-11dc-9fed-001143a055f9"
  struct ID2D1PathGeometry
    lpVtbl : ID2D1PathGeometryVTbl*
  end

  struct ID2D1MeshVTbl
    query_interface : Proc(ID2D1Mesh*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Mesh*, UInt32)
    release : Proc(ID2D1Mesh*, UInt32)
    get_factory : Proc(ID2D1Mesh*, ID2D1Factory*, Void)
    open : Proc(ID2D1Mesh*, ID2D1TessellationSink*, HRESULT)
  end

  ID2D1Mesh_GUID = LibC::GUID.new("2cd906c2-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1Mesh = "2cd906c2-12e2-11dc-9fed-001143a055f9"
  struct ID2D1Mesh
    lpVtbl : ID2D1MeshVTbl*
  end

  struct ID2D1LayerVTbl
    query_interface : Proc(ID2D1Layer*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Layer*, UInt32)
    release : Proc(ID2D1Layer*, UInt32)
    get_factory : Proc(ID2D1Layer*, ID2D1Factory*, Void)
    get_size : Proc(ID2D1Layer*, D2D_SIZE_F)
  end

  ID2D1Layer_GUID = LibC::GUID.new("2cd9069b-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1Layer = "2cd9069b-12e2-11dc-9fed-001143a055f9"
  struct ID2D1Layer
    lpVtbl : ID2D1LayerVTbl*
  end

  struct ID2D1DrawingStateBlockVTbl
    query_interface : Proc(ID2D1DrawingStateBlock*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1DrawingStateBlock*, UInt32)
    release : Proc(ID2D1DrawingStateBlock*, UInt32)
    get_factory : Proc(ID2D1DrawingStateBlock*, ID2D1Factory*, Void)
    get_description : Proc(ID2D1DrawingStateBlock*, D2D1_DRAWING_STATE_DESCRIPTION*, Void)
    set_description : Proc(ID2D1DrawingStateBlock*, D2D1_DRAWING_STATE_DESCRIPTION*, Void)
    set_text_rendering_params : Proc(ID2D1DrawingStateBlock*, IDWriteRenderingParams, Void)
    get_text_rendering_params : Proc(ID2D1DrawingStateBlock*, IDWriteRenderingParams*, Void)
  end

  ID2D1DrawingStateBlock_GUID = LibC::GUID.new("28506e39-ebf6-46a1-bb47-fd85565ab957")
  CLSID_ID2D1DrawingStateBlock = "28506e39-ebf6-46a1-bb47-fd85565ab957"
  struct ID2D1DrawingStateBlock
    lpVtbl : ID2D1DrawingStateBlockVTbl*
  end

  struct ID2D1RenderTargetVTbl
    query_interface : Proc(ID2D1RenderTarget*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1RenderTarget*, UInt32)
    release : Proc(ID2D1RenderTarget*, UInt32)
    get_factory : Proc(ID2D1RenderTarget*, ID2D1Factory*, Void)
    create_bitmap : Proc(ID2D1RenderTarget*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_from_wic_bitmap : Proc(ID2D1RenderTarget*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_shared_bitmap : Proc(ID2D1RenderTarget*, Guid*, Void*, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_brush : Proc(ID2D1RenderTarget*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush*, HRESULT)
    create_solid_color_brush : Proc(ID2D1RenderTarget*, D2D1_COLOR_F*, D2D1_BRUSH_PROPERTIES*, ID2D1SolidColorBrush*, HRESULT)
    create_gradient_stop_collection : Proc(ID2D1RenderTarget*, D2D1_GRADIENT_STOP*, UInt32, D2D1_GAMMA, D2D1_EXTEND_MODE, ID2D1GradientStopCollection*, HRESULT)
    create_linear_gradient_brush : Proc(ID2D1RenderTarget*, D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1LinearGradientBrush*, HRESULT)
    create_radial_gradient_brush : Proc(ID2D1RenderTarget*, D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1RadialGradientBrush*, HRESULT)
    create_compatible_render_target : Proc(ID2D1RenderTarget*, D2D_SIZE_F*, D2D_SIZE_U*, D2D1_PIXEL_FORMAT*, D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS, ID2D1BitmapRenderTarget*, HRESULT)
    create_layer : Proc(ID2D1RenderTarget*, D2D_SIZE_F*, ID2D1Layer*, HRESULT)
    create_mesh : Proc(ID2D1RenderTarget*, ID2D1Mesh*, HRESULT)
    draw_line : Proc(ID2D1RenderTarget*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    draw_rectangle : Proc(ID2D1RenderTarget*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rectangle : Proc(ID2D1RenderTarget*, D2D_RECT_F*, ID2D1Brush, Void)
    draw_rounded_rectangle : Proc(ID2D1RenderTarget*, D2D1_ROUNDED_RECT*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rounded_rectangle : Proc(ID2D1RenderTarget*, D2D1_ROUNDED_RECT*, ID2D1Brush, Void)
    draw_ellipse : Proc(ID2D1RenderTarget*, D2D1_ELLIPSE*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_ellipse : Proc(ID2D1RenderTarget*, D2D1_ELLIPSE*, ID2D1Brush, Void)
    draw_geometry : Proc(ID2D1RenderTarget*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_geometry : Proc(ID2D1RenderTarget*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, Void)
    fill_mesh : Proc(ID2D1RenderTarget*, ID2D1Mesh, ID2D1Brush, Void)
    fill_opacity_mask : Proc(ID2D1RenderTarget*, ID2D1Bitmap, ID2D1Brush, D2D1_OPACITY_MASK_CONTENT, D2D_RECT_F*, D2D_RECT_F*, Void)
    draw_bitmap : Proc(ID2D1RenderTarget*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_BITMAP_INTERPOLATION_MODE, D2D_RECT_F*, Void)
    draw_text : Proc(ID2D1RenderTarget*, Char*, UInt32, IDWriteTextFormat, D2D_RECT_F*, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE, Void)
    draw_text_layout : Proc(ID2D1RenderTarget*, D2D_POINT_2F, IDWriteTextLayout, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, Void)
    draw_glyph_run : Proc(ID2D1RenderTarget*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    set_transform : Proc(ID2D1RenderTarget*, D2D_MATRIX_3X2_F*, Void)
    get_transform : Proc(ID2D1RenderTarget*, D2D_MATRIX_3X2_F*, Void)
    set_antialias_mode : Proc(ID2D1RenderTarget*, D2D1_ANTIALIAS_MODE, Void)
    get_antialias_mode : Proc(ID2D1RenderTarget*, D2D1_ANTIALIAS_MODE)
    set_text_antialias_mode : Proc(ID2D1RenderTarget*, D2D1_TEXT_ANTIALIAS_MODE, Void)
    get_text_antialias_mode : Proc(ID2D1RenderTarget*, D2D1_TEXT_ANTIALIAS_MODE)
    set_text_rendering_params : Proc(ID2D1RenderTarget*, IDWriteRenderingParams, Void)
    get_text_rendering_params : Proc(ID2D1RenderTarget*, IDWriteRenderingParams*, Void)
    set_tags : Proc(ID2D1RenderTarget*, UInt64, UInt64, Void)
    get_tags : Proc(ID2D1RenderTarget*, UInt64*, UInt64*, Void)
    push_layer : Proc(ID2D1RenderTarget*, D2D1_LAYER_PARAMETERS*, ID2D1Layer, Void)
    pop_layer : Proc(ID2D1RenderTarget*, Void)
    flush : Proc(ID2D1RenderTarget*, UInt64*, UInt64*, HRESULT)
    save_drawing_state : Proc(ID2D1RenderTarget*, ID2D1DrawingStateBlock, Void)
    restore_drawing_state : Proc(ID2D1RenderTarget*, ID2D1DrawingStateBlock, Void)
    push_axis_aligned_clip : Proc(ID2D1RenderTarget*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, Void)
    pop_axis_aligned_clip : Proc(ID2D1RenderTarget*, Void)
    clear : Proc(ID2D1RenderTarget*, D2D1_COLOR_F*, Void)
    begin_draw : Proc(ID2D1RenderTarget*, Void)
    end_draw : Proc(ID2D1RenderTarget*, UInt64*, UInt64*, HRESULT)
    get_pixel_format : Proc(ID2D1RenderTarget*, D2D1_PIXEL_FORMAT)
    set_dpi : Proc(ID2D1RenderTarget*, Float32, Float32, Void)
    get_dpi : Proc(ID2D1RenderTarget*, Float32*, Float32*, Void)
    get_size : Proc(ID2D1RenderTarget*, D2D_SIZE_F)
    get_pixel_size : Proc(ID2D1RenderTarget*, D2D_SIZE_U)
    get_maximum_bitmap_size : Proc(ID2D1RenderTarget*, UInt32)
    is_supported : Proc(ID2D1RenderTarget*, D2D1_RENDER_TARGET_PROPERTIES*, LibC::BOOL)
  end

  ID2D1RenderTarget_GUID = LibC::GUID.new("2cd90694-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1RenderTarget = "2cd90694-12e2-11dc-9fed-001143a055f9"
  struct ID2D1RenderTarget
    lpVtbl : ID2D1RenderTargetVTbl*
  end

  struct ID2D1BitmapRenderTargetVTbl
    query_interface : Proc(ID2D1BitmapRenderTarget*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1BitmapRenderTarget*, UInt32)
    release : Proc(ID2D1BitmapRenderTarget*, UInt32)
    get_factory : Proc(ID2D1BitmapRenderTarget*, ID2D1Factory*, Void)
    create_bitmap : Proc(ID2D1BitmapRenderTarget*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_from_wic_bitmap : Proc(ID2D1BitmapRenderTarget*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_shared_bitmap : Proc(ID2D1BitmapRenderTarget*, Guid*, Void*, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_brush : Proc(ID2D1BitmapRenderTarget*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush*, HRESULT)
    create_solid_color_brush : Proc(ID2D1BitmapRenderTarget*, D2D1_COLOR_F*, D2D1_BRUSH_PROPERTIES*, ID2D1SolidColorBrush*, HRESULT)
    create_gradient_stop_collection : Proc(ID2D1BitmapRenderTarget*, D2D1_GRADIENT_STOP*, UInt32, D2D1_GAMMA, D2D1_EXTEND_MODE, ID2D1GradientStopCollection*, HRESULT)
    create_linear_gradient_brush : Proc(ID2D1BitmapRenderTarget*, D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1LinearGradientBrush*, HRESULT)
    create_radial_gradient_brush : Proc(ID2D1BitmapRenderTarget*, D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1RadialGradientBrush*, HRESULT)
    create_compatible_render_target : Proc(ID2D1BitmapRenderTarget*, D2D_SIZE_F*, D2D_SIZE_U*, D2D1_PIXEL_FORMAT*, D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS, ID2D1BitmapRenderTarget*, HRESULT)
    create_layer : Proc(ID2D1BitmapRenderTarget*, D2D_SIZE_F*, ID2D1Layer*, HRESULT)
    create_mesh : Proc(ID2D1BitmapRenderTarget*, ID2D1Mesh*, HRESULT)
    draw_line : Proc(ID2D1BitmapRenderTarget*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    draw_rectangle : Proc(ID2D1BitmapRenderTarget*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rectangle : Proc(ID2D1BitmapRenderTarget*, D2D_RECT_F*, ID2D1Brush, Void)
    draw_rounded_rectangle : Proc(ID2D1BitmapRenderTarget*, D2D1_ROUNDED_RECT*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rounded_rectangle : Proc(ID2D1BitmapRenderTarget*, D2D1_ROUNDED_RECT*, ID2D1Brush, Void)
    draw_ellipse : Proc(ID2D1BitmapRenderTarget*, D2D1_ELLIPSE*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_ellipse : Proc(ID2D1BitmapRenderTarget*, D2D1_ELLIPSE*, ID2D1Brush, Void)
    draw_geometry : Proc(ID2D1BitmapRenderTarget*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_geometry : Proc(ID2D1BitmapRenderTarget*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, Void)
    fill_mesh : Proc(ID2D1BitmapRenderTarget*, ID2D1Mesh, ID2D1Brush, Void)
    fill_opacity_mask : Proc(ID2D1BitmapRenderTarget*, ID2D1Bitmap, ID2D1Brush, D2D1_OPACITY_MASK_CONTENT, D2D_RECT_F*, D2D_RECT_F*, Void)
    draw_bitmap : Proc(ID2D1BitmapRenderTarget*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_BITMAP_INTERPOLATION_MODE, D2D_RECT_F*, Void)
    draw_text : Proc(ID2D1BitmapRenderTarget*, Char*, UInt32, IDWriteTextFormat, D2D_RECT_F*, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE, Void)
    draw_text_layout : Proc(ID2D1BitmapRenderTarget*, D2D_POINT_2F, IDWriteTextLayout, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, Void)
    draw_glyph_run : Proc(ID2D1BitmapRenderTarget*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    set_transform : Proc(ID2D1BitmapRenderTarget*, D2D_MATRIX_3X2_F*, Void)
    get_transform : Proc(ID2D1BitmapRenderTarget*, D2D_MATRIX_3X2_F*, Void)
    set_antialias_mode : Proc(ID2D1BitmapRenderTarget*, D2D1_ANTIALIAS_MODE, Void)
    get_antialias_mode : Proc(ID2D1BitmapRenderTarget*, D2D1_ANTIALIAS_MODE)
    set_text_antialias_mode : Proc(ID2D1BitmapRenderTarget*, D2D1_TEXT_ANTIALIAS_MODE, Void)
    get_text_antialias_mode : Proc(ID2D1BitmapRenderTarget*, D2D1_TEXT_ANTIALIAS_MODE)
    set_text_rendering_params : Proc(ID2D1BitmapRenderTarget*, IDWriteRenderingParams, Void)
    get_text_rendering_params : Proc(ID2D1BitmapRenderTarget*, IDWriteRenderingParams*, Void)
    set_tags : Proc(ID2D1BitmapRenderTarget*, UInt64, UInt64, Void)
    get_tags : Proc(ID2D1BitmapRenderTarget*, UInt64*, UInt64*, Void)
    push_layer : Proc(ID2D1BitmapRenderTarget*, D2D1_LAYER_PARAMETERS*, ID2D1Layer, Void)
    pop_layer : Proc(ID2D1BitmapRenderTarget*, Void)
    flush : Proc(ID2D1BitmapRenderTarget*, UInt64*, UInt64*, HRESULT)
    save_drawing_state : Proc(ID2D1BitmapRenderTarget*, ID2D1DrawingStateBlock, Void)
    restore_drawing_state : Proc(ID2D1BitmapRenderTarget*, ID2D1DrawingStateBlock, Void)
    push_axis_aligned_clip : Proc(ID2D1BitmapRenderTarget*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, Void)
    pop_axis_aligned_clip : Proc(ID2D1BitmapRenderTarget*, Void)
    clear : Proc(ID2D1BitmapRenderTarget*, D2D1_COLOR_F*, Void)
    begin_draw : Proc(ID2D1BitmapRenderTarget*, Void)
    end_draw : Proc(ID2D1BitmapRenderTarget*, UInt64*, UInt64*, HRESULT)
    get_pixel_format : Proc(ID2D1BitmapRenderTarget*, D2D1_PIXEL_FORMAT)
    set_dpi : Proc(ID2D1BitmapRenderTarget*, Float32, Float32, Void)
    get_dpi : Proc(ID2D1BitmapRenderTarget*, Float32*, Float32*, Void)
    get_size : Proc(ID2D1BitmapRenderTarget*, D2D_SIZE_F)
    get_pixel_size : Proc(ID2D1BitmapRenderTarget*, D2D_SIZE_U)
    get_maximum_bitmap_size : Proc(ID2D1BitmapRenderTarget*, UInt32)
    is_supported : Proc(ID2D1BitmapRenderTarget*, D2D1_RENDER_TARGET_PROPERTIES*, LibC::BOOL)
    get_bitmap : Proc(ID2D1BitmapRenderTarget*, ID2D1Bitmap*, HRESULT)
  end

  ID2D1BitmapRenderTarget_GUID = LibC::GUID.new("2cd90695-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1BitmapRenderTarget = "2cd90695-12e2-11dc-9fed-001143a055f9"
  struct ID2D1BitmapRenderTarget
    lpVtbl : ID2D1BitmapRenderTargetVTbl*
  end

  struct ID2D1HwndRenderTargetVTbl
    query_interface : Proc(ID2D1HwndRenderTarget*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1HwndRenderTarget*, UInt32)
    release : Proc(ID2D1HwndRenderTarget*, UInt32)
    get_factory : Proc(ID2D1HwndRenderTarget*, ID2D1Factory*, Void)
    create_bitmap : Proc(ID2D1HwndRenderTarget*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_from_wic_bitmap : Proc(ID2D1HwndRenderTarget*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_shared_bitmap : Proc(ID2D1HwndRenderTarget*, Guid*, Void*, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_brush : Proc(ID2D1HwndRenderTarget*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush*, HRESULT)
    create_solid_color_brush : Proc(ID2D1HwndRenderTarget*, D2D1_COLOR_F*, D2D1_BRUSH_PROPERTIES*, ID2D1SolidColorBrush*, HRESULT)
    create_gradient_stop_collection : Proc(ID2D1HwndRenderTarget*, D2D1_GRADIENT_STOP*, UInt32, D2D1_GAMMA, D2D1_EXTEND_MODE, ID2D1GradientStopCollection*, HRESULT)
    create_linear_gradient_brush : Proc(ID2D1HwndRenderTarget*, D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1LinearGradientBrush*, HRESULT)
    create_radial_gradient_brush : Proc(ID2D1HwndRenderTarget*, D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1RadialGradientBrush*, HRESULT)
    create_compatible_render_target : Proc(ID2D1HwndRenderTarget*, D2D_SIZE_F*, D2D_SIZE_U*, D2D1_PIXEL_FORMAT*, D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS, ID2D1BitmapRenderTarget*, HRESULT)
    create_layer : Proc(ID2D1HwndRenderTarget*, D2D_SIZE_F*, ID2D1Layer*, HRESULT)
    create_mesh : Proc(ID2D1HwndRenderTarget*, ID2D1Mesh*, HRESULT)
    draw_line : Proc(ID2D1HwndRenderTarget*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    draw_rectangle : Proc(ID2D1HwndRenderTarget*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rectangle : Proc(ID2D1HwndRenderTarget*, D2D_RECT_F*, ID2D1Brush, Void)
    draw_rounded_rectangle : Proc(ID2D1HwndRenderTarget*, D2D1_ROUNDED_RECT*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rounded_rectangle : Proc(ID2D1HwndRenderTarget*, D2D1_ROUNDED_RECT*, ID2D1Brush, Void)
    draw_ellipse : Proc(ID2D1HwndRenderTarget*, D2D1_ELLIPSE*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_ellipse : Proc(ID2D1HwndRenderTarget*, D2D1_ELLIPSE*, ID2D1Brush, Void)
    draw_geometry : Proc(ID2D1HwndRenderTarget*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_geometry : Proc(ID2D1HwndRenderTarget*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, Void)
    fill_mesh : Proc(ID2D1HwndRenderTarget*, ID2D1Mesh, ID2D1Brush, Void)
    fill_opacity_mask : Proc(ID2D1HwndRenderTarget*, ID2D1Bitmap, ID2D1Brush, D2D1_OPACITY_MASK_CONTENT, D2D_RECT_F*, D2D_RECT_F*, Void)
    draw_bitmap : Proc(ID2D1HwndRenderTarget*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_BITMAP_INTERPOLATION_MODE, D2D_RECT_F*, Void)
    draw_text : Proc(ID2D1HwndRenderTarget*, Char*, UInt32, IDWriteTextFormat, D2D_RECT_F*, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE, Void)
    draw_text_layout : Proc(ID2D1HwndRenderTarget*, D2D_POINT_2F, IDWriteTextLayout, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, Void)
    draw_glyph_run : Proc(ID2D1HwndRenderTarget*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    set_transform : Proc(ID2D1HwndRenderTarget*, D2D_MATRIX_3X2_F*, Void)
    get_transform : Proc(ID2D1HwndRenderTarget*, D2D_MATRIX_3X2_F*, Void)
    set_antialias_mode : Proc(ID2D1HwndRenderTarget*, D2D1_ANTIALIAS_MODE, Void)
    get_antialias_mode : Proc(ID2D1HwndRenderTarget*, D2D1_ANTIALIAS_MODE)
    set_text_antialias_mode : Proc(ID2D1HwndRenderTarget*, D2D1_TEXT_ANTIALIAS_MODE, Void)
    get_text_antialias_mode : Proc(ID2D1HwndRenderTarget*, D2D1_TEXT_ANTIALIAS_MODE)
    set_text_rendering_params : Proc(ID2D1HwndRenderTarget*, IDWriteRenderingParams, Void)
    get_text_rendering_params : Proc(ID2D1HwndRenderTarget*, IDWriteRenderingParams*, Void)
    set_tags : Proc(ID2D1HwndRenderTarget*, UInt64, UInt64, Void)
    get_tags : Proc(ID2D1HwndRenderTarget*, UInt64*, UInt64*, Void)
    push_layer : Proc(ID2D1HwndRenderTarget*, D2D1_LAYER_PARAMETERS*, ID2D1Layer, Void)
    pop_layer : Proc(ID2D1HwndRenderTarget*, Void)
    flush : Proc(ID2D1HwndRenderTarget*, UInt64*, UInt64*, HRESULT)
    save_drawing_state : Proc(ID2D1HwndRenderTarget*, ID2D1DrawingStateBlock, Void)
    restore_drawing_state : Proc(ID2D1HwndRenderTarget*, ID2D1DrawingStateBlock, Void)
    push_axis_aligned_clip : Proc(ID2D1HwndRenderTarget*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, Void)
    pop_axis_aligned_clip : Proc(ID2D1HwndRenderTarget*, Void)
    clear : Proc(ID2D1HwndRenderTarget*, D2D1_COLOR_F*, Void)
    begin_draw : Proc(ID2D1HwndRenderTarget*, Void)
    end_draw : Proc(ID2D1HwndRenderTarget*, UInt64*, UInt64*, HRESULT)
    get_pixel_format : Proc(ID2D1HwndRenderTarget*, D2D1_PIXEL_FORMAT)
    set_dpi : Proc(ID2D1HwndRenderTarget*, Float32, Float32, Void)
    get_dpi : Proc(ID2D1HwndRenderTarget*, Float32*, Float32*, Void)
    get_size : Proc(ID2D1HwndRenderTarget*, D2D_SIZE_F)
    get_pixel_size : Proc(ID2D1HwndRenderTarget*, D2D_SIZE_U)
    get_maximum_bitmap_size : Proc(ID2D1HwndRenderTarget*, UInt32)
    is_supported : Proc(ID2D1HwndRenderTarget*, D2D1_RENDER_TARGET_PROPERTIES*, LibC::BOOL)
    check_window_state : Proc(ID2D1HwndRenderTarget*, D2D1_WINDOW_STATE)
    resize : Proc(ID2D1HwndRenderTarget*, D2D_SIZE_U*, HRESULT)
    get_hwnd : Proc(ID2D1HwndRenderTarget*, HANDLE)
  end

  ID2D1HwndRenderTarget_GUID = LibC::GUID.new("2cd90698-12e2-11dc-9fed-001143a055f9")
  CLSID_ID2D1HwndRenderTarget = "2cd90698-12e2-11dc-9fed-001143a055f9"
  struct ID2D1HwndRenderTarget
    lpVtbl : ID2D1HwndRenderTargetVTbl*
  end

  struct ID2D1GdiInteropRenderTargetVTbl
    query_interface : Proc(ID2D1GdiInteropRenderTarget*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1GdiInteropRenderTarget*, UInt32)
    release : Proc(ID2D1GdiInteropRenderTarget*, UInt32)
    get_dc : Proc(ID2D1GdiInteropRenderTarget*, D2D1_DC_INITIALIZE_MODE, HDC*, HRESULT)
    release_dc : Proc(ID2D1GdiInteropRenderTarget*, RECT*, HRESULT)
  end

  ID2D1GdiInteropRenderTarget_GUID = LibC::GUID.new("e0db51c3-6f77-4bae-b3d5-e47509b35838")
  CLSID_ID2D1GdiInteropRenderTarget = "e0db51c3-6f77-4bae-b3d5-e47509b35838"
  struct ID2D1GdiInteropRenderTarget
    lpVtbl : ID2D1GdiInteropRenderTargetVTbl*
  end

  struct ID2D1DCRenderTargetVTbl
    query_interface : Proc(ID2D1DCRenderTarget*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1DCRenderTarget*, UInt32)
    release : Proc(ID2D1DCRenderTarget*, UInt32)
    get_factory : Proc(ID2D1DCRenderTarget*, ID2D1Factory*, Void)
    create_bitmap : Proc(ID2D1DCRenderTarget*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_from_wic_bitmap : Proc(ID2D1DCRenderTarget*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_shared_bitmap : Proc(ID2D1DCRenderTarget*, Guid*, Void*, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_brush : Proc(ID2D1DCRenderTarget*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush*, HRESULT)
    create_solid_color_brush : Proc(ID2D1DCRenderTarget*, D2D1_COLOR_F*, D2D1_BRUSH_PROPERTIES*, ID2D1SolidColorBrush*, HRESULT)
    create_gradient_stop_collection : Proc(ID2D1DCRenderTarget*, D2D1_GRADIENT_STOP*, UInt32, D2D1_GAMMA, D2D1_EXTEND_MODE, ID2D1GradientStopCollection*, HRESULT)
    create_linear_gradient_brush : Proc(ID2D1DCRenderTarget*, D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1LinearGradientBrush*, HRESULT)
    create_radial_gradient_brush : Proc(ID2D1DCRenderTarget*, D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1RadialGradientBrush*, HRESULT)
    create_compatible_render_target : Proc(ID2D1DCRenderTarget*, D2D_SIZE_F*, D2D_SIZE_U*, D2D1_PIXEL_FORMAT*, D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS, ID2D1BitmapRenderTarget*, HRESULT)
    create_layer : Proc(ID2D1DCRenderTarget*, D2D_SIZE_F*, ID2D1Layer*, HRESULT)
    create_mesh : Proc(ID2D1DCRenderTarget*, ID2D1Mesh*, HRESULT)
    draw_line : Proc(ID2D1DCRenderTarget*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    draw_rectangle : Proc(ID2D1DCRenderTarget*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rectangle : Proc(ID2D1DCRenderTarget*, D2D_RECT_F*, ID2D1Brush, Void)
    draw_rounded_rectangle : Proc(ID2D1DCRenderTarget*, D2D1_ROUNDED_RECT*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rounded_rectangle : Proc(ID2D1DCRenderTarget*, D2D1_ROUNDED_RECT*, ID2D1Brush, Void)
    draw_ellipse : Proc(ID2D1DCRenderTarget*, D2D1_ELLIPSE*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_ellipse : Proc(ID2D1DCRenderTarget*, D2D1_ELLIPSE*, ID2D1Brush, Void)
    draw_geometry : Proc(ID2D1DCRenderTarget*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_geometry : Proc(ID2D1DCRenderTarget*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, Void)
    fill_mesh : Proc(ID2D1DCRenderTarget*, ID2D1Mesh, ID2D1Brush, Void)
    fill_opacity_mask : Proc(ID2D1DCRenderTarget*, ID2D1Bitmap, ID2D1Brush, D2D1_OPACITY_MASK_CONTENT, D2D_RECT_F*, D2D_RECT_F*, Void)
    draw_bitmap : Proc(ID2D1DCRenderTarget*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_BITMAP_INTERPOLATION_MODE, D2D_RECT_F*, Void)
    draw_text : Proc(ID2D1DCRenderTarget*, Char*, UInt32, IDWriteTextFormat, D2D_RECT_F*, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE, Void)
    draw_text_layout : Proc(ID2D1DCRenderTarget*, D2D_POINT_2F, IDWriteTextLayout, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, Void)
    draw_glyph_run : Proc(ID2D1DCRenderTarget*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    set_transform : Proc(ID2D1DCRenderTarget*, D2D_MATRIX_3X2_F*, Void)
    get_transform : Proc(ID2D1DCRenderTarget*, D2D_MATRIX_3X2_F*, Void)
    set_antialias_mode : Proc(ID2D1DCRenderTarget*, D2D1_ANTIALIAS_MODE, Void)
    get_antialias_mode : Proc(ID2D1DCRenderTarget*, D2D1_ANTIALIAS_MODE)
    set_text_antialias_mode : Proc(ID2D1DCRenderTarget*, D2D1_TEXT_ANTIALIAS_MODE, Void)
    get_text_antialias_mode : Proc(ID2D1DCRenderTarget*, D2D1_TEXT_ANTIALIAS_MODE)
    set_text_rendering_params : Proc(ID2D1DCRenderTarget*, IDWriteRenderingParams, Void)
    get_text_rendering_params : Proc(ID2D1DCRenderTarget*, IDWriteRenderingParams*, Void)
    set_tags : Proc(ID2D1DCRenderTarget*, UInt64, UInt64, Void)
    get_tags : Proc(ID2D1DCRenderTarget*, UInt64*, UInt64*, Void)
    push_layer : Proc(ID2D1DCRenderTarget*, D2D1_LAYER_PARAMETERS*, ID2D1Layer, Void)
    pop_layer : Proc(ID2D1DCRenderTarget*, Void)
    flush : Proc(ID2D1DCRenderTarget*, UInt64*, UInt64*, HRESULT)
    save_drawing_state : Proc(ID2D1DCRenderTarget*, ID2D1DrawingStateBlock, Void)
    restore_drawing_state : Proc(ID2D1DCRenderTarget*, ID2D1DrawingStateBlock, Void)
    push_axis_aligned_clip : Proc(ID2D1DCRenderTarget*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, Void)
    pop_axis_aligned_clip : Proc(ID2D1DCRenderTarget*, Void)
    clear : Proc(ID2D1DCRenderTarget*, D2D1_COLOR_F*, Void)
    begin_draw : Proc(ID2D1DCRenderTarget*, Void)
    end_draw : Proc(ID2D1DCRenderTarget*, UInt64*, UInt64*, HRESULT)
    get_pixel_format : Proc(ID2D1DCRenderTarget*, D2D1_PIXEL_FORMAT)
    set_dpi : Proc(ID2D1DCRenderTarget*, Float32, Float32, Void)
    get_dpi : Proc(ID2D1DCRenderTarget*, Float32*, Float32*, Void)
    get_size : Proc(ID2D1DCRenderTarget*, D2D_SIZE_F)
    get_pixel_size : Proc(ID2D1DCRenderTarget*, D2D_SIZE_U)
    get_maximum_bitmap_size : Proc(ID2D1DCRenderTarget*, UInt32)
    is_supported : Proc(ID2D1DCRenderTarget*, D2D1_RENDER_TARGET_PROPERTIES*, LibC::BOOL)
    bind_dc : Proc(ID2D1DCRenderTarget*, HDC, RECT*, HRESULT)
  end

  ID2D1DCRenderTarget_GUID = LibC::GUID.new("1c51bc64-de61-46fd-9899-63a5d8f03950")
  CLSID_ID2D1DCRenderTarget = "1c51bc64-de61-46fd-9899-63a5d8f03950"
  struct ID2D1DCRenderTarget
    lpVtbl : ID2D1DCRenderTargetVTbl*
  end

  struct ID2D1FactoryVTbl
    query_interface : Proc(ID2D1Factory*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Factory*, UInt32)
    release : Proc(ID2D1Factory*, UInt32)
    reload_system_metrics : Proc(ID2D1Factory*, HRESULT)
    get_desktop_dpi : Proc(ID2D1Factory*, Float32*, Float32*, Void)
    create_rectangle_geometry : Proc(ID2D1Factory*, D2D_RECT_F*, ID2D1RectangleGeometry*, HRESULT)
    create_rounded_rectangle_geometry : Proc(ID2D1Factory*, D2D1_ROUNDED_RECT*, ID2D1RoundedRectangleGeometry*, HRESULT)
    create_ellipse_geometry : Proc(ID2D1Factory*, D2D1_ELLIPSE*, ID2D1EllipseGeometry*, HRESULT)
    create_geometry_group : Proc(ID2D1Factory*, D2D1_FILL_MODE, ID2D1Geometry*, UInt32, ID2D1GeometryGroup*, HRESULT)
    create_transformed_geometry : Proc(ID2D1Factory*, ID2D1Geometry, D2D_MATRIX_3X2_F*, ID2D1TransformedGeometry*, HRESULT)
    create_path_geometry : Proc(ID2D1Factory*, ID2D1PathGeometry*, HRESULT)
    create_stroke_style : Proc(ID2D1Factory*, D2D1_STROKE_STYLE_PROPERTIES*, Float32*, UInt32, ID2D1StrokeStyle*, HRESULT)
    create_drawing_state_block : Proc(ID2D1Factory*, D2D1_DRAWING_STATE_DESCRIPTION*, IDWriteRenderingParams, ID2D1DrawingStateBlock*, HRESULT)
    create_wic_bitmap_render_target : Proc(ID2D1Factory*, IWICBitmap, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_hwnd_render_target : Proc(ID2D1Factory*, D2D1_RENDER_TARGET_PROPERTIES*, D2D1_HWND_RENDER_TARGET_PROPERTIES*, ID2D1HwndRenderTarget*, HRESULT)
    create_dxgi_surface_render_target : Proc(ID2D1Factory*, IDXGISurface, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_dc_render_target : Proc(ID2D1Factory*, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1DCRenderTarget*, HRESULT)
  end

  ID2D1Factory_GUID = LibC::GUID.new("06152247-6f50-465a-9245-118bfd3b6007")
  CLSID_ID2D1Factory = "06152247-6f50-465a-9245-118bfd3b6007"
  struct ID2D1Factory
    lpVtbl : ID2D1FactoryVTbl*
  end

  struct ID2D1GdiMetafileSinkVTbl
    query_interface : Proc(ID2D1GdiMetafileSink*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1GdiMetafileSink*, UInt32)
    release : Proc(ID2D1GdiMetafileSink*, UInt32)
    process_record : Proc(ID2D1GdiMetafileSink*, UInt32, Void*, UInt32, HRESULT)
  end

  ID2D1GdiMetafileSink_GUID = LibC::GUID.new("82237326-8111-4f7c-bcf4-b5c1175564fe")
  CLSID_ID2D1GdiMetafileSink = "82237326-8111-4f7c-bcf4-b5c1175564fe"
  struct ID2D1GdiMetafileSink
    lpVtbl : ID2D1GdiMetafileSinkVTbl*
  end

  struct ID2D1GdiMetafileVTbl
    query_interface : Proc(ID2D1GdiMetafile*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1GdiMetafile*, UInt32)
    release : Proc(ID2D1GdiMetafile*, UInt32)
    get_factory : Proc(ID2D1GdiMetafile*, ID2D1Factory*, Void)
    stream : Proc(ID2D1GdiMetafile*, ID2D1GdiMetafileSink, HRESULT)
    get_bounds : Proc(ID2D1GdiMetafile*, D2D_RECT_F*, HRESULT)
  end

  ID2D1GdiMetafile_GUID = LibC::GUID.new("2f543dc3-cfc1-4211-864f-cfd91c6f3395")
  CLSID_ID2D1GdiMetafile = "2f543dc3-cfc1-4211-864f-cfd91c6f3395"
  struct ID2D1GdiMetafile
    lpVtbl : ID2D1GdiMetafileVTbl*
  end

  struct ID2D1CommandSinkVTbl
    query_interface : Proc(ID2D1CommandSink*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1CommandSink*, UInt32)
    release : Proc(ID2D1CommandSink*, UInt32)
    begin_draw : Proc(ID2D1CommandSink*, HRESULT)
    end_draw : Proc(ID2D1CommandSink*, HRESULT)
    set_antialias_mode : Proc(ID2D1CommandSink*, D2D1_ANTIALIAS_MODE, HRESULT)
    set_tags : Proc(ID2D1CommandSink*, UInt64, UInt64, HRESULT)
    set_text_antialias_mode : Proc(ID2D1CommandSink*, D2D1_TEXT_ANTIALIAS_MODE, HRESULT)
    set_text_rendering_params : Proc(ID2D1CommandSink*, IDWriteRenderingParams, HRESULT)
    set_transform : Proc(ID2D1CommandSink*, D2D_MATRIX_3X2_F*, HRESULT)
    set_primitive_blend : Proc(ID2D1CommandSink*, D2D1_PRIMITIVE_BLEND, HRESULT)
    set_unit_mode : Proc(ID2D1CommandSink*, D2D1_UNIT_MODE, HRESULT)
    clear : Proc(ID2D1CommandSink*, D2D1_COLOR_F*, HRESULT)
    draw_glyph_run : Proc(ID2D1CommandSink*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, ID2D1Brush, DWRITE_MEASURING_MODE, HRESULT)
    draw_line : Proc(ID2D1CommandSink*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_geometry : Proc(ID2D1CommandSink*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_rectangle : Proc(ID2D1CommandSink*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_bitmap : Proc(ID2D1CommandSink*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_INTERPOLATION_MODE, D2D_RECT_F*, D2D_MATRIX_4X4_F*, HRESULT)
    draw_image : Proc(ID2D1CommandSink*, ID2D1Image, D2D_POINT_2F*, D2D_RECT_F*, D2D1_INTERPOLATION_MODE, D2D1_COMPOSITE_MODE, HRESULT)
    draw_gdi_metafile : Proc(ID2D1CommandSink*, ID2D1GdiMetafile, D2D_POINT_2F*, HRESULT)
    fill_mesh : Proc(ID2D1CommandSink*, ID2D1Mesh, ID2D1Brush, HRESULT)
    fill_opacity_mask : Proc(ID2D1CommandSink*, ID2D1Bitmap, ID2D1Brush, D2D_RECT_F*, D2D_RECT_F*, HRESULT)
    fill_geometry : Proc(ID2D1CommandSink*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, HRESULT)
    fill_rectangle : Proc(ID2D1CommandSink*, D2D_RECT_F*, ID2D1Brush, HRESULT)
    push_axis_aligned_clip : Proc(ID2D1CommandSink*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, HRESULT)
    push_layer : Proc(ID2D1CommandSink*, D2D1_LAYER_PARAMETERS1*, ID2D1Layer, HRESULT)
    pop_axis_aligned_clip : Proc(ID2D1CommandSink*, HRESULT)
    pop_layer : Proc(ID2D1CommandSink*, HRESULT)
  end

  ID2D1CommandSink_GUID = LibC::GUID.new("54d7898a-a061-40a7-bec7-e465bcba2c4f")
  CLSID_ID2D1CommandSink = "54d7898a-a061-40a7-bec7-e465bcba2c4f"
  struct ID2D1CommandSink
    lpVtbl : ID2D1CommandSinkVTbl*
  end

  struct ID2D1CommandListVTbl
    query_interface : Proc(ID2D1CommandList*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1CommandList*, UInt32)
    release : Proc(ID2D1CommandList*, UInt32)
    get_factory : Proc(ID2D1CommandList*, ID2D1Factory*, Void)
    stream : Proc(ID2D1CommandList*, ID2D1CommandSink, HRESULT)
    close : Proc(ID2D1CommandList*, HRESULT)
  end

  ID2D1CommandList_GUID = LibC::GUID.new("b4f34a19-2383-4d76-94f6-ec343657c3dc")
  CLSID_ID2D1CommandList = "b4f34a19-2383-4d76-94f6-ec343657c3dc"
  struct ID2D1CommandList
    lpVtbl : ID2D1CommandListVTbl*
  end

  struct ID2D1PrintControlVTbl
    query_interface : Proc(ID2D1PrintControl*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1PrintControl*, UInt32)
    release : Proc(ID2D1PrintControl*, UInt32)
    add_page : Proc(ID2D1PrintControl*, ID2D1CommandList, D2D_SIZE_F, IStream, UInt64*, UInt64*, HRESULT)
    close : Proc(ID2D1PrintControl*, HRESULT)
  end

  ID2D1PrintControl_GUID = LibC::GUID.new("2c1d867d-c290-41c8-ae7e-34a98702e9a5")
  CLSID_ID2D1PrintControl = "2c1d867d-c290-41c8-ae7e-34a98702e9a5"
  struct ID2D1PrintControl
    lpVtbl : ID2D1PrintControlVTbl*
  end

  struct ID2D1ImageBrushVTbl
    query_interface : Proc(ID2D1ImageBrush*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1ImageBrush*, UInt32)
    release : Proc(ID2D1ImageBrush*, UInt32)
    get_factory : Proc(ID2D1ImageBrush*, ID2D1Factory*, Void)
    set_opacity : Proc(ID2D1ImageBrush*, Float32, Void)
    set_transform : Proc(ID2D1ImageBrush*, D2D_MATRIX_3X2_F*, Void)
    get_opacity : Proc(ID2D1ImageBrush*, Float32)
    get_transform : Proc(ID2D1ImageBrush*, D2D_MATRIX_3X2_F*, Void)
    set_image : Proc(ID2D1ImageBrush*, ID2D1Image, Void)
    set_extend_mode_x : Proc(ID2D1ImageBrush*, D2D1_EXTEND_MODE, Void)
    set_extend_mode_y : Proc(ID2D1ImageBrush*, D2D1_EXTEND_MODE, Void)
    set_interpolation_mode : Proc(ID2D1ImageBrush*, D2D1_INTERPOLATION_MODE, Void)
    set_source_rectangle : Proc(ID2D1ImageBrush*, D2D_RECT_F*, Void)
    get_image : Proc(ID2D1ImageBrush*, ID2D1Image*, Void)
    get_extend_mode_x : Proc(ID2D1ImageBrush*, D2D1_EXTEND_MODE)
    get_extend_mode_y : Proc(ID2D1ImageBrush*, D2D1_EXTEND_MODE)
    get_interpolation_mode : Proc(ID2D1ImageBrush*, D2D1_INTERPOLATION_MODE)
    get_source_rectangle : Proc(ID2D1ImageBrush*, D2D_RECT_F*, Void)
  end

  ID2D1ImageBrush_GUID = LibC::GUID.new("fe9e984d-3f95-407c-b5db-cb94d4e8f87c")
  CLSID_ID2D1ImageBrush = "fe9e984d-3f95-407c-b5db-cb94d4e8f87c"
  struct ID2D1ImageBrush
    lpVtbl : ID2D1ImageBrushVTbl*
  end

  struct ID2D1BitmapBrush1VTbl
    query_interface : Proc(ID2D1BitmapBrush1*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1BitmapBrush1*, UInt32)
    release : Proc(ID2D1BitmapBrush1*, UInt32)
    get_factory : Proc(ID2D1BitmapBrush1*, ID2D1Factory*, Void)
    set_opacity : Proc(ID2D1BitmapBrush1*, Float32, Void)
    set_transform : Proc(ID2D1BitmapBrush1*, D2D_MATRIX_3X2_F*, Void)
    get_opacity : Proc(ID2D1BitmapBrush1*, Float32)
    get_transform : Proc(ID2D1BitmapBrush1*, D2D_MATRIX_3X2_F*, Void)
    set_extend_mode_x : Proc(ID2D1BitmapBrush1*, D2D1_EXTEND_MODE, Void)
    set_extend_mode_y : Proc(ID2D1BitmapBrush1*, D2D1_EXTEND_MODE, Void)
    set_interpolation_mode : Proc(ID2D1BitmapBrush1*, D2D1_BITMAP_INTERPOLATION_MODE, Void)
    set_bitmap : Proc(ID2D1BitmapBrush1*, ID2D1Bitmap, Void)
    get_extend_mode_x : Proc(ID2D1BitmapBrush1*, D2D1_EXTEND_MODE)
    get_extend_mode_y : Proc(ID2D1BitmapBrush1*, D2D1_EXTEND_MODE)
    get_interpolation_mode : Proc(ID2D1BitmapBrush1*, D2D1_BITMAP_INTERPOLATION_MODE)
    get_bitmap : Proc(ID2D1BitmapBrush1*, ID2D1Bitmap*, Void)
    set_interpolation_mode1 : Proc(ID2D1BitmapBrush1*, D2D1_INTERPOLATION_MODE, Void)
    get_interpolation_mode1 : Proc(ID2D1BitmapBrush1*, D2D1_INTERPOLATION_MODE)
  end

  ID2D1BitmapBrush1_GUID = LibC::GUID.new("41343a53-e41a-49a2-91cd-21793bbb62e5")
  CLSID_ID2D1BitmapBrush1 = "41343a53-e41a-49a2-91cd-21793bbb62e5"
  struct ID2D1BitmapBrush1
    lpVtbl : ID2D1BitmapBrush1VTbl*
  end

  struct ID2D1StrokeStyle1VTbl
    query_interface : Proc(ID2D1StrokeStyle1*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1StrokeStyle1*, UInt32)
    release : Proc(ID2D1StrokeStyle1*, UInt32)
    get_factory : Proc(ID2D1StrokeStyle1*, ID2D1Factory*, Void)
    get_start_cap : Proc(ID2D1StrokeStyle1*, D2D1_CAP_STYLE)
    get_end_cap : Proc(ID2D1StrokeStyle1*, D2D1_CAP_STYLE)
    get_dash_cap : Proc(ID2D1StrokeStyle1*, D2D1_CAP_STYLE)
    get_miter_limit : Proc(ID2D1StrokeStyle1*, Float32)
    get_line_join : Proc(ID2D1StrokeStyle1*, D2D1_LINE_JOIN)
    get_dash_offset : Proc(ID2D1StrokeStyle1*, Float32)
    get_dash_style : Proc(ID2D1StrokeStyle1*, D2D1_DASH_STYLE)
    get_dashes_count : Proc(ID2D1StrokeStyle1*, UInt32)
    get_dashes : Proc(ID2D1StrokeStyle1*, Float32*, UInt32, Void)
    get_stroke_transform_type : Proc(ID2D1StrokeStyle1*, D2D1_STROKE_TRANSFORM_TYPE)
  end

  ID2D1StrokeStyle1_GUID = LibC::GUID.new("10a72a66-e91c-43f4-993f-ddf4b82b0b4a")
  CLSID_ID2D1StrokeStyle1 = "10a72a66-e91c-43f4-993f-ddf4b82b0b4a"
  struct ID2D1StrokeStyle1
    lpVtbl : ID2D1StrokeStyle1VTbl*
  end

  struct ID2D1PathGeometry1VTbl
    query_interface : Proc(ID2D1PathGeometry1*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1PathGeometry1*, UInt32)
    release : Proc(ID2D1PathGeometry1*, UInt32)
    get_factory : Proc(ID2D1PathGeometry1*, ID2D1Factory*, Void)
    get_bounds : Proc(ID2D1PathGeometry1*, D2D_MATRIX_3X2_F*, D2D_RECT_F*, HRESULT)
    get_widened_bounds : Proc(ID2D1PathGeometry1*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, D2D_RECT_F*, HRESULT)
    stroke_contains_point : Proc(ID2D1PathGeometry1*, D2D_POINT_2F, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    fill_contains_point : Proc(ID2D1PathGeometry1*, D2D_POINT_2F, D2D_MATRIX_3X2_F*, Float32, LibC::BOOL*, HRESULT)
    compare_with_geometry : Proc(ID2D1PathGeometry1*, ID2D1Geometry, D2D_MATRIX_3X2_F*, Float32, D2D1_GEOMETRY_RELATION*, HRESULT)
    simplify : Proc(ID2D1PathGeometry1*, D2D1_GEOMETRY_SIMPLIFICATION_OPTION, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    tessellate : Proc(ID2D1PathGeometry1*, D2D_MATRIX_3X2_F*, Float32, ID2D1TessellationSink, HRESULT)
    combine_with_geometry : Proc(ID2D1PathGeometry1*, ID2D1Geometry, D2D1_COMBINE_MODE, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    outline : Proc(ID2D1PathGeometry1*, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    compute_area : Proc(ID2D1PathGeometry1*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_length : Proc(ID2D1PathGeometry1*, D2D_MATRIX_3X2_F*, Float32, Float32*, HRESULT)
    compute_point_at_length : Proc(ID2D1PathGeometry1*, Float32, D2D_MATRIX_3X2_F*, Float32, D2D_POINT_2F*, D2D_POINT_2F*, HRESULT)
    widen : Proc(ID2D1PathGeometry1*, Float32, ID2D1StrokeStyle, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    open : Proc(ID2D1PathGeometry1*, ID2D1GeometrySink*, HRESULT)
    stream : Proc(ID2D1PathGeometry1*, ID2D1GeometrySink, HRESULT)
    get_segment_count : Proc(ID2D1PathGeometry1*, UInt32*, HRESULT)
    get_figure_count : Proc(ID2D1PathGeometry1*, UInt32*, HRESULT)
    compute_point_and_segment_at_length : Proc(ID2D1PathGeometry1*, Float32, UInt32, D2D_MATRIX_3X2_F*, Float32, D2D1_POINT_DESCRIPTION*, HRESULT)
  end

  ID2D1PathGeometry1_GUID = LibC::GUID.new("62baa2d2-ab54-41b7-b872-787e0106a421")
  CLSID_ID2D1PathGeometry1 = "62baa2d2-ab54-41b7-b872-787e0106a421"
  struct ID2D1PathGeometry1
    lpVtbl : ID2D1PathGeometry1VTbl*
  end

  struct ID2D1PropertiesVTbl
    query_interface : Proc(ID2D1Properties*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Properties*, UInt32)
    release : Proc(ID2D1Properties*, UInt32)
    get_property_count : Proc(ID2D1Properties*, UInt32)
    get_property_name : Proc(ID2D1Properties*, UInt32, Char*, UInt32, HRESULT)
    get_property_name_length : Proc(ID2D1Properties*, UInt32, UInt32)
    get_type : Proc(ID2D1Properties*, UInt32, D2D1_PROPERTY_TYPE)
    get_property_index : Proc(ID2D1Properties*, LibC::LPWSTR, UInt32)
    set_value_by_name : Proc(ID2D1Properties*, LibC::LPWSTR, D2D1_PROPERTY_TYPE, UInt8*, UInt32, HRESULT)
    set_value : Proc(ID2D1Properties*, UInt32, D2D1_PROPERTY_TYPE, UInt8*, UInt32, HRESULT)
    get_value_by_name : Proc(ID2D1Properties*, LibC::LPWSTR, D2D1_PROPERTY_TYPE, UInt8*, UInt32, HRESULT)
    get_value : Proc(ID2D1Properties*, UInt32, D2D1_PROPERTY_TYPE, UInt8*, UInt32, HRESULT)
    get_value_size : Proc(ID2D1Properties*, UInt32, UInt32)
    get_sub_properties : Proc(ID2D1Properties*, UInt32, ID2D1Properties*, HRESULT)
  end

  ID2D1Properties_GUID = LibC::GUID.new("483473d7-cd46-4f9d-9d3a-3112aa80159d")
  CLSID_ID2D1Properties = "483473d7-cd46-4f9d-9d3a-3112aa80159d"
  struct ID2D1Properties
    lpVtbl : ID2D1PropertiesVTbl*
  end

  struct ID2D1EffectVTbl
    query_interface : Proc(ID2D1Effect*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Effect*, UInt32)
    release : Proc(ID2D1Effect*, UInt32)
    get_property_count : Proc(ID2D1Effect*, UInt32)
    get_property_name : Proc(ID2D1Effect*, UInt32, Char*, UInt32, HRESULT)
    get_property_name_length : Proc(ID2D1Effect*, UInt32, UInt32)
    get_type : Proc(ID2D1Effect*, UInt32, D2D1_PROPERTY_TYPE)
    get_property_index : Proc(ID2D1Effect*, LibC::LPWSTR, UInt32)
    set_value_by_name : Proc(ID2D1Effect*, LibC::LPWSTR, D2D1_PROPERTY_TYPE, UInt8*, UInt32, HRESULT)
    set_value : Proc(ID2D1Effect*, UInt32, D2D1_PROPERTY_TYPE, UInt8*, UInt32, HRESULT)
    get_value_by_name : Proc(ID2D1Effect*, LibC::LPWSTR, D2D1_PROPERTY_TYPE, UInt8*, UInt32, HRESULT)
    get_value : Proc(ID2D1Effect*, UInt32, D2D1_PROPERTY_TYPE, UInt8*, UInt32, HRESULT)
    get_value_size : Proc(ID2D1Effect*, UInt32, UInt32)
    get_sub_properties : Proc(ID2D1Effect*, UInt32, ID2D1Properties*, HRESULT)
    set_input : Proc(ID2D1Effect*, UInt32, ID2D1Image, LibC::BOOL, Void)
    set_input_count : Proc(ID2D1Effect*, UInt32, HRESULT)
    get_input : Proc(ID2D1Effect*, UInt32, ID2D1Image*, Void)
    get_input_count : Proc(ID2D1Effect*, UInt32)
    get_output : Proc(ID2D1Effect*, ID2D1Image*, Void)
  end

  ID2D1Effect_GUID = LibC::GUID.new("28211a43-7d89-476f-8181-2d6159b220ad")
  CLSID_ID2D1Effect = "28211a43-7d89-476f-8181-2d6159b220ad"
  struct ID2D1Effect
    lpVtbl : ID2D1EffectVTbl*
  end

  struct ID2D1Bitmap1VTbl
    query_interface : Proc(ID2D1Bitmap1*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Bitmap1*, UInt32)
    release : Proc(ID2D1Bitmap1*, UInt32)
    get_factory : Proc(ID2D1Bitmap1*, ID2D1Factory*, Void)
    get_size : Proc(ID2D1Bitmap1*, D2D_SIZE_F)
    get_pixel_size : Proc(ID2D1Bitmap1*, D2D_SIZE_U)
    get_pixel_format : Proc(ID2D1Bitmap1*, D2D1_PIXEL_FORMAT)
    get_dpi : Proc(ID2D1Bitmap1*, Float32*, Float32*, Void)
    copy_from_bitmap : Proc(ID2D1Bitmap1*, D2D_POINT_2U*, ID2D1Bitmap, D2D_RECT_U*, HRESULT)
    copy_from_render_target : Proc(ID2D1Bitmap1*, D2D_POINT_2U*, ID2D1RenderTarget, D2D_RECT_U*, HRESULT)
    copy_from_memory : Proc(ID2D1Bitmap1*, D2D_RECT_U*, Void*, UInt32, HRESULT)
    get_color_context : Proc(ID2D1Bitmap1*, ID2D1ColorContext*, Void)
    get_options : Proc(ID2D1Bitmap1*, D2D1_BITMAP_OPTIONS)
    get_surface : Proc(ID2D1Bitmap1*, IDXGISurface*, HRESULT)
    map : Proc(ID2D1Bitmap1*, D2D1_MAP_OPTIONS, D2D1_MAPPED_RECT*, HRESULT)
    unmap : Proc(ID2D1Bitmap1*, HRESULT)
  end

  ID2D1Bitmap1_GUID = LibC::GUID.new("a898a84c-3873-4588-b08b-ebbf978df041")
  CLSID_ID2D1Bitmap1 = "a898a84c-3873-4588-b08b-ebbf978df041"
  struct ID2D1Bitmap1
    lpVtbl : ID2D1Bitmap1VTbl*
  end

  struct ID2D1ColorContextVTbl
    query_interface : Proc(ID2D1ColorContext*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1ColorContext*, UInt32)
    release : Proc(ID2D1ColorContext*, UInt32)
    get_factory : Proc(ID2D1ColorContext*, ID2D1Factory*, Void)
    get_color_space : Proc(ID2D1ColorContext*, D2D1_COLOR_SPACE)
    get_profile_size : Proc(ID2D1ColorContext*, UInt32)
    get_profile : Proc(ID2D1ColorContext*, UInt8*, UInt32, HRESULT)
  end

  ID2D1ColorContext_GUID = LibC::GUID.new("1c4820bb-5771-4518-a581-2fe4dd0ec657")
  CLSID_ID2D1ColorContext = "1c4820bb-5771-4518-a581-2fe4dd0ec657"
  struct ID2D1ColorContext
    lpVtbl : ID2D1ColorContextVTbl*
  end

  struct ID2D1GradientStopCollection1VTbl
    query_interface : Proc(ID2D1GradientStopCollection1*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1GradientStopCollection1*, UInt32)
    release : Proc(ID2D1GradientStopCollection1*, UInt32)
    get_factory : Proc(ID2D1GradientStopCollection1*, ID2D1Factory*, Void)
    get_gradient_stop_count : Proc(ID2D1GradientStopCollection1*, UInt32)
    get_gradient_stops : Proc(ID2D1GradientStopCollection1*, D2D1_GRADIENT_STOP*, UInt32, Void)
    get_color_interpolation_gamma : Proc(ID2D1GradientStopCollection1*, D2D1_GAMMA)
    get_extend_mode : Proc(ID2D1GradientStopCollection1*, D2D1_EXTEND_MODE)
    get_gradient_stops1 : Proc(ID2D1GradientStopCollection1*, D2D1_GRADIENT_STOP*, UInt32, Void)
    get_pre_interpolation_space : Proc(ID2D1GradientStopCollection1*, D2D1_COLOR_SPACE)
    get_post_interpolation_space : Proc(ID2D1GradientStopCollection1*, D2D1_COLOR_SPACE)
    get_buffer_precision : Proc(ID2D1GradientStopCollection1*, D2D1_BUFFER_PRECISION)
    get_color_interpolation_mode : Proc(ID2D1GradientStopCollection1*, D2D1_COLOR_INTERPOLATION_MODE)
  end

  ID2D1GradientStopCollection1_GUID = LibC::GUID.new("ae1572f4-5dd0-4777-998b-9279472ae63b")
  CLSID_ID2D1GradientStopCollection1 = "ae1572f4-5dd0-4777-998b-9279472ae63b"
  struct ID2D1GradientStopCollection1
    lpVtbl : ID2D1GradientStopCollection1VTbl*
  end

  struct ID2D1DrawingStateBlock1VTbl
    query_interface : Proc(ID2D1DrawingStateBlock1*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1DrawingStateBlock1*, UInt32)
    release : Proc(ID2D1DrawingStateBlock1*, UInt32)
    get_factory : Proc(ID2D1DrawingStateBlock1*, ID2D1Factory*, Void)
    get_description : Proc(ID2D1DrawingStateBlock1*, D2D1_DRAWING_STATE_DESCRIPTION*, Void)
    set_description : Proc(ID2D1DrawingStateBlock1*, D2D1_DRAWING_STATE_DESCRIPTION*, Void)
    set_text_rendering_params : Proc(ID2D1DrawingStateBlock1*, IDWriteRenderingParams, Void)
    get_text_rendering_params : Proc(ID2D1DrawingStateBlock1*, IDWriteRenderingParams*, Void)
    get_description2 : Proc(ID2D1DrawingStateBlock1*, D2D1_DRAWING_STATE_DESCRIPTION1*, Void)
    set_description2 : Proc(ID2D1DrawingStateBlock1*, D2D1_DRAWING_STATE_DESCRIPTION1*, Void)
  end

  ID2D1DrawingStateBlock1_GUID = LibC::GUID.new("689f1f85-c72e-4e33-8f19-85754efd5ace")
  CLSID_ID2D1DrawingStateBlock1 = "689f1f85-c72e-4e33-8f19-85754efd5ace"
  struct ID2D1DrawingStateBlock1
    lpVtbl : ID2D1DrawingStateBlock1VTbl*
  end

  struct ID2D1DeviceContextVTbl
    query_interface : Proc(ID2D1DeviceContext*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1DeviceContext*, UInt32)
    release : Proc(ID2D1DeviceContext*, UInt32)
    get_factory : Proc(ID2D1DeviceContext*, ID2D1Factory*, Void)
    create_bitmap : Proc(ID2D1DeviceContext*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_from_wic_bitmap : Proc(ID2D1DeviceContext*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_shared_bitmap : Proc(ID2D1DeviceContext*, Guid*, Void*, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_brush : Proc(ID2D1DeviceContext*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush*, HRESULT)
    create_solid_color_brush : Proc(ID2D1DeviceContext*, D2D1_COLOR_F*, D2D1_BRUSH_PROPERTIES*, ID2D1SolidColorBrush*, HRESULT)
    create_gradient_stop_collection : Proc(ID2D1DeviceContext*, D2D1_GRADIENT_STOP*, UInt32, D2D1_GAMMA, D2D1_EXTEND_MODE, ID2D1GradientStopCollection*, HRESULT)
    create_linear_gradient_brush : Proc(ID2D1DeviceContext*, D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1LinearGradientBrush*, HRESULT)
    create_radial_gradient_brush : Proc(ID2D1DeviceContext*, D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1RadialGradientBrush*, HRESULT)
    create_compatible_render_target : Proc(ID2D1DeviceContext*, D2D_SIZE_F*, D2D_SIZE_U*, D2D1_PIXEL_FORMAT*, D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS, ID2D1BitmapRenderTarget*, HRESULT)
    create_layer : Proc(ID2D1DeviceContext*, D2D_SIZE_F*, ID2D1Layer*, HRESULT)
    create_mesh : Proc(ID2D1DeviceContext*, ID2D1Mesh*, HRESULT)
    draw_line : Proc(ID2D1DeviceContext*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    draw_rectangle : Proc(ID2D1DeviceContext*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rectangle : Proc(ID2D1DeviceContext*, D2D_RECT_F*, ID2D1Brush, Void)
    draw_rounded_rectangle : Proc(ID2D1DeviceContext*, D2D1_ROUNDED_RECT*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rounded_rectangle : Proc(ID2D1DeviceContext*, D2D1_ROUNDED_RECT*, ID2D1Brush, Void)
    draw_ellipse : Proc(ID2D1DeviceContext*, D2D1_ELLIPSE*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_ellipse : Proc(ID2D1DeviceContext*, D2D1_ELLIPSE*, ID2D1Brush, Void)
    draw_geometry : Proc(ID2D1DeviceContext*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_geometry : Proc(ID2D1DeviceContext*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, Void)
    fill_mesh : Proc(ID2D1DeviceContext*, ID2D1Mesh, ID2D1Brush, Void)
    fill_opacity_mask : Proc(ID2D1DeviceContext*, ID2D1Bitmap, ID2D1Brush, D2D1_OPACITY_MASK_CONTENT, D2D_RECT_F*, D2D_RECT_F*, Void)
    draw_bitmap : Proc(ID2D1DeviceContext*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_BITMAP_INTERPOLATION_MODE, D2D_RECT_F*, Void)
    draw_text : Proc(ID2D1DeviceContext*, Char*, UInt32, IDWriteTextFormat, D2D_RECT_F*, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE, Void)
    draw_text_layout : Proc(ID2D1DeviceContext*, D2D_POINT_2F, IDWriteTextLayout, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, Void)
    draw_glyph_run : Proc(ID2D1DeviceContext*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    set_transform : Proc(ID2D1DeviceContext*, D2D_MATRIX_3X2_F*, Void)
    get_transform : Proc(ID2D1DeviceContext*, D2D_MATRIX_3X2_F*, Void)
    set_antialias_mode : Proc(ID2D1DeviceContext*, D2D1_ANTIALIAS_MODE, Void)
    get_antialias_mode : Proc(ID2D1DeviceContext*, D2D1_ANTIALIAS_MODE)
    set_text_antialias_mode : Proc(ID2D1DeviceContext*, D2D1_TEXT_ANTIALIAS_MODE, Void)
    get_text_antialias_mode : Proc(ID2D1DeviceContext*, D2D1_TEXT_ANTIALIAS_MODE)
    set_text_rendering_params : Proc(ID2D1DeviceContext*, IDWriteRenderingParams, Void)
    get_text_rendering_params : Proc(ID2D1DeviceContext*, IDWriteRenderingParams*, Void)
    set_tags : Proc(ID2D1DeviceContext*, UInt64, UInt64, Void)
    get_tags : Proc(ID2D1DeviceContext*, UInt64*, UInt64*, Void)
    push_layer : Proc(ID2D1DeviceContext*, D2D1_LAYER_PARAMETERS*, ID2D1Layer, Void)
    pop_layer : Proc(ID2D1DeviceContext*, Void)
    flush : Proc(ID2D1DeviceContext*, UInt64*, UInt64*, HRESULT)
    save_drawing_state : Proc(ID2D1DeviceContext*, ID2D1DrawingStateBlock, Void)
    restore_drawing_state : Proc(ID2D1DeviceContext*, ID2D1DrawingStateBlock, Void)
    push_axis_aligned_clip : Proc(ID2D1DeviceContext*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, Void)
    pop_axis_aligned_clip : Proc(ID2D1DeviceContext*, Void)
    clear : Proc(ID2D1DeviceContext*, D2D1_COLOR_F*, Void)
    begin_draw : Proc(ID2D1DeviceContext*, Void)
    end_draw : Proc(ID2D1DeviceContext*, UInt64*, UInt64*, HRESULT)
    get_pixel_format : Proc(ID2D1DeviceContext*, D2D1_PIXEL_FORMAT)
    set_dpi : Proc(ID2D1DeviceContext*, Float32, Float32, Void)
    get_dpi : Proc(ID2D1DeviceContext*, Float32*, Float32*, Void)
    get_size : Proc(ID2D1DeviceContext*, D2D_SIZE_F)
    get_pixel_size : Proc(ID2D1DeviceContext*, D2D_SIZE_U)
    get_maximum_bitmap_size : Proc(ID2D1DeviceContext*, UInt32)
    is_supported : Proc(ID2D1DeviceContext*, D2D1_RENDER_TARGET_PROPERTIES*, LibC::BOOL)
    create_bitmap2 : Proc(ID2D1DeviceContext*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_bitmap_from_wic_bitmap2 : Proc(ID2D1DeviceContext*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_color_context : Proc(ID2D1DeviceContext*, D2D1_COLOR_SPACE, UInt8*, UInt32, ID2D1ColorContext*, HRESULT)
    create_color_context_from_filename : Proc(ID2D1DeviceContext*, LibC::LPWSTR, ID2D1ColorContext*, HRESULT)
    create_color_context_from_wic_color_context : Proc(ID2D1DeviceContext*, IWICColorContext, ID2D1ColorContext*, HRESULT)
    create_bitmap_from_dxgi_surface : Proc(ID2D1DeviceContext*, IDXGISurface, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_effect : Proc(ID2D1DeviceContext*, Guid*, ID2D1Effect*, HRESULT)
    create_gradient_stop_collection2 : Proc(ID2D1DeviceContext*, D2D1_GRADIENT_STOP*, UInt32, D2D1_COLOR_SPACE, D2D1_COLOR_SPACE, D2D1_BUFFER_PRECISION, D2D1_EXTEND_MODE, D2D1_COLOR_INTERPOLATION_MODE, ID2D1GradientStopCollection1*, HRESULT)
    create_image_brush : Proc(ID2D1DeviceContext*, ID2D1Image, D2D1_IMAGE_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1ImageBrush*, HRESULT)
    create_bitmap_brush2 : Proc(ID2D1DeviceContext*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES1*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush1*, HRESULT)
    create_command_list : Proc(ID2D1DeviceContext*, ID2D1CommandList*, HRESULT)
    is_dxgi_format_supported : Proc(ID2D1DeviceContext*, DXGI_FORMAT, LibC::BOOL)
    is_buffer_precision_supported : Proc(ID2D1DeviceContext*, D2D1_BUFFER_PRECISION, LibC::BOOL)
    get_image_local_bounds : Proc(ID2D1DeviceContext*, ID2D1Image, D2D_RECT_F*, HRESULT)
    get_image_world_bounds : Proc(ID2D1DeviceContext*, ID2D1Image, D2D_RECT_F*, HRESULT)
    get_glyph_run_world_bounds : Proc(ID2D1DeviceContext*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_MEASURING_MODE, D2D_RECT_F*, HRESULT)
    get_device : Proc(ID2D1DeviceContext*, ID2D1Device*, Void)
    set_target : Proc(ID2D1DeviceContext*, ID2D1Image, Void)
    get_target : Proc(ID2D1DeviceContext*, ID2D1Image*, Void)
    set_rendering_controls : Proc(ID2D1DeviceContext*, D2D1_RENDERING_CONTROLS*, Void)
    get_rendering_controls : Proc(ID2D1DeviceContext*, D2D1_RENDERING_CONTROLS*, Void)
    set_primitive_blend : Proc(ID2D1DeviceContext*, D2D1_PRIMITIVE_BLEND, Void)
    get_primitive_blend : Proc(ID2D1DeviceContext*, D2D1_PRIMITIVE_BLEND)
    set_unit_mode : Proc(ID2D1DeviceContext*, D2D1_UNIT_MODE, Void)
    get_unit_mode : Proc(ID2D1DeviceContext*, D2D1_UNIT_MODE)
    draw_glyph_run2 : Proc(ID2D1DeviceContext*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    draw_image : Proc(ID2D1DeviceContext*, ID2D1Image, D2D_POINT_2F*, D2D_RECT_F*, D2D1_INTERPOLATION_MODE, D2D1_COMPOSITE_MODE, Void)
    draw_gdi_metafile : Proc(ID2D1DeviceContext*, ID2D1GdiMetafile, D2D_POINT_2F*, Void)
    draw_bitmap2 : Proc(ID2D1DeviceContext*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_INTERPOLATION_MODE, D2D_RECT_F*, D2D_MATRIX_4X4_F*, Void)
    push_layer2 : Proc(ID2D1DeviceContext*, D2D1_LAYER_PARAMETERS1*, ID2D1Layer, Void)
    invalidate_effect_input_rectangle : Proc(ID2D1DeviceContext*, ID2D1Effect, UInt32, D2D_RECT_F*, HRESULT)
    get_effect_invalid_rectangle_count : Proc(ID2D1DeviceContext*, ID2D1Effect, UInt32*, HRESULT)
    get_effect_invalid_rectangles : Proc(ID2D1DeviceContext*, ID2D1Effect, D2D_RECT_F*, UInt32, HRESULT)
    get_effect_required_input_rectangles : Proc(ID2D1DeviceContext*, ID2D1Effect, D2D_RECT_F*, D2D1_EFFECT_INPUT_DESCRIPTION*, D2D_RECT_F*, UInt32, HRESULT)
    fill_opacity_mask2 : Proc(ID2D1DeviceContext*, ID2D1Bitmap, ID2D1Brush, D2D_RECT_F*, D2D_RECT_F*, Void)
  end

  ID2D1DeviceContext_GUID = LibC::GUID.new("e8f7fe7a-191c-466d-ad95-975678bda998")
  CLSID_ID2D1DeviceContext = "e8f7fe7a-191c-466d-ad95-975678bda998"
  struct ID2D1DeviceContext
    lpVtbl : ID2D1DeviceContextVTbl*
  end

  struct ID2D1DeviceVTbl
    query_interface : Proc(ID2D1Device*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Device*, UInt32)
    release : Proc(ID2D1Device*, UInt32)
    get_factory : Proc(ID2D1Device*, ID2D1Factory*, Void)
    create_device_context : Proc(ID2D1Device*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext*, HRESULT)
    create_print_control : Proc(ID2D1Device*, IWICImagingFactory, IPrintDocumentPackageTarget, D2D1_PRINT_CONTROL_PROPERTIES*, ID2D1PrintControl*, HRESULT)
    set_maximum_texture_memory : Proc(ID2D1Device*, UInt64, Void)
    get_maximum_texture_memory : Proc(ID2D1Device*, UInt64)
    clear_resources : Proc(ID2D1Device*, UInt32, Void)
  end

  ID2D1Device_GUID = LibC::GUID.new("47dd575d-ac05-4cdd-8049-9b02cd16f44c")
  CLSID_ID2D1Device = "47dd575d-ac05-4cdd-8049-9b02cd16f44c"
  struct ID2D1Device
    lpVtbl : ID2D1DeviceVTbl*
  end

  struct ID2D1Factory1VTbl
    query_interface : Proc(ID2D1Factory1*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Factory1*, UInt32)
    release : Proc(ID2D1Factory1*, UInt32)
    reload_system_metrics : Proc(ID2D1Factory1*, HRESULT)
    get_desktop_dpi : Proc(ID2D1Factory1*, Float32*, Float32*, Void)
    create_rectangle_geometry : Proc(ID2D1Factory1*, D2D_RECT_F*, ID2D1RectangleGeometry*, HRESULT)
    create_rounded_rectangle_geometry : Proc(ID2D1Factory1*, D2D1_ROUNDED_RECT*, ID2D1RoundedRectangleGeometry*, HRESULT)
    create_ellipse_geometry : Proc(ID2D1Factory1*, D2D1_ELLIPSE*, ID2D1EllipseGeometry*, HRESULT)
    create_geometry_group : Proc(ID2D1Factory1*, D2D1_FILL_MODE, ID2D1Geometry*, UInt32, ID2D1GeometryGroup*, HRESULT)
    create_transformed_geometry : Proc(ID2D1Factory1*, ID2D1Geometry, D2D_MATRIX_3X2_F*, ID2D1TransformedGeometry*, HRESULT)
    create_path_geometry : Proc(ID2D1Factory1*, ID2D1PathGeometry*, HRESULT)
    create_stroke_style : Proc(ID2D1Factory1*, D2D1_STROKE_STYLE_PROPERTIES*, Float32*, UInt32, ID2D1StrokeStyle*, HRESULT)
    create_drawing_state_block : Proc(ID2D1Factory1*, D2D1_DRAWING_STATE_DESCRIPTION*, IDWriteRenderingParams, ID2D1DrawingStateBlock*, HRESULT)
    create_wic_bitmap_render_target : Proc(ID2D1Factory1*, IWICBitmap, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_hwnd_render_target : Proc(ID2D1Factory1*, D2D1_RENDER_TARGET_PROPERTIES*, D2D1_HWND_RENDER_TARGET_PROPERTIES*, ID2D1HwndRenderTarget*, HRESULT)
    create_dxgi_surface_render_target : Proc(ID2D1Factory1*, IDXGISurface, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_dc_render_target : Proc(ID2D1Factory1*, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1DCRenderTarget*, HRESULT)
    create_device : Proc(ID2D1Factory1*, IDXGIDevice, ID2D1Device*, HRESULT)
    create_stroke_style2 : Proc(ID2D1Factory1*, D2D1_STROKE_STYLE_PROPERTIES1*, Float32*, UInt32, ID2D1StrokeStyle1*, HRESULT)
    create_path_geometry2 : Proc(ID2D1Factory1*, ID2D1PathGeometry1*, HRESULT)
    create_drawing_state_block2 : Proc(ID2D1Factory1*, D2D1_DRAWING_STATE_DESCRIPTION1*, IDWriteRenderingParams, ID2D1DrawingStateBlock1*, HRESULT)
    create_gdi_metafile : Proc(ID2D1Factory1*, IStream, ID2D1GdiMetafile*, HRESULT)
    register_effect_from_stream : Proc(ID2D1Factory1*, Guid*, IStream, D2D1_PROPERTY_BINDING*, UInt32, PD2D1_EFFECT_FACTORY, HRESULT)
    register_effect_from_string : Proc(ID2D1Factory1*, Guid*, LibC::LPWSTR, D2D1_PROPERTY_BINDING*, UInt32, PD2D1_EFFECT_FACTORY, HRESULT)
    unregister_effect : Proc(ID2D1Factory1*, Guid*, HRESULT)
    get_registered_effects : Proc(ID2D1Factory1*, Guid*, UInt32, UInt32*, UInt32*, HRESULT)
    get_effect_properties : Proc(ID2D1Factory1*, Guid*, ID2D1Properties*, HRESULT)
  end

  ID2D1Factory1_GUID = LibC::GUID.new("bb12d362-daee-4b9a-aa1d-14ba401cfa1f")
  CLSID_ID2D1Factory1 = "bb12d362-daee-4b9a-aa1d-14ba401cfa1f"
  struct ID2D1Factory1
    lpVtbl : ID2D1Factory1VTbl*
  end

  struct ID2D1MultithreadVTbl
    query_interface : Proc(ID2D1Multithread*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Multithread*, UInt32)
    release : Proc(ID2D1Multithread*, UInt32)
    get_multithread_protected : Proc(ID2D1Multithread*, LibC::BOOL)
    enter : Proc(ID2D1Multithread*, Void)
    leave : Proc(ID2D1Multithread*, Void)
  end

  ID2D1Multithread_GUID = LibC::GUID.new("31e6e7bc-e0ff-4d46-8c64-a0a8c41c15d3")
  CLSID_ID2D1Multithread = "31e6e7bc-e0ff-4d46-8c64-a0a8c41c15d3"
  struct ID2D1Multithread
    lpVtbl : ID2D1MultithreadVTbl*
  end

  struct ID2D1VertexBufferVTbl
    query_interface : Proc(ID2D1VertexBuffer*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1VertexBuffer*, UInt32)
    release : Proc(ID2D1VertexBuffer*, UInt32)
    map : Proc(ID2D1VertexBuffer*, UInt8**, UInt32, HRESULT)
    unmap : Proc(ID2D1VertexBuffer*, HRESULT)
  end

  ID2D1VertexBuffer_GUID = LibC::GUID.new("9b8b1336-00a5-4668-92b7-ced5d8bf9b7b")
  CLSID_ID2D1VertexBuffer = "9b8b1336-00a5-4668-92b7-ced5d8bf9b7b"
  struct ID2D1VertexBuffer
    lpVtbl : ID2D1VertexBufferVTbl*
  end

  struct ID2D1ResourceTextureVTbl
    query_interface : Proc(ID2D1ResourceTexture*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1ResourceTexture*, UInt32)
    release : Proc(ID2D1ResourceTexture*, UInt32)
    update : Proc(ID2D1ResourceTexture*, UInt32*, UInt32*, UInt32*, UInt32, UInt8*, UInt32, HRESULT)
  end

  ID2D1ResourceTexture_GUID = LibC::GUID.new("688d15c3-02b0-438d-b13a-d1b44c32c39a")
  CLSID_ID2D1ResourceTexture = "688d15c3-02b0-438d-b13a-d1b44c32c39a"
  struct ID2D1ResourceTexture
    lpVtbl : ID2D1ResourceTextureVTbl*
  end

  struct ID2D1RenderInfoVTbl
    query_interface : Proc(ID2D1RenderInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1RenderInfo*, UInt32)
    release : Proc(ID2D1RenderInfo*, UInt32)
    set_input_description : Proc(ID2D1RenderInfo*, UInt32, D2D1_INPUT_DESCRIPTION, HRESULT)
    set_output_buffer : Proc(ID2D1RenderInfo*, D2D1_BUFFER_PRECISION, D2D1_CHANNEL_DEPTH, HRESULT)
    set_cached : Proc(ID2D1RenderInfo*, LibC::BOOL, Void)
    set_instruction_count_hint : Proc(ID2D1RenderInfo*, UInt32, Void)
  end

  ID2D1RenderInfo_GUID = LibC::GUID.new("519ae1bd-d19a-420d-b849-364f594776b7")
  CLSID_ID2D1RenderInfo = "519ae1bd-d19a-420d-b849-364f594776b7"
  struct ID2D1RenderInfo
    lpVtbl : ID2D1RenderInfoVTbl*
  end

  struct ID2D1DrawInfoVTbl
    query_interface : Proc(ID2D1DrawInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1DrawInfo*, UInt32)
    release : Proc(ID2D1DrawInfo*, UInt32)
    set_input_description : Proc(ID2D1DrawInfo*, UInt32, D2D1_INPUT_DESCRIPTION, HRESULT)
    set_output_buffer : Proc(ID2D1DrawInfo*, D2D1_BUFFER_PRECISION, D2D1_CHANNEL_DEPTH, HRESULT)
    set_cached : Proc(ID2D1DrawInfo*, LibC::BOOL, Void)
    set_instruction_count_hint : Proc(ID2D1DrawInfo*, UInt32, Void)
    set_pixel_shader_constant_buffer : Proc(ID2D1DrawInfo*, UInt8*, UInt32, HRESULT)
    set_resource_texture : Proc(ID2D1DrawInfo*, UInt32, ID2D1ResourceTexture, HRESULT)
    set_vertex_shader_constant_buffer : Proc(ID2D1DrawInfo*, UInt8*, UInt32, HRESULT)
    set_pixel_shader : Proc(ID2D1DrawInfo*, Guid*, D2D1_PIXEL_OPTIONS, HRESULT)
    set_vertex_processing : Proc(ID2D1DrawInfo*, ID2D1VertexBuffer, D2D1_VERTEX_OPTIONS, D2D1_BLEND_DESCRIPTION*, D2D1_VERTEX_RANGE*, Guid*, HRESULT)
  end

  ID2D1DrawInfo_GUID = LibC::GUID.new("693ce632-7f2f-45de-93fe-18d88b37aa21")
  CLSID_ID2D1DrawInfo = "693ce632-7f2f-45de-93fe-18d88b37aa21"
  struct ID2D1DrawInfo
    lpVtbl : ID2D1DrawInfoVTbl*
  end

  struct ID2D1ComputeInfoVTbl
    query_interface : Proc(ID2D1ComputeInfo*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1ComputeInfo*, UInt32)
    release : Proc(ID2D1ComputeInfo*, UInt32)
    set_input_description : Proc(ID2D1ComputeInfo*, UInt32, D2D1_INPUT_DESCRIPTION, HRESULT)
    set_output_buffer : Proc(ID2D1ComputeInfo*, D2D1_BUFFER_PRECISION, D2D1_CHANNEL_DEPTH, HRESULT)
    set_cached : Proc(ID2D1ComputeInfo*, LibC::BOOL, Void)
    set_instruction_count_hint : Proc(ID2D1ComputeInfo*, UInt32, Void)
    set_compute_shader_constant_buffer : Proc(ID2D1ComputeInfo*, UInt8*, UInt32, HRESULT)
    set_compute_shader : Proc(ID2D1ComputeInfo*, Guid*, HRESULT)
    set_resource_texture : Proc(ID2D1ComputeInfo*, UInt32, ID2D1ResourceTexture, HRESULT)
  end

  ID2D1ComputeInfo_GUID = LibC::GUID.new("5598b14b-9fd7-48b7-9bdb-8f0964eb38bc")
  CLSID_ID2D1ComputeInfo = "5598b14b-9fd7-48b7-9bdb-8f0964eb38bc"
  struct ID2D1ComputeInfo
    lpVtbl : ID2D1ComputeInfoVTbl*
  end

  struct ID2D1TransformNodeVTbl
    query_interface : Proc(ID2D1TransformNode*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1TransformNode*, UInt32)
    release : Proc(ID2D1TransformNode*, UInt32)
    get_input_count : Proc(ID2D1TransformNode*, UInt32)
  end

  ID2D1TransformNode_GUID = LibC::GUID.new("b2efe1e7-729f-4102-949f-505fa21bf666")
  CLSID_ID2D1TransformNode = "b2efe1e7-729f-4102-949f-505fa21bf666"
  struct ID2D1TransformNode
    lpVtbl : ID2D1TransformNodeVTbl*
  end

  struct ID2D1TransformGraphVTbl
    query_interface : Proc(ID2D1TransformGraph*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1TransformGraph*, UInt32)
    release : Proc(ID2D1TransformGraph*, UInt32)
    get_input_count : Proc(ID2D1TransformGraph*, UInt32)
    set_single_transform_node : Proc(ID2D1TransformGraph*, ID2D1TransformNode, HRESULT)
    add_node : Proc(ID2D1TransformGraph*, ID2D1TransformNode, HRESULT)
    remove_node : Proc(ID2D1TransformGraph*, ID2D1TransformNode, HRESULT)
    set_output_node : Proc(ID2D1TransformGraph*, ID2D1TransformNode, HRESULT)
    connect_node : Proc(ID2D1TransformGraph*, ID2D1TransformNode, ID2D1TransformNode, UInt32, HRESULT)
    connect_to_effect_input : Proc(ID2D1TransformGraph*, UInt32, ID2D1TransformNode, UInt32, HRESULT)
    clear : Proc(ID2D1TransformGraph*, Void)
    set_passthrough_graph : Proc(ID2D1TransformGraph*, UInt32, HRESULT)
  end

  ID2D1TransformGraph_GUID = LibC::GUID.new("13d29038-c3e6-4034-9081-13b53a417992")
  CLSID_ID2D1TransformGraph = "13d29038-c3e6-4034-9081-13b53a417992"
  struct ID2D1TransformGraph
    lpVtbl : ID2D1TransformGraphVTbl*
  end

  struct ID2D1TransformVTbl
    query_interface : Proc(ID2D1Transform*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Transform*, UInt32)
    release : Proc(ID2D1Transform*, UInt32)
    get_input_count : Proc(ID2D1Transform*, UInt32)
    map_output_rect_to_input_rects : Proc(ID2D1Transform*, RECT*, RECT*, UInt32, HRESULT)
    map_input_rects_to_output_rect : Proc(ID2D1Transform*, RECT*, RECT*, UInt32, RECT*, RECT*, HRESULT)
    map_invalid_rect : Proc(ID2D1Transform*, UInt32, RECT, RECT*, HRESULT)
  end

  ID2D1Transform_GUID = LibC::GUID.new("ef1a287d-342a-4f76-8fdb-da0d6ea9f92b")
  CLSID_ID2D1Transform = "ef1a287d-342a-4f76-8fdb-da0d6ea9f92b"
  struct ID2D1Transform
    lpVtbl : ID2D1TransformVTbl*
  end

  struct ID2D1DrawTransformVTbl
    query_interface : Proc(ID2D1DrawTransform*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1DrawTransform*, UInt32)
    release : Proc(ID2D1DrawTransform*, UInt32)
    get_input_count : Proc(ID2D1DrawTransform*, UInt32)
    map_output_rect_to_input_rects : Proc(ID2D1DrawTransform*, RECT*, RECT*, UInt32, HRESULT)
    map_input_rects_to_output_rect : Proc(ID2D1DrawTransform*, RECT*, RECT*, UInt32, RECT*, RECT*, HRESULT)
    map_invalid_rect : Proc(ID2D1DrawTransform*, UInt32, RECT, RECT*, HRESULT)
    set_draw_info : Proc(ID2D1DrawTransform*, ID2D1DrawInfo, HRESULT)
  end

  ID2D1DrawTransform_GUID = LibC::GUID.new("36bfdcb6-9739-435d-a30d-a653beff6a6f")
  CLSID_ID2D1DrawTransform = "36bfdcb6-9739-435d-a30d-a653beff6a6f"
  struct ID2D1DrawTransform
    lpVtbl : ID2D1DrawTransformVTbl*
  end

  struct ID2D1ComputeTransformVTbl
    query_interface : Proc(ID2D1ComputeTransform*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1ComputeTransform*, UInt32)
    release : Proc(ID2D1ComputeTransform*, UInt32)
    get_input_count : Proc(ID2D1ComputeTransform*, UInt32)
    map_output_rect_to_input_rects : Proc(ID2D1ComputeTransform*, RECT*, RECT*, UInt32, HRESULT)
    map_input_rects_to_output_rect : Proc(ID2D1ComputeTransform*, RECT*, RECT*, UInt32, RECT*, RECT*, HRESULT)
    map_invalid_rect : Proc(ID2D1ComputeTransform*, UInt32, RECT, RECT*, HRESULT)
    set_compute_info : Proc(ID2D1ComputeTransform*, ID2D1ComputeInfo, HRESULT)
    calculate_threadgroups : Proc(ID2D1ComputeTransform*, RECT*, UInt32*, UInt32*, UInt32*, HRESULT)
  end

  ID2D1ComputeTransform_GUID = LibC::GUID.new("0d85573c-01e3-4f7d-bfd9-0d60608bf3c3")
  CLSID_ID2D1ComputeTransform = "0d85573c-01e3-4f7d-bfd9-0d60608bf3c3"
  struct ID2D1ComputeTransform
    lpVtbl : ID2D1ComputeTransformVTbl*
  end

  struct ID2D1AnalysisTransformVTbl
    query_interface : Proc(ID2D1AnalysisTransform*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1AnalysisTransform*, UInt32)
    release : Proc(ID2D1AnalysisTransform*, UInt32)
    process_analysis_results : Proc(ID2D1AnalysisTransform*, UInt8*, UInt32, HRESULT)
  end

  ID2D1AnalysisTransform_GUID = LibC::GUID.new("0359dc30-95e6-4568-9055-27720d130e93")
  CLSID_ID2D1AnalysisTransform = "0359dc30-95e6-4568-9055-27720d130e93"
  struct ID2D1AnalysisTransform
    lpVtbl : ID2D1AnalysisTransformVTbl*
  end

  struct ID2D1SourceTransformVTbl
    query_interface : Proc(ID2D1SourceTransform*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1SourceTransform*, UInt32)
    release : Proc(ID2D1SourceTransform*, UInt32)
    get_input_count : Proc(ID2D1SourceTransform*, UInt32)
    map_output_rect_to_input_rects : Proc(ID2D1SourceTransform*, RECT*, RECT*, UInt32, HRESULT)
    map_input_rects_to_output_rect : Proc(ID2D1SourceTransform*, RECT*, RECT*, UInt32, RECT*, RECT*, HRESULT)
    map_invalid_rect : Proc(ID2D1SourceTransform*, UInt32, RECT, RECT*, HRESULT)
    set_render_info : Proc(ID2D1SourceTransform*, ID2D1RenderInfo, HRESULT)
    draw : Proc(ID2D1SourceTransform*, ID2D1Bitmap1, RECT*, D2D_POINT_2U, HRESULT)
  end

  ID2D1SourceTransform_GUID = LibC::GUID.new("db1800dd-0c34-4cf9-be90-31cc0a5653e1")
  CLSID_ID2D1SourceTransform = "db1800dd-0c34-4cf9-be90-31cc0a5653e1"
  struct ID2D1SourceTransform
    lpVtbl : ID2D1SourceTransformVTbl*
  end

  struct ID2D1ConcreteTransformVTbl
    query_interface : Proc(ID2D1ConcreteTransform*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1ConcreteTransform*, UInt32)
    release : Proc(ID2D1ConcreteTransform*, UInt32)
    get_input_count : Proc(ID2D1ConcreteTransform*, UInt32)
    set_output_buffer : Proc(ID2D1ConcreteTransform*, D2D1_BUFFER_PRECISION, D2D1_CHANNEL_DEPTH, HRESULT)
    set_cached : Proc(ID2D1ConcreteTransform*, LibC::BOOL, Void)
  end

  ID2D1ConcreteTransform_GUID = LibC::GUID.new("1a799d8a-69f7-4e4c-9fed-437ccc6684cc")
  CLSID_ID2D1ConcreteTransform = "1a799d8a-69f7-4e4c-9fed-437ccc6684cc"
  struct ID2D1ConcreteTransform
    lpVtbl : ID2D1ConcreteTransformVTbl*
  end

  struct ID2D1BlendTransformVTbl
    query_interface : Proc(ID2D1BlendTransform*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1BlendTransform*, UInt32)
    release : Proc(ID2D1BlendTransform*, UInt32)
    get_input_count : Proc(ID2D1BlendTransform*, UInt32)
    set_output_buffer : Proc(ID2D1BlendTransform*, D2D1_BUFFER_PRECISION, D2D1_CHANNEL_DEPTH, HRESULT)
    set_cached : Proc(ID2D1BlendTransform*, LibC::BOOL, Void)
    set_description : Proc(ID2D1BlendTransform*, D2D1_BLEND_DESCRIPTION*, Void)
    get_description : Proc(ID2D1BlendTransform*, D2D1_BLEND_DESCRIPTION*, Void)
  end

  ID2D1BlendTransform_GUID = LibC::GUID.new("63ac0b32-ba44-450f-8806-7f4ca1ff2f1b")
  CLSID_ID2D1BlendTransform = "63ac0b32-ba44-450f-8806-7f4ca1ff2f1b"
  struct ID2D1BlendTransform
    lpVtbl : ID2D1BlendTransformVTbl*
  end

  struct ID2D1BorderTransformVTbl
    query_interface : Proc(ID2D1BorderTransform*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1BorderTransform*, UInt32)
    release : Proc(ID2D1BorderTransform*, UInt32)
    get_input_count : Proc(ID2D1BorderTransform*, UInt32)
    set_output_buffer : Proc(ID2D1BorderTransform*, D2D1_BUFFER_PRECISION, D2D1_CHANNEL_DEPTH, HRESULT)
    set_cached : Proc(ID2D1BorderTransform*, LibC::BOOL, Void)
    set_extend_mode_x : Proc(ID2D1BorderTransform*, D2D1_EXTEND_MODE, Void)
    set_extend_mode_y : Proc(ID2D1BorderTransform*, D2D1_EXTEND_MODE, Void)
    get_extend_mode_x : Proc(ID2D1BorderTransform*, D2D1_EXTEND_MODE)
    get_extend_mode_y : Proc(ID2D1BorderTransform*, D2D1_EXTEND_MODE)
  end

  ID2D1BorderTransform_GUID = LibC::GUID.new("4998735c-3a19-473c-9781-656847e3a347")
  CLSID_ID2D1BorderTransform = "4998735c-3a19-473c-9781-656847e3a347"
  struct ID2D1BorderTransform
    lpVtbl : ID2D1BorderTransformVTbl*
  end

  struct ID2D1OffsetTransformVTbl
    query_interface : Proc(ID2D1OffsetTransform*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1OffsetTransform*, UInt32)
    release : Proc(ID2D1OffsetTransform*, UInt32)
    get_input_count : Proc(ID2D1OffsetTransform*, UInt32)
    set_offset : Proc(ID2D1OffsetTransform*, POINT, Void)
    get_offset : Proc(ID2D1OffsetTransform*, POINT)
  end

  ID2D1OffsetTransform_GUID = LibC::GUID.new("3fe6adea-7643-4f53-bd14-a0ce63f24042")
  CLSID_ID2D1OffsetTransform = "3fe6adea-7643-4f53-bd14-a0ce63f24042"
  struct ID2D1OffsetTransform
    lpVtbl : ID2D1OffsetTransformVTbl*
  end

  struct ID2D1BoundsAdjustmentTransformVTbl
    query_interface : Proc(ID2D1BoundsAdjustmentTransform*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1BoundsAdjustmentTransform*, UInt32)
    release : Proc(ID2D1BoundsAdjustmentTransform*, UInt32)
    get_input_count : Proc(ID2D1BoundsAdjustmentTransform*, UInt32)
    set_output_bounds : Proc(ID2D1BoundsAdjustmentTransform*, RECT*, Void)
    get_output_bounds : Proc(ID2D1BoundsAdjustmentTransform*, RECT*, Void)
  end

  ID2D1BoundsAdjustmentTransform_GUID = LibC::GUID.new("90f732e2-5092-4606-a819-8651970baccd")
  CLSID_ID2D1BoundsAdjustmentTransform = "90f732e2-5092-4606-a819-8651970baccd"
  struct ID2D1BoundsAdjustmentTransform
    lpVtbl : ID2D1BoundsAdjustmentTransformVTbl*
  end

  struct ID2D1EffectImplVTbl
    query_interface : Proc(ID2D1EffectImpl*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1EffectImpl*, UInt32)
    release : Proc(ID2D1EffectImpl*, UInt32)
    initialize : Proc(ID2D1EffectImpl*, ID2D1EffectContext, ID2D1TransformGraph, HRESULT)
    prepare_for_render : Proc(ID2D1EffectImpl*, D2D1_CHANGE_TYPE, HRESULT)
    set_graph : Proc(ID2D1EffectImpl*, ID2D1TransformGraph, HRESULT)
  end

  ID2D1EffectImpl_GUID = LibC::GUID.new("a248fd3f-3e6c-4e63-9f03-7f68ecc91db9")
  CLSID_ID2D1EffectImpl = "a248fd3f-3e6c-4e63-9f03-7f68ecc91db9"
  struct ID2D1EffectImpl
    lpVtbl : ID2D1EffectImplVTbl*
  end

  struct ID2D1EffectContextVTbl
    query_interface : Proc(ID2D1EffectContext*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1EffectContext*, UInt32)
    release : Proc(ID2D1EffectContext*, UInt32)
    get_dpi : Proc(ID2D1EffectContext*, Float32*, Float32*, Void)
    create_effect : Proc(ID2D1EffectContext*, Guid*, ID2D1Effect*, HRESULT)
    get_maximum_supported_feature_level : Proc(ID2D1EffectContext*, D3D_FEATURE_LEVEL*, UInt32, D3D_FEATURE_LEVEL*, HRESULT)
    create_transform_node_from_effect : Proc(ID2D1EffectContext*, ID2D1Effect, ID2D1TransformNode*, HRESULT)
    create_blend_transform : Proc(ID2D1EffectContext*, UInt32, D2D1_BLEND_DESCRIPTION*, ID2D1BlendTransform*, HRESULT)
    create_border_transform : Proc(ID2D1EffectContext*, D2D1_EXTEND_MODE, D2D1_EXTEND_MODE, ID2D1BorderTransform*, HRESULT)
    create_offset_transform : Proc(ID2D1EffectContext*, POINT, ID2D1OffsetTransform*, HRESULT)
    create_bounds_adjustment_transform : Proc(ID2D1EffectContext*, RECT*, ID2D1BoundsAdjustmentTransform*, HRESULT)
    load_pixel_shader : Proc(ID2D1EffectContext*, Guid*, UInt8*, UInt32, HRESULT)
    load_vertex_shader : Proc(ID2D1EffectContext*, Guid*, UInt8*, UInt32, HRESULT)
    load_compute_shader : Proc(ID2D1EffectContext*, Guid*, UInt8*, UInt32, HRESULT)
    is_shader_loaded : Proc(ID2D1EffectContext*, Guid*, LibC::BOOL)
    create_resource_texture : Proc(ID2D1EffectContext*, Guid*, D2D1_RESOURCE_TEXTURE_PROPERTIES*, UInt8*, UInt32*, UInt32, ID2D1ResourceTexture*, HRESULT)
    find_resource_texture : Proc(ID2D1EffectContext*, Guid*, ID2D1ResourceTexture*, HRESULT)
    create_vertex_buffer : Proc(ID2D1EffectContext*, D2D1_VERTEX_BUFFER_PROPERTIES*, Guid*, D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES*, ID2D1VertexBuffer*, HRESULT)
    find_vertex_buffer : Proc(ID2D1EffectContext*, Guid*, ID2D1VertexBuffer*, HRESULT)
    create_color_context : Proc(ID2D1EffectContext*, D2D1_COLOR_SPACE, UInt8*, UInt32, ID2D1ColorContext*, HRESULT)
    create_color_context_from_filename : Proc(ID2D1EffectContext*, LibC::LPWSTR, ID2D1ColorContext*, HRESULT)
    create_color_context_from_wic_color_context : Proc(ID2D1EffectContext*, IWICColorContext, ID2D1ColorContext*, HRESULT)
    check_feature_support : Proc(ID2D1EffectContext*, D2D1_FEATURE, Void*, UInt32, HRESULT)
    is_buffer_precision_supported : Proc(ID2D1EffectContext*, D2D1_BUFFER_PRECISION, LibC::BOOL)
  end

  ID2D1EffectContext_GUID = LibC::GUID.new("3d9f916b-27dc-4ad7-b4f1-64945340f563")
  CLSID_ID2D1EffectContext = "3d9f916b-27dc-4ad7-b4f1-64945340f563"
  struct ID2D1EffectContext
    lpVtbl : ID2D1EffectContextVTbl*
  end

  struct ID2D1GeometryRealizationVTbl
    query_interface : Proc(ID2D1GeometryRealization*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1GeometryRealization*, UInt32)
    release : Proc(ID2D1GeometryRealization*, UInt32)
    get_factory : Proc(ID2D1GeometryRealization*, ID2D1Factory*, Void)
  end

  ID2D1GeometryRealization_GUID = LibC::GUID.new("a16907d7-bc02-4801-99e8-8cf7f485f774")
  CLSID_ID2D1GeometryRealization = "a16907d7-bc02-4801-99e8-8cf7f485f774"
  struct ID2D1GeometryRealization
    lpVtbl : ID2D1GeometryRealizationVTbl*
  end

  struct ID2D1DeviceContext1VTbl
    query_interface : Proc(ID2D1DeviceContext1*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1DeviceContext1*, UInt32)
    release : Proc(ID2D1DeviceContext1*, UInt32)
    get_factory : Proc(ID2D1DeviceContext1*, ID2D1Factory*, Void)
    create_bitmap : Proc(ID2D1DeviceContext1*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_from_wic_bitmap : Proc(ID2D1DeviceContext1*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_shared_bitmap : Proc(ID2D1DeviceContext1*, Guid*, Void*, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_brush : Proc(ID2D1DeviceContext1*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush*, HRESULT)
    create_solid_color_brush : Proc(ID2D1DeviceContext1*, D2D1_COLOR_F*, D2D1_BRUSH_PROPERTIES*, ID2D1SolidColorBrush*, HRESULT)
    create_gradient_stop_collection : Proc(ID2D1DeviceContext1*, D2D1_GRADIENT_STOP*, UInt32, D2D1_GAMMA, D2D1_EXTEND_MODE, ID2D1GradientStopCollection*, HRESULT)
    create_linear_gradient_brush : Proc(ID2D1DeviceContext1*, D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1LinearGradientBrush*, HRESULT)
    create_radial_gradient_brush : Proc(ID2D1DeviceContext1*, D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1RadialGradientBrush*, HRESULT)
    create_compatible_render_target : Proc(ID2D1DeviceContext1*, D2D_SIZE_F*, D2D_SIZE_U*, D2D1_PIXEL_FORMAT*, D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS, ID2D1BitmapRenderTarget*, HRESULT)
    create_layer : Proc(ID2D1DeviceContext1*, D2D_SIZE_F*, ID2D1Layer*, HRESULT)
    create_mesh : Proc(ID2D1DeviceContext1*, ID2D1Mesh*, HRESULT)
    draw_line : Proc(ID2D1DeviceContext1*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    draw_rectangle : Proc(ID2D1DeviceContext1*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rectangle : Proc(ID2D1DeviceContext1*, D2D_RECT_F*, ID2D1Brush, Void)
    draw_rounded_rectangle : Proc(ID2D1DeviceContext1*, D2D1_ROUNDED_RECT*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rounded_rectangle : Proc(ID2D1DeviceContext1*, D2D1_ROUNDED_RECT*, ID2D1Brush, Void)
    draw_ellipse : Proc(ID2D1DeviceContext1*, D2D1_ELLIPSE*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_ellipse : Proc(ID2D1DeviceContext1*, D2D1_ELLIPSE*, ID2D1Brush, Void)
    draw_geometry : Proc(ID2D1DeviceContext1*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_geometry : Proc(ID2D1DeviceContext1*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, Void)
    fill_mesh : Proc(ID2D1DeviceContext1*, ID2D1Mesh, ID2D1Brush, Void)
    fill_opacity_mask : Proc(ID2D1DeviceContext1*, ID2D1Bitmap, ID2D1Brush, D2D1_OPACITY_MASK_CONTENT, D2D_RECT_F*, D2D_RECT_F*, Void)
    draw_bitmap : Proc(ID2D1DeviceContext1*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_BITMAP_INTERPOLATION_MODE, D2D_RECT_F*, Void)
    draw_text : Proc(ID2D1DeviceContext1*, Char*, UInt32, IDWriteTextFormat, D2D_RECT_F*, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE, Void)
    draw_text_layout : Proc(ID2D1DeviceContext1*, D2D_POINT_2F, IDWriteTextLayout, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, Void)
    draw_glyph_run : Proc(ID2D1DeviceContext1*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    set_transform : Proc(ID2D1DeviceContext1*, D2D_MATRIX_3X2_F*, Void)
    get_transform : Proc(ID2D1DeviceContext1*, D2D_MATRIX_3X2_F*, Void)
    set_antialias_mode : Proc(ID2D1DeviceContext1*, D2D1_ANTIALIAS_MODE, Void)
    get_antialias_mode : Proc(ID2D1DeviceContext1*, D2D1_ANTIALIAS_MODE)
    set_text_antialias_mode : Proc(ID2D1DeviceContext1*, D2D1_TEXT_ANTIALIAS_MODE, Void)
    get_text_antialias_mode : Proc(ID2D1DeviceContext1*, D2D1_TEXT_ANTIALIAS_MODE)
    set_text_rendering_params : Proc(ID2D1DeviceContext1*, IDWriteRenderingParams, Void)
    get_text_rendering_params : Proc(ID2D1DeviceContext1*, IDWriteRenderingParams*, Void)
    set_tags : Proc(ID2D1DeviceContext1*, UInt64, UInt64, Void)
    get_tags : Proc(ID2D1DeviceContext1*, UInt64*, UInt64*, Void)
    push_layer : Proc(ID2D1DeviceContext1*, D2D1_LAYER_PARAMETERS*, ID2D1Layer, Void)
    pop_layer : Proc(ID2D1DeviceContext1*, Void)
    flush : Proc(ID2D1DeviceContext1*, UInt64*, UInt64*, HRESULT)
    save_drawing_state : Proc(ID2D1DeviceContext1*, ID2D1DrawingStateBlock, Void)
    restore_drawing_state : Proc(ID2D1DeviceContext1*, ID2D1DrawingStateBlock, Void)
    push_axis_aligned_clip : Proc(ID2D1DeviceContext1*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, Void)
    pop_axis_aligned_clip : Proc(ID2D1DeviceContext1*, Void)
    clear : Proc(ID2D1DeviceContext1*, D2D1_COLOR_F*, Void)
    begin_draw : Proc(ID2D1DeviceContext1*, Void)
    end_draw : Proc(ID2D1DeviceContext1*, UInt64*, UInt64*, HRESULT)
    get_pixel_format : Proc(ID2D1DeviceContext1*, D2D1_PIXEL_FORMAT)
    set_dpi : Proc(ID2D1DeviceContext1*, Float32, Float32, Void)
    get_dpi : Proc(ID2D1DeviceContext1*, Float32*, Float32*, Void)
    get_size : Proc(ID2D1DeviceContext1*, D2D_SIZE_F)
    get_pixel_size : Proc(ID2D1DeviceContext1*, D2D_SIZE_U)
    get_maximum_bitmap_size : Proc(ID2D1DeviceContext1*, UInt32)
    is_supported : Proc(ID2D1DeviceContext1*, D2D1_RENDER_TARGET_PROPERTIES*, LibC::BOOL)
    create_bitmap2 : Proc(ID2D1DeviceContext1*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_bitmap_from_wic_bitmap2 : Proc(ID2D1DeviceContext1*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_color_context : Proc(ID2D1DeviceContext1*, D2D1_COLOR_SPACE, UInt8*, UInt32, ID2D1ColorContext*, HRESULT)
    create_color_context_from_filename : Proc(ID2D1DeviceContext1*, LibC::LPWSTR, ID2D1ColorContext*, HRESULT)
    create_color_context_from_wic_color_context : Proc(ID2D1DeviceContext1*, IWICColorContext, ID2D1ColorContext*, HRESULT)
    create_bitmap_from_dxgi_surface : Proc(ID2D1DeviceContext1*, IDXGISurface, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_effect : Proc(ID2D1DeviceContext1*, Guid*, ID2D1Effect*, HRESULT)
    create_gradient_stop_collection2 : Proc(ID2D1DeviceContext1*, D2D1_GRADIENT_STOP*, UInt32, D2D1_COLOR_SPACE, D2D1_COLOR_SPACE, D2D1_BUFFER_PRECISION, D2D1_EXTEND_MODE, D2D1_COLOR_INTERPOLATION_MODE, ID2D1GradientStopCollection1*, HRESULT)
    create_image_brush : Proc(ID2D1DeviceContext1*, ID2D1Image, D2D1_IMAGE_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1ImageBrush*, HRESULT)
    create_bitmap_brush2 : Proc(ID2D1DeviceContext1*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES1*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush1*, HRESULT)
    create_command_list : Proc(ID2D1DeviceContext1*, ID2D1CommandList*, HRESULT)
    is_dxgi_format_supported : Proc(ID2D1DeviceContext1*, DXGI_FORMAT, LibC::BOOL)
    is_buffer_precision_supported : Proc(ID2D1DeviceContext1*, D2D1_BUFFER_PRECISION, LibC::BOOL)
    get_image_local_bounds : Proc(ID2D1DeviceContext1*, ID2D1Image, D2D_RECT_F*, HRESULT)
    get_image_world_bounds : Proc(ID2D1DeviceContext1*, ID2D1Image, D2D_RECT_F*, HRESULT)
    get_glyph_run_world_bounds : Proc(ID2D1DeviceContext1*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_MEASURING_MODE, D2D_RECT_F*, HRESULT)
    get_device : Proc(ID2D1DeviceContext1*, ID2D1Device*, Void)
    set_target : Proc(ID2D1DeviceContext1*, ID2D1Image, Void)
    get_target : Proc(ID2D1DeviceContext1*, ID2D1Image*, Void)
    set_rendering_controls : Proc(ID2D1DeviceContext1*, D2D1_RENDERING_CONTROLS*, Void)
    get_rendering_controls : Proc(ID2D1DeviceContext1*, D2D1_RENDERING_CONTROLS*, Void)
    set_primitive_blend : Proc(ID2D1DeviceContext1*, D2D1_PRIMITIVE_BLEND, Void)
    get_primitive_blend : Proc(ID2D1DeviceContext1*, D2D1_PRIMITIVE_BLEND)
    set_unit_mode : Proc(ID2D1DeviceContext1*, D2D1_UNIT_MODE, Void)
    get_unit_mode : Proc(ID2D1DeviceContext1*, D2D1_UNIT_MODE)
    draw_glyph_run2 : Proc(ID2D1DeviceContext1*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    draw_image : Proc(ID2D1DeviceContext1*, ID2D1Image, D2D_POINT_2F*, D2D_RECT_F*, D2D1_INTERPOLATION_MODE, D2D1_COMPOSITE_MODE, Void)
    draw_gdi_metafile : Proc(ID2D1DeviceContext1*, ID2D1GdiMetafile, D2D_POINT_2F*, Void)
    draw_bitmap2 : Proc(ID2D1DeviceContext1*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_INTERPOLATION_MODE, D2D_RECT_F*, D2D_MATRIX_4X4_F*, Void)
    push_layer2 : Proc(ID2D1DeviceContext1*, D2D1_LAYER_PARAMETERS1*, ID2D1Layer, Void)
    invalidate_effect_input_rectangle : Proc(ID2D1DeviceContext1*, ID2D1Effect, UInt32, D2D_RECT_F*, HRESULT)
    get_effect_invalid_rectangle_count : Proc(ID2D1DeviceContext1*, ID2D1Effect, UInt32*, HRESULT)
    get_effect_invalid_rectangles : Proc(ID2D1DeviceContext1*, ID2D1Effect, D2D_RECT_F*, UInt32, HRESULT)
    get_effect_required_input_rectangles : Proc(ID2D1DeviceContext1*, ID2D1Effect, D2D_RECT_F*, D2D1_EFFECT_INPUT_DESCRIPTION*, D2D_RECT_F*, UInt32, HRESULT)
    fill_opacity_mask2 : Proc(ID2D1DeviceContext1*, ID2D1Bitmap, ID2D1Brush, D2D_RECT_F*, D2D_RECT_F*, Void)
    create_filled_geometry_realization : Proc(ID2D1DeviceContext1*, ID2D1Geometry, Float32, ID2D1GeometryRealization*, HRESULT)
    create_stroked_geometry_realization : Proc(ID2D1DeviceContext1*, ID2D1Geometry, Float32, Float32, ID2D1StrokeStyle, ID2D1GeometryRealization*, HRESULT)
    draw_geometry_realization : Proc(ID2D1DeviceContext1*, ID2D1GeometryRealization, ID2D1Brush, Void)
  end

  ID2D1DeviceContext1_GUID = LibC::GUID.new("d37f57e4-6908-459f-a199-e72f24f79987")
  CLSID_ID2D1DeviceContext1 = "d37f57e4-6908-459f-a199-e72f24f79987"
  struct ID2D1DeviceContext1
    lpVtbl : ID2D1DeviceContext1VTbl*
  end

  struct ID2D1Device1VTbl
    query_interface : Proc(ID2D1Device1*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Device1*, UInt32)
    release : Proc(ID2D1Device1*, UInt32)
    get_factory : Proc(ID2D1Device1*, ID2D1Factory*, Void)
    create_device_context : Proc(ID2D1Device1*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext*, HRESULT)
    create_print_control : Proc(ID2D1Device1*, IWICImagingFactory, IPrintDocumentPackageTarget, D2D1_PRINT_CONTROL_PROPERTIES*, ID2D1PrintControl*, HRESULT)
    set_maximum_texture_memory : Proc(ID2D1Device1*, UInt64, Void)
    get_maximum_texture_memory : Proc(ID2D1Device1*, UInt64)
    clear_resources : Proc(ID2D1Device1*, UInt32, Void)
    get_rendering_priority : Proc(ID2D1Device1*, D2D1_RENDERING_PRIORITY)
    set_rendering_priority : Proc(ID2D1Device1*, D2D1_RENDERING_PRIORITY, Void)
    create_device_context2 : Proc(ID2D1Device1*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext1*, HRESULT)
  end

  ID2D1Device1_GUID = LibC::GUID.new("d21768e1-23a4-4823-a14b-7c3eba85d658")
  CLSID_ID2D1Device1 = "d21768e1-23a4-4823-a14b-7c3eba85d658"
  struct ID2D1Device1
    lpVtbl : ID2D1Device1VTbl*
  end

  struct ID2D1Factory2VTbl
    query_interface : Proc(ID2D1Factory2*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Factory2*, UInt32)
    release : Proc(ID2D1Factory2*, UInt32)
    reload_system_metrics : Proc(ID2D1Factory2*, HRESULT)
    get_desktop_dpi : Proc(ID2D1Factory2*, Float32*, Float32*, Void)
    create_rectangle_geometry : Proc(ID2D1Factory2*, D2D_RECT_F*, ID2D1RectangleGeometry*, HRESULT)
    create_rounded_rectangle_geometry : Proc(ID2D1Factory2*, D2D1_ROUNDED_RECT*, ID2D1RoundedRectangleGeometry*, HRESULT)
    create_ellipse_geometry : Proc(ID2D1Factory2*, D2D1_ELLIPSE*, ID2D1EllipseGeometry*, HRESULT)
    create_geometry_group : Proc(ID2D1Factory2*, D2D1_FILL_MODE, ID2D1Geometry*, UInt32, ID2D1GeometryGroup*, HRESULT)
    create_transformed_geometry : Proc(ID2D1Factory2*, ID2D1Geometry, D2D_MATRIX_3X2_F*, ID2D1TransformedGeometry*, HRESULT)
    create_path_geometry : Proc(ID2D1Factory2*, ID2D1PathGeometry*, HRESULT)
    create_stroke_style : Proc(ID2D1Factory2*, D2D1_STROKE_STYLE_PROPERTIES*, Float32*, UInt32, ID2D1StrokeStyle*, HRESULT)
    create_drawing_state_block : Proc(ID2D1Factory2*, D2D1_DRAWING_STATE_DESCRIPTION*, IDWriteRenderingParams, ID2D1DrawingStateBlock*, HRESULT)
    create_wic_bitmap_render_target : Proc(ID2D1Factory2*, IWICBitmap, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_hwnd_render_target : Proc(ID2D1Factory2*, D2D1_RENDER_TARGET_PROPERTIES*, D2D1_HWND_RENDER_TARGET_PROPERTIES*, ID2D1HwndRenderTarget*, HRESULT)
    create_dxgi_surface_render_target : Proc(ID2D1Factory2*, IDXGISurface, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_dc_render_target : Proc(ID2D1Factory2*, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1DCRenderTarget*, HRESULT)
    create_device : Proc(ID2D1Factory2*, IDXGIDevice, ID2D1Device*, HRESULT)
    create_stroke_style2 : Proc(ID2D1Factory2*, D2D1_STROKE_STYLE_PROPERTIES1*, Float32*, UInt32, ID2D1StrokeStyle1*, HRESULT)
    create_path_geometry2 : Proc(ID2D1Factory2*, ID2D1PathGeometry1*, HRESULT)
    create_drawing_state_block2 : Proc(ID2D1Factory2*, D2D1_DRAWING_STATE_DESCRIPTION1*, IDWriteRenderingParams, ID2D1DrawingStateBlock1*, HRESULT)
    create_gdi_metafile : Proc(ID2D1Factory2*, IStream, ID2D1GdiMetafile*, HRESULT)
    register_effect_from_stream : Proc(ID2D1Factory2*, Guid*, IStream, D2D1_PROPERTY_BINDING*, UInt32, PD2D1_EFFECT_FACTORY, HRESULT)
    register_effect_from_string : Proc(ID2D1Factory2*, Guid*, LibC::LPWSTR, D2D1_PROPERTY_BINDING*, UInt32, PD2D1_EFFECT_FACTORY, HRESULT)
    unregister_effect : Proc(ID2D1Factory2*, Guid*, HRESULT)
    get_registered_effects : Proc(ID2D1Factory2*, Guid*, UInt32, UInt32*, UInt32*, HRESULT)
    get_effect_properties : Proc(ID2D1Factory2*, Guid*, ID2D1Properties*, HRESULT)
    create_device2 : Proc(ID2D1Factory2*, IDXGIDevice, ID2D1Device1*, HRESULT)
  end

  ID2D1Factory2_GUID = LibC::GUID.new("94f81a73-9212-4376-9c58-b16a3a0d3992")
  CLSID_ID2D1Factory2 = "94f81a73-9212-4376-9c58-b16a3a0d3992"
  struct ID2D1Factory2
    lpVtbl : ID2D1Factory2VTbl*
  end

  struct ID2D1CommandSink1VTbl
    query_interface : Proc(ID2D1CommandSink1*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1CommandSink1*, UInt32)
    release : Proc(ID2D1CommandSink1*, UInt32)
    begin_draw : Proc(ID2D1CommandSink1*, HRESULT)
    end_draw : Proc(ID2D1CommandSink1*, HRESULT)
    set_antialias_mode : Proc(ID2D1CommandSink1*, D2D1_ANTIALIAS_MODE, HRESULT)
    set_tags : Proc(ID2D1CommandSink1*, UInt64, UInt64, HRESULT)
    set_text_antialias_mode : Proc(ID2D1CommandSink1*, D2D1_TEXT_ANTIALIAS_MODE, HRESULT)
    set_text_rendering_params : Proc(ID2D1CommandSink1*, IDWriteRenderingParams, HRESULT)
    set_transform : Proc(ID2D1CommandSink1*, D2D_MATRIX_3X2_F*, HRESULT)
    set_primitive_blend : Proc(ID2D1CommandSink1*, D2D1_PRIMITIVE_BLEND, HRESULT)
    set_unit_mode : Proc(ID2D1CommandSink1*, D2D1_UNIT_MODE, HRESULT)
    clear : Proc(ID2D1CommandSink1*, D2D1_COLOR_F*, HRESULT)
    draw_glyph_run : Proc(ID2D1CommandSink1*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, ID2D1Brush, DWRITE_MEASURING_MODE, HRESULT)
    draw_line : Proc(ID2D1CommandSink1*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_geometry : Proc(ID2D1CommandSink1*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_rectangle : Proc(ID2D1CommandSink1*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_bitmap : Proc(ID2D1CommandSink1*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_INTERPOLATION_MODE, D2D_RECT_F*, D2D_MATRIX_4X4_F*, HRESULT)
    draw_image : Proc(ID2D1CommandSink1*, ID2D1Image, D2D_POINT_2F*, D2D_RECT_F*, D2D1_INTERPOLATION_MODE, D2D1_COMPOSITE_MODE, HRESULT)
    draw_gdi_metafile : Proc(ID2D1CommandSink1*, ID2D1GdiMetafile, D2D_POINT_2F*, HRESULT)
    fill_mesh : Proc(ID2D1CommandSink1*, ID2D1Mesh, ID2D1Brush, HRESULT)
    fill_opacity_mask : Proc(ID2D1CommandSink1*, ID2D1Bitmap, ID2D1Brush, D2D_RECT_F*, D2D_RECT_F*, HRESULT)
    fill_geometry : Proc(ID2D1CommandSink1*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, HRESULT)
    fill_rectangle : Proc(ID2D1CommandSink1*, D2D_RECT_F*, ID2D1Brush, HRESULT)
    push_axis_aligned_clip : Proc(ID2D1CommandSink1*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, HRESULT)
    push_layer : Proc(ID2D1CommandSink1*, D2D1_LAYER_PARAMETERS1*, ID2D1Layer, HRESULT)
    pop_axis_aligned_clip : Proc(ID2D1CommandSink1*, HRESULT)
    pop_layer : Proc(ID2D1CommandSink1*, HRESULT)
    set_primitive_blend1 : Proc(ID2D1CommandSink1*, D2D1_PRIMITIVE_BLEND, HRESULT)
  end

  ID2D1CommandSink1_GUID = LibC::GUID.new("9eb767fd-4269-4467-b8c2-eb30cb305743")
  CLSID_ID2D1CommandSink1 = "9eb767fd-4269-4467-b8c2-eb30cb305743"
  struct ID2D1CommandSink1
    lpVtbl : ID2D1CommandSink1VTbl*
  end

  struct ID2D1SvgAttributeVTbl
    query_interface : Proc(ID2D1SvgAttribute*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1SvgAttribute*, UInt32)
    release : Proc(ID2D1SvgAttribute*, UInt32)
    get_factory : Proc(ID2D1SvgAttribute*, ID2D1Factory*, Void)
    get_element : Proc(ID2D1SvgAttribute*, ID2D1SvgElement*, Void)
    clone : Proc(ID2D1SvgAttribute*, ID2D1SvgAttribute*, HRESULT)
  end

  ID2D1SvgAttribute_GUID = LibC::GUID.new("c9cdb0dd-f8c9-4e70-b7c2-301c80292c5e")
  CLSID_ID2D1SvgAttribute = "c9cdb0dd-f8c9-4e70-b7c2-301c80292c5e"
  struct ID2D1SvgAttribute
    lpVtbl : ID2D1SvgAttributeVTbl*
  end

  struct ID2D1SvgPaintVTbl
    query_interface : Proc(ID2D1SvgPaint*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1SvgPaint*, UInt32)
    release : Proc(ID2D1SvgPaint*, UInt32)
    get_factory : Proc(ID2D1SvgPaint*, ID2D1Factory*, Void)
    get_element : Proc(ID2D1SvgPaint*, ID2D1SvgElement*, Void)
    clone : Proc(ID2D1SvgPaint*, ID2D1SvgAttribute*, HRESULT)
    set_paint_type : Proc(ID2D1SvgPaint*, D2D1_SVG_PAINT_TYPE, HRESULT)
    get_paint_type : Proc(ID2D1SvgPaint*, D2D1_SVG_PAINT_TYPE)
    set_color : Proc(ID2D1SvgPaint*, D2D1_COLOR_F*, HRESULT)
    get_color : Proc(ID2D1SvgPaint*, D2D1_COLOR_F*, Void)
    set_id : Proc(ID2D1SvgPaint*, LibC::LPWSTR, HRESULT)
    get_id : Proc(ID2D1SvgPaint*, Char*, UInt32, HRESULT)
    get_id_length : Proc(ID2D1SvgPaint*, UInt32)
  end

  ID2D1SvgPaint_GUID = LibC::GUID.new("d59bab0a-68a2-455b-a5dc-9eb2854e2490")
  CLSID_ID2D1SvgPaint = "d59bab0a-68a2-455b-a5dc-9eb2854e2490"
  struct ID2D1SvgPaint
    lpVtbl : ID2D1SvgPaintVTbl*
  end

  struct ID2D1SvgStrokeDashArrayVTbl
    query_interface : Proc(ID2D1SvgStrokeDashArray*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1SvgStrokeDashArray*, UInt32)
    release : Proc(ID2D1SvgStrokeDashArray*, UInt32)
    get_factory : Proc(ID2D1SvgStrokeDashArray*, ID2D1Factory*, Void)
    get_element : Proc(ID2D1SvgStrokeDashArray*, ID2D1SvgElement*, Void)
    clone : Proc(ID2D1SvgStrokeDashArray*, ID2D1SvgAttribute*, HRESULT)
    remove_dashes_at_end : Proc(ID2D1SvgStrokeDashArray*, UInt32, HRESULT)
    update_dashes : Proc(ID2D1SvgStrokeDashArray*, D2D1_SVG_LENGTH*, UInt32, UInt32, HRESULT)
    update_dashes2 : Proc(ID2D1SvgStrokeDashArray*, Float32*, UInt32, UInt32, HRESULT)
    get_dashes : Proc(ID2D1SvgStrokeDashArray*, D2D1_SVG_LENGTH*, UInt32, UInt32, HRESULT)
    get_dashes2 : Proc(ID2D1SvgStrokeDashArray*, Float32*, UInt32, UInt32, HRESULT)
    get_dashes_count : Proc(ID2D1SvgStrokeDashArray*, UInt32)
  end

  ID2D1SvgStrokeDashArray_GUID = LibC::GUID.new("f1c0ca52-92a3-4f00-b4ce-f35691efd9d9")
  CLSID_ID2D1SvgStrokeDashArray = "f1c0ca52-92a3-4f00-b4ce-f35691efd9d9"
  struct ID2D1SvgStrokeDashArray
    lpVtbl : ID2D1SvgStrokeDashArrayVTbl*
  end

  struct ID2D1SvgPointCollectionVTbl
    query_interface : Proc(ID2D1SvgPointCollection*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1SvgPointCollection*, UInt32)
    release : Proc(ID2D1SvgPointCollection*, UInt32)
    get_factory : Proc(ID2D1SvgPointCollection*, ID2D1Factory*, Void)
    get_element : Proc(ID2D1SvgPointCollection*, ID2D1SvgElement*, Void)
    clone : Proc(ID2D1SvgPointCollection*, ID2D1SvgAttribute*, HRESULT)
    remove_points_at_end : Proc(ID2D1SvgPointCollection*, UInt32, HRESULT)
    update_points : Proc(ID2D1SvgPointCollection*, D2D_POINT_2F*, UInt32, UInt32, HRESULT)
    get_points : Proc(ID2D1SvgPointCollection*, D2D_POINT_2F*, UInt32, UInt32, HRESULT)
    get_points_count : Proc(ID2D1SvgPointCollection*, UInt32)
  end

  ID2D1SvgPointCollection_GUID = LibC::GUID.new("9dbe4c0d-3572-4dd9-9825-5530813bb712")
  CLSID_ID2D1SvgPointCollection = "9dbe4c0d-3572-4dd9-9825-5530813bb712"
  struct ID2D1SvgPointCollection
    lpVtbl : ID2D1SvgPointCollectionVTbl*
  end

  struct ID2D1SvgPathDataVTbl
    query_interface : Proc(ID2D1SvgPathData*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1SvgPathData*, UInt32)
    release : Proc(ID2D1SvgPathData*, UInt32)
    get_factory : Proc(ID2D1SvgPathData*, ID2D1Factory*, Void)
    get_element : Proc(ID2D1SvgPathData*, ID2D1SvgElement*, Void)
    clone : Proc(ID2D1SvgPathData*, ID2D1SvgAttribute*, HRESULT)
    remove_segment_data_at_end : Proc(ID2D1SvgPathData*, UInt32, HRESULT)
    update_segment_data : Proc(ID2D1SvgPathData*, Float32*, UInt32, UInt32, HRESULT)
    get_segment_data : Proc(ID2D1SvgPathData*, Float32*, UInt32, UInt32, HRESULT)
    get_segment_data_count : Proc(ID2D1SvgPathData*, UInt32)
    remove_commands_at_end : Proc(ID2D1SvgPathData*, UInt32, HRESULT)
    update_commands : Proc(ID2D1SvgPathData*, D2D1_SVG_PATH_COMMAND*, UInt32, UInt32, HRESULT)
    get_commands : Proc(ID2D1SvgPathData*, D2D1_SVG_PATH_COMMAND*, UInt32, UInt32, HRESULT)
    get_commands_count : Proc(ID2D1SvgPathData*, UInt32)
    create_path_geometry : Proc(ID2D1SvgPathData*, D2D1_FILL_MODE, ID2D1PathGeometry1*, HRESULT)
  end

  ID2D1SvgPathData_GUID = LibC::GUID.new("c095e4f4-bb98-43d6-9745-4d1b84ec9888")
  CLSID_ID2D1SvgPathData = "c095e4f4-bb98-43d6-9745-4d1b84ec9888"
  struct ID2D1SvgPathData
    lpVtbl : ID2D1SvgPathDataVTbl*
  end

  struct ID2D1SvgElementVTbl
    query_interface : Proc(ID2D1SvgElement*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1SvgElement*, UInt32)
    release : Proc(ID2D1SvgElement*, UInt32)
    get_factory : Proc(ID2D1SvgElement*, ID2D1Factory*, Void)
    get_document : Proc(ID2D1SvgElement*, ID2D1SvgDocument*, Void)
    get_tag_name : Proc(ID2D1SvgElement*, Char*, UInt32, HRESULT)
    get_tag_name_length : Proc(ID2D1SvgElement*, UInt32)
    is_text_content : Proc(ID2D1SvgElement*, LibC::BOOL)
    get_parent : Proc(ID2D1SvgElement*, ID2D1SvgElement*, Void)
    has_children : Proc(ID2D1SvgElement*, LibC::BOOL)
    get_first_child : Proc(ID2D1SvgElement*, ID2D1SvgElement*, Void)
    get_last_child : Proc(ID2D1SvgElement*, ID2D1SvgElement*, Void)
    get_previous_child : Proc(ID2D1SvgElement*, ID2D1SvgElement, ID2D1SvgElement*, HRESULT)
    get_next_child : Proc(ID2D1SvgElement*, ID2D1SvgElement, ID2D1SvgElement*, HRESULT)
    insert_child_before : Proc(ID2D1SvgElement*, ID2D1SvgElement, ID2D1SvgElement, HRESULT)
    append_child : Proc(ID2D1SvgElement*, ID2D1SvgElement, HRESULT)
    replace_child : Proc(ID2D1SvgElement*, ID2D1SvgElement, ID2D1SvgElement, HRESULT)
    remove_child : Proc(ID2D1SvgElement*, ID2D1SvgElement, HRESULT)
    create_child : Proc(ID2D1SvgElement*, LibC::LPWSTR, ID2D1SvgElement*, HRESULT)
    is_attribute_specified : Proc(ID2D1SvgElement*, LibC::LPWSTR, LibC::BOOL*, LibC::BOOL)
    get_specified_attribute_count : Proc(ID2D1SvgElement*, UInt32)
    get_specified_attribute_name : Proc(ID2D1SvgElement*, UInt32, Char*, UInt32, LibC::BOOL*, HRESULT)
    get_specified_attribute_name_length : Proc(ID2D1SvgElement*, UInt32, UInt32*, LibC::BOOL*, HRESULT)
    remove_attribute : Proc(ID2D1SvgElement*, LibC::LPWSTR, HRESULT)
    set_text_value : Proc(ID2D1SvgElement*, Char*, UInt32, HRESULT)
    get_text_value : Proc(ID2D1SvgElement*, Char*, UInt32, HRESULT)
    get_text_value_length : Proc(ID2D1SvgElement*, UInt32)
    set_attribute_value : Proc(ID2D1SvgElement*, LibC::LPWSTR, ID2D1SvgAttribute, HRESULT)
    set_attribute_value2 : Proc(ID2D1SvgElement*, LibC::LPWSTR, D2D1_SVG_ATTRIBUTE_POD_TYPE, Void*, UInt32, HRESULT)
    set_attribute_value3 : Proc(ID2D1SvgElement*, LibC::LPWSTR, D2D1_SVG_ATTRIBUTE_STRING_TYPE, LibC::LPWSTR, HRESULT)
    get_attribute_value : Proc(ID2D1SvgElement*, LibC::LPWSTR, Guid*, Void**, HRESULT)
    get_attribute_value2 : Proc(ID2D1SvgElement*, LibC::LPWSTR, D2D1_SVG_ATTRIBUTE_POD_TYPE, Void*, UInt32, HRESULT)
    get_attribute_value3 : Proc(ID2D1SvgElement*, LibC::LPWSTR, D2D1_SVG_ATTRIBUTE_STRING_TYPE, Char*, UInt32, HRESULT)
    get_attribute_value_length : Proc(ID2D1SvgElement*, LibC::LPWSTR, D2D1_SVG_ATTRIBUTE_STRING_TYPE, UInt32*, HRESULT)
  end

  ID2D1SvgElement_GUID = LibC::GUID.new("ac7b67a6-183e-49c1-a823-0ebe40b0db29")
  CLSID_ID2D1SvgElement = "ac7b67a6-183e-49c1-a823-0ebe40b0db29"
  struct ID2D1SvgElement
    lpVtbl : ID2D1SvgElementVTbl*
  end

  struct ID2D1SvgDocumentVTbl
    query_interface : Proc(ID2D1SvgDocument*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1SvgDocument*, UInt32)
    release : Proc(ID2D1SvgDocument*, UInt32)
    get_factory : Proc(ID2D1SvgDocument*, ID2D1Factory*, Void)
    set_viewport_size : Proc(ID2D1SvgDocument*, D2D_SIZE_F, HRESULT)
    get_viewport_size : Proc(ID2D1SvgDocument*, D2D_SIZE_F)
    set_root : Proc(ID2D1SvgDocument*, ID2D1SvgElement, HRESULT)
    get_root : Proc(ID2D1SvgDocument*, ID2D1SvgElement*, Void)
    find_element_by_id : Proc(ID2D1SvgDocument*, LibC::LPWSTR, ID2D1SvgElement*, HRESULT)
    serialize : Proc(ID2D1SvgDocument*, IStream, ID2D1SvgElement, HRESULT)
    deserialize : Proc(ID2D1SvgDocument*, IStream, ID2D1SvgElement*, HRESULT)
    create_paint : Proc(ID2D1SvgDocument*, D2D1_SVG_PAINT_TYPE, D2D1_COLOR_F*, LibC::LPWSTR, ID2D1SvgPaint*, HRESULT)
    create_stroke_dash_array : Proc(ID2D1SvgDocument*, D2D1_SVG_LENGTH*, UInt32, ID2D1SvgStrokeDashArray*, HRESULT)
    create_point_collection : Proc(ID2D1SvgDocument*, D2D_POINT_2F*, UInt32, ID2D1SvgPointCollection*, HRESULT)
    create_path_data : Proc(ID2D1SvgDocument*, Float32*, UInt32, D2D1_SVG_PATH_COMMAND*, UInt32, ID2D1SvgPathData*, HRESULT)
  end

  ID2D1SvgDocument_GUID = LibC::GUID.new("86b88e4d-afa4-4d7b-88e4-68a51c4a0aec")
  CLSID_ID2D1SvgDocument = "86b88e4d-afa4-4d7b-88e4-68a51c4a0aec"
  struct ID2D1SvgDocument
    lpVtbl : ID2D1SvgDocumentVTbl*
  end

  struct ID2D1InkStyleVTbl
    query_interface : Proc(ID2D1InkStyle*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1InkStyle*, UInt32)
    release : Proc(ID2D1InkStyle*, UInt32)
    get_factory : Proc(ID2D1InkStyle*, ID2D1Factory*, Void)
    set_nib_transform : Proc(ID2D1InkStyle*, D2D_MATRIX_3X2_F*, Void)
    get_nib_transform : Proc(ID2D1InkStyle*, D2D_MATRIX_3X2_F*, Void)
    set_nib_shape : Proc(ID2D1InkStyle*, D2D1_INK_NIB_SHAPE, Void)
    get_nib_shape : Proc(ID2D1InkStyle*, D2D1_INK_NIB_SHAPE)
  end

  ID2D1InkStyle_GUID = LibC::GUID.new("bae8b344-23fc-4071-8cb5-d05d6f073848")
  CLSID_ID2D1InkStyle = "bae8b344-23fc-4071-8cb5-d05d6f073848"
  struct ID2D1InkStyle
    lpVtbl : ID2D1InkStyleVTbl*
  end

  struct ID2D1InkVTbl
    query_interface : Proc(ID2D1Ink*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Ink*, UInt32)
    release : Proc(ID2D1Ink*, UInt32)
    get_factory : Proc(ID2D1Ink*, ID2D1Factory*, Void)
    set_start_point : Proc(ID2D1Ink*, D2D1_INK_POINT*, Void)
    get_start_point : Proc(ID2D1Ink*, D2D1_INK_POINT)
    add_segments : Proc(ID2D1Ink*, D2D1_INK_BEZIER_SEGMENT*, UInt32, HRESULT)
    remove_segments_at_end : Proc(ID2D1Ink*, UInt32, HRESULT)
    set_segments : Proc(ID2D1Ink*, UInt32, D2D1_INK_BEZIER_SEGMENT*, UInt32, HRESULT)
    set_segment_at_end : Proc(ID2D1Ink*, D2D1_INK_BEZIER_SEGMENT*, HRESULT)
    get_segment_count : Proc(ID2D1Ink*, UInt32)
    get_segments : Proc(ID2D1Ink*, UInt32, D2D1_INK_BEZIER_SEGMENT*, UInt32, HRESULT)
    stream_as_geometry : Proc(ID2D1Ink*, ID2D1InkStyle, D2D_MATRIX_3X2_F*, Float32, ID2D1SimplifiedGeometrySink, HRESULT)
    get_bounds : Proc(ID2D1Ink*, ID2D1InkStyle, D2D_MATRIX_3X2_F*, D2D_RECT_F*, HRESULT)
  end

  ID2D1Ink_GUID = LibC::GUID.new("b499923b-7029-478f-a8b3-432c7c5f5312")
  CLSID_ID2D1Ink = "b499923b-7029-478f-a8b3-432c7c5f5312"
  struct ID2D1Ink
    lpVtbl : ID2D1InkVTbl*
  end

  struct ID2D1GradientMeshVTbl
    query_interface : Proc(ID2D1GradientMesh*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1GradientMesh*, UInt32)
    release : Proc(ID2D1GradientMesh*, UInt32)
    get_factory : Proc(ID2D1GradientMesh*, ID2D1Factory*, Void)
    get_patch_count : Proc(ID2D1GradientMesh*, UInt32)
    get_patches : Proc(ID2D1GradientMesh*, UInt32, D2D1_GRADIENT_MESH_PATCH*, UInt32, HRESULT)
  end

  ID2D1GradientMesh_GUID = LibC::GUID.new("f292e401-c050-4cde-83d7-04962d3b23c2")
  CLSID_ID2D1GradientMesh = "f292e401-c050-4cde-83d7-04962d3b23c2"
  struct ID2D1GradientMesh
    lpVtbl : ID2D1GradientMeshVTbl*
  end

  struct ID2D1ImageSourceVTbl
    query_interface : Proc(ID2D1ImageSource*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1ImageSource*, UInt32)
    release : Proc(ID2D1ImageSource*, UInt32)
    get_factory : Proc(ID2D1ImageSource*, ID2D1Factory*, Void)
    offer_resources : Proc(ID2D1ImageSource*, HRESULT)
    try_reclaim_resources : Proc(ID2D1ImageSource*, LibC::BOOL*, HRESULT)
  end

  ID2D1ImageSource_GUID = LibC::GUID.new("c9b664e5-74a1-4378-9ac2-eefc37a3f4d8")
  CLSID_ID2D1ImageSource = "c9b664e5-74a1-4378-9ac2-eefc37a3f4d8"
  struct ID2D1ImageSource
    lpVtbl : ID2D1ImageSourceVTbl*
  end

  struct ID2D1ImageSourceFromWicVTbl
    query_interface : Proc(ID2D1ImageSourceFromWic*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1ImageSourceFromWic*, UInt32)
    release : Proc(ID2D1ImageSourceFromWic*, UInt32)
    get_factory : Proc(ID2D1ImageSourceFromWic*, ID2D1Factory*, Void)
    offer_resources : Proc(ID2D1ImageSourceFromWic*, HRESULT)
    try_reclaim_resources : Proc(ID2D1ImageSourceFromWic*, LibC::BOOL*, HRESULT)
    ensure_cached : Proc(ID2D1ImageSourceFromWic*, D2D_RECT_U*, HRESULT)
    trim_cache : Proc(ID2D1ImageSourceFromWic*, D2D_RECT_U*, HRESULT)
    get_source : Proc(ID2D1ImageSourceFromWic*, IWICBitmapSource*, Void)
  end

  ID2D1ImageSourceFromWic_GUID = LibC::GUID.new("77395441-1c8f-4555-8683-f50dab0fe792")
  CLSID_ID2D1ImageSourceFromWic = "77395441-1c8f-4555-8683-f50dab0fe792"
  struct ID2D1ImageSourceFromWic
    lpVtbl : ID2D1ImageSourceFromWicVTbl*
  end

  struct ID2D1TransformedImageSourceVTbl
    query_interface : Proc(ID2D1TransformedImageSource*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1TransformedImageSource*, UInt32)
    release : Proc(ID2D1TransformedImageSource*, UInt32)
    get_factory : Proc(ID2D1TransformedImageSource*, ID2D1Factory*, Void)
    get_source : Proc(ID2D1TransformedImageSource*, ID2D1ImageSource*, Void)
    get_properties : Proc(ID2D1TransformedImageSource*, D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES*, Void)
  end

  ID2D1TransformedImageSource_GUID = LibC::GUID.new("7f1f79e5-2796-416c-8f55-700f911445e5")
  CLSID_ID2D1TransformedImageSource = "7f1f79e5-2796-416c-8f55-700f911445e5"
  struct ID2D1TransformedImageSource
    lpVtbl : ID2D1TransformedImageSourceVTbl*
  end

  struct ID2D1LookupTable3DVTbl
    query_interface : Proc(ID2D1LookupTable3D*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1LookupTable3D*, UInt32)
    release : Proc(ID2D1LookupTable3D*, UInt32)
    get_factory : Proc(ID2D1LookupTable3D*, ID2D1Factory*, Void)
  end

  ID2D1LookupTable3D_GUID = LibC::GUID.new("53dd9855-a3b0-4d5b-82e1-26e25c5e5797")
  CLSID_ID2D1LookupTable3D = "53dd9855-a3b0-4d5b-82e1-26e25c5e5797"
  struct ID2D1LookupTable3D
    lpVtbl : ID2D1LookupTable3DVTbl*
  end

  struct ID2D1DeviceContext2VTbl
    query_interface : Proc(ID2D1DeviceContext2*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1DeviceContext2*, UInt32)
    release : Proc(ID2D1DeviceContext2*, UInt32)
    get_factory : Proc(ID2D1DeviceContext2*, ID2D1Factory*, Void)
    create_bitmap : Proc(ID2D1DeviceContext2*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_from_wic_bitmap : Proc(ID2D1DeviceContext2*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_shared_bitmap : Proc(ID2D1DeviceContext2*, Guid*, Void*, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_brush : Proc(ID2D1DeviceContext2*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush*, HRESULT)
    create_solid_color_brush : Proc(ID2D1DeviceContext2*, D2D1_COLOR_F*, D2D1_BRUSH_PROPERTIES*, ID2D1SolidColorBrush*, HRESULT)
    create_gradient_stop_collection : Proc(ID2D1DeviceContext2*, D2D1_GRADIENT_STOP*, UInt32, D2D1_GAMMA, D2D1_EXTEND_MODE, ID2D1GradientStopCollection*, HRESULT)
    create_linear_gradient_brush : Proc(ID2D1DeviceContext2*, D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1LinearGradientBrush*, HRESULT)
    create_radial_gradient_brush : Proc(ID2D1DeviceContext2*, D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1RadialGradientBrush*, HRESULT)
    create_compatible_render_target : Proc(ID2D1DeviceContext2*, D2D_SIZE_F*, D2D_SIZE_U*, D2D1_PIXEL_FORMAT*, D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS, ID2D1BitmapRenderTarget*, HRESULT)
    create_layer : Proc(ID2D1DeviceContext2*, D2D_SIZE_F*, ID2D1Layer*, HRESULT)
    create_mesh : Proc(ID2D1DeviceContext2*, ID2D1Mesh*, HRESULT)
    draw_line : Proc(ID2D1DeviceContext2*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    draw_rectangle : Proc(ID2D1DeviceContext2*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rectangle : Proc(ID2D1DeviceContext2*, D2D_RECT_F*, ID2D1Brush, Void)
    draw_rounded_rectangle : Proc(ID2D1DeviceContext2*, D2D1_ROUNDED_RECT*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rounded_rectangle : Proc(ID2D1DeviceContext2*, D2D1_ROUNDED_RECT*, ID2D1Brush, Void)
    draw_ellipse : Proc(ID2D1DeviceContext2*, D2D1_ELLIPSE*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_ellipse : Proc(ID2D1DeviceContext2*, D2D1_ELLIPSE*, ID2D1Brush, Void)
    draw_geometry : Proc(ID2D1DeviceContext2*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_geometry : Proc(ID2D1DeviceContext2*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, Void)
    fill_mesh : Proc(ID2D1DeviceContext2*, ID2D1Mesh, ID2D1Brush, Void)
    fill_opacity_mask : Proc(ID2D1DeviceContext2*, ID2D1Bitmap, ID2D1Brush, D2D1_OPACITY_MASK_CONTENT, D2D_RECT_F*, D2D_RECT_F*, Void)
    draw_bitmap : Proc(ID2D1DeviceContext2*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_BITMAP_INTERPOLATION_MODE, D2D_RECT_F*, Void)
    draw_text : Proc(ID2D1DeviceContext2*, Char*, UInt32, IDWriteTextFormat, D2D_RECT_F*, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE, Void)
    draw_text_layout : Proc(ID2D1DeviceContext2*, D2D_POINT_2F, IDWriteTextLayout, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, Void)
    draw_glyph_run : Proc(ID2D1DeviceContext2*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    set_transform : Proc(ID2D1DeviceContext2*, D2D_MATRIX_3X2_F*, Void)
    get_transform : Proc(ID2D1DeviceContext2*, D2D_MATRIX_3X2_F*, Void)
    set_antialias_mode : Proc(ID2D1DeviceContext2*, D2D1_ANTIALIAS_MODE, Void)
    get_antialias_mode : Proc(ID2D1DeviceContext2*, D2D1_ANTIALIAS_MODE)
    set_text_antialias_mode : Proc(ID2D1DeviceContext2*, D2D1_TEXT_ANTIALIAS_MODE, Void)
    get_text_antialias_mode : Proc(ID2D1DeviceContext2*, D2D1_TEXT_ANTIALIAS_MODE)
    set_text_rendering_params : Proc(ID2D1DeviceContext2*, IDWriteRenderingParams, Void)
    get_text_rendering_params : Proc(ID2D1DeviceContext2*, IDWriteRenderingParams*, Void)
    set_tags : Proc(ID2D1DeviceContext2*, UInt64, UInt64, Void)
    get_tags : Proc(ID2D1DeviceContext2*, UInt64*, UInt64*, Void)
    push_layer : Proc(ID2D1DeviceContext2*, D2D1_LAYER_PARAMETERS*, ID2D1Layer, Void)
    pop_layer : Proc(ID2D1DeviceContext2*, Void)
    flush : Proc(ID2D1DeviceContext2*, UInt64*, UInt64*, HRESULT)
    save_drawing_state : Proc(ID2D1DeviceContext2*, ID2D1DrawingStateBlock, Void)
    restore_drawing_state : Proc(ID2D1DeviceContext2*, ID2D1DrawingStateBlock, Void)
    push_axis_aligned_clip : Proc(ID2D1DeviceContext2*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, Void)
    pop_axis_aligned_clip : Proc(ID2D1DeviceContext2*, Void)
    clear : Proc(ID2D1DeviceContext2*, D2D1_COLOR_F*, Void)
    begin_draw : Proc(ID2D1DeviceContext2*, Void)
    end_draw : Proc(ID2D1DeviceContext2*, UInt64*, UInt64*, HRESULT)
    get_pixel_format : Proc(ID2D1DeviceContext2*, D2D1_PIXEL_FORMAT)
    set_dpi : Proc(ID2D1DeviceContext2*, Float32, Float32, Void)
    get_dpi : Proc(ID2D1DeviceContext2*, Float32*, Float32*, Void)
    get_size : Proc(ID2D1DeviceContext2*, D2D_SIZE_F)
    get_pixel_size : Proc(ID2D1DeviceContext2*, D2D_SIZE_U)
    get_maximum_bitmap_size : Proc(ID2D1DeviceContext2*, UInt32)
    is_supported : Proc(ID2D1DeviceContext2*, D2D1_RENDER_TARGET_PROPERTIES*, LibC::BOOL)
    create_bitmap2 : Proc(ID2D1DeviceContext2*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_bitmap_from_wic_bitmap2 : Proc(ID2D1DeviceContext2*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_color_context : Proc(ID2D1DeviceContext2*, D2D1_COLOR_SPACE, UInt8*, UInt32, ID2D1ColorContext*, HRESULT)
    create_color_context_from_filename : Proc(ID2D1DeviceContext2*, LibC::LPWSTR, ID2D1ColorContext*, HRESULT)
    create_color_context_from_wic_color_context : Proc(ID2D1DeviceContext2*, IWICColorContext, ID2D1ColorContext*, HRESULT)
    create_bitmap_from_dxgi_surface : Proc(ID2D1DeviceContext2*, IDXGISurface, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_effect : Proc(ID2D1DeviceContext2*, Guid*, ID2D1Effect*, HRESULT)
    create_gradient_stop_collection2 : Proc(ID2D1DeviceContext2*, D2D1_GRADIENT_STOP*, UInt32, D2D1_COLOR_SPACE, D2D1_COLOR_SPACE, D2D1_BUFFER_PRECISION, D2D1_EXTEND_MODE, D2D1_COLOR_INTERPOLATION_MODE, ID2D1GradientStopCollection1*, HRESULT)
    create_image_brush : Proc(ID2D1DeviceContext2*, ID2D1Image, D2D1_IMAGE_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1ImageBrush*, HRESULT)
    create_bitmap_brush2 : Proc(ID2D1DeviceContext2*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES1*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush1*, HRESULT)
    create_command_list : Proc(ID2D1DeviceContext2*, ID2D1CommandList*, HRESULT)
    is_dxgi_format_supported : Proc(ID2D1DeviceContext2*, DXGI_FORMAT, LibC::BOOL)
    is_buffer_precision_supported : Proc(ID2D1DeviceContext2*, D2D1_BUFFER_PRECISION, LibC::BOOL)
    get_image_local_bounds : Proc(ID2D1DeviceContext2*, ID2D1Image, D2D_RECT_F*, HRESULT)
    get_image_world_bounds : Proc(ID2D1DeviceContext2*, ID2D1Image, D2D_RECT_F*, HRESULT)
    get_glyph_run_world_bounds : Proc(ID2D1DeviceContext2*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_MEASURING_MODE, D2D_RECT_F*, HRESULT)
    get_device : Proc(ID2D1DeviceContext2*, ID2D1Device*, Void)
    set_target : Proc(ID2D1DeviceContext2*, ID2D1Image, Void)
    get_target : Proc(ID2D1DeviceContext2*, ID2D1Image*, Void)
    set_rendering_controls : Proc(ID2D1DeviceContext2*, D2D1_RENDERING_CONTROLS*, Void)
    get_rendering_controls : Proc(ID2D1DeviceContext2*, D2D1_RENDERING_CONTROLS*, Void)
    set_primitive_blend : Proc(ID2D1DeviceContext2*, D2D1_PRIMITIVE_BLEND, Void)
    get_primitive_blend : Proc(ID2D1DeviceContext2*, D2D1_PRIMITIVE_BLEND)
    set_unit_mode : Proc(ID2D1DeviceContext2*, D2D1_UNIT_MODE, Void)
    get_unit_mode : Proc(ID2D1DeviceContext2*, D2D1_UNIT_MODE)
    draw_glyph_run2 : Proc(ID2D1DeviceContext2*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    draw_image : Proc(ID2D1DeviceContext2*, ID2D1Image, D2D_POINT_2F*, D2D_RECT_F*, D2D1_INTERPOLATION_MODE, D2D1_COMPOSITE_MODE, Void)
    draw_gdi_metafile : Proc(ID2D1DeviceContext2*, ID2D1GdiMetafile, D2D_POINT_2F*, Void)
    draw_bitmap2 : Proc(ID2D1DeviceContext2*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_INTERPOLATION_MODE, D2D_RECT_F*, D2D_MATRIX_4X4_F*, Void)
    push_layer2 : Proc(ID2D1DeviceContext2*, D2D1_LAYER_PARAMETERS1*, ID2D1Layer, Void)
    invalidate_effect_input_rectangle : Proc(ID2D1DeviceContext2*, ID2D1Effect, UInt32, D2D_RECT_F*, HRESULT)
    get_effect_invalid_rectangle_count : Proc(ID2D1DeviceContext2*, ID2D1Effect, UInt32*, HRESULT)
    get_effect_invalid_rectangles : Proc(ID2D1DeviceContext2*, ID2D1Effect, D2D_RECT_F*, UInt32, HRESULT)
    get_effect_required_input_rectangles : Proc(ID2D1DeviceContext2*, ID2D1Effect, D2D_RECT_F*, D2D1_EFFECT_INPUT_DESCRIPTION*, D2D_RECT_F*, UInt32, HRESULT)
    fill_opacity_mask2 : Proc(ID2D1DeviceContext2*, ID2D1Bitmap, ID2D1Brush, D2D_RECT_F*, D2D_RECT_F*, Void)
    create_filled_geometry_realization : Proc(ID2D1DeviceContext2*, ID2D1Geometry, Float32, ID2D1GeometryRealization*, HRESULT)
    create_stroked_geometry_realization : Proc(ID2D1DeviceContext2*, ID2D1Geometry, Float32, Float32, ID2D1StrokeStyle, ID2D1GeometryRealization*, HRESULT)
    draw_geometry_realization : Proc(ID2D1DeviceContext2*, ID2D1GeometryRealization, ID2D1Brush, Void)
    create_ink : Proc(ID2D1DeviceContext2*, D2D1_INK_POINT*, ID2D1Ink*, HRESULT)
    create_ink_style : Proc(ID2D1DeviceContext2*, D2D1_INK_STYLE_PROPERTIES*, ID2D1InkStyle*, HRESULT)
    create_gradient_mesh : Proc(ID2D1DeviceContext2*, D2D1_GRADIENT_MESH_PATCH*, UInt32, ID2D1GradientMesh*, HRESULT)
    create_image_source_from_wic : Proc(ID2D1DeviceContext2*, IWICBitmapSource, D2D1_IMAGE_SOURCE_LOADING_OPTIONS, D2D1_ALPHA_MODE, ID2D1ImageSourceFromWic*, HRESULT)
    create_lookup_table3_d : Proc(ID2D1DeviceContext2*, D2D1_BUFFER_PRECISION, UInt32*, UInt8*, UInt32, UInt32*, ID2D1LookupTable3D*, HRESULT)
    create_image_source_from_dxgi : Proc(ID2D1DeviceContext2*, IDXGISurface*, UInt32, DXGI_COLOR_SPACE_TYPE, D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS, ID2D1ImageSource*, HRESULT)
    get_gradient_mesh_world_bounds : Proc(ID2D1DeviceContext2*, ID2D1GradientMesh, D2D_RECT_F*, HRESULT)
    draw_ink : Proc(ID2D1DeviceContext2*, ID2D1Ink, ID2D1Brush, ID2D1InkStyle, Void)
    draw_gradient_mesh : Proc(ID2D1DeviceContext2*, ID2D1GradientMesh, Void)
    draw_gdi_metafile2 : Proc(ID2D1DeviceContext2*, ID2D1GdiMetafile, D2D_RECT_F*, D2D_RECT_F*, Void)
    create_transformed_image_source : Proc(ID2D1DeviceContext2*, ID2D1ImageSource, D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES*, ID2D1TransformedImageSource*, HRESULT)
  end

  ID2D1DeviceContext2_GUID = LibC::GUID.new("394ea6a3-0c34-4321-950b-6ca20f0be6c7")
  CLSID_ID2D1DeviceContext2 = "394ea6a3-0c34-4321-950b-6ca20f0be6c7"
  struct ID2D1DeviceContext2
    lpVtbl : ID2D1DeviceContext2VTbl*
  end

  struct ID2D1Device2VTbl
    query_interface : Proc(ID2D1Device2*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Device2*, UInt32)
    release : Proc(ID2D1Device2*, UInt32)
    get_factory : Proc(ID2D1Device2*, ID2D1Factory*, Void)
    create_device_context : Proc(ID2D1Device2*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext*, HRESULT)
    create_print_control : Proc(ID2D1Device2*, IWICImagingFactory, IPrintDocumentPackageTarget, D2D1_PRINT_CONTROL_PROPERTIES*, ID2D1PrintControl*, HRESULT)
    set_maximum_texture_memory : Proc(ID2D1Device2*, UInt64, Void)
    get_maximum_texture_memory : Proc(ID2D1Device2*, UInt64)
    clear_resources : Proc(ID2D1Device2*, UInt32, Void)
    get_rendering_priority : Proc(ID2D1Device2*, D2D1_RENDERING_PRIORITY)
    set_rendering_priority : Proc(ID2D1Device2*, D2D1_RENDERING_PRIORITY, Void)
    create_device_context2 : Proc(ID2D1Device2*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext1*, HRESULT)
    create_device_context3 : Proc(ID2D1Device2*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext2*, HRESULT)
    flush_device_contexts : Proc(ID2D1Device2*, ID2D1Bitmap, Void)
    get_dxgi_device : Proc(ID2D1Device2*, IDXGIDevice*, HRESULT)
  end

  ID2D1Device2_GUID = LibC::GUID.new("a44472e1-8dfb-4e60-8492-6e2861c9ca8b")
  CLSID_ID2D1Device2 = "a44472e1-8dfb-4e60-8492-6e2861c9ca8b"
  struct ID2D1Device2
    lpVtbl : ID2D1Device2VTbl*
  end

  struct ID2D1Factory3VTbl
    query_interface : Proc(ID2D1Factory3*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Factory3*, UInt32)
    release : Proc(ID2D1Factory3*, UInt32)
    reload_system_metrics : Proc(ID2D1Factory3*, HRESULT)
    get_desktop_dpi : Proc(ID2D1Factory3*, Float32*, Float32*, Void)
    create_rectangle_geometry : Proc(ID2D1Factory3*, D2D_RECT_F*, ID2D1RectangleGeometry*, HRESULT)
    create_rounded_rectangle_geometry : Proc(ID2D1Factory3*, D2D1_ROUNDED_RECT*, ID2D1RoundedRectangleGeometry*, HRESULT)
    create_ellipse_geometry : Proc(ID2D1Factory3*, D2D1_ELLIPSE*, ID2D1EllipseGeometry*, HRESULT)
    create_geometry_group : Proc(ID2D1Factory3*, D2D1_FILL_MODE, ID2D1Geometry*, UInt32, ID2D1GeometryGroup*, HRESULT)
    create_transformed_geometry : Proc(ID2D1Factory3*, ID2D1Geometry, D2D_MATRIX_3X2_F*, ID2D1TransformedGeometry*, HRESULT)
    create_path_geometry : Proc(ID2D1Factory3*, ID2D1PathGeometry*, HRESULT)
    create_stroke_style : Proc(ID2D1Factory3*, D2D1_STROKE_STYLE_PROPERTIES*, Float32*, UInt32, ID2D1StrokeStyle*, HRESULT)
    create_drawing_state_block : Proc(ID2D1Factory3*, D2D1_DRAWING_STATE_DESCRIPTION*, IDWriteRenderingParams, ID2D1DrawingStateBlock*, HRESULT)
    create_wic_bitmap_render_target : Proc(ID2D1Factory3*, IWICBitmap, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_hwnd_render_target : Proc(ID2D1Factory3*, D2D1_RENDER_TARGET_PROPERTIES*, D2D1_HWND_RENDER_TARGET_PROPERTIES*, ID2D1HwndRenderTarget*, HRESULT)
    create_dxgi_surface_render_target : Proc(ID2D1Factory3*, IDXGISurface, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_dc_render_target : Proc(ID2D1Factory3*, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1DCRenderTarget*, HRESULT)
    create_device : Proc(ID2D1Factory3*, IDXGIDevice, ID2D1Device*, HRESULT)
    create_stroke_style2 : Proc(ID2D1Factory3*, D2D1_STROKE_STYLE_PROPERTIES1*, Float32*, UInt32, ID2D1StrokeStyle1*, HRESULT)
    create_path_geometry2 : Proc(ID2D1Factory3*, ID2D1PathGeometry1*, HRESULT)
    create_drawing_state_block2 : Proc(ID2D1Factory3*, D2D1_DRAWING_STATE_DESCRIPTION1*, IDWriteRenderingParams, ID2D1DrawingStateBlock1*, HRESULT)
    create_gdi_metafile : Proc(ID2D1Factory3*, IStream, ID2D1GdiMetafile*, HRESULT)
    register_effect_from_stream : Proc(ID2D1Factory3*, Guid*, IStream, D2D1_PROPERTY_BINDING*, UInt32, PD2D1_EFFECT_FACTORY, HRESULT)
    register_effect_from_string : Proc(ID2D1Factory3*, Guid*, LibC::LPWSTR, D2D1_PROPERTY_BINDING*, UInt32, PD2D1_EFFECT_FACTORY, HRESULT)
    unregister_effect : Proc(ID2D1Factory3*, Guid*, HRESULT)
    get_registered_effects : Proc(ID2D1Factory3*, Guid*, UInt32, UInt32*, UInt32*, HRESULT)
    get_effect_properties : Proc(ID2D1Factory3*, Guid*, ID2D1Properties*, HRESULT)
    create_device2 : Proc(ID2D1Factory3*, IDXGIDevice, ID2D1Device1*, HRESULT)
    create_device3 : Proc(ID2D1Factory3*, IDXGIDevice, ID2D1Device2*, HRESULT)
  end

  ID2D1Factory3_GUID = LibC::GUID.new("0869759f-4f00-413f-b03e-2bda45404d0f")
  CLSID_ID2D1Factory3 = "0869759f-4f00-413f-b03e-2bda45404d0f"
  struct ID2D1Factory3
    lpVtbl : ID2D1Factory3VTbl*
  end

  struct ID2D1CommandSink2VTbl
    query_interface : Proc(ID2D1CommandSink2*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1CommandSink2*, UInt32)
    release : Proc(ID2D1CommandSink2*, UInt32)
    begin_draw : Proc(ID2D1CommandSink2*, HRESULT)
    end_draw : Proc(ID2D1CommandSink2*, HRESULT)
    set_antialias_mode : Proc(ID2D1CommandSink2*, D2D1_ANTIALIAS_MODE, HRESULT)
    set_tags : Proc(ID2D1CommandSink2*, UInt64, UInt64, HRESULT)
    set_text_antialias_mode : Proc(ID2D1CommandSink2*, D2D1_TEXT_ANTIALIAS_MODE, HRESULT)
    set_text_rendering_params : Proc(ID2D1CommandSink2*, IDWriteRenderingParams, HRESULT)
    set_transform : Proc(ID2D1CommandSink2*, D2D_MATRIX_3X2_F*, HRESULT)
    set_primitive_blend : Proc(ID2D1CommandSink2*, D2D1_PRIMITIVE_BLEND, HRESULT)
    set_unit_mode : Proc(ID2D1CommandSink2*, D2D1_UNIT_MODE, HRESULT)
    clear : Proc(ID2D1CommandSink2*, D2D1_COLOR_F*, HRESULT)
    draw_glyph_run : Proc(ID2D1CommandSink2*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, ID2D1Brush, DWRITE_MEASURING_MODE, HRESULT)
    draw_line : Proc(ID2D1CommandSink2*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_geometry : Proc(ID2D1CommandSink2*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_rectangle : Proc(ID2D1CommandSink2*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_bitmap : Proc(ID2D1CommandSink2*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_INTERPOLATION_MODE, D2D_RECT_F*, D2D_MATRIX_4X4_F*, HRESULT)
    draw_image : Proc(ID2D1CommandSink2*, ID2D1Image, D2D_POINT_2F*, D2D_RECT_F*, D2D1_INTERPOLATION_MODE, D2D1_COMPOSITE_MODE, HRESULT)
    draw_gdi_metafile : Proc(ID2D1CommandSink2*, ID2D1GdiMetafile, D2D_POINT_2F*, HRESULT)
    fill_mesh : Proc(ID2D1CommandSink2*, ID2D1Mesh, ID2D1Brush, HRESULT)
    fill_opacity_mask : Proc(ID2D1CommandSink2*, ID2D1Bitmap, ID2D1Brush, D2D_RECT_F*, D2D_RECT_F*, HRESULT)
    fill_geometry : Proc(ID2D1CommandSink2*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, HRESULT)
    fill_rectangle : Proc(ID2D1CommandSink2*, D2D_RECT_F*, ID2D1Brush, HRESULT)
    push_axis_aligned_clip : Proc(ID2D1CommandSink2*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, HRESULT)
    push_layer : Proc(ID2D1CommandSink2*, D2D1_LAYER_PARAMETERS1*, ID2D1Layer, HRESULT)
    pop_axis_aligned_clip : Proc(ID2D1CommandSink2*, HRESULT)
    pop_layer : Proc(ID2D1CommandSink2*, HRESULT)
    set_primitive_blend1 : Proc(ID2D1CommandSink2*, D2D1_PRIMITIVE_BLEND, HRESULT)
    draw_ink : Proc(ID2D1CommandSink2*, ID2D1Ink, ID2D1Brush, ID2D1InkStyle, HRESULT)
    draw_gradient_mesh : Proc(ID2D1CommandSink2*, ID2D1GradientMesh, HRESULT)
    draw_gdi_metafile2 : Proc(ID2D1CommandSink2*, ID2D1GdiMetafile, D2D_RECT_F*, D2D_RECT_F*, HRESULT)
  end

  ID2D1CommandSink2_GUID = LibC::GUID.new("3bab440e-417e-47df-a2e2-bc0be6a00916")
  CLSID_ID2D1CommandSink2 = "3bab440e-417e-47df-a2e2-bc0be6a00916"
  struct ID2D1CommandSink2
    lpVtbl : ID2D1CommandSink2VTbl*
  end

  struct ID2D1GdiMetafile1VTbl
    query_interface : Proc(ID2D1GdiMetafile1*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1GdiMetafile1*, UInt32)
    release : Proc(ID2D1GdiMetafile1*, UInt32)
    get_factory : Proc(ID2D1GdiMetafile1*, ID2D1Factory*, Void)
    stream : Proc(ID2D1GdiMetafile1*, ID2D1GdiMetafileSink, HRESULT)
    get_bounds : Proc(ID2D1GdiMetafile1*, D2D_RECT_F*, HRESULT)
    get_dpi : Proc(ID2D1GdiMetafile1*, Float32*, Float32*, HRESULT)
    get_source_bounds : Proc(ID2D1GdiMetafile1*, D2D_RECT_F*, HRESULT)
  end

  ID2D1GdiMetafile1_GUID = LibC::GUID.new("2e69f9e8-dd3f-4bf9-95ba-c04f49d788df")
  CLSID_ID2D1GdiMetafile1 = "2e69f9e8-dd3f-4bf9-95ba-c04f49d788df"
  struct ID2D1GdiMetafile1
    lpVtbl : ID2D1GdiMetafile1VTbl*
  end

  struct ID2D1GdiMetafileSink1VTbl
    query_interface : Proc(ID2D1GdiMetafileSink1*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1GdiMetafileSink1*, UInt32)
    release : Proc(ID2D1GdiMetafileSink1*, UInt32)
    process_record : Proc(ID2D1GdiMetafileSink1*, UInt32, Void*, UInt32, HRESULT)
    process_record2 : Proc(ID2D1GdiMetafileSink1*, UInt32, Void*, UInt32, UInt32, HRESULT)
  end

  ID2D1GdiMetafileSink1_GUID = LibC::GUID.new("fd0ecb6b-91e6-411e-8655-395e760f91b4")
  CLSID_ID2D1GdiMetafileSink1 = "fd0ecb6b-91e6-411e-8655-395e760f91b4"
  struct ID2D1GdiMetafileSink1
    lpVtbl : ID2D1GdiMetafileSink1VTbl*
  end

  struct ID2D1SpriteBatchVTbl
    query_interface : Proc(ID2D1SpriteBatch*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1SpriteBatch*, UInt32)
    release : Proc(ID2D1SpriteBatch*, UInt32)
    get_factory : Proc(ID2D1SpriteBatch*, ID2D1Factory*, Void)
    add_sprites : Proc(ID2D1SpriteBatch*, UInt32, D2D_RECT_F*, D2D_RECT_U*, D2D1_COLOR_F*, D2D_MATRIX_3X2_F*, UInt32, UInt32, UInt32, UInt32, HRESULT)
    set_sprites : Proc(ID2D1SpriteBatch*, UInt32, UInt32, D2D_RECT_F*, D2D_RECT_U*, D2D1_COLOR_F*, D2D_MATRIX_3X2_F*, UInt32, UInt32, UInt32, UInt32, HRESULT)
    get_sprites : Proc(ID2D1SpriteBatch*, UInt32, UInt32, D2D_RECT_F*, D2D_RECT_U*, D2D1_COLOR_F*, D2D_MATRIX_3X2_F*, HRESULT)
    get_sprite_count : Proc(ID2D1SpriteBatch*, UInt32)
    clear : Proc(ID2D1SpriteBatch*, Void)
  end

  ID2D1SpriteBatch_GUID = LibC::GUID.new("4dc583bf-3a10-438a-8722-e9765224f1f1")
  CLSID_ID2D1SpriteBatch = "4dc583bf-3a10-438a-8722-e9765224f1f1"
  struct ID2D1SpriteBatch
    lpVtbl : ID2D1SpriteBatchVTbl*
  end

  struct ID2D1DeviceContext3VTbl
    query_interface : Proc(ID2D1DeviceContext3*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1DeviceContext3*, UInt32)
    release : Proc(ID2D1DeviceContext3*, UInt32)
    get_factory : Proc(ID2D1DeviceContext3*, ID2D1Factory*, Void)
    create_bitmap : Proc(ID2D1DeviceContext3*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_from_wic_bitmap : Proc(ID2D1DeviceContext3*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_shared_bitmap : Proc(ID2D1DeviceContext3*, Guid*, Void*, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_brush : Proc(ID2D1DeviceContext3*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush*, HRESULT)
    create_solid_color_brush : Proc(ID2D1DeviceContext3*, D2D1_COLOR_F*, D2D1_BRUSH_PROPERTIES*, ID2D1SolidColorBrush*, HRESULT)
    create_gradient_stop_collection : Proc(ID2D1DeviceContext3*, D2D1_GRADIENT_STOP*, UInt32, D2D1_GAMMA, D2D1_EXTEND_MODE, ID2D1GradientStopCollection*, HRESULT)
    create_linear_gradient_brush : Proc(ID2D1DeviceContext3*, D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1LinearGradientBrush*, HRESULT)
    create_radial_gradient_brush : Proc(ID2D1DeviceContext3*, D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1RadialGradientBrush*, HRESULT)
    create_compatible_render_target : Proc(ID2D1DeviceContext3*, D2D_SIZE_F*, D2D_SIZE_U*, D2D1_PIXEL_FORMAT*, D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS, ID2D1BitmapRenderTarget*, HRESULT)
    create_layer : Proc(ID2D1DeviceContext3*, D2D_SIZE_F*, ID2D1Layer*, HRESULT)
    create_mesh : Proc(ID2D1DeviceContext3*, ID2D1Mesh*, HRESULT)
    draw_line : Proc(ID2D1DeviceContext3*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    draw_rectangle : Proc(ID2D1DeviceContext3*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rectangle : Proc(ID2D1DeviceContext3*, D2D_RECT_F*, ID2D1Brush, Void)
    draw_rounded_rectangle : Proc(ID2D1DeviceContext3*, D2D1_ROUNDED_RECT*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rounded_rectangle : Proc(ID2D1DeviceContext3*, D2D1_ROUNDED_RECT*, ID2D1Brush, Void)
    draw_ellipse : Proc(ID2D1DeviceContext3*, D2D1_ELLIPSE*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_ellipse : Proc(ID2D1DeviceContext3*, D2D1_ELLIPSE*, ID2D1Brush, Void)
    draw_geometry : Proc(ID2D1DeviceContext3*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_geometry : Proc(ID2D1DeviceContext3*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, Void)
    fill_mesh : Proc(ID2D1DeviceContext3*, ID2D1Mesh, ID2D1Brush, Void)
    fill_opacity_mask : Proc(ID2D1DeviceContext3*, ID2D1Bitmap, ID2D1Brush, D2D1_OPACITY_MASK_CONTENT, D2D_RECT_F*, D2D_RECT_F*, Void)
    draw_bitmap : Proc(ID2D1DeviceContext3*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_BITMAP_INTERPOLATION_MODE, D2D_RECT_F*, Void)
    draw_text : Proc(ID2D1DeviceContext3*, Char*, UInt32, IDWriteTextFormat, D2D_RECT_F*, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE, Void)
    draw_text_layout : Proc(ID2D1DeviceContext3*, D2D_POINT_2F, IDWriteTextLayout, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, Void)
    draw_glyph_run : Proc(ID2D1DeviceContext3*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    set_transform : Proc(ID2D1DeviceContext3*, D2D_MATRIX_3X2_F*, Void)
    get_transform : Proc(ID2D1DeviceContext3*, D2D_MATRIX_3X2_F*, Void)
    set_antialias_mode : Proc(ID2D1DeviceContext3*, D2D1_ANTIALIAS_MODE, Void)
    get_antialias_mode : Proc(ID2D1DeviceContext3*, D2D1_ANTIALIAS_MODE)
    set_text_antialias_mode : Proc(ID2D1DeviceContext3*, D2D1_TEXT_ANTIALIAS_MODE, Void)
    get_text_antialias_mode : Proc(ID2D1DeviceContext3*, D2D1_TEXT_ANTIALIAS_MODE)
    set_text_rendering_params : Proc(ID2D1DeviceContext3*, IDWriteRenderingParams, Void)
    get_text_rendering_params : Proc(ID2D1DeviceContext3*, IDWriteRenderingParams*, Void)
    set_tags : Proc(ID2D1DeviceContext3*, UInt64, UInt64, Void)
    get_tags : Proc(ID2D1DeviceContext3*, UInt64*, UInt64*, Void)
    push_layer : Proc(ID2D1DeviceContext3*, D2D1_LAYER_PARAMETERS*, ID2D1Layer, Void)
    pop_layer : Proc(ID2D1DeviceContext3*, Void)
    flush : Proc(ID2D1DeviceContext3*, UInt64*, UInt64*, HRESULT)
    save_drawing_state : Proc(ID2D1DeviceContext3*, ID2D1DrawingStateBlock, Void)
    restore_drawing_state : Proc(ID2D1DeviceContext3*, ID2D1DrawingStateBlock, Void)
    push_axis_aligned_clip : Proc(ID2D1DeviceContext3*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, Void)
    pop_axis_aligned_clip : Proc(ID2D1DeviceContext3*, Void)
    clear : Proc(ID2D1DeviceContext3*, D2D1_COLOR_F*, Void)
    begin_draw : Proc(ID2D1DeviceContext3*, Void)
    end_draw : Proc(ID2D1DeviceContext3*, UInt64*, UInt64*, HRESULT)
    get_pixel_format : Proc(ID2D1DeviceContext3*, D2D1_PIXEL_FORMAT)
    set_dpi : Proc(ID2D1DeviceContext3*, Float32, Float32, Void)
    get_dpi : Proc(ID2D1DeviceContext3*, Float32*, Float32*, Void)
    get_size : Proc(ID2D1DeviceContext3*, D2D_SIZE_F)
    get_pixel_size : Proc(ID2D1DeviceContext3*, D2D_SIZE_U)
    get_maximum_bitmap_size : Proc(ID2D1DeviceContext3*, UInt32)
    is_supported : Proc(ID2D1DeviceContext3*, D2D1_RENDER_TARGET_PROPERTIES*, LibC::BOOL)
    create_bitmap2 : Proc(ID2D1DeviceContext3*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_bitmap_from_wic_bitmap2 : Proc(ID2D1DeviceContext3*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_color_context : Proc(ID2D1DeviceContext3*, D2D1_COLOR_SPACE, UInt8*, UInt32, ID2D1ColorContext*, HRESULT)
    create_color_context_from_filename : Proc(ID2D1DeviceContext3*, LibC::LPWSTR, ID2D1ColorContext*, HRESULT)
    create_color_context_from_wic_color_context : Proc(ID2D1DeviceContext3*, IWICColorContext, ID2D1ColorContext*, HRESULT)
    create_bitmap_from_dxgi_surface : Proc(ID2D1DeviceContext3*, IDXGISurface, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_effect : Proc(ID2D1DeviceContext3*, Guid*, ID2D1Effect*, HRESULT)
    create_gradient_stop_collection2 : Proc(ID2D1DeviceContext3*, D2D1_GRADIENT_STOP*, UInt32, D2D1_COLOR_SPACE, D2D1_COLOR_SPACE, D2D1_BUFFER_PRECISION, D2D1_EXTEND_MODE, D2D1_COLOR_INTERPOLATION_MODE, ID2D1GradientStopCollection1*, HRESULT)
    create_image_brush : Proc(ID2D1DeviceContext3*, ID2D1Image, D2D1_IMAGE_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1ImageBrush*, HRESULT)
    create_bitmap_brush2 : Proc(ID2D1DeviceContext3*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES1*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush1*, HRESULT)
    create_command_list : Proc(ID2D1DeviceContext3*, ID2D1CommandList*, HRESULT)
    is_dxgi_format_supported : Proc(ID2D1DeviceContext3*, DXGI_FORMAT, LibC::BOOL)
    is_buffer_precision_supported : Proc(ID2D1DeviceContext3*, D2D1_BUFFER_PRECISION, LibC::BOOL)
    get_image_local_bounds : Proc(ID2D1DeviceContext3*, ID2D1Image, D2D_RECT_F*, HRESULT)
    get_image_world_bounds : Proc(ID2D1DeviceContext3*, ID2D1Image, D2D_RECT_F*, HRESULT)
    get_glyph_run_world_bounds : Proc(ID2D1DeviceContext3*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_MEASURING_MODE, D2D_RECT_F*, HRESULT)
    get_device : Proc(ID2D1DeviceContext3*, ID2D1Device*, Void)
    set_target : Proc(ID2D1DeviceContext3*, ID2D1Image, Void)
    get_target : Proc(ID2D1DeviceContext3*, ID2D1Image*, Void)
    set_rendering_controls : Proc(ID2D1DeviceContext3*, D2D1_RENDERING_CONTROLS*, Void)
    get_rendering_controls : Proc(ID2D1DeviceContext3*, D2D1_RENDERING_CONTROLS*, Void)
    set_primitive_blend : Proc(ID2D1DeviceContext3*, D2D1_PRIMITIVE_BLEND, Void)
    get_primitive_blend : Proc(ID2D1DeviceContext3*, D2D1_PRIMITIVE_BLEND)
    set_unit_mode : Proc(ID2D1DeviceContext3*, D2D1_UNIT_MODE, Void)
    get_unit_mode : Proc(ID2D1DeviceContext3*, D2D1_UNIT_MODE)
    draw_glyph_run2 : Proc(ID2D1DeviceContext3*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    draw_image : Proc(ID2D1DeviceContext3*, ID2D1Image, D2D_POINT_2F*, D2D_RECT_F*, D2D1_INTERPOLATION_MODE, D2D1_COMPOSITE_MODE, Void)
    draw_gdi_metafile : Proc(ID2D1DeviceContext3*, ID2D1GdiMetafile, D2D_POINT_2F*, Void)
    draw_bitmap2 : Proc(ID2D1DeviceContext3*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_INTERPOLATION_MODE, D2D_RECT_F*, D2D_MATRIX_4X4_F*, Void)
    push_layer2 : Proc(ID2D1DeviceContext3*, D2D1_LAYER_PARAMETERS1*, ID2D1Layer, Void)
    invalidate_effect_input_rectangle : Proc(ID2D1DeviceContext3*, ID2D1Effect, UInt32, D2D_RECT_F*, HRESULT)
    get_effect_invalid_rectangle_count : Proc(ID2D1DeviceContext3*, ID2D1Effect, UInt32*, HRESULT)
    get_effect_invalid_rectangles : Proc(ID2D1DeviceContext3*, ID2D1Effect, D2D_RECT_F*, UInt32, HRESULT)
    get_effect_required_input_rectangles : Proc(ID2D1DeviceContext3*, ID2D1Effect, D2D_RECT_F*, D2D1_EFFECT_INPUT_DESCRIPTION*, D2D_RECT_F*, UInt32, HRESULT)
    fill_opacity_mask2 : Proc(ID2D1DeviceContext3*, ID2D1Bitmap, ID2D1Brush, D2D_RECT_F*, D2D_RECT_F*, Void)
    create_filled_geometry_realization : Proc(ID2D1DeviceContext3*, ID2D1Geometry, Float32, ID2D1GeometryRealization*, HRESULT)
    create_stroked_geometry_realization : Proc(ID2D1DeviceContext3*, ID2D1Geometry, Float32, Float32, ID2D1StrokeStyle, ID2D1GeometryRealization*, HRESULT)
    draw_geometry_realization : Proc(ID2D1DeviceContext3*, ID2D1GeometryRealization, ID2D1Brush, Void)
    create_ink : Proc(ID2D1DeviceContext3*, D2D1_INK_POINT*, ID2D1Ink*, HRESULT)
    create_ink_style : Proc(ID2D1DeviceContext3*, D2D1_INK_STYLE_PROPERTIES*, ID2D1InkStyle*, HRESULT)
    create_gradient_mesh : Proc(ID2D1DeviceContext3*, D2D1_GRADIENT_MESH_PATCH*, UInt32, ID2D1GradientMesh*, HRESULT)
    create_image_source_from_wic : Proc(ID2D1DeviceContext3*, IWICBitmapSource, D2D1_IMAGE_SOURCE_LOADING_OPTIONS, D2D1_ALPHA_MODE, ID2D1ImageSourceFromWic*, HRESULT)
    create_lookup_table3_d : Proc(ID2D1DeviceContext3*, D2D1_BUFFER_PRECISION, UInt32*, UInt8*, UInt32, UInt32*, ID2D1LookupTable3D*, HRESULT)
    create_image_source_from_dxgi : Proc(ID2D1DeviceContext3*, IDXGISurface*, UInt32, DXGI_COLOR_SPACE_TYPE, D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS, ID2D1ImageSource*, HRESULT)
    get_gradient_mesh_world_bounds : Proc(ID2D1DeviceContext3*, ID2D1GradientMesh, D2D_RECT_F*, HRESULT)
    draw_ink : Proc(ID2D1DeviceContext3*, ID2D1Ink, ID2D1Brush, ID2D1InkStyle, Void)
    draw_gradient_mesh : Proc(ID2D1DeviceContext3*, ID2D1GradientMesh, Void)
    draw_gdi_metafile2 : Proc(ID2D1DeviceContext3*, ID2D1GdiMetafile, D2D_RECT_F*, D2D_RECT_F*, Void)
    create_transformed_image_source : Proc(ID2D1DeviceContext3*, ID2D1ImageSource, D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES*, ID2D1TransformedImageSource*, HRESULT)
    create_sprite_batch : Proc(ID2D1DeviceContext3*, ID2D1SpriteBatch*, HRESULT)
    draw_sprite_batch : Proc(ID2D1DeviceContext3*, ID2D1SpriteBatch, UInt32, UInt32, ID2D1Bitmap, D2D1_BITMAP_INTERPOLATION_MODE, D2D1_SPRITE_OPTIONS, Void)
  end

  ID2D1DeviceContext3_GUID = LibC::GUID.new("235a7496-8351-414c-bcd4-6672ab2d8e00")
  CLSID_ID2D1DeviceContext3 = "235a7496-8351-414c-bcd4-6672ab2d8e00"
  struct ID2D1DeviceContext3
    lpVtbl : ID2D1DeviceContext3VTbl*
  end

  struct ID2D1Device3VTbl
    query_interface : Proc(ID2D1Device3*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Device3*, UInt32)
    release : Proc(ID2D1Device3*, UInt32)
    get_factory : Proc(ID2D1Device3*, ID2D1Factory*, Void)
    create_device_context : Proc(ID2D1Device3*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext*, HRESULT)
    create_print_control : Proc(ID2D1Device3*, IWICImagingFactory, IPrintDocumentPackageTarget, D2D1_PRINT_CONTROL_PROPERTIES*, ID2D1PrintControl*, HRESULT)
    set_maximum_texture_memory : Proc(ID2D1Device3*, UInt64, Void)
    get_maximum_texture_memory : Proc(ID2D1Device3*, UInt64)
    clear_resources : Proc(ID2D1Device3*, UInt32, Void)
    get_rendering_priority : Proc(ID2D1Device3*, D2D1_RENDERING_PRIORITY)
    set_rendering_priority : Proc(ID2D1Device3*, D2D1_RENDERING_PRIORITY, Void)
    create_device_context2 : Proc(ID2D1Device3*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext1*, HRESULT)
    create_device_context3 : Proc(ID2D1Device3*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext2*, HRESULT)
    flush_device_contexts : Proc(ID2D1Device3*, ID2D1Bitmap, Void)
    get_dxgi_device : Proc(ID2D1Device3*, IDXGIDevice*, HRESULT)
    create_device_context4 : Proc(ID2D1Device3*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext3*, HRESULT)
  end

  ID2D1Device3_GUID = LibC::GUID.new("852f2087-802c-4037-ab60-ff2e7ee6fc01")
  CLSID_ID2D1Device3 = "852f2087-802c-4037-ab60-ff2e7ee6fc01"
  struct ID2D1Device3
    lpVtbl : ID2D1Device3VTbl*
  end

  struct ID2D1Factory4VTbl
    query_interface : Proc(ID2D1Factory4*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Factory4*, UInt32)
    release : Proc(ID2D1Factory4*, UInt32)
    reload_system_metrics : Proc(ID2D1Factory4*, HRESULT)
    get_desktop_dpi : Proc(ID2D1Factory4*, Float32*, Float32*, Void)
    create_rectangle_geometry : Proc(ID2D1Factory4*, D2D_RECT_F*, ID2D1RectangleGeometry*, HRESULT)
    create_rounded_rectangle_geometry : Proc(ID2D1Factory4*, D2D1_ROUNDED_RECT*, ID2D1RoundedRectangleGeometry*, HRESULT)
    create_ellipse_geometry : Proc(ID2D1Factory4*, D2D1_ELLIPSE*, ID2D1EllipseGeometry*, HRESULT)
    create_geometry_group : Proc(ID2D1Factory4*, D2D1_FILL_MODE, ID2D1Geometry*, UInt32, ID2D1GeometryGroup*, HRESULT)
    create_transformed_geometry : Proc(ID2D1Factory4*, ID2D1Geometry, D2D_MATRIX_3X2_F*, ID2D1TransformedGeometry*, HRESULT)
    create_path_geometry : Proc(ID2D1Factory4*, ID2D1PathGeometry*, HRESULT)
    create_stroke_style : Proc(ID2D1Factory4*, D2D1_STROKE_STYLE_PROPERTIES*, Float32*, UInt32, ID2D1StrokeStyle*, HRESULT)
    create_drawing_state_block : Proc(ID2D1Factory4*, D2D1_DRAWING_STATE_DESCRIPTION*, IDWriteRenderingParams, ID2D1DrawingStateBlock*, HRESULT)
    create_wic_bitmap_render_target : Proc(ID2D1Factory4*, IWICBitmap, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_hwnd_render_target : Proc(ID2D1Factory4*, D2D1_RENDER_TARGET_PROPERTIES*, D2D1_HWND_RENDER_TARGET_PROPERTIES*, ID2D1HwndRenderTarget*, HRESULT)
    create_dxgi_surface_render_target : Proc(ID2D1Factory4*, IDXGISurface, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_dc_render_target : Proc(ID2D1Factory4*, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1DCRenderTarget*, HRESULT)
    create_device : Proc(ID2D1Factory4*, IDXGIDevice, ID2D1Device*, HRESULT)
    create_stroke_style2 : Proc(ID2D1Factory4*, D2D1_STROKE_STYLE_PROPERTIES1*, Float32*, UInt32, ID2D1StrokeStyle1*, HRESULT)
    create_path_geometry2 : Proc(ID2D1Factory4*, ID2D1PathGeometry1*, HRESULT)
    create_drawing_state_block2 : Proc(ID2D1Factory4*, D2D1_DRAWING_STATE_DESCRIPTION1*, IDWriteRenderingParams, ID2D1DrawingStateBlock1*, HRESULT)
    create_gdi_metafile : Proc(ID2D1Factory4*, IStream, ID2D1GdiMetafile*, HRESULT)
    register_effect_from_stream : Proc(ID2D1Factory4*, Guid*, IStream, D2D1_PROPERTY_BINDING*, UInt32, PD2D1_EFFECT_FACTORY, HRESULT)
    register_effect_from_string : Proc(ID2D1Factory4*, Guid*, LibC::LPWSTR, D2D1_PROPERTY_BINDING*, UInt32, PD2D1_EFFECT_FACTORY, HRESULT)
    unregister_effect : Proc(ID2D1Factory4*, Guid*, HRESULT)
    get_registered_effects : Proc(ID2D1Factory4*, Guid*, UInt32, UInt32*, UInt32*, HRESULT)
    get_effect_properties : Proc(ID2D1Factory4*, Guid*, ID2D1Properties*, HRESULT)
    create_device2 : Proc(ID2D1Factory4*, IDXGIDevice, ID2D1Device1*, HRESULT)
    create_device3 : Proc(ID2D1Factory4*, IDXGIDevice, ID2D1Device2*, HRESULT)
    create_device4 : Proc(ID2D1Factory4*, IDXGIDevice, ID2D1Device3*, HRESULT)
  end

  ID2D1Factory4_GUID = LibC::GUID.new("bd4ec2d2-0662-4bee-ba8e-6f29f032e096")
  CLSID_ID2D1Factory4 = "bd4ec2d2-0662-4bee-ba8e-6f29f032e096"
  struct ID2D1Factory4
    lpVtbl : ID2D1Factory4VTbl*
  end

  struct ID2D1CommandSink3VTbl
    query_interface : Proc(ID2D1CommandSink3*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1CommandSink3*, UInt32)
    release : Proc(ID2D1CommandSink3*, UInt32)
    begin_draw : Proc(ID2D1CommandSink3*, HRESULT)
    end_draw : Proc(ID2D1CommandSink3*, HRESULT)
    set_antialias_mode : Proc(ID2D1CommandSink3*, D2D1_ANTIALIAS_MODE, HRESULT)
    set_tags : Proc(ID2D1CommandSink3*, UInt64, UInt64, HRESULT)
    set_text_antialias_mode : Proc(ID2D1CommandSink3*, D2D1_TEXT_ANTIALIAS_MODE, HRESULT)
    set_text_rendering_params : Proc(ID2D1CommandSink3*, IDWriteRenderingParams, HRESULT)
    set_transform : Proc(ID2D1CommandSink3*, D2D_MATRIX_3X2_F*, HRESULT)
    set_primitive_blend : Proc(ID2D1CommandSink3*, D2D1_PRIMITIVE_BLEND, HRESULT)
    set_unit_mode : Proc(ID2D1CommandSink3*, D2D1_UNIT_MODE, HRESULT)
    clear : Proc(ID2D1CommandSink3*, D2D1_COLOR_F*, HRESULT)
    draw_glyph_run : Proc(ID2D1CommandSink3*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, ID2D1Brush, DWRITE_MEASURING_MODE, HRESULT)
    draw_line : Proc(ID2D1CommandSink3*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_geometry : Proc(ID2D1CommandSink3*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_rectangle : Proc(ID2D1CommandSink3*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_bitmap : Proc(ID2D1CommandSink3*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_INTERPOLATION_MODE, D2D_RECT_F*, D2D_MATRIX_4X4_F*, HRESULT)
    draw_image : Proc(ID2D1CommandSink3*, ID2D1Image, D2D_POINT_2F*, D2D_RECT_F*, D2D1_INTERPOLATION_MODE, D2D1_COMPOSITE_MODE, HRESULT)
    draw_gdi_metafile : Proc(ID2D1CommandSink3*, ID2D1GdiMetafile, D2D_POINT_2F*, HRESULT)
    fill_mesh : Proc(ID2D1CommandSink3*, ID2D1Mesh, ID2D1Brush, HRESULT)
    fill_opacity_mask : Proc(ID2D1CommandSink3*, ID2D1Bitmap, ID2D1Brush, D2D_RECT_F*, D2D_RECT_F*, HRESULT)
    fill_geometry : Proc(ID2D1CommandSink3*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, HRESULT)
    fill_rectangle : Proc(ID2D1CommandSink3*, D2D_RECT_F*, ID2D1Brush, HRESULT)
    push_axis_aligned_clip : Proc(ID2D1CommandSink3*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, HRESULT)
    push_layer : Proc(ID2D1CommandSink3*, D2D1_LAYER_PARAMETERS1*, ID2D1Layer, HRESULT)
    pop_axis_aligned_clip : Proc(ID2D1CommandSink3*, HRESULT)
    pop_layer : Proc(ID2D1CommandSink3*, HRESULT)
    set_primitive_blend1 : Proc(ID2D1CommandSink3*, D2D1_PRIMITIVE_BLEND, HRESULT)
    draw_ink : Proc(ID2D1CommandSink3*, ID2D1Ink, ID2D1Brush, ID2D1InkStyle, HRESULT)
    draw_gradient_mesh : Proc(ID2D1CommandSink3*, ID2D1GradientMesh, HRESULT)
    draw_gdi_metafile2 : Proc(ID2D1CommandSink3*, ID2D1GdiMetafile, D2D_RECT_F*, D2D_RECT_F*, HRESULT)
    draw_sprite_batch : Proc(ID2D1CommandSink3*, ID2D1SpriteBatch, UInt32, UInt32, ID2D1Bitmap, D2D1_BITMAP_INTERPOLATION_MODE, D2D1_SPRITE_OPTIONS, HRESULT)
  end

  ID2D1CommandSink3_GUID = LibC::GUID.new("18079135-4cf3-4868-bc8e-06067e6d242d")
  CLSID_ID2D1CommandSink3 = "18079135-4cf3-4868-bc8e-06067e6d242d"
  struct ID2D1CommandSink3
    lpVtbl : ID2D1CommandSink3VTbl*
  end

  struct ID2D1SvgGlyphStyleVTbl
    query_interface : Proc(ID2D1SvgGlyphStyle*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1SvgGlyphStyle*, UInt32)
    release : Proc(ID2D1SvgGlyphStyle*, UInt32)
    get_factory : Proc(ID2D1SvgGlyphStyle*, ID2D1Factory*, Void)
    set_fill : Proc(ID2D1SvgGlyphStyle*, ID2D1Brush, HRESULT)
    get_fill : Proc(ID2D1SvgGlyphStyle*, ID2D1Brush*, Void)
    set_stroke : Proc(ID2D1SvgGlyphStyle*, ID2D1Brush, Float32, Float32*, UInt32, Float32, HRESULT)
    get_stroke_dashes_count : Proc(ID2D1SvgGlyphStyle*, UInt32)
    get_stroke : Proc(ID2D1SvgGlyphStyle*, ID2D1Brush*, Float32*, Float32*, UInt32, Float32*, Void)
  end

  ID2D1SvgGlyphStyle_GUID = LibC::GUID.new("af671749-d241-4db8-8e41-dcc2e5c1a438")
  CLSID_ID2D1SvgGlyphStyle = "af671749-d241-4db8-8e41-dcc2e5c1a438"
  struct ID2D1SvgGlyphStyle
    lpVtbl : ID2D1SvgGlyphStyleVTbl*
  end

  struct ID2D1DeviceContext4VTbl
    query_interface : Proc(ID2D1DeviceContext4*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1DeviceContext4*, UInt32)
    release : Proc(ID2D1DeviceContext4*, UInt32)
    get_factory : Proc(ID2D1DeviceContext4*, ID2D1Factory*, Void)
    create_bitmap : Proc(ID2D1DeviceContext4*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_from_wic_bitmap : Proc(ID2D1DeviceContext4*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_shared_bitmap : Proc(ID2D1DeviceContext4*, Guid*, Void*, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_brush : Proc(ID2D1DeviceContext4*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush*, HRESULT)
    create_solid_color_brush : Proc(ID2D1DeviceContext4*, D2D1_COLOR_F*, D2D1_BRUSH_PROPERTIES*, ID2D1SolidColorBrush*, HRESULT)
    create_gradient_stop_collection : Proc(ID2D1DeviceContext4*, D2D1_GRADIENT_STOP*, UInt32, D2D1_GAMMA, D2D1_EXTEND_MODE, ID2D1GradientStopCollection*, HRESULT)
    create_linear_gradient_brush : Proc(ID2D1DeviceContext4*, D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1LinearGradientBrush*, HRESULT)
    create_radial_gradient_brush : Proc(ID2D1DeviceContext4*, D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1RadialGradientBrush*, HRESULT)
    create_compatible_render_target : Proc(ID2D1DeviceContext4*, D2D_SIZE_F*, D2D_SIZE_U*, D2D1_PIXEL_FORMAT*, D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS, ID2D1BitmapRenderTarget*, HRESULT)
    create_layer : Proc(ID2D1DeviceContext4*, D2D_SIZE_F*, ID2D1Layer*, HRESULT)
    create_mesh : Proc(ID2D1DeviceContext4*, ID2D1Mesh*, HRESULT)
    draw_line : Proc(ID2D1DeviceContext4*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    draw_rectangle : Proc(ID2D1DeviceContext4*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rectangle : Proc(ID2D1DeviceContext4*, D2D_RECT_F*, ID2D1Brush, Void)
    draw_rounded_rectangle : Proc(ID2D1DeviceContext4*, D2D1_ROUNDED_RECT*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rounded_rectangle : Proc(ID2D1DeviceContext4*, D2D1_ROUNDED_RECT*, ID2D1Brush, Void)
    draw_ellipse : Proc(ID2D1DeviceContext4*, D2D1_ELLIPSE*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_ellipse : Proc(ID2D1DeviceContext4*, D2D1_ELLIPSE*, ID2D1Brush, Void)
    draw_geometry : Proc(ID2D1DeviceContext4*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_geometry : Proc(ID2D1DeviceContext4*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, Void)
    fill_mesh : Proc(ID2D1DeviceContext4*, ID2D1Mesh, ID2D1Brush, Void)
    fill_opacity_mask : Proc(ID2D1DeviceContext4*, ID2D1Bitmap, ID2D1Brush, D2D1_OPACITY_MASK_CONTENT, D2D_RECT_F*, D2D_RECT_F*, Void)
    draw_bitmap : Proc(ID2D1DeviceContext4*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_BITMAP_INTERPOLATION_MODE, D2D_RECT_F*, Void)
    draw_text : Proc(ID2D1DeviceContext4*, Char*, UInt32, IDWriteTextFormat, D2D_RECT_F*, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE, Void)
    draw_text_layout : Proc(ID2D1DeviceContext4*, D2D_POINT_2F, IDWriteTextLayout, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, Void)
    draw_glyph_run : Proc(ID2D1DeviceContext4*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    set_transform : Proc(ID2D1DeviceContext4*, D2D_MATRIX_3X2_F*, Void)
    get_transform : Proc(ID2D1DeviceContext4*, D2D_MATRIX_3X2_F*, Void)
    set_antialias_mode : Proc(ID2D1DeviceContext4*, D2D1_ANTIALIAS_MODE, Void)
    get_antialias_mode : Proc(ID2D1DeviceContext4*, D2D1_ANTIALIAS_MODE)
    set_text_antialias_mode : Proc(ID2D1DeviceContext4*, D2D1_TEXT_ANTIALIAS_MODE, Void)
    get_text_antialias_mode : Proc(ID2D1DeviceContext4*, D2D1_TEXT_ANTIALIAS_MODE)
    set_text_rendering_params : Proc(ID2D1DeviceContext4*, IDWriteRenderingParams, Void)
    get_text_rendering_params : Proc(ID2D1DeviceContext4*, IDWriteRenderingParams*, Void)
    set_tags : Proc(ID2D1DeviceContext4*, UInt64, UInt64, Void)
    get_tags : Proc(ID2D1DeviceContext4*, UInt64*, UInt64*, Void)
    push_layer : Proc(ID2D1DeviceContext4*, D2D1_LAYER_PARAMETERS*, ID2D1Layer, Void)
    pop_layer : Proc(ID2D1DeviceContext4*, Void)
    flush : Proc(ID2D1DeviceContext4*, UInt64*, UInt64*, HRESULT)
    save_drawing_state : Proc(ID2D1DeviceContext4*, ID2D1DrawingStateBlock, Void)
    restore_drawing_state : Proc(ID2D1DeviceContext4*, ID2D1DrawingStateBlock, Void)
    push_axis_aligned_clip : Proc(ID2D1DeviceContext4*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, Void)
    pop_axis_aligned_clip : Proc(ID2D1DeviceContext4*, Void)
    clear : Proc(ID2D1DeviceContext4*, D2D1_COLOR_F*, Void)
    begin_draw : Proc(ID2D1DeviceContext4*, Void)
    end_draw : Proc(ID2D1DeviceContext4*, UInt64*, UInt64*, HRESULT)
    get_pixel_format : Proc(ID2D1DeviceContext4*, D2D1_PIXEL_FORMAT)
    set_dpi : Proc(ID2D1DeviceContext4*, Float32, Float32, Void)
    get_dpi : Proc(ID2D1DeviceContext4*, Float32*, Float32*, Void)
    get_size : Proc(ID2D1DeviceContext4*, D2D_SIZE_F)
    get_pixel_size : Proc(ID2D1DeviceContext4*, D2D_SIZE_U)
    get_maximum_bitmap_size : Proc(ID2D1DeviceContext4*, UInt32)
    is_supported : Proc(ID2D1DeviceContext4*, D2D1_RENDER_TARGET_PROPERTIES*, LibC::BOOL)
    create_bitmap2 : Proc(ID2D1DeviceContext4*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_bitmap_from_wic_bitmap2 : Proc(ID2D1DeviceContext4*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_color_context : Proc(ID2D1DeviceContext4*, D2D1_COLOR_SPACE, UInt8*, UInt32, ID2D1ColorContext*, HRESULT)
    create_color_context_from_filename : Proc(ID2D1DeviceContext4*, LibC::LPWSTR, ID2D1ColorContext*, HRESULT)
    create_color_context_from_wic_color_context : Proc(ID2D1DeviceContext4*, IWICColorContext, ID2D1ColorContext*, HRESULT)
    create_bitmap_from_dxgi_surface : Proc(ID2D1DeviceContext4*, IDXGISurface, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_effect : Proc(ID2D1DeviceContext4*, Guid*, ID2D1Effect*, HRESULT)
    create_gradient_stop_collection2 : Proc(ID2D1DeviceContext4*, D2D1_GRADIENT_STOP*, UInt32, D2D1_COLOR_SPACE, D2D1_COLOR_SPACE, D2D1_BUFFER_PRECISION, D2D1_EXTEND_MODE, D2D1_COLOR_INTERPOLATION_MODE, ID2D1GradientStopCollection1*, HRESULT)
    create_image_brush : Proc(ID2D1DeviceContext4*, ID2D1Image, D2D1_IMAGE_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1ImageBrush*, HRESULT)
    create_bitmap_brush2 : Proc(ID2D1DeviceContext4*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES1*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush1*, HRESULT)
    create_command_list : Proc(ID2D1DeviceContext4*, ID2D1CommandList*, HRESULT)
    is_dxgi_format_supported : Proc(ID2D1DeviceContext4*, DXGI_FORMAT, LibC::BOOL)
    is_buffer_precision_supported : Proc(ID2D1DeviceContext4*, D2D1_BUFFER_PRECISION, LibC::BOOL)
    get_image_local_bounds : Proc(ID2D1DeviceContext4*, ID2D1Image, D2D_RECT_F*, HRESULT)
    get_image_world_bounds : Proc(ID2D1DeviceContext4*, ID2D1Image, D2D_RECT_F*, HRESULT)
    get_glyph_run_world_bounds : Proc(ID2D1DeviceContext4*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_MEASURING_MODE, D2D_RECT_F*, HRESULT)
    get_device : Proc(ID2D1DeviceContext4*, ID2D1Device*, Void)
    set_target : Proc(ID2D1DeviceContext4*, ID2D1Image, Void)
    get_target : Proc(ID2D1DeviceContext4*, ID2D1Image*, Void)
    set_rendering_controls : Proc(ID2D1DeviceContext4*, D2D1_RENDERING_CONTROLS*, Void)
    get_rendering_controls : Proc(ID2D1DeviceContext4*, D2D1_RENDERING_CONTROLS*, Void)
    set_primitive_blend : Proc(ID2D1DeviceContext4*, D2D1_PRIMITIVE_BLEND, Void)
    get_primitive_blend : Proc(ID2D1DeviceContext4*, D2D1_PRIMITIVE_BLEND)
    set_unit_mode : Proc(ID2D1DeviceContext4*, D2D1_UNIT_MODE, Void)
    get_unit_mode : Proc(ID2D1DeviceContext4*, D2D1_UNIT_MODE)
    draw_glyph_run2 : Proc(ID2D1DeviceContext4*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    draw_image : Proc(ID2D1DeviceContext4*, ID2D1Image, D2D_POINT_2F*, D2D_RECT_F*, D2D1_INTERPOLATION_MODE, D2D1_COMPOSITE_MODE, Void)
    draw_gdi_metafile : Proc(ID2D1DeviceContext4*, ID2D1GdiMetafile, D2D_POINT_2F*, Void)
    draw_bitmap2 : Proc(ID2D1DeviceContext4*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_INTERPOLATION_MODE, D2D_RECT_F*, D2D_MATRIX_4X4_F*, Void)
    push_layer2 : Proc(ID2D1DeviceContext4*, D2D1_LAYER_PARAMETERS1*, ID2D1Layer, Void)
    invalidate_effect_input_rectangle : Proc(ID2D1DeviceContext4*, ID2D1Effect, UInt32, D2D_RECT_F*, HRESULT)
    get_effect_invalid_rectangle_count : Proc(ID2D1DeviceContext4*, ID2D1Effect, UInt32*, HRESULT)
    get_effect_invalid_rectangles : Proc(ID2D1DeviceContext4*, ID2D1Effect, D2D_RECT_F*, UInt32, HRESULT)
    get_effect_required_input_rectangles : Proc(ID2D1DeviceContext4*, ID2D1Effect, D2D_RECT_F*, D2D1_EFFECT_INPUT_DESCRIPTION*, D2D_RECT_F*, UInt32, HRESULT)
    fill_opacity_mask2 : Proc(ID2D1DeviceContext4*, ID2D1Bitmap, ID2D1Brush, D2D_RECT_F*, D2D_RECT_F*, Void)
    create_filled_geometry_realization : Proc(ID2D1DeviceContext4*, ID2D1Geometry, Float32, ID2D1GeometryRealization*, HRESULT)
    create_stroked_geometry_realization : Proc(ID2D1DeviceContext4*, ID2D1Geometry, Float32, Float32, ID2D1StrokeStyle, ID2D1GeometryRealization*, HRESULT)
    draw_geometry_realization : Proc(ID2D1DeviceContext4*, ID2D1GeometryRealization, ID2D1Brush, Void)
    create_ink : Proc(ID2D1DeviceContext4*, D2D1_INK_POINT*, ID2D1Ink*, HRESULT)
    create_ink_style : Proc(ID2D1DeviceContext4*, D2D1_INK_STYLE_PROPERTIES*, ID2D1InkStyle*, HRESULT)
    create_gradient_mesh : Proc(ID2D1DeviceContext4*, D2D1_GRADIENT_MESH_PATCH*, UInt32, ID2D1GradientMesh*, HRESULT)
    create_image_source_from_wic : Proc(ID2D1DeviceContext4*, IWICBitmapSource, D2D1_IMAGE_SOURCE_LOADING_OPTIONS, D2D1_ALPHA_MODE, ID2D1ImageSourceFromWic*, HRESULT)
    create_lookup_table3_d : Proc(ID2D1DeviceContext4*, D2D1_BUFFER_PRECISION, UInt32*, UInt8*, UInt32, UInt32*, ID2D1LookupTable3D*, HRESULT)
    create_image_source_from_dxgi : Proc(ID2D1DeviceContext4*, IDXGISurface*, UInt32, DXGI_COLOR_SPACE_TYPE, D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS, ID2D1ImageSource*, HRESULT)
    get_gradient_mesh_world_bounds : Proc(ID2D1DeviceContext4*, ID2D1GradientMesh, D2D_RECT_F*, HRESULT)
    draw_ink : Proc(ID2D1DeviceContext4*, ID2D1Ink, ID2D1Brush, ID2D1InkStyle, Void)
    draw_gradient_mesh : Proc(ID2D1DeviceContext4*, ID2D1GradientMesh, Void)
    draw_gdi_metafile2 : Proc(ID2D1DeviceContext4*, ID2D1GdiMetafile, D2D_RECT_F*, D2D_RECT_F*, Void)
    create_transformed_image_source : Proc(ID2D1DeviceContext4*, ID2D1ImageSource, D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES*, ID2D1TransformedImageSource*, HRESULT)
    create_sprite_batch : Proc(ID2D1DeviceContext4*, ID2D1SpriteBatch*, HRESULT)
    draw_sprite_batch : Proc(ID2D1DeviceContext4*, ID2D1SpriteBatch, UInt32, UInt32, ID2D1Bitmap, D2D1_BITMAP_INTERPOLATION_MODE, D2D1_SPRITE_OPTIONS, Void)
    create_svg_glyph_style : Proc(ID2D1DeviceContext4*, ID2D1SvgGlyphStyle*, HRESULT)
    draw_text2 : Proc(ID2D1DeviceContext4*, Char*, UInt32, IDWriteTextFormat, D2D_RECT_F*, ID2D1Brush, ID2D1SvgGlyphStyle, UInt32, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE, Void)
    draw_text_layout2 : Proc(ID2D1DeviceContext4*, D2D_POINT_2F, IDWriteTextLayout, ID2D1Brush, ID2D1SvgGlyphStyle, UInt32, D2D1_DRAW_TEXT_OPTIONS, Void)
    draw_color_bitmap_glyph_run : Proc(ID2D1DeviceContext4*, DWRITE_GLYPH_IMAGE_FORMATS, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_MEASURING_MODE, D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION, Void)
    draw_svg_glyph_run : Proc(ID2D1DeviceContext4*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush, ID2D1SvgGlyphStyle, UInt32, DWRITE_MEASURING_MODE, Void)
    get_color_bitmap_glyph_image : Proc(ID2D1DeviceContext4*, DWRITE_GLYPH_IMAGE_FORMATS, D2D_POINT_2F, IDWriteFontFace, Float32, UInt16, LibC::BOOL, D2D_MATRIX_3X2_F*, Float32, Float32, D2D_MATRIX_3X2_F*, ID2D1Image*, HRESULT)
    get_svg_glyph_image : Proc(ID2D1DeviceContext4*, D2D_POINT_2F, IDWriteFontFace, Float32, UInt16, LibC::BOOL, D2D_MATRIX_3X2_F*, ID2D1Brush, ID2D1SvgGlyphStyle, UInt32, D2D_MATRIX_3X2_F*, ID2D1CommandList*, HRESULT)
  end

  ID2D1DeviceContext4_GUID = LibC::GUID.new("8c427831-3d90-4476-b647-c4fae349e4db")
  CLSID_ID2D1DeviceContext4 = "8c427831-3d90-4476-b647-c4fae349e4db"
  struct ID2D1DeviceContext4
    lpVtbl : ID2D1DeviceContext4VTbl*
  end

  struct ID2D1Device4VTbl
    query_interface : Proc(ID2D1Device4*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Device4*, UInt32)
    release : Proc(ID2D1Device4*, UInt32)
    get_factory : Proc(ID2D1Device4*, ID2D1Factory*, Void)
    create_device_context : Proc(ID2D1Device4*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext*, HRESULT)
    create_print_control : Proc(ID2D1Device4*, IWICImagingFactory, IPrintDocumentPackageTarget, D2D1_PRINT_CONTROL_PROPERTIES*, ID2D1PrintControl*, HRESULT)
    set_maximum_texture_memory : Proc(ID2D1Device4*, UInt64, Void)
    get_maximum_texture_memory : Proc(ID2D1Device4*, UInt64)
    clear_resources : Proc(ID2D1Device4*, UInt32, Void)
    get_rendering_priority : Proc(ID2D1Device4*, D2D1_RENDERING_PRIORITY)
    set_rendering_priority : Proc(ID2D1Device4*, D2D1_RENDERING_PRIORITY, Void)
    create_device_context2 : Proc(ID2D1Device4*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext1*, HRESULT)
    create_device_context3 : Proc(ID2D1Device4*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext2*, HRESULT)
    flush_device_contexts : Proc(ID2D1Device4*, ID2D1Bitmap, Void)
    get_dxgi_device : Proc(ID2D1Device4*, IDXGIDevice*, HRESULT)
    create_device_context4 : Proc(ID2D1Device4*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext3*, HRESULT)
    create_device_context5 : Proc(ID2D1Device4*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext4*, HRESULT)
    set_maximum_color_glyph_cache_memory : Proc(ID2D1Device4*, UInt64, Void)
    get_maximum_color_glyph_cache_memory : Proc(ID2D1Device4*, UInt64)
  end

  ID2D1Device4_GUID = LibC::GUID.new("d7bdb159-5683-4a46-bc9c-72dc720b858b")
  CLSID_ID2D1Device4 = "d7bdb159-5683-4a46-bc9c-72dc720b858b"
  struct ID2D1Device4
    lpVtbl : ID2D1Device4VTbl*
  end

  struct ID2D1Factory5VTbl
    query_interface : Proc(ID2D1Factory5*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Factory5*, UInt32)
    release : Proc(ID2D1Factory5*, UInt32)
    reload_system_metrics : Proc(ID2D1Factory5*, HRESULT)
    get_desktop_dpi : Proc(ID2D1Factory5*, Float32*, Float32*, Void)
    create_rectangle_geometry : Proc(ID2D1Factory5*, D2D_RECT_F*, ID2D1RectangleGeometry*, HRESULT)
    create_rounded_rectangle_geometry : Proc(ID2D1Factory5*, D2D1_ROUNDED_RECT*, ID2D1RoundedRectangleGeometry*, HRESULT)
    create_ellipse_geometry : Proc(ID2D1Factory5*, D2D1_ELLIPSE*, ID2D1EllipseGeometry*, HRESULT)
    create_geometry_group : Proc(ID2D1Factory5*, D2D1_FILL_MODE, ID2D1Geometry*, UInt32, ID2D1GeometryGroup*, HRESULT)
    create_transformed_geometry : Proc(ID2D1Factory5*, ID2D1Geometry, D2D_MATRIX_3X2_F*, ID2D1TransformedGeometry*, HRESULT)
    create_path_geometry : Proc(ID2D1Factory5*, ID2D1PathGeometry*, HRESULT)
    create_stroke_style : Proc(ID2D1Factory5*, D2D1_STROKE_STYLE_PROPERTIES*, Float32*, UInt32, ID2D1StrokeStyle*, HRESULT)
    create_drawing_state_block : Proc(ID2D1Factory5*, D2D1_DRAWING_STATE_DESCRIPTION*, IDWriteRenderingParams, ID2D1DrawingStateBlock*, HRESULT)
    create_wic_bitmap_render_target : Proc(ID2D1Factory5*, IWICBitmap, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_hwnd_render_target : Proc(ID2D1Factory5*, D2D1_RENDER_TARGET_PROPERTIES*, D2D1_HWND_RENDER_TARGET_PROPERTIES*, ID2D1HwndRenderTarget*, HRESULT)
    create_dxgi_surface_render_target : Proc(ID2D1Factory5*, IDXGISurface, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_dc_render_target : Proc(ID2D1Factory5*, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1DCRenderTarget*, HRESULT)
    create_device : Proc(ID2D1Factory5*, IDXGIDevice, ID2D1Device*, HRESULT)
    create_stroke_style2 : Proc(ID2D1Factory5*, D2D1_STROKE_STYLE_PROPERTIES1*, Float32*, UInt32, ID2D1StrokeStyle1*, HRESULT)
    create_path_geometry2 : Proc(ID2D1Factory5*, ID2D1PathGeometry1*, HRESULT)
    create_drawing_state_block2 : Proc(ID2D1Factory5*, D2D1_DRAWING_STATE_DESCRIPTION1*, IDWriteRenderingParams, ID2D1DrawingStateBlock1*, HRESULT)
    create_gdi_metafile : Proc(ID2D1Factory5*, IStream, ID2D1GdiMetafile*, HRESULT)
    register_effect_from_stream : Proc(ID2D1Factory5*, Guid*, IStream, D2D1_PROPERTY_BINDING*, UInt32, PD2D1_EFFECT_FACTORY, HRESULT)
    register_effect_from_string : Proc(ID2D1Factory5*, Guid*, LibC::LPWSTR, D2D1_PROPERTY_BINDING*, UInt32, PD2D1_EFFECT_FACTORY, HRESULT)
    unregister_effect : Proc(ID2D1Factory5*, Guid*, HRESULT)
    get_registered_effects : Proc(ID2D1Factory5*, Guid*, UInt32, UInt32*, UInt32*, HRESULT)
    get_effect_properties : Proc(ID2D1Factory5*, Guid*, ID2D1Properties*, HRESULT)
    create_device2 : Proc(ID2D1Factory5*, IDXGIDevice, ID2D1Device1*, HRESULT)
    create_device3 : Proc(ID2D1Factory5*, IDXGIDevice, ID2D1Device2*, HRESULT)
    create_device4 : Proc(ID2D1Factory5*, IDXGIDevice, ID2D1Device3*, HRESULT)
    create_device5 : Proc(ID2D1Factory5*, IDXGIDevice, ID2D1Device4*, HRESULT)
  end

  ID2D1Factory5_GUID = LibC::GUID.new("c4349994-838e-4b0f-8cab-44997d9eeacc")
  CLSID_ID2D1Factory5 = "c4349994-838e-4b0f-8cab-44997d9eeacc"
  struct ID2D1Factory5
    lpVtbl : ID2D1Factory5VTbl*
  end

  struct ID2D1CommandSink4VTbl
    query_interface : Proc(ID2D1CommandSink4*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1CommandSink4*, UInt32)
    release : Proc(ID2D1CommandSink4*, UInt32)
    begin_draw : Proc(ID2D1CommandSink4*, HRESULT)
    end_draw : Proc(ID2D1CommandSink4*, HRESULT)
    set_antialias_mode : Proc(ID2D1CommandSink4*, D2D1_ANTIALIAS_MODE, HRESULT)
    set_tags : Proc(ID2D1CommandSink4*, UInt64, UInt64, HRESULT)
    set_text_antialias_mode : Proc(ID2D1CommandSink4*, D2D1_TEXT_ANTIALIAS_MODE, HRESULT)
    set_text_rendering_params : Proc(ID2D1CommandSink4*, IDWriteRenderingParams, HRESULT)
    set_transform : Proc(ID2D1CommandSink4*, D2D_MATRIX_3X2_F*, HRESULT)
    set_primitive_blend : Proc(ID2D1CommandSink4*, D2D1_PRIMITIVE_BLEND, HRESULT)
    set_unit_mode : Proc(ID2D1CommandSink4*, D2D1_UNIT_MODE, HRESULT)
    clear : Proc(ID2D1CommandSink4*, D2D1_COLOR_F*, HRESULT)
    draw_glyph_run : Proc(ID2D1CommandSink4*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, ID2D1Brush, DWRITE_MEASURING_MODE, HRESULT)
    draw_line : Proc(ID2D1CommandSink4*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_geometry : Proc(ID2D1CommandSink4*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_rectangle : Proc(ID2D1CommandSink4*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_bitmap : Proc(ID2D1CommandSink4*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_INTERPOLATION_MODE, D2D_RECT_F*, D2D_MATRIX_4X4_F*, HRESULT)
    draw_image : Proc(ID2D1CommandSink4*, ID2D1Image, D2D_POINT_2F*, D2D_RECT_F*, D2D1_INTERPOLATION_MODE, D2D1_COMPOSITE_MODE, HRESULT)
    draw_gdi_metafile : Proc(ID2D1CommandSink4*, ID2D1GdiMetafile, D2D_POINT_2F*, HRESULT)
    fill_mesh : Proc(ID2D1CommandSink4*, ID2D1Mesh, ID2D1Brush, HRESULT)
    fill_opacity_mask : Proc(ID2D1CommandSink4*, ID2D1Bitmap, ID2D1Brush, D2D_RECT_F*, D2D_RECT_F*, HRESULT)
    fill_geometry : Proc(ID2D1CommandSink4*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, HRESULT)
    fill_rectangle : Proc(ID2D1CommandSink4*, D2D_RECT_F*, ID2D1Brush, HRESULT)
    push_axis_aligned_clip : Proc(ID2D1CommandSink4*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, HRESULT)
    push_layer : Proc(ID2D1CommandSink4*, D2D1_LAYER_PARAMETERS1*, ID2D1Layer, HRESULT)
    pop_axis_aligned_clip : Proc(ID2D1CommandSink4*, HRESULT)
    pop_layer : Proc(ID2D1CommandSink4*, HRESULT)
    set_primitive_blend1 : Proc(ID2D1CommandSink4*, D2D1_PRIMITIVE_BLEND, HRESULT)
    draw_ink : Proc(ID2D1CommandSink4*, ID2D1Ink, ID2D1Brush, ID2D1InkStyle, HRESULT)
    draw_gradient_mesh : Proc(ID2D1CommandSink4*, ID2D1GradientMesh, HRESULT)
    draw_gdi_metafile2 : Proc(ID2D1CommandSink4*, ID2D1GdiMetafile, D2D_RECT_F*, D2D_RECT_F*, HRESULT)
    draw_sprite_batch : Proc(ID2D1CommandSink4*, ID2D1SpriteBatch, UInt32, UInt32, ID2D1Bitmap, D2D1_BITMAP_INTERPOLATION_MODE, D2D1_SPRITE_OPTIONS, HRESULT)
    set_primitive_blend2 : Proc(ID2D1CommandSink4*, D2D1_PRIMITIVE_BLEND, HRESULT)
  end

  ID2D1CommandSink4_GUID = LibC::GUID.new("c78a6519-40d6-4218-b2de-beeeb744bb3e")
  CLSID_ID2D1CommandSink4 = "c78a6519-40d6-4218-b2de-beeeb744bb3e"
  struct ID2D1CommandSink4
    lpVtbl : ID2D1CommandSink4VTbl*
  end

  struct ID2D1ColorContext1VTbl
    query_interface : Proc(ID2D1ColorContext1*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1ColorContext1*, UInt32)
    release : Proc(ID2D1ColorContext1*, UInt32)
    get_factory : Proc(ID2D1ColorContext1*, ID2D1Factory*, Void)
    get_color_space : Proc(ID2D1ColorContext1*, D2D1_COLOR_SPACE)
    get_profile_size : Proc(ID2D1ColorContext1*, UInt32)
    get_profile : Proc(ID2D1ColorContext1*, UInt8*, UInt32, HRESULT)
    get_color_context_type : Proc(ID2D1ColorContext1*, D2D1_COLOR_CONTEXT_TYPE)
    get_dxgi_color_space : Proc(ID2D1ColorContext1*, DXGI_COLOR_SPACE_TYPE)
    get_simple_color_profile : Proc(ID2D1ColorContext1*, D2D1_SIMPLE_COLOR_PROFILE*, HRESULT)
  end

  ID2D1ColorContext1_GUID = LibC::GUID.new("1ab42875-c57f-4be9-bd85-9cd78d6f55ee")
  CLSID_ID2D1ColorContext1 = "1ab42875-c57f-4be9-bd85-9cd78d6f55ee"
  struct ID2D1ColorContext1
    lpVtbl : ID2D1ColorContext1VTbl*
  end

  struct ID2D1DeviceContext5VTbl
    query_interface : Proc(ID2D1DeviceContext5*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1DeviceContext5*, UInt32)
    release : Proc(ID2D1DeviceContext5*, UInt32)
    get_factory : Proc(ID2D1DeviceContext5*, ID2D1Factory*, Void)
    create_bitmap : Proc(ID2D1DeviceContext5*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_from_wic_bitmap : Proc(ID2D1DeviceContext5*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_shared_bitmap : Proc(ID2D1DeviceContext5*, Guid*, Void*, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_brush : Proc(ID2D1DeviceContext5*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush*, HRESULT)
    create_solid_color_brush : Proc(ID2D1DeviceContext5*, D2D1_COLOR_F*, D2D1_BRUSH_PROPERTIES*, ID2D1SolidColorBrush*, HRESULT)
    create_gradient_stop_collection : Proc(ID2D1DeviceContext5*, D2D1_GRADIENT_STOP*, UInt32, D2D1_GAMMA, D2D1_EXTEND_MODE, ID2D1GradientStopCollection*, HRESULT)
    create_linear_gradient_brush : Proc(ID2D1DeviceContext5*, D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1LinearGradientBrush*, HRESULT)
    create_radial_gradient_brush : Proc(ID2D1DeviceContext5*, D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1RadialGradientBrush*, HRESULT)
    create_compatible_render_target : Proc(ID2D1DeviceContext5*, D2D_SIZE_F*, D2D_SIZE_U*, D2D1_PIXEL_FORMAT*, D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS, ID2D1BitmapRenderTarget*, HRESULT)
    create_layer : Proc(ID2D1DeviceContext5*, D2D_SIZE_F*, ID2D1Layer*, HRESULT)
    create_mesh : Proc(ID2D1DeviceContext5*, ID2D1Mesh*, HRESULT)
    draw_line : Proc(ID2D1DeviceContext5*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    draw_rectangle : Proc(ID2D1DeviceContext5*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rectangle : Proc(ID2D1DeviceContext5*, D2D_RECT_F*, ID2D1Brush, Void)
    draw_rounded_rectangle : Proc(ID2D1DeviceContext5*, D2D1_ROUNDED_RECT*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rounded_rectangle : Proc(ID2D1DeviceContext5*, D2D1_ROUNDED_RECT*, ID2D1Brush, Void)
    draw_ellipse : Proc(ID2D1DeviceContext5*, D2D1_ELLIPSE*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_ellipse : Proc(ID2D1DeviceContext5*, D2D1_ELLIPSE*, ID2D1Brush, Void)
    draw_geometry : Proc(ID2D1DeviceContext5*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_geometry : Proc(ID2D1DeviceContext5*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, Void)
    fill_mesh : Proc(ID2D1DeviceContext5*, ID2D1Mesh, ID2D1Brush, Void)
    fill_opacity_mask : Proc(ID2D1DeviceContext5*, ID2D1Bitmap, ID2D1Brush, D2D1_OPACITY_MASK_CONTENT, D2D_RECT_F*, D2D_RECT_F*, Void)
    draw_bitmap : Proc(ID2D1DeviceContext5*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_BITMAP_INTERPOLATION_MODE, D2D_RECT_F*, Void)
    draw_text : Proc(ID2D1DeviceContext5*, Char*, UInt32, IDWriteTextFormat, D2D_RECT_F*, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE, Void)
    draw_text_layout : Proc(ID2D1DeviceContext5*, D2D_POINT_2F, IDWriteTextLayout, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, Void)
    draw_glyph_run : Proc(ID2D1DeviceContext5*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    set_transform : Proc(ID2D1DeviceContext5*, D2D_MATRIX_3X2_F*, Void)
    get_transform : Proc(ID2D1DeviceContext5*, D2D_MATRIX_3X2_F*, Void)
    set_antialias_mode : Proc(ID2D1DeviceContext5*, D2D1_ANTIALIAS_MODE, Void)
    get_antialias_mode : Proc(ID2D1DeviceContext5*, D2D1_ANTIALIAS_MODE)
    set_text_antialias_mode : Proc(ID2D1DeviceContext5*, D2D1_TEXT_ANTIALIAS_MODE, Void)
    get_text_antialias_mode : Proc(ID2D1DeviceContext5*, D2D1_TEXT_ANTIALIAS_MODE)
    set_text_rendering_params : Proc(ID2D1DeviceContext5*, IDWriteRenderingParams, Void)
    get_text_rendering_params : Proc(ID2D1DeviceContext5*, IDWriteRenderingParams*, Void)
    set_tags : Proc(ID2D1DeviceContext5*, UInt64, UInt64, Void)
    get_tags : Proc(ID2D1DeviceContext5*, UInt64*, UInt64*, Void)
    push_layer : Proc(ID2D1DeviceContext5*, D2D1_LAYER_PARAMETERS*, ID2D1Layer, Void)
    pop_layer : Proc(ID2D1DeviceContext5*, Void)
    flush : Proc(ID2D1DeviceContext5*, UInt64*, UInt64*, HRESULT)
    save_drawing_state : Proc(ID2D1DeviceContext5*, ID2D1DrawingStateBlock, Void)
    restore_drawing_state : Proc(ID2D1DeviceContext5*, ID2D1DrawingStateBlock, Void)
    push_axis_aligned_clip : Proc(ID2D1DeviceContext5*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, Void)
    pop_axis_aligned_clip : Proc(ID2D1DeviceContext5*, Void)
    clear : Proc(ID2D1DeviceContext5*, D2D1_COLOR_F*, Void)
    begin_draw : Proc(ID2D1DeviceContext5*, Void)
    end_draw : Proc(ID2D1DeviceContext5*, UInt64*, UInt64*, HRESULT)
    get_pixel_format : Proc(ID2D1DeviceContext5*, D2D1_PIXEL_FORMAT)
    set_dpi : Proc(ID2D1DeviceContext5*, Float32, Float32, Void)
    get_dpi : Proc(ID2D1DeviceContext5*, Float32*, Float32*, Void)
    get_size : Proc(ID2D1DeviceContext5*, D2D_SIZE_F)
    get_pixel_size : Proc(ID2D1DeviceContext5*, D2D_SIZE_U)
    get_maximum_bitmap_size : Proc(ID2D1DeviceContext5*, UInt32)
    is_supported : Proc(ID2D1DeviceContext5*, D2D1_RENDER_TARGET_PROPERTIES*, LibC::BOOL)
    create_bitmap2 : Proc(ID2D1DeviceContext5*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_bitmap_from_wic_bitmap2 : Proc(ID2D1DeviceContext5*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_color_context : Proc(ID2D1DeviceContext5*, D2D1_COLOR_SPACE, UInt8*, UInt32, ID2D1ColorContext*, HRESULT)
    create_color_context_from_filename : Proc(ID2D1DeviceContext5*, LibC::LPWSTR, ID2D1ColorContext*, HRESULT)
    create_color_context_from_wic_color_context : Proc(ID2D1DeviceContext5*, IWICColorContext, ID2D1ColorContext*, HRESULT)
    create_bitmap_from_dxgi_surface : Proc(ID2D1DeviceContext5*, IDXGISurface, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_effect : Proc(ID2D1DeviceContext5*, Guid*, ID2D1Effect*, HRESULT)
    create_gradient_stop_collection2 : Proc(ID2D1DeviceContext5*, D2D1_GRADIENT_STOP*, UInt32, D2D1_COLOR_SPACE, D2D1_COLOR_SPACE, D2D1_BUFFER_PRECISION, D2D1_EXTEND_MODE, D2D1_COLOR_INTERPOLATION_MODE, ID2D1GradientStopCollection1*, HRESULT)
    create_image_brush : Proc(ID2D1DeviceContext5*, ID2D1Image, D2D1_IMAGE_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1ImageBrush*, HRESULT)
    create_bitmap_brush2 : Proc(ID2D1DeviceContext5*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES1*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush1*, HRESULT)
    create_command_list : Proc(ID2D1DeviceContext5*, ID2D1CommandList*, HRESULT)
    is_dxgi_format_supported : Proc(ID2D1DeviceContext5*, DXGI_FORMAT, LibC::BOOL)
    is_buffer_precision_supported : Proc(ID2D1DeviceContext5*, D2D1_BUFFER_PRECISION, LibC::BOOL)
    get_image_local_bounds : Proc(ID2D1DeviceContext5*, ID2D1Image, D2D_RECT_F*, HRESULT)
    get_image_world_bounds : Proc(ID2D1DeviceContext5*, ID2D1Image, D2D_RECT_F*, HRESULT)
    get_glyph_run_world_bounds : Proc(ID2D1DeviceContext5*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_MEASURING_MODE, D2D_RECT_F*, HRESULT)
    get_device : Proc(ID2D1DeviceContext5*, ID2D1Device*, Void)
    set_target : Proc(ID2D1DeviceContext5*, ID2D1Image, Void)
    get_target : Proc(ID2D1DeviceContext5*, ID2D1Image*, Void)
    set_rendering_controls : Proc(ID2D1DeviceContext5*, D2D1_RENDERING_CONTROLS*, Void)
    get_rendering_controls : Proc(ID2D1DeviceContext5*, D2D1_RENDERING_CONTROLS*, Void)
    set_primitive_blend : Proc(ID2D1DeviceContext5*, D2D1_PRIMITIVE_BLEND, Void)
    get_primitive_blend : Proc(ID2D1DeviceContext5*, D2D1_PRIMITIVE_BLEND)
    set_unit_mode : Proc(ID2D1DeviceContext5*, D2D1_UNIT_MODE, Void)
    get_unit_mode : Proc(ID2D1DeviceContext5*, D2D1_UNIT_MODE)
    draw_glyph_run2 : Proc(ID2D1DeviceContext5*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    draw_image : Proc(ID2D1DeviceContext5*, ID2D1Image, D2D_POINT_2F*, D2D_RECT_F*, D2D1_INTERPOLATION_MODE, D2D1_COMPOSITE_MODE, Void)
    draw_gdi_metafile : Proc(ID2D1DeviceContext5*, ID2D1GdiMetafile, D2D_POINT_2F*, Void)
    draw_bitmap2 : Proc(ID2D1DeviceContext5*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_INTERPOLATION_MODE, D2D_RECT_F*, D2D_MATRIX_4X4_F*, Void)
    push_layer2 : Proc(ID2D1DeviceContext5*, D2D1_LAYER_PARAMETERS1*, ID2D1Layer, Void)
    invalidate_effect_input_rectangle : Proc(ID2D1DeviceContext5*, ID2D1Effect, UInt32, D2D_RECT_F*, HRESULT)
    get_effect_invalid_rectangle_count : Proc(ID2D1DeviceContext5*, ID2D1Effect, UInt32*, HRESULT)
    get_effect_invalid_rectangles : Proc(ID2D1DeviceContext5*, ID2D1Effect, D2D_RECT_F*, UInt32, HRESULT)
    get_effect_required_input_rectangles : Proc(ID2D1DeviceContext5*, ID2D1Effect, D2D_RECT_F*, D2D1_EFFECT_INPUT_DESCRIPTION*, D2D_RECT_F*, UInt32, HRESULT)
    fill_opacity_mask2 : Proc(ID2D1DeviceContext5*, ID2D1Bitmap, ID2D1Brush, D2D_RECT_F*, D2D_RECT_F*, Void)
    create_filled_geometry_realization : Proc(ID2D1DeviceContext5*, ID2D1Geometry, Float32, ID2D1GeometryRealization*, HRESULT)
    create_stroked_geometry_realization : Proc(ID2D1DeviceContext5*, ID2D1Geometry, Float32, Float32, ID2D1StrokeStyle, ID2D1GeometryRealization*, HRESULT)
    draw_geometry_realization : Proc(ID2D1DeviceContext5*, ID2D1GeometryRealization, ID2D1Brush, Void)
    create_ink : Proc(ID2D1DeviceContext5*, D2D1_INK_POINT*, ID2D1Ink*, HRESULT)
    create_ink_style : Proc(ID2D1DeviceContext5*, D2D1_INK_STYLE_PROPERTIES*, ID2D1InkStyle*, HRESULT)
    create_gradient_mesh : Proc(ID2D1DeviceContext5*, D2D1_GRADIENT_MESH_PATCH*, UInt32, ID2D1GradientMesh*, HRESULT)
    create_image_source_from_wic : Proc(ID2D1DeviceContext5*, IWICBitmapSource, D2D1_IMAGE_SOURCE_LOADING_OPTIONS, D2D1_ALPHA_MODE, ID2D1ImageSourceFromWic*, HRESULT)
    create_lookup_table3_d : Proc(ID2D1DeviceContext5*, D2D1_BUFFER_PRECISION, UInt32*, UInt8*, UInt32, UInt32*, ID2D1LookupTable3D*, HRESULT)
    create_image_source_from_dxgi : Proc(ID2D1DeviceContext5*, IDXGISurface*, UInt32, DXGI_COLOR_SPACE_TYPE, D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS, ID2D1ImageSource*, HRESULT)
    get_gradient_mesh_world_bounds : Proc(ID2D1DeviceContext5*, ID2D1GradientMesh, D2D_RECT_F*, HRESULT)
    draw_ink : Proc(ID2D1DeviceContext5*, ID2D1Ink, ID2D1Brush, ID2D1InkStyle, Void)
    draw_gradient_mesh : Proc(ID2D1DeviceContext5*, ID2D1GradientMesh, Void)
    draw_gdi_metafile2 : Proc(ID2D1DeviceContext5*, ID2D1GdiMetafile, D2D_RECT_F*, D2D_RECT_F*, Void)
    create_transformed_image_source : Proc(ID2D1DeviceContext5*, ID2D1ImageSource, D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES*, ID2D1TransformedImageSource*, HRESULT)
    create_sprite_batch : Proc(ID2D1DeviceContext5*, ID2D1SpriteBatch*, HRESULT)
    draw_sprite_batch : Proc(ID2D1DeviceContext5*, ID2D1SpriteBatch, UInt32, UInt32, ID2D1Bitmap, D2D1_BITMAP_INTERPOLATION_MODE, D2D1_SPRITE_OPTIONS, Void)
    create_svg_glyph_style : Proc(ID2D1DeviceContext5*, ID2D1SvgGlyphStyle*, HRESULT)
    draw_text2 : Proc(ID2D1DeviceContext5*, Char*, UInt32, IDWriteTextFormat, D2D_RECT_F*, ID2D1Brush, ID2D1SvgGlyphStyle, UInt32, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE, Void)
    draw_text_layout2 : Proc(ID2D1DeviceContext5*, D2D_POINT_2F, IDWriteTextLayout, ID2D1Brush, ID2D1SvgGlyphStyle, UInt32, D2D1_DRAW_TEXT_OPTIONS, Void)
    draw_color_bitmap_glyph_run : Proc(ID2D1DeviceContext5*, DWRITE_GLYPH_IMAGE_FORMATS, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_MEASURING_MODE, D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION, Void)
    draw_svg_glyph_run : Proc(ID2D1DeviceContext5*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush, ID2D1SvgGlyphStyle, UInt32, DWRITE_MEASURING_MODE, Void)
    get_color_bitmap_glyph_image : Proc(ID2D1DeviceContext5*, DWRITE_GLYPH_IMAGE_FORMATS, D2D_POINT_2F, IDWriteFontFace, Float32, UInt16, LibC::BOOL, D2D_MATRIX_3X2_F*, Float32, Float32, D2D_MATRIX_3X2_F*, ID2D1Image*, HRESULT)
    get_svg_glyph_image : Proc(ID2D1DeviceContext5*, D2D_POINT_2F, IDWriteFontFace, Float32, UInt16, LibC::BOOL, D2D_MATRIX_3X2_F*, ID2D1Brush, ID2D1SvgGlyphStyle, UInt32, D2D_MATRIX_3X2_F*, ID2D1CommandList*, HRESULT)
    create_svg_document : Proc(ID2D1DeviceContext5*, IStream, D2D_SIZE_F, ID2D1SvgDocument*, HRESULT)
    draw_svg_document : Proc(ID2D1DeviceContext5*, ID2D1SvgDocument, Void)
    create_color_context_from_dxgi_color_space : Proc(ID2D1DeviceContext5*, DXGI_COLOR_SPACE_TYPE, ID2D1ColorContext1*, HRESULT)
    create_color_context_from_simple_color_profile : Proc(ID2D1DeviceContext5*, D2D1_SIMPLE_COLOR_PROFILE*, ID2D1ColorContext1*, HRESULT)
  end

  ID2D1DeviceContext5_GUID = LibC::GUID.new("7836d248-68cc-4df6-b9e8-de991bf62eb7")
  CLSID_ID2D1DeviceContext5 = "7836d248-68cc-4df6-b9e8-de991bf62eb7"
  struct ID2D1DeviceContext5
    lpVtbl : ID2D1DeviceContext5VTbl*
  end

  struct ID2D1Device5VTbl
    query_interface : Proc(ID2D1Device5*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Device5*, UInt32)
    release : Proc(ID2D1Device5*, UInt32)
    get_factory : Proc(ID2D1Device5*, ID2D1Factory*, Void)
    create_device_context : Proc(ID2D1Device5*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext*, HRESULT)
    create_print_control : Proc(ID2D1Device5*, IWICImagingFactory, IPrintDocumentPackageTarget, D2D1_PRINT_CONTROL_PROPERTIES*, ID2D1PrintControl*, HRESULT)
    set_maximum_texture_memory : Proc(ID2D1Device5*, UInt64, Void)
    get_maximum_texture_memory : Proc(ID2D1Device5*, UInt64)
    clear_resources : Proc(ID2D1Device5*, UInt32, Void)
    get_rendering_priority : Proc(ID2D1Device5*, D2D1_RENDERING_PRIORITY)
    set_rendering_priority : Proc(ID2D1Device5*, D2D1_RENDERING_PRIORITY, Void)
    create_device_context2 : Proc(ID2D1Device5*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext1*, HRESULT)
    create_device_context3 : Proc(ID2D1Device5*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext2*, HRESULT)
    flush_device_contexts : Proc(ID2D1Device5*, ID2D1Bitmap, Void)
    get_dxgi_device : Proc(ID2D1Device5*, IDXGIDevice*, HRESULT)
    create_device_context4 : Proc(ID2D1Device5*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext3*, HRESULT)
    create_device_context5 : Proc(ID2D1Device5*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext4*, HRESULT)
    set_maximum_color_glyph_cache_memory : Proc(ID2D1Device5*, UInt64, Void)
    get_maximum_color_glyph_cache_memory : Proc(ID2D1Device5*, UInt64)
    create_device_context6 : Proc(ID2D1Device5*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext5*, HRESULT)
  end

  ID2D1Device5_GUID = LibC::GUID.new("d55ba0a4-6405-4694-aef5-08ee1a4358b4")
  CLSID_ID2D1Device5 = "d55ba0a4-6405-4694-aef5-08ee1a4358b4"
  struct ID2D1Device5
    lpVtbl : ID2D1Device5VTbl*
  end

  struct ID2D1Factory6VTbl
    query_interface : Proc(ID2D1Factory6*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Factory6*, UInt32)
    release : Proc(ID2D1Factory6*, UInt32)
    reload_system_metrics : Proc(ID2D1Factory6*, HRESULT)
    get_desktop_dpi : Proc(ID2D1Factory6*, Float32*, Float32*, Void)
    create_rectangle_geometry : Proc(ID2D1Factory6*, D2D_RECT_F*, ID2D1RectangleGeometry*, HRESULT)
    create_rounded_rectangle_geometry : Proc(ID2D1Factory6*, D2D1_ROUNDED_RECT*, ID2D1RoundedRectangleGeometry*, HRESULT)
    create_ellipse_geometry : Proc(ID2D1Factory6*, D2D1_ELLIPSE*, ID2D1EllipseGeometry*, HRESULT)
    create_geometry_group : Proc(ID2D1Factory6*, D2D1_FILL_MODE, ID2D1Geometry*, UInt32, ID2D1GeometryGroup*, HRESULT)
    create_transformed_geometry : Proc(ID2D1Factory6*, ID2D1Geometry, D2D_MATRIX_3X2_F*, ID2D1TransformedGeometry*, HRESULT)
    create_path_geometry : Proc(ID2D1Factory6*, ID2D1PathGeometry*, HRESULT)
    create_stroke_style : Proc(ID2D1Factory6*, D2D1_STROKE_STYLE_PROPERTIES*, Float32*, UInt32, ID2D1StrokeStyle*, HRESULT)
    create_drawing_state_block : Proc(ID2D1Factory6*, D2D1_DRAWING_STATE_DESCRIPTION*, IDWriteRenderingParams, ID2D1DrawingStateBlock*, HRESULT)
    create_wic_bitmap_render_target : Proc(ID2D1Factory6*, IWICBitmap, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_hwnd_render_target : Proc(ID2D1Factory6*, D2D1_RENDER_TARGET_PROPERTIES*, D2D1_HWND_RENDER_TARGET_PROPERTIES*, ID2D1HwndRenderTarget*, HRESULT)
    create_dxgi_surface_render_target : Proc(ID2D1Factory6*, IDXGISurface, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_dc_render_target : Proc(ID2D1Factory6*, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1DCRenderTarget*, HRESULT)
    create_device : Proc(ID2D1Factory6*, IDXGIDevice, ID2D1Device*, HRESULT)
    create_stroke_style2 : Proc(ID2D1Factory6*, D2D1_STROKE_STYLE_PROPERTIES1*, Float32*, UInt32, ID2D1StrokeStyle1*, HRESULT)
    create_path_geometry2 : Proc(ID2D1Factory6*, ID2D1PathGeometry1*, HRESULT)
    create_drawing_state_block2 : Proc(ID2D1Factory6*, D2D1_DRAWING_STATE_DESCRIPTION1*, IDWriteRenderingParams, ID2D1DrawingStateBlock1*, HRESULT)
    create_gdi_metafile : Proc(ID2D1Factory6*, IStream, ID2D1GdiMetafile*, HRESULT)
    register_effect_from_stream : Proc(ID2D1Factory6*, Guid*, IStream, D2D1_PROPERTY_BINDING*, UInt32, PD2D1_EFFECT_FACTORY, HRESULT)
    register_effect_from_string : Proc(ID2D1Factory6*, Guid*, LibC::LPWSTR, D2D1_PROPERTY_BINDING*, UInt32, PD2D1_EFFECT_FACTORY, HRESULT)
    unregister_effect : Proc(ID2D1Factory6*, Guid*, HRESULT)
    get_registered_effects : Proc(ID2D1Factory6*, Guid*, UInt32, UInt32*, UInt32*, HRESULT)
    get_effect_properties : Proc(ID2D1Factory6*, Guid*, ID2D1Properties*, HRESULT)
    create_device2 : Proc(ID2D1Factory6*, IDXGIDevice, ID2D1Device1*, HRESULT)
    create_device3 : Proc(ID2D1Factory6*, IDXGIDevice, ID2D1Device2*, HRESULT)
    create_device4 : Proc(ID2D1Factory6*, IDXGIDevice, ID2D1Device3*, HRESULT)
    create_device5 : Proc(ID2D1Factory6*, IDXGIDevice, ID2D1Device4*, HRESULT)
    create_device6 : Proc(ID2D1Factory6*, IDXGIDevice, ID2D1Device5*, HRESULT)
  end

  ID2D1Factory6_GUID = LibC::GUID.new("f9976f46-f642-44c1-97ca-da32ea2a2635")
  CLSID_ID2D1Factory6 = "f9976f46-f642-44c1-97ca-da32ea2a2635"
  struct ID2D1Factory6
    lpVtbl : ID2D1Factory6VTbl*
  end

  struct ID2D1CommandSink5VTbl
    query_interface : Proc(ID2D1CommandSink5*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1CommandSink5*, UInt32)
    release : Proc(ID2D1CommandSink5*, UInt32)
    begin_draw : Proc(ID2D1CommandSink5*, HRESULT)
    end_draw : Proc(ID2D1CommandSink5*, HRESULT)
    set_antialias_mode : Proc(ID2D1CommandSink5*, D2D1_ANTIALIAS_MODE, HRESULT)
    set_tags : Proc(ID2D1CommandSink5*, UInt64, UInt64, HRESULT)
    set_text_antialias_mode : Proc(ID2D1CommandSink5*, D2D1_TEXT_ANTIALIAS_MODE, HRESULT)
    set_text_rendering_params : Proc(ID2D1CommandSink5*, IDWriteRenderingParams, HRESULT)
    set_transform : Proc(ID2D1CommandSink5*, D2D_MATRIX_3X2_F*, HRESULT)
    set_primitive_blend : Proc(ID2D1CommandSink5*, D2D1_PRIMITIVE_BLEND, HRESULT)
    set_unit_mode : Proc(ID2D1CommandSink5*, D2D1_UNIT_MODE, HRESULT)
    clear : Proc(ID2D1CommandSink5*, D2D1_COLOR_F*, HRESULT)
    draw_glyph_run : Proc(ID2D1CommandSink5*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, ID2D1Brush, DWRITE_MEASURING_MODE, HRESULT)
    draw_line : Proc(ID2D1CommandSink5*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_geometry : Proc(ID2D1CommandSink5*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_rectangle : Proc(ID2D1CommandSink5*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, HRESULT)
    draw_bitmap : Proc(ID2D1CommandSink5*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_INTERPOLATION_MODE, D2D_RECT_F*, D2D_MATRIX_4X4_F*, HRESULT)
    draw_image : Proc(ID2D1CommandSink5*, ID2D1Image, D2D_POINT_2F*, D2D_RECT_F*, D2D1_INTERPOLATION_MODE, D2D1_COMPOSITE_MODE, HRESULT)
    draw_gdi_metafile : Proc(ID2D1CommandSink5*, ID2D1GdiMetafile, D2D_POINT_2F*, HRESULT)
    fill_mesh : Proc(ID2D1CommandSink5*, ID2D1Mesh, ID2D1Brush, HRESULT)
    fill_opacity_mask : Proc(ID2D1CommandSink5*, ID2D1Bitmap, ID2D1Brush, D2D_RECT_F*, D2D_RECT_F*, HRESULT)
    fill_geometry : Proc(ID2D1CommandSink5*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, HRESULT)
    fill_rectangle : Proc(ID2D1CommandSink5*, D2D_RECT_F*, ID2D1Brush, HRESULT)
    push_axis_aligned_clip : Proc(ID2D1CommandSink5*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, HRESULT)
    push_layer : Proc(ID2D1CommandSink5*, D2D1_LAYER_PARAMETERS1*, ID2D1Layer, HRESULT)
    pop_axis_aligned_clip : Proc(ID2D1CommandSink5*, HRESULT)
    pop_layer : Proc(ID2D1CommandSink5*, HRESULT)
    set_primitive_blend1 : Proc(ID2D1CommandSink5*, D2D1_PRIMITIVE_BLEND, HRESULT)
    draw_ink : Proc(ID2D1CommandSink5*, ID2D1Ink, ID2D1Brush, ID2D1InkStyle, HRESULT)
    draw_gradient_mesh : Proc(ID2D1CommandSink5*, ID2D1GradientMesh, HRESULT)
    draw_gdi_metafile2 : Proc(ID2D1CommandSink5*, ID2D1GdiMetafile, D2D_RECT_F*, D2D_RECT_F*, HRESULT)
    draw_sprite_batch : Proc(ID2D1CommandSink5*, ID2D1SpriteBatch, UInt32, UInt32, ID2D1Bitmap, D2D1_BITMAP_INTERPOLATION_MODE, D2D1_SPRITE_OPTIONS, HRESULT)
    set_primitive_blend2 : Proc(ID2D1CommandSink5*, D2D1_PRIMITIVE_BLEND, HRESULT)
    blend_image : Proc(ID2D1CommandSink5*, ID2D1Image, D2D1_BLEND_MODE, D2D_POINT_2F*, D2D_RECT_F*, D2D1_INTERPOLATION_MODE, HRESULT)
  end

  ID2D1CommandSink5_GUID = LibC::GUID.new("7047dd26-b1e7-44a7-959a-8349e2144fa8")
  CLSID_ID2D1CommandSink5 = "7047dd26-b1e7-44a7-959a-8349e2144fa8"
  struct ID2D1CommandSink5
    lpVtbl : ID2D1CommandSink5VTbl*
  end

  struct ID2D1DeviceContext6VTbl
    query_interface : Proc(ID2D1DeviceContext6*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1DeviceContext6*, UInt32)
    release : Proc(ID2D1DeviceContext6*, UInt32)
    get_factory : Proc(ID2D1DeviceContext6*, ID2D1Factory*, Void)
    create_bitmap : Proc(ID2D1DeviceContext6*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_from_wic_bitmap : Proc(ID2D1DeviceContext6*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_shared_bitmap : Proc(ID2D1DeviceContext6*, Guid*, Void*, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap*, HRESULT)
    create_bitmap_brush : Proc(ID2D1DeviceContext6*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush*, HRESULT)
    create_solid_color_brush : Proc(ID2D1DeviceContext6*, D2D1_COLOR_F*, D2D1_BRUSH_PROPERTIES*, ID2D1SolidColorBrush*, HRESULT)
    create_gradient_stop_collection : Proc(ID2D1DeviceContext6*, D2D1_GRADIENT_STOP*, UInt32, D2D1_GAMMA, D2D1_EXTEND_MODE, ID2D1GradientStopCollection*, HRESULT)
    create_linear_gradient_brush : Proc(ID2D1DeviceContext6*, D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1LinearGradientBrush*, HRESULT)
    create_radial_gradient_brush : Proc(ID2D1DeviceContext6*, D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection, ID2D1RadialGradientBrush*, HRESULT)
    create_compatible_render_target : Proc(ID2D1DeviceContext6*, D2D_SIZE_F*, D2D_SIZE_U*, D2D1_PIXEL_FORMAT*, D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS, ID2D1BitmapRenderTarget*, HRESULT)
    create_layer : Proc(ID2D1DeviceContext6*, D2D_SIZE_F*, ID2D1Layer*, HRESULT)
    create_mesh : Proc(ID2D1DeviceContext6*, ID2D1Mesh*, HRESULT)
    draw_line : Proc(ID2D1DeviceContext6*, D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    draw_rectangle : Proc(ID2D1DeviceContext6*, D2D_RECT_F*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rectangle : Proc(ID2D1DeviceContext6*, D2D_RECT_F*, ID2D1Brush, Void)
    draw_rounded_rectangle : Proc(ID2D1DeviceContext6*, D2D1_ROUNDED_RECT*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_rounded_rectangle : Proc(ID2D1DeviceContext6*, D2D1_ROUNDED_RECT*, ID2D1Brush, Void)
    draw_ellipse : Proc(ID2D1DeviceContext6*, D2D1_ELLIPSE*, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_ellipse : Proc(ID2D1DeviceContext6*, D2D1_ELLIPSE*, ID2D1Brush, Void)
    draw_geometry : Proc(ID2D1DeviceContext6*, ID2D1Geometry, ID2D1Brush, Float32, ID2D1StrokeStyle, Void)
    fill_geometry : Proc(ID2D1DeviceContext6*, ID2D1Geometry, ID2D1Brush, ID2D1Brush, Void)
    fill_mesh : Proc(ID2D1DeviceContext6*, ID2D1Mesh, ID2D1Brush, Void)
    fill_opacity_mask : Proc(ID2D1DeviceContext6*, ID2D1Bitmap, ID2D1Brush, D2D1_OPACITY_MASK_CONTENT, D2D_RECT_F*, D2D_RECT_F*, Void)
    draw_bitmap : Proc(ID2D1DeviceContext6*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_BITMAP_INTERPOLATION_MODE, D2D_RECT_F*, Void)
    draw_text : Proc(ID2D1DeviceContext6*, Char*, UInt32, IDWriteTextFormat, D2D_RECT_F*, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE, Void)
    draw_text_layout : Proc(ID2D1DeviceContext6*, D2D_POINT_2F, IDWriteTextLayout, ID2D1Brush, D2D1_DRAW_TEXT_OPTIONS, Void)
    draw_glyph_run : Proc(ID2D1DeviceContext6*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    set_transform : Proc(ID2D1DeviceContext6*, D2D_MATRIX_3X2_F*, Void)
    get_transform : Proc(ID2D1DeviceContext6*, D2D_MATRIX_3X2_F*, Void)
    set_antialias_mode : Proc(ID2D1DeviceContext6*, D2D1_ANTIALIAS_MODE, Void)
    get_antialias_mode : Proc(ID2D1DeviceContext6*, D2D1_ANTIALIAS_MODE)
    set_text_antialias_mode : Proc(ID2D1DeviceContext6*, D2D1_TEXT_ANTIALIAS_MODE, Void)
    get_text_antialias_mode : Proc(ID2D1DeviceContext6*, D2D1_TEXT_ANTIALIAS_MODE)
    set_text_rendering_params : Proc(ID2D1DeviceContext6*, IDWriteRenderingParams, Void)
    get_text_rendering_params : Proc(ID2D1DeviceContext6*, IDWriteRenderingParams*, Void)
    set_tags : Proc(ID2D1DeviceContext6*, UInt64, UInt64, Void)
    get_tags : Proc(ID2D1DeviceContext6*, UInt64*, UInt64*, Void)
    push_layer : Proc(ID2D1DeviceContext6*, D2D1_LAYER_PARAMETERS*, ID2D1Layer, Void)
    pop_layer : Proc(ID2D1DeviceContext6*, Void)
    flush : Proc(ID2D1DeviceContext6*, UInt64*, UInt64*, HRESULT)
    save_drawing_state : Proc(ID2D1DeviceContext6*, ID2D1DrawingStateBlock, Void)
    restore_drawing_state : Proc(ID2D1DeviceContext6*, ID2D1DrawingStateBlock, Void)
    push_axis_aligned_clip : Proc(ID2D1DeviceContext6*, D2D_RECT_F*, D2D1_ANTIALIAS_MODE, Void)
    pop_axis_aligned_clip : Proc(ID2D1DeviceContext6*, Void)
    clear : Proc(ID2D1DeviceContext6*, D2D1_COLOR_F*, Void)
    begin_draw : Proc(ID2D1DeviceContext6*, Void)
    end_draw : Proc(ID2D1DeviceContext6*, UInt64*, UInt64*, HRESULT)
    get_pixel_format : Proc(ID2D1DeviceContext6*, D2D1_PIXEL_FORMAT)
    set_dpi : Proc(ID2D1DeviceContext6*, Float32, Float32, Void)
    get_dpi : Proc(ID2D1DeviceContext6*, Float32*, Float32*, Void)
    get_size : Proc(ID2D1DeviceContext6*, D2D_SIZE_F)
    get_pixel_size : Proc(ID2D1DeviceContext6*, D2D_SIZE_U)
    get_maximum_bitmap_size : Proc(ID2D1DeviceContext6*, UInt32)
    is_supported : Proc(ID2D1DeviceContext6*, D2D1_RENDER_TARGET_PROPERTIES*, LibC::BOOL)
    create_bitmap2 : Proc(ID2D1DeviceContext6*, D2D_SIZE_U, Void*, UInt32, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_bitmap_from_wic_bitmap2 : Proc(ID2D1DeviceContext6*, IWICBitmapSource, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_color_context : Proc(ID2D1DeviceContext6*, D2D1_COLOR_SPACE, UInt8*, UInt32, ID2D1ColorContext*, HRESULT)
    create_color_context_from_filename : Proc(ID2D1DeviceContext6*, LibC::LPWSTR, ID2D1ColorContext*, HRESULT)
    create_color_context_from_wic_color_context : Proc(ID2D1DeviceContext6*, IWICColorContext, ID2D1ColorContext*, HRESULT)
    create_bitmap_from_dxgi_surface : Proc(ID2D1DeviceContext6*, IDXGISurface, D2D1_BITMAP_PROPERTIES1*, ID2D1Bitmap1*, HRESULT)
    create_effect : Proc(ID2D1DeviceContext6*, Guid*, ID2D1Effect*, HRESULT)
    create_gradient_stop_collection2 : Proc(ID2D1DeviceContext6*, D2D1_GRADIENT_STOP*, UInt32, D2D1_COLOR_SPACE, D2D1_COLOR_SPACE, D2D1_BUFFER_PRECISION, D2D1_EXTEND_MODE, D2D1_COLOR_INTERPOLATION_MODE, ID2D1GradientStopCollection1*, HRESULT)
    create_image_brush : Proc(ID2D1DeviceContext6*, ID2D1Image, D2D1_IMAGE_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1ImageBrush*, HRESULT)
    create_bitmap_brush2 : Proc(ID2D1DeviceContext6*, ID2D1Bitmap, D2D1_BITMAP_BRUSH_PROPERTIES1*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush1*, HRESULT)
    create_command_list : Proc(ID2D1DeviceContext6*, ID2D1CommandList*, HRESULT)
    is_dxgi_format_supported : Proc(ID2D1DeviceContext6*, DXGI_FORMAT, LibC::BOOL)
    is_buffer_precision_supported : Proc(ID2D1DeviceContext6*, D2D1_BUFFER_PRECISION, LibC::BOOL)
    get_image_local_bounds : Proc(ID2D1DeviceContext6*, ID2D1Image, D2D_RECT_F*, HRESULT)
    get_image_world_bounds : Proc(ID2D1DeviceContext6*, ID2D1Image, D2D_RECT_F*, HRESULT)
    get_glyph_run_world_bounds : Proc(ID2D1DeviceContext6*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_MEASURING_MODE, D2D_RECT_F*, HRESULT)
    get_device : Proc(ID2D1DeviceContext6*, ID2D1Device*, Void)
    set_target : Proc(ID2D1DeviceContext6*, ID2D1Image, Void)
    get_target : Proc(ID2D1DeviceContext6*, ID2D1Image*, Void)
    set_rendering_controls : Proc(ID2D1DeviceContext6*, D2D1_RENDERING_CONTROLS*, Void)
    get_rendering_controls : Proc(ID2D1DeviceContext6*, D2D1_RENDERING_CONTROLS*, Void)
    set_primitive_blend : Proc(ID2D1DeviceContext6*, D2D1_PRIMITIVE_BLEND, Void)
    get_primitive_blend : Proc(ID2D1DeviceContext6*, D2D1_PRIMITIVE_BLEND)
    set_unit_mode : Proc(ID2D1DeviceContext6*, D2D1_UNIT_MODE, Void)
    get_unit_mode : Proc(ID2D1DeviceContext6*, D2D1_UNIT_MODE)
    draw_glyph_run2 : Proc(ID2D1DeviceContext6*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, ID2D1Brush, DWRITE_MEASURING_MODE, Void)
    draw_image : Proc(ID2D1DeviceContext6*, ID2D1Image, D2D_POINT_2F*, D2D_RECT_F*, D2D1_INTERPOLATION_MODE, D2D1_COMPOSITE_MODE, Void)
    draw_gdi_metafile : Proc(ID2D1DeviceContext6*, ID2D1GdiMetafile, D2D_POINT_2F*, Void)
    draw_bitmap2 : Proc(ID2D1DeviceContext6*, ID2D1Bitmap, D2D_RECT_F*, Float32, D2D1_INTERPOLATION_MODE, D2D_RECT_F*, D2D_MATRIX_4X4_F*, Void)
    push_layer2 : Proc(ID2D1DeviceContext6*, D2D1_LAYER_PARAMETERS1*, ID2D1Layer, Void)
    invalidate_effect_input_rectangle : Proc(ID2D1DeviceContext6*, ID2D1Effect, UInt32, D2D_RECT_F*, HRESULT)
    get_effect_invalid_rectangle_count : Proc(ID2D1DeviceContext6*, ID2D1Effect, UInt32*, HRESULT)
    get_effect_invalid_rectangles : Proc(ID2D1DeviceContext6*, ID2D1Effect, D2D_RECT_F*, UInt32, HRESULT)
    get_effect_required_input_rectangles : Proc(ID2D1DeviceContext6*, ID2D1Effect, D2D_RECT_F*, D2D1_EFFECT_INPUT_DESCRIPTION*, D2D_RECT_F*, UInt32, HRESULT)
    fill_opacity_mask2 : Proc(ID2D1DeviceContext6*, ID2D1Bitmap, ID2D1Brush, D2D_RECT_F*, D2D_RECT_F*, Void)
    create_filled_geometry_realization : Proc(ID2D1DeviceContext6*, ID2D1Geometry, Float32, ID2D1GeometryRealization*, HRESULT)
    create_stroked_geometry_realization : Proc(ID2D1DeviceContext6*, ID2D1Geometry, Float32, Float32, ID2D1StrokeStyle, ID2D1GeometryRealization*, HRESULT)
    draw_geometry_realization : Proc(ID2D1DeviceContext6*, ID2D1GeometryRealization, ID2D1Brush, Void)
    create_ink : Proc(ID2D1DeviceContext6*, D2D1_INK_POINT*, ID2D1Ink*, HRESULT)
    create_ink_style : Proc(ID2D1DeviceContext6*, D2D1_INK_STYLE_PROPERTIES*, ID2D1InkStyle*, HRESULT)
    create_gradient_mesh : Proc(ID2D1DeviceContext6*, D2D1_GRADIENT_MESH_PATCH*, UInt32, ID2D1GradientMesh*, HRESULT)
    create_image_source_from_wic : Proc(ID2D1DeviceContext6*, IWICBitmapSource, D2D1_IMAGE_SOURCE_LOADING_OPTIONS, D2D1_ALPHA_MODE, ID2D1ImageSourceFromWic*, HRESULT)
    create_lookup_table3_d : Proc(ID2D1DeviceContext6*, D2D1_BUFFER_PRECISION, UInt32*, UInt8*, UInt32, UInt32*, ID2D1LookupTable3D*, HRESULT)
    create_image_source_from_dxgi : Proc(ID2D1DeviceContext6*, IDXGISurface*, UInt32, DXGI_COLOR_SPACE_TYPE, D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS, ID2D1ImageSource*, HRESULT)
    get_gradient_mesh_world_bounds : Proc(ID2D1DeviceContext6*, ID2D1GradientMesh, D2D_RECT_F*, HRESULT)
    draw_ink : Proc(ID2D1DeviceContext6*, ID2D1Ink, ID2D1Brush, ID2D1InkStyle, Void)
    draw_gradient_mesh : Proc(ID2D1DeviceContext6*, ID2D1GradientMesh, Void)
    draw_gdi_metafile2 : Proc(ID2D1DeviceContext6*, ID2D1GdiMetafile, D2D_RECT_F*, D2D_RECT_F*, Void)
    create_transformed_image_source : Proc(ID2D1DeviceContext6*, ID2D1ImageSource, D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES*, ID2D1TransformedImageSource*, HRESULT)
    create_sprite_batch : Proc(ID2D1DeviceContext6*, ID2D1SpriteBatch*, HRESULT)
    draw_sprite_batch : Proc(ID2D1DeviceContext6*, ID2D1SpriteBatch, UInt32, UInt32, ID2D1Bitmap, D2D1_BITMAP_INTERPOLATION_MODE, D2D1_SPRITE_OPTIONS, Void)
    create_svg_glyph_style : Proc(ID2D1DeviceContext6*, ID2D1SvgGlyphStyle*, HRESULT)
    draw_text2 : Proc(ID2D1DeviceContext6*, Char*, UInt32, IDWriteTextFormat, D2D_RECT_F*, ID2D1Brush, ID2D1SvgGlyphStyle, UInt32, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE, Void)
    draw_text_layout2 : Proc(ID2D1DeviceContext6*, D2D_POINT_2F, IDWriteTextLayout, ID2D1Brush, ID2D1SvgGlyphStyle, UInt32, D2D1_DRAW_TEXT_OPTIONS, Void)
    draw_color_bitmap_glyph_run : Proc(ID2D1DeviceContext6*, DWRITE_GLYPH_IMAGE_FORMATS, D2D_POINT_2F, DWRITE_GLYPH_RUN*, DWRITE_MEASURING_MODE, D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION, Void)
    draw_svg_glyph_run : Proc(ID2D1DeviceContext6*, D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush, ID2D1SvgGlyphStyle, UInt32, DWRITE_MEASURING_MODE, Void)
    get_color_bitmap_glyph_image : Proc(ID2D1DeviceContext6*, DWRITE_GLYPH_IMAGE_FORMATS, D2D_POINT_2F, IDWriteFontFace, Float32, UInt16, LibC::BOOL, D2D_MATRIX_3X2_F*, Float32, Float32, D2D_MATRIX_3X2_F*, ID2D1Image*, HRESULT)
    get_svg_glyph_image : Proc(ID2D1DeviceContext6*, D2D_POINT_2F, IDWriteFontFace, Float32, UInt16, LibC::BOOL, D2D_MATRIX_3X2_F*, ID2D1Brush, ID2D1SvgGlyphStyle, UInt32, D2D_MATRIX_3X2_F*, ID2D1CommandList*, HRESULT)
    create_svg_document : Proc(ID2D1DeviceContext6*, IStream, D2D_SIZE_F, ID2D1SvgDocument*, HRESULT)
    draw_svg_document : Proc(ID2D1DeviceContext6*, ID2D1SvgDocument, Void)
    create_color_context_from_dxgi_color_space : Proc(ID2D1DeviceContext6*, DXGI_COLOR_SPACE_TYPE, ID2D1ColorContext1*, HRESULT)
    create_color_context_from_simple_color_profile : Proc(ID2D1DeviceContext6*, D2D1_SIMPLE_COLOR_PROFILE*, ID2D1ColorContext1*, HRESULT)
    blend_image : Proc(ID2D1DeviceContext6*, ID2D1Image, D2D1_BLEND_MODE, D2D_POINT_2F*, D2D_RECT_F*, D2D1_INTERPOLATION_MODE, Void)
  end

  ID2D1DeviceContext6_GUID = LibC::GUID.new("985f7e37-4ed0-4a19-98a3-15b0edfde306")
  CLSID_ID2D1DeviceContext6 = "985f7e37-4ed0-4a19-98a3-15b0edfde306"
  struct ID2D1DeviceContext6
    lpVtbl : ID2D1DeviceContext6VTbl*
  end

  struct ID2D1Device6VTbl
    query_interface : Proc(ID2D1Device6*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Device6*, UInt32)
    release : Proc(ID2D1Device6*, UInt32)
    get_factory : Proc(ID2D1Device6*, ID2D1Factory*, Void)
    create_device_context : Proc(ID2D1Device6*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext*, HRESULT)
    create_print_control : Proc(ID2D1Device6*, IWICImagingFactory, IPrintDocumentPackageTarget, D2D1_PRINT_CONTROL_PROPERTIES*, ID2D1PrintControl*, HRESULT)
    set_maximum_texture_memory : Proc(ID2D1Device6*, UInt64, Void)
    get_maximum_texture_memory : Proc(ID2D1Device6*, UInt64)
    clear_resources : Proc(ID2D1Device6*, UInt32, Void)
    get_rendering_priority : Proc(ID2D1Device6*, D2D1_RENDERING_PRIORITY)
    set_rendering_priority : Proc(ID2D1Device6*, D2D1_RENDERING_PRIORITY, Void)
    create_device_context2 : Proc(ID2D1Device6*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext1*, HRESULT)
    create_device_context3 : Proc(ID2D1Device6*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext2*, HRESULT)
    flush_device_contexts : Proc(ID2D1Device6*, ID2D1Bitmap, Void)
    get_dxgi_device : Proc(ID2D1Device6*, IDXGIDevice*, HRESULT)
    create_device_context4 : Proc(ID2D1Device6*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext3*, HRESULT)
    create_device_context5 : Proc(ID2D1Device6*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext4*, HRESULT)
    set_maximum_color_glyph_cache_memory : Proc(ID2D1Device6*, UInt64, Void)
    get_maximum_color_glyph_cache_memory : Proc(ID2D1Device6*, UInt64)
    create_device_context6 : Proc(ID2D1Device6*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext5*, HRESULT)
    create_device_context7 : Proc(ID2D1Device6*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext6*, HRESULT)
  end

  ID2D1Device6_GUID = LibC::GUID.new("7bfef914-2d75-4bad-be87-e18ddb077b6d")
  CLSID_ID2D1Device6 = "7bfef914-2d75-4bad-be87-e18ddb077b6d"
  struct ID2D1Device6
    lpVtbl : ID2D1Device6VTbl*
  end

  struct ID2D1Factory7VTbl
    query_interface : Proc(ID2D1Factory7*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1Factory7*, UInt32)
    release : Proc(ID2D1Factory7*, UInt32)
    reload_system_metrics : Proc(ID2D1Factory7*, HRESULT)
    get_desktop_dpi : Proc(ID2D1Factory7*, Float32*, Float32*, Void)
    create_rectangle_geometry : Proc(ID2D1Factory7*, D2D_RECT_F*, ID2D1RectangleGeometry*, HRESULT)
    create_rounded_rectangle_geometry : Proc(ID2D1Factory7*, D2D1_ROUNDED_RECT*, ID2D1RoundedRectangleGeometry*, HRESULT)
    create_ellipse_geometry : Proc(ID2D1Factory7*, D2D1_ELLIPSE*, ID2D1EllipseGeometry*, HRESULT)
    create_geometry_group : Proc(ID2D1Factory7*, D2D1_FILL_MODE, ID2D1Geometry*, UInt32, ID2D1GeometryGroup*, HRESULT)
    create_transformed_geometry : Proc(ID2D1Factory7*, ID2D1Geometry, D2D_MATRIX_3X2_F*, ID2D1TransformedGeometry*, HRESULT)
    create_path_geometry : Proc(ID2D1Factory7*, ID2D1PathGeometry*, HRESULT)
    create_stroke_style : Proc(ID2D1Factory7*, D2D1_STROKE_STYLE_PROPERTIES*, Float32*, UInt32, ID2D1StrokeStyle*, HRESULT)
    create_drawing_state_block : Proc(ID2D1Factory7*, D2D1_DRAWING_STATE_DESCRIPTION*, IDWriteRenderingParams, ID2D1DrawingStateBlock*, HRESULT)
    create_wic_bitmap_render_target : Proc(ID2D1Factory7*, IWICBitmap, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_hwnd_render_target : Proc(ID2D1Factory7*, D2D1_RENDER_TARGET_PROPERTIES*, D2D1_HWND_RENDER_TARGET_PROPERTIES*, ID2D1HwndRenderTarget*, HRESULT)
    create_dxgi_surface_render_target : Proc(ID2D1Factory7*, IDXGISurface, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget*, HRESULT)
    create_dc_render_target : Proc(ID2D1Factory7*, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1DCRenderTarget*, HRESULT)
    create_device : Proc(ID2D1Factory7*, IDXGIDevice, ID2D1Device*, HRESULT)
    create_stroke_style2 : Proc(ID2D1Factory7*, D2D1_STROKE_STYLE_PROPERTIES1*, Float32*, UInt32, ID2D1StrokeStyle1*, HRESULT)
    create_path_geometry2 : Proc(ID2D1Factory7*, ID2D1PathGeometry1*, HRESULT)
    create_drawing_state_block2 : Proc(ID2D1Factory7*, D2D1_DRAWING_STATE_DESCRIPTION1*, IDWriteRenderingParams, ID2D1DrawingStateBlock1*, HRESULT)
    create_gdi_metafile : Proc(ID2D1Factory7*, IStream, ID2D1GdiMetafile*, HRESULT)
    register_effect_from_stream : Proc(ID2D1Factory7*, Guid*, IStream, D2D1_PROPERTY_BINDING*, UInt32, PD2D1_EFFECT_FACTORY, HRESULT)
    register_effect_from_string : Proc(ID2D1Factory7*, Guid*, LibC::LPWSTR, D2D1_PROPERTY_BINDING*, UInt32, PD2D1_EFFECT_FACTORY, HRESULT)
    unregister_effect : Proc(ID2D1Factory7*, Guid*, HRESULT)
    get_registered_effects : Proc(ID2D1Factory7*, Guid*, UInt32, UInt32*, UInt32*, HRESULT)
    get_effect_properties : Proc(ID2D1Factory7*, Guid*, ID2D1Properties*, HRESULT)
    create_device2 : Proc(ID2D1Factory7*, IDXGIDevice, ID2D1Device1*, HRESULT)
    create_device3 : Proc(ID2D1Factory7*, IDXGIDevice, ID2D1Device2*, HRESULT)
    create_device4 : Proc(ID2D1Factory7*, IDXGIDevice, ID2D1Device3*, HRESULT)
    create_device5 : Proc(ID2D1Factory7*, IDXGIDevice, ID2D1Device4*, HRESULT)
    create_device6 : Proc(ID2D1Factory7*, IDXGIDevice, ID2D1Device5*, HRESULT)
    create_device7 : Proc(ID2D1Factory7*, IDXGIDevice, ID2D1Device6*, HRESULT)
  end

  ID2D1Factory7_GUID = LibC::GUID.new("bdc2bdd3-b96c-4de6-bdf7-99d4745454de")
  CLSID_ID2D1Factory7 = "bdc2bdd3-b96c-4de6-bdf7-99d4745454de"
  struct ID2D1Factory7
    lpVtbl : ID2D1Factory7VTbl*
  end

  struct ID2D1EffectContext1VTbl
    query_interface : Proc(ID2D1EffectContext1*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1EffectContext1*, UInt32)
    release : Proc(ID2D1EffectContext1*, UInt32)
    get_dpi : Proc(ID2D1EffectContext1*, Float32*, Float32*, Void)
    create_effect : Proc(ID2D1EffectContext1*, Guid*, ID2D1Effect*, HRESULT)
    get_maximum_supported_feature_level : Proc(ID2D1EffectContext1*, D3D_FEATURE_LEVEL*, UInt32, D3D_FEATURE_LEVEL*, HRESULT)
    create_transform_node_from_effect : Proc(ID2D1EffectContext1*, ID2D1Effect, ID2D1TransformNode*, HRESULT)
    create_blend_transform : Proc(ID2D1EffectContext1*, UInt32, D2D1_BLEND_DESCRIPTION*, ID2D1BlendTransform*, HRESULT)
    create_border_transform : Proc(ID2D1EffectContext1*, D2D1_EXTEND_MODE, D2D1_EXTEND_MODE, ID2D1BorderTransform*, HRESULT)
    create_offset_transform : Proc(ID2D1EffectContext1*, POINT, ID2D1OffsetTransform*, HRESULT)
    create_bounds_adjustment_transform : Proc(ID2D1EffectContext1*, RECT*, ID2D1BoundsAdjustmentTransform*, HRESULT)
    load_pixel_shader : Proc(ID2D1EffectContext1*, Guid*, UInt8*, UInt32, HRESULT)
    load_vertex_shader : Proc(ID2D1EffectContext1*, Guid*, UInt8*, UInt32, HRESULT)
    load_compute_shader : Proc(ID2D1EffectContext1*, Guid*, UInt8*, UInt32, HRESULT)
    is_shader_loaded : Proc(ID2D1EffectContext1*, Guid*, LibC::BOOL)
    create_resource_texture : Proc(ID2D1EffectContext1*, Guid*, D2D1_RESOURCE_TEXTURE_PROPERTIES*, UInt8*, UInt32*, UInt32, ID2D1ResourceTexture*, HRESULT)
    find_resource_texture : Proc(ID2D1EffectContext1*, Guid*, ID2D1ResourceTexture*, HRESULT)
    create_vertex_buffer : Proc(ID2D1EffectContext1*, D2D1_VERTEX_BUFFER_PROPERTIES*, Guid*, D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES*, ID2D1VertexBuffer*, HRESULT)
    find_vertex_buffer : Proc(ID2D1EffectContext1*, Guid*, ID2D1VertexBuffer*, HRESULT)
    create_color_context : Proc(ID2D1EffectContext1*, D2D1_COLOR_SPACE, UInt8*, UInt32, ID2D1ColorContext*, HRESULT)
    create_color_context_from_filename : Proc(ID2D1EffectContext1*, LibC::LPWSTR, ID2D1ColorContext*, HRESULT)
    create_color_context_from_wic_color_context : Proc(ID2D1EffectContext1*, IWICColorContext, ID2D1ColorContext*, HRESULT)
    check_feature_support : Proc(ID2D1EffectContext1*, D2D1_FEATURE, Void*, UInt32, HRESULT)
    is_buffer_precision_supported : Proc(ID2D1EffectContext1*, D2D1_BUFFER_PRECISION, LibC::BOOL)
    create_lookup_table3_d : Proc(ID2D1EffectContext1*, D2D1_BUFFER_PRECISION, UInt32*, UInt8*, UInt32, UInt32*, ID2D1LookupTable3D*, HRESULT)
  end

  ID2D1EffectContext1_GUID = LibC::GUID.new("84ab595a-fc81-4546-bacd-e8ef4d8abe7a")
  CLSID_ID2D1EffectContext1 = "84ab595a-fc81-4546-bacd-e8ef4d8abe7a"
  struct ID2D1EffectContext1
    lpVtbl : ID2D1EffectContext1VTbl*
  end

  struct ID2D1EffectContext2VTbl
    query_interface : Proc(ID2D1EffectContext2*, Guid*, Void**, HRESULT)
    add_ref : Proc(ID2D1EffectContext2*, UInt32)
    release : Proc(ID2D1EffectContext2*, UInt32)
    get_dpi : Proc(ID2D1EffectContext2*, Float32*, Float32*, Void)
    create_effect : Proc(ID2D1EffectContext2*, Guid*, ID2D1Effect*, HRESULT)
    get_maximum_supported_feature_level : Proc(ID2D1EffectContext2*, D3D_FEATURE_LEVEL*, UInt32, D3D_FEATURE_LEVEL*, HRESULT)
    create_transform_node_from_effect : Proc(ID2D1EffectContext2*, ID2D1Effect, ID2D1TransformNode*, HRESULT)
    create_blend_transform : Proc(ID2D1EffectContext2*, UInt32, D2D1_BLEND_DESCRIPTION*, ID2D1BlendTransform*, HRESULT)
    create_border_transform : Proc(ID2D1EffectContext2*, D2D1_EXTEND_MODE, D2D1_EXTEND_MODE, ID2D1BorderTransform*, HRESULT)
    create_offset_transform : Proc(ID2D1EffectContext2*, POINT, ID2D1OffsetTransform*, HRESULT)
    create_bounds_adjustment_transform : Proc(ID2D1EffectContext2*, RECT*, ID2D1BoundsAdjustmentTransform*, HRESULT)
    load_pixel_shader : Proc(ID2D1EffectContext2*, Guid*, UInt8*, UInt32, HRESULT)
    load_vertex_shader : Proc(ID2D1EffectContext2*, Guid*, UInt8*, UInt32, HRESULT)
    load_compute_shader : Proc(ID2D1EffectContext2*, Guid*, UInt8*, UInt32, HRESULT)
    is_shader_loaded : Proc(ID2D1EffectContext2*, Guid*, LibC::BOOL)
    create_resource_texture : Proc(ID2D1EffectContext2*, Guid*, D2D1_RESOURCE_TEXTURE_PROPERTIES*, UInt8*, UInt32*, UInt32, ID2D1ResourceTexture*, HRESULT)
    find_resource_texture : Proc(ID2D1EffectContext2*, Guid*, ID2D1ResourceTexture*, HRESULT)
    create_vertex_buffer : Proc(ID2D1EffectContext2*, D2D1_VERTEX_BUFFER_PROPERTIES*, Guid*, D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES*, ID2D1VertexBuffer*, HRESULT)
    find_vertex_buffer : Proc(ID2D1EffectContext2*, Guid*, ID2D1VertexBuffer*, HRESULT)
    create_color_context : Proc(ID2D1EffectContext2*, D2D1_COLOR_SPACE, UInt8*, UInt32, ID2D1ColorContext*, HRESULT)
    create_color_context_from_filename : Proc(ID2D1EffectContext2*, LibC::LPWSTR, ID2D1ColorContext*, HRESULT)
    create_color_context_from_wic_color_context : Proc(ID2D1EffectContext2*, IWICColorContext, ID2D1ColorContext*, HRESULT)
    check_feature_support : Proc(ID2D1EffectContext2*, D2D1_FEATURE, Void*, UInt32, HRESULT)
    is_buffer_precision_supported : Proc(ID2D1EffectContext2*, D2D1_BUFFER_PRECISION, LibC::BOOL)
    create_lookup_table3_d : Proc(ID2D1EffectContext2*, D2D1_BUFFER_PRECISION, UInt32*, UInt8*, UInt32, UInt32*, ID2D1LookupTable3D*, HRESULT)
    create_color_context_from_dxgi_color_space : Proc(ID2D1EffectContext2*, DXGI_COLOR_SPACE_TYPE, ID2D1ColorContext1*, HRESULT)
    create_color_context_from_simple_color_profile : Proc(ID2D1EffectContext2*, D2D1_SIMPLE_COLOR_PROFILE*, ID2D1ColorContext1*, HRESULT)
  end

  ID2D1EffectContext2_GUID = LibC::GUID.new("577ad2a0-9fc7-4dda-8b18-dab810140052")
  CLSID_ID2D1EffectContext2 = "577ad2a0-9fc7-4dda-8b18-dab810140052"
  struct ID2D1EffectContext2
    lpVtbl : ID2D1EffectContext2VTbl*
  end


  # Params # factorytype : D2D1_FACTORY_TYPE [In],riid : Guid* [In],pfactoryoptions : D2D1_FACTORY_OPTIONS* [In],ppifactory : Void** [In]
  fun D2D1CreateFactory(factorytype : D2D1_FACTORY_TYPE, riid : Guid*, pfactoryoptions : D2D1_FACTORY_OPTIONS*, ppifactory : Void**) : HRESULT

  # Params # angle : Float32 [In],center : D2D_POINT_2F [In],matrix : D2D_MATRIX_3X2_F* [In]
  fun D2D1MakeRotateMatrix(angle : Float32, center : D2D_POINT_2F, matrix : D2D_MATRIX_3X2_F*)

  # Params # anglex : Float32 [In],angley : Float32 [In],center : D2D_POINT_2F [In],matrix : D2D_MATRIX_3X2_F* [In]
  fun D2D1MakeSkewMatrix(anglex : Float32, angley : Float32, center : D2D_POINT_2F, matrix : D2D_MATRIX_3X2_F*)

  # Params # matrix : D2D_MATRIX_3X2_F* [In]
  fun D2D1IsMatrixInvertible(matrix : D2D_MATRIX_3X2_F*) : LibC::BOOL

  # Params # matrix : D2D_MATRIX_3X2_F* [In]
  fun D2D1InvertMatrix(matrix : D2D_MATRIX_3X2_F*) : LibC::BOOL

  # Params # dxgidevice : IDXGIDevice [In],creationproperties : D2D1_CREATION_PROPERTIES* [In],d2ddevice : ID2D1Device* [In]
  fun D2D1CreateDevice(dxgidevice : IDXGIDevice, creationproperties : D2D1_CREATION_PROPERTIES*, d2ddevice : ID2D1Device*) : HRESULT

  # Params # dxgisurface : IDXGISurface [In],creationproperties : D2D1_CREATION_PROPERTIES* [In],d2ddevicecontext : ID2D1DeviceContext* [In]
  fun D2D1CreateDeviceContext(dxgisurface : IDXGISurface, creationproperties : D2D1_CREATION_PROPERTIES*, d2ddevicecontext : ID2D1DeviceContext*) : HRESULT

  # Params # sourcecolorspace : D2D1_COLOR_SPACE [In],destinationcolorspace : D2D1_COLOR_SPACE [In],color : D2D1_COLOR_F* [In]
  fun D2D1ConvertColorSpace(sourcecolorspace : D2D1_COLOR_SPACE, destinationcolorspace : D2D1_COLOR_SPACE, color : D2D1_COLOR_F*) : D2D1_COLOR_F

  # Params # angle : Float32 [In],s : Float32* [In],c : Float32* [In]
  fun D2D1SinCos(angle : Float32, s : Float32*, c : Float32*)

  # Params # angle : Float32 [In]
  fun D2D1Tan(angle : Float32) : Float32

  # Params # x : Float32 [In],y : Float32 [In],z : Float32 [In]
  fun D2D1Vec3Length(x : Float32, y : Float32, z : Float32) : Float32

  # Params # matrix : D2D_MATRIX_3X2_F* [In]
  fun D2D1ComputeMaximumScaleFactor(matrix : D2D_MATRIX_3X2_F*) : Float32

  # Params # ppoint0 : D2D_POINT_2F* [In],ppoint1 : D2D_POINT_2F* [In],ppoint2 : D2D_POINT_2F* [In],ppoint3 : D2D_POINT_2F* [In],ppoint4 : D2D_POINT_2F* [In],ppoint5 : D2D_POINT_2F* [In],ppoint6 : D2D_POINT_2F* [In],ppoint7 : D2D_POINT_2F* [In],ppoint8 : D2D_POINT_2F* [In],ppoint9 : D2D_POINT_2F* [In],ppoint10 : D2D_POINT_2F* [In],ppoint11 : D2D_POINT_2F* [In],ptensorpoint11 : D2D_POINT_2F* [In],ptensorpoint12 : D2D_POINT_2F* [In],ptensorpoint21 : D2D_POINT_2F* [In],ptensorpoint22 : D2D_POINT_2F* [In]
  fun D2D1GetGradientMeshInteriorPointsFromCoonsPatch(ppoint0 : D2D_POINT_2F*, ppoint1 : D2D_POINT_2F*, ppoint2 : D2D_POINT_2F*, ppoint3 : D2D_POINT_2F*, ppoint4 : D2D_POINT_2F*, ppoint5 : D2D_POINT_2F*, ppoint6 : D2D_POINT_2F*, ppoint7 : D2D_POINT_2F*, ppoint8 : D2D_POINT_2F*, ppoint9 : D2D_POINT_2F*, ppoint10 : D2D_POINT_2F*, ppoint11 : D2D_POINT_2F*, ptensorpoint11 : D2D_POINT_2F*, ptensorpoint12 : D2D_POINT_2F*, ptensorpoint21 : D2D_POINT_2F*, ptensorpoint22 : D2D_POINT_2F*)
end
