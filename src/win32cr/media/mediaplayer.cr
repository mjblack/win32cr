require "../system/com.cr"
require "../foundation.cr"
require "../media/mediafoundation.cr"
require "../system/ole.cr"
require "../graphics/gdi.cr"
require "../ui/windowsandmessaging.cr"

{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link("delayimp")]
{% end %}
@[Link("user32")]
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/IGNORE:4199")]
{% end %}
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
{% else %}
{% end %}
lib LibWin32
  CLSID_XFeedsManager = "fe6b11c3-c72e-4061-86c6-9d163121f229"
  WMPGC_FLAGS_ALLOW_PREROLL = 1_u32
  WMPGC_FLAGS_SUPPRESS_DIALOGS = 2_u32
  WMPGC_FLAGS_IGNORE_AV_SYNC = 4_u32
  WMPGC_FLAGS_DISABLE_PLUGINS = 8_u32
  WMPGC_FLAGS_USE_CUSTOM_GRAPH = 16_u32
  WMPUE_EC_USER = 33024_u32
  WMP_MDRT_FLAGS_UNREPORTED_DELETED_ITEMS = 1_u32
  WMP_MDRT_FLAGS_UNREPORTED_ADDED_ITEMS = 2_u32
  IOCTL_WMP_METADATA_ROUND_TRIP = 827346263_u32
  IOCTL_WMP_DEVICE_CAN_SYNC = 844123479_u32
  EFFECT_CANGOFULLSCREEN = 1_u32
  EFFECT_HASPROPERTYPAGE = 2_u32
  EFFECT_VARIABLEFREQSTEP = 4_u32
  EFFECT_WINDOWEDONLY = 8_u32
  EFFECT2_FULLSCREENEXCLUSIVE = 16_u32
  SA_BUFFER_SIZE = 1024_u32
  PLUGIN_TYPE_BACKGROUND = 1_u32
  PLUGIN_TYPE_SEPARATEWINDOW = 2_u32
  PLUGIN_TYPE_DISPLAYAREA = 3_u32
  PLUGIN_TYPE_SETTINGSAREA = 4_u32
  PLUGIN_TYPE_METADATAAREA = 5_u32
  PLUGIN_FLAGS_HASPROPERTYPAGE = 2147483648_u32
  PLUGIN_FLAGS_INSTALLAUTORUN = 1073741824_u32
  PLUGIN_FLAGS_LAUNCHPROPERTYPAGE = 536870912_u32
  PLUGIN_FLAGS_ACCEPTSMEDIA = 268435456_u32
  PLUGIN_FLAGS_ACCEPTSPLAYLISTS = 134217728_u32
  PLUGIN_FLAGS_HASPRESETS = 67108864_u32
  PLUGIN_FLAGS_HIDDEN = 33554432_u32
  SUBSCRIPTION_CAP_DEVICEAVAILABLE = 16_u32
  SUBSCRIPTION_CAP_BACKGROUNDPROCESSING = 8_u32
  SUBSCRIPTION_CAP_IS_CONTENTPARTNER = 64_u32
  SUBSCRIPTION_CAP_ALTLOGIN = 128_u32
  SUBSCRIPTION_CAP_ALLOWPLAY = 1_u32
  SUBSCRIPTION_CAP_ALLOWCDBURN = 2_u32
  SUBSCRIPTION_CAP_ALLOWPDATRANSFER = 4_u32
  SUBSCRIPTION_CAP_PREPAREFORSYNC = 32_u32
  SUBSCRIPTION_V1_CAPS = 15_u32
  SUBSCRIPTION_CAP_UILESSMODE_ALLOWPLAY = 256_u32
  DISPID_FEEDS_RootFolder = 4096_u32
  DISPID_FEEDS_IsSubscribed = 4097_u32
  DISPID_FEEDS_ExistsFeed = 4098_u32
  DISPID_FEEDS_GetFeed = 4099_u32
  DISPID_FEEDS_ExistsFolder = 4100_u32
  DISPID_FEEDS_GetFolder = 4101_u32
  DISPID_FEEDS_DeleteFeed = 4102_u32
  DISPID_FEEDS_DeleteFolder = 4103_u32
  DISPID_FEEDS_GetFeedByUrl = 4104_u32
  DISPID_FEEDS_BackgroundSync = 4105_u32
  DISPID_FEEDS_BackgroundSyncStatus = 4106_u32
  DISPID_FEEDS_DefaultInterval = 4107_u32
  DISPID_FEEDS_AsyncSyncAll = 4108_u32
  DISPID_FEEDS_Normalize = 4109_u32
  DISPID_FEEDS_ItemCountLimit = 4110_u32
  DISPID_FEEDSENUM_Count = 8192_u32
  DISPID_FEEDSENUM_Item = 8193_u32
  DISPID_FEEDFOLDER_Feeds = 12288_u32
  DISPID_FEEDFOLDER_Subfolders = 12289_u32
  DISPID_FEEDFOLDER_CreateFeed = 12290_u32
  DISPID_FEEDFOLDER_CreateSubfolder = 12291_u32
  DISPID_FEEDFOLDER_ExistsFeed = 12292_u32
  DISPID_FEEDFOLDER_GetFeed = 12293_u32
  DISPID_FEEDFOLDER_ExistsSubfolder = 12294_u32
  DISPID_FEEDFOLDER_GetSubfolder = 12295_u32
  DISPID_FEEDFOLDER_Delete = 12296_u32
  DISPID_FEEDFOLDER_Name = 12297_u32
  DISPID_FEEDFOLDER_Rename = 12298_u32
  DISPID_FEEDFOLDER_Path = 12299_u32
  DISPID_FEEDFOLDER_Move = 12300_u32
  DISPID_FEEDFOLDER_Parent = 12301_u32
  DISPID_FEEDFOLDER_IsRoot = 12302_u32
  DISPID_FEEDFOLDER_TotalUnreadItemCount = 12303_u32
  DISPID_FEEDFOLDER_TotalItemCount = 12304_u32
  DISPID_FEEDFOLDER_GetWatcher = 12305_u32
  DISPID_FEED_Xml = 16384_u32
  DISPID_FEED_Name = 16385_u32
  DISPID_FEED_Rename = 16386_u32
  DISPID_FEED_Url = 16387_u32
  DISPID_FEED_LocalId = 16388_u32
  DISPID_FEED_Path = 16389_u32
  DISPID_FEED_Move = 16390_u32
  DISPID_FEED_Parent = 16391_u32
  DISPID_FEED_LastWriteTime = 16392_u32
  DISPID_FEED_Delete = 16393_u32
  DISPID_FEED_Download = 16394_u32
  DISPID_FEED_AsyncDownload = 16395_u32
  DISPID_FEED_CancelAsyncDownload = 16396_u32
  DISPID_FEED_Interval = 16397_u32
  DISPID_FEED_SyncSetting = 16398_u32
  DISPID_FEED_LastDownloadTime = 16399_u32
  DISPID_FEED_LocalEnclosurePath = 16400_u32
  DISPID_FEED_Items = 16401_u32
  DISPID_FEED_GetItem = 16402_u32
  DISPID_FEED_Title = 16403_u32
  DISPID_FEED_Description = 16404_u32
  DISPID_FEED_Link = 16405_u32
  DISPID_FEED_Image = 16406_u32
  DISPID_FEED_LastBuildDate = 16407_u32
  DISPID_FEED_PubDate = 16408_u32
  DISPID_FEED_Ttl = 16409_u32
  DISPID_FEED_Language = 16410_u32
  DISPID_FEED_Copyright = 16411_u32
  DISPID_FEED_DownloadEnclosuresAutomatically = 16412_u32
  DISPID_FEED_DownloadStatus = 16413_u32
  DISPID_FEED_LastDownloadError = 16414_u32
  DISPID_FEED_Merge = 16415_u32
  DISPID_FEED_DownloadUrl = 16416_u32
  DISPID_FEED_IsList = 16417_u32
  DISPID_FEED_MarkAllItemsRead = 16418_u32
  DISPID_FEED_GetWatcher = 16419_u32
  DISPID_FEED_UnreadItemCount = 16420_u32
  DISPID_FEED_ItemCount = 16421_u32
  DISPID_FEED_MaxItemCount = 16422_u32
  DISPID_FEED_GetItemByEffectiveId = 16423_u32
  DISPID_FEED_LastItemDownloadTime = 16424_u32
  DISPID_FEED_Username = 16425_u32
  DISPID_FEED_Password = 16426_u32
  DISPID_FEED_SetCredentials = 16427_u32
  DISPID_FEED_ClearCredentials = 16428_u32
  DISPID_FEEDITEM_Xml = 20480_u32
  DISPID_FEEDITEM_Title = 20481_u32
  DISPID_FEEDITEM_Link = 20482_u32
  DISPID_FEEDITEM_Guid = 20483_u32
  DISPID_FEEDITEM_Description = 20484_u32
  DISPID_FEEDITEM_PubDate = 20485_u32
  DISPID_FEEDITEM_Comments = 20486_u32
  DISPID_FEEDITEM_Author = 20487_u32
  DISPID_FEEDITEM_Enclosure = 20488_u32
  DISPID_FEEDITEM_IsRead = 20489_u32
  DISPID_FEEDITEM_LocalId = 20490_u32
  DISPID_FEEDITEM_Parent = 20491_u32
  DISPID_FEEDITEM_Delete = 20492_u32
  DISPID_FEEDITEM_DownloadUrl = 20493_u32
  DISPID_FEEDITEM_LastDownloadTime = 20494_u32
  DISPID_FEEDITEM_Modified = 20495_u32
  DISPID_FEEDITEM_EffectiveId = 20496_u32
  DISPID_FEEDENCLOSURE_Url = 24576_u32
  DISPID_FEEDENCLOSURE_Type = 24577_u32
  DISPID_FEEDENCLOSURE_Length = 24578_u32
  DISPID_FEEDENCLOSURE_AsyncDownload = 24579_u32
  DISPID_FEEDENCLOSURE_CancelAsyncDownload = 24580_u32
  DISPID_FEEDENCLOSURE_DownloadStatus = 24581_u32
  DISPID_FEEDENCLOSURE_LastDownloadError = 24582_u32
  DISPID_FEEDENCLOSURE_LocalPath = 24583_u32
  DISPID_FEEDENCLOSURE_Parent = 24584_u32
  DISPID_FEEDENCLOSURE_DownloadUrl = 24585_u32
  DISPID_FEEDENCLOSURE_DownloadMimeType = 24586_u32
  DISPID_FEEDENCLOSURE_RemoveFile = 24587_u32
  DISPID_FEEDENCLOSURE_SetFile = 24588_u32
  DISPID_FEEDFOLDEREVENTS_Error = 28672_u32
  DISPID_FEEDFOLDEREVENTS_FolderAdded = 28673_u32
  DISPID_FEEDFOLDEREVENTS_FolderDeleted = 28674_u32
  DISPID_FEEDFOLDEREVENTS_FolderRenamed = 28675_u32
  DISPID_FEEDFOLDEREVENTS_FolderMovedFrom = 28676_u32
  DISPID_FEEDFOLDEREVENTS_FolderMovedTo = 28677_u32
  DISPID_FEEDFOLDEREVENTS_FolderItemCountChanged = 28678_u32
  DISPID_FEEDFOLDEREVENTS_FeedAdded = 28679_u32
  DISPID_FEEDFOLDEREVENTS_FeedDeleted = 28680_u32
  DISPID_FEEDFOLDEREVENTS_FeedRenamed = 28681_u32
  DISPID_FEEDFOLDEREVENTS_FeedUrlChanged = 28682_u32
  DISPID_FEEDFOLDEREVENTS_FeedMovedFrom = 28683_u32
  DISPID_FEEDFOLDEREVENTS_FeedMovedTo = 28684_u32
  DISPID_FEEDFOLDEREVENTS_FeedDownloading = 28685_u32
  DISPID_FEEDFOLDEREVENTS_FeedDownloadCompleted = 28686_u32
  DISPID_FEEDFOLDEREVENTS_FeedItemCountChanged = 28687_u32
  DISPID_FEEDEVENTS_Error = 32768_u32
  DISPID_FEEDEVENTS_FeedDeleted = 32769_u32
  DISPID_FEEDEVENTS_FeedRenamed = 32770_u32
  DISPID_FEEDEVENTS_FeedUrlChanged = 32771_u32
  DISPID_FEEDEVENTS_FeedMoved = 32772_u32
  DISPID_FEEDEVENTS_FeedDownloading = 32773_u32
  DISPID_FEEDEVENTS_FeedDownloadCompleted = 32774_u32
  DISPID_FEEDEVENTS_FeedItemCountChanged = 32775_u32
  DISPID_DELTA = 50_u32
  DISPID_WMPCORE_BASE = 0_u32
  DISPID_WMPCORE_URL = 1_u32
  DISPID_WMPCORE_OPENSTATE = 2_u32
  DISPID_WMPCORE_CLOSE = 3_u32
  DISPID_WMPCORE_CONTROLS = 4_u32
  DISPID_WMPCORE_SETTINGS = 5_u32
  DISPID_WMPCORE_CURRENTMEDIA = 6_u32
  DISPID_WMPCORE_NETWORK = 7_u32
  DISPID_WMPCORE_MEDIACOLLECTION = 8_u32
  DISPID_WMPCORE_PLAYLISTCOLLECTION = 9_u32
  DISPID_WMPCORE_PLAYSTATE = 10_u32
  DISPID_WMPCORE_VERSIONINFO = 11_u32
  DISPID_WMPCORE_LAUNCHURL = 12_u32
  DISPID_WMPCORE_CURRENTPLAYLIST = 13_u32
  DISPID_WMPCORE_CDROMCOLLECTION = 14_u32
  DISPID_WMPCORE_CLOSEDCAPTION = 15_u32
  DISPID_WMPCORE_ISONLINE = 16_u32
  DISPID_WMPCORE_ERROR = 17_u32
  DISPID_WMPCORE_STATUS = 18_u32
  DISPID_WMPCORE_LAST = 18_u32
  DISPID_WMPOCX_BASE = 18_u32
  DISPID_WMPOCX_ENABLED = 19_u32
  DISPID_WMPOCX_TRANSPARENTATSTART = 20_u32
  DISPID_WMPOCX_FULLSCREEN = 21_u32
  DISPID_WMPOCX_ENABLECONTEXTMENU = 22_u32
  DISPID_WMPOCX_UIMODE = 23_u32
  DISPID_WMPOCX_LAST = 23_u32
  DISPID_WMPOCX2_BASE = 23_u32
  DISPID_WMPOCX2_STRETCHTOFIT = 24_u32
  DISPID_WMPOCX2_WINDOWLESSVIDEO = 25_u32
  DISPID_WMPOCX4_ISREMOTE = 26_u32
  DISPID_WMPOCX4_PLAYERAPPLICATION = 27_u32
  DISPID_WMPOCX4_OPENPLAYER = 28_u32
  DISPID_WMPCORE2_BASE = 39_u32
  DISPID_WMPCORE2_DVD = 40_u32
  DISPID_WMPCORE3_NEWPLAYLIST = 41_u32
  DISPID_WMPCORE3_NEWMEDIA = 42_u32
  DISPID_WMPCONTROLS_PLAY = 51_u32
  DISPID_WMPCONTROLS_STOP = 52_u32
  DISPID_WMPCONTROLS_PAUSE = 53_u32
  DISPID_WMPCONTROLS_FASTFORWARD = 54_u32
  DISPID_WMPCONTROLS_FASTREVERSE = 55_u32
  DISPID_WMPCONTROLS_CURRENTPOSITION = 56_u32
  DISPID_WMPCONTROLS_CURRENTPOSITIONSTRING = 57_u32
  DISPID_WMPCONTROLS_NEXT = 58_u32
  DISPID_WMPCONTROLS_PREVIOUS = 59_u32
  DISPID_WMPCONTROLS_CURRENTITEM = 60_u32
  DISPID_WMPCONTROLS_CURRENTMARKER = 61_u32
  DISPID_WMPCONTROLS_ISAVAILABLE = 62_u32
  DISPID_WMPCONTROLS_PLAYITEM = 63_u32
  DISPID_WMPCONTROLS2_STEP = 64_u32
  DISPID_WMPCONTROLS3_AUDIOLANGUAGECOUNT = 65_u32
  DISPID_WMPCONTROLS3_GETAUDIOLANGUAGEID = 66_u32
  DISPID_WMPCONTROLS3_GETAUDIOLANGUAGEDESC = 67_u32
  DISPID_WMPCONTROLS3_CURRENTAUDIOLANGUAGE = 68_u32
  DISPID_WMPCONTROLS3_CURRENTAUDIOLANGUAGEINDEX = 69_u32
  DISPID_WMPCONTROLS3_GETLANGUAGENAME = 70_u32
  DISPID_WMPCONTROLS3_CURRENTPOSITIONTIMECODE = 71_u32
  DISPID_WMPCONTROLSFAKE_TIMECOMPRESSION = 72_u32
  DISPID_WMPSETTINGS_AUTOSTART = 101_u32
  DISPID_WMPSETTINGS_BALANCE = 102_u32
  DISPID_WMPSETTINGS_INVOKEURLS = 103_u32
  DISPID_WMPSETTINGS_MUTE = 104_u32
  DISPID_WMPSETTINGS_PLAYCOUNT = 105_u32
  DISPID_WMPSETTINGS_RATE = 106_u32
  DISPID_WMPSETTINGS_VOLUME = 107_u32
  DISPID_WMPSETTINGS_BASEURL = 108_u32
  DISPID_WMPSETTINGS_DEFAULTFRAME = 109_u32
  DISPID_WMPSETTINGS_GETMODE = 110_u32
  DISPID_WMPSETTINGS_SETMODE = 111_u32
  DISPID_WMPSETTINGS_ENABLEERRORDIALOGS = 112_u32
  DISPID_WMPSETTINGS_ISAVAILABLE = 113_u32
  DISPID_WMPSETTINGS2_DEFAULTAUDIOLANGUAGE = 114_u32
  DISPID_WMPSETTINGS2_LIBRARYACCESSRIGHTS = 115_u32
  DISPID_WMPSETTINGS2_REQUESTLIBRARYACCESSRIGHTS = 116_u32
  DISPID_WMPPLAYLIST_COUNT = 201_u32
  DISPID_WMPPLAYLIST_NAME = 202_u32
  DISPID_WMPPLAYLIST_GETITEMINFO = 203_u32
  DISPID_WMPPLAYLIST_SETITEMINFO = 204_u32
  DISPID_WMPPLAYLIST_CLEAR = 205_u32
  DISPID_WMPPLAYLIST_INSERTITEM = 206_u32
  DISPID_WMPPLAYLIST_APPENDITEM = 207_u32
  DISPID_WMPPLAYLIST_REMOVEITEM = 208_u32
  DISPID_WMPPLAYLIST_MOVEITEM = 209_u32
  DISPID_WMPPLAYLIST_ATTRIBUTECOUNT = 210_u32
  DISPID_WMPPLAYLIST_ATTRIBUTENAME = 211_u32
  DISPID_WMPPLAYLIST_ITEM = 212_u32
  DISPID_WMPPLAYLIST_ISIDENTICAL = 213_u32
  DISPID_WMPCDROM_DRIVESPECIFIER = 251_u32
  DISPID_WMPCDROM_PLAYLIST = 252_u32
  DISPID_WMPCDROM_EJECT = 253_u32
  DISPID_WMPCDROMCOLLECTION_COUNT = 301_u32
  DISPID_WMPCDROMCOLLECTION_ITEM = 302_u32
  DISPID_WMPCDROMCOLLECTION_GETBYDRIVESPECIFIER = 303_u32
  DISPID_WMPCDROMCOLLECTION_STARTMONITORINGCDROMS = 304_u32
  DISPID_WMPCDROMCOLLECTION_STOPMONITORINGCDROMS = 305_u32
  DISPID_WMPSTRINGCOLLECTION_COUNT = 401_u32
  DISPID_WMPSTRINGCOLLECTION_ITEM = 402_u32
  DISPID_WMPMEDIACOLLECTION_ADD = 452_u32
  DISPID_WMPMEDIACOLLECTION_GETALL = 453_u32
  DISPID_WMPMEDIACOLLECTION_GETBYNAME = 454_u32
  DISPID_WMPMEDIACOLLECTION_GETBYGENRE = 455_u32
  DISPID_WMPMEDIACOLLECTION_GETBYAUTHOR = 456_u32
  DISPID_WMPMEDIACOLLECTION_GETBYALBUM = 457_u32
  DISPID_WMPMEDIACOLLECTION_GETBYATTRIBUTE = 458_u32
  DISPID_WMPMEDIACOLLECTION_REMOVE = 459_u32
  DISPID_WMPMEDIACOLLECTION_GETATTRIBUTESTRINGCOLLECTION = 461_u32
  DISPID_WMPMEDIACOLLECTION_NEWQUERY = 462_u32
  DISPID_WMPMEDIACOLLECTION_STARTMONITORING = 463_u32
  DISPID_WMPMEDIACOLLECTION_STOPMONITORING = 464_u32
  DISPID_WMPMEDIACOLLECTION_STARTCONTENTSCAN = 465_u32
  DISPID_WMPMEDIACOLLECTION_STOPCONTENTSCAN = 466_u32
  DISPID_WMPMEDIACOLLECTION_STARTSEARCH = 467_u32
  DISPID_WMPMEDIACOLLECTION_STOPSEARCH = 468_u32
  DISPID_WMPMEDIACOLLECTION_UPDATEMETADATA = 469_u32
  DISPID_WMPMEDIACOLLECTION_GETMEDIAATOM = 470_u32
  DISPID_WMPMEDIACOLLECTION_SETDELETED = 471_u32
  DISPID_WMPMEDIACOLLECTION_ISDELETED = 472_u32
  DISPID_WMPMEDIACOLLECTION_GETBYQUERYDESCRIPTION = 473_u32
  DISPID_WMPMEDIACOLLECTION_FREEZECOLLECTIONCHANGE = 474_u32
  DISPID_WMPMEDIACOLLECTION_UNFREEZECOLLECTIONCHANGE = 475_u32
  DISPID_WMPMEDIACOLLECTION_POSTCOLLECTIONCHANGE = 476_u32
  DISPID_WMPPLAYLISTARRAY_COUNT = 501_u32
  DISPID_WMPPLAYLISTARRAY_ITEM = 502_u32
  DISPID_WMPPLAYLISTCOLLECTION_NEWPLAYLIST = 552_u32
  DISPID_WMPPLAYLISTCOLLECTION_GETALL = 553_u32
  DISPID_WMPPLAYLISTCOLLECTION_GETBYNAME = 554_u32
  DISPID_WMPPLAYLISTCOLLECTION_GETBYQUERYDESCRIPTION = 555_u32
  DISPID_WMPPLAYLISTCOLLECTION_REMOVE = 556_u32
  DISPID_WMPPLAYLISTCOLLECTION_NEWQUERY = 557_u32
  DISPID_WMPPLAYLISTCOLLECTION_STARTMONITORING = 558_u32
  DISPID_WMPPLAYLISTCOLLECTION_STOPMONITORING = 559_u32
  DISPID_WMPPLAYLISTCOLLECTION_SETDELETED = 560_u32
  DISPID_WMPPLAYLISTCOLLECTION_ISDELETED = 561_u32
  DISPID_WMPPLAYLISTCOLLECTION_IMPORTPLAYLIST = 562_u32
  DISPID_WMPMEDIA_SOURCEURL = 751_u32
  DISPID_WMPMEDIA_IMAGESOURCEWIDTH = 752_u32
  DISPID_WMPMEDIA_IMAGESOURCEHEIGHT = 753_u32
  DISPID_WMPMEDIA_MARKERCOUNT = 754_u32
  DISPID_WMPMEDIA_GETMARKERTIME = 755_u32
  DISPID_WMPMEDIA_GETMARKERNAME = 756_u32
  DISPID_WMPMEDIA_DURATION = 757_u32
  DISPID_WMPMEDIA_DURATIONSTRING = 758_u32
  DISPID_WMPMEDIA_ATTRIBUTECOUNT = 759_u32
  DISPID_WMPMEDIA_GETATTRIBUTENAME = 760_u32
  DISPID_WMPMEDIA_GETITEMINFO = 761_u32
  DISPID_WMPMEDIA_SETITEMINFO = 762_u32
  DISPID_WMPMEDIA_ISIDENTICAL = 763_u32
  DISPID_WMPMEDIA_NAME = 764_u32
  DISPID_WMPMEDIA_GETITEMINFOBYATOM = 765_u32
  DISPID_WMPMEDIA_ISMEMBEROF = 766_u32
  DISPID_WMPMEDIA_ISREADONLYITEM = 767_u32
  DISPID_WMPMEDIA2_ERROR = 768_u32
  DISPID_WMPMEDIA3_GETATTRIBUTECOUNTBYTYPE = 769_u32
  DISPID_WMPMEDIA3_GETITEMINFOBYTYPE = 770_u32
  DISPID_WMPNETWORK_BANDWIDTH = 801_u32
  DISPID_WMPNETWORK_RECOVEREDPACKETS = 802_u32
  DISPID_WMPNETWORK_SOURCEPROTOCOL = 803_u32
  DISPID_WMPNETWORK_RECEIVEDPACKETS = 804_u32
  DISPID_WMPNETWORK_LOSTPACKETS = 805_u32
  DISPID_WMPNETWORK_RECEPTIONQUALITY = 806_u32
  DISPID_WMPNETWORK_BUFFERINGCOUNT = 807_u32
  DISPID_WMPNETWORK_BUFFERINGPROGRESS = 808_u32
  DISPID_WMPNETWORK_BUFFERINGTIME = 809_u32
  DISPID_WMPNETWORK_FRAMERATE = 810_u32
  DISPID_WMPNETWORK_MAXBITRATE = 811_u32
  DISPID_WMPNETWORK_BITRATE = 812_u32
  DISPID_WMPNETWORK_GETPROXYSETTINGS = 813_u32
  DISPID_WMPNETWORK_SETPROXYSETTINGS = 814_u32
  DISPID_WMPNETWORK_GETPROXYNAME = 815_u32
  DISPID_WMPNETWORK_SETPROXYNAME = 816_u32
  DISPID_WMPNETWORK_GETPROXYPORT = 817_u32
  DISPID_WMPNETWORK_SETPROXYPORT = 818_u32
  DISPID_WMPNETWORK_GETPROXYEXCEPTIONLIST = 819_u32
  DISPID_WMPNETWORK_SETPROXYEXCEPTIONLIST = 820_u32
  DISPID_WMPNETWORK_GETPROXYBYPASSFORLOCAL = 821_u32
  DISPID_WMPNETWORK_SETPROXYBYPASSFORLOCAL = 822_u32
  DISPID_WMPNETWORK_MAXBANDWIDTH = 823_u32
  DISPID_WMPNETWORK_DOWNLOADPROGRESS = 824_u32
  DISPID_WMPNETWORK_ENCODEDFRAMERATE = 825_u32
  DISPID_WMPNETWORK_FRAMESSKIPPED = 826_u32
  DISPID_WMPERROR_CLEARERRORQUEUE = 851_u32
  DISPID_WMPERROR_ERRORCOUNT = 852_u32
  DISPID_WMPERROR_ITEM = 853_u32
  DISPID_WMPERROR_WEBHELP = 854_u32
  DISPID_WMPERRORITEM_ERRORCODE = 901_u32
  DISPID_WMPERRORITEM_ERRORDESCRIPTION = 902_u32
  DISPID_WMPERRORITEM_ERRORCONTEXT = 903_u32
  DISPID_WMPERRORITEM_REMEDY = 904_u32
  DISPID_WMPERRORITEM_CUSTOMURL = 905_u32
  DISPID_WMPERRORITEM2_CONDITION = 906_u32
  DISPID_WMPCLOSEDCAPTION_SAMISTYLE = 951_u32
  DISPID_WMPCLOSEDCAPTION_SAMILANG = 952_u32
  DISPID_WMPCLOSEDCAPTION_SAMIFILENAME = 953_u32
  DISPID_WMPCLOSEDCAPTION_CAPTIONINGID = 954_u32
  DISPID_WMPCLOSEDCAPTION2_GETLANGCOUNT = 955_u32
  DISPID_WMPCLOSEDCAPTION2_GETLANGNAME = 956_u32
  DISPID_WMPCLOSEDCAPTION2_GETLANGID = 957_u32
  DISPID_WMPCLOSEDCAPTION2_GETSTYLECOUNT = 958_u32
  DISPID_WMPCLOSEDCAPTION2_GETSTYLENAME = 959_u32
  DISPID_WMPDVD_ISAVAILABLE = 1001_u32
  DISPID_WMPDVD_DOMAIN = 1002_u32
  DISPID_WMPDVD_TOPMENU = 1003_u32
  DISPID_WMPDVD_TITLEMENU = 1004_u32
  DISPID_WMPDVD_BACK = 1005_u32
  DISPID_WMPDVD_RESUME = 1006_u32
  DISPID_WMPMETADATA_PICTURE_MIMETYPE = 1051_u32
  DISPID_WMPMETADATA_PICTURE_PICTURETYPE = 1052_u32
  DISPID_WMPMETADATA_PICTURE_DESCRIPTION = 1053_u32
  DISPID_WMPMETADATA_PICTURE_URL = 1054_u32
  DISPID_WMPMETADATA_TEXT_TEXT = 1055_u32
  DISPID_WMPMETADATA_TEXT_DESCRIPTION = 1056_u32
  DISPID_WMPPLAYERAPP_SWITCHTOPLAYERAPPLICATION = 1101_u32
  DISPID_WMPPLAYERAPP_SWITCHTOCONTROL = 1102_u32
  DISPID_WMPPLAYERAPP_PLAYERDOCKED = 1103_u32
  DISPID_WMPPLAYERAPP_HASDISPLAY = 1104_u32
  DISPID_WMPPLAYERAPP_REMOTESTATUS = 1105_u32
  DISPID_WMPDOWNLOADMANAGER_GETDOWNLOADCOLLECTION = 1151_u32
  DISPID_WMPDOWNLOADMANAGER_CREATEDOWNLOADCOLLECTION = 1152_u32
  DISPID_WMPDOWNLOADCOLLECTION_ID = 1201_u32
  DISPID_WMPDOWNLOADCOLLECTION_COUNT = 1202_u32
  DISPID_WMPDOWNLOADCOLLECTION_ITEM = 1203_u32
  DISPID_WMPDOWNLOADCOLLECTION_STARTDOWNLOAD = 1204_u32
  DISPID_WMPDOWNLOADCOLLECTION_REMOVEITEM = 1205_u32
  DISPID_WMPDOWNLOADCOLLECTION_CLEAR = 1206_u32
  DISPID_WMPDOWNLOADITEM_SOURCEURL = 1251_u32
  DISPID_WMPDOWNLOADITEM_SIZE = 1252_u32
  DISPID_WMPDOWNLOADITEM_TYPE = 1253_u32
  DISPID_WMPDOWNLOADITEM_PROGRESS = 1254_u32
  DISPID_WMPDOWNLOADITEM_DOWNLOADSTATE = 1255_u32
  DISPID_WMPDOWNLOADITEM_PAUSE = 1256_u32
  DISPID_WMPDOWNLOADITEM_RESUME = 1257_u32
  DISPID_WMPDOWNLOADITEM_CANCEL = 1258_u32
  DISPID_WMPDOWNLOADITEM2_GETITEMINFO = 1301_u32
  DISPID_WMPQUERY_ADDCONDITION = 1351_u32
  DISPID_WMPQUERY_BEGINNEXTGROUP = 1352_u32
  DISPID_WMPMEDIACOLLECTION2_CREATEQUERY = 1401_u32
  DISPID_WMPMEDIACOLLECTION2_GETPLAYLISTBYQUERY = 1402_u32
  DISPID_WMPMEDIACOLLECTION2_GETSTRINGCOLLBYQUERY = 1403_u32
  DISPID_WMPMEDIACOLLECTION2_GETBYATTRANDMEDIATYPE = 1404_u32
  DISPID_WMPSTRINGCOLLECTION2_ISIDENTICAL = 1451_u32
  DISPID_WMPSTRINGCOLLECTION2_GETITEMINFO = 1452_u32
  DISPID_WMPSTRINGCOLLECTION2_GETATTRCOUNTBYTYPE = 1453_u32
  DISPID_WMPSTRINGCOLLECTION2_GETITEMINFOBYTYPE = 1454_u32
  DISPID_WMPCORE_MIN = 1_u32
  DISPID_WMPCORE_MAX = 1454_u32
  WMPCOREEVENT_BASE = 5000_u32
  DISPID_WMPCOREEVENT_OPENSTATECHANGE = 5001_u32
  DISPID_WMPCOREEVENT_STATUSCHANGE = 5002_u32
  WMPCOREEVENT_CONTROL_BASE = 5100_u32
  DISPID_WMPCOREEVENT_PLAYSTATECHANGE = 5101_u32
  DISPID_WMPCOREEVENT_AUDIOLANGUAGECHANGE = 5102_u32
  WMPCOREEVENT_SEEK_BASE = 5200_u32
  DISPID_WMPCOREEVENT_ENDOFSTREAM = 5201_u32
  DISPID_WMPCOREEVENT_POSITIONCHANGE = 5202_u32
  DISPID_WMPCOREEVENT_MARKERHIT = 5203_u32
  DISPID_WMPCOREEVENT_DURATIONUNITCHANGE = 5204_u32
  WMPCOREEVENT_CONTENT_BASE = 5300_u32
  DISPID_WMPCOREEVENT_SCRIPTCOMMAND = 5301_u32
  WMPCOREEVENT_NETWORK_BASE = 5400_u32
  DISPID_WMPCOREEVENT_DISCONNECT = 5401_u32
  DISPID_WMPCOREEVENT_BUFFERING = 5402_u32
  DISPID_WMPCOREEVENT_NEWSTREAM = 5403_u32
  WMPCOREEVENT_ERROR_BASE = 5500_u32
  DISPID_WMPCOREEVENT_ERROR = 5501_u32
  WMPCOREEVENT_WARNING_BASE = 5600_u32
  DISPID_WMPCOREEVENT_WARNING = 5601_u32
  WMPCOREEVENT_CDROM_BASE = 5700_u32
  DISPID_WMPCOREEVENT_CDROMMEDIACHANGE = 5701_u32
  WMPCOREEVENT_PLAYLIST_BASE = 5800_u32
  DISPID_WMPCOREEVENT_PLAYLISTCHANGE = 5801_u32
  DISPID_WMPCOREEVENT_MEDIACHANGE = 5802_u32
  DISPID_WMPCOREEVENT_CURRENTMEDIAITEMAVAILABLE = 5803_u32
  DISPID_WMPCOREEVENT_CURRENTPLAYLISTCHANGE = 5804_u32
  DISPID_WMPCOREEVENT_CURRENTPLAYLISTITEMAVAILABLE = 5805_u32
  DISPID_WMPCOREEVENT_CURRENTITEMCHANGE = 5806_u32
  DISPID_WMPCOREEVENT_MEDIACOLLECTIONCHANGE = 5807_u32
  DISPID_WMPCOREEVENT_MEDIACOLLECTIONATTRIBUTESTRINGADDED = 5808_u32
  DISPID_WMPCOREEVENT_MEDIACOLLECTIONATTRIBUTESTRINGREMOVED = 5809_u32
  DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONCHANGE = 5810_u32
  DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONPLAYLISTADDED = 5811_u32
  DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONPLAYLISTREMOVED = 5812_u32
  DISPID_WMPCOREEVENT_MEDIACOLLECTIONCONTENTSCANADDEDITEM = 5813_u32
  DISPID_WMPCOREEVENT_MEDIACOLLECTIONCONTENTSCANPROGRESS = 5814_u32
  DISPID_WMPCOREEVENT_MEDIACOLLECTIONSEARCHFOUNDITEM = 5815_u32
  DISPID_WMPCOREEVENT_MEDIACOLLECTIONSEARCHPROGRESS = 5816_u32
  DISPID_WMPCOREEVENT_MEDIACOLLECTIONSEARCHCOMPLETE = 5817_u32
  DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONPLAYLISTSETASDELETED = 5818_u32
  DISPID_WMPCOREEVENT_MODECHANGE = 5819_u32
  DISPID_WMPCOREEVENT_MEDIACOLLECTIONATTRIBUTESTRINGCHANGED = 5820_u32
  DISPID_WMPCOREEVENT_MEDIAERROR = 5821_u32
  DISPID_WMPCOREEVENT_DOMAINCHANGE = 5822_u32
  DISPID_WMPCOREEVENT_OPENPLAYLISTSWITCH = 5823_u32
  DISPID_WMPCOREEVENT_STRINGCOLLECTIONCHANGE = 5824_u32
  DISPID_WMPCOREEVENT_MEDIACOLLECTIONMEDIAADDED = 5825_u32
  DISPID_WMPCOREEVENT_MEDIACOLLECTIONMEDIAREMOVED = 5826_u32
  WMPOCXEVENT_BASE = 6500_u32
  DISPID_WMPOCXEVENT_SWITCHEDTOPLAYERAPPLICATION = 6501_u32
  DISPID_WMPOCXEVENT_SWITCHEDTOCONTROL = 6502_u32
  DISPID_WMPOCXEVENT_PLAYERDOCKEDSTATECHANGE = 6503_u32
  DISPID_WMPOCXEVENT_PLAYERRECONNECT = 6504_u32
  DISPID_WMPOCXEVENT_CLICK = 6505_u32
  DISPID_WMPOCXEVENT_DOUBLECLICK = 6506_u32
  DISPID_WMPOCXEVENT_KEYDOWN = 6507_u32
  DISPID_WMPOCXEVENT_KEYPRESS = 6508_u32
  DISPID_WMPOCXEVENT_KEYUP = 6509_u32
  DISPID_WMPOCXEVENT_MOUSEDOWN = 6510_u32
  DISPID_WMPOCXEVENT_MOUSEMOVE = 6511_u32
  DISPID_WMPOCXEVENT_MOUSEUP = 6512_u32
  DISPID_WMPOCXEVENT_DEVICECONNECT = 6513_u32
  DISPID_WMPOCXEVENT_DEVICEDISCONNECT = 6514_u32
  DISPID_WMPOCXEVENT_DEVICESTATUSCHANGE = 6515_u32
  DISPID_WMPOCXEVENT_DEVICESYNCSTATECHANGE = 6516_u32
  DISPID_WMPOCXEVENT_DEVICESYNCERROR = 6517_u32
  DISPID_WMPOCXEVENT_CREATEPARTNERSHIPCOMPLETE = 6518_u32
  DISPID_WMPOCXEVENT_CDROMRIPSTATECHANGE = 6519_u32
  DISPID_WMPOCXEVENT_CDROMRIPMEDIAERROR = 6520_u32
  DISPID_WMPOCXEVENT_CDROMBURNSTATECHANGE = 6521_u32
  DISPID_WMPOCXEVENT_CDROMBURNMEDIAERROR = 6522_u32
  DISPID_WMPOCXEVENT_CDROMBURNERROR = 6523_u32
  DISPID_WMPOCXEVENT_LIBRARYCONNECT = 6524_u32
  DISPID_WMPOCXEVENT_LIBRARYDISCONNECT = 6525_u32
  DISPID_WMPOCXEVENT_FOLDERSCANSTATECHANGE = 6526_u32
  DISPID_WMPOCXEVENT_DEVICEESTIMATION = 6527_u32
  DISPID_WMPCONTROLS_BASE = 50_u32
  DISPID_WMPSETTINGS_BASE = 100_u32
  DISPID_WMPPLAYLIST_BASE = 200_u32
  DISPID_WMPCDROM_BASE = 250_u32
  DISPID_WMPCDROMCOLLECTION_BASE = 300_u32
  DISPID_WMPSTRINGCOLLECTION_BASE = 400_u32
  DISPID_WMPMEDIACOLLECTION_BASE = 450_u32
  DISPID_WMPPLAYLISTARRAY_BASE = 500_u32
  DISPID_WMPPLAYLISTCOLLECTION_BASE = 550_u32
  DISPID_WMPMEDIA_BASE = 750_u32
  DISPID_WMPNETWORK_BASE = 800_u32
  DISPID_WMPERROR_BASE = 850_u32
  DISPID_WMPERRORITEM_BASE = 900_u32
  DISPID_WMPCLOSEDCAPTION_BASE = 950_u32
  DISPID_WMPDVD_BASE = 1000_u32
  DISPID_WMPMETADATA_BASE = 1050_u32
  DISPID_WMPPLAYERAPP_BASE = 1100_u32
  DISPID_WMPDOWNLOADMANAGER_BASE = 1150_u32
  DISPID_WMPDOWNLOADCOLLECTION_BASE = 1200_u32
  DISPID_WMPDOWNLOADITEM_BASE = 1250_u32
  DISPID_WMPDOWNLOADITEM2_BASE = 1300_u32
  DISPID_WMPQUERY_BASE = 1350_u32
  DISPID_WMPMEDIACOLLECTION2_BASE = 1400_u32
  DISPID_WMPSTRINGCOLLECTION2_BASE = 1450_u32
  CLSID_WMPSkinManager = "b2a7fd52-301f-4348-b93a-638c6de49229"
  CLSID_WMPMediaPluginRegistrar = "5569e7f5-424b-4b93-89ca-79d17924689a"
  WMP_PLUGINTYPE_DSP = "6434baea-4954-498d-abd5-2b07123e1f04"
  WMP_PLUGINTYPE_DSP_OUTOFPROC = "ef29b174-c347-44cc-9a4f-2399118ff38c"
  WMP_PLUGINTYPE_RENDERING = "a8554541-115d-406a-a4c7-51111c330183"
  Kflttimedlevelmaximumfrequency = "22050.0_f32"
  Kflttimedlevelminimumfrequency = "20.0_f32"
  G_szcontentpartnerinfo_loginstate = "LoginState"
  G_szcontentpartnerinfo_mediaplayeraccounttype = "MediaPlayerAccountType"
  G_szcontentpartnerinfo_accounttype = "AccountType"
  G_szcontentpartnerinfo_hascachedcredentials = "HasCachedCredentials"
  G_szcontentpartnerinfo_licenserefreshadvancewarning = "LicenseRefreshAdvanceWarning"
  G_szcontentpartnerinfo_purchasedtrackrequiresredownload = "PurchasedTrackRequiresReDownload"
  G_szcontentpartnerinfo_maximumtrackpurchaseperpurchase = "MaximumNumberOfTracksPerPurchase"
  G_szcontentpartnerinfo_accountbalance = "AccountBalance"
  G_szcontentpartnerinfo_username = "UserName"
  G_szmediaplayertask_burn = "Burn"
  G_szmediaplayertask_browse = "Browse"
  G_szmediaplayertask_sync = "Sync"
  G_sziteminfo_popupurl = "Popup"
  G_sziteminfo_authenticationsuccessurl = "AuthenticationSuccessURL"
  G_sziteminfo_loginfailureurl = "LoginFailureURL"
  G_sziteminfo_htmlviewurl = "HTMLViewURL"
  G_sziteminfo_popupcaption = "PopupCaption"
  G_sziteminfo_altloginurl = "ALTLoginURL"
  G_sziteminfo_altlogincaption = "ALTLoginCaption"
  G_sziteminfo_forgetpasswordurl = "ForgotPassword"
  G_sziteminfo_createaccounturl = "CreateAccount"
  G_sziteminfo_artistarturl = "ArtistArt"
  G_sziteminfo_albumarturl = "AlbumArt"
  G_sziteminfo_listarturl = "ListArt"
  G_sziteminfo_genrearturl = "GenreArt"
  G_sziteminfo_subgenrearturl = "SubGenreArt"
  G_sziteminfo_radioarturl = "RadioArt"
  G_sziteminfo_treelisticonurl = "CPListIDIcon"
  G_sziteminfo_errordescription = "CPErrorDescription"
  G_sziteminfo_errorurl = "CPErrorURL"
  G_sziteminfo_errorurllinktext = "CPErrorURLLinkText"
  G_szunknownlocation = "UnknownLocation"
  G_szrootlocation = "RootLocation"
  G_szflyoutmenu = "FlyoutMenu"
  G_szonlinestore = "OnlineStore"
  G_szvideorecent = "VideoRecent"
  G_szvideoroot = "VideoRoot"
  G_szcplistid = "CPListID"
  G_szallcplistids = "AllCPListIDs"
  G_szcptrackid = "CPTrackID"
  G_szallcptrackids = "AllCPTrackIDs"
  G_szcpartistid = "CPArtistID"
  G_szallcpartistids = "AllCPArtistIDs"
  G_szcpalbumid = "CPAlbumID"
  G_szallcpalbumids = "AllCPAlbumIDs"
  G_szcpgenreid = "CPGenreID"
  G_szallcpgenreids = "AllCPGenreIDs"
  G_szcpalbumsubgenreid = "CPAlbumSubGenreID"
  G_szallcpalbumsubgenreids = "AllCPAlbumSubGenreIDs"
  G_szreleasedateyear = "ReleaseDateYear"
  G_szallreleasedateyears = "AllReleaseDateYears"
  G_szcpradioid = "CPRadioID"
  G_szallcpradioids = "AllCPRadioIDs"
  G_szauthor = "Author"
  G_szallauthors = "AllAuthors"
  G_szwmparentalrating = "WMParentalRating"
  G_szallwmparentalratings = "AllWMParentalRatings"
  G_szallusereffectiveratingstarss = "AllUserEffectiveRatingStarss"
  G_szusereffectiveratingstars = "UserEffectiveRatingStars"
  G_szuserplaylist = "UserPlaylist"
  G_szviewmode_report = "ViewModeReport"
  G_szviewmode_details = "ViewModeDetails"
  G_szviewmode_icon = "ViewModeIcon"
  G_szviewmode_tile = "ViewModeTile"
  G_szviewmode_orderedlist = "ViewModeOrderedList"
  G_szcontentprice_unknown = "PriceUnknown"
  G_szcontentprice_cannotbuy = "PriceCannotBuy"
  G_szcontentprice_free = "PriceFree"
  G_szrefreshlicenseplay = "RefreshForPlay"
  G_szrefreshlicenseburn = "RefreshForBurn"
  G_szrefreshlicensesync = "RefreshForSync"
  G_szverifypermissionsync = "VerifyPermissionSync"
  G_szstationevent_started = "TrackStarted"
  G_szstationevent_complete = "TrackComplete"
  G_szstationevent_skipped = "TrackSkipped"
  WMProfile_V40_DialUpMBR = "fd7f47f1-72a6-45a4-80f0-3aecefc32c07"
  WMProfile_V40_IntranetMBR = "82cd3321-a94a-4ffc-9c2b-092c10ca16e7"
  WMProfile_V40_2856100MBR = "5a1c2206-dc5e-4186-beb2-4c5a994b132e"
  WMProfile_V40_6VoiceAudio = "d508978a-11a0-4d15-b0da-acdc99d4f890"
  WMProfile_V40_16AMRadio = "0f4be81f-d57d-41e1-b2e3-2fad986bfec2"
  WMProfile_V40_288FMRadioMono = "7fa57fc8-6ea4-4645-8abf-b6e5a8f814a1"
  WMProfile_V40_288FMRadioStereo = "22fcf466-aa40-431f-a289-06d0ea1a1e40"
  WMProfile_V40_56DialUpStereo = "e8026f87-e905-4594-a3c7-00d00041d1d9"
  WMProfile_V40_64Audio = "4820b3f7-cbec-41dc-9391-78598714c8e5"
  WMProfile_V40_96Audio = "0efa0ee3-9e64-41e2-837f-3c0038f327ba"
  WMProfile_V40_128Audio = "93ddbe12-13dc-4e32-a35e-40378e34279a"
  WMProfile_V40_288VideoVoice = "bb2bc274-0eb6-4da9-b550-ecf7f2b9948f"
  WMProfile_V40_288VideoAudio = "ac617f2d-6cbe-4e84-8e9a-ce151a12a354"
  WMProfile_V40_288VideoWebServer = "abf2f00d-d555-4815-94ce-8275f3a70bfe"
  WMProfile_V40_56DialUpVideo = "e21713bb-652f-4dab-99de-71e04400270f"
  WMProfile_V40_56DialUpVideoWebServer = "b756ff10-520f-4749-a399-b780e2fc9250"
  WMProfile_V40_100Video = "8f99ddd8-6684-456b-a0a3-33e1316895f0"
  WMProfile_V40_250Video = "541841c3-9339-4f7b-9a22-b11540894e42"
  WMProfile_V40_512Video = "70440e6d-c4ef-4f84-8cd0-d5c28686e784"
  WMProfile_V40_1MBVideo = "b4482a4c-cc17-4b07-a94e-9818d5e0f13f"
  WMProfile_V40_3MBVideo = "55374ac0-309b-4396-b88f-e6e292113f28"
  WMProfile_V70_DialUpMBR = "5b16e74b-4068-45b5-b80e-7bf8c80d2c2f"
  WMProfile_V70_IntranetMBR = "045880dc-34b6-4ca9-a326-73557ed143f3"
  WMProfile_V70_2856100MBR = "07df7a25-3fe2-4a5b-8b1e-348b0721ca70"
  WMProfile_V70_288VideoVoice = "b952f38e-7dbc-4533-a9ca-b00b1c6e9800"
  WMProfile_V70_288VideoAudio = "58bba0ee-896a-4948-9953-85b736f83947"
  WMProfile_V70_288VideoWebServer = "70a32e2b-e2df-4ebd-9105-d9ca194a2d50"
  WMProfile_V70_56VideoWebServer = "def99e40-57bc-4ab3-b2d1-b6e3caf64257"
  WMProfile_V70_64VideoISDN = "c2b7a7e9-7b8e-4992-a1a1-068217a3b311"
  WMProfile_V70_100Video = "d9f3c932-5ea9-4c6d-89b4-2686e515426e"
  WMProfile_V70_256Video = "afe69b3a-403f-4a1b-8007-0e21cfb3df84"
  WMProfile_V70_384Video = "f3d45fbb-8782-44df-97c6-8678e2f9b13d"
  WMProfile_V70_768Video = "0326ebb6-f76e-4964-b0db-e729978d35ee"
  WMProfile_V70_1500Video = "0b89164a-5490-4686-9e37-5a80884e5146"
  WMProfile_V70_2000Video = "aa980124-bf10-4e4f-9afd-4329a7395cff"
  WMProfile_V70_700FilmContentVideo = "7a747920-2449-4d76-99cb-fdb0c90484d4"
  WMProfile_V70_1500FilmContentVideo = "f6a5f6df-ee3f-434c-a433-523ce55f516b"
  WMProfile_V70_6VoiceAudio = "eaba9fbf-b64f-49b3-aa0c-73fbdd150ad0"
  WMProfile_V70_288FMRadioMono = "c012a833-a03b-44a5-96dc-ed95cc65582d"
  WMProfile_V70_288FMRadioStereo = "e96d67c9-1a39-4dc4-b900-b1184dc83620"
  WMProfile_V70_56DialUpStereo = "674ee767-0949-4fac-875e-f4c9c292013b"
  WMProfile_V70_64AudioISDN = "91dea458-9d60-4212-9c59-d40919c939e4"
  WMProfile_V70_64Audio = "b29cffc6-f131-41db-b5e8-99d8b0b945f4"
  WMProfile_V70_96Audio = "a9d4b819-16cc-4a59-9f37-693dbb0302d6"
  WMProfile_V70_128Audio = "c64cf5da-df45-40d3-8027-de698d68dc66"
  WMProfile_V70_225VideoPDA = "f55ea573-4c02-42b5-9026-a8260c438a9f"
  WMProfile_V70_150VideoPDA = "0f472967-e3c6-4797-9694-f0304c5e2f17"
  WMProfile_V80_255VideoPDA = "feedbcdf-3fac-4c93-ac0d-47941ec72c0b"
  WMProfile_V80_150VideoPDA = "aee16dfa-2c14-4a2f-ad3f-a3034031784f"
  WMProfile_V80_28856VideoMBR = "d66920c4-c21f-4ec8-a0b4-95cf2bd57fc4"
  WMProfile_V80_100768VideoMBR = "5bdb5a0e-979e-47d3-9596-73b386392a55"
  WMProfile_V80_288100VideoMBR = "d8722c69-2419-4b36-b4e0-6e17b60564e5"
  WMProfile_V80_288Video = "3df678d9-1352-4186-bbf8-74f0c19b6ae2"
  WMProfile_V80_56Video = "254e8a96-2612-405c-8039-f0bf725ced7d"
  WMProfile_V80_100Video = "a2e300b4-c2d4-4fc0-b5dd-ecbd948dc0df"
  WMProfile_V80_256Video = "bbc75500-33d2-4466-b86b-122b201cc9ae"
  WMProfile_V80_384Video = "29b00c2b-09a9-48bd-ad09-cdae117d1da7"
  WMProfile_V80_768Video = "74d01102-e71a-4820-8f0d-13d2ec1e4872"
  WMProfile_V80_700NTSCVideo = "c8c2985f-e5d9-4538-9e23-9b21bf78f745"
  WMProfile_V80_1400NTSCVideo = "931d1bee-617a-4bcd-9905-ccd0786683ee"
  WMProfile_V80_384PALVideo = "9227c692-ae62-4f72-a7ea-736062d0e21e"
  WMProfile_V80_700PALVideo = "ec298949-639b-45e2-96fd-4ab32d5919c2"
  WMProfile_V80_288MonoAudio = "7ea3126d-e1ba-4716-89af-f65cee0c0c67"
  WMProfile_V80_288StereoAudio = "7e4cab5c-35dc-45bb-a7c0-19b28070d0cc"
  WMProfile_V80_32StereoAudio = "60907f9f-b352-47e5-b210-0ef1f47e9f9d"
  WMProfile_V80_48StereoAudio = "5ee06be5-492b-480a-8a8f-12f373ecf9d4"
  WMProfile_V80_64StereoAudio = "09bb5bc4-3176-457f-8dd6-3cd919123e2d"
  WMProfile_V80_96StereoAudio = "1fc81930-61f2-436f-9d33-349f2a1c0f10"
  WMProfile_V80_128StereoAudio = "407b9450-8bdc-4ee5-88b8-6f527bd941f2"
  WMProfile_V80_288VideoOnly = "8c45b4c7-4aeb-4f78-a5ec-88420b9dadef"
  WMProfile_V80_56VideoOnly = "6e2a6955-81df-4943-ba50-68a986a708f6"
  WMProfile_V80_FAIRVBRVideo = "3510a862-5850-4886-835f-d78ec6a64042"
  WMProfile_V80_HIGHVBRVideo = "0f10d9d3-3b04-4fb0-a3d3-88d4ac854acc"
  WMProfile_V80_BESTVBRVideo = "048439ba-309c-440e-9cb4-3dcca3756423"
  WindowsMediaPlayer = LibC::GUID.new(0x6bf52a52_u32, 0x394a_u16, 0x11d3_u16, StaticArray[0xb1_u8, 0x53_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x79_u8, 0xfa_u8, 0xa6_u8])
  WMPLib = LibC::GUID.new(0x6bf52a50_u32, 0x394a_u16, 0x11d3_u16, StaticArray[0xb1_u8, 0x53_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x79_u8, 0xfa_u8, 0xa6_u8])
  WMPRemoteMediaServices = LibC::GUID.new(0xdf333473_u32, 0x2cf7_u16, 0x4be2_u16, StaticArray[0x90_u8, 0x7f_u8, 0x9a_u8, 0xad_u8, 0x56_u8, 0x61_u8, 0x36_u8, 0x4f_u8])
  FeedsManager = LibC::GUID.new(0xfaeb54c4_u32, 0xf66f_u16, 0x4806_u16, StaticArray[0x83_u8, 0xa0_u8, 0x80_u8, 0x52_u8, 0x99_u8, 0xf5_u8, 0xe3_u8, 0xad_u8])
  FeedFolderWatcher = LibC::GUID.new(0x281001ed_u32, 0x7765_u16, 0x4cb0_u16, StaticArray[0x84_u8, 0xaf_u8, 0xe9_u8, 0xb3_u8, 0x87_u8, 0xaf_u8, 0x1_u8, 0xff_u8])
  FeedWatcher = LibC::GUID.new(0x18a6737b_u32, 0xf433_u16, 0x4687_u16, StaticArray[0x89_u8, 0xbc_u8, 0xa1_u8, 0xb4_u8, 0xdf_u8, 0xb9_u8, 0xf1_u8, 0x23_u8])


  enum WMPOpenState : Int32
    Wmposundefined = 0
    Wmposplaylistchanging = 1
    Wmposplaylistlocating = 2
    Wmposplaylistconnecting = 3
    Wmposplaylistloading = 4
    Wmposplaylistopening = 5
    Wmposplaylistopennomedia = 6
    Wmposplaylistchanged = 7
    Wmposmediachanging = 8
    Wmposmedialocating = 9
    Wmposmediaconnecting = 10
    Wmposmedialoading = 11
    Wmposmediaopening = 12
    Wmposmediaopen = 13
    Wmposbegincodecacquisition = 14
    Wmposendcodecacquisition = 15
    Wmposbeginlicenseacquisition = 16
    Wmposendlicenseacquisition = 17
    Wmposbeginindividualization = 18
    Wmposendindividualization = 19
    Wmposmediawaiting = 20
    Wmposopeningunknownurl = 21
  end

  enum WMPPlayState : Int32
    Wmppsundefined = 0
    Wmppsstopped = 1
    Wmppspaused = 2
    Wmppsplaying = 3
    Wmppsscanforward = 4
    Wmppsscanreverse = 5
    Wmppsbuffering = 6
    Wmppswaiting = 7
    Wmppsmediaended = 8
    Wmppstransitioning = 9
    Wmppsready = 10
    Wmppsreconnecting = 11
    Wmppslast = 12
  end

  enum WMPPlaylistChangeEventType : Int32
    Wmplcunknown = 0
    Wmplcclear = 1
    Wmplcinfochange = 2
    Wmplcmove = 3
    Wmplcdelete = 4
    Wmplcinsert = 5
    Wmplcappend = 6
    Wmplcprivate = 7
    Wmplcnamechange = 8
    Wmplcmorph = 9
    Wmplcsort = 10
    Wmplclast = 11
  end

  enum WMPSyncState : Int32
    Wmpssunknown = 0
    Wmpsssynchronizing = 1
    Wmpssstopped = 2
    Wmpssestimating = 3
    Wmpsslast = 4
  end

  enum WMPDeviceStatus : Int32
    Wmpdsunknown = 0
    Wmpdspartnershipexists = 1
    Wmpdspartnershipdeclined = 2
    Wmpdspartnershipanother = 3
    Wmpdsmanualdevice = 4
    Wmpdsnewdevice = 5
    Wmpdslast = 6
  end

  enum WMPRipState : Int32
    Wmprsunknown = 0
    Wmprsripping = 1
    Wmprsstopped = 2
  end

  enum WMPBurnFormat : Int32
    Wmpbfaudiocd = 0
    Wmpbfdatacd = 1
  end

  enum WMPBurnState : Int32
    Wmpbsunknown = 0
    Wmpbsbusy = 1
    Wmpbsready = 2
    Wmpbswaitingfordisc = 3
    Wmpbsrefreshstatuspending = 4
    Wmpbspreparingtoburn = 5
    Wmpbsburning = 6
    Wmpbsstopped = 7
    Wmpbserasing = 8
    Wmpbsdownloading = 9
  end

  enum WMPStringCollectionChangeEventType : Int32
    Wmpsccetunknown = 0
    Wmpsccetinsert = 1
    Wmpsccetchange = 2
    Wmpsccetdelete = 3
    Wmpsccetclear = 4
    Wmpsccetbeginupdates = 5
    Wmpsccetendupdates = 6
  end

  enum WMPLibraryType : Int32
    Wmpltunknown = 0
    Wmpltall = 1
    Wmpltlocal = 2
    Wmpltremote = 3
    Wmpltdisc = 4
    Wmpltportabledevice = 5
  end

  enum WMPFolderScanState : Int32
    Wmpfssunknown = 0
    Wmpfssscanning = 1
    Wmpfssupdating = 2
    Wmpfssstopped = 3
  end

  enum WMPServices_StreamState : Int32
    WMPServices_StreamState_Stop = 0
    WMPServices_StreamState_Pause = 1
    WMPServices_StreamState_Play = 2
  end

  enum WMPPlugin_Caps : Int32
    WMPPlugin_Caps_CannotConvertFormats = 1
  end

  enum FEEDS_BACKGROUNDSYNC_ACTION : Int32
    FBSA_DISABLE = 0
    FBSA_ENABLE = 1
    FBSA_RUNNOW = 2
  end

  enum FEEDS_BACKGROUNDSYNC_STATUS : Int32
    FBSS_DISABLED = 0
    FBSS_ENABLED = 1
  end

  enum FEEDS_EVENTS_SCOPE : Int32
    FES_ALL = 0
    FES_SELF_ONLY = 1
    FES_SELF_AND_CHILDREN_ONLY = 2
  end

  enum FEEDS_EVENTS_MASK : Int32
    FEM_FOLDEREVENTS = 1
    FEM_FEEDEVENTS = 2
  end

  enum FEEDS_XML_SORT_PROPERTY : Int32
    FXSP_NONE = 0
    FXSP_PUBDATE = 1
    FXSP_DOWNLOADTIME = 2
  end

  enum FEEDS_XML_SORT_ORDER : Int32
    FXSO_NONE = 0
    FXSO_ASCENDING = 1
    FXSO_DESCENDING = 2
  end

  enum FEEDS_XML_FILTER_FLAGS : Int32
    FXFF_ALL = 0
    FXFF_UNREAD = 1
    FXFF_READ = 2
  end

  enum FEEDS_XML_INCLUDE_FLAGS : Int32
    FXIF_NONE = 0
    FXIF_CF_EXTENSIONS = 1
  end

  enum FEEDS_DOWNLOAD_STATUS : Int32
    FDS_NONE = 0
    FDS_PENDING = 1
    FDS_DOWNLOADING = 2
    FDS_DOWNLOADED = 3
    FDS_DOWNLOAD_FAILED = 4
  end

  enum FEEDS_SYNC_SETTING : Int32
    FSS_DEFAULT = 0
    FSS_INTERVAL = 1
    FSS_MANUAL = 2
    FSS_SUGGESTED = 3
  end

  enum FEEDS_DOWNLOAD_ERROR : Int32
    FDE_NONE = 0
    FDE_DOWNLOAD_FAILED = 1
    FDE_INVALID_FEED_FORMAT = 2
    FDE_NORMALIZATION_FAILED = 3
    FDE_PERSISTENCE_FAILED = 4
    FDE_DOWNLOAD_BLOCKED = 5
    FDE_CANCELED = 6
    FDE_UNSUPPORTED_AUTH = 7
    FDE_BACKGROUND_DOWNLOAD_DISABLED = 8
    FDE_NOT_EXIST = 9
    FDE_UNSUPPORTED_MSXML = 10
    FDE_UNSUPPORTED_DTD = 11
    FDE_DOWNLOAD_SIZE_LIMIT_EXCEEDED = 12
    FDE_ACCESS_DENIED = 13
    FDE_AUTH_FAILED = 14
    FDE_INVALID_AUTH = 15
  end

  enum FEEDS_EVENTS_ITEM_COUNT_FLAGS : Int32
    FEICF_READ_ITEM_COUNT_CHANGED = 1
    FEICF_UNREAD_ITEM_COUNT_CHANGED = 2
  end

  enum FEEDS_ERROR_CODE : Int32
    FEC_E_ERRORBASE = -1073479168
    FEC_E_INVALIDMSXMLPROPERTY = -1073479168
    FEC_E_DOWNLOADSIZELIMITEXCEEDED = -1073479167
  end

  enum PlayerState : Int32
    Stop_state = 0
    Pause_state = 1
    Play_state = 2
  end

  enum WMPPartnerNotification : Int32
    Wmpsnbackgroundprocessingbegin = 1
    Wmpsnbackgroundprocessingend = 2
    Wmpsncatalogdownloadfailure = 3
    Wmpsncatalogdownloadcomplete = 4
  end

  enum WMPCallbackNotification : Int32
    Wmpcnloginstatechange = 1
    Wmpcnauthresult = 2
    Wmpcnlicenseupdated = 3
    Wmpcnnewcatalogavailable = 4
    Wmpcnnewpluginavailable = 5
    Wmpcndisableradioskipping = 6
  end

  enum WMPTaskType : Int32
    Wmpttbrowse = 1
    Wmpttsync = 2
    Wmpttburn = 3
    Wmpttcurrent = 4
  end

  enum WMPTransactionType : Int32
    Wmpttnotransaction = 0
    Wmpttdownload = 1
    Wmpttbuy = 2
  end

  enum WMPTemplateSize : Int32
    Wmptssmall = 0
    Wmptsmedium = 1
    Wmptslarge = 2
  end

  enum WMPStreamingType : Int32
    Wmpstunknown = 0
    Wmpstmusic = 1
    Wmpstvideo = 2
    Wmpstradio = 3
  end

  enum WMPAccountType : Int32
    Wmpatbuyonly = 1
    Wmpatsubscription = 2
    Wmpatjanus = 3
  end

  enum WMPSubscriptionServiceEvent : Int32
    Wmpssecurrentbegin = 1
    Wmpssecurrentend = 2
    Wmpssefullbegin = 3
    Wmpssefullend = 4
  end

  enum WMPSubscriptionDownloadState : Int32
    Wmpsdlsdownloading = 0
    Wmpsdlspaused = 1
    Wmpsdlsprocessing = 2
    Wmpsdlscompleted = 3
    Wmpsdlscancelled = 4
  end

  struct TimedLevel
    frequency : UInt8[2048]*
    waveform : UInt8[2048]*
    state : Int32
    time_stamp : Int64
  end
  struct WMPContextMenuInfo
    dw_id : UInt32
    bstr_menu_text : UInt8*
    bstr_help_text : UInt8*
  end
  struct WMP_WMDM_METADATA_ROUND_TRIP_PC2DEVICE
    dw_changes_since_transaction_id : UInt32
    dw_result_set_starting_index : UInt32
  end
  struct WMP_WMDM_METADATA_ROUND_TRIP_DEVICE2PC
    dw_current_transaction_id : UInt32
    dw_returned_object_count : UInt32
    dw_unretrieved_object_count : UInt32
    dw_deleted_object_starting_offset : UInt32
    dw_flags : UInt32
    ws_object_pathname_list : Char[0]*
  end


  struct IWMPErrorItemVTbl
    query_interface : Proc(IWMPErrorItem*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPErrorItem*, UInt32)
    release : Proc(IWMPErrorItem*, UInt32)
    get_type_info_count : Proc(IWMPErrorItem*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPErrorItem*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPErrorItem*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPErrorItem*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_error_code : Proc(IWMPErrorItem*, Int32*, HRESULT)
    get_error_description : Proc(IWMPErrorItem*, UInt8**, HRESULT)
    get_error_context : Proc(IWMPErrorItem*, VARIANT*, HRESULT)
    get_remedy : Proc(IWMPErrorItem*, Int32*, HRESULT)
    get_custom_url : Proc(IWMPErrorItem*, UInt8**, HRESULT)
  end

  IWMPErrorItem_GUID = LibC::GUID.new("3614c646-3b3b-4de7-a81e-930e3f2127b3")
  CLSID_IWMPErrorItem = "3614c646-3b3b-4de7-a81e-930e3f2127b3"
  struct IWMPErrorItem
    lpVtbl : IWMPErrorItemVTbl*
  end

  struct IWMPErrorVTbl
    query_interface : Proc(IWMPError*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPError*, UInt32)
    release : Proc(IWMPError*, UInt32)
    get_type_info_count : Proc(IWMPError*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPError*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPError*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPError*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    clear_error_queue : Proc(IWMPError*, HRESULT)
    get_error_count : Proc(IWMPError*, Int32*, HRESULT)
    get_item : Proc(IWMPError*, Int32, IWMPErrorItem*, HRESULT)
    web_help : Proc(IWMPError*, HRESULT)
  end

  IWMPError_GUID = LibC::GUID.new("a12dcf7d-14ab-4c1b-a8cd-63909f06025b")
  CLSID_IWMPError = "a12dcf7d-14ab-4c1b-a8cd-63909f06025b"
  struct IWMPError
    lpVtbl : IWMPErrorVTbl*
  end

  struct IWMPMediaVTbl
    query_interface : Proc(IWMPMedia*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPMedia*, UInt32)
    release : Proc(IWMPMedia*, UInt32)
    get_type_info_count : Proc(IWMPMedia*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPMedia*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPMedia*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPMedia*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_is_identical : Proc(IWMPMedia*, IWMPMedia, Int16*, HRESULT)
    get_source_url : Proc(IWMPMedia*, UInt8**, HRESULT)
    get_name : Proc(IWMPMedia*, UInt8**, HRESULT)
    put_name : Proc(IWMPMedia*, UInt8*, HRESULT)
    get_image_source_width : Proc(IWMPMedia*, Int32*, HRESULT)
    get_image_source_height : Proc(IWMPMedia*, Int32*, HRESULT)
    get_marker_count : Proc(IWMPMedia*, Int32*, HRESULT)
    get_marker_time : Proc(IWMPMedia*, Int32, Float64*, HRESULT)
    get_marker_name : Proc(IWMPMedia*, Int32, UInt8**, HRESULT)
    get_duration : Proc(IWMPMedia*, Float64*, HRESULT)
    get_duration_string : Proc(IWMPMedia*, UInt8**, HRESULT)
    get_attribute_count : Proc(IWMPMedia*, Int32*, HRESULT)
    get_attribute_name : Proc(IWMPMedia*, Int32, UInt8**, HRESULT)
    get_item_info : Proc(IWMPMedia*, UInt8*, UInt8**, HRESULT)
    set_item_info : Proc(IWMPMedia*, UInt8*, UInt8*, HRESULT)
    get_item_info_by_atom : Proc(IWMPMedia*, Int32, UInt8**, HRESULT)
    is_member_of : Proc(IWMPMedia*, IWMPPlaylist, Int16*, HRESULT)
    is_read_only_item : Proc(IWMPMedia*, UInt8*, Int16*, HRESULT)
  end

  IWMPMedia_GUID = LibC::GUID.new("94d55e95-3fac-11d3-b155-00c04f79faa6")
  CLSID_IWMPMedia = "94d55e95-3fac-11d3-b155-00c04f79faa6"
  struct IWMPMedia
    lpVtbl : IWMPMediaVTbl*
  end

  struct IWMPControlsVTbl
    query_interface : Proc(IWMPControls*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPControls*, UInt32)
    release : Proc(IWMPControls*, UInt32)
    get_type_info_count : Proc(IWMPControls*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPControls*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPControls*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPControls*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_is_available : Proc(IWMPControls*, UInt8*, Int16*, HRESULT)
    play : Proc(IWMPControls*, HRESULT)
    stop : Proc(IWMPControls*, HRESULT)
    pause : Proc(IWMPControls*, HRESULT)
    fast_forward : Proc(IWMPControls*, HRESULT)
    fast_reverse : Proc(IWMPControls*, HRESULT)
    get_current_position : Proc(IWMPControls*, Float64*, HRESULT)
    put_current_position : Proc(IWMPControls*, Float64, HRESULT)
    get_current_position_string : Proc(IWMPControls*, UInt8**, HRESULT)
    next : Proc(IWMPControls*, HRESULT)
    previous : Proc(IWMPControls*, HRESULT)
    get_current_item : Proc(IWMPControls*, IWMPMedia*, HRESULT)
    put_current_item : Proc(IWMPControls*, IWMPMedia, HRESULT)
    get_current_marker : Proc(IWMPControls*, Int32*, HRESULT)
    put_current_marker : Proc(IWMPControls*, Int32, HRESULT)
    play_item : Proc(IWMPControls*, IWMPMedia, HRESULT)
  end

  IWMPControls_GUID = LibC::GUID.new("74c09e02-f828-11d2-a74b-00a0c905f36e")
  CLSID_IWMPControls = "74c09e02-f828-11d2-a74b-00a0c905f36e"
  struct IWMPControls
    lpVtbl : IWMPControlsVTbl*
  end

  struct IWMPSettingsVTbl
    query_interface : Proc(IWMPSettings*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPSettings*, UInt32)
    release : Proc(IWMPSettings*, UInt32)
    get_type_info_count : Proc(IWMPSettings*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPSettings*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPSettings*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPSettings*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_is_available : Proc(IWMPSettings*, UInt8*, Int16*, HRESULT)
    get_auto_start : Proc(IWMPSettings*, Int16*, HRESULT)
    put_auto_start : Proc(IWMPSettings*, Int16, HRESULT)
    get_base_url : Proc(IWMPSettings*, UInt8**, HRESULT)
    put_base_url : Proc(IWMPSettings*, UInt8*, HRESULT)
    get_default_frame : Proc(IWMPSettings*, UInt8**, HRESULT)
    put_default_frame : Proc(IWMPSettings*, UInt8*, HRESULT)
    get_invoke_ur_ls : Proc(IWMPSettings*, Int16*, HRESULT)
    put_invoke_ur_ls : Proc(IWMPSettings*, Int16, HRESULT)
    get_mute : Proc(IWMPSettings*, Int16*, HRESULT)
    put_mute : Proc(IWMPSettings*, Int16, HRESULT)
    get_play_count : Proc(IWMPSettings*, Int32*, HRESULT)
    put_play_count : Proc(IWMPSettings*, Int32, HRESULT)
    get_rate : Proc(IWMPSettings*, Float64*, HRESULT)
    put_rate : Proc(IWMPSettings*, Float64, HRESULT)
    get_balance : Proc(IWMPSettings*, Int32*, HRESULT)
    put_balance : Proc(IWMPSettings*, Int32, HRESULT)
    get_volume : Proc(IWMPSettings*, Int32*, HRESULT)
    put_volume : Proc(IWMPSettings*, Int32, HRESULT)
    get_mode : Proc(IWMPSettings*, UInt8*, Int16*, HRESULT)
    set_mode : Proc(IWMPSettings*, UInt8*, Int16, HRESULT)
    get_enable_error_dialogs : Proc(IWMPSettings*, Int16*, HRESULT)
    put_enable_error_dialogs : Proc(IWMPSettings*, Int16, HRESULT)
  end

  IWMPSettings_GUID = LibC::GUID.new("9104d1ab-80c9-4fed-abf0-2e6417a6df14")
  CLSID_IWMPSettings = "9104d1ab-80c9-4fed-abf0-2e6417a6df14"
  struct IWMPSettings
    lpVtbl : IWMPSettingsVTbl*
  end

  struct IWMPClosedCaptionVTbl
    query_interface : Proc(IWMPClosedCaption*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPClosedCaption*, UInt32)
    release : Proc(IWMPClosedCaption*, UInt32)
    get_type_info_count : Proc(IWMPClosedCaption*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPClosedCaption*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPClosedCaption*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPClosedCaption*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_sami_style : Proc(IWMPClosedCaption*, UInt8**, HRESULT)
    put_sami_style : Proc(IWMPClosedCaption*, UInt8*, HRESULT)
    get_sami_lang : Proc(IWMPClosedCaption*, UInt8**, HRESULT)
    put_sami_lang : Proc(IWMPClosedCaption*, UInt8*, HRESULT)
    get_sami_file_name : Proc(IWMPClosedCaption*, UInt8**, HRESULT)
    put_sami_file_name : Proc(IWMPClosedCaption*, UInt8*, HRESULT)
    get_captioning_id : Proc(IWMPClosedCaption*, UInt8**, HRESULT)
    put_captioning_id : Proc(IWMPClosedCaption*, UInt8*, HRESULT)
  end

  IWMPClosedCaption_GUID = LibC::GUID.new("4f2df574-c588-11d3-9ed0-00c04fb6e937")
  CLSID_IWMPClosedCaption = "4f2df574-c588-11d3-9ed0-00c04fb6e937"
  struct IWMPClosedCaption
    lpVtbl : IWMPClosedCaptionVTbl*
  end

  struct IWMPPlaylistVTbl
    query_interface : Proc(IWMPPlaylist*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPPlaylist*, UInt32)
    release : Proc(IWMPPlaylist*, UInt32)
    get_type_info_count : Proc(IWMPPlaylist*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPPlaylist*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPPlaylist*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPPlaylist*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_count : Proc(IWMPPlaylist*, Int32*, HRESULT)
    get_name : Proc(IWMPPlaylist*, UInt8**, HRESULT)
    put_name : Proc(IWMPPlaylist*, UInt8*, HRESULT)
    get_attribute_count : Proc(IWMPPlaylist*, Int32*, HRESULT)
    get_attribute_name : Proc(IWMPPlaylist*, Int32, UInt8**, HRESULT)
    get_item : Proc(IWMPPlaylist*, Int32, IWMPMedia*, HRESULT)
    get_item_info : Proc(IWMPPlaylist*, UInt8*, UInt8**, HRESULT)
    set_item_info : Proc(IWMPPlaylist*, UInt8*, UInt8*, HRESULT)
    get_is_identical : Proc(IWMPPlaylist*, IWMPPlaylist, Int16*, HRESULT)
    clear : Proc(IWMPPlaylist*, HRESULT)
    insert_item : Proc(IWMPPlaylist*, Int32, IWMPMedia, HRESULT)
    append_item : Proc(IWMPPlaylist*, IWMPMedia, HRESULT)
    remove_item : Proc(IWMPPlaylist*, IWMPMedia, HRESULT)
    move_item : Proc(IWMPPlaylist*, Int32, Int32, HRESULT)
  end

  IWMPPlaylist_GUID = LibC::GUID.new("d5f0f4f1-130c-11d3-b14e-00c04f79faa6")
  CLSID_IWMPPlaylist = "d5f0f4f1-130c-11d3-b14e-00c04f79faa6"
  struct IWMPPlaylist
    lpVtbl : IWMPPlaylistVTbl*
  end

  struct IWMPCdromVTbl
    query_interface : Proc(IWMPCdrom*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPCdrom*, UInt32)
    release : Proc(IWMPCdrom*, UInt32)
    get_type_info_count : Proc(IWMPCdrom*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPCdrom*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPCdrom*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPCdrom*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_drive_specifier : Proc(IWMPCdrom*, UInt8**, HRESULT)
    get_playlist : Proc(IWMPCdrom*, IWMPPlaylist*, HRESULT)
    eject : Proc(IWMPCdrom*, HRESULT)
  end

  IWMPCdrom_GUID = LibC::GUID.new("cfab6e98-8730-11d3-b388-00c04f68574b")
  CLSID_IWMPCdrom = "cfab6e98-8730-11d3-b388-00c04f68574b"
  struct IWMPCdrom
    lpVtbl : IWMPCdromVTbl*
  end

  struct IWMPCdromCollectionVTbl
    query_interface : Proc(IWMPCdromCollection*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPCdromCollection*, UInt32)
    release : Proc(IWMPCdromCollection*, UInt32)
    get_type_info_count : Proc(IWMPCdromCollection*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPCdromCollection*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPCdromCollection*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPCdromCollection*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_count : Proc(IWMPCdromCollection*, Int32*, HRESULT)
    item : Proc(IWMPCdromCollection*, Int32, IWMPCdrom*, HRESULT)
    get_by_drive_specifier : Proc(IWMPCdromCollection*, UInt8*, IWMPCdrom*, HRESULT)
  end

  IWMPCdromCollection_GUID = LibC::GUID.new("ee4c8fe2-34b2-11d3-a3bf-006097c9b344")
  CLSID_IWMPCdromCollection = "ee4c8fe2-34b2-11d3-a3bf-006097c9b344"
  struct IWMPCdromCollection
    lpVtbl : IWMPCdromCollectionVTbl*
  end

  struct IWMPStringCollectionVTbl
    query_interface : Proc(IWMPStringCollection*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPStringCollection*, UInt32)
    release : Proc(IWMPStringCollection*, UInt32)
    get_type_info_count : Proc(IWMPStringCollection*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPStringCollection*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPStringCollection*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPStringCollection*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_count : Proc(IWMPStringCollection*, Int32*, HRESULT)
    item : Proc(IWMPStringCollection*, Int32, UInt8**, HRESULT)
  end

  IWMPStringCollection_GUID = LibC::GUID.new("4a976298-8c0d-11d3-b389-00c04f68574b")
  CLSID_IWMPStringCollection = "4a976298-8c0d-11d3-b389-00c04f68574b"
  struct IWMPStringCollection
    lpVtbl : IWMPStringCollectionVTbl*
  end

  struct IWMPMediaCollectionVTbl
    query_interface : Proc(IWMPMediaCollection*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPMediaCollection*, UInt32)
    release : Proc(IWMPMediaCollection*, UInt32)
    get_type_info_count : Proc(IWMPMediaCollection*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPMediaCollection*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPMediaCollection*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPMediaCollection*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    add : Proc(IWMPMediaCollection*, UInt8*, IWMPMedia*, HRESULT)
    get_all : Proc(IWMPMediaCollection*, IWMPPlaylist*, HRESULT)
    get_by_name : Proc(IWMPMediaCollection*, UInt8*, IWMPPlaylist*, HRESULT)
    get_by_genre : Proc(IWMPMediaCollection*, UInt8*, IWMPPlaylist*, HRESULT)
    get_by_author : Proc(IWMPMediaCollection*, UInt8*, IWMPPlaylist*, HRESULT)
    get_by_album : Proc(IWMPMediaCollection*, UInt8*, IWMPPlaylist*, HRESULT)
    get_by_attribute : Proc(IWMPMediaCollection*, UInt8*, UInt8*, IWMPPlaylist*, HRESULT)
    remove : Proc(IWMPMediaCollection*, IWMPMedia, Int16, HRESULT)
    get_attribute_string_collection : Proc(IWMPMediaCollection*, UInt8*, UInt8*, IWMPStringCollection*, HRESULT)
    get_media_atom : Proc(IWMPMediaCollection*, UInt8*, Int32*, HRESULT)
    set_deleted : Proc(IWMPMediaCollection*, IWMPMedia, Int16, HRESULT)
    is_deleted : Proc(IWMPMediaCollection*, IWMPMedia, Int16*, HRESULT)
  end

  IWMPMediaCollection_GUID = LibC::GUID.new("8363bc22-b4b4-4b19-989d-1cd765749dd1")
  CLSID_IWMPMediaCollection = "8363bc22-b4b4-4b19-989d-1cd765749dd1"
  struct IWMPMediaCollection
    lpVtbl : IWMPMediaCollectionVTbl*
  end

  struct IWMPPlaylistArrayVTbl
    query_interface : Proc(IWMPPlaylistArray*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPPlaylistArray*, UInt32)
    release : Proc(IWMPPlaylistArray*, UInt32)
    get_type_info_count : Proc(IWMPPlaylistArray*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPPlaylistArray*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPPlaylistArray*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPPlaylistArray*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_count : Proc(IWMPPlaylistArray*, Int32*, HRESULT)
    item : Proc(IWMPPlaylistArray*, Int32, IWMPPlaylist*, HRESULT)
  end

  IWMPPlaylistArray_GUID = LibC::GUID.new("679409c0-99f7-11d3-9fb7-00105aa620bb")
  CLSID_IWMPPlaylistArray = "679409c0-99f7-11d3-9fb7-00105aa620bb"
  struct IWMPPlaylistArray
    lpVtbl : IWMPPlaylistArrayVTbl*
  end

  struct IWMPPlaylistCollectionVTbl
    query_interface : Proc(IWMPPlaylistCollection*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPPlaylistCollection*, UInt32)
    release : Proc(IWMPPlaylistCollection*, UInt32)
    get_type_info_count : Proc(IWMPPlaylistCollection*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPPlaylistCollection*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPPlaylistCollection*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPPlaylistCollection*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    new_playlist : Proc(IWMPPlaylistCollection*, UInt8*, IWMPPlaylist*, HRESULT)
    get_all : Proc(IWMPPlaylistCollection*, IWMPPlaylistArray*, HRESULT)
    get_by_name : Proc(IWMPPlaylistCollection*, UInt8*, IWMPPlaylistArray*, HRESULT)
    remove : Proc(IWMPPlaylistCollection*, IWMPPlaylist, HRESULT)
    set_deleted : Proc(IWMPPlaylistCollection*, IWMPPlaylist, Int16, HRESULT)
    is_deleted : Proc(IWMPPlaylistCollection*, IWMPPlaylist, Int16*, HRESULT)
    import_playlist : Proc(IWMPPlaylistCollection*, IWMPPlaylist, IWMPPlaylist*, HRESULT)
  end

  IWMPPlaylistCollection_GUID = LibC::GUID.new("10a13217-23a7-439b-b1c0-d847c79b7774")
  CLSID_IWMPPlaylistCollection = "10a13217-23a7-439b-b1c0-d847c79b7774"
  struct IWMPPlaylistCollection
    lpVtbl : IWMPPlaylistCollectionVTbl*
  end

  struct IWMPNetworkVTbl
    query_interface : Proc(IWMPNetwork*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPNetwork*, UInt32)
    release : Proc(IWMPNetwork*, UInt32)
    get_type_info_count : Proc(IWMPNetwork*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPNetwork*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPNetwork*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPNetwork*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_band_width : Proc(IWMPNetwork*, Int32*, HRESULT)
    get_recovered_packets : Proc(IWMPNetwork*, Int32*, HRESULT)
    get_source_protocol : Proc(IWMPNetwork*, UInt8**, HRESULT)
    get_received_packets : Proc(IWMPNetwork*, Int32*, HRESULT)
    get_lost_packets : Proc(IWMPNetwork*, Int32*, HRESULT)
    get_reception_quality : Proc(IWMPNetwork*, Int32*, HRESULT)
    get_buffering_count : Proc(IWMPNetwork*, Int32*, HRESULT)
    get_buffering_progress : Proc(IWMPNetwork*, Int32*, HRESULT)
    get_buffering_time : Proc(IWMPNetwork*, Int32*, HRESULT)
    put_buffering_time : Proc(IWMPNetwork*, Int32, HRESULT)
    get_frame_rate : Proc(IWMPNetwork*, Int32*, HRESULT)
    get_max_bit_rate : Proc(IWMPNetwork*, Int32*, HRESULT)
    get_bit_rate : Proc(IWMPNetwork*, Int32*, HRESULT)
    get_proxy_settings : Proc(IWMPNetwork*, UInt8*, Int32*, HRESULT)
    set_proxy_settings : Proc(IWMPNetwork*, UInt8*, Int32, HRESULT)
    get_proxy_name : Proc(IWMPNetwork*, UInt8*, UInt8**, HRESULT)
    set_proxy_name : Proc(IWMPNetwork*, UInt8*, UInt8*, HRESULT)
    get_proxy_port : Proc(IWMPNetwork*, UInt8*, Int32*, HRESULT)
    set_proxy_port : Proc(IWMPNetwork*, UInt8*, Int32, HRESULT)
    get_proxy_exception_list : Proc(IWMPNetwork*, UInt8*, UInt8**, HRESULT)
    set_proxy_exception_list : Proc(IWMPNetwork*, UInt8*, UInt8*, HRESULT)
    get_proxy_bypass_for_local : Proc(IWMPNetwork*, UInt8*, Int16*, HRESULT)
    set_proxy_bypass_for_local : Proc(IWMPNetwork*, UInt8*, Int16, HRESULT)
    get_max_bandwidth : Proc(IWMPNetwork*, Int32*, HRESULT)
    put_max_bandwidth : Proc(IWMPNetwork*, Int32, HRESULT)
    get_download_progress : Proc(IWMPNetwork*, Int32*, HRESULT)
    get_encoded_frame_rate : Proc(IWMPNetwork*, Int32*, HRESULT)
    get_frames_skipped : Proc(IWMPNetwork*, Int32*, HRESULT)
  end

  IWMPNetwork_GUID = LibC::GUID.new("ec21b779-edef-462d-bba4-ad9dde2b29a7")
  CLSID_IWMPNetwork = "ec21b779-edef-462d-bba4-ad9dde2b29a7"
  struct IWMPNetwork
    lpVtbl : IWMPNetworkVTbl*
  end

  struct IWMPCoreVTbl
    query_interface : Proc(IWMPCore*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPCore*, UInt32)
    release : Proc(IWMPCore*, UInt32)
    get_type_info_count : Proc(IWMPCore*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPCore*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPCore*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPCore*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    close : Proc(IWMPCore*, HRESULT)
    get_url : Proc(IWMPCore*, UInt8**, HRESULT)
    put_url : Proc(IWMPCore*, UInt8*, HRESULT)
    get_open_state : Proc(IWMPCore*, WMPOpenState*, HRESULT)
    get_play_state : Proc(IWMPCore*, WMPPlayState*, HRESULT)
    get_controls : Proc(IWMPCore*, IWMPControls*, HRESULT)
    get_settings : Proc(IWMPCore*, IWMPSettings*, HRESULT)
    get_current_media : Proc(IWMPCore*, IWMPMedia*, HRESULT)
    put_current_media : Proc(IWMPCore*, IWMPMedia, HRESULT)
    get_media_collection : Proc(IWMPCore*, IWMPMediaCollection*, HRESULT)
    get_playlist_collection : Proc(IWMPCore*, IWMPPlaylistCollection*, HRESULT)
    get_version_info : Proc(IWMPCore*, UInt8**, HRESULT)
    launch_url : Proc(IWMPCore*, UInt8*, HRESULT)
    get_network : Proc(IWMPCore*, IWMPNetwork*, HRESULT)
    get_current_playlist : Proc(IWMPCore*, IWMPPlaylist*, HRESULT)
    put_current_playlist : Proc(IWMPCore*, IWMPPlaylist, HRESULT)
    get_cdrom_collection : Proc(IWMPCore*, IWMPCdromCollection*, HRESULT)
    get_closed_caption : Proc(IWMPCore*, IWMPClosedCaption*, HRESULT)
    get_is_online : Proc(IWMPCore*, Int16*, HRESULT)
    get_error : Proc(IWMPCore*, IWMPError*, HRESULT)
    get_status : Proc(IWMPCore*, UInt8**, HRESULT)
  end

  IWMPCore_GUID = LibC::GUID.new("d84cca99-cce2-11d2-9ecc-0000f8085981")
  CLSID_IWMPCore = "d84cca99-cce2-11d2-9ecc-0000f8085981"
  struct IWMPCore
    lpVtbl : IWMPCoreVTbl*
  end

  struct IWMPPlayerVTbl
    query_interface : Proc(IWMPPlayer*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPPlayer*, UInt32)
    release : Proc(IWMPPlayer*, UInt32)
    get_type_info_count : Proc(IWMPPlayer*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPPlayer*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPPlayer*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPPlayer*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    close : Proc(IWMPPlayer*, HRESULT)
    get_url : Proc(IWMPPlayer*, UInt8**, HRESULT)
    put_url : Proc(IWMPPlayer*, UInt8*, HRESULT)
    get_open_state : Proc(IWMPPlayer*, WMPOpenState*, HRESULT)
    get_play_state : Proc(IWMPPlayer*, WMPPlayState*, HRESULT)
    get_controls : Proc(IWMPPlayer*, IWMPControls*, HRESULT)
    get_settings : Proc(IWMPPlayer*, IWMPSettings*, HRESULT)
    get_current_media : Proc(IWMPPlayer*, IWMPMedia*, HRESULT)
    put_current_media : Proc(IWMPPlayer*, IWMPMedia, HRESULT)
    get_media_collection : Proc(IWMPPlayer*, IWMPMediaCollection*, HRESULT)
    get_playlist_collection : Proc(IWMPPlayer*, IWMPPlaylistCollection*, HRESULT)
    get_version_info : Proc(IWMPPlayer*, UInt8**, HRESULT)
    launch_url : Proc(IWMPPlayer*, UInt8*, HRESULT)
    get_network : Proc(IWMPPlayer*, IWMPNetwork*, HRESULT)
    get_current_playlist : Proc(IWMPPlayer*, IWMPPlaylist*, HRESULT)
    put_current_playlist : Proc(IWMPPlayer*, IWMPPlaylist, HRESULT)
    get_cdrom_collection : Proc(IWMPPlayer*, IWMPCdromCollection*, HRESULT)
    get_closed_caption : Proc(IWMPPlayer*, IWMPClosedCaption*, HRESULT)
    get_is_online : Proc(IWMPPlayer*, Int16*, HRESULT)
    get_error : Proc(IWMPPlayer*, IWMPError*, HRESULT)
    get_status : Proc(IWMPPlayer*, UInt8**, HRESULT)
    get_enabled : Proc(IWMPPlayer*, Int16*, HRESULT)
    put_enabled : Proc(IWMPPlayer*, Int16, HRESULT)
    get_full_screen : Proc(IWMPPlayer*, Int16*, HRESULT)
    put_full_screen : Proc(IWMPPlayer*, Int16, HRESULT)
    get_enable_context_menu : Proc(IWMPPlayer*, Int16*, HRESULT)
    put_enable_context_menu : Proc(IWMPPlayer*, Int16, HRESULT)
    put_ui_mode : Proc(IWMPPlayer*, UInt8*, HRESULT)
    get_ui_mode : Proc(IWMPPlayer*, UInt8**, HRESULT)
  end

  IWMPPlayer_GUID = LibC::GUID.new("6bf52a4f-394a-11d3-b153-00c04f79faa6")
  CLSID_IWMPPlayer = "6bf52a4f-394a-11d3-b153-00c04f79faa6"
  struct IWMPPlayer
    lpVtbl : IWMPPlayerVTbl*
  end

  struct IWMPPlayer2VTbl
    query_interface : Proc(IWMPPlayer2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPPlayer2*, UInt32)
    release : Proc(IWMPPlayer2*, UInt32)
    get_type_info_count : Proc(IWMPPlayer2*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPPlayer2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPPlayer2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPPlayer2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    close : Proc(IWMPPlayer2*, HRESULT)
    get_url : Proc(IWMPPlayer2*, UInt8**, HRESULT)
    put_url : Proc(IWMPPlayer2*, UInt8*, HRESULT)
    get_open_state : Proc(IWMPPlayer2*, WMPOpenState*, HRESULT)
    get_play_state : Proc(IWMPPlayer2*, WMPPlayState*, HRESULT)
    get_controls : Proc(IWMPPlayer2*, IWMPControls*, HRESULT)
    get_settings : Proc(IWMPPlayer2*, IWMPSettings*, HRESULT)
    get_current_media : Proc(IWMPPlayer2*, IWMPMedia*, HRESULT)
    put_current_media : Proc(IWMPPlayer2*, IWMPMedia, HRESULT)
    get_media_collection : Proc(IWMPPlayer2*, IWMPMediaCollection*, HRESULT)
    get_playlist_collection : Proc(IWMPPlayer2*, IWMPPlaylistCollection*, HRESULT)
    get_version_info : Proc(IWMPPlayer2*, UInt8**, HRESULT)
    launch_url : Proc(IWMPPlayer2*, UInt8*, HRESULT)
    get_network : Proc(IWMPPlayer2*, IWMPNetwork*, HRESULT)
    get_current_playlist : Proc(IWMPPlayer2*, IWMPPlaylist*, HRESULT)
    put_current_playlist : Proc(IWMPPlayer2*, IWMPPlaylist, HRESULT)
    get_cdrom_collection : Proc(IWMPPlayer2*, IWMPCdromCollection*, HRESULT)
    get_closed_caption : Proc(IWMPPlayer2*, IWMPClosedCaption*, HRESULT)
    get_is_online : Proc(IWMPPlayer2*, Int16*, HRESULT)
    get_error : Proc(IWMPPlayer2*, IWMPError*, HRESULT)
    get_status : Proc(IWMPPlayer2*, UInt8**, HRESULT)
    get_enabled : Proc(IWMPPlayer2*, Int16*, HRESULT)
    put_enabled : Proc(IWMPPlayer2*, Int16, HRESULT)
    get_full_screen : Proc(IWMPPlayer2*, Int16*, HRESULT)
    put_full_screen : Proc(IWMPPlayer2*, Int16, HRESULT)
    get_enable_context_menu : Proc(IWMPPlayer2*, Int16*, HRESULT)
    put_enable_context_menu : Proc(IWMPPlayer2*, Int16, HRESULT)
    put_ui_mode : Proc(IWMPPlayer2*, UInt8*, HRESULT)
    get_ui_mode : Proc(IWMPPlayer2*, UInt8**, HRESULT)
    get_stretch_to_fit : Proc(IWMPPlayer2*, Int16*, HRESULT)
    put_stretch_to_fit : Proc(IWMPPlayer2*, Int16, HRESULT)
    get_windowless_video : Proc(IWMPPlayer2*, Int16*, HRESULT)
    put_windowless_video : Proc(IWMPPlayer2*, Int16, HRESULT)
  end

  IWMPPlayer2_GUID = LibC::GUID.new("0e6b01d1-d407-4c85-bf5f-1c01f6150280")
  CLSID_IWMPPlayer2 = "0e6b01d1-d407-4c85-bf5f-1c01f6150280"
  struct IWMPPlayer2
    lpVtbl : IWMPPlayer2VTbl*
  end

  struct IWMPMedia2VTbl
    query_interface : Proc(IWMPMedia2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPMedia2*, UInt32)
    release : Proc(IWMPMedia2*, UInt32)
    get_type_info_count : Proc(IWMPMedia2*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPMedia2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPMedia2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPMedia2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_is_identical : Proc(IWMPMedia2*, IWMPMedia, Int16*, HRESULT)
    get_source_url : Proc(IWMPMedia2*, UInt8**, HRESULT)
    get_name : Proc(IWMPMedia2*, UInt8**, HRESULT)
    put_name : Proc(IWMPMedia2*, UInt8*, HRESULT)
    get_image_source_width : Proc(IWMPMedia2*, Int32*, HRESULT)
    get_image_source_height : Proc(IWMPMedia2*, Int32*, HRESULT)
    get_marker_count : Proc(IWMPMedia2*, Int32*, HRESULT)
    get_marker_time : Proc(IWMPMedia2*, Int32, Float64*, HRESULT)
    get_marker_name : Proc(IWMPMedia2*, Int32, UInt8**, HRESULT)
    get_duration : Proc(IWMPMedia2*, Float64*, HRESULT)
    get_duration_string : Proc(IWMPMedia2*, UInt8**, HRESULT)
    get_attribute_count : Proc(IWMPMedia2*, Int32*, HRESULT)
    get_attribute_name : Proc(IWMPMedia2*, Int32, UInt8**, HRESULT)
    get_item_info : Proc(IWMPMedia2*, UInt8*, UInt8**, HRESULT)
    set_item_info : Proc(IWMPMedia2*, UInt8*, UInt8*, HRESULT)
    get_item_info_by_atom : Proc(IWMPMedia2*, Int32, UInt8**, HRESULT)
    is_member_of : Proc(IWMPMedia2*, IWMPPlaylist, Int16*, HRESULT)
    is_read_only_item : Proc(IWMPMedia2*, UInt8*, Int16*, HRESULT)
    get_error : Proc(IWMPMedia2*, IWMPErrorItem*, HRESULT)
  end

  IWMPMedia2_GUID = LibC::GUID.new("ab7c88bb-143e-4ea4-acc3-e4350b2106c3")
  CLSID_IWMPMedia2 = "ab7c88bb-143e-4ea4-acc3-e4350b2106c3"
  struct IWMPMedia2
    lpVtbl : IWMPMedia2VTbl*
  end

  struct IWMPControls2VTbl
    query_interface : Proc(IWMPControls2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPControls2*, UInt32)
    release : Proc(IWMPControls2*, UInt32)
    get_type_info_count : Proc(IWMPControls2*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPControls2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPControls2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPControls2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_is_available : Proc(IWMPControls2*, UInt8*, Int16*, HRESULT)
    play : Proc(IWMPControls2*, HRESULT)
    stop : Proc(IWMPControls2*, HRESULT)
    pause : Proc(IWMPControls2*, HRESULT)
    fast_forward : Proc(IWMPControls2*, HRESULT)
    fast_reverse : Proc(IWMPControls2*, HRESULT)
    get_current_position : Proc(IWMPControls2*, Float64*, HRESULT)
    put_current_position : Proc(IWMPControls2*, Float64, HRESULT)
    get_current_position_string : Proc(IWMPControls2*, UInt8**, HRESULT)
    next : Proc(IWMPControls2*, HRESULT)
    previous : Proc(IWMPControls2*, HRESULT)
    get_current_item : Proc(IWMPControls2*, IWMPMedia*, HRESULT)
    put_current_item : Proc(IWMPControls2*, IWMPMedia, HRESULT)
    get_current_marker : Proc(IWMPControls2*, Int32*, HRESULT)
    put_current_marker : Proc(IWMPControls2*, Int32, HRESULT)
    play_item : Proc(IWMPControls2*, IWMPMedia, HRESULT)
    step : Proc(IWMPControls2*, Int32, HRESULT)
  end

  IWMPControls2_GUID = LibC::GUID.new("6f030d25-0890-480f-9775-1f7e40ab5b8e")
  CLSID_IWMPControls2 = "6f030d25-0890-480f-9775-1f7e40ab5b8e"
  struct IWMPControls2
    lpVtbl : IWMPControls2VTbl*
  end

  struct IWMPDVDVTbl
    query_interface : Proc(IWMPDVD*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPDVD*, UInt32)
    release : Proc(IWMPDVD*, UInt32)
    get_type_info_count : Proc(IWMPDVD*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPDVD*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPDVD*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPDVD*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_is_available : Proc(IWMPDVD*, UInt8*, Int16*, HRESULT)
    get_domain : Proc(IWMPDVD*, UInt8**, HRESULT)
    top_menu : Proc(IWMPDVD*, HRESULT)
    title_menu : Proc(IWMPDVD*, HRESULT)
    back : Proc(IWMPDVD*, HRESULT)
    resume : Proc(IWMPDVD*, HRESULT)
  end

  IWMPDVD_GUID = LibC::GUID.new("8da61686-4668-4a5c-ae5d-803193293dbe")
  CLSID_IWMPDVD = "8da61686-4668-4a5c-ae5d-803193293dbe"
  struct IWMPDVD
    lpVtbl : IWMPDVDVTbl*
  end

  struct IWMPCore2VTbl
    query_interface : Proc(IWMPCore2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPCore2*, UInt32)
    release : Proc(IWMPCore2*, UInt32)
    get_type_info_count : Proc(IWMPCore2*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPCore2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPCore2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPCore2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    close : Proc(IWMPCore2*, HRESULT)
    get_url : Proc(IWMPCore2*, UInt8**, HRESULT)
    put_url : Proc(IWMPCore2*, UInt8*, HRESULT)
    get_open_state : Proc(IWMPCore2*, WMPOpenState*, HRESULT)
    get_play_state : Proc(IWMPCore2*, WMPPlayState*, HRESULT)
    get_controls : Proc(IWMPCore2*, IWMPControls*, HRESULT)
    get_settings : Proc(IWMPCore2*, IWMPSettings*, HRESULT)
    get_current_media : Proc(IWMPCore2*, IWMPMedia*, HRESULT)
    put_current_media : Proc(IWMPCore2*, IWMPMedia, HRESULT)
    get_media_collection : Proc(IWMPCore2*, IWMPMediaCollection*, HRESULT)
    get_playlist_collection : Proc(IWMPCore2*, IWMPPlaylistCollection*, HRESULT)
    get_version_info : Proc(IWMPCore2*, UInt8**, HRESULT)
    launch_url : Proc(IWMPCore2*, UInt8*, HRESULT)
    get_network : Proc(IWMPCore2*, IWMPNetwork*, HRESULT)
    get_current_playlist : Proc(IWMPCore2*, IWMPPlaylist*, HRESULT)
    put_current_playlist : Proc(IWMPCore2*, IWMPPlaylist, HRESULT)
    get_cdrom_collection : Proc(IWMPCore2*, IWMPCdromCollection*, HRESULT)
    get_closed_caption : Proc(IWMPCore2*, IWMPClosedCaption*, HRESULT)
    get_is_online : Proc(IWMPCore2*, Int16*, HRESULT)
    get_error : Proc(IWMPCore2*, IWMPError*, HRESULT)
    get_status : Proc(IWMPCore2*, UInt8**, HRESULT)
    get_dvd : Proc(IWMPCore2*, IWMPDVD*, HRESULT)
  end

  IWMPCore2_GUID = LibC::GUID.new("bc17e5b7-7561-4c18-bb90-17d485775659")
  CLSID_IWMPCore2 = "bc17e5b7-7561-4c18-bb90-17d485775659"
  struct IWMPCore2
    lpVtbl : IWMPCore2VTbl*
  end

  struct IWMPPlayer3VTbl
    query_interface : Proc(IWMPPlayer3*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPPlayer3*, UInt32)
    release : Proc(IWMPPlayer3*, UInt32)
    get_type_info_count : Proc(IWMPPlayer3*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPPlayer3*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPPlayer3*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPPlayer3*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    close : Proc(IWMPPlayer3*, HRESULT)
    get_url : Proc(IWMPPlayer3*, UInt8**, HRESULT)
    put_url : Proc(IWMPPlayer3*, UInt8*, HRESULT)
    get_open_state : Proc(IWMPPlayer3*, WMPOpenState*, HRESULT)
    get_play_state : Proc(IWMPPlayer3*, WMPPlayState*, HRESULT)
    get_controls : Proc(IWMPPlayer3*, IWMPControls*, HRESULT)
    get_settings : Proc(IWMPPlayer3*, IWMPSettings*, HRESULT)
    get_current_media : Proc(IWMPPlayer3*, IWMPMedia*, HRESULT)
    put_current_media : Proc(IWMPPlayer3*, IWMPMedia, HRESULT)
    get_media_collection : Proc(IWMPPlayer3*, IWMPMediaCollection*, HRESULT)
    get_playlist_collection : Proc(IWMPPlayer3*, IWMPPlaylistCollection*, HRESULT)
    get_version_info : Proc(IWMPPlayer3*, UInt8**, HRESULT)
    launch_url : Proc(IWMPPlayer3*, UInt8*, HRESULT)
    get_network : Proc(IWMPPlayer3*, IWMPNetwork*, HRESULT)
    get_current_playlist : Proc(IWMPPlayer3*, IWMPPlaylist*, HRESULT)
    put_current_playlist : Proc(IWMPPlayer3*, IWMPPlaylist, HRESULT)
    get_cdrom_collection : Proc(IWMPPlayer3*, IWMPCdromCollection*, HRESULT)
    get_closed_caption : Proc(IWMPPlayer3*, IWMPClosedCaption*, HRESULT)
    get_is_online : Proc(IWMPPlayer3*, Int16*, HRESULT)
    get_error : Proc(IWMPPlayer3*, IWMPError*, HRESULT)
    get_status : Proc(IWMPPlayer3*, UInt8**, HRESULT)
    get_dvd : Proc(IWMPPlayer3*, IWMPDVD*, HRESULT)
    get_enabled : Proc(IWMPPlayer3*, Int16*, HRESULT)
    put_enabled : Proc(IWMPPlayer3*, Int16, HRESULT)
    get_full_screen : Proc(IWMPPlayer3*, Int16*, HRESULT)
    put_full_screen : Proc(IWMPPlayer3*, Int16, HRESULT)
    get_enable_context_menu : Proc(IWMPPlayer3*, Int16*, HRESULT)
    put_enable_context_menu : Proc(IWMPPlayer3*, Int16, HRESULT)
    put_ui_mode : Proc(IWMPPlayer3*, UInt8*, HRESULT)
    get_ui_mode : Proc(IWMPPlayer3*, UInt8**, HRESULT)
    get_stretch_to_fit : Proc(IWMPPlayer3*, Int16*, HRESULT)
    put_stretch_to_fit : Proc(IWMPPlayer3*, Int16, HRESULT)
    get_windowless_video : Proc(IWMPPlayer3*, Int16*, HRESULT)
    put_windowless_video : Proc(IWMPPlayer3*, Int16, HRESULT)
  end

  IWMPPlayer3_GUID = LibC::GUID.new("54062b68-052a-4c25-a39f-8b63346511d4")
  CLSID_IWMPPlayer3 = "54062b68-052a-4c25-a39f-8b63346511d4"
  struct IWMPPlayer3
    lpVtbl : IWMPPlayer3VTbl*
  end

  struct IWMPErrorItem2VTbl
    query_interface : Proc(IWMPErrorItem2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPErrorItem2*, UInt32)
    release : Proc(IWMPErrorItem2*, UInt32)
    get_type_info_count : Proc(IWMPErrorItem2*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPErrorItem2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPErrorItem2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPErrorItem2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_error_code : Proc(IWMPErrorItem2*, Int32*, HRESULT)
    get_error_description : Proc(IWMPErrorItem2*, UInt8**, HRESULT)
    get_error_context : Proc(IWMPErrorItem2*, VARIANT*, HRESULT)
    get_remedy : Proc(IWMPErrorItem2*, Int32*, HRESULT)
    get_custom_url : Proc(IWMPErrorItem2*, UInt8**, HRESULT)
    get_condition : Proc(IWMPErrorItem2*, Int32*, HRESULT)
  end

  IWMPErrorItem2_GUID = LibC::GUID.new("f75ccec0-c67c-475c-931e-8719870bee7d")
  CLSID_IWMPErrorItem2 = "f75ccec0-c67c-475c-931e-8719870bee7d"
  struct IWMPErrorItem2
    lpVtbl : IWMPErrorItem2VTbl*
  end

  struct IWMPRemoteMediaServicesVTbl
    query_interface : Proc(IWMPRemoteMediaServices*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPRemoteMediaServices*, UInt32)
    release : Proc(IWMPRemoteMediaServices*, UInt32)
    get_service_type : Proc(IWMPRemoteMediaServices*, UInt8**, HRESULT)
    get_application_name : Proc(IWMPRemoteMediaServices*, UInt8**, HRESULT)
    get_scriptable_object : Proc(IWMPRemoteMediaServices*, UInt8**, IDispatch*, HRESULT)
    get_custom_ui_mode : Proc(IWMPRemoteMediaServices*, UInt8**, HRESULT)
  end

  IWMPRemoteMediaServices_GUID = LibC::GUID.new("cbb92747-741f-44fe-ab5b-f1a48f3b2a59")
  CLSID_IWMPRemoteMediaServices = "cbb92747-741f-44fe-ab5b-f1a48f3b2a59"
  struct IWMPRemoteMediaServices
    lpVtbl : IWMPRemoteMediaServicesVTbl*
  end

  struct IWMPSkinManagerVTbl
    query_interface : Proc(IWMPSkinManager*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPSkinManager*, UInt32)
    release : Proc(IWMPSkinManager*, UInt32)
    set_visual_style : Proc(IWMPSkinManager*, UInt8*, HRESULT)
  end

  IWMPSkinManager_GUID = LibC::GUID.new("076f2fa6-ed30-448b-8cc5-3f3ef3529c7a")
  CLSID_IWMPSkinManager = "076f2fa6-ed30-448b-8cc5-3f3ef3529c7a"
  struct IWMPSkinManager
    lpVtbl : IWMPSkinManagerVTbl*
  end

  struct IWMPMetadataPictureVTbl
    query_interface : Proc(IWMPMetadataPicture*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPMetadataPicture*, UInt32)
    release : Proc(IWMPMetadataPicture*, UInt32)
    get_type_info_count : Proc(IWMPMetadataPicture*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPMetadataPicture*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPMetadataPicture*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPMetadataPicture*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_mime_type : Proc(IWMPMetadataPicture*, UInt8**, HRESULT)
    get_picture_type : Proc(IWMPMetadataPicture*, UInt8**, HRESULT)
    get_description : Proc(IWMPMetadataPicture*, UInt8**, HRESULT)
    get_url : Proc(IWMPMetadataPicture*, UInt8**, HRESULT)
  end

  IWMPMetadataPicture_GUID = LibC::GUID.new("5c29bbe0-f87d-4c45-aa28-a70f0230ffa9")
  CLSID_IWMPMetadataPicture = "5c29bbe0-f87d-4c45-aa28-a70f0230ffa9"
  struct IWMPMetadataPicture
    lpVtbl : IWMPMetadataPictureVTbl*
  end

  struct IWMPMetadataTextVTbl
    query_interface : Proc(IWMPMetadataText*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPMetadataText*, UInt32)
    release : Proc(IWMPMetadataText*, UInt32)
    get_type_info_count : Proc(IWMPMetadataText*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPMetadataText*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPMetadataText*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPMetadataText*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_description : Proc(IWMPMetadataText*, UInt8**, HRESULT)
    get_text : Proc(IWMPMetadataText*, UInt8**, HRESULT)
  end

  IWMPMetadataText_GUID = LibC::GUID.new("769a72db-13d2-45e2-9c48-53ca9d5b7450")
  CLSID_IWMPMetadataText = "769a72db-13d2-45e2-9c48-53ca9d5b7450"
  struct IWMPMetadataText
    lpVtbl : IWMPMetadataTextVTbl*
  end

  struct IWMPMedia3VTbl
    query_interface : Proc(IWMPMedia3*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPMedia3*, UInt32)
    release : Proc(IWMPMedia3*, UInt32)
    get_type_info_count : Proc(IWMPMedia3*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPMedia3*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPMedia3*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPMedia3*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_is_identical : Proc(IWMPMedia3*, IWMPMedia, Int16*, HRESULT)
    get_source_url : Proc(IWMPMedia3*, UInt8**, HRESULT)
    get_name : Proc(IWMPMedia3*, UInt8**, HRESULT)
    put_name : Proc(IWMPMedia3*, UInt8*, HRESULT)
    get_image_source_width : Proc(IWMPMedia3*, Int32*, HRESULT)
    get_image_source_height : Proc(IWMPMedia3*, Int32*, HRESULT)
    get_marker_count : Proc(IWMPMedia3*, Int32*, HRESULT)
    get_marker_time : Proc(IWMPMedia3*, Int32, Float64*, HRESULT)
    get_marker_name : Proc(IWMPMedia3*, Int32, UInt8**, HRESULT)
    get_duration : Proc(IWMPMedia3*, Float64*, HRESULT)
    get_duration_string : Proc(IWMPMedia3*, UInt8**, HRESULT)
    get_attribute_count : Proc(IWMPMedia3*, Int32*, HRESULT)
    get_attribute_name : Proc(IWMPMedia3*, Int32, UInt8**, HRESULT)
    get_item_info : Proc(IWMPMedia3*, UInt8*, UInt8**, HRESULT)
    set_item_info : Proc(IWMPMedia3*, UInt8*, UInt8*, HRESULT)
    get_item_info_by_atom : Proc(IWMPMedia3*, Int32, UInt8**, HRESULT)
    is_member_of : Proc(IWMPMedia3*, IWMPPlaylist, Int16*, HRESULT)
    is_read_only_item : Proc(IWMPMedia3*, UInt8*, Int16*, HRESULT)
    get_error : Proc(IWMPMedia3*, IWMPErrorItem*, HRESULT)
    get_attribute_count_by_type : Proc(IWMPMedia3*, UInt8*, UInt8*, Int32*, HRESULT)
    get_item_info_by_type : Proc(IWMPMedia3*, UInt8*, UInt8*, Int32, VARIANT*, HRESULT)
  end

  IWMPMedia3_GUID = LibC::GUID.new("f118efc7-f03a-4fb4-99c9-1c02a5c1065b")
  CLSID_IWMPMedia3 = "f118efc7-f03a-4fb4-99c9-1c02a5c1065b"
  struct IWMPMedia3
    lpVtbl : IWMPMedia3VTbl*
  end

  struct IWMPSettings2VTbl
    query_interface : Proc(IWMPSettings2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPSettings2*, UInt32)
    release : Proc(IWMPSettings2*, UInt32)
    get_type_info_count : Proc(IWMPSettings2*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPSettings2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPSettings2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPSettings2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_is_available : Proc(IWMPSettings2*, UInt8*, Int16*, HRESULT)
    get_auto_start : Proc(IWMPSettings2*, Int16*, HRESULT)
    put_auto_start : Proc(IWMPSettings2*, Int16, HRESULT)
    get_base_url : Proc(IWMPSettings2*, UInt8**, HRESULT)
    put_base_url : Proc(IWMPSettings2*, UInt8*, HRESULT)
    get_default_frame : Proc(IWMPSettings2*, UInt8**, HRESULT)
    put_default_frame : Proc(IWMPSettings2*, UInt8*, HRESULT)
    get_invoke_ur_ls : Proc(IWMPSettings2*, Int16*, HRESULT)
    put_invoke_ur_ls : Proc(IWMPSettings2*, Int16, HRESULT)
    get_mute : Proc(IWMPSettings2*, Int16*, HRESULT)
    put_mute : Proc(IWMPSettings2*, Int16, HRESULT)
    get_play_count : Proc(IWMPSettings2*, Int32*, HRESULT)
    put_play_count : Proc(IWMPSettings2*, Int32, HRESULT)
    get_rate : Proc(IWMPSettings2*, Float64*, HRESULT)
    put_rate : Proc(IWMPSettings2*, Float64, HRESULT)
    get_balance : Proc(IWMPSettings2*, Int32*, HRESULT)
    put_balance : Proc(IWMPSettings2*, Int32, HRESULT)
    get_volume : Proc(IWMPSettings2*, Int32*, HRESULT)
    put_volume : Proc(IWMPSettings2*, Int32, HRESULT)
    get_mode : Proc(IWMPSettings2*, UInt8*, Int16*, HRESULT)
    set_mode : Proc(IWMPSettings2*, UInt8*, Int16, HRESULT)
    get_enable_error_dialogs : Proc(IWMPSettings2*, Int16*, HRESULT)
    put_enable_error_dialogs : Proc(IWMPSettings2*, Int16, HRESULT)
    get_default_audio_language : Proc(IWMPSettings2*, Int32*, HRESULT)
    get_media_access_rights : Proc(IWMPSettings2*, UInt8**, HRESULT)
    request_media_access_rights : Proc(IWMPSettings2*, UInt8*, Int16*, HRESULT)
  end

  IWMPSettings2_GUID = LibC::GUID.new("fda937a4-eece-4da5-a0b6-39bf89ade2c2")
  CLSID_IWMPSettings2 = "fda937a4-eece-4da5-a0b6-39bf89ade2c2"
  struct IWMPSettings2
    lpVtbl : IWMPSettings2VTbl*
  end

  struct IWMPControls3VTbl
    query_interface : Proc(IWMPControls3*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPControls3*, UInt32)
    release : Proc(IWMPControls3*, UInt32)
    get_type_info_count : Proc(IWMPControls3*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPControls3*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPControls3*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPControls3*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_is_available : Proc(IWMPControls3*, UInt8*, Int16*, HRESULT)
    play : Proc(IWMPControls3*, HRESULT)
    stop : Proc(IWMPControls3*, HRESULT)
    pause : Proc(IWMPControls3*, HRESULT)
    fast_forward : Proc(IWMPControls3*, HRESULT)
    fast_reverse : Proc(IWMPControls3*, HRESULT)
    get_current_position : Proc(IWMPControls3*, Float64*, HRESULT)
    put_current_position : Proc(IWMPControls3*, Float64, HRESULT)
    get_current_position_string : Proc(IWMPControls3*, UInt8**, HRESULT)
    next : Proc(IWMPControls3*, HRESULT)
    previous : Proc(IWMPControls3*, HRESULT)
    get_current_item : Proc(IWMPControls3*, IWMPMedia*, HRESULT)
    put_current_item : Proc(IWMPControls3*, IWMPMedia, HRESULT)
    get_current_marker : Proc(IWMPControls3*, Int32*, HRESULT)
    put_current_marker : Proc(IWMPControls3*, Int32, HRESULT)
    play_item : Proc(IWMPControls3*, IWMPMedia, HRESULT)
    step : Proc(IWMPControls3*, Int32, HRESULT)
    get_audio_language_count : Proc(IWMPControls3*, Int32*, HRESULT)
    get_audio_language_id : Proc(IWMPControls3*, Int32, Int32*, HRESULT)
    get_audio_language_description : Proc(IWMPControls3*, Int32, UInt8**, HRESULT)
    get_current_audio_language : Proc(IWMPControls3*, Int32*, HRESULT)
    put_current_audio_language : Proc(IWMPControls3*, Int32, HRESULT)
    get_current_audio_language_index : Proc(IWMPControls3*, Int32*, HRESULT)
    put_current_audio_language_index : Proc(IWMPControls3*, Int32, HRESULT)
    get_language_name : Proc(IWMPControls3*, Int32, UInt8**, HRESULT)
    get_current_position_timecode : Proc(IWMPControls3*, UInt8**, HRESULT)
    put_current_position_timecode : Proc(IWMPControls3*, UInt8*, HRESULT)
  end

  IWMPControls3_GUID = LibC::GUID.new("a1d1110e-d545-476a-9a78-ac3e4cb1e6bd")
  CLSID_IWMPControls3 = "a1d1110e-d545-476a-9a78-ac3e4cb1e6bd"
  struct IWMPControls3
    lpVtbl : IWMPControls3VTbl*
  end

  struct IWMPClosedCaption2VTbl
    query_interface : Proc(IWMPClosedCaption2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPClosedCaption2*, UInt32)
    release : Proc(IWMPClosedCaption2*, UInt32)
    get_type_info_count : Proc(IWMPClosedCaption2*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPClosedCaption2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPClosedCaption2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPClosedCaption2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_sami_style : Proc(IWMPClosedCaption2*, UInt8**, HRESULT)
    put_sami_style : Proc(IWMPClosedCaption2*, UInt8*, HRESULT)
    get_sami_lang : Proc(IWMPClosedCaption2*, UInt8**, HRESULT)
    put_sami_lang : Proc(IWMPClosedCaption2*, UInt8*, HRESULT)
    get_sami_file_name : Proc(IWMPClosedCaption2*, UInt8**, HRESULT)
    put_sami_file_name : Proc(IWMPClosedCaption2*, UInt8*, HRESULT)
    get_captioning_id : Proc(IWMPClosedCaption2*, UInt8**, HRESULT)
    put_captioning_id : Proc(IWMPClosedCaption2*, UInt8*, HRESULT)
    get_sami_lang_count : Proc(IWMPClosedCaption2*, Int32*, HRESULT)
    get_sami_lang_name : Proc(IWMPClosedCaption2*, Int32, UInt8**, HRESULT)
    get_sami_lang_id : Proc(IWMPClosedCaption2*, Int32, Int32*, HRESULT)
    get_sami_style_count : Proc(IWMPClosedCaption2*, Int32*, HRESULT)
    get_sami_style_name : Proc(IWMPClosedCaption2*, Int32, UInt8**, HRESULT)
  end

  IWMPClosedCaption2_GUID = LibC::GUID.new("350ba78b-6bc8-4113-a5f5-312056934eb6")
  CLSID_IWMPClosedCaption2 = "350ba78b-6bc8-4113-a5f5-312056934eb6"
  struct IWMPClosedCaption2
    lpVtbl : IWMPClosedCaption2VTbl*
  end

  struct IWMPPlayerApplicationVTbl
    query_interface : Proc(IWMPPlayerApplication*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPPlayerApplication*, UInt32)
    release : Proc(IWMPPlayerApplication*, UInt32)
    get_type_info_count : Proc(IWMPPlayerApplication*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPPlayerApplication*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPPlayerApplication*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPPlayerApplication*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    switch_to_player_application : Proc(IWMPPlayerApplication*, HRESULT)
    switch_to_control : Proc(IWMPPlayerApplication*, HRESULT)
    get_player_docked : Proc(IWMPPlayerApplication*, Int16*, HRESULT)
    get_has_display : Proc(IWMPPlayerApplication*, Int16*, HRESULT)
  end

  IWMPPlayerApplication_GUID = LibC::GUID.new("40897764-ceab-47be-ad4a-8e28537f9bbf")
  CLSID_IWMPPlayerApplication = "40897764-ceab-47be-ad4a-8e28537f9bbf"
  struct IWMPPlayerApplication
    lpVtbl : IWMPPlayerApplicationVTbl*
  end

  struct IWMPCore3VTbl
    query_interface : Proc(IWMPCore3*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPCore3*, UInt32)
    release : Proc(IWMPCore3*, UInt32)
    get_type_info_count : Proc(IWMPCore3*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPCore3*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPCore3*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPCore3*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    close : Proc(IWMPCore3*, HRESULT)
    get_url : Proc(IWMPCore3*, UInt8**, HRESULT)
    put_url : Proc(IWMPCore3*, UInt8*, HRESULT)
    get_open_state : Proc(IWMPCore3*, WMPOpenState*, HRESULT)
    get_play_state : Proc(IWMPCore3*, WMPPlayState*, HRESULT)
    get_controls : Proc(IWMPCore3*, IWMPControls*, HRESULT)
    get_settings : Proc(IWMPCore3*, IWMPSettings*, HRESULT)
    get_current_media : Proc(IWMPCore3*, IWMPMedia*, HRESULT)
    put_current_media : Proc(IWMPCore3*, IWMPMedia, HRESULT)
    get_media_collection : Proc(IWMPCore3*, IWMPMediaCollection*, HRESULT)
    get_playlist_collection : Proc(IWMPCore3*, IWMPPlaylistCollection*, HRESULT)
    get_version_info : Proc(IWMPCore3*, UInt8**, HRESULT)
    launch_url : Proc(IWMPCore3*, UInt8*, HRESULT)
    get_network : Proc(IWMPCore3*, IWMPNetwork*, HRESULT)
    get_current_playlist : Proc(IWMPCore3*, IWMPPlaylist*, HRESULT)
    put_current_playlist : Proc(IWMPCore3*, IWMPPlaylist, HRESULT)
    get_cdrom_collection : Proc(IWMPCore3*, IWMPCdromCollection*, HRESULT)
    get_closed_caption : Proc(IWMPCore3*, IWMPClosedCaption*, HRESULT)
    get_is_online : Proc(IWMPCore3*, Int16*, HRESULT)
    get_error : Proc(IWMPCore3*, IWMPError*, HRESULT)
    get_status : Proc(IWMPCore3*, UInt8**, HRESULT)
    get_dvd : Proc(IWMPCore3*, IWMPDVD*, HRESULT)
    new_playlist : Proc(IWMPCore3*, UInt8*, UInt8*, IWMPPlaylist*, HRESULT)
    new_media : Proc(IWMPCore3*, UInt8*, IWMPMedia*, HRESULT)
  end

  IWMPCore3_GUID = LibC::GUID.new("7587c667-628f-499f-88e7-6a6f4e888464")
  CLSID_IWMPCore3 = "7587c667-628f-499f-88e7-6a6f4e888464"
  struct IWMPCore3
    lpVtbl : IWMPCore3VTbl*
  end

  struct IWMPPlayer4VTbl
    query_interface : Proc(IWMPPlayer4*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPPlayer4*, UInt32)
    release : Proc(IWMPPlayer4*, UInt32)
    get_type_info_count : Proc(IWMPPlayer4*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPPlayer4*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPPlayer4*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPPlayer4*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    close : Proc(IWMPPlayer4*, HRESULT)
    get_url : Proc(IWMPPlayer4*, UInt8**, HRESULT)
    put_url : Proc(IWMPPlayer4*, UInt8*, HRESULT)
    get_open_state : Proc(IWMPPlayer4*, WMPOpenState*, HRESULT)
    get_play_state : Proc(IWMPPlayer4*, WMPPlayState*, HRESULT)
    get_controls : Proc(IWMPPlayer4*, IWMPControls*, HRESULT)
    get_settings : Proc(IWMPPlayer4*, IWMPSettings*, HRESULT)
    get_current_media : Proc(IWMPPlayer4*, IWMPMedia*, HRESULT)
    put_current_media : Proc(IWMPPlayer4*, IWMPMedia, HRESULT)
    get_media_collection : Proc(IWMPPlayer4*, IWMPMediaCollection*, HRESULT)
    get_playlist_collection : Proc(IWMPPlayer4*, IWMPPlaylistCollection*, HRESULT)
    get_version_info : Proc(IWMPPlayer4*, UInt8**, HRESULT)
    launch_url : Proc(IWMPPlayer4*, UInt8*, HRESULT)
    get_network : Proc(IWMPPlayer4*, IWMPNetwork*, HRESULT)
    get_current_playlist : Proc(IWMPPlayer4*, IWMPPlaylist*, HRESULT)
    put_current_playlist : Proc(IWMPPlayer4*, IWMPPlaylist, HRESULT)
    get_cdrom_collection : Proc(IWMPPlayer4*, IWMPCdromCollection*, HRESULT)
    get_closed_caption : Proc(IWMPPlayer4*, IWMPClosedCaption*, HRESULT)
    get_is_online : Proc(IWMPPlayer4*, Int16*, HRESULT)
    get_error : Proc(IWMPPlayer4*, IWMPError*, HRESULT)
    get_status : Proc(IWMPPlayer4*, UInt8**, HRESULT)
    get_dvd : Proc(IWMPPlayer4*, IWMPDVD*, HRESULT)
    new_playlist : Proc(IWMPPlayer4*, UInt8*, UInt8*, IWMPPlaylist*, HRESULT)
    new_media : Proc(IWMPPlayer4*, UInt8*, IWMPMedia*, HRESULT)
    get_enabled : Proc(IWMPPlayer4*, Int16*, HRESULT)
    put_enabled : Proc(IWMPPlayer4*, Int16, HRESULT)
    get_full_screen : Proc(IWMPPlayer4*, Int16*, HRESULT)
    put_full_screen : Proc(IWMPPlayer4*, Int16, HRESULT)
    get_enable_context_menu : Proc(IWMPPlayer4*, Int16*, HRESULT)
    put_enable_context_menu : Proc(IWMPPlayer4*, Int16, HRESULT)
    put_ui_mode : Proc(IWMPPlayer4*, UInt8*, HRESULT)
    get_ui_mode : Proc(IWMPPlayer4*, UInt8**, HRESULT)
    get_stretch_to_fit : Proc(IWMPPlayer4*, Int16*, HRESULT)
    put_stretch_to_fit : Proc(IWMPPlayer4*, Int16, HRESULT)
    get_windowless_video : Proc(IWMPPlayer4*, Int16*, HRESULT)
    put_windowless_video : Proc(IWMPPlayer4*, Int16, HRESULT)
    get_is_remote : Proc(IWMPPlayer4*, Int16*, HRESULT)
    get_player_application : Proc(IWMPPlayer4*, IWMPPlayerApplication*, HRESULT)
    open_player : Proc(IWMPPlayer4*, UInt8*, HRESULT)
  end

  IWMPPlayer4_GUID = LibC::GUID.new("6c497d62-8919-413c-82db-e935fb3ec584")
  CLSID_IWMPPlayer4 = "6c497d62-8919-413c-82db-e935fb3ec584"
  struct IWMPPlayer4
    lpVtbl : IWMPPlayer4VTbl*
  end

  struct IWMPPlayerServicesVTbl
    query_interface : Proc(IWMPPlayerServices*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPPlayerServices*, UInt32)
    release : Proc(IWMPPlayerServices*, UInt32)
    activate_ui_plugin : Proc(IWMPPlayerServices*, UInt8*, HRESULT)
    set_task_pane : Proc(IWMPPlayerServices*, UInt8*, HRESULT)
    set_task_pane_url : Proc(IWMPPlayerServices*, UInt8*, UInt8*, UInt8*, HRESULT)
  end

  IWMPPlayerServices_GUID = LibC::GUID.new("1d01fbdb-ade2-4c8d-9842-c190b95c3306")
  CLSID_IWMPPlayerServices = "1d01fbdb-ade2-4c8d-9842-c190b95c3306"
  struct IWMPPlayerServices
    lpVtbl : IWMPPlayerServicesVTbl*
  end

  struct IWMPSyncDeviceVTbl
    query_interface : Proc(IWMPSyncDevice*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPSyncDevice*, UInt32)
    release : Proc(IWMPSyncDevice*, UInt32)
    get_friendly_name : Proc(IWMPSyncDevice*, UInt8**, HRESULT)
    put_friendly_name : Proc(IWMPSyncDevice*, UInt8*, HRESULT)
    get_device_name : Proc(IWMPSyncDevice*, UInt8**, HRESULT)
    get_device_id : Proc(IWMPSyncDevice*, UInt8**, HRESULT)
    get_partnership_index : Proc(IWMPSyncDevice*, Int32*, HRESULT)
    get_connected : Proc(IWMPSyncDevice*, Int16*, HRESULT)
    get_status : Proc(IWMPSyncDevice*, WMPDeviceStatus*, HRESULT)
    get_sync_state : Proc(IWMPSyncDevice*, WMPSyncState*, HRESULT)
    get_progress : Proc(IWMPSyncDevice*, Int32*, HRESULT)
    get_item_info : Proc(IWMPSyncDevice*, UInt8*, UInt8**, HRESULT)
    create_partnership : Proc(IWMPSyncDevice*, Int16, HRESULT)
    delete_partnership : Proc(IWMPSyncDevice*, HRESULT)
    start : Proc(IWMPSyncDevice*, HRESULT)
    stop : Proc(IWMPSyncDevice*, HRESULT)
    show_settings : Proc(IWMPSyncDevice*, HRESULT)
    is_identical : Proc(IWMPSyncDevice*, IWMPSyncDevice, Int16*, HRESULT)
  end

  IWMPSyncDevice_GUID = LibC::GUID.new("82a2986c-0293-4fd0-b279-b21b86c058be")
  CLSID_IWMPSyncDevice = "82a2986c-0293-4fd0-b279-b21b86c058be"
  struct IWMPSyncDevice
    lpVtbl : IWMPSyncDeviceVTbl*
  end

  struct IWMPSyncServicesVTbl
    query_interface : Proc(IWMPSyncServices*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPSyncServices*, UInt32)
    release : Proc(IWMPSyncServices*, UInt32)
    get_device_count : Proc(IWMPSyncServices*, Int32*, HRESULT)
    get_device : Proc(IWMPSyncServices*, Int32, IWMPSyncDevice*, HRESULT)
  end

  IWMPSyncServices_GUID = LibC::GUID.new("8b5050ff-e0a4-4808-b3a8-893a9e1ed894")
  CLSID_IWMPSyncServices = "8b5050ff-e0a4-4808-b3a8-893a9e1ed894"
  struct IWMPSyncServices
    lpVtbl : IWMPSyncServicesVTbl*
  end

  struct IWMPPlayerServices2VTbl
    query_interface : Proc(IWMPPlayerServices2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPPlayerServices2*, UInt32)
    release : Proc(IWMPPlayerServices2*, UInt32)
    activate_ui_plugin : Proc(IWMPPlayerServices2*, UInt8*, HRESULT)
    set_task_pane : Proc(IWMPPlayerServices2*, UInt8*, HRESULT)
    set_task_pane_url : Proc(IWMPPlayerServices2*, UInt8*, UInt8*, UInt8*, HRESULT)
    set_background_processing_priority : Proc(IWMPPlayerServices2*, UInt8*, HRESULT)
  end

  IWMPPlayerServices2_GUID = LibC::GUID.new("1bb1592f-f040-418a-9f71-17c7512b4d70")
  CLSID_IWMPPlayerServices2 = "1bb1592f-f040-418a-9f71-17c7512b4d70"
  struct IWMPPlayerServices2
    lpVtbl : IWMPPlayerServices2VTbl*
  end

  struct IWMPCdromRipVTbl
    query_interface : Proc(IWMPCdromRip*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPCdromRip*, UInt32)
    release : Proc(IWMPCdromRip*, UInt32)
    get_rip_state : Proc(IWMPCdromRip*, WMPRipState*, HRESULT)
    get_rip_progress : Proc(IWMPCdromRip*, Int32*, HRESULT)
    start_rip : Proc(IWMPCdromRip*, HRESULT)
    stop_rip : Proc(IWMPCdromRip*, HRESULT)
  end

  IWMPCdromRip_GUID = LibC::GUID.new("56e2294f-69ed-4629-a869-aea72c0dcc2c")
  CLSID_IWMPCdromRip = "56e2294f-69ed-4629-a869-aea72c0dcc2c"
  struct IWMPCdromRip
    lpVtbl : IWMPCdromRipVTbl*
  end

  struct IWMPCdromBurnVTbl
    query_interface : Proc(IWMPCdromBurn*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPCdromBurn*, UInt32)
    release : Proc(IWMPCdromBurn*, UInt32)
    is_available : Proc(IWMPCdromBurn*, UInt8*, Int16*, HRESULT)
    get_item_info : Proc(IWMPCdromBurn*, UInt8*, UInt8**, HRESULT)
    get_label : Proc(IWMPCdromBurn*, UInt8**, HRESULT)
    put_label : Proc(IWMPCdromBurn*, UInt8*, HRESULT)
    get_burn_format : Proc(IWMPCdromBurn*, WMPBurnFormat*, HRESULT)
    put_burn_format : Proc(IWMPCdromBurn*, WMPBurnFormat, HRESULT)
    get_burn_playlist : Proc(IWMPCdromBurn*, IWMPPlaylist*, HRESULT)
    put_burn_playlist : Proc(IWMPCdromBurn*, IWMPPlaylist, HRESULT)
    refresh_status : Proc(IWMPCdromBurn*, HRESULT)
    get_burn_state : Proc(IWMPCdromBurn*, WMPBurnState*, HRESULT)
    get_burn_progress : Proc(IWMPCdromBurn*, Int32*, HRESULT)
    start_burn : Proc(IWMPCdromBurn*, HRESULT)
    stop_burn : Proc(IWMPCdromBurn*, HRESULT)
    erase : Proc(IWMPCdromBurn*, HRESULT)
  end

  IWMPCdromBurn_GUID = LibC::GUID.new("bd94dbeb-417f-4928-aa06-087d56ed9b59")
  CLSID_IWMPCdromBurn = "bd94dbeb-417f-4928-aa06-087d56ed9b59"
  struct IWMPCdromBurn
    lpVtbl : IWMPCdromBurnVTbl*
  end

  struct IWMPQueryVTbl
    query_interface : Proc(IWMPQuery*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPQuery*, UInt32)
    release : Proc(IWMPQuery*, UInt32)
    get_type_info_count : Proc(IWMPQuery*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPQuery*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPQuery*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPQuery*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    add_condition : Proc(IWMPQuery*, UInt8*, UInt8*, UInt8*, HRESULT)
    begin_next_group : Proc(IWMPQuery*, HRESULT)
  end

  IWMPQuery_GUID = LibC::GUID.new("a00918f3-a6b0-4bfb-9189-fd834c7bc5a5")
  CLSID_IWMPQuery = "a00918f3-a6b0-4bfb-9189-fd834c7bc5a5"
  struct IWMPQuery
    lpVtbl : IWMPQueryVTbl*
  end

  struct IWMPMediaCollection2VTbl
    query_interface : Proc(IWMPMediaCollection2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPMediaCollection2*, UInt32)
    release : Proc(IWMPMediaCollection2*, UInt32)
    get_type_info_count : Proc(IWMPMediaCollection2*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPMediaCollection2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPMediaCollection2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPMediaCollection2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    add : Proc(IWMPMediaCollection2*, UInt8*, IWMPMedia*, HRESULT)
    get_all : Proc(IWMPMediaCollection2*, IWMPPlaylist*, HRESULT)
    get_by_name : Proc(IWMPMediaCollection2*, UInt8*, IWMPPlaylist*, HRESULT)
    get_by_genre : Proc(IWMPMediaCollection2*, UInt8*, IWMPPlaylist*, HRESULT)
    get_by_author : Proc(IWMPMediaCollection2*, UInt8*, IWMPPlaylist*, HRESULT)
    get_by_album : Proc(IWMPMediaCollection2*, UInt8*, IWMPPlaylist*, HRESULT)
    get_by_attribute : Proc(IWMPMediaCollection2*, UInt8*, UInt8*, IWMPPlaylist*, HRESULT)
    remove : Proc(IWMPMediaCollection2*, IWMPMedia, Int16, HRESULT)
    get_attribute_string_collection : Proc(IWMPMediaCollection2*, UInt8*, UInt8*, IWMPStringCollection*, HRESULT)
    get_media_atom : Proc(IWMPMediaCollection2*, UInt8*, Int32*, HRESULT)
    set_deleted : Proc(IWMPMediaCollection2*, IWMPMedia, Int16, HRESULT)
    is_deleted : Proc(IWMPMediaCollection2*, IWMPMedia, Int16*, HRESULT)
    create_query : Proc(IWMPMediaCollection2*, IWMPQuery*, HRESULT)
    get_playlist_by_query : Proc(IWMPMediaCollection2*, IWMPQuery, UInt8*, UInt8*, Int16, IWMPPlaylist*, HRESULT)
    get_string_collection_by_query : Proc(IWMPMediaCollection2*, UInt8*, IWMPQuery, UInt8*, UInt8*, Int16, IWMPStringCollection*, HRESULT)
    get_by_attribute_and_media_type : Proc(IWMPMediaCollection2*, UInt8*, UInt8*, UInt8*, IWMPPlaylist*, HRESULT)
  end

  IWMPMediaCollection2_GUID = LibC::GUID.new("8ba957f5-fd8c-4791-b82d-f840401ee474")
  CLSID_IWMPMediaCollection2 = "8ba957f5-fd8c-4791-b82d-f840401ee474"
  struct IWMPMediaCollection2
    lpVtbl : IWMPMediaCollection2VTbl*
  end

  struct IWMPStringCollection2VTbl
    query_interface : Proc(IWMPStringCollection2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPStringCollection2*, UInt32)
    release : Proc(IWMPStringCollection2*, UInt32)
    get_type_info_count : Proc(IWMPStringCollection2*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPStringCollection2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPStringCollection2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPStringCollection2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_count : Proc(IWMPStringCollection2*, Int32*, HRESULT)
    item : Proc(IWMPStringCollection2*, Int32, UInt8**, HRESULT)
    is_identical : Proc(IWMPStringCollection2*, IWMPStringCollection2, Int16*, HRESULT)
    get_item_info : Proc(IWMPStringCollection2*, Int32, UInt8*, UInt8**, HRESULT)
    get_attribute_count_by_type : Proc(IWMPStringCollection2*, Int32, UInt8*, UInt8*, Int32*, HRESULT)
    get_item_info_by_type : Proc(IWMPStringCollection2*, Int32, UInt8*, UInt8*, Int32, VARIANT*, HRESULT)
  end

  IWMPStringCollection2_GUID = LibC::GUID.new("46ad648d-53f1-4a74-92e2-2a1b68d63fd4")
  CLSID_IWMPStringCollection2 = "46ad648d-53f1-4a74-92e2-2a1b68d63fd4"
  struct IWMPStringCollection2
    lpVtbl : IWMPStringCollection2VTbl*
  end

  struct IWMPLibraryVTbl
    query_interface : Proc(IWMPLibrary*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPLibrary*, UInt32)
    release : Proc(IWMPLibrary*, UInt32)
    get_name : Proc(IWMPLibrary*, UInt8**, HRESULT)
    get_type : Proc(IWMPLibrary*, WMPLibraryType*, HRESULT)
    get_media_collection : Proc(IWMPLibrary*, IWMPMediaCollection*, HRESULT)
    is_identical : Proc(IWMPLibrary*, IWMPLibrary, Int16*, HRESULT)
  end

  IWMPLibrary_GUID = LibC::GUID.new("3df47861-7df1-4c1f-a81b-4c26f0f7a7c6")
  CLSID_IWMPLibrary = "3df47861-7df1-4c1f-a81b-4c26f0f7a7c6"
  struct IWMPLibrary
    lpVtbl : IWMPLibraryVTbl*
  end

  struct IWMPLibraryServicesVTbl
    query_interface : Proc(IWMPLibraryServices*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPLibraryServices*, UInt32)
    release : Proc(IWMPLibraryServices*, UInt32)
    get_count_by_type : Proc(IWMPLibraryServices*, WMPLibraryType, Int32*, HRESULT)
    get_library_by_type : Proc(IWMPLibraryServices*, WMPLibraryType, Int32, IWMPLibrary*, HRESULT)
  end

  IWMPLibraryServices_GUID = LibC::GUID.new("39c2f8d5-1cf2-4d5e-ae09-d73492cf9eaa")
  CLSID_IWMPLibraryServices = "39c2f8d5-1cf2-4d5e-ae09-d73492cf9eaa"
  struct IWMPLibraryServices
    lpVtbl : IWMPLibraryServicesVTbl*
  end

  struct IWMPLibrarySharingServicesVTbl
    query_interface : Proc(IWMPLibrarySharingServices*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPLibrarySharingServices*, UInt32)
    release : Proc(IWMPLibrarySharingServices*, UInt32)
    is_library_shared : Proc(IWMPLibrarySharingServices*, Int16*, HRESULT)
    is_library_sharing_enabled : Proc(IWMPLibrarySharingServices*, Int16*, HRESULT)
    show_library_sharing : Proc(IWMPLibrarySharingServices*, HRESULT)
  end

  IWMPLibrarySharingServices_GUID = LibC::GUID.new("82cba86b-9f04-474b-a365-d6dd1466e541")
  CLSID_IWMPLibrarySharingServices = "82cba86b-9f04-474b-a365-d6dd1466e541"
  struct IWMPLibrarySharingServices
    lpVtbl : IWMPLibrarySharingServicesVTbl*
  end

  struct IWMPFolderMonitorServicesVTbl
    query_interface : Proc(IWMPFolderMonitorServices*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPFolderMonitorServices*, UInt32)
    release : Proc(IWMPFolderMonitorServices*, UInt32)
    get_count : Proc(IWMPFolderMonitorServices*, Int32*, HRESULT)
    item : Proc(IWMPFolderMonitorServices*, Int32, UInt8**, HRESULT)
    add : Proc(IWMPFolderMonitorServices*, UInt8*, HRESULT)
    remove : Proc(IWMPFolderMonitorServices*, Int32, HRESULT)
    get_scan_state : Proc(IWMPFolderMonitorServices*, WMPFolderScanState*, HRESULT)
    get_current_folder : Proc(IWMPFolderMonitorServices*, UInt8**, HRESULT)
    get_scanned_files_count : Proc(IWMPFolderMonitorServices*, Int32*, HRESULT)
    get_added_files_count : Proc(IWMPFolderMonitorServices*, Int32*, HRESULT)
    get_update_progress : Proc(IWMPFolderMonitorServices*, Int32*, HRESULT)
    start_scan : Proc(IWMPFolderMonitorServices*, HRESULT)
    stop_scan : Proc(IWMPFolderMonitorServices*, HRESULT)
  end

  IWMPFolderMonitorServices_GUID = LibC::GUID.new("788c8743-e57f-439d-a468-5bc77f2e59c6")
  CLSID_IWMPFolderMonitorServices = "788c8743-e57f-439d-a468-5bc77f2e59c6"
  struct IWMPFolderMonitorServices
    lpVtbl : IWMPFolderMonitorServicesVTbl*
  end

  struct IWMPSyncDevice2VTbl
    query_interface : Proc(IWMPSyncDevice2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPSyncDevice2*, UInt32)
    release : Proc(IWMPSyncDevice2*, UInt32)
    get_friendly_name : Proc(IWMPSyncDevice2*, UInt8**, HRESULT)
    put_friendly_name : Proc(IWMPSyncDevice2*, UInt8*, HRESULT)
    get_device_name : Proc(IWMPSyncDevice2*, UInt8**, HRESULT)
    get_device_id : Proc(IWMPSyncDevice2*, UInt8**, HRESULT)
    get_partnership_index : Proc(IWMPSyncDevice2*, Int32*, HRESULT)
    get_connected : Proc(IWMPSyncDevice2*, Int16*, HRESULT)
    get_status : Proc(IWMPSyncDevice2*, WMPDeviceStatus*, HRESULT)
    get_sync_state : Proc(IWMPSyncDevice2*, WMPSyncState*, HRESULT)
    get_progress : Proc(IWMPSyncDevice2*, Int32*, HRESULT)
    get_item_info : Proc(IWMPSyncDevice2*, UInt8*, UInt8**, HRESULT)
    create_partnership : Proc(IWMPSyncDevice2*, Int16, HRESULT)
    delete_partnership : Proc(IWMPSyncDevice2*, HRESULT)
    start : Proc(IWMPSyncDevice2*, HRESULT)
    stop : Proc(IWMPSyncDevice2*, HRESULT)
    show_settings : Proc(IWMPSyncDevice2*, HRESULT)
    is_identical : Proc(IWMPSyncDevice2*, IWMPSyncDevice, Int16*, HRESULT)
    set_item_info : Proc(IWMPSyncDevice2*, UInt8*, UInt8*, HRESULT)
  end

  IWMPSyncDevice2_GUID = LibC::GUID.new("88afb4b2-140a-44d2-91e6-4543da467cd1")
  CLSID_IWMPSyncDevice2 = "88afb4b2-140a-44d2-91e6-4543da467cd1"
  struct IWMPSyncDevice2
    lpVtbl : IWMPSyncDevice2VTbl*
  end

  struct IWMPSyncDevice3VTbl
    query_interface : Proc(IWMPSyncDevice3*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPSyncDevice3*, UInt32)
    release : Proc(IWMPSyncDevice3*, UInt32)
    get_friendly_name : Proc(IWMPSyncDevice3*, UInt8**, HRESULT)
    put_friendly_name : Proc(IWMPSyncDevice3*, UInt8*, HRESULT)
    get_device_name : Proc(IWMPSyncDevice3*, UInt8**, HRESULT)
    get_device_id : Proc(IWMPSyncDevice3*, UInt8**, HRESULT)
    get_partnership_index : Proc(IWMPSyncDevice3*, Int32*, HRESULT)
    get_connected : Proc(IWMPSyncDevice3*, Int16*, HRESULT)
    get_status : Proc(IWMPSyncDevice3*, WMPDeviceStatus*, HRESULT)
    get_sync_state : Proc(IWMPSyncDevice3*, WMPSyncState*, HRESULT)
    get_progress : Proc(IWMPSyncDevice3*, Int32*, HRESULT)
    get_item_info : Proc(IWMPSyncDevice3*, UInt8*, UInt8**, HRESULT)
    create_partnership : Proc(IWMPSyncDevice3*, Int16, HRESULT)
    delete_partnership : Proc(IWMPSyncDevice3*, HRESULT)
    start : Proc(IWMPSyncDevice3*, HRESULT)
    stop : Proc(IWMPSyncDevice3*, HRESULT)
    show_settings : Proc(IWMPSyncDevice3*, HRESULT)
    is_identical : Proc(IWMPSyncDevice3*, IWMPSyncDevice, Int16*, HRESULT)
    set_item_info : Proc(IWMPSyncDevice3*, UInt8*, UInt8*, HRESULT)
    estimate_sync_size : Proc(IWMPSyncDevice3*, IWMPPlaylist, IWMPPlaylist, HRESULT)
    cancel_estimation : Proc(IWMPSyncDevice3*, HRESULT)
  end

  IWMPSyncDevice3_GUID = LibC::GUID.new("b22c85f9-263c-4372-a0da-b518db9b4098")
  CLSID_IWMPSyncDevice3 = "b22c85f9-263c-4372-a0da-b518db9b4098"
  struct IWMPSyncDevice3
    lpVtbl : IWMPSyncDevice3VTbl*
  end

  struct IWMPLibrary2VTbl
    query_interface : Proc(IWMPLibrary2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPLibrary2*, UInt32)
    release : Proc(IWMPLibrary2*, UInt32)
    get_name : Proc(IWMPLibrary2*, UInt8**, HRESULT)
    get_type : Proc(IWMPLibrary2*, WMPLibraryType*, HRESULT)
    get_media_collection : Proc(IWMPLibrary2*, IWMPMediaCollection*, HRESULT)
    is_identical : Proc(IWMPLibrary2*, IWMPLibrary, Int16*, HRESULT)
    get_item_info : Proc(IWMPLibrary2*, UInt8*, UInt8**, HRESULT)
  end

  IWMPLibrary2_GUID = LibC::GUID.new("dd578a4e-79b1-426c-bf8f-3add9072500b")
  CLSID_IWMPLibrary2 = "dd578a4e-79b1-426c-bf8f-3add9072500b"
  struct IWMPLibrary2
    lpVtbl : IWMPLibrary2VTbl*
  end

  struct IWMPEventsVTbl
    query_interface : Proc(IWMPEvents*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPEvents*, UInt32)
    release : Proc(IWMPEvents*, UInt32)
    open_state_change : Proc(IWMPEvents*, Int32, Void)
    play_state_change : Proc(IWMPEvents*, Int32, Void)
    audio_language_change : Proc(IWMPEvents*, Int32, Void)
    status_change : Proc(IWMPEvents*, Void)
    script_command : Proc(IWMPEvents*, UInt8*, UInt8*, Void)
    new_stream : Proc(IWMPEvents*, Void)
    disconnect : Proc(IWMPEvents*, Int32, Void)
    buffering : Proc(IWMPEvents*, Int16, Void)
    error : Proc(IWMPEvents*, Void)
    warning : Proc(IWMPEvents*, Int32, Int32, UInt8*, Void)
    end_of_stream : Proc(IWMPEvents*, Int32, Void)
    position_change : Proc(IWMPEvents*, Float64, Float64, Void)
    marker_hit : Proc(IWMPEvents*, Int32, Void)
    duration_unit_change : Proc(IWMPEvents*, Int32, Void)
    cdrom_media_change : Proc(IWMPEvents*, Int32, Void)
    playlist_change : Proc(IWMPEvents*, IDispatch, WMPPlaylistChangeEventType, Void)
    current_playlist_change : Proc(IWMPEvents*, WMPPlaylistChangeEventType, Void)
    current_playlist_item_available : Proc(IWMPEvents*, UInt8*, Void)
    media_change : Proc(IWMPEvents*, IDispatch, Void)
    current_media_item_available : Proc(IWMPEvents*, UInt8*, Void)
    current_item_change : Proc(IWMPEvents*, IDispatch, Void)
    media_collection_change : Proc(IWMPEvents*, Void)
    media_collection_attribute_string_added : Proc(IWMPEvents*, UInt8*, UInt8*, Void)
    media_collection_attribute_string_removed : Proc(IWMPEvents*, UInt8*, UInt8*, Void)
    media_collection_attribute_string_changed : Proc(IWMPEvents*, UInt8*, UInt8*, UInt8*, Void)
    playlist_collection_change : Proc(IWMPEvents*, Void)
    playlist_collection_playlist_added : Proc(IWMPEvents*, UInt8*, Void)
    playlist_collection_playlist_removed : Proc(IWMPEvents*, UInt8*, Void)
    playlist_collection_playlist_set_as_deleted : Proc(IWMPEvents*, UInt8*, Int16, Void)
    mode_change : Proc(IWMPEvents*, UInt8*, Int16, Void)
    media_error : Proc(IWMPEvents*, IDispatch, Void)
    open_playlist_switch : Proc(IWMPEvents*, IDispatch, Void)
    domain_change : Proc(IWMPEvents*, UInt8*, Void)
    switched_to_player_application : Proc(IWMPEvents*, Void)
    switched_to_control : Proc(IWMPEvents*, Void)
    player_docked_state_change : Proc(IWMPEvents*, Void)
    player_reconnect : Proc(IWMPEvents*, Void)
    click : Proc(IWMPEvents*, Int16, Int16, Int32, Int32, Void)
    double_click : Proc(IWMPEvents*, Int16, Int16, Int32, Int32, Void)
    key_down : Proc(IWMPEvents*, Int16, Int16, Void)
    key_press : Proc(IWMPEvents*, Int16, Void)
    key_up : Proc(IWMPEvents*, Int16, Int16, Void)
    mouse_down : Proc(IWMPEvents*, Int16, Int16, Int32, Int32, Void)
    mouse_move : Proc(IWMPEvents*, Int16, Int16, Int32, Int32, Void)
    mouse_up : Proc(IWMPEvents*, Int16, Int16, Int32, Int32, Void)
  end

  IWMPEvents_GUID = LibC::GUID.new("19a6627b-da9e-47c1-bb23-00b5e668236a")
  CLSID_IWMPEvents = "19a6627b-da9e-47c1-bb23-00b5e668236a"
  struct IWMPEvents
    lpVtbl : IWMPEventsVTbl*
  end

  struct IWMPEvents2VTbl
    query_interface : Proc(IWMPEvents2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPEvents2*, UInt32)
    release : Proc(IWMPEvents2*, UInt32)
    open_state_change : Proc(IWMPEvents2*, Int32, Void)
    play_state_change : Proc(IWMPEvents2*, Int32, Void)
    audio_language_change : Proc(IWMPEvents2*, Int32, Void)
    status_change : Proc(IWMPEvents2*, Void)
    script_command : Proc(IWMPEvents2*, UInt8*, UInt8*, Void)
    new_stream : Proc(IWMPEvents2*, Void)
    disconnect : Proc(IWMPEvents2*, Int32, Void)
    buffering : Proc(IWMPEvents2*, Int16, Void)
    error : Proc(IWMPEvents2*, Void)
    warning : Proc(IWMPEvents2*, Int32, Int32, UInt8*, Void)
    end_of_stream : Proc(IWMPEvents2*, Int32, Void)
    position_change : Proc(IWMPEvents2*, Float64, Float64, Void)
    marker_hit : Proc(IWMPEvents2*, Int32, Void)
    duration_unit_change : Proc(IWMPEvents2*, Int32, Void)
    cdrom_media_change : Proc(IWMPEvents2*, Int32, Void)
    playlist_change : Proc(IWMPEvents2*, IDispatch, WMPPlaylistChangeEventType, Void)
    current_playlist_change : Proc(IWMPEvents2*, WMPPlaylistChangeEventType, Void)
    current_playlist_item_available : Proc(IWMPEvents2*, UInt8*, Void)
    media_change : Proc(IWMPEvents2*, IDispatch, Void)
    current_media_item_available : Proc(IWMPEvents2*, UInt8*, Void)
    current_item_change : Proc(IWMPEvents2*, IDispatch, Void)
    media_collection_change : Proc(IWMPEvents2*, Void)
    media_collection_attribute_string_added : Proc(IWMPEvents2*, UInt8*, UInt8*, Void)
    media_collection_attribute_string_removed : Proc(IWMPEvents2*, UInt8*, UInt8*, Void)
    media_collection_attribute_string_changed : Proc(IWMPEvents2*, UInt8*, UInt8*, UInt8*, Void)
    playlist_collection_change : Proc(IWMPEvents2*, Void)
    playlist_collection_playlist_added : Proc(IWMPEvents2*, UInt8*, Void)
    playlist_collection_playlist_removed : Proc(IWMPEvents2*, UInt8*, Void)
    playlist_collection_playlist_set_as_deleted : Proc(IWMPEvents2*, UInt8*, Int16, Void)
    mode_change : Proc(IWMPEvents2*, UInt8*, Int16, Void)
    media_error : Proc(IWMPEvents2*, IDispatch, Void)
    open_playlist_switch : Proc(IWMPEvents2*, IDispatch, Void)
    domain_change : Proc(IWMPEvents2*, UInt8*, Void)
    switched_to_player_application : Proc(IWMPEvents2*, Void)
    switched_to_control : Proc(IWMPEvents2*, Void)
    player_docked_state_change : Proc(IWMPEvents2*, Void)
    player_reconnect : Proc(IWMPEvents2*, Void)
    click : Proc(IWMPEvents2*, Int16, Int16, Int32, Int32, Void)
    double_click : Proc(IWMPEvents2*, Int16, Int16, Int32, Int32, Void)
    key_down : Proc(IWMPEvents2*, Int16, Int16, Void)
    key_press : Proc(IWMPEvents2*, Int16, Void)
    key_up : Proc(IWMPEvents2*, Int16, Int16, Void)
    mouse_down : Proc(IWMPEvents2*, Int16, Int16, Int32, Int32, Void)
    mouse_move : Proc(IWMPEvents2*, Int16, Int16, Int32, Int32, Void)
    mouse_up : Proc(IWMPEvents2*, Int16, Int16, Int32, Int32, Void)
    device_connect : Proc(IWMPEvents2*, IWMPSyncDevice, Void)
    device_disconnect : Proc(IWMPEvents2*, IWMPSyncDevice, Void)
    device_status_change : Proc(IWMPEvents2*, IWMPSyncDevice, WMPDeviceStatus, Void)
    device_sync_state_change : Proc(IWMPEvents2*, IWMPSyncDevice, WMPSyncState, Void)
    device_sync_error : Proc(IWMPEvents2*, IWMPSyncDevice, IDispatch, Void)
    create_partnership_complete : Proc(IWMPEvents2*, IWMPSyncDevice, HRESULT, Void)
  end

  IWMPEvents2_GUID = LibC::GUID.new("1e7601fa-47ea-4107-9ea9-9004ed9684ff")
  CLSID_IWMPEvents2 = "1e7601fa-47ea-4107-9ea9-9004ed9684ff"
  struct IWMPEvents2
    lpVtbl : IWMPEvents2VTbl*
  end

  struct IWMPEvents3VTbl
    query_interface : Proc(IWMPEvents3*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPEvents3*, UInt32)
    release : Proc(IWMPEvents3*, UInt32)
    open_state_change : Proc(IWMPEvents3*, Int32, Void)
    play_state_change : Proc(IWMPEvents3*, Int32, Void)
    audio_language_change : Proc(IWMPEvents3*, Int32, Void)
    status_change : Proc(IWMPEvents3*, Void)
    script_command : Proc(IWMPEvents3*, UInt8*, UInt8*, Void)
    new_stream : Proc(IWMPEvents3*, Void)
    disconnect : Proc(IWMPEvents3*, Int32, Void)
    buffering : Proc(IWMPEvents3*, Int16, Void)
    error : Proc(IWMPEvents3*, Void)
    warning : Proc(IWMPEvents3*, Int32, Int32, UInt8*, Void)
    end_of_stream : Proc(IWMPEvents3*, Int32, Void)
    position_change : Proc(IWMPEvents3*, Float64, Float64, Void)
    marker_hit : Proc(IWMPEvents3*, Int32, Void)
    duration_unit_change : Proc(IWMPEvents3*, Int32, Void)
    cdrom_media_change : Proc(IWMPEvents3*, Int32, Void)
    playlist_change : Proc(IWMPEvents3*, IDispatch, WMPPlaylistChangeEventType, Void)
    current_playlist_change : Proc(IWMPEvents3*, WMPPlaylistChangeEventType, Void)
    current_playlist_item_available : Proc(IWMPEvents3*, UInt8*, Void)
    media_change : Proc(IWMPEvents3*, IDispatch, Void)
    current_media_item_available : Proc(IWMPEvents3*, UInt8*, Void)
    current_item_change : Proc(IWMPEvents3*, IDispatch, Void)
    media_collection_change : Proc(IWMPEvents3*, Void)
    media_collection_attribute_string_added : Proc(IWMPEvents3*, UInt8*, UInt8*, Void)
    media_collection_attribute_string_removed : Proc(IWMPEvents3*, UInt8*, UInt8*, Void)
    media_collection_attribute_string_changed : Proc(IWMPEvents3*, UInt8*, UInt8*, UInt8*, Void)
    playlist_collection_change : Proc(IWMPEvents3*, Void)
    playlist_collection_playlist_added : Proc(IWMPEvents3*, UInt8*, Void)
    playlist_collection_playlist_removed : Proc(IWMPEvents3*, UInt8*, Void)
    playlist_collection_playlist_set_as_deleted : Proc(IWMPEvents3*, UInt8*, Int16, Void)
    mode_change : Proc(IWMPEvents3*, UInt8*, Int16, Void)
    media_error : Proc(IWMPEvents3*, IDispatch, Void)
    open_playlist_switch : Proc(IWMPEvents3*, IDispatch, Void)
    domain_change : Proc(IWMPEvents3*, UInt8*, Void)
    switched_to_player_application : Proc(IWMPEvents3*, Void)
    switched_to_control : Proc(IWMPEvents3*, Void)
    player_docked_state_change : Proc(IWMPEvents3*, Void)
    player_reconnect : Proc(IWMPEvents3*, Void)
    click : Proc(IWMPEvents3*, Int16, Int16, Int32, Int32, Void)
    double_click : Proc(IWMPEvents3*, Int16, Int16, Int32, Int32, Void)
    key_down : Proc(IWMPEvents3*, Int16, Int16, Void)
    key_press : Proc(IWMPEvents3*, Int16, Void)
    key_up : Proc(IWMPEvents3*, Int16, Int16, Void)
    mouse_down : Proc(IWMPEvents3*, Int16, Int16, Int32, Int32, Void)
    mouse_move : Proc(IWMPEvents3*, Int16, Int16, Int32, Int32, Void)
    mouse_up : Proc(IWMPEvents3*, Int16, Int16, Int32, Int32, Void)
    device_connect : Proc(IWMPEvents3*, IWMPSyncDevice, Void)
    device_disconnect : Proc(IWMPEvents3*, IWMPSyncDevice, Void)
    device_status_change : Proc(IWMPEvents3*, IWMPSyncDevice, WMPDeviceStatus, Void)
    device_sync_state_change : Proc(IWMPEvents3*, IWMPSyncDevice, WMPSyncState, Void)
    device_sync_error : Proc(IWMPEvents3*, IWMPSyncDevice, IDispatch, Void)
    create_partnership_complete : Proc(IWMPEvents3*, IWMPSyncDevice, HRESULT, Void)
    cdrom_rip_state_change : Proc(IWMPEvents3*, IWMPCdromRip, WMPRipState, Void)
    cdrom_rip_media_error : Proc(IWMPEvents3*, IWMPCdromRip, IDispatch, Void)
    cdrom_burn_state_change : Proc(IWMPEvents3*, IWMPCdromBurn, WMPBurnState, Void)
    cdrom_burn_media_error : Proc(IWMPEvents3*, IWMPCdromBurn, IDispatch, Void)
    cdrom_burn_error : Proc(IWMPEvents3*, IWMPCdromBurn, HRESULT, Void)
    library_connect : Proc(IWMPEvents3*, IWMPLibrary, Void)
    library_disconnect : Proc(IWMPEvents3*, IWMPLibrary, Void)
    folder_scan_state_change : Proc(IWMPEvents3*, WMPFolderScanState, Void)
    string_collection_change : Proc(IWMPEvents3*, IDispatch, WMPStringCollectionChangeEventType, Int32, Void)
    media_collection_media_added : Proc(IWMPEvents3*, IDispatch, Void)
    media_collection_media_removed : Proc(IWMPEvents3*, IDispatch, Void)
  end

  IWMPEvents3_GUID = LibC::GUID.new("1f504270-a66b-4223-8e96-26a06c63d69f")
  CLSID_IWMPEvents3 = "1f504270-a66b-4223-8e96-26a06c63d69f"
  struct IWMPEvents3
    lpVtbl : IWMPEvents3VTbl*
  end

  struct IWMPEvents4VTbl
    query_interface : Proc(IWMPEvents4*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPEvents4*, UInt32)
    release : Proc(IWMPEvents4*, UInt32)
    open_state_change : Proc(IWMPEvents4*, Int32, Void)
    play_state_change : Proc(IWMPEvents4*, Int32, Void)
    audio_language_change : Proc(IWMPEvents4*, Int32, Void)
    status_change : Proc(IWMPEvents4*, Void)
    script_command : Proc(IWMPEvents4*, UInt8*, UInt8*, Void)
    new_stream : Proc(IWMPEvents4*, Void)
    disconnect : Proc(IWMPEvents4*, Int32, Void)
    buffering : Proc(IWMPEvents4*, Int16, Void)
    error : Proc(IWMPEvents4*, Void)
    warning : Proc(IWMPEvents4*, Int32, Int32, UInt8*, Void)
    end_of_stream : Proc(IWMPEvents4*, Int32, Void)
    position_change : Proc(IWMPEvents4*, Float64, Float64, Void)
    marker_hit : Proc(IWMPEvents4*, Int32, Void)
    duration_unit_change : Proc(IWMPEvents4*, Int32, Void)
    cdrom_media_change : Proc(IWMPEvents4*, Int32, Void)
    playlist_change : Proc(IWMPEvents4*, IDispatch, WMPPlaylistChangeEventType, Void)
    current_playlist_change : Proc(IWMPEvents4*, WMPPlaylistChangeEventType, Void)
    current_playlist_item_available : Proc(IWMPEvents4*, UInt8*, Void)
    media_change : Proc(IWMPEvents4*, IDispatch, Void)
    current_media_item_available : Proc(IWMPEvents4*, UInt8*, Void)
    current_item_change : Proc(IWMPEvents4*, IDispatch, Void)
    media_collection_change : Proc(IWMPEvents4*, Void)
    media_collection_attribute_string_added : Proc(IWMPEvents4*, UInt8*, UInt8*, Void)
    media_collection_attribute_string_removed : Proc(IWMPEvents4*, UInt8*, UInt8*, Void)
    media_collection_attribute_string_changed : Proc(IWMPEvents4*, UInt8*, UInt8*, UInt8*, Void)
    playlist_collection_change : Proc(IWMPEvents4*, Void)
    playlist_collection_playlist_added : Proc(IWMPEvents4*, UInt8*, Void)
    playlist_collection_playlist_removed : Proc(IWMPEvents4*, UInt8*, Void)
    playlist_collection_playlist_set_as_deleted : Proc(IWMPEvents4*, UInt8*, Int16, Void)
    mode_change : Proc(IWMPEvents4*, UInt8*, Int16, Void)
    media_error : Proc(IWMPEvents4*, IDispatch, Void)
    open_playlist_switch : Proc(IWMPEvents4*, IDispatch, Void)
    domain_change : Proc(IWMPEvents4*, UInt8*, Void)
    switched_to_player_application : Proc(IWMPEvents4*, Void)
    switched_to_control : Proc(IWMPEvents4*, Void)
    player_docked_state_change : Proc(IWMPEvents4*, Void)
    player_reconnect : Proc(IWMPEvents4*, Void)
    click : Proc(IWMPEvents4*, Int16, Int16, Int32, Int32, Void)
    double_click : Proc(IWMPEvents4*, Int16, Int16, Int32, Int32, Void)
    key_down : Proc(IWMPEvents4*, Int16, Int16, Void)
    key_press : Proc(IWMPEvents4*, Int16, Void)
    key_up : Proc(IWMPEvents4*, Int16, Int16, Void)
    mouse_down : Proc(IWMPEvents4*, Int16, Int16, Int32, Int32, Void)
    mouse_move : Proc(IWMPEvents4*, Int16, Int16, Int32, Int32, Void)
    mouse_up : Proc(IWMPEvents4*, Int16, Int16, Int32, Int32, Void)
    device_connect : Proc(IWMPEvents4*, IWMPSyncDevice, Void)
    device_disconnect : Proc(IWMPEvents4*, IWMPSyncDevice, Void)
    device_status_change : Proc(IWMPEvents4*, IWMPSyncDevice, WMPDeviceStatus, Void)
    device_sync_state_change : Proc(IWMPEvents4*, IWMPSyncDevice, WMPSyncState, Void)
    device_sync_error : Proc(IWMPEvents4*, IWMPSyncDevice, IDispatch, Void)
    create_partnership_complete : Proc(IWMPEvents4*, IWMPSyncDevice, HRESULT, Void)
    cdrom_rip_state_change : Proc(IWMPEvents4*, IWMPCdromRip, WMPRipState, Void)
    cdrom_rip_media_error : Proc(IWMPEvents4*, IWMPCdromRip, IDispatch, Void)
    cdrom_burn_state_change : Proc(IWMPEvents4*, IWMPCdromBurn, WMPBurnState, Void)
    cdrom_burn_media_error : Proc(IWMPEvents4*, IWMPCdromBurn, IDispatch, Void)
    cdrom_burn_error : Proc(IWMPEvents4*, IWMPCdromBurn, HRESULT, Void)
    library_connect : Proc(IWMPEvents4*, IWMPLibrary, Void)
    library_disconnect : Proc(IWMPEvents4*, IWMPLibrary, Void)
    folder_scan_state_change : Proc(IWMPEvents4*, WMPFolderScanState, Void)
    string_collection_change : Proc(IWMPEvents4*, IDispatch, WMPStringCollectionChangeEventType, Int32, Void)
    media_collection_media_added : Proc(IWMPEvents4*, IDispatch, Void)
    media_collection_media_removed : Proc(IWMPEvents4*, IDispatch, Void)
    device_estimation : Proc(IWMPEvents4*, IWMPSyncDevice, HRESULT, Int64, Int64, Void)
  end

  IWMPEvents4_GUID = LibC::GUID.new("26dabcfa-306b-404d-9a6f-630a8405048d")
  CLSID_IWMPEvents4 = "26dabcfa-306b-404d-9a6f-630a8405048d"
  struct IWMPEvents4
    lpVtbl : IWMPEvents4VTbl*
  end

  struct IWMPOCXEventsVTbl
    query_interface : Proc(IWMPOCXEvents*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPOCXEvents*, UInt32)
    release : Proc(IWMPOCXEvents*, UInt32)
    get_type_info_count : Proc(IWMPOCXEvents*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPOCXEvents*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPOCXEvents*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPOCXEvents*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
  end

  IWMPOCXEvents_GUID = LibC::GUID.new("6bf52a51-394a-11d3-b153-00c04f79faa6")
  CLSID_IWMPOCXEvents = "6bf52a51-394a-11d3-b153-00c04f79faa6"
  struct IWMPOCXEvents
    lpVtbl : IWMPOCXEventsVTbl*
  end

  struct IWMPNodeRealEstateVTbl
    query_interface : Proc(IWMPNodeRealEstate*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPNodeRealEstate*, UInt32)
    release : Proc(IWMPNodeRealEstate*, UInt32)
    get_desired_size : Proc(IWMPNodeRealEstate*, SIZE*, HRESULT)
    set_rects : Proc(IWMPNodeRealEstate*, RECT*, RECT*, RECT*, HRESULT)
    get_rects : Proc(IWMPNodeRealEstate*, RECT*, RECT*, RECT*, HRESULT)
    set_windowless : Proc(IWMPNodeRealEstate*, LibC::BOOL, HRESULT)
    get_windowless : Proc(IWMPNodeRealEstate*, LibC::BOOL*, HRESULT)
    set_full_screen : Proc(IWMPNodeRealEstate*, LibC::BOOL, HRESULT)
    get_full_screen : Proc(IWMPNodeRealEstate*, LibC::BOOL*, HRESULT)
  end

  IWMPNodeRealEstate_GUID = LibC::GUID.new("42751198-5a50-4460-bcb4-709f8bdc8e59")
  CLSID_IWMPNodeRealEstate = "42751198-5a50-4460-bcb4-709f8bdc8e59"
  struct IWMPNodeRealEstate
    lpVtbl : IWMPNodeRealEstateVTbl*
  end

  struct IWMPNodeRealEstateHostVTbl
    query_interface : Proc(IWMPNodeRealEstateHost*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPNodeRealEstateHost*, UInt32)
    release : Proc(IWMPNodeRealEstateHost*, UInt32)
    on_desired_size_change : Proc(IWMPNodeRealEstateHost*, SIZE*, HRESULT)
    on_full_screen_transition : Proc(IWMPNodeRealEstateHost*, LibC::BOOL, HRESULT)
  end

  IWMPNodeRealEstateHost_GUID = LibC::GUID.new("1491087d-2c6b-44c8-b019-b3c929d2ada9")
  CLSID_IWMPNodeRealEstateHost = "1491087d-2c6b-44c8-b019-b3c929d2ada9"
  struct IWMPNodeRealEstateHost
    lpVtbl : IWMPNodeRealEstateHostVTbl*
  end

  struct IWMPNodeWindowedVTbl
    query_interface : Proc(IWMPNodeWindowed*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPNodeWindowed*, UInt32)
    release : Proc(IWMPNodeWindowed*, UInt32)
    set_owner_window : Proc(IWMPNodeWindowed*, LibC::IntPtrT, HRESULT)
    get_owner_window : Proc(IWMPNodeWindowed*, LibC::IntPtrT*, HRESULT)
  end

  IWMPNodeWindowed_GUID = LibC::GUID.new("96740bfa-c56a-45d1-a3a4-762914d4ade9")
  CLSID_IWMPNodeWindowed = "96740bfa-c56a-45d1-a3a4-762914d4ade9"
  struct IWMPNodeWindowed
    lpVtbl : IWMPNodeWindowedVTbl*
  end

  struct IWMPNodeWindowedHostVTbl
    query_interface : Proc(IWMPNodeWindowedHost*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPNodeWindowedHost*, UInt32)
    release : Proc(IWMPNodeWindowedHost*, UInt32)
    on_window_message_from_renderer : Proc(IWMPNodeWindowedHost*, UInt32, LibC::UINT_PTR, LPARAM, LRESULT*, LibC::BOOL*, HRESULT)
  end

  IWMPNodeWindowedHost_GUID = LibC::GUID.new("a300415a-54aa-4081-adbf-3b13610d8958")
  CLSID_IWMPNodeWindowedHost = "a300415a-54aa-4081-adbf-3b13610d8958"
  struct IWMPNodeWindowedHost
    lpVtbl : IWMPNodeWindowedHostVTbl*
  end

  struct IWMPWindowMessageSinkVTbl
    query_interface : Proc(IWMPWindowMessageSink*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPWindowMessageSink*, UInt32)
    release : Proc(IWMPWindowMessageSink*, UInt32)
    on_window_message : Proc(IWMPWindowMessageSink*, UInt32, LibC::UINT_PTR, LPARAM, LRESULT*, LibC::BOOL*, HRESULT)
  end

  IWMPWindowMessageSink_GUID = LibC::GUID.new("3a0daa30-908d-4789-ba87-aed879b5c49b")
  CLSID_IWMPWindowMessageSink = "3a0daa30-908d-4789-ba87-aed879b5c49b"
  struct IWMPWindowMessageSink
    lpVtbl : IWMPWindowMessageSinkVTbl*
  end

  struct IWMPNodeWindowlessVTbl
    query_interface : Proc(IWMPNodeWindowless*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPNodeWindowless*, UInt32)
    release : Proc(IWMPNodeWindowless*, UInt32)
    on_window_message : Proc(IWMPNodeWindowless*, UInt32, LibC::UINT_PTR, LPARAM, LRESULT*, LibC::BOOL*, HRESULT)
    on_draw : Proc(IWMPNodeWindowless*, LibC::IntPtrT, RECT*, HRESULT)
  end

  IWMPNodeWindowless_GUID = LibC::GUID.new("9b9199ad-780c-4eda-b816-261eba5d1575")
  CLSID_IWMPNodeWindowless = "9b9199ad-780c-4eda-b816-261eba5d1575"
  struct IWMPNodeWindowless
    lpVtbl : IWMPNodeWindowlessVTbl*
  end

  struct IWMPNodeWindowlessHostVTbl
    query_interface : Proc(IWMPNodeWindowlessHost*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPNodeWindowlessHost*, UInt32)
    release : Proc(IWMPNodeWindowlessHost*, UInt32)
    invalidate_rect : Proc(IWMPNodeWindowlessHost*, RECT*, LibC::BOOL, HRESULT)
  end

  IWMPNodeWindowlessHost_GUID = LibC::GUID.new("be7017c6-ce34-4901-8106-770381aa6e3e")
  CLSID_IWMPNodeWindowlessHost = "be7017c6-ce34-4901-8106-770381aa6e3e"
  struct IWMPNodeWindowlessHost
    lpVtbl : IWMPNodeWindowlessHostVTbl*
  end

  struct IWMPVideoRenderConfigVTbl
    query_interface : Proc(IWMPVideoRenderConfig*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPVideoRenderConfig*, UInt32)
    release : Proc(IWMPVideoRenderConfig*, UInt32)
    put_presenter_activate : Proc(IWMPVideoRenderConfig*, IMFActivate, HRESULT)
  end

  IWMPVideoRenderConfig_GUID = LibC::GUID.new("6d6cf803-1ec0-4c8d-b3ca-f18e27282074")
  CLSID_IWMPVideoRenderConfig = "6d6cf803-1ec0-4c8d-b3ca-f18e27282074"
  struct IWMPVideoRenderConfig
    lpVtbl : IWMPVideoRenderConfigVTbl*
  end

  struct IWMPAudioRenderConfigVTbl
    query_interface : Proc(IWMPAudioRenderConfig*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPAudioRenderConfig*, UInt32)
    release : Proc(IWMPAudioRenderConfig*, UInt32)
    get_audio_output_device : Proc(IWMPAudioRenderConfig*, UInt8**, HRESULT)
    put_audio_output_device : Proc(IWMPAudioRenderConfig*, UInt8*, HRESULT)
  end

  IWMPAudioRenderConfig_GUID = LibC::GUID.new("e79c6349-5997-4ce4-917c-22a3391ec564")
  CLSID_IWMPAudioRenderConfig = "e79c6349-5997-4ce4-917c-22a3391ec564"
  struct IWMPAudioRenderConfig
    lpVtbl : IWMPAudioRenderConfigVTbl*
  end

  struct IWMPRenderConfigVTbl
    query_interface : Proc(IWMPRenderConfig*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPRenderConfig*, UInt32)
    release : Proc(IWMPRenderConfig*, UInt32)
    put_in_proc_only : Proc(IWMPRenderConfig*, LibC::BOOL, HRESULT)
    get_in_proc_only : Proc(IWMPRenderConfig*, LibC::BOOL*, HRESULT)
  end

  IWMPRenderConfig_GUID = LibC::GUID.new("959506c1-0314-4ec5-9e61-8528db5e5478")
  CLSID_IWMPRenderConfig = "959506c1-0314-4ec5-9e61-8528db5e5478"
  struct IWMPRenderConfig
    lpVtbl : IWMPRenderConfigVTbl*
  end

  struct IWMPServicesVTbl
    query_interface : Proc(IWMPServices*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPServices*, UInt32)
    release : Proc(IWMPServices*, UInt32)
    get_stream_time : Proc(IWMPServices*, Int64*, HRESULT)
    get_stream_state : Proc(IWMPServices*, WMPServices_StreamState*, HRESULT)
  end

  IWMPServices_GUID = LibC::GUID.new("afb6b76b-1e20-4198-83b3-191db6e0b149")
  CLSID_IWMPServices = "afb6b76b-1e20-4198-83b3-191db6e0b149"
  struct IWMPServices
    lpVtbl : IWMPServicesVTbl*
  end

  struct IWMPMediaPluginRegistrarVTbl
    query_interface : Proc(IWMPMediaPluginRegistrar*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPMediaPluginRegistrar*, UInt32)
    release : Proc(IWMPMediaPluginRegistrar*, UInt32)
    wmp_register_player_plugin : Proc(IWMPMediaPluginRegistrar*, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, UInt32, Guid, Guid, UInt32, Void*, HRESULT)
    wmp_un_register_player_plugin : Proc(IWMPMediaPluginRegistrar*, Guid, Guid, HRESULT)
  end

  IWMPMediaPluginRegistrar_GUID = LibC::GUID.new("68e27045-05bd-40b2-9720-23088c78e390")
  CLSID_IWMPMediaPluginRegistrar = "68e27045-05bd-40b2-9720-23088c78e390"
  struct IWMPMediaPluginRegistrar
    lpVtbl : IWMPMediaPluginRegistrarVTbl*
  end

  struct IWMPPluginVTbl
    query_interface : Proc(IWMPPlugin*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPPlugin*, UInt32)
    release : Proc(IWMPPlugin*, UInt32)
    init : Proc(IWMPPlugin*, LibC::UINT_PTR, HRESULT)
    shutdown : Proc(IWMPPlugin*, HRESULT)
    get_id : Proc(IWMPPlugin*, Guid*, HRESULT)
    get_caps : Proc(IWMPPlugin*, UInt32*, HRESULT)
    advise_wmp_services : Proc(IWMPPlugin*, IWMPServices, HRESULT)
    un_advise_wmp_services : Proc(IWMPPlugin*, HRESULT)
  end

  IWMPPlugin_GUID = LibC::GUID.new("f1392a70-024c-42bb-a998-73dfdfe7d5a7")
  CLSID_IWMPPlugin = "f1392a70-024c-42bb-a998-73dfdfe7d5a7"
  struct IWMPPlugin
    lpVtbl : IWMPPluginVTbl*
  end

  struct IWMPPluginEnableVTbl
    query_interface : Proc(IWMPPluginEnable*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPPluginEnable*, UInt32)
    release : Proc(IWMPPluginEnable*, UInt32)
    set_enable : Proc(IWMPPluginEnable*, LibC::BOOL, HRESULT)
    get_enable : Proc(IWMPPluginEnable*, LibC::BOOL*, HRESULT)
  end

  IWMPPluginEnable_GUID = LibC::GUID.new("5fca444c-7ad1-479d-a4ef-40566a5309d6")
  CLSID_IWMPPluginEnable = "5fca444c-7ad1-479d-a4ef-40566a5309d6"
  struct IWMPPluginEnable
    lpVtbl : IWMPPluginEnableVTbl*
  end

  struct IWMPGraphCreationVTbl
    query_interface : Proc(IWMPGraphCreation*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPGraphCreation*, UInt32)
    release : Proc(IWMPGraphCreation*, UInt32)
    graph_creation_pre_render : Proc(IWMPGraphCreation*, IUnknown, IUnknown, HRESULT)
    graph_creation_post_render : Proc(IWMPGraphCreation*, IUnknown, HRESULT)
    get_graph_creation_flags : Proc(IWMPGraphCreation*, UInt32*, HRESULT)
  end

  IWMPGraphCreation_GUID = LibC::GUID.new("bfb377e5-c594-4369-a970-de896d5ece74")
  CLSID_IWMPGraphCreation = "bfb377e5-c594-4369-a970-de896d5ece74"
  struct IWMPGraphCreation
    lpVtbl : IWMPGraphCreationVTbl*
  end

  struct IWMPConvertVTbl
    query_interface : Proc(IWMPConvert*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPConvert*, UInt32)
    release : Proc(IWMPConvert*, UInt32)
    convert_file : Proc(IWMPConvert*, UInt8*, UInt8*, UInt8**, HRESULT)
    get_error_url : Proc(IWMPConvert*, UInt8**, HRESULT)
  end

  IWMPConvert_GUID = LibC::GUID.new("d683162f-57d4-4108-8373-4a9676d1c2e9")
  CLSID_IWMPConvert = "d683162f-57d4-4108-8373-4a9676d1c2e9"
  struct IWMPConvert
    lpVtbl : IWMPConvertVTbl*
  end

  struct IWMPTranscodePolicyVTbl
    query_interface : Proc(IWMPTranscodePolicy*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPTranscodePolicy*, UInt32)
    release : Proc(IWMPTranscodePolicy*, UInt32)
    allow_transcode : Proc(IWMPTranscodePolicy*, Int16*, HRESULT)
  end

  IWMPTranscodePolicy_GUID = LibC::GUID.new("b64cbac3-401c-4327-a3e8-b9feb3a8c25c")
  CLSID_IWMPTranscodePolicy = "b64cbac3-401c-4327-a3e8-b9feb3a8c25c"
  struct IWMPTranscodePolicy
    lpVtbl : IWMPTranscodePolicyVTbl*
  end

  struct IWMPUserEventSinkVTbl
    query_interface : Proc(IWMPUserEventSink*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPUserEventSink*, UInt32)
    release : Proc(IWMPUserEventSink*, UInt32)
    notify_user_event : Proc(IWMPUserEventSink*, Int32, HRESULT)
  end

  IWMPUserEventSink_GUID = LibC::GUID.new("cfccfa72-c343-48c3-a2de-b7a4402e39f2")
  CLSID_IWMPUserEventSink = "cfccfa72-c343-48c3-a2de-b7a4402e39f2"
  struct IWMPUserEventSink
    lpVtbl : IWMPUserEventSinkVTbl*
  end

  struct IXFeedsManagerVTbl
    query_interface : Proc(IXFeedsManager*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXFeedsManager*, UInt32)
    release : Proc(IXFeedsManager*, UInt32)
    root_folder : Proc(IXFeedsManager*, Guid*, Void**, HRESULT)
    is_subscribed : Proc(IXFeedsManager*, LibC::LPWSTR, LibC::BOOL*, HRESULT)
    exists_feed : Proc(IXFeedsManager*, LibC::LPWSTR, LibC::BOOL*, HRESULT)
    get_feed : Proc(IXFeedsManager*, LibC::LPWSTR, Guid*, Void**, HRESULT)
    get_feed_by_url : Proc(IXFeedsManager*, LibC::LPWSTR, Guid*, Void**, HRESULT)
    exists_folder : Proc(IXFeedsManager*, LibC::LPWSTR, LibC::BOOL*, HRESULT)
    get_folder : Proc(IXFeedsManager*, LibC::LPWSTR, Guid*, Void**, HRESULT)
    delete_feed : Proc(IXFeedsManager*, LibC::LPWSTR, HRESULT)
    delete_folder : Proc(IXFeedsManager*, LibC::LPWSTR, HRESULT)
    background_sync : Proc(IXFeedsManager*, FEEDS_BACKGROUNDSYNC_ACTION, HRESULT)
    background_sync_status : Proc(IXFeedsManager*, FEEDS_BACKGROUNDSYNC_STATUS*, HRESULT)
    default_interval : Proc(IXFeedsManager*, UInt32*, HRESULT)
    set_default_interval : Proc(IXFeedsManager*, UInt32, HRESULT)
    async_sync_all : Proc(IXFeedsManager*, HRESULT)
    normalize : Proc(IXFeedsManager*, IStream, IStream*, HRESULT)
    item_count_limit : Proc(IXFeedsManager*, UInt32*, HRESULT)
  end

  IXFeedsManager_GUID = LibC::GUID.new("5357e238-fb12-4aca-a930-cab7832b84bf")
  CLSID_IXFeedsManager = "5357e238-fb12-4aca-a930-cab7832b84bf"
  struct IXFeedsManager
    lpVtbl : IXFeedsManagerVTbl*
  end

  struct IXFeedsEnumVTbl
    query_interface : Proc(IXFeedsEnum*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXFeedsEnum*, UInt32)
    release : Proc(IXFeedsEnum*, UInt32)
    count : Proc(IXFeedsEnum*, UInt32*, HRESULT)
    item : Proc(IXFeedsEnum*, UInt32, Guid*, Void**, HRESULT)
  end

  IXFeedsEnum_GUID = LibC::GUID.new("dc43a9d5-5015-4301-8c96-a47434b4d658")
  CLSID_IXFeedsEnum = "dc43a9d5-5015-4301-8c96-a47434b4d658"
  struct IXFeedsEnum
    lpVtbl : IXFeedsEnumVTbl*
  end

  struct IXFeedFolderVTbl
    query_interface : Proc(IXFeedFolder*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXFeedFolder*, UInt32)
    release : Proc(IXFeedFolder*, UInt32)
    feeds : Proc(IXFeedFolder*, IXFeedsEnum*, HRESULT)
    subfolders : Proc(IXFeedFolder*, IXFeedsEnum*, HRESULT)
    create_feed : Proc(IXFeedFolder*, LibC::LPWSTR, LibC::LPWSTR, Guid*, Void**, HRESULT)
    create_subfolder : Proc(IXFeedFolder*, LibC::LPWSTR, Guid*, Void**, HRESULT)
    exists_feed : Proc(IXFeedFolder*, LibC::LPWSTR, LibC::BOOL*, HRESULT)
    exists_subfolder : Proc(IXFeedFolder*, LibC::LPWSTR, LibC::BOOL*, HRESULT)
    get_feed : Proc(IXFeedFolder*, LibC::LPWSTR, Guid*, Void**, HRESULT)
    get_subfolder : Proc(IXFeedFolder*, LibC::LPWSTR, Guid*, Void**, HRESULT)
    delete : Proc(IXFeedFolder*, HRESULT)
    name : Proc(IXFeedFolder*, LibC::LPWSTR*, HRESULT)
    rename : Proc(IXFeedFolder*, LibC::LPWSTR, HRESULT)
    path : Proc(IXFeedFolder*, LibC::LPWSTR*, HRESULT)
    move : Proc(IXFeedFolder*, LibC::LPWSTR, HRESULT)
    parent : Proc(IXFeedFolder*, Guid*, Void**, HRESULT)
    is_root : Proc(IXFeedFolder*, LibC::BOOL*, HRESULT)
    get_watcher : Proc(IXFeedFolder*, FEEDS_EVENTS_SCOPE, FEEDS_EVENTS_MASK, Guid*, Void**, HRESULT)
    total_unread_item_count : Proc(IXFeedFolder*, UInt32*, HRESULT)
    total_item_count : Proc(IXFeedFolder*, UInt32*, HRESULT)
  end

  IXFeedFolder_GUID = LibC::GUID.new("4c963678-3a51-4b88-8531-98b90b6508f2")
  CLSID_IXFeedFolder = "4c963678-3a51-4b88-8531-98b90b6508f2"
  struct IXFeedFolder
    lpVtbl : IXFeedFolderVTbl*
  end

  struct IXFeedFolderEventsVTbl
    query_interface : Proc(IXFeedFolderEvents*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXFeedFolderEvents*, UInt32)
    release : Proc(IXFeedFolderEvents*, UInt32)
    error : Proc(IXFeedFolderEvents*, HRESULT)
    folder_added : Proc(IXFeedFolderEvents*, LibC::LPWSTR, HRESULT)
    folder_deleted : Proc(IXFeedFolderEvents*, LibC::LPWSTR, HRESULT)
    folder_renamed : Proc(IXFeedFolderEvents*, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    folder_moved_from : Proc(IXFeedFolderEvents*, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    folder_moved_to : Proc(IXFeedFolderEvents*, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    folder_item_count_changed : Proc(IXFeedFolderEvents*, LibC::LPWSTR, Int32, HRESULT)
    feed_added : Proc(IXFeedFolderEvents*, LibC::LPWSTR, HRESULT)
    feed_deleted : Proc(IXFeedFolderEvents*, LibC::LPWSTR, HRESULT)
    feed_renamed : Proc(IXFeedFolderEvents*, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    feed_url_changed : Proc(IXFeedFolderEvents*, LibC::LPWSTR, HRESULT)
    feed_moved_from : Proc(IXFeedFolderEvents*, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    feed_moved_to : Proc(IXFeedFolderEvents*, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    feed_downloading : Proc(IXFeedFolderEvents*, LibC::LPWSTR, HRESULT)
    feed_download_completed : Proc(IXFeedFolderEvents*, LibC::LPWSTR, FEEDS_DOWNLOAD_ERROR, HRESULT)
    feed_item_count_changed : Proc(IXFeedFolderEvents*, LibC::LPWSTR, Int32, HRESULT)
  end

  IXFeedFolderEvents_GUID = LibC::GUID.new("7964b769-234a-4bb1-a5f4-90454c8ad07e")
  CLSID_IXFeedFolderEvents = "7964b769-234a-4bb1-a5f4-90454c8ad07e"
  struct IXFeedFolderEvents
    lpVtbl : IXFeedFolderEventsVTbl*
  end

  struct IXFeedVTbl
    query_interface : Proc(IXFeed*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXFeed*, UInt32)
    release : Proc(IXFeed*, UInt32)
    xml : Proc(IXFeed*, UInt32, FEEDS_XML_SORT_PROPERTY, FEEDS_XML_SORT_ORDER, FEEDS_XML_FILTER_FLAGS, FEEDS_XML_INCLUDE_FLAGS, IStream*, HRESULT)
    name : Proc(IXFeed*, LibC::LPWSTR*, HRESULT)
    rename : Proc(IXFeed*, LibC::LPWSTR, HRESULT)
    url : Proc(IXFeed*, LibC::LPWSTR*, HRESULT)
    set_url : Proc(IXFeed*, LibC::LPWSTR, HRESULT)
    local_id : Proc(IXFeed*, Guid*, HRESULT)
    path : Proc(IXFeed*, LibC::LPWSTR*, HRESULT)
    move : Proc(IXFeed*, LibC::LPWSTR, HRESULT)
    parent : Proc(IXFeed*, Guid*, Void**, HRESULT)
    last_write_time : Proc(IXFeed*, SYSTEMTIME*, HRESULT)
    delete : Proc(IXFeed*, HRESULT)
    download : Proc(IXFeed*, HRESULT)
    async_download : Proc(IXFeed*, HRESULT)
    cancel_async_download : Proc(IXFeed*, HRESULT)
    sync_setting : Proc(IXFeed*, FEEDS_SYNC_SETTING*, HRESULT)
    set_sync_setting : Proc(IXFeed*, FEEDS_SYNC_SETTING, HRESULT)
    interval : Proc(IXFeed*, UInt32*, HRESULT)
    set_interval : Proc(IXFeed*, UInt32, HRESULT)
    last_download_time : Proc(IXFeed*, SYSTEMTIME*, HRESULT)
    local_enclosure_path : Proc(IXFeed*, LibC::LPWSTR*, HRESULT)
    items : Proc(IXFeed*, IXFeedsEnum*, HRESULT)
    get_item : Proc(IXFeed*, UInt32, Guid*, Void**, HRESULT)
    mark_all_items_read : Proc(IXFeed*, HRESULT)
    max_item_count : Proc(IXFeed*, UInt32*, HRESULT)
    set_max_item_count : Proc(IXFeed*, UInt32, HRESULT)
    download_enclosures_automatically : Proc(IXFeed*, LibC::BOOL*, HRESULT)
    set_download_enclosures_automatically : Proc(IXFeed*, LibC::BOOL, HRESULT)
    download_status : Proc(IXFeed*, FEEDS_DOWNLOAD_STATUS*, HRESULT)
    last_download_error : Proc(IXFeed*, FEEDS_DOWNLOAD_ERROR*, HRESULT)
    merge : Proc(IXFeed*, IStream, LibC::LPWSTR, HRESULT)
    download_url : Proc(IXFeed*, LibC::LPWSTR*, HRESULT)
    title : Proc(IXFeed*, LibC::LPWSTR*, HRESULT)
    description : Proc(IXFeed*, LibC::LPWSTR*, HRESULT)
    link : Proc(IXFeed*, LibC::LPWSTR*, HRESULT)
    image : Proc(IXFeed*, LibC::LPWSTR*, HRESULT)
    last_build_date : Proc(IXFeed*, SYSTEMTIME*, HRESULT)
    pub_date : Proc(IXFeed*, SYSTEMTIME*, HRESULT)
    ttl : Proc(IXFeed*, UInt32*, HRESULT)
    language : Proc(IXFeed*, LibC::LPWSTR*, HRESULT)
    copyright : Proc(IXFeed*, LibC::LPWSTR*, HRESULT)
    is_list : Proc(IXFeed*, LibC::BOOL*, HRESULT)
    get_watcher : Proc(IXFeed*, FEEDS_EVENTS_SCOPE, FEEDS_EVENTS_MASK, Guid*, Void**, HRESULT)
    unread_item_count : Proc(IXFeed*, UInt32*, HRESULT)
    item_count : Proc(IXFeed*, UInt32*, HRESULT)
  end

  IXFeed_GUID = LibC::GUID.new("a44179a4-e0f6-403b-af8d-d080f425a451")
  CLSID_IXFeed = "a44179a4-e0f6-403b-af8d-d080f425a451"
  struct IXFeed
    lpVtbl : IXFeedVTbl*
  end

  struct IXFeed2VTbl
    query_interface : Proc(IXFeed2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXFeed2*, UInt32)
    release : Proc(IXFeed2*, UInt32)
    xml : Proc(IXFeed2*, UInt32, FEEDS_XML_SORT_PROPERTY, FEEDS_XML_SORT_ORDER, FEEDS_XML_FILTER_FLAGS, FEEDS_XML_INCLUDE_FLAGS, IStream*, HRESULT)
    name : Proc(IXFeed2*, LibC::LPWSTR*, HRESULT)
    rename : Proc(IXFeed2*, LibC::LPWSTR, HRESULT)
    url : Proc(IXFeed2*, LibC::LPWSTR*, HRESULT)
    set_url : Proc(IXFeed2*, LibC::LPWSTR, HRESULT)
    local_id : Proc(IXFeed2*, Guid*, HRESULT)
    path : Proc(IXFeed2*, LibC::LPWSTR*, HRESULT)
    move : Proc(IXFeed2*, LibC::LPWSTR, HRESULT)
    parent : Proc(IXFeed2*, Guid*, Void**, HRESULT)
    last_write_time : Proc(IXFeed2*, SYSTEMTIME*, HRESULT)
    delete : Proc(IXFeed2*, HRESULT)
    download : Proc(IXFeed2*, HRESULT)
    async_download : Proc(IXFeed2*, HRESULT)
    cancel_async_download : Proc(IXFeed2*, HRESULT)
    sync_setting : Proc(IXFeed2*, FEEDS_SYNC_SETTING*, HRESULT)
    set_sync_setting : Proc(IXFeed2*, FEEDS_SYNC_SETTING, HRESULT)
    interval : Proc(IXFeed2*, UInt32*, HRESULT)
    set_interval : Proc(IXFeed2*, UInt32, HRESULT)
    last_download_time : Proc(IXFeed2*, SYSTEMTIME*, HRESULT)
    local_enclosure_path : Proc(IXFeed2*, LibC::LPWSTR*, HRESULT)
    items : Proc(IXFeed2*, IXFeedsEnum*, HRESULT)
    get_item : Proc(IXFeed2*, UInt32, Guid*, Void**, HRESULT)
    mark_all_items_read : Proc(IXFeed2*, HRESULT)
    max_item_count : Proc(IXFeed2*, UInt32*, HRESULT)
    set_max_item_count : Proc(IXFeed2*, UInt32, HRESULT)
    download_enclosures_automatically : Proc(IXFeed2*, LibC::BOOL*, HRESULT)
    set_download_enclosures_automatically : Proc(IXFeed2*, LibC::BOOL, HRESULT)
    download_status : Proc(IXFeed2*, FEEDS_DOWNLOAD_STATUS*, HRESULT)
    last_download_error : Proc(IXFeed2*, FEEDS_DOWNLOAD_ERROR*, HRESULT)
    merge : Proc(IXFeed2*, IStream, LibC::LPWSTR, HRESULT)
    download_url : Proc(IXFeed2*, LibC::LPWSTR*, HRESULT)
    title : Proc(IXFeed2*, LibC::LPWSTR*, HRESULT)
    description : Proc(IXFeed2*, LibC::LPWSTR*, HRESULT)
    link : Proc(IXFeed2*, LibC::LPWSTR*, HRESULT)
    image : Proc(IXFeed2*, LibC::LPWSTR*, HRESULT)
    last_build_date : Proc(IXFeed2*, SYSTEMTIME*, HRESULT)
    pub_date : Proc(IXFeed2*, SYSTEMTIME*, HRESULT)
    ttl : Proc(IXFeed2*, UInt32*, HRESULT)
    language : Proc(IXFeed2*, LibC::LPWSTR*, HRESULT)
    copyright : Proc(IXFeed2*, LibC::LPWSTR*, HRESULT)
    is_list : Proc(IXFeed2*, LibC::BOOL*, HRESULT)
    get_watcher : Proc(IXFeed2*, FEEDS_EVENTS_SCOPE, FEEDS_EVENTS_MASK, Guid*, Void**, HRESULT)
    unread_item_count : Proc(IXFeed2*, UInt32*, HRESULT)
    item_count : Proc(IXFeed2*, UInt32*, HRESULT)
    get_item_by_effective_id : Proc(IXFeed2*, UInt32, Guid*, Void**, HRESULT)
    last_item_download_time : Proc(IXFeed2*, SYSTEMTIME*, HRESULT)
    username : Proc(IXFeed2*, LibC::LPWSTR*, HRESULT)
    password : Proc(IXFeed2*, LibC::LPWSTR*, HRESULT)
    set_credentials : Proc(IXFeed2*, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    clear_credentials : Proc(IXFeed2*, HRESULT)
  end

  IXFeed2_GUID = LibC::GUID.new("ce528e77-3716-4eb7-956d-f5e37502e12a")
  CLSID_IXFeed2 = "ce528e77-3716-4eb7-956d-f5e37502e12a"
  struct IXFeed2
    lpVtbl : IXFeed2VTbl*
  end

  struct IXFeedEventsVTbl
    query_interface : Proc(IXFeedEvents*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXFeedEvents*, UInt32)
    release : Proc(IXFeedEvents*, UInt32)
    error : Proc(IXFeedEvents*, HRESULT)
    feed_deleted : Proc(IXFeedEvents*, LibC::LPWSTR, HRESULT)
    feed_renamed : Proc(IXFeedEvents*, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    feed_url_changed : Proc(IXFeedEvents*, LibC::LPWSTR, HRESULT)
    feed_moved : Proc(IXFeedEvents*, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
    feed_downloading : Proc(IXFeedEvents*, LibC::LPWSTR, HRESULT)
    feed_download_completed : Proc(IXFeedEvents*, LibC::LPWSTR, FEEDS_DOWNLOAD_ERROR, HRESULT)
    feed_item_count_changed : Proc(IXFeedEvents*, LibC::LPWSTR, Int32, HRESULT)
  end

  IXFeedEvents_GUID = LibC::GUID.new("1630852e-1263-465b-98e5-fe60ffec4ac2")
  CLSID_IXFeedEvents = "1630852e-1263-465b-98e5-fe60ffec4ac2"
  struct IXFeedEvents
    lpVtbl : IXFeedEventsVTbl*
  end

  struct IXFeedItemVTbl
    query_interface : Proc(IXFeedItem*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXFeedItem*, UInt32)
    release : Proc(IXFeedItem*, UInt32)
    xml : Proc(IXFeedItem*, FEEDS_XML_INCLUDE_FLAGS, IStream*, HRESULT)
    title : Proc(IXFeedItem*, LibC::LPWSTR*, HRESULT)
    link : Proc(IXFeedItem*, LibC::LPWSTR*, HRESULT)
    guid : Proc(IXFeedItem*, LibC::LPWSTR*, HRESULT)
    description : Proc(IXFeedItem*, LibC::LPWSTR*, HRESULT)
    pub_date : Proc(IXFeedItem*, SYSTEMTIME*, HRESULT)
    comments : Proc(IXFeedItem*, LibC::LPWSTR*, HRESULT)
    author : Proc(IXFeedItem*, LibC::LPWSTR*, HRESULT)
    enclosure : Proc(IXFeedItem*, Guid*, Void**, HRESULT)
    is_read : Proc(IXFeedItem*, LibC::BOOL*, HRESULT)
    set_is_read : Proc(IXFeedItem*, LibC::BOOL, HRESULT)
    local_id : Proc(IXFeedItem*, UInt32*, HRESULT)
    parent : Proc(IXFeedItem*, Guid*, Void**, HRESULT)
    delete : Proc(IXFeedItem*, HRESULT)
    download_url : Proc(IXFeedItem*, LibC::LPWSTR*, HRESULT)
    last_download_time : Proc(IXFeedItem*, SYSTEMTIME*, HRESULT)
    modified : Proc(IXFeedItem*, SYSTEMTIME*, HRESULT)
  end

  IXFeedItem_GUID = LibC::GUID.new("e757b2f5-e73e-434e-a1bf-2bd7c3e60fcb")
  CLSID_IXFeedItem = "e757b2f5-e73e-434e-a1bf-2bd7c3e60fcb"
  struct IXFeedItem
    lpVtbl : IXFeedItemVTbl*
  end

  struct IXFeedItem2VTbl
    query_interface : Proc(IXFeedItem2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXFeedItem2*, UInt32)
    release : Proc(IXFeedItem2*, UInt32)
    xml : Proc(IXFeedItem2*, FEEDS_XML_INCLUDE_FLAGS, IStream*, HRESULT)
    title : Proc(IXFeedItem2*, LibC::LPWSTR*, HRESULT)
    link : Proc(IXFeedItem2*, LibC::LPWSTR*, HRESULT)
    guid : Proc(IXFeedItem2*, LibC::LPWSTR*, HRESULT)
    description : Proc(IXFeedItem2*, LibC::LPWSTR*, HRESULT)
    pub_date : Proc(IXFeedItem2*, SYSTEMTIME*, HRESULT)
    comments : Proc(IXFeedItem2*, LibC::LPWSTR*, HRESULT)
    author : Proc(IXFeedItem2*, LibC::LPWSTR*, HRESULT)
    enclosure : Proc(IXFeedItem2*, Guid*, Void**, HRESULT)
    is_read : Proc(IXFeedItem2*, LibC::BOOL*, HRESULT)
    set_is_read : Proc(IXFeedItem2*, LibC::BOOL, HRESULT)
    local_id : Proc(IXFeedItem2*, UInt32*, HRESULT)
    parent : Proc(IXFeedItem2*, Guid*, Void**, HRESULT)
    delete : Proc(IXFeedItem2*, HRESULT)
    download_url : Proc(IXFeedItem2*, LibC::LPWSTR*, HRESULT)
    last_download_time : Proc(IXFeedItem2*, SYSTEMTIME*, HRESULT)
    modified : Proc(IXFeedItem2*, SYSTEMTIME*, HRESULT)
    effective_id : Proc(IXFeedItem2*, UInt32*, HRESULT)
  end

  IXFeedItem2_GUID = LibC::GUID.new("6cda2dc7-9013-4522-9970-2a9dd9ead5a3")
  CLSID_IXFeedItem2 = "6cda2dc7-9013-4522-9970-2a9dd9ead5a3"
  struct IXFeedItem2
    lpVtbl : IXFeedItem2VTbl*
  end

  struct IXFeedEnclosureVTbl
    query_interface : Proc(IXFeedEnclosure*, Guid*, Void**, HRESULT)
    add_ref : Proc(IXFeedEnclosure*, UInt32)
    release : Proc(IXFeedEnclosure*, UInt32)
    url : Proc(IXFeedEnclosure*, LibC::LPWSTR*, HRESULT)
    type : Proc(IXFeedEnclosure*, LibC::LPWSTR*, HRESULT)
    length : Proc(IXFeedEnclosure*, UInt32*, HRESULT)
    async_download : Proc(IXFeedEnclosure*, HRESULT)
    cancel_async_download : Proc(IXFeedEnclosure*, HRESULT)
    download_status : Proc(IXFeedEnclosure*, FEEDS_DOWNLOAD_STATUS*, HRESULT)
    last_download_error : Proc(IXFeedEnclosure*, FEEDS_DOWNLOAD_ERROR*, HRESULT)
    local_path : Proc(IXFeedEnclosure*, LibC::LPWSTR*, HRESULT)
    parent : Proc(IXFeedEnclosure*, Guid*, Void**, HRESULT)
    download_url : Proc(IXFeedEnclosure*, LibC::LPWSTR*, HRESULT)
    download_mime_type : Proc(IXFeedEnclosure*, LibC::LPWSTR*, HRESULT)
    remove_file : Proc(IXFeedEnclosure*, HRESULT)
    set_file : Proc(IXFeedEnclosure*, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
  end

  IXFeedEnclosure_GUID = LibC::GUID.new("bfbfb953-644f-4792-b69c-dfaca4cbf89a")
  CLSID_IXFeedEnclosure = "bfbfb953-644f-4792-b69c-dfaca4cbf89a"
  struct IXFeedEnclosure
    lpVtbl : IXFeedEnclosureVTbl*
  end

  struct IFeedsManagerVTbl
    query_interface : Proc(IFeedsManager*, Guid*, Void**, HRESULT)
    add_ref : Proc(IFeedsManager*, UInt32)
    release : Proc(IFeedsManager*, UInt32)
    get_type_info_count : Proc(IFeedsManager*, UInt32*, HRESULT)
    get_type_info : Proc(IFeedsManager*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IFeedsManager*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IFeedsManager*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_root_folder : Proc(IFeedsManager*, IDispatch*, HRESULT)
    is_subscribed : Proc(IFeedsManager*, UInt8*, Int16*, HRESULT)
    exists_feed : Proc(IFeedsManager*, UInt8*, Int16*, HRESULT)
    get_feed : Proc(IFeedsManager*, UInt8*, IDispatch*, HRESULT)
    get_feed_by_url : Proc(IFeedsManager*, UInt8*, IDispatch*, HRESULT)
    exists_folder : Proc(IFeedsManager*, UInt8*, Int16*, HRESULT)
    get_folder : Proc(IFeedsManager*, UInt8*, IDispatch*, HRESULT)
    delete_feed : Proc(IFeedsManager*, UInt8*, HRESULT)
    delete_folder : Proc(IFeedsManager*, UInt8*, HRESULT)
    background_sync : Proc(IFeedsManager*, FEEDS_BACKGROUNDSYNC_ACTION, HRESULT)
    get_background_sync_status : Proc(IFeedsManager*, FEEDS_BACKGROUNDSYNC_STATUS*, HRESULT)
    get_default_interval : Proc(IFeedsManager*, Int32*, HRESULT)
    put_default_interval : Proc(IFeedsManager*, Int32, HRESULT)
    async_sync_all : Proc(IFeedsManager*, HRESULT)
    normalize : Proc(IFeedsManager*, UInt8*, UInt8**, HRESULT)
    get_item_count_limit : Proc(IFeedsManager*, Int32*, HRESULT)
  end

  IFeedsManager_GUID = LibC::GUID.new("a74029cc-1f1a-4906-88f0-810638d86591")
  CLSID_IFeedsManager = "a74029cc-1f1a-4906-88f0-810638d86591"
  struct IFeedsManager
    lpVtbl : IFeedsManagerVTbl*
  end

  struct IFeedsEnumVTbl
    query_interface : Proc(IFeedsEnum*, Guid*, Void**, HRESULT)
    add_ref : Proc(IFeedsEnum*, UInt32)
    release : Proc(IFeedsEnum*, UInt32)
    get_type_info_count : Proc(IFeedsEnum*, UInt32*, HRESULT)
    get_type_info : Proc(IFeedsEnum*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IFeedsEnum*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IFeedsEnum*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_count : Proc(IFeedsEnum*, Int32*, HRESULT)
    item : Proc(IFeedsEnum*, Int32, IDispatch*, HRESULT)
    get__new_enum : Proc(IFeedsEnum*, IEnumVARIANT*, HRESULT)
  end

  IFeedsEnum_GUID = LibC::GUID.new("e3cd0028-2eed-4c60-8fae-a3225309a836")
  CLSID_IFeedsEnum = "e3cd0028-2eed-4c60-8fae-a3225309a836"
  struct IFeedsEnum
    lpVtbl : IFeedsEnumVTbl*
  end

  struct IFeedFolderVTbl
    query_interface : Proc(IFeedFolder*, Guid*, Void**, HRESULT)
    add_ref : Proc(IFeedFolder*, UInt32)
    release : Proc(IFeedFolder*, UInt32)
    get_type_info_count : Proc(IFeedFolder*, UInt32*, HRESULT)
    get_type_info : Proc(IFeedFolder*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IFeedFolder*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IFeedFolder*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_feeds : Proc(IFeedFolder*, IDispatch*, HRESULT)
    get_subfolders : Proc(IFeedFolder*, IDispatch*, HRESULT)
    create_feed : Proc(IFeedFolder*, UInt8*, UInt8*, IDispatch*, HRESULT)
    create_subfolder : Proc(IFeedFolder*, UInt8*, IDispatch*, HRESULT)
    exists_feed : Proc(IFeedFolder*, UInt8*, Int16*, HRESULT)
    get_feed : Proc(IFeedFolder*, UInt8*, IDispatch*, HRESULT)
    exists_subfolder : Proc(IFeedFolder*, UInt8*, Int16*, HRESULT)
    get_subfolder : Proc(IFeedFolder*, UInt8*, IDispatch*, HRESULT)
    delete : Proc(IFeedFolder*, HRESULT)
    get_name : Proc(IFeedFolder*, UInt8**, HRESULT)
    rename : Proc(IFeedFolder*, UInt8*, HRESULT)
    get_path : Proc(IFeedFolder*, UInt8**, HRESULT)
    move : Proc(IFeedFolder*, UInt8*, HRESULT)
    get_parent : Proc(IFeedFolder*, IDispatch*, HRESULT)
    get_is_root : Proc(IFeedFolder*, Int16*, HRESULT)
    get_total_unread_item_count : Proc(IFeedFolder*, Int32*, HRESULT)
    get_total_item_count : Proc(IFeedFolder*, Int32*, HRESULT)
    get_watcher : Proc(IFeedFolder*, FEEDS_EVENTS_SCOPE, FEEDS_EVENTS_MASK, IDispatch*, HRESULT)
  end

  IFeedFolder_GUID = LibC::GUID.new("81f04ad1-4194-4d7d-86d6-11813cec163c")
  CLSID_IFeedFolder = "81f04ad1-4194-4d7d-86d6-11813cec163c"
  struct IFeedFolder
    lpVtbl : IFeedFolderVTbl*
  end

  struct IFeedFolderEventsVTbl
    query_interface : Proc(IFeedFolderEvents*, Guid*, Void**, HRESULT)
    add_ref : Proc(IFeedFolderEvents*, UInt32)
    release : Proc(IFeedFolderEvents*, UInt32)
    get_type_info_count : Proc(IFeedFolderEvents*, UInt32*, HRESULT)
    get_type_info : Proc(IFeedFolderEvents*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IFeedFolderEvents*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IFeedFolderEvents*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    error : Proc(IFeedFolderEvents*, HRESULT)
    folder_added : Proc(IFeedFolderEvents*, UInt8*, HRESULT)
    folder_deleted : Proc(IFeedFolderEvents*, UInt8*, HRESULT)
    folder_renamed : Proc(IFeedFolderEvents*, UInt8*, UInt8*, HRESULT)
    folder_moved_from : Proc(IFeedFolderEvents*, UInt8*, UInt8*, HRESULT)
    folder_moved_to : Proc(IFeedFolderEvents*, UInt8*, UInt8*, HRESULT)
    folder_item_count_changed : Proc(IFeedFolderEvents*, UInt8*, Int32, HRESULT)
    feed_added : Proc(IFeedFolderEvents*, UInt8*, HRESULT)
    feed_deleted : Proc(IFeedFolderEvents*, UInt8*, HRESULT)
    feed_renamed : Proc(IFeedFolderEvents*, UInt8*, UInt8*, HRESULT)
    feed_url_changed : Proc(IFeedFolderEvents*, UInt8*, HRESULT)
    feed_moved_from : Proc(IFeedFolderEvents*, UInt8*, UInt8*, HRESULT)
    feed_moved_to : Proc(IFeedFolderEvents*, UInt8*, UInt8*, HRESULT)
    feed_downloading : Proc(IFeedFolderEvents*, UInt8*, HRESULT)
    feed_download_completed : Proc(IFeedFolderEvents*, UInt8*, FEEDS_DOWNLOAD_ERROR, HRESULT)
    feed_item_count_changed : Proc(IFeedFolderEvents*, UInt8*, Int32, HRESULT)
  end

  IFeedFolderEvents_GUID = LibC::GUID.new("20a59fa6-a844-4630-9e98-175f70b4d55b")
  CLSID_IFeedFolderEvents = "20a59fa6-a844-4630-9e98-175f70b4d55b"
  struct IFeedFolderEvents
    lpVtbl : IFeedFolderEventsVTbl*
  end

  struct IFeedVTbl
    query_interface : Proc(IFeed*, Guid*, Void**, HRESULT)
    add_ref : Proc(IFeed*, UInt32)
    release : Proc(IFeed*, UInt32)
    get_type_info_count : Proc(IFeed*, UInt32*, HRESULT)
    get_type_info : Proc(IFeed*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IFeed*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IFeed*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    xml : Proc(IFeed*, Int32, FEEDS_XML_SORT_PROPERTY, FEEDS_XML_SORT_ORDER, FEEDS_XML_FILTER_FLAGS, FEEDS_XML_INCLUDE_FLAGS, UInt8**, HRESULT)
    get_name : Proc(IFeed*, UInt8**, HRESULT)
    rename : Proc(IFeed*, UInt8*, HRESULT)
    get_url : Proc(IFeed*, UInt8**, HRESULT)
    put_url : Proc(IFeed*, UInt8*, HRESULT)
    get_local_id : Proc(IFeed*, UInt8**, HRESULT)
    get_path : Proc(IFeed*, UInt8**, HRESULT)
    move : Proc(IFeed*, UInt8*, HRESULT)
    get_parent : Proc(IFeed*, IDispatch*, HRESULT)
    get_last_write_time : Proc(IFeed*, Float64*, HRESULT)
    delete : Proc(IFeed*, HRESULT)
    download : Proc(IFeed*, HRESULT)
    async_download : Proc(IFeed*, HRESULT)
    cancel_async_download : Proc(IFeed*, HRESULT)
    get_sync_setting : Proc(IFeed*, FEEDS_SYNC_SETTING*, HRESULT)
    put_sync_setting : Proc(IFeed*, FEEDS_SYNC_SETTING, HRESULT)
    get_interval : Proc(IFeed*, Int32*, HRESULT)
    put_interval : Proc(IFeed*, Int32, HRESULT)
    get_last_download_time : Proc(IFeed*, Float64*, HRESULT)
    get_local_enclosure_path : Proc(IFeed*, UInt8**, HRESULT)
    get_items : Proc(IFeed*, IDispatch*, HRESULT)
    get_item : Proc(IFeed*, Int32, IDispatch*, HRESULT)
    get_title : Proc(IFeed*, UInt8**, HRESULT)
    get_description : Proc(IFeed*, UInt8**, HRESULT)
    get_link : Proc(IFeed*, UInt8**, HRESULT)
    get_image : Proc(IFeed*, UInt8**, HRESULT)
    get_last_build_date : Proc(IFeed*, Float64*, HRESULT)
    get_pub_date : Proc(IFeed*, Float64*, HRESULT)
    get_ttl : Proc(IFeed*, Int32*, HRESULT)
    get_language : Proc(IFeed*, UInt8**, HRESULT)
    get_copyright : Proc(IFeed*, UInt8**, HRESULT)
    get_max_item_count : Proc(IFeed*, Int32*, HRESULT)
    put_max_item_count : Proc(IFeed*, Int32, HRESULT)
    get_download_enclosures_automatically : Proc(IFeed*, Int16*, HRESULT)
    put_download_enclosures_automatically : Proc(IFeed*, Int16, HRESULT)
    get_download_status : Proc(IFeed*, FEEDS_DOWNLOAD_STATUS*, HRESULT)
    get_last_download_error : Proc(IFeed*, FEEDS_DOWNLOAD_ERROR*, HRESULT)
    merge : Proc(IFeed*, UInt8*, UInt8*, HRESULT)
    get_download_url : Proc(IFeed*, UInt8**, HRESULT)
    get_is_list : Proc(IFeed*, Int16*, HRESULT)
    mark_all_items_read : Proc(IFeed*, HRESULT)
    get_watcher : Proc(IFeed*, FEEDS_EVENTS_SCOPE, FEEDS_EVENTS_MASK, IDispatch*, HRESULT)
    get_unread_item_count : Proc(IFeed*, Int32*, HRESULT)
    get_item_count : Proc(IFeed*, Int32*, HRESULT)
  end

  IFeed_GUID = LibC::GUID.new("f7f915d8-2ede-42bc-98e7-a5d05063a757")
  CLSID_IFeed = "f7f915d8-2ede-42bc-98e7-a5d05063a757"
  struct IFeed
    lpVtbl : IFeedVTbl*
  end

  struct IFeed2VTbl
    query_interface : Proc(IFeed2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IFeed2*, UInt32)
    release : Proc(IFeed2*, UInt32)
    get_type_info_count : Proc(IFeed2*, UInt32*, HRESULT)
    get_type_info : Proc(IFeed2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IFeed2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IFeed2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    xml : Proc(IFeed2*, Int32, FEEDS_XML_SORT_PROPERTY, FEEDS_XML_SORT_ORDER, FEEDS_XML_FILTER_FLAGS, FEEDS_XML_INCLUDE_FLAGS, UInt8**, HRESULT)
    get_name : Proc(IFeed2*, UInt8**, HRESULT)
    rename : Proc(IFeed2*, UInt8*, HRESULT)
    get_url : Proc(IFeed2*, UInt8**, HRESULT)
    put_url : Proc(IFeed2*, UInt8*, HRESULT)
    get_local_id : Proc(IFeed2*, UInt8**, HRESULT)
    get_path : Proc(IFeed2*, UInt8**, HRESULT)
    move : Proc(IFeed2*, UInt8*, HRESULT)
    get_parent : Proc(IFeed2*, IDispatch*, HRESULT)
    get_last_write_time : Proc(IFeed2*, Float64*, HRESULT)
    delete : Proc(IFeed2*, HRESULT)
    download : Proc(IFeed2*, HRESULT)
    async_download : Proc(IFeed2*, HRESULT)
    cancel_async_download : Proc(IFeed2*, HRESULT)
    get_sync_setting : Proc(IFeed2*, FEEDS_SYNC_SETTING*, HRESULT)
    put_sync_setting : Proc(IFeed2*, FEEDS_SYNC_SETTING, HRESULT)
    get_interval : Proc(IFeed2*, Int32*, HRESULT)
    put_interval : Proc(IFeed2*, Int32, HRESULT)
    get_last_download_time : Proc(IFeed2*, Float64*, HRESULT)
    get_local_enclosure_path : Proc(IFeed2*, UInt8**, HRESULT)
    get_items : Proc(IFeed2*, IDispatch*, HRESULT)
    get_item : Proc(IFeed2*, Int32, IDispatch*, HRESULT)
    get_title : Proc(IFeed2*, UInt8**, HRESULT)
    get_description : Proc(IFeed2*, UInt8**, HRESULT)
    get_link : Proc(IFeed2*, UInt8**, HRESULT)
    get_image : Proc(IFeed2*, UInt8**, HRESULT)
    get_last_build_date : Proc(IFeed2*, Float64*, HRESULT)
    get_pub_date : Proc(IFeed2*, Float64*, HRESULT)
    get_ttl : Proc(IFeed2*, Int32*, HRESULT)
    get_language : Proc(IFeed2*, UInt8**, HRESULT)
    get_copyright : Proc(IFeed2*, UInt8**, HRESULT)
    get_max_item_count : Proc(IFeed2*, Int32*, HRESULT)
    put_max_item_count : Proc(IFeed2*, Int32, HRESULT)
    get_download_enclosures_automatically : Proc(IFeed2*, Int16*, HRESULT)
    put_download_enclosures_automatically : Proc(IFeed2*, Int16, HRESULT)
    get_download_status : Proc(IFeed2*, FEEDS_DOWNLOAD_STATUS*, HRESULT)
    get_last_download_error : Proc(IFeed2*, FEEDS_DOWNLOAD_ERROR*, HRESULT)
    merge : Proc(IFeed2*, UInt8*, UInt8*, HRESULT)
    get_download_url : Proc(IFeed2*, UInt8**, HRESULT)
    get_is_list : Proc(IFeed2*, Int16*, HRESULT)
    mark_all_items_read : Proc(IFeed2*, HRESULT)
    get_watcher : Proc(IFeed2*, FEEDS_EVENTS_SCOPE, FEEDS_EVENTS_MASK, IDispatch*, HRESULT)
    get_unread_item_count : Proc(IFeed2*, Int32*, HRESULT)
    get_item_count : Proc(IFeed2*, Int32*, HRESULT)
    get_item_by_effective_id : Proc(IFeed2*, Int32, IDispatch*, HRESULT)
    get_last_item_download_time : Proc(IFeed2*, Float64*, HRESULT)
    get_username : Proc(IFeed2*, UInt8**, HRESULT)
    get_password : Proc(IFeed2*, UInt8**, HRESULT)
    set_credentials : Proc(IFeed2*, UInt8*, UInt8*, HRESULT)
    clear_credentials : Proc(IFeed2*, HRESULT)
  end

  IFeed2_GUID = LibC::GUID.new("33f2ea09-1398-4ab9-b6a4-f94b49d0a42e")
  CLSID_IFeed2 = "33f2ea09-1398-4ab9-b6a4-f94b49d0a42e"
  struct IFeed2
    lpVtbl : IFeed2VTbl*
  end

  struct IFeedEventsVTbl
    query_interface : Proc(IFeedEvents*, Guid*, Void**, HRESULT)
    add_ref : Proc(IFeedEvents*, UInt32)
    release : Proc(IFeedEvents*, UInt32)
    get_type_info_count : Proc(IFeedEvents*, UInt32*, HRESULT)
    get_type_info : Proc(IFeedEvents*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IFeedEvents*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IFeedEvents*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    error : Proc(IFeedEvents*, HRESULT)
    feed_deleted : Proc(IFeedEvents*, UInt8*, HRESULT)
    feed_renamed : Proc(IFeedEvents*, UInt8*, UInt8*, HRESULT)
    feed_url_changed : Proc(IFeedEvents*, UInt8*, HRESULT)
    feed_moved : Proc(IFeedEvents*, UInt8*, UInt8*, HRESULT)
    feed_downloading : Proc(IFeedEvents*, UInt8*, HRESULT)
    feed_download_completed : Proc(IFeedEvents*, UInt8*, FEEDS_DOWNLOAD_ERROR, HRESULT)
    feed_item_count_changed : Proc(IFeedEvents*, UInt8*, Int32, HRESULT)
  end

  IFeedEvents_GUID = LibC::GUID.new("abf35c99-0681-47ea-9a8c-1436a375a99e")
  CLSID_IFeedEvents = "abf35c99-0681-47ea-9a8c-1436a375a99e"
  struct IFeedEvents
    lpVtbl : IFeedEventsVTbl*
  end

  struct IFeedItemVTbl
    query_interface : Proc(IFeedItem*, Guid*, Void**, HRESULT)
    add_ref : Proc(IFeedItem*, UInt32)
    release : Proc(IFeedItem*, UInt32)
    get_type_info_count : Proc(IFeedItem*, UInt32*, HRESULT)
    get_type_info : Proc(IFeedItem*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IFeedItem*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IFeedItem*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    xml : Proc(IFeedItem*, FEEDS_XML_INCLUDE_FLAGS, UInt8**, HRESULT)
    get_title : Proc(IFeedItem*, UInt8**, HRESULT)
    get_link : Proc(IFeedItem*, UInt8**, HRESULT)
    get_guid : Proc(IFeedItem*, UInt8**, HRESULT)
    get_description : Proc(IFeedItem*, UInt8**, HRESULT)
    get_pub_date : Proc(IFeedItem*, Float64*, HRESULT)
    get_comments : Proc(IFeedItem*, UInt8**, HRESULT)
    get_author : Proc(IFeedItem*, UInt8**, HRESULT)
    get_enclosure : Proc(IFeedItem*, IDispatch*, HRESULT)
    get_is_read : Proc(IFeedItem*, Int16*, HRESULT)
    put_is_read : Proc(IFeedItem*, Int16, HRESULT)
    get_local_id : Proc(IFeedItem*, Int32*, HRESULT)
    get_parent : Proc(IFeedItem*, IDispatch*, HRESULT)
    delete : Proc(IFeedItem*, HRESULT)
    get_download_url : Proc(IFeedItem*, UInt8**, HRESULT)
    get_last_download_time : Proc(IFeedItem*, Float64*, HRESULT)
    get_modified : Proc(IFeedItem*, Float64*, HRESULT)
  end

  IFeedItem_GUID = LibC::GUID.new("0a1e6cad-0a47-4da2-a13d-5baaa5c8bd4f")
  CLSID_IFeedItem = "0a1e6cad-0a47-4da2-a13d-5baaa5c8bd4f"
  struct IFeedItem
    lpVtbl : IFeedItemVTbl*
  end

  struct IFeedItem2VTbl
    query_interface : Proc(IFeedItem2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IFeedItem2*, UInt32)
    release : Proc(IFeedItem2*, UInt32)
    get_type_info_count : Proc(IFeedItem2*, UInt32*, HRESULT)
    get_type_info : Proc(IFeedItem2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IFeedItem2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IFeedItem2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    xml : Proc(IFeedItem2*, FEEDS_XML_INCLUDE_FLAGS, UInt8**, HRESULT)
    get_title : Proc(IFeedItem2*, UInt8**, HRESULT)
    get_link : Proc(IFeedItem2*, UInt8**, HRESULT)
    get_guid : Proc(IFeedItem2*, UInt8**, HRESULT)
    get_description : Proc(IFeedItem2*, UInt8**, HRESULT)
    get_pub_date : Proc(IFeedItem2*, Float64*, HRESULT)
    get_comments : Proc(IFeedItem2*, UInt8**, HRESULT)
    get_author : Proc(IFeedItem2*, UInt8**, HRESULT)
    get_enclosure : Proc(IFeedItem2*, IDispatch*, HRESULT)
    get_is_read : Proc(IFeedItem2*, Int16*, HRESULT)
    put_is_read : Proc(IFeedItem2*, Int16, HRESULT)
    get_local_id : Proc(IFeedItem2*, Int32*, HRESULT)
    get_parent : Proc(IFeedItem2*, IDispatch*, HRESULT)
    delete : Proc(IFeedItem2*, HRESULT)
    get_download_url : Proc(IFeedItem2*, UInt8**, HRESULT)
    get_last_download_time : Proc(IFeedItem2*, Float64*, HRESULT)
    get_modified : Proc(IFeedItem2*, Float64*, HRESULT)
    get_effective_id : Proc(IFeedItem2*, Int32*, HRESULT)
  end

  IFeedItem2_GUID = LibC::GUID.new("79ac9ef4-f9c1-4d2b-a50b-a7ffba4dcf37")
  CLSID_IFeedItem2 = "79ac9ef4-f9c1-4d2b-a50b-a7ffba4dcf37"
  struct IFeedItem2
    lpVtbl : IFeedItem2VTbl*
  end

  struct IFeedEnclosureVTbl
    query_interface : Proc(IFeedEnclosure*, Guid*, Void**, HRESULT)
    add_ref : Proc(IFeedEnclosure*, UInt32)
    release : Proc(IFeedEnclosure*, UInt32)
    get_type_info_count : Proc(IFeedEnclosure*, UInt32*, HRESULT)
    get_type_info : Proc(IFeedEnclosure*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IFeedEnclosure*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IFeedEnclosure*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_url : Proc(IFeedEnclosure*, UInt8**, HRESULT)
    get_type : Proc(IFeedEnclosure*, UInt8**, HRESULT)
    get_length : Proc(IFeedEnclosure*, Int32*, HRESULT)
    async_download : Proc(IFeedEnclosure*, HRESULT)
    cancel_async_download : Proc(IFeedEnclosure*, HRESULT)
    get_download_status : Proc(IFeedEnclosure*, FEEDS_DOWNLOAD_STATUS*, HRESULT)
    get_last_download_error : Proc(IFeedEnclosure*, FEEDS_DOWNLOAD_ERROR*, HRESULT)
    get_local_path : Proc(IFeedEnclosure*, UInt8**, HRESULT)
    get_parent : Proc(IFeedEnclosure*, IDispatch*, HRESULT)
    get_download_url : Proc(IFeedEnclosure*, UInt8**, HRESULT)
    get_download_mime_type : Proc(IFeedEnclosure*, UInt8**, HRESULT)
    remove_file : Proc(IFeedEnclosure*, HRESULT)
    set_file : Proc(IFeedEnclosure*, UInt8*, UInt8*, UInt8*, UInt8*, HRESULT)
  end

  IFeedEnclosure_GUID = LibC::GUID.new("361c26f7-90a4-4e67-ae09-3a36a546436a")
  CLSID_IFeedEnclosure = "361c26f7-90a4-4e67-ae09-3a36a546436a"
  struct IFeedEnclosure
    lpVtbl : IFeedEnclosureVTbl*
  end

  struct IWMPEffectsVTbl
    query_interface : Proc(IWMPEffects*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPEffects*, UInt32)
    release : Proc(IWMPEffects*, UInt32)
    render : Proc(IWMPEffects*, TimedLevel*, HDC, RECT*, HRESULT)
    media_info : Proc(IWMPEffects*, Int32, Int32, UInt8*, HRESULT)
    get_capabilities : Proc(IWMPEffects*, UInt32*, HRESULT)
    get_title : Proc(IWMPEffects*, UInt8**, HRESULT)
    get_preset_title : Proc(IWMPEffects*, Int32, UInt8**, HRESULT)
    get_preset_count : Proc(IWMPEffects*, Int32*, HRESULT)
    set_current_preset : Proc(IWMPEffects*, Int32, HRESULT)
    get_current_preset : Proc(IWMPEffects*, Int32*, HRESULT)
    display_property_page : Proc(IWMPEffects*, LibC::HANDLE, HRESULT)
    go_fullscreen : Proc(IWMPEffects*, LibC::BOOL, HRESULT)
    render_full_screen : Proc(IWMPEffects*, TimedLevel*, HRESULT)
  end

  IWMPEffects_GUID = LibC::GUID.new("d3984c13-c3cb-48e2-8be5-5168340b4f35")
  CLSID_IWMPEffects = "d3984c13-c3cb-48e2-8be5-5168340b4f35"
  struct IWMPEffects
    lpVtbl : IWMPEffectsVTbl*
  end

  struct IWMPEffects2VTbl
    query_interface : Proc(IWMPEffects2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPEffects2*, UInt32)
    release : Proc(IWMPEffects2*, UInt32)
    render : Proc(IWMPEffects2*, TimedLevel*, HDC, RECT*, HRESULT)
    media_info : Proc(IWMPEffects2*, Int32, Int32, UInt8*, HRESULT)
    get_capabilities : Proc(IWMPEffects2*, UInt32*, HRESULT)
    get_title : Proc(IWMPEffects2*, UInt8**, HRESULT)
    get_preset_title : Proc(IWMPEffects2*, Int32, UInt8**, HRESULT)
    get_preset_count : Proc(IWMPEffects2*, Int32*, HRESULT)
    set_current_preset : Proc(IWMPEffects2*, Int32, HRESULT)
    get_current_preset : Proc(IWMPEffects2*, Int32*, HRESULT)
    display_property_page : Proc(IWMPEffects2*, LibC::HANDLE, HRESULT)
    go_fullscreen : Proc(IWMPEffects2*, LibC::BOOL, HRESULT)
    render_full_screen : Proc(IWMPEffects2*, TimedLevel*, HRESULT)
    set_core : Proc(IWMPEffects2*, IWMPCore, HRESULT)
    create : Proc(IWMPEffects2*, LibC::HANDLE, HRESULT)
    destroy : Proc(IWMPEffects2*, HRESULT)
    notify_new_media : Proc(IWMPEffects2*, IWMPMedia, HRESULT)
    on_window_message : Proc(IWMPEffects2*, UInt32, LibC::UINT_PTR, LPARAM, LRESULT*, HRESULT)
    render_windowed : Proc(IWMPEffects2*, TimedLevel*, LibC::BOOL, HRESULT)
  end

  IWMPEffects2_GUID = LibC::GUID.new("695386ec-aa3c-4618-a5e1-dd9a8b987632")
  CLSID_IWMPEffects2 = "695386ec-aa3c-4618-a5e1-dd9a8b987632"
  struct IWMPEffects2
    lpVtbl : IWMPEffects2VTbl*
  end

  struct IWMPPluginUIVTbl
    query_interface : Proc(IWMPPluginUI*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPPluginUI*, UInt32)
    release : Proc(IWMPPluginUI*, UInt32)
    set_core : Proc(IWMPPluginUI*, IWMPCore, HRESULT)
    create : Proc(IWMPPluginUI*, LibC::HANDLE, HANDLE*, HRESULT)
    destroy : Proc(IWMPPluginUI*, HRESULT)
    display_property_page : Proc(IWMPPluginUI*, LibC::HANDLE, HRESULT)
    get_property : Proc(IWMPPluginUI*, LibC::LPWSTR, VARIANT*, HRESULT)
    set_property : Proc(IWMPPluginUI*, LibC::LPWSTR, VARIANT*, HRESULT)
    translate_accelerator : Proc(IWMPPluginUI*, MSG*, HRESULT)
  end

  IWMPPluginUI_GUID = LibC::GUID.new("4c5e8f9f-ad3e-4bf9-9753-fcd30d6d38dd")
  CLSID_IWMPPluginUI = "4c5e8f9f-ad3e-4bf9-9753-fcd30d6d38dd"
  struct IWMPPluginUI
    lpVtbl : IWMPPluginUIVTbl*
  end

  struct IWMPContentContainerVTbl
    query_interface : Proc(IWMPContentContainer*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPContentContainer*, UInt32)
    release : Proc(IWMPContentContainer*, UInt32)
    get_id : Proc(IWMPContentContainer*, UInt32*, HRESULT)
    get_price : Proc(IWMPContentContainer*, UInt8**, HRESULT)
    get_type : Proc(IWMPContentContainer*, UInt8**, HRESULT)
    get_content_count : Proc(IWMPContentContainer*, UInt32*, HRESULT)
    get_content_price : Proc(IWMPContentContainer*, UInt32, UInt8**, HRESULT)
    get_content_id : Proc(IWMPContentContainer*, UInt32, UInt32*, HRESULT)
  end

  IWMPContentContainer_GUID = LibC::GUID.new("ad7f4d9c-1a9f-4ed2-9815-ecc0b58cb616")
  CLSID_IWMPContentContainer = "ad7f4d9c-1a9f-4ed2-9815-ecc0b58cb616"
  struct IWMPContentContainer
    lpVtbl : IWMPContentContainerVTbl*
  end

  struct IWMPContentContainerListVTbl
    query_interface : Proc(IWMPContentContainerList*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPContentContainerList*, UInt32)
    release : Proc(IWMPContentContainerList*, UInt32)
    get_transaction_type : Proc(IWMPContentContainerList*, WMPTransactionType*, HRESULT)
    get_container_count : Proc(IWMPContentContainerList*, UInt32*, HRESULT)
    get_container : Proc(IWMPContentContainerList*, UInt32, IWMPContentContainer*, HRESULT)
  end

  IWMPContentContainerList_GUID = LibC::GUID.new("a9937f78-0802-4af8-8b8d-e3f045bc8ab5")
  CLSID_IWMPContentContainerList = "a9937f78-0802-4af8-8b8d-e3f045bc8ab5"
  struct IWMPContentContainerList
    lpVtbl : IWMPContentContainerListVTbl*
  end

  struct IWMPContentPartnerCallbackVTbl
    query_interface : Proc(IWMPContentPartnerCallback*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPContentPartnerCallback*, UInt32)
    release : Proc(IWMPContentPartnerCallback*, UInt32)
    notify : Proc(IWMPContentPartnerCallback*, WMPCallbackNotification, VARIANT*, HRESULT)
    buy_complete : Proc(IWMPContentPartnerCallback*, HRESULT, UInt32, HRESULT)
    download_track : Proc(IWMPContentPartnerCallback*, UInt32, UInt8*, UInt32, UInt8*, HRESULT, HRESULT)
    get_catalog_version : Proc(IWMPContentPartnerCallback*, UInt32*, UInt32*, UInt32*, HRESULT)
    update_device_complete : Proc(IWMPContentPartnerCallback*, UInt8*, HRESULT)
    change_view : Proc(IWMPContentPartnerCallback*, UInt8*, UInt8*, UInt8*, HRESULT)
    add_list_contents : Proc(IWMPContentPartnerCallback*, UInt32, UInt32, UInt32*, HRESULT)
    list_contents_complete : Proc(IWMPContentPartnerCallback*, UInt32, HRESULT, HRESULT)
    send_message_complete : Proc(IWMPContentPartnerCallback*, UInt8*, UInt8*, UInt8*, HRESULT)
    get_content_i_ds_in_library : Proc(IWMPContentPartnerCallback*, UInt32*, UInt32**, HRESULT)
    refresh_license_complete : Proc(IWMPContentPartnerCallback*, UInt32, UInt32, HRESULT, HRESULT)
    show_popup : Proc(IWMPContentPartnerCallback*, Int32, UInt8*, HRESULT)
    verify_permission_complete : Proc(IWMPContentPartnerCallback*, UInt8*, VARIANT*, HRESULT, HRESULT)
  end

  IWMPContentPartnerCallback_GUID = LibC::GUID.new("9e8f7da2-0695-403c-b697-da10fafaa676")
  CLSID_IWMPContentPartnerCallback = "9e8f7da2-0695-403c-b697-da10fafaa676"
  struct IWMPContentPartnerCallback
    lpVtbl : IWMPContentPartnerCallbackVTbl*
  end

  struct IWMPContentPartnerVTbl
    query_interface : Proc(IWMPContentPartner*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPContentPartner*, UInt32)
    release : Proc(IWMPContentPartner*, UInt32)
    set_callback : Proc(IWMPContentPartner*, IWMPContentPartnerCallback, HRESULT)
    notify : Proc(IWMPContentPartner*, WMPPartnerNotification, VARIANT*, HRESULT)
    get_item_info : Proc(IWMPContentPartner*, UInt8*, VARIANT*, VARIANT*, HRESULT)
    get_content_partner_info : Proc(IWMPContentPartner*, UInt8*, VARIANT*, HRESULT)
    get_commands : Proc(IWMPContentPartner*, UInt8*, VARIANT*, UInt8*, UInt32, UInt32*, UInt32*, WMPContextMenuInfo**, HRESULT)
    invoke_command : Proc(IWMPContentPartner*, UInt32, UInt8*, VARIANT*, UInt8*, UInt32, UInt32*, HRESULT)
    can_buy_silent : Proc(IWMPContentPartner*, IWMPContentContainerList, UInt8**, Int16*, HRESULT)
    buy : Proc(IWMPContentPartner*, IWMPContentContainerList, UInt32, HRESULT)
    get_streaming_url : Proc(IWMPContentPartner*, WMPStreamingType, VARIANT*, UInt8**, HRESULT)
    download : Proc(IWMPContentPartner*, IWMPContentContainerList, UInt32, HRESULT)
    download_track_complete : Proc(IWMPContentPartner*, HRESULT, UInt32, UInt8*, HRESULT)
    refresh_license : Proc(IWMPContentPartner*, UInt32, Int16, UInt8*, WMPStreamingType, UInt32, UInt8*, VARIANT*, HRESULT)
    get_catalog_url : Proc(IWMPContentPartner*, UInt32, UInt32, UInt32, UInt32*, UInt8**, VARIANT*, HRESULT)
    get_template : Proc(IWMPContentPartner*, WMPTaskType, UInt8*, VARIANT*, UInt8*, VARIANT*, UInt8*, UInt8*, UInt8**, WMPTemplateSize*, HRESULT)
    update_device : Proc(IWMPContentPartner*, UInt8*, HRESULT)
    get_list_contents : Proc(IWMPContentPartner*, UInt8*, VARIANT*, UInt8*, UInt8*, UInt32, HRESULT)
    login : Proc(IWMPContentPartner*, BLOB, BLOB, Int16, Int16, HRESULT)
    authenticate : Proc(IWMPContentPartner*, BLOB, BLOB, HRESULT)
    logout : Proc(IWMPContentPartner*, HRESULT)
    send_message : Proc(IWMPContentPartner*, UInt8*, UInt8*, HRESULT)
    station_event : Proc(IWMPContentPartner*, UInt8*, UInt32, UInt32, UInt32, UInt8*, UInt32, HRESULT)
    compare_container_list_prices : Proc(IWMPContentPartner*, IWMPContentContainerList, IWMPContentContainerList, Int32*, HRESULT)
    verify_permission : Proc(IWMPContentPartner*, UInt8*, VARIANT*, HRESULT)
  end

  IWMPContentPartner_GUID = LibC::GUID.new("55455073-41b5-4e75-87b8-f13bdb291d08")
  CLSID_IWMPContentPartner = "55455073-41b5-4e75-87b8-f13bdb291d08"
  struct IWMPContentPartner
    lpVtbl : IWMPContentPartnerVTbl*
  end

  struct IWMPSubscriptionServiceVTbl
    query_interface : Proc(IWMPSubscriptionService*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPSubscriptionService*, UInt32)
    release : Proc(IWMPSubscriptionService*, UInt32)
    allow_play : Proc(IWMPSubscriptionService*, LibC::HANDLE, IWMPMedia, LibC::BOOL*, HRESULT)
    allow_cd_burn : Proc(IWMPSubscriptionService*, LibC::HANDLE, IWMPPlaylist, LibC::BOOL*, HRESULT)
    allow_pda_transfer : Proc(IWMPSubscriptionService*, LibC::HANDLE, IWMPPlaylist, LibC::BOOL*, HRESULT)
    start_background_processing : Proc(IWMPSubscriptionService*, LibC::HANDLE, HRESULT)
  end

  IWMPSubscriptionService_GUID = LibC::GUID.new("376055f8-2a59-4a73-9501-dca5273a7a10")
  CLSID_IWMPSubscriptionService = "376055f8-2a59-4a73-9501-dca5273a7a10"
  struct IWMPSubscriptionService
    lpVtbl : IWMPSubscriptionServiceVTbl*
  end

  struct IWMPSubscriptionServiceCallbackVTbl
    query_interface : Proc(IWMPSubscriptionServiceCallback*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPSubscriptionServiceCallback*, UInt32)
    release : Proc(IWMPSubscriptionServiceCallback*, UInt32)
    on_complete : Proc(IWMPSubscriptionServiceCallback*, HRESULT, HRESULT)
  end

  IWMPSubscriptionServiceCallback_GUID = LibC::GUID.new("dd01d127-2dc2-4c3a-876e-63312079f9b0")
  CLSID_IWMPSubscriptionServiceCallback = "dd01d127-2dc2-4c3a-876e-63312079f9b0"
  struct IWMPSubscriptionServiceCallback
    lpVtbl : IWMPSubscriptionServiceCallbackVTbl*
  end

  struct IWMPSubscriptionService2VTbl
    query_interface : Proc(IWMPSubscriptionService2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPSubscriptionService2*, UInt32)
    release : Proc(IWMPSubscriptionService2*, UInt32)
    allow_play : Proc(IWMPSubscriptionService2*, LibC::HANDLE, IWMPMedia, LibC::BOOL*, HRESULT)
    allow_cd_burn : Proc(IWMPSubscriptionService2*, LibC::HANDLE, IWMPPlaylist, LibC::BOOL*, HRESULT)
    allow_pda_transfer : Proc(IWMPSubscriptionService2*, LibC::HANDLE, IWMPPlaylist, LibC::BOOL*, HRESULT)
    start_background_processing : Proc(IWMPSubscriptionService2*, LibC::HANDLE, HRESULT)
    stop_background_processing : Proc(IWMPSubscriptionService2*, HRESULT)
    service_event : Proc(IWMPSubscriptionService2*, WMPSubscriptionServiceEvent, HRESULT)
    device_available : Proc(IWMPSubscriptionService2*, UInt8*, IWMPSubscriptionServiceCallback, HRESULT)
    prepare_for_sync : Proc(IWMPSubscriptionService2*, UInt8*, UInt8*, IWMPSubscriptionServiceCallback, HRESULT)
  end

  IWMPSubscriptionService2_GUID = LibC::GUID.new("a94c120e-d600-4ec6-b05e-ec9d56d84de0")
  CLSID_IWMPSubscriptionService2 = "a94c120e-d600-4ec6-b05e-ec9d56d84de0"
  struct IWMPSubscriptionService2
    lpVtbl : IWMPSubscriptionService2VTbl*
  end

  struct IWMPDownloadItemVTbl
    query_interface : Proc(IWMPDownloadItem*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPDownloadItem*, UInt32)
    release : Proc(IWMPDownloadItem*, UInt32)
    get_type_info_count : Proc(IWMPDownloadItem*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPDownloadItem*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPDownloadItem*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPDownloadItem*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_source_url : Proc(IWMPDownloadItem*, UInt8**, HRESULT)
    get_size : Proc(IWMPDownloadItem*, Int32*, HRESULT)
    get_type : Proc(IWMPDownloadItem*, UInt8**, HRESULT)
    get_progress : Proc(IWMPDownloadItem*, Int32*, HRESULT)
    get_download_state : Proc(IWMPDownloadItem*, WMPSubscriptionDownloadState*, HRESULT)
    pause : Proc(IWMPDownloadItem*, HRESULT)
    resume : Proc(IWMPDownloadItem*, HRESULT)
    cancel : Proc(IWMPDownloadItem*, HRESULT)
  end

  IWMPDownloadItem_GUID = LibC::GUID.new("c9470e8e-3f6b-46a9-a0a9-452815c34297")
  CLSID_IWMPDownloadItem = "c9470e8e-3f6b-46a9-a0a9-452815c34297"
  struct IWMPDownloadItem
    lpVtbl : IWMPDownloadItemVTbl*
  end

  struct IWMPDownloadItem2VTbl
    query_interface : Proc(IWMPDownloadItem2*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPDownloadItem2*, UInt32)
    release : Proc(IWMPDownloadItem2*, UInt32)
    get_type_info_count : Proc(IWMPDownloadItem2*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPDownloadItem2*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPDownloadItem2*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPDownloadItem2*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_source_url : Proc(IWMPDownloadItem2*, UInt8**, HRESULT)
    get_size : Proc(IWMPDownloadItem2*, Int32*, HRESULT)
    get_type : Proc(IWMPDownloadItem2*, UInt8**, HRESULT)
    get_progress : Proc(IWMPDownloadItem2*, Int32*, HRESULT)
    get_download_state : Proc(IWMPDownloadItem2*, WMPSubscriptionDownloadState*, HRESULT)
    pause : Proc(IWMPDownloadItem2*, HRESULT)
    resume : Proc(IWMPDownloadItem2*, HRESULT)
    cancel : Proc(IWMPDownloadItem2*, HRESULT)
    get_item_info : Proc(IWMPDownloadItem2*, UInt8*, UInt8**, HRESULT)
  end

  IWMPDownloadItem2_GUID = LibC::GUID.new("9fbb3336-6da3-479d-b8ff-67d46e20a987")
  CLSID_IWMPDownloadItem2 = "9fbb3336-6da3-479d-b8ff-67d46e20a987"
  struct IWMPDownloadItem2
    lpVtbl : IWMPDownloadItem2VTbl*
  end

  struct IWMPDownloadCollectionVTbl
    query_interface : Proc(IWMPDownloadCollection*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPDownloadCollection*, UInt32)
    release : Proc(IWMPDownloadCollection*, UInt32)
    get_type_info_count : Proc(IWMPDownloadCollection*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPDownloadCollection*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPDownloadCollection*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPDownloadCollection*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_id : Proc(IWMPDownloadCollection*, Int32*, HRESULT)
    get_count : Proc(IWMPDownloadCollection*, Int32*, HRESULT)
    item : Proc(IWMPDownloadCollection*, Int32, IWMPDownloadItem2*, HRESULT)
    start_download : Proc(IWMPDownloadCollection*, UInt8*, UInt8*, IWMPDownloadItem2*, HRESULT)
    remove_item : Proc(IWMPDownloadCollection*, Int32, HRESULT)
    clear : Proc(IWMPDownloadCollection*, HRESULT)
  end

  IWMPDownloadCollection_GUID = LibC::GUID.new("0a319c7f-85f9-436c-b88e-82fd88000e1c")
  CLSID_IWMPDownloadCollection = "0a319c7f-85f9-436c-b88e-82fd88000e1c"
  struct IWMPDownloadCollection
    lpVtbl : IWMPDownloadCollectionVTbl*
  end

  struct IWMPDownloadManagerVTbl
    query_interface : Proc(IWMPDownloadManager*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMPDownloadManager*, UInt32)
    release : Proc(IWMPDownloadManager*, UInt32)
    get_type_info_count : Proc(IWMPDownloadManager*, UInt32*, HRESULT)
    get_type_info : Proc(IWMPDownloadManager*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMPDownloadManager*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMPDownloadManager*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_download_collection : Proc(IWMPDownloadManager*, Int32, IWMPDownloadCollection*, HRESULT)
    create_download_collection : Proc(IWMPDownloadManager*, IWMPDownloadCollection*, HRESULT)
  end

  IWMPDownloadManager_GUID = LibC::GUID.new("e15e9ad1-8f20-4cc4-9ec7-1a328ca86a0d")
  CLSID_IWMPDownloadManager = "e15e9ad1-8f20-4cc4-9ec7-1a328ca86a0d"
  struct IWMPDownloadManager
    lpVtbl : IWMPDownloadManagerVTbl*
  end

end
