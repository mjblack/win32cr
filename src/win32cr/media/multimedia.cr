require "./audio.cr"
require "./../foundation.cr"
require "./../graphics/gdi.cr"
require "./../media.cr"
require "./../system/com.cr"
require "./../ui/controls.cr"
require "./../system/io.cr"
require "./../ui/controls/dialogs.cr"

module Win32cr::Media::Multimedia
  extend self
  alias HMMIO = LibC::IntPtrT
  alias HDRVR = LibC::IntPtrT
  alias HIC = LibC::IntPtrT
  alias HVIDEO = LibC::IntPtrT
  alias YIELDPROC = Proc(UInt32, UInt32, UInt32)

  alias DRIVERPROC = Proc(LibC::UIntPtrT, Win32cr::Media::Multimedia::HDRVR, UInt32, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LRESULT)

  alias DRIVERMSGPROC = Proc(UInt32, UInt32, LibC::UIntPtrT, LibC::UIntPtrT, LibC::UIntPtrT, UInt32)

  alias LPMMIOPROC = Proc(Win32cr::Foundation::PSTR, UInt32, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LRESULT)

  alias AVISAVECALLBACK = Proc(Int32, Win32cr::Foundation::BOOL)

  alias CAPYIELDCALLBACK = Proc(Win32cr::Foundation::HWND, Win32cr::Foundation::LRESULT)

  alias CAPSTATUSCALLBACKW = Proc(Win32cr::Foundation::HWND, Int32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::LRESULT)

  alias CAPERRORCALLBACKW = Proc(Win32cr::Foundation::HWND, Int32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::LRESULT)

  alias CAPSTATUSCALLBACKA = Proc(Win32cr::Foundation::HWND, Int32, Win32cr::Foundation::PSTR, Win32cr::Foundation::LRESULT)

  alias CAPERRORCALLBACKA = Proc(Win32cr::Foundation::HWND, Int32, Win32cr::Foundation::PSTR, Win32cr::Foundation::LRESULT)

  alias CAPVIDEOCALLBACK = Proc(Win32cr::Foundation::HWND, Win32cr::Media::Multimedia::VIDEOHDR*, Win32cr::Foundation::LRESULT)

  alias CAPWAVECALLBACK = Proc(Win32cr::Foundation::HWND, Win32cr::Media::Audio::WAVEHDR*, Win32cr::Foundation::LRESULT)

  alias CAPCONTROLCALLBACK = Proc(Win32cr::Foundation::HWND, Int32, Win32cr::Foundation::LRESULT)

  alias LPTASKCALLBACK = Proc(LibC::UIntPtrT, Void)

  alias VFWWDMExtensionProc = Proc(Void*, Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, Win32cr::Foundation::LPARAM, UInt32)

  alias LPFNEXTDEVIO = Proc(Win32cr::Foundation::LPARAM, UInt32, UInt32, Void*, UInt32, Void*, UInt32, UInt32*, Win32cr::System::IO::OVERLAPPED*, Win32cr::Foundation::BOOL)

  WM_CAP_START = 1024_u32
  MODM_USER = 16384_u32
  MIDM_USER = 16384_u32
  MODM_MAPPER = 8192_u32
  MIDM_MAPPER = 8192_u32
  MODM_INIT = 100_u32
  MIDM_INIT = 100_u32
  MODM_INIT_EX = 104_u32
  MIDM_INIT_EX = 104_u32
  DRV_MCI_FIRST = 2048_u32
  ACMDM_BASE = 24576_u32
  ICM_RESERVED = 20480_u32
  MCI_TEST = 32_i32
  MCI_CAPTURE = 2160_u32
  MCI_MONITOR = 2161_u32
  MCI_RESERVE = 2162_u32
  MCI_SETAUDIO = 2163_u32
  MCI_SIGNAL = 2165_u32
  MCI_SETVIDEO = 2166_u32
  MCI_QUALITY = 2167_u32
  MCI_LIST = 2168_u32
  MCI_UNDO = 2169_u32
  MCI_CONFIGURE = 2170_u32
  MCI_RESTORE = 2171_u32
  MCI_ON = 1_u32
  MCI_OFF = 0_u32
  MCI_DGV_FILE_MODE_SAVING = 1_u32
  MCI_DGV_FILE_MODE_LOADING = 2_u32
  MCI_DGV_FILE_MODE_EDITING = 3_u32
  MCI_DGV_FILE_MODE_IDLE = 4_u32
  MCI_ON_S = 32768_i32
  MCI_OFF_S = 32769_i32
  MCI_DGV_FILE_S = 32770_i32
  MCI_DGV_INPUT_S = 32771_i32
  MCI_DGV_FILE_MODE_SAVING_S = 32772_i32
  MCI_DGV_FILE_MODE_LOADING_S = 32773_i32
  MCI_DGV_FILE_MODE_EDITING_S = 32774_i32
  MCI_DGV_FILE_MODE_IDLE_S = 32775_i32
  MCI_DGV_SETVIDEO_SRC_NTSC_S = 32784_i32
  MCI_DGV_SETVIDEO_SRC_RGB_S = 32785_i32
  MCI_DGV_SETVIDEO_SRC_SVIDEO_S = 32786_i32
  MCI_DGV_SETVIDEO_SRC_PAL_S = 32787_i32
  MCI_DGV_SETVIDEO_SRC_SECAM_S = 32788_i32
  MCI_DGV_SETVIDEO_SRC_GENERIC_S = 32789_i32
  MCI_DGV_SETAUDIO_SRC_LEFT_S = 32800_i32
  MCI_DGV_SETAUDIO_SRC_RIGHT_S = 32801_i32
  MCI_DGV_SETAUDIO_SRC_AVERAGE_S = 32802_i32
  MCI_DGV_SETAUDIO_SRC_STEREO_S = 32803_i32
  MCIERR_DGV_DEVICE_LIMIT = 512_u32
  MCIERR_DGV_IOERR = 513_u32
  MCIERR_DGV_WORKSPACE_EMPTY = 514_u32
  MCIERR_DGV_DISK_FULL = 515_u32
  MCIERR_DGV_DEVICE_MEMORY_FULL = 516_u32
  MCIERR_DGV_BAD_CLIPBOARD_RANGE = 517_u32
  MCI_DGV_METHOD_PRE = 40960_i32
  MCI_DGV_METHOD_POST = 40961_i32
  MCI_DGV_METHOD_DIRECT = 40962_i32
  MCI_DGV_FF_AVSS = 16384_i32
  MCI_DGV_FF_AVI = 16385_i32
  MCI_DGV_FF_DIB = 16386_i32
  MCI_DGV_FF_RDIB = 16387_i32
  MCI_DGV_FF_JPEG = 16388_i32
  MCI_DGV_FF_RJPEG = 16389_i32
  MCI_DGV_FF_JFIF = 16390_i32
  MCI_DGV_FF_MPEG = 16391_i32
  MCI_DGV_GETDEVCAPS_CAN_LOCK = 16384_i32
  MCI_DGV_GETDEVCAPS_CAN_STRETCH = 16385_i32
  MCI_DGV_GETDEVCAPS_CAN_FREEZE = 16386_i32
  MCI_DGV_GETDEVCAPS_MAX_WINDOWS = 16387_i32
  MCI_DGV_GETDEVCAPS_CAN_REVERSE = 16388_i32
  MCI_DGV_GETDEVCAPS_HAS_STILL = 16389_i32
  MCI_DGV_GETDEVCAPS_PALETTES = 16390_i32
  MCI_DGV_GETDEVCAPS_CAN_STR_IN = 16392_i32
  MCI_DGV_GETDEVCAPS_CAN_TEST = 16393_i32
  MCI_DGV_GETDEVCAPS_MAXIMUM_RATE = 16394_i32
  MCI_DGV_GETDEVCAPS_MINIMUM_RATE = 16395_i32
  MCI_DGV_CAPTURE_AS = 65536_i32
  MCI_DGV_CAPTURE_AT = 131072_i32
  MCI_DGV_COPY_AT = 65536_i32
  MCI_DGV_COPY_AUDIO_STREAM = 131072_i32
  MCI_DGV_COPY_VIDEO_STREAM = 262144_i32
  MCI_DGV_CUE_INPUT = 65536_i32
  MCI_DGV_CUE_OUTPUT = 131072_i32
  MCI_DGV_CUE_NOSHOW = 262144_i32
  MCI_DGV_CUT_AT = 65536_i32
  MCI_DGV_CUT_AUDIO_STREAM = 131072_i32
  MCI_DGV_CUT_VIDEO_STREAM = 262144_i32
  MCI_DGV_DELETE_AT = 65536_i32
  MCI_DGV_DELETE_AUDIO_STREAM = 131072_i32
  MCI_DGV_DELETE_VIDEO_STREAM = 262144_i32
  MCI_DGV_FREEZE_AT = 65536_i32
  MCI_DGV_FREEZE_OUTSIDE = 131072_i32
  MCI_DGV_INFO_TEXT = 65536_i32
  MCI_DGV_INFO_ITEM = 131072_i32
  MCI_INFO_VERSION = 1024_i32
  MCI_DGV_INFO_USAGE = 16384_i32
  MCI_DGV_INFO_AUDIO_QUALITY = 16385_i32
  MCI_DGV_INFO_STILL_QUALITY = 16386_i32
  MCI_DGV_INFO_VIDEO_QUALITY = 16387_i32
  MCI_DGV_INFO_AUDIO_ALG = 16388_i32
  MCI_DGV_INFO_STILL_ALG = 16389_i32
  MCI_DGV_INFO_VIDEO_ALG = 16390_i32
  MCI_DGV_LIST_ITEM = 65536_i32
  MCI_DGV_LIST_COUNT = 131072_i32
  MCI_DGV_LIST_NUMBER = 262144_i32
  MCI_DGV_LIST_ALG = 524288_i32
  MCI_DGV_LIST_AUDIO_ALG = 16384_i32
  MCI_DGV_LIST_AUDIO_QUALITY = 16385_i32
  MCI_DGV_LIST_AUDIO_STREAM = 16386_i32
  MCI_DGV_LIST_STILL_ALG = 16387_i32
  MCI_DGV_LIST_STILL_QUALITY = 16388_i32
  MCI_DGV_LIST_VIDEO_ALG = 16389_i32
  MCI_DGV_LIST_VIDEO_QUALITY = 16390_i32
  MCI_DGV_LIST_VIDEO_STREAM = 16391_i32
  MCI_DGV_LIST_VIDEO_SOURCE = 16392_i32
  MCI_DGV_MONITOR_METHOD = 65536_i32
  MCI_DGV_MONITOR_SOURCE = 131072_i32
  MCI_DGV_MONITOR_INPUT = 16384_i32
  MCI_DGV_MONITOR_FILE = 16385_i32
  MCI_DGV_OPEN_WS = 65536_i32
  MCI_DGV_OPEN_PARENT = 131072_i32
  MCI_DGV_OPEN_NOSTATIC = 262144_i32
  MCI_DGV_OPEN_16BIT = 524288_i32
  MCI_DGV_OPEN_32BIT = 1048576_i32
  MCI_DGV_PASTE_AT = 65536_i32
  MCI_DGV_PASTE_AUDIO_STREAM = 131072_i32
  MCI_DGV_PASTE_VIDEO_STREAM = 262144_i32
  MCI_DGV_PASTE_INSERT = 524288_i32
  MCI_DGV_PASTE_OVERWRITE = 1048576_i32
  MCI_DGV_PLAY_REPEAT = 65536_i32
  MCI_DGV_PLAY_REVERSE = 131072_i32
  MCI_DGV_RECT = 65536_i32
  MCI_DGV_PUT_SOURCE = 131072_i32
  MCI_DGV_PUT_DESTINATION = 262144_i32
  MCI_DGV_PUT_FRAME = 524288_i32
  MCI_DGV_PUT_VIDEO = 1048576_i32
  MCI_DGV_PUT_WINDOW = 2097152_i32
  MCI_DGV_PUT_CLIENT = 4194304_i32
  MCI_QUALITY_ITEM = 65536_i32
  MCI_QUALITY_NAME = 131072_i32
  MCI_QUALITY_ALG = 262144_i32
  MCI_QUALITY_DIALOG = 524288_i32
  MCI_QUALITY_HANDLE = 1048576_i32
  MCI_QUALITY_ITEM_AUDIO = 16384_i32
  MCI_QUALITY_ITEM_STILL = 16385_i32
  MCI_QUALITY_ITEM_VIDEO = 16386_i32
  MCI_DGV_REALIZE_NORM = 65536_i32
  MCI_DGV_REALIZE_BKGD = 131072_i32
  MCI_DGV_RECORD_HOLD = 131072_i32
  MCI_DGV_RECORD_AUDIO_STREAM = 262144_i32
  MCI_DGV_RECORD_VIDEO_STREAM = 524288_i32
  MCI_DGV_RESERVE_IN = 65536_i32
  MCI_DGV_RESERVE_SIZE = 131072_i32
  MCI_DGV_RESTORE_FROM = 65536_i32
  MCI_DGV_RESTORE_AT = 131072_i32
  MCI_DGV_SAVE_ABORT = 131072_i32
  MCI_DGV_SAVE_KEEPRESERVE = 262144_i32
  MCI_DGV_SET_SEEK_EXACTLY = 65536_i32
  MCI_DGV_SET_SPEED = 131072_i32
  MCI_DGV_SET_STILL = 262144_i32
  MCI_DGV_SET_FILEFORMAT = 524288_i32
  MCI_DGV_SETAUDIO_OVER = 65536_i32
  MCI_DGV_SETAUDIO_CLOCKTIME = 131072_i32
  MCI_DGV_SETAUDIO_ALG = 262144_i32
  MCI_DGV_SETAUDIO_QUALITY = 524288_i32
  MCI_DGV_SETAUDIO_RECORD = 1048576_i32
  MCI_DGV_SETAUDIO_LEFT = 2097152_i32
  MCI_DGV_SETAUDIO_RIGHT = 4194304_i32
  MCI_DGV_SETAUDIO_ITEM = 8388608_i32
  MCI_DGV_SETAUDIO_VALUE = 16777216_i32
  MCI_DGV_SETAUDIO_INPUT = 33554432_i32
  MCI_DGV_SETAUDIO_OUTPUT = 67108864_i32
  MCI_DGV_SETAUDIO_TREBLE = 16384_i32
  MCI_DGV_SETAUDIO_BASS = 16385_i32
  MCI_DGV_SETAUDIO_VOLUME = 16386_i32
  MCI_DGV_SETAUDIO_STREAM = 16387_i32
  MCI_DGV_SETAUDIO_SOURCE = 16388_i32
  MCI_DGV_SETAUDIO_SAMPLESPERSEC = 16389_i32
  MCI_DGV_SETAUDIO_AVGBYTESPERSEC = 16390_i32
  MCI_DGV_SETAUDIO_BLOCKALIGN = 16391_i32
  MCI_DGV_SETAUDIO_BITSPERSAMPLE = 16392_i32
  MCI_DGV_SETAUDIO_SOURCE_STEREO = 0_i32
  MCI_DGV_SETAUDIO_SOURCE_LEFT = 1_i32
  MCI_DGV_SETAUDIO_SOURCE_RIGHT = 2_i32
  MCI_DGV_SETAUDIO_SOURCE_AVERAGE = 16384_i32
  MCI_DGV_SETVIDEO_QUALITY = 65536_i32
  MCI_DGV_SETVIDEO_ALG = 131072_i32
  MCI_DGV_SETVIDEO_CLOCKTIME = 262144_i32
  MCI_DGV_SETVIDEO_SRC_NUMBER = 524288_i32
  MCI_DGV_SETVIDEO_ITEM = 1048576_i32
  MCI_DGV_SETVIDEO_OVER = 2097152_i32
  MCI_DGV_SETVIDEO_RECORD = 4194304_i32
  MCI_DGV_SETVIDEO_STILL = 8388608_i32
  MCI_DGV_SETVIDEO_VALUE = 16777216_i32
  MCI_DGV_SETVIDEO_INPUT = 33554432_i32
  MCI_DGV_SETVIDEO_OUTPUT = 67108864_i32
  MCI_DGV_SETVIDEO_SRC_NTSC = 16384_i32
  MCI_DGV_SETVIDEO_SRC_RGB = 16385_i32
  MCI_DGV_SETVIDEO_SRC_SVIDEO = 16386_i32
  MCI_DGV_SETVIDEO_SRC_PAL = 16387_i32
  MCI_DGV_SETVIDEO_SRC_SECAM = 16388_i32
  MCI_DGV_SETVIDEO_SRC_GENERIC = 16389_i32
  MCI_DGV_SETVIDEO_BRIGHTNESS = 16384_i32
  MCI_DGV_SETVIDEO_COLOR = 16385_i32
  MCI_DGV_SETVIDEO_CONTRAST = 16386_i32
  MCI_DGV_SETVIDEO_TINT = 16387_i32
  MCI_DGV_SETVIDEO_SHARPNESS = 16388_i32
  MCI_DGV_SETVIDEO_GAMMA = 16389_i32
  MCI_DGV_SETVIDEO_STREAM = 16390_i32
  MCI_DGV_SETVIDEO_PALHANDLE = 16391_i32
  MCI_DGV_SETVIDEO_FRAME_RATE = 16392_i32
  MCI_DGV_SETVIDEO_SOURCE = 16393_i32
  MCI_DGV_SETVIDEO_KEY_INDEX = 16394_i32
  MCI_DGV_SETVIDEO_KEY_COLOR = 16395_i32
  MCI_DGV_SETVIDEO_BITSPERPEL = 16396_i32
  MCI_DGV_SIGNAL_AT = 65536_i32
  MCI_DGV_SIGNAL_EVERY = 131072_i32
  MCI_DGV_SIGNAL_USERVAL = 262144_i32
  MCI_DGV_SIGNAL_CANCEL = 524288_i32
  MCI_DGV_SIGNAL_POSITION = 1048576_i32
  MCI_DGV_STATUS_NOMINAL = 131072_i32
  MCI_DGV_STATUS_REFERENCE = 262144_i32
  MCI_DGV_STATUS_LEFT = 524288_i32
  MCI_DGV_STATUS_RIGHT = 1048576_i32
  MCI_DGV_STATUS_DISKSPACE = 2097152_i32
  MCI_DGV_STATUS_INPUT = 4194304_i32
  MCI_DGV_STATUS_OUTPUT = 8388608_i32
  MCI_DGV_STATUS_RECORD = 16777216_i32
  MCI_DGV_STATUS_AUDIO_INPUT = 16384_i32
  MCI_DGV_STATUS_HWND = 16385_i32
  MCI_DGV_STATUS_SPEED = 16387_i32
  MCI_DGV_STATUS_HPAL = 16388_i32
  MCI_DGV_STATUS_BRIGHTNESS = 16389_i32
  MCI_DGV_STATUS_COLOR = 16390_i32
  MCI_DGV_STATUS_CONTRAST = 16391_i32
  MCI_DGV_STATUS_FILEFORMAT = 16392_i32
  MCI_DGV_STATUS_AUDIO_SOURCE = 16393_i32
  MCI_DGV_STATUS_GAMMA = 16394_i32
  MCI_DGV_STATUS_MONITOR = 16395_i32
  MCI_DGV_STATUS_MONITOR_METHOD = 16396_i32
  MCI_DGV_STATUS_FRAME_RATE = 16398_i32
  MCI_DGV_STATUS_BASS = 16399_i32
  MCI_DGV_STATUS_SIZE = 16400_i32
  MCI_DGV_STATUS_SEEK_EXACTLY = 16401_i32
  MCI_DGV_STATUS_SHARPNESS = 16402_i32
  MCI_DGV_STATUS_SMPTE = 16403_i32
  MCI_DGV_STATUS_AUDIO = 16404_i32
  MCI_DGV_STATUS_TINT = 16405_i32
  MCI_DGV_STATUS_TREBLE = 16406_i32
  MCI_DGV_STATUS_UNSAVED = 16407_i32
  MCI_DGV_STATUS_VIDEO = 16408_i32
  MCI_DGV_STATUS_VOLUME = 16409_i32
  MCI_DGV_STATUS_AUDIO_RECORD = 16410_i32
  MCI_DGV_STATUS_VIDEO_SOURCE = 16411_i32
  MCI_DGV_STATUS_VIDEO_RECORD = 16412_i32
  MCI_DGV_STATUS_STILL_FILEFORMAT = 16413_i32
  MCI_DGV_STATUS_VIDEO_SRC_NUM = 16414_i32
  MCI_DGV_STATUS_FILE_MODE = 16415_i32
  MCI_DGV_STATUS_FILE_COMPLETION = 16416_i32
  MCI_DGV_STATUS_WINDOW_VISIBLE = 16417_i32
  MCI_DGV_STATUS_WINDOW_MINIMIZED = 16418_i32
  MCI_DGV_STATUS_WINDOW_MAXIMIZED = 16419_i32
  MCI_DGV_STATUS_KEY_INDEX = 16420_i32
  MCI_DGV_STATUS_KEY_COLOR = 16421_i32
  MCI_DGV_STATUS_PAUSE_MODE = 16422_i32
  MCI_DGV_STATUS_SAMPLESPERSEC = 16423_i32
  MCI_DGV_STATUS_AVGBYTESPERSEC = 16424_i32
  MCI_DGV_STATUS_BLOCKALIGN = 16425_i32
  MCI_DGV_STATUS_BITSPERSAMPLE = 16426_i32
  MCI_DGV_STATUS_BITSPERPEL = 16427_i32
  MCI_DGV_STATUS_FORWARD = 16428_i32
  MCI_DGV_STATUS_AUDIO_STREAM = 16429_i32
  MCI_DGV_STATUS_VIDEO_STREAM = 16430_i32
  MCI_DGV_STEP_REVERSE = 65536_i32
  MCI_DGV_STEP_FRAMES = 131072_i32
  MCI_DGV_STOP_HOLD = 65536_i32
  MCI_DGV_UPDATE_HDC = 131072_i32
  MCI_DGV_UPDATE_PAINT = 262144_i32
  MCI_DGV_WHERE_SOURCE = 131072_i32
  MCI_DGV_WHERE_DESTINATION = 262144_i32
  MCI_DGV_WHERE_FRAME = 524288_i32
  MCI_DGV_WHERE_VIDEO = 1048576_i32
  MCI_DGV_WHERE_WINDOW = 2097152_i32
  MCI_DGV_WHERE_MAX = 4194304_i32
  MCI_DGV_WINDOW_HWND = 65536_i32
  MCI_DGV_WINDOW_STATE = 262144_i32
  MCI_DGV_WINDOW_TEXT = 524288_i32
  MCI_DGV_WINDOW_DEFAULT = 0_i32
  MM_CREATIVE = 2_u32
  MM_MEDIAVISION = 3_u32
  MM_FUJITSU = 4_u32
  MM_PRAGMATRAX = 5_u32
  MM_CYRIX = 6_u32
  MM_PHILIPS_SPEECH_PROCESSING = 7_u32
  MM_NETXL = 8_u32
  MM_ZYXEL = 9_u32
  MM_BECUBED = 10_u32
  MM_AARDVARK = 11_u32
  MM_BINTEC = 12_u32
  MM_HEWLETT_PACKARD = 13_u32
  MM_ACULAB = 14_u32
  MM_FAITH = 15_u32
  MM_MITEL = 16_u32
  MM_QUANTUM3D = 17_u32
  MM_SNI = 18_u32
  MM_EMU = 19_u32
  MM_ARTISOFT = 20_u32
  MM_TURTLE_BEACH = 21_u32
  MM_IBM = 22_u32
  MM_VOCALTEC = 23_u32
  MM_ROLAND = 24_u32
  MM_DSP_SOLUTIONS = 25_u32
  MM_NEC = 26_u32
  MM_ATI = 27_u32
  MM_WANGLABS = 28_u32
  MM_TANDY = 29_u32
  MM_VOYETRA = 30_u32
  MM_ANTEX = 31_u32
  MM_ICL_PS = 32_u32
  MM_INTEL = 33_u32
  MM_GRAVIS = 34_u32
  MM_VAL = 35_u32
  MM_INTERACTIVE = 36_u32
  MM_YAMAHA = 37_u32
  MM_EVEREX = 38_u32
  MM_ECHO = 39_u32
  MM_SIERRA = 40_u32
  MM_CAT = 41_u32
  MM_APPS = 42_u32
  MM_DSP_GROUP = 43_u32
  MM_MELABS = 44_u32
  MM_COMPUTER_FRIENDS = 45_u32
  MM_ESS = 46_u32
  MM_AUDIOFILE = 47_u32
  MM_MOTOROLA = 48_u32
  MM_CANOPUS = 49_u32
  MM_EPSON = 50_u32
  MM_TRUEVISION = 51_u32
  MM_AZTECH = 52_u32
  MM_VIDEOLOGIC = 53_u32
  MM_SCALACS = 54_u32
  MM_KORG = 55_u32
  MM_APT = 56_u32
  MM_ICS = 57_u32
  MM_ITERATEDSYS = 58_u32
  MM_METHEUS = 59_u32
  MM_LOGITECH = 60_u32
  MM_WINNOV = 61_u32
  MM_NCR = 62_u32
  MM_EXAN = 63_u32
  MM_AST = 64_u32
  MM_WILLOWPOND = 65_u32
  MM_SONICFOUNDRY = 66_u32
  MM_VITEC = 67_u32
  MM_MOSCOM = 68_u32
  MM_SILICONSOFT = 69_u32
  MM_TERRATEC = 70_u32
  MM_MEDIASONIC = 71_u32
  MM_SANYO = 72_u32
  MM_SUPERMAC = 73_u32
  MM_AUDIOPT = 74_u32
  MM_NOGATECH = 75_u32
  MM_SPEECHCOMP = 76_u32
  MM_AHEAD = 77_u32
  MM_DOLBY = 78_u32
  MM_OKI = 79_u32
  MM_AURAVISION = 80_u32
  MM_OLIVETTI = 81_u32
  MM_IOMAGIC = 82_u32
  MM_MATSUSHITA = 83_u32
  MM_CONTROLRES = 84_u32
  MM_XEBEC = 85_u32
  MM_NEWMEDIA = 86_u32
  MM_NMS = 87_u32
  MM_LYRRUS = 88_u32
  MM_COMPUSIC = 89_u32
  MM_OPTI = 90_u32
  MM_ADLACC = 91_u32
  MM_COMPAQ = 92_u32
  MM_DIALOGIC = 93_u32
  MM_INSOFT = 94_u32
  MM_MPTUS = 95_u32
  MM_WEITEK = 96_u32
  MM_LERNOUT_AND_HAUSPIE = 97_u32
  MM_QCIAR = 98_u32
  MM_APPLE = 99_u32
  MM_DIGITAL = 100_u32
  MM_MOTU = 101_u32
  MM_WORKBIT = 102_u32
  MM_OSITECH = 103_u32
  MM_MIRO = 104_u32
  MM_CIRRUSLOGIC = 105_u32
  MM_ISOLUTION = 106_u32
  MM_HORIZONS = 107_u32
  MM_CONCEPTS = 108_u32
  MM_VTG = 109_u32
  MM_RADIUS = 110_u32
  MM_ROCKWELL = 111_u32
  MM_XYZ = 112_u32
  MM_OPCODE = 113_u32
  MM_VOXWARE = 114_u32
  MM_NORTHERN_TELECOM = 115_u32
  MM_APICOM = 116_u32
  MM_GRANDE = 117_u32
  MM_ADDX = 118_u32
  MM_WILDCAT = 119_u32
  MM_RHETOREX = 120_u32
  MM_BROOKTREE = 121_u32
  MM_ENSONIQ = 125_u32
  MM_FAST = 126_u32
  MM_NVIDIA = 127_u32
  MM_OKSORI = 128_u32
  MM_DIACOUSTICS = 129_u32
  MM_GULBRANSEN = 130_u32
  MM_KAY_ELEMETRICS = 131_u32
  MM_CRYSTAL = 132_u32
  MM_SPLASH_STUDIOS = 133_u32
  MM_QUARTERDECK = 134_u32
  MM_TDK = 135_u32
  MM_DIGITAL_AUDIO_LABS = 136_u32
  MM_SEERSYS = 137_u32
  MM_PICTURETEL = 138_u32
  MM_ATT_MICROELECTRONICS = 139_u32
  MM_OSPREY = 140_u32
  MM_MEDIATRIX = 141_u32
  MM_SOUNDESIGNS = 142_u32
  MM_ALDIGITAL = 143_u32
  MM_SPECTRUM_SIGNAL_PROCESSING = 144_u32
  MM_ECS = 145_u32
  MM_AMD = 146_u32
  MM_COREDYNAMICS = 147_u32
  MM_CANAM = 148_u32
  MM_SOFTSOUND = 149_u32
  MM_NORRIS = 150_u32
  MM_DDD = 151_u32
  MM_EUPHONICS = 152_u32
  MM_PRECEPT = 153_u32
  MM_CRYSTAL_NET = 154_u32
  MM_CHROMATIC = 155_u32
  MM_VOICEINFO = 156_u32
  MM_VIENNASYS = 157_u32
  MM_CONNECTIX = 158_u32
  MM_GADGETLABS = 159_u32
  MM_FRONTIER = 160_u32
  MM_VIONA = 161_u32
  MM_CASIO = 162_u32
  MM_DIAMONDMM = 163_u32
  MM_S3 = 164_u32
  MM_DVISION = 165_u32
  MM_NETSCAPE = 166_u32
  MM_SOUNDSPACE = 167_u32
  MM_VANKOEVERING = 168_u32
  MM_QTEAM = 169_u32
  MM_ZEFIRO = 170_u32
  MM_STUDER = 171_u32
  MM_FRAUNHOFER_IIS = 172_u32
  MM_QUICKNET = 173_u32
  MM_ALARIS = 174_u32
  MM_SICRESOURCE = 175_u32
  MM_NEOMAGIC = 176_u32
  MM_MERGING_TECHNOLOGIES = 177_u32
  MM_XIRLINK = 178_u32
  MM_COLORGRAPH = 179_u32
  MM_OTI = 180_u32
  MM_AUREAL = 181_u32
  MM_VIVO = 182_u32
  MM_SHARP = 183_u32
  MM_LUCENT = 184_u32
  MM_ATT = 185_u32
  MM_SUNCOM = 186_u32
  MM_SORVIS = 187_u32
  MM_INVISION = 188_u32
  MM_BERKOM = 189_u32
  MM_MARIAN = 190_u32
  MM_DPSINC = 191_u32
  MM_BCB = 192_u32
  MM_MOTIONPIXELS = 193_u32
  MM_QDESIGN = 194_u32
  MM_NMP = 195_u32
  MM_DATAFUSION = 196_u32
  MM_DUCK = 197_u32
  MM_FTR = 198_u32
  MM_BERCOS = 199_u32
  MM_ONLIVE = 200_u32
  MM_SIEMENS_SBC = 201_u32
  MM_TERALOGIC = 202_u32
  MM_PHONET = 203_u32
  MM_WINBOND = 204_u32
  MM_VIRTUALMUSIC = 205_u32
  MM_ENET = 206_u32
  MM_GUILLEMOT = 207_u32
  MM_EMAGIC = 208_u32
  MM_MWM = 209_u32
  MM_PACIFICRESEARCH = 210_u32
  MM_SIPROLAB = 211_u32
  MM_LYNX = 212_u32
  MM_SPECTRUM_PRODUCTIONS = 213_u32
  MM_DICTAPHONE = 214_u32
  MM_QUALCOMM = 215_u32
  MM_RZS = 216_u32
  MM_AUDIOSCIENCE = 217_u32
  MM_PINNACLE = 218_u32
  MM_EES = 219_u32
  MM_HAFTMANN = 220_u32
  MM_LUCID = 221_u32
  MM_HEADSPACE = 222_u32
  MM_UNISYS = 223_u32
  MM_LUMINOSITI = 224_u32
  MM_ACTIVEVOICE = 225_u32
  MM_DTS = 226_u32
  MM_DIGIGRAM = 227_u32
  MM_SOFTLAB_NSK = 228_u32
  MM_FORTEMEDIA = 229_u32
  MM_SONORUS = 230_u32
  MM_ARRAY = 231_u32
  MM_DATARAN = 232_u32
  MM_I_LINK = 233_u32
  MM_SELSIUS_SYSTEMS = 234_u32
  MM_ADMOS = 235_u32
  MM_LEXICON = 236_u32
  MM_SGI = 237_u32
  MM_IPI = 238_u32
  MM_ICE = 239_u32
  MM_VQST = 240_u32
  MM_ETEK = 241_u32
  MM_CS = 242_u32
  MM_ALESIS = 243_u32
  MM_INTERNET = 244_u32
  MM_SONY = 245_u32
  MM_HYPERACTIVE = 246_u32
  MM_UHER_INFORMATIC = 247_u32
  MM_SYDEC_NV = 248_u32
  MM_FLEXION = 249_u32
  MM_VIA = 250_u32
  MM_MICRONAS = 251_u32
  MM_ANALOGDEVICES = 252_u32
  MM_HP = 253_u32
  MM_MATROX_DIV = 254_u32
  MM_QUICKAUDIO = 255_u32
  MM_YOUCOM = 256_u32
  MM_RICHMOND = 257_u32
  MM_IODD = 258_u32
  MM_ICCC = 259_u32
  MM_3COM = 260_u32
  MM_MALDEN = 261_u32
  MM_3DFX = 262_u32
  MM_MINDMAKER = 263_u32
  MM_TELEKOL = 264_u32
  MM_ST_MICROELECTRONICS = 265_u32
  MM_ALGOVISION = 266_u32
  MM_UNMAPPED = 65535_u32
  MM_PID_UNMAPPED = 65535_u32
  MM_PCSPEAKER_WAVEOUT = 13_u32
  MM_MSFT_WSS_WAVEIN = 14_u32
  MM_MSFT_WSS_WAVEOUT = 15_u32
  MM_MSFT_WSS_FMSYNTH_STEREO = 16_u32
  MM_MSFT_WSS_MIXER = 17_u32
  MM_MSFT_WSS_OEM_WAVEIN = 18_u32
  MM_MSFT_WSS_OEM_WAVEOUT = 19_u32
  MM_MSFT_WSS_OEM_FMSYNTH_STEREO = 20_u32
  MM_MSFT_WSS_AUX = 21_u32
  MM_MSFT_WSS_OEM_AUX = 22_u32
  MM_MSFT_GENERIC_WAVEIN = 23_u32
  MM_MSFT_GENERIC_WAVEOUT = 24_u32
  MM_MSFT_GENERIC_MIDIIN = 25_u32
  MM_MSFT_GENERIC_MIDIOUT = 26_u32
  MM_MSFT_GENERIC_MIDISYNTH = 27_u32
  MM_MSFT_GENERIC_AUX_LINE = 28_u32
  MM_MSFT_GENERIC_AUX_MIC = 29_u32
  MM_MSFT_GENERIC_AUX_CD = 30_u32
  MM_MSFT_WSS_OEM_MIXER = 31_u32
  MM_MSFT_MSACM = 32_u32
  MM_MSFT_ACM_MSADPCM = 33_u32
  MM_MSFT_ACM_IMAADPCM = 34_u32
  MM_MSFT_ACM_MSFILTER = 35_u32
  MM_MSFT_ACM_GSM610 = 36_u32
  MM_MSFT_ACM_G711 = 37_u32
  MM_MSFT_ACM_PCM = 38_u32
  MM_WSS_SB16_WAVEIN = 39_u32
  MM_WSS_SB16_WAVEOUT = 40_u32
  MM_WSS_SB16_MIDIIN = 41_u32
  MM_WSS_SB16_MIDIOUT = 42_u32
  MM_WSS_SB16_SYNTH = 43_u32
  MM_WSS_SB16_AUX_LINE = 44_u32
  MM_WSS_SB16_AUX_CD = 45_u32
  MM_WSS_SB16_MIXER = 46_u32
  MM_WSS_SBPRO_WAVEIN = 47_u32
  MM_WSS_SBPRO_WAVEOUT = 48_u32
  MM_WSS_SBPRO_MIDIIN = 49_u32
  MM_WSS_SBPRO_MIDIOUT = 50_u32
  MM_WSS_SBPRO_SYNTH = 51_u32
  MM_WSS_SBPRO_AUX_LINE = 52_u32
  MM_WSS_SBPRO_AUX_CD = 53_u32
  MM_WSS_SBPRO_MIXER = 54_u32
  MM_MSFT_WSS_NT_WAVEIN = 55_u32
  MM_MSFT_WSS_NT_WAVEOUT = 56_u32
  MM_MSFT_WSS_NT_FMSYNTH_STEREO = 57_u32
  MM_MSFT_WSS_NT_MIXER = 58_u32
  MM_MSFT_WSS_NT_AUX = 59_u32
  MM_MSFT_SB16_WAVEIN = 60_u32
  MM_MSFT_SB16_WAVEOUT = 61_u32
  MM_MSFT_SB16_MIDIIN = 62_u32
  MM_MSFT_SB16_MIDIOUT = 63_u32
  MM_MSFT_SB16_SYNTH = 64_u32
  MM_MSFT_SB16_AUX_LINE = 65_u32
  MM_MSFT_SB16_AUX_CD = 66_u32
  MM_MSFT_SB16_MIXER = 67_u32
  MM_MSFT_SBPRO_WAVEIN = 68_u32
  MM_MSFT_SBPRO_WAVEOUT = 69_u32
  MM_MSFT_SBPRO_MIDIIN = 70_u32
  MM_MSFT_SBPRO_MIDIOUT = 71_u32
  MM_MSFT_SBPRO_SYNTH = 72_u32
  MM_MSFT_SBPRO_AUX_LINE = 73_u32
  MM_MSFT_SBPRO_AUX_CD = 74_u32
  MM_MSFT_SBPRO_MIXER = 75_u32
  MM_MSFT_MSOPL_SYNTH = 76_u32
  MM_MSFT_VMDMS_LINE_WAVEIN = 80_u32
  MM_MSFT_VMDMS_LINE_WAVEOUT = 81_u32
  MM_MSFT_VMDMS_HANDSET_WAVEIN = 82_u32
  MM_MSFT_VMDMS_HANDSET_WAVEOUT = 83_u32
  MM_MSFT_VMDMW_LINE_WAVEIN = 84_u32
  MM_MSFT_VMDMW_LINE_WAVEOUT = 85_u32
  MM_MSFT_VMDMW_HANDSET_WAVEIN = 86_u32
  MM_MSFT_VMDMW_HANDSET_WAVEOUT = 87_u32
  MM_MSFT_VMDMW_MIXER = 88_u32
  MM_MSFT_VMDM_GAME_WAVEOUT = 89_u32
  MM_MSFT_VMDM_GAME_WAVEIN = 90_u32
  MM_MSFT_ACM_MSNAUDIO = 91_u32
  MM_MSFT_ACM_MSG723 = 92_u32
  MM_MSFT_ACM_MSRT24 = 93_u32
  MM_MSFT_WDMAUDIO_WAVEOUT = 100_u32
  MM_MSFT_WDMAUDIO_WAVEIN = 101_u32
  MM_MSFT_WDMAUDIO_MIDIOUT = 102_u32
  MM_MSFT_WDMAUDIO_MIDIIN = 103_u32
  MM_MSFT_WDMAUDIO_MIXER = 104_u32
  MM_MSFT_WDMAUDIO_AUX = 105_u32
  MM_CREATIVE_SB15_WAVEIN = 1_u32
  MM_CREATIVE_SB20_WAVEIN = 2_u32
  MM_CREATIVE_SBPRO_WAVEIN = 3_u32
  MM_CREATIVE_SBP16_WAVEIN = 4_u32
  MM_CREATIVE_PHNBLST_WAVEIN = 5_u32
  MM_CREATIVE_SB15_WAVEOUT = 101_u32
  MM_CREATIVE_SB20_WAVEOUT = 102_u32
  MM_CREATIVE_SBPRO_WAVEOUT = 103_u32
  MM_CREATIVE_SBP16_WAVEOUT = 104_u32
  MM_CREATIVE_PHNBLST_WAVEOUT = 105_u32
  MM_CREATIVE_MIDIOUT = 201_u32
  MM_CREATIVE_MIDIIN = 202_u32
  MM_CREATIVE_FMSYNTH_MONO = 301_u32
  MM_CREATIVE_FMSYNTH_STEREO = 302_u32
  MM_CREATIVE_MIDI_AWE32 = 303_u32
  MM_CREATIVE_AUX_CD = 401_u32
  MM_CREATIVE_AUX_LINE = 402_u32
  MM_CREATIVE_AUX_MIC = 403_u32
  MM_CREATIVE_AUX_MASTER = 404_u32
  MM_CREATIVE_AUX_PCSPK = 405_u32
  MM_CREATIVE_AUX_WAVE = 406_u32
  MM_CREATIVE_AUX_MIDI = 407_u32
  MM_CREATIVE_SBPRO_MIXER = 408_u32
  MM_CREATIVE_SB16_MIXER = 409_u32
  MM_MEDIAVISION_PROAUDIO = 16_u32
  MM_PROAUD_MIDIOUT = 17_u32
  MM_PROAUD_MIDIIN = 18_u32
  MM_PROAUD_SYNTH = 19_u32
  MM_PROAUD_WAVEOUT = 20_u32
  MM_PROAUD_WAVEIN = 21_u32
  MM_PROAUD_MIXER = 22_u32
  MM_PROAUD_AUX = 23_u32
  MM_MEDIAVISION_THUNDER = 32_u32
  MM_THUNDER_SYNTH = 35_u32
  MM_THUNDER_WAVEOUT = 36_u32
  MM_THUNDER_WAVEIN = 37_u32
  MM_THUNDER_AUX = 39_u32
  MM_MEDIAVISION_TPORT = 64_u32
  MM_TPORT_WAVEOUT = 65_u32
  MM_TPORT_WAVEIN = 66_u32
  MM_TPORT_SYNTH = 67_u32
  MM_MEDIAVISION_PROAUDIO_PLUS = 80_u32
  MM_PROAUD_PLUS_MIDIOUT = 81_u32
  MM_PROAUD_PLUS_MIDIIN = 82_u32
  MM_PROAUD_PLUS_SYNTH = 83_u32
  MM_PROAUD_PLUS_WAVEOUT = 84_u32
  MM_PROAUD_PLUS_WAVEIN = 85_u32
  MM_PROAUD_PLUS_MIXER = 86_u32
  MM_PROAUD_PLUS_AUX = 87_u32
  MM_MEDIAVISION_PROAUDIO_16 = 96_u32
  MM_PROAUD_16_MIDIOUT = 97_u32
  MM_PROAUD_16_MIDIIN = 98_u32
  MM_PROAUD_16_SYNTH = 99_u32
  MM_PROAUD_16_WAVEOUT = 100_u32
  MM_PROAUD_16_WAVEIN = 101_u32
  MM_PROAUD_16_MIXER = 102_u32
  MM_PROAUD_16_AUX = 103_u32
  MM_MEDIAVISION_PROSTUDIO_16 = 96_u32
  MM_STUDIO_16_MIDIOUT = 97_u32
  MM_STUDIO_16_MIDIIN = 98_u32
  MM_STUDIO_16_SYNTH = 99_u32
  MM_STUDIO_16_WAVEOUT = 100_u32
  MM_STUDIO_16_WAVEIN = 101_u32
  MM_STUDIO_16_MIXER = 102_u32
  MM_STUDIO_16_AUX = 103_u32
  MM_MEDIAVISION_CDPC = 112_u32
  MM_CDPC_MIDIOUT = 113_u32
  MM_CDPC_MIDIIN = 114_u32
  MM_CDPC_SYNTH = 115_u32
  MM_CDPC_WAVEOUT = 116_u32
  MM_CDPC_WAVEIN = 117_u32
  MM_CDPC_MIXER = 118_u32
  MM_CDPC_AUX = 119_u32
  MM_MEDIAVISION_OPUS1208 = 128_u32
  MM_OPUS401_MIDIOUT = 129_u32
  MM_OPUS401_MIDIIN = 130_u32
  MM_OPUS1208_SYNTH = 131_u32
  MM_OPUS1208_WAVEOUT = 132_u32
  MM_OPUS1208_WAVEIN = 133_u32
  MM_OPUS1208_MIXER = 134_u32
  MM_OPUS1208_AUX = 135_u32
  MM_MEDIAVISION_OPUS1216 = 144_u32
  MM_OPUS1216_MIDIOUT = 145_u32
  MM_OPUS1216_MIDIIN = 146_u32
  MM_OPUS1216_SYNTH = 147_u32
  MM_OPUS1216_WAVEOUT = 148_u32
  MM_OPUS1216_WAVEIN = 149_u32
  MM_OPUS1216_MIXER = 150_u32
  MM_OPUS1216_AUX = 151_u32
  MM_CYRIX_XASYNTH = 1_u32
  MM_CYRIX_XAMIDIIN = 2_u32
  MM_CYRIX_XAMIDIOUT = 3_u32
  MM_CYRIX_XAWAVEIN = 4_u32
  MM_CYRIX_XAWAVEOUT = 5_u32
  MM_CYRIX_XAAUX = 6_u32
  MM_CYRIX_XAMIXER = 7_u32
  MM_PHILIPS_ACM_LPCBB = 1_u32
  MM_NETXL_XLVIDEO = 1_u32
  MM_ZYXEL_ACM_ADPCM = 1_u32
  MM_AARDVARK_STUDIO12_WAVEOUT = 1_u32
  MM_AARDVARK_STUDIO12_WAVEIN = 2_u32
  MM_AARDVARK_STUDIO88_WAVEOUT = 3_u32
  MM_AARDVARK_STUDIO88_WAVEIN = 4_u32
  MM_BINTEC_TAPI_WAVE = 1_u32
  MM_HEWLETT_PACKARD_CU_CODEC = 1_u32
  MM_MITEL_TALKTO_LINE_WAVEOUT = 100_u32
  MM_MITEL_TALKTO_LINE_WAVEIN = 101_u32
  MM_MITEL_TALKTO_HANDSET_WAVEOUT = 102_u32
  MM_MITEL_TALKTO_HANDSET_WAVEIN = 103_u32
  MM_MITEL_TALKTO_BRIDGED_WAVEOUT = 104_u32
  MM_MITEL_TALKTO_BRIDGED_WAVEIN = 105_u32
  MM_MITEL_MPA_HANDSET_WAVEOUT = 200_u32
  MM_MITEL_MPA_HANDSET_WAVEIN = 201_u32
  MM_MITEL_MPA_HANDSFREE_WAVEOUT = 202_u32
  MM_MITEL_MPA_HANDSFREE_WAVEIN = 203_u32
  MM_MITEL_MPA_LINE1_WAVEOUT = 204_u32
  MM_MITEL_MPA_LINE1_WAVEIN = 205_u32
  MM_MITEL_MPA_LINE2_WAVEOUT = 206_u32
  MM_MITEL_MPA_LINE2_WAVEIN = 207_u32
  MM_MITEL_MEDIAPATH_WAVEOUT = 300_u32
  MM_MITEL_MEDIAPATH_WAVEIN = 301_u32
  MM_SNI_ACM_G721 = 1_u32
  MM_EMU_APSSYNTH = 1_u32
  MM_EMU_APSMIDIIN = 2_u32
  MM_EMU_APSMIDIOUT = 3_u32
  MM_EMU_APSWAVEIN = 4_u32
  MM_EMU_APSWAVEOUT = 5_u32
  MM_ARTISOFT_SBWAVEIN = 1_u32
  MM_ARTISOFT_SBWAVEOUT = 2_u32
  MM_TBS_TROPEZ_WAVEIN = 37_u32
  MM_TBS_TROPEZ_WAVEOUT = 38_u32
  MM_TBS_TROPEZ_AUX1 = 39_u32
  MM_TBS_TROPEZ_AUX2 = 40_u32
  MM_TBS_TROPEZ_LINE = 41_u32
  MM_MMOTION_WAVEAUX = 1_u32
  MM_MMOTION_WAVEOUT = 2_u32
  MM_MMOTION_WAVEIN = 3_u32
  MM_IBM_PCMCIA_WAVEIN = 11_u32
  MM_IBM_PCMCIA_WAVEOUT = 12_u32
  MM_IBM_PCMCIA_SYNTH = 13_u32
  MM_IBM_PCMCIA_MIDIIN = 14_u32
  MM_IBM_PCMCIA_MIDIOUT = 15_u32
  MM_IBM_PCMCIA_AUX = 16_u32
  MM_IBM_THINKPAD200 = 17_u32
  MM_IBM_MWAVE_WAVEIN = 18_u32
  MM_IBM_MWAVE_WAVEOUT = 19_u32
  MM_IBM_MWAVE_MIXER = 20_u32
  MM_IBM_MWAVE_MIDIIN = 21_u32
  MM_IBM_MWAVE_MIDIOUT = 22_u32
  MM_IBM_MWAVE_AUX = 23_u32
  MM_IBM_WC_MIDIOUT = 30_u32
  MM_IBM_WC_WAVEOUT = 31_u32
  MM_IBM_WC_MIXEROUT = 33_u32
  MM_VOCALTEC_WAVEOUT = 1_u32
  MM_VOCALTEC_WAVEIN = 2_u32
  MM_ROLAND_RAP10_MIDIOUT = 10_u32
  MM_ROLAND_RAP10_MIDIIN = 11_u32
  MM_ROLAND_RAP10_SYNTH = 12_u32
  MM_ROLAND_RAP10_WAVEOUT = 13_u32
  MM_ROLAND_RAP10_WAVEIN = 14_u32
  MM_ROLAND_MPU401_MIDIOUT = 15_u32
  MM_ROLAND_MPU401_MIDIIN = 16_u32
  MM_ROLAND_SMPU_MIDIOUTA = 17_u32
  MM_ROLAND_SMPU_MIDIOUTB = 18_u32
  MM_ROLAND_SMPU_MIDIINA = 19_u32
  MM_ROLAND_SMPU_MIDIINB = 20_u32
  MM_ROLAND_SC7_MIDIOUT = 21_u32
  MM_ROLAND_SC7_MIDIIN = 22_u32
  MM_ROLAND_SERIAL_MIDIOUT = 23_u32
  MM_ROLAND_SERIAL_MIDIIN = 24_u32
  MM_ROLAND_SCP_MIDIOUT = 38_u32
  MM_ROLAND_SCP_MIDIIN = 39_u32
  MM_ROLAND_SCP_WAVEOUT = 40_u32
  MM_ROLAND_SCP_WAVEIN = 41_u32
  MM_ROLAND_SCP_MIXER = 42_u32
  MM_ROLAND_SCP_AUX = 48_u32
  MM_DSP_SOLUTIONS_WAVEOUT = 1_u32
  MM_DSP_SOLUTIONS_WAVEIN = 2_u32
  MM_DSP_SOLUTIONS_SYNTH = 3_u32
  MM_DSP_SOLUTIONS_AUX = 4_u32
  MM_NEC_73_86_SYNTH = 5_u32
  MM_NEC_73_86_WAVEOUT = 6_u32
  MM_NEC_73_86_WAVEIN = 7_u32
  MM_NEC_26_SYNTH = 9_u32
  MM_NEC_MPU401_MIDIOUT = 10_u32
  MM_NEC_MPU401_MIDIIN = 11_u32
  MM_NEC_JOYSTICK = 12_u32
  MM_WANGLABS_WAVEIN1 = 1_u32
  MM_WANGLABS_WAVEOUT1 = 2_u32
  MM_TANDY_VISWAVEIN = 1_u32
  MM_TANDY_VISWAVEOUT = 2_u32
  MM_TANDY_VISBIOSSYNTH = 3_u32
  MM_TANDY_SENS_MMAWAVEIN = 4_u32
  MM_TANDY_SENS_MMAWAVEOUT = 5_u32
  MM_TANDY_SENS_MMAMIDIIN = 6_u32
  MM_TANDY_SENS_MMAMIDIOUT = 7_u32
  MM_TANDY_SENS_VISWAVEOUT = 8_u32
  MM_TANDY_PSSJWAVEIN = 9_u32
  MM_TANDY_PSSJWAVEOUT = 10_u32
  MM_ANTEX_SX12_WAVEIN = 1_u32
  MM_ANTEX_SX12_WAVEOUT = 2_u32
  MM_ANTEX_SX15_WAVEIN = 3_u32
  MM_ANTEX_SX15_WAVEOUT = 4_u32
  MM_ANTEX_VP625_WAVEIN = 5_u32
  MM_ANTEX_VP625_WAVEOUT = 6_u32
  MM_ANTEX_AUDIOPORT22_WAVEIN = 7_u32
  MM_ANTEX_AUDIOPORT22_WAVEOUT = 8_u32
  MM_ANTEX_AUDIOPORT22_FEEDTHRU = 9_u32
  MM_INTELOPD_WAVEIN = 1_u32
  MM_INTELOPD_WAVEOUT = 101_u32
  MM_INTELOPD_AUX = 401_u32
  MM_INTEL_NSPMODEMLINEIN = 501_u32
  MM_INTEL_NSPMODEMLINEOUT = 502_u32
  MM_VAL_MICROKEY_AP_WAVEIN = 1_u32
  MM_VAL_MICROKEY_AP_WAVEOUT = 2_u32
  MM_INTERACTIVE_WAVEIN = 69_u32
  MM_INTERACTIVE_WAVEOUT = 69_u32
  MM_YAMAHA_GSS_SYNTH = 1_u32
  MM_YAMAHA_GSS_WAVEOUT = 2_u32
  MM_YAMAHA_GSS_WAVEIN = 3_u32
  MM_YAMAHA_GSS_MIDIOUT = 4_u32
  MM_YAMAHA_GSS_MIDIIN = 5_u32
  MM_YAMAHA_GSS_AUX = 6_u32
  MM_YAMAHA_SERIAL_MIDIOUT = 7_u32
  MM_YAMAHA_SERIAL_MIDIIN = 8_u32
  MM_YAMAHA_OPL3SA_WAVEOUT = 16_u32
  MM_YAMAHA_OPL3SA_WAVEIN = 17_u32
  MM_YAMAHA_OPL3SA_FMSYNTH = 18_u32
  MM_YAMAHA_OPL3SA_YSYNTH = 19_u32
  MM_YAMAHA_OPL3SA_MIDIOUT = 20_u32
  MM_YAMAHA_OPL3SA_MIDIIN = 21_u32
  MM_YAMAHA_OPL3SA_MIXER = 23_u32
  MM_YAMAHA_OPL3SA_JOYSTICK = 24_u32
  MM_YAMAHA_YMF724LEG_MIDIOUT = 25_u32
  MM_YAMAHA_YMF724LEG_MIDIIN = 26_u32
  MM_YAMAHA_YMF724_WAVEOUT = 27_u32
  MM_YAMAHA_YMF724_WAVEIN = 28_u32
  MM_YAMAHA_YMF724_MIDIOUT = 29_u32
  MM_YAMAHA_YMF724_AUX = 30_u32
  MM_YAMAHA_YMF724_MIXER = 31_u32
  MM_YAMAHA_YMF724LEG_FMSYNTH = 32_u32
  MM_YAMAHA_YMF724LEG_MIXER = 33_u32
  MM_YAMAHA_SXG_MIDIOUT = 34_u32
  MM_YAMAHA_SXG_WAVEOUT = 35_u32
  MM_YAMAHA_SXG_MIXER = 36_u32
  MM_YAMAHA_ACXG_WAVEIN = 37_u32
  MM_YAMAHA_ACXG_WAVEOUT = 38_u32
  MM_YAMAHA_ACXG_MIDIOUT = 39_u32
  MM_YAMAHA_ACXG_MIXER = 40_u32
  MM_YAMAHA_ACXG_AUX = 41_u32
  MM_EVEREX_CARRIER = 1_u32
  MM_ECHO_SYNTH = 1_u32
  MM_ECHO_WAVEOUT = 2_u32
  MM_ECHO_WAVEIN = 3_u32
  MM_ECHO_MIDIOUT = 4_u32
  MM_ECHO_MIDIIN = 5_u32
  MM_ECHO_AUX = 6_u32
  MM_SIERRA_ARIA_MIDIOUT = 20_u32
  MM_SIERRA_ARIA_MIDIIN = 21_u32
  MM_SIERRA_ARIA_SYNTH = 22_u32
  MM_SIERRA_ARIA_WAVEOUT = 23_u32
  MM_SIERRA_ARIA_WAVEIN = 24_u32
  MM_SIERRA_ARIA_AUX = 25_u32
  MM_SIERRA_ARIA_AUX2 = 32_u32
  MM_SIERRA_QUARTET_WAVEIN = 80_u32
  MM_SIERRA_QUARTET_WAVEOUT = 81_u32
  MM_SIERRA_QUARTET_MIDIIN = 82_u32
  MM_SIERRA_QUARTET_MIDIOUT = 83_u32
  MM_SIERRA_QUARTET_SYNTH = 84_u32
  MM_SIERRA_QUARTET_AUX_CD = 85_u32
  MM_SIERRA_QUARTET_AUX_LINE = 86_u32
  MM_SIERRA_QUARTET_AUX_MODEM = 87_u32
  MM_SIERRA_QUARTET_MIXER = 88_u32
  MM_CAT_WAVEOUT = 1_u32
  MM_DSP_GROUP_TRUESPEECH = 1_u32
  MM_MELABS_MIDI2GO = 1_u32
  MM_ESS_AMWAVEOUT = 1_u32
  MM_ESS_AMWAVEIN = 2_u32
  MM_ESS_AMAUX = 3_u32
  MM_ESS_AMSYNTH = 4_u32
  MM_ESS_AMMIDIOUT = 5_u32
  MM_ESS_AMMIDIIN = 6_u32
  MM_ESS_MIXER = 7_u32
  MM_ESS_AUX_CD = 8_u32
  MM_ESS_MPU401_MIDIOUT = 9_u32
  MM_ESS_MPU401_MIDIIN = 10_u32
  MM_ESS_ES488_WAVEOUT = 16_u32
  MM_ESS_ES488_WAVEIN = 17_u32
  MM_ESS_ES488_MIXER = 18_u32
  MM_ESS_ES688_WAVEOUT = 19_u32
  MM_ESS_ES688_WAVEIN = 20_u32
  MM_ESS_ES688_MIXER = 21_u32
  MM_ESS_ES1488_WAVEOUT = 22_u32
  MM_ESS_ES1488_WAVEIN = 23_u32
  MM_ESS_ES1488_MIXER = 24_u32
  MM_ESS_ES1688_WAVEOUT = 25_u32
  MM_ESS_ES1688_WAVEIN = 26_u32
  MM_ESS_ES1688_MIXER = 27_u32
  MM_ESS_ES1788_WAVEOUT = 28_u32
  MM_ESS_ES1788_WAVEIN = 29_u32
  MM_ESS_ES1788_MIXER = 30_u32
  MM_ESS_ES1888_WAVEOUT = 31_u32
  MM_ESS_ES1888_WAVEIN = 32_u32
  MM_ESS_ES1888_MIXER = 33_u32
  MM_ESS_ES1868_WAVEOUT = 34_u32
  MM_ESS_ES1868_WAVEIN = 35_u32
  MM_ESS_ES1868_MIXER = 36_u32
  MM_ESS_ES1878_WAVEOUT = 37_u32
  MM_ESS_ES1878_WAVEIN = 38_u32
  MM_ESS_ES1878_MIXER = 39_u32
  MM_CANOPUS_ACM_DVREX = 1_u32
  MM_EPS_FMSND = 1_u32
  MM_TRUEVISION_WAVEIN1 = 1_u32
  MM_TRUEVISION_WAVEOUT1 = 2_u32
  MM_AZTECH_MIDIOUT = 3_u32
  MM_AZTECH_MIDIIN = 4_u32
  MM_AZTECH_WAVEIN = 17_u32
  MM_AZTECH_WAVEOUT = 18_u32
  MM_AZTECH_FMSYNTH = 20_u32
  MM_AZTECH_MIXER = 21_u32
  MM_AZTECH_PRO16_WAVEIN = 33_u32
  MM_AZTECH_PRO16_WAVEOUT = 34_u32
  MM_AZTECH_PRO16_FMSYNTH = 38_u32
  MM_AZTECH_DSP16_WAVEIN = 65_u32
  MM_AZTECH_DSP16_WAVEOUT = 66_u32
  MM_AZTECH_DSP16_FMSYNTH = 68_u32
  MM_AZTECH_DSP16_WAVESYNTH = 70_u32
  MM_AZTECH_NOVA16_WAVEIN = 71_u32
  MM_AZTECH_NOVA16_WAVEOUT = 72_u32
  MM_AZTECH_NOVA16_MIXER = 73_u32
  MM_AZTECH_WASH16_WAVEIN = 74_u32
  MM_AZTECH_WASH16_WAVEOUT = 75_u32
  MM_AZTECH_WASH16_MIXER = 76_u32
  MM_AZTECH_AUX_CD = 401_u32
  MM_AZTECH_AUX_LINE = 402_u32
  MM_AZTECH_AUX_MIC = 403_u32
  MM_AZTECH_AUX = 404_u32
  MM_VIDEOLOGIC_MSWAVEIN = 1_u32
  MM_VIDEOLOGIC_MSWAVEOUT = 2_u32
  MM_KORG_PCIF_MIDIOUT = 1_u32
  MM_KORG_PCIF_MIDIIN = 2_u32
  MM_KORG_1212IO_MSWAVEIN = 3_u32
  MM_KORG_1212IO_MSWAVEOUT = 4_u32
  MM_APT_ACE100CD = 1_u32
  MM_ICS_WAVEDECK_WAVEOUT = 1_u32
  MM_ICS_WAVEDECK_WAVEIN = 2_u32
  MM_ICS_WAVEDECK_MIXER = 3_u32
  MM_ICS_WAVEDECK_AUX = 4_u32
  MM_ICS_WAVEDECK_SYNTH = 5_u32
  MM_ICS_WAVEDEC_SB_WAVEOUT = 6_u32
  MM_ICS_WAVEDEC_SB_WAVEIN = 7_u32
  MM_ICS_WAVEDEC_SB_FM_MIDIOUT = 8_u32
  MM_ICS_WAVEDEC_SB_MPU401_MIDIOUT = 9_u32
  MM_ICS_WAVEDEC_SB_MPU401_MIDIIN = 10_u32
  MM_ICS_WAVEDEC_SB_MIXER = 11_u32
  MM_ICS_WAVEDEC_SB_AUX = 12_u32
  MM_ICS_2115_LITE_MIDIOUT = 13_u32
  MM_ICS_2120_LITE_MIDIOUT = 14_u32
  MM_ITERATEDSYS_FUFCODEC = 1_u32
  MM_METHEUS_ZIPPER = 1_u32
  MM_WINNOV_CAVIAR_WAVEIN = 1_u32
  MM_WINNOV_CAVIAR_WAVEOUT = 2_u32
  MM_WINNOV_CAVIAR_VIDC = 3_u32
  MM_WINNOV_CAVIAR_CHAMPAGNE = 4_u32
  MM_WINNOV_CAVIAR_YUV8 = 5_u32
  MM_NCR_BA_WAVEIN = 1_u32
  MM_NCR_BA_WAVEOUT = 2_u32
  MM_NCR_BA_SYNTH = 3_u32
  MM_NCR_BA_AUX = 4_u32
  MM_NCR_BA_MIXER = 5_u32
  MM_AST_MODEMWAVE_WAVEIN = 13_u32
  MM_AST_MODEMWAVE_WAVEOUT = 14_u32
  MM_WILLOWPOND_FMSYNTH_STEREO = 20_u32
  MM_WILLOWPOND_MPU401 = 21_u32
  MM_WILLOWPOND_SNDPORT_WAVEIN = 100_u32
  MM_WILLOWPOND_SNDPORT_WAVEOUT = 101_u32
  MM_WILLOWPOND_SNDPORT_MIXER = 102_u32
  MM_WILLOWPOND_SNDPORT_AUX = 103_u32
  MM_WILLOWPOND_PH_WAVEIN = 104_u32
  MM_WILLOWPOND_PH_WAVEOUT = 105_u32
  MM_WILLOWPOND_PH_MIXER = 106_u32
  MM_WILLOWPOND_PH_AUX = 107_u32
  MM_WILLOPOND_SNDCOMM_WAVEIN = 108_u32
  MM_WILLOWPOND_SNDCOMM_WAVEOUT = 109_u32
  MM_WILLOWPOND_SNDCOMM_MIXER = 110_u32
  MM_WILLOWPOND_SNDCOMM_AUX = 111_u32
  MM_WILLOWPOND_GENERIC_WAVEIN = 112_u32
  MM_WILLOWPOND_GENERIC_WAVEOUT = 113_u32
  MM_WILLOWPOND_GENERIC_MIXER = 114_u32
  MM_WILLOWPOND_GENERIC_AUX = 115_u32
  MM_VITEC_VMAKER = 1_u32
  MM_VITEC_VMPRO = 2_u32
  MM_MOSCOM_VPC2400_IN = 1_u32
  MM_MOSCOM_VPC2400_OUT = 2_u32
  MM_SILICONSOFT_SC1_WAVEIN = 1_u32
  MM_SILICONSOFT_SC1_WAVEOUT = 2_u32
  MM_SILICONSOFT_SC2_WAVEIN = 3_u32
  MM_SILICONSOFT_SC2_WAVEOUT = 4_u32
  MM_SILICONSOFT_SOUNDJR2_WAVEOUT = 5_u32
  MM_SILICONSOFT_SOUNDJR2PR_WAVEIN = 6_u32
  MM_SILICONSOFT_SOUNDJR2PR_WAVEOUT = 7_u32
  MM_SILICONSOFT_SOUNDJR3_WAVEOUT = 8_u32
  MM_TTEWS_WAVEIN = 1_u32
  MM_TTEWS_WAVEOUT = 2_u32
  MM_TTEWS_MIDIIN = 3_u32
  MM_TTEWS_MIDIOUT = 4_u32
  MM_TTEWS_MIDISYNTH = 5_u32
  MM_TTEWS_MIDIMONITOR = 6_u32
  MM_TTEWS_VMIDIIN = 7_u32
  MM_TTEWS_VMIDIOUT = 8_u32
  MM_TTEWS_AUX = 9_u32
  MM_TTEWS_MIXER = 10_u32
  MM_MEDIASONIC_ACM_G723 = 1_u32
  MM_MEDIASONIC_ICOM = 2_u32
  MM_ICOM_WAVEIN = 3_u32
  MM_ICOM_WAVEOUT = 4_u32
  MM_ICOM_MIXER = 5_u32
  MM_ICOM_AUX = 6_u32
  MM_ICOM_LINE = 7_u32
  MM_SANYO_ACM_LD_ADPCM = 1_u32
  MM_AHEAD_MULTISOUND = 1_u32
  MM_AHEAD_SOUNDBLASTER = 2_u32
  MM_AHEAD_PROAUDIO = 3_u32
  MM_AHEAD_GENERIC = 4_u32
  MM_OLIVETTI_WAVEIN = 1_u32
  MM_OLIVETTI_WAVEOUT = 2_u32
  MM_OLIVETTI_MIXER = 3_u32
  MM_OLIVETTI_AUX = 4_u32
  MM_OLIVETTI_MIDIIN = 5_u32
  MM_OLIVETTI_MIDIOUT = 6_u32
  MM_OLIVETTI_SYNTH = 7_u32
  MM_OLIVETTI_JOYSTICK = 8_u32
  MM_OLIVETTI_ACM_GSM = 9_u32
  MM_OLIVETTI_ACM_ADPCM = 10_u32
  MM_OLIVETTI_ACM_CELP = 11_u32
  MM_OLIVETTI_ACM_SBC = 12_u32
  MM_OLIVETTI_ACM_OPR = 13_u32
  MM_IOMAGIC_TEMPO_WAVEOUT = 1_u32
  MM_IOMAGIC_TEMPO_WAVEIN = 2_u32
  MM_IOMAGIC_TEMPO_SYNTH = 3_u32
  MM_IOMAGIC_TEMPO_MIDIOUT = 4_u32
  MM_IOMAGIC_TEMPO_MXDOUT = 5_u32
  MM_IOMAGIC_TEMPO_AUXOUT = 6_u32
  MM_MATSUSHITA_WAVEIN = 1_u32
  MM_MATSUSHITA_WAVEOUT = 2_u32
  MM_MATSUSHITA_FMSYNTH_STEREO = 3_u32
  MM_MATSUSHITA_MIXER = 4_u32
  MM_MATSUSHITA_AUX = 5_u32
  MM_NEWMEDIA_WAVJAMMER = 1_u32
  MM_LYRRUS_BRIDGE_GUITAR = 1_u32
  MM_OPTI_M16_FMSYNTH_STEREO = 1_u32
  MM_OPTI_M16_MIDIIN = 2_u32
  MM_OPTI_M16_MIDIOUT = 3_u32
  MM_OPTI_M16_WAVEIN = 4_u32
  MM_OPTI_M16_WAVEOUT = 5_u32
  MM_OPTI_M16_MIXER = 6_u32
  MM_OPTI_M16_AUX = 7_u32
  MM_OPTI_P16_FMSYNTH_STEREO = 16_u32
  MM_OPTI_P16_MIDIIN = 17_u32
  MM_OPTI_P16_MIDIOUT = 18_u32
  MM_OPTI_P16_WAVEIN = 19_u32
  MM_OPTI_P16_WAVEOUT = 20_u32
  MM_OPTI_P16_MIXER = 21_u32
  MM_OPTI_P16_AUX = 22_u32
  MM_OPTI_M32_WAVEIN = 32_u32
  MM_OPTI_M32_WAVEOUT = 33_u32
  MM_OPTI_M32_MIDIIN = 34_u32
  MM_OPTI_M32_MIDIOUT = 35_u32
  MM_OPTI_M32_SYNTH_STEREO = 36_u32
  MM_OPTI_M32_MIXER = 37_u32
  MM_OPTI_M32_AUX = 38_u32
  MM_COMPAQ_BB_WAVEIN = 1_u32
  MM_COMPAQ_BB_WAVEOUT = 2_u32
  MM_COMPAQ_BB_WAVEAUX = 3_u32
  MM_MPTUS_SPWAVEOUT = 1_u32
  MM_LERNOUT_ANDHAUSPIE_LHCODECACM = 1_u32
  MM_DIGITAL_AV320_WAVEIN = 1_u32
  MM_DIGITAL_AV320_WAVEOUT = 2_u32
  MM_DIGITAL_ACM_G723 = 3_u32
  MM_DIGITAL_ICM_H263 = 4_u32
  MM_DIGITAL_ICM_H261 = 5_u32
  MM_MOTU_MTP_MIDIOUT_ALL = 100_u32
  MM_MOTU_MTP_MIDIIN_1 = 101_u32
  MM_MOTU_MTP_MIDIOUT_1 = 101_u32
  MM_MOTU_MTP_MIDIIN_2 = 102_u32
  MM_MOTU_MTP_MIDIOUT_2 = 102_u32
  MM_MOTU_MTP_MIDIIN_3 = 103_u32
  MM_MOTU_MTP_MIDIOUT_3 = 103_u32
  MM_MOTU_MTP_MIDIIN_4 = 104_u32
  MM_MOTU_MTP_MIDIOUT_4 = 104_u32
  MM_MOTU_MTP_MIDIIN_5 = 105_u32
  MM_MOTU_MTP_MIDIOUT_5 = 105_u32
  MM_MOTU_MTP_MIDIIN_6 = 106_u32
  MM_MOTU_MTP_MIDIOUT_6 = 106_u32
  MM_MOTU_MTP_MIDIIN_7 = 107_u32
  MM_MOTU_MTP_MIDIOUT_7 = 107_u32
  MM_MOTU_MTP_MIDIIN_8 = 108_u32
  MM_MOTU_MTP_MIDIOUT_8 = 108_u32
  MM_MOTU_MTPII_MIDIOUT_ALL = 200_u32
  MM_MOTU_MTPII_MIDIIN_SYNC = 200_u32
  MM_MOTU_MTPII_MIDIIN_1 = 201_u32
  MM_MOTU_MTPII_MIDIOUT_1 = 201_u32
  MM_MOTU_MTPII_MIDIIN_2 = 202_u32
  MM_MOTU_MTPII_MIDIOUT_2 = 202_u32
  MM_MOTU_MTPII_MIDIIN_3 = 203_u32
  MM_MOTU_MTPII_MIDIOUT_3 = 203_u32
  MM_MOTU_MTPII_MIDIIN_4 = 204_u32
  MM_MOTU_MTPII_MIDIOUT_4 = 204_u32
  MM_MOTU_MTPII_MIDIIN_5 = 205_u32
  MM_MOTU_MTPII_MIDIOUT_5 = 205_u32
  MM_MOTU_MTPII_MIDIIN_6 = 206_u32
  MM_MOTU_MTPII_MIDIOUT_6 = 206_u32
  MM_MOTU_MTPII_MIDIIN_7 = 207_u32
  MM_MOTU_MTPII_MIDIOUT_7 = 207_u32
  MM_MOTU_MTPII_MIDIIN_8 = 208_u32
  MM_MOTU_MTPII_MIDIOUT_8 = 208_u32
  MM_MOTU_MTPII_NET_MIDIIN_1 = 209_u32
  MM_MOTU_MTPII_NET_MIDIOUT_1 = 209_u32
  MM_MOTU_MTPII_NET_MIDIIN_2 = 210_u32
  MM_MOTU_MTPII_NET_MIDIOUT_2 = 210_u32
  MM_MOTU_MTPII_NET_MIDIIN_3 = 211_u32
  MM_MOTU_MTPII_NET_MIDIOUT_3 = 211_u32
  MM_MOTU_MTPII_NET_MIDIIN_4 = 212_u32
  MM_MOTU_MTPII_NET_MIDIOUT_4 = 212_u32
  MM_MOTU_MTPII_NET_MIDIIN_5 = 213_u32
  MM_MOTU_MTPII_NET_MIDIOUT_5 = 213_u32
  MM_MOTU_MTPII_NET_MIDIIN_6 = 214_u32
  MM_MOTU_MTPII_NET_MIDIOUT_6 = 214_u32
  MM_MOTU_MTPII_NET_MIDIIN_7 = 215_u32
  MM_MOTU_MTPII_NET_MIDIOUT_7 = 215_u32
  MM_MOTU_MTPII_NET_MIDIIN_8 = 216_u32
  MM_MOTU_MTPII_NET_MIDIOUT_8 = 216_u32
  MM_MOTU_MXP_MIDIIN_MIDIOUT_ALL = 300_u32
  MM_MOTU_MXP_MIDIIN_SYNC = 300_u32
  MM_MOTU_MXP_MIDIIN_MIDIIN_1 = 301_u32
  MM_MOTU_MXP_MIDIIN_MIDIOUT_1 = 301_u32
  MM_MOTU_MXP_MIDIIN_MIDIIN_2 = 302_u32
  MM_MOTU_MXP_MIDIIN_MIDIOUT_2 = 302_u32
  MM_MOTU_MXP_MIDIIN_MIDIIN_3 = 303_u32
  MM_MOTU_MXP_MIDIIN_MIDIOUT_3 = 303_u32
  MM_MOTU_MXP_MIDIIN_MIDIIN_4 = 304_u32
  MM_MOTU_MXP_MIDIIN_MIDIOUT_4 = 304_u32
  MM_MOTU_MXP_MIDIIN_MIDIIN_5 = 305_u32
  MM_MOTU_MXP_MIDIIN_MIDIOUT_5 = 305_u32
  MM_MOTU_MXP_MIDIIN_MIDIIN_6 = 306_u32
  MM_MOTU_MXP_MIDIIN_MIDIOUT_6 = 306_u32
  MM_MOTU_MXPMPU_MIDIOUT_ALL = 400_u32
  MM_MOTU_MXPMPU_MIDIIN_SYNC = 400_u32
  MM_MOTU_MXPMPU_MIDIIN_1 = 401_u32
  MM_MOTU_MXPMPU_MIDIOUT_1 = 401_u32
  MM_MOTU_MXPMPU_MIDIIN_2 = 402_u32
  MM_MOTU_MXPMPU_MIDIOUT_2 = 402_u32
  MM_MOTU_MXPMPU_MIDIIN_3 = 403_u32
  MM_MOTU_MXPMPU_MIDIOUT_3 = 403_u32
  MM_MOTU_MXPMPU_MIDIIN_4 = 404_u32
  MM_MOTU_MXPMPU_MIDIOUT_4 = 404_u32
  MM_MOTU_MXPMPU_MIDIIN_5 = 405_u32
  MM_MOTU_MXPMPU_MIDIOUT_5 = 405_u32
  MM_MOTU_MXPMPU_MIDIIN_6 = 406_u32
  MM_MOTU_MXPMPU_MIDIOUT_6 = 406_u32
  MM_MOTU_MXN_MIDIOUT_ALL = 500_u32
  MM_MOTU_MXN_MIDIIN_SYNC = 500_u32
  MM_MOTU_MXN_MIDIIN_1 = 501_u32
  MM_MOTU_MXN_MIDIOUT_1 = 501_u32
  MM_MOTU_MXN_MIDIIN_2 = 502_u32
  MM_MOTU_MXN_MIDIOUT_2 = 502_u32
  MM_MOTU_MXN_MIDIIN_3 = 503_u32
  MM_MOTU_MXN_MIDIOUT_3 = 503_u32
  MM_MOTU_MXN_MIDIIN_4 = 504_u32
  MM_MOTU_MXN_MIDIOUT_4 = 504_u32
  MM_MOTU_FLYER_MIDI_IN_SYNC = 600_u32
  MM_MOTU_FLYER_MIDI_IN_A = 601_u32
  MM_MOTU_FLYER_MIDI_OUT_A = 601_u32
  MM_MOTU_FLYER_MIDI_IN_B = 602_u32
  MM_MOTU_FLYER_MIDI_OUT_B = 602_u32
  MM_MOTU_PKX_MIDI_IN_SYNC = 700_u32
  MM_MOTU_PKX_MIDI_IN_A = 701_u32
  MM_MOTU_PKX_MIDI_OUT_A = 701_u32
  MM_MOTU_PKX_MIDI_IN_B = 702_u32
  MM_MOTU_PKX_MIDI_OUT_B = 702_u32
  MM_MOTU_DTX_MIDI_IN_SYNC = 800_u32
  MM_MOTU_DTX_MIDI_IN_A = 801_u32
  MM_MOTU_DTX_MIDI_OUT_A = 801_u32
  MM_MOTU_DTX_MIDI_IN_B = 802_u32
  MM_MOTU_DTX_MIDI_OUT_B = 802_u32
  MM_MOTU_MTPAV_MIDIOUT_ALL = 900_u32
  MM_MOTU_MTPAV_MIDIIN_SYNC = 900_u32
  MM_MOTU_MTPAV_MIDIIN_1 = 901_u32
  MM_MOTU_MTPAV_MIDIOUT_1 = 901_u32
  MM_MOTU_MTPAV_MIDIIN_2 = 902_u32
  MM_MOTU_MTPAV_MIDIOUT_2 = 902_u32
  MM_MOTU_MTPAV_MIDIIN_3 = 903_u32
  MM_MOTU_MTPAV_MIDIOUT_3 = 903_u32
  MM_MOTU_MTPAV_MIDIIN_4 = 904_u32
  MM_MOTU_MTPAV_MIDIOUT_4 = 904_u32
  MM_MOTU_MTPAV_MIDIIN_5 = 905_u32
  MM_MOTU_MTPAV_MIDIOUT_5 = 905_u32
  MM_MOTU_MTPAV_MIDIIN_6 = 906_u32
  MM_MOTU_MTPAV_MIDIOUT_6 = 906_u32
  MM_MOTU_MTPAV_MIDIIN_7 = 907_u32
  MM_MOTU_MTPAV_MIDIOUT_7 = 907_u32
  MM_MOTU_MTPAV_MIDIIN_8 = 908_u32
  MM_MOTU_MTPAV_MIDIOUT_8 = 908_u32
  MM_MOTU_MTPAV_NET_MIDIIN_1 = 909_u32
  MM_MOTU_MTPAV_NET_MIDIOUT_1 = 909_u32
  MM_MOTU_MTPAV_NET_MIDIIN_2 = 910_u32
  MM_MOTU_MTPAV_NET_MIDIOUT_2 = 910_u32
  MM_MOTU_MTPAV_NET_MIDIIN_3 = 911_u32
  MM_MOTU_MTPAV_NET_MIDIOUT_3 = 911_u32
  MM_MOTU_MTPAV_NET_MIDIIN_4 = 912_u32
  MM_MOTU_MTPAV_NET_MIDIOUT_4 = 912_u32
  MM_MOTU_MTPAV_NET_MIDIIN_5 = 913_u32
  MM_MOTU_MTPAV_NET_MIDIOUT_5 = 913_u32
  MM_MOTU_MTPAV_NET_MIDIIN_6 = 914_u32
  MM_MOTU_MTPAV_NET_MIDIOUT_6 = 914_u32
  MM_MOTU_MTPAV_NET_MIDIIN_7 = 915_u32
  MM_MOTU_MTPAV_NET_MIDIOUT_7 = 915_u32
  MM_MOTU_MTPAV_NET_MIDIIN_8 = 916_u32
  MM_MOTU_MTPAV_NET_MIDIOUT_8 = 916_u32
  MM_MOTU_MTPAV_MIDIIN_ADAT = 917_u32
  MM_MOTU_MTPAV_MIDIOUT_ADAT = 917_u32
  MM_MOTU_MXPXT_MIDIIN_SYNC = 1000_u32
  MM_MOTU_MXPXT_MIDIOUT_ALL = 1000_u32
  MM_MOTU_MXPXT_MIDIIN_1 = 1001_u32
  MM_MOTU_MXPXT_MIDIOUT_1 = 1001_u32
  MM_MOTU_MXPXT_MIDIOUT_2 = 1002_u32
  MM_MOTU_MXPXT_MIDIIN_2 = 1002_u32
  MM_MOTU_MXPXT_MIDIIN_3 = 1003_u32
  MM_MOTU_MXPXT_MIDIOUT_3 = 1003_u32
  MM_MOTU_MXPXT_MIDIIN_4 = 1004_u32
  MM_MOTU_MXPXT_MIDIOUT_4 = 1004_u32
  MM_MOTU_MXPXT_MIDIIN_5 = 1005_u32
  MM_MOTU_MXPXT_MIDIOUT_5 = 1005_u32
  MM_MOTU_MXPXT_MIDIOUT_6 = 1006_u32
  MM_MOTU_MXPXT_MIDIIN_6 = 1006_u32
  MM_MOTU_MXPXT_MIDIOUT_7 = 1007_u32
  MM_MOTU_MXPXT_MIDIIN_7 = 1007_u32
  MM_MOTU_MXPXT_MIDIOUT_8 = 1008_u32
  MM_MOTU_MXPXT_MIDIIN_8 = 1008_u32
  MM_WORKBIT_MIXER = 1_u32
  MM_WORKBIT_WAVEOUT = 2_u32
  MM_WORKBIT_WAVEIN = 3_u32
  MM_WORKBIT_MIDIIN = 4_u32
  MM_WORKBIT_MIDIOUT = 5_u32
  MM_WORKBIT_FMSYNTH = 6_u32
  MM_WORKBIT_AUX = 7_u32
  MM_WORKBIT_JOYSTICK = 8_u32
  MM_OSITECH_TRUMPCARD = 1_u32
  MM_MIRO_MOVIEPRO = 1_u32
  MM_MIRO_VIDEOD1 = 2_u32
  MM_MIRO_VIDEODC1TV = 3_u32
  MM_MIRO_VIDEOTD = 4_u32
  MM_MIRO_DC30_WAVEOUT = 5_u32
  MM_MIRO_DC30_WAVEIN = 6_u32
  MM_MIRO_DC30_MIX = 7_u32
  MM_ISOLUTION_PASCAL = 1_u32
  MM_VOICEMIXER = 1_u32
  ROCKWELL_WA1_WAVEIN = 100_u32
  ROCKWELL_WA1_WAVEOUT = 101_u32
  ROCKWELL_WA1_SYNTH = 102_u32
  ROCKWELL_WA1_MIXER = 103_u32
  ROCKWELL_WA1_MPU401_IN = 104_u32
  ROCKWELL_WA1_MPU401_OUT = 105_u32
  ROCKWELL_WA2_WAVEIN = 200_u32
  ROCKWELL_WA2_WAVEOUT = 201_u32
  ROCKWELL_WA2_SYNTH = 202_u32
  ROCKWELL_WA2_MIXER = 203_u32
  ROCKWELL_WA2_MPU401_IN = 204_u32
  ROCKWELL_WA2_MPU401_OUT = 205_u32
  MM_VOXWARE_CODEC = 1_u32
  MM_NORTEL_MPXAC_WAVEIN = 1_u32
  MM_NORTEL_MPXAC_WAVEOUT = 2_u32
  MM_ADDX_PCTV_DIGITALMIX = 1_u32
  MM_ADDX_PCTV_WAVEIN = 2_u32
  MM_ADDX_PCTV_WAVEOUT = 3_u32
  MM_ADDX_PCTV_MIXER = 4_u32
  MM_ADDX_PCTV_AUX_CD = 5_u32
  MM_ADDX_PCTV_AUX_LINE = 6_u32
  MM_WILDCAT_AUTOSCOREMIDIIN = 1_u32
  MM_RHETOREX_WAVEIN = 1_u32
  MM_RHETOREX_WAVEOUT = 2_u32
  MM_BTV_WAVEIN = 1_u32
  MM_BTV_WAVEOUT = 2_u32
  MM_BTV_MIDIIN = 3_u32
  MM_BTV_MIDIOUT = 4_u32
  MM_BTV_MIDISYNTH = 5_u32
  MM_BTV_AUX_LINE = 6_u32
  MM_BTV_AUX_MIC = 7_u32
  MM_BTV_AUX_CD = 8_u32
  MM_BTV_DIGITALIN = 9_u32
  MM_BTV_DIGITALOUT = 10_u32
  MM_BTV_MIDIWAVESTREAM = 11_u32
  MM_BTV_MIXER = 12_u32
  MM_ENSONIQ_SOUNDSCAPE = 16_u32
  MM_SOUNDSCAPE_WAVEOUT = 17_u32
  MM_SOUNDSCAPE_WAVEOUT_AUX = 18_u32
  MM_SOUNDSCAPE_WAVEIN = 19_u32
  MM_SOUNDSCAPE_MIDIOUT = 20_u32
  MM_SOUNDSCAPE_MIDIIN = 21_u32
  MM_SOUNDSCAPE_SYNTH = 22_u32
  MM_SOUNDSCAPE_MIXER = 23_u32
  MM_SOUNDSCAPE_AUX = 24_u32
  MM_NVIDIA_WAVEOUT = 1_u32
  MM_NVIDIA_WAVEIN = 2_u32
  MM_NVIDIA_MIDIOUT = 3_u32
  MM_NVIDIA_MIDIIN = 4_u32
  MM_NVIDIA_GAMEPORT = 5_u32
  MM_NVIDIA_MIXER = 6_u32
  MM_NVIDIA_AUX = 7_u32
  MM_OKSORI_BASE = 0_u32
  MM_OKSORI_OSR8_WAVEOUT = 1_u32
  MM_OKSORI_OSR8_WAVEIN = 2_u32
  MM_OKSORI_OSR16_WAVEOUT = 3_u32
  MM_OKSORI_OSR16_WAVEIN = 4_u32
  MM_OKSORI_FM_OPL4 = 5_u32
  MM_OKSORI_MIX_MASTER = 6_u32
  MM_OKSORI_MIX_WAVE = 7_u32
  MM_OKSORI_MIX_FM = 8_u32
  MM_OKSORI_MIX_LINE = 9_u32
  MM_OKSORI_MIX_CD = 10_u32
  MM_OKSORI_MIX_MIC = 11_u32
  MM_OKSORI_MIX_ECHO = 12_u32
  MM_OKSORI_MIX_AUX1 = 13_u32
  MM_OKSORI_MIX_LINE1 = 14_u32
  MM_OKSORI_EXT_MIC1 = 15_u32
  MM_OKSORI_EXT_MIC2 = 16_u32
  MM_OKSORI_MIDIOUT = 17_u32
  MM_OKSORI_MIDIIN = 18_u32
  MM_OKSORI_MPEG_CDVISION = 19_u32
  MM_DIACOUSTICS_DRUM_ACTION = 1_u32
  MM_KAY_ELEMETRICS_CSL = 17152_u32
  MM_KAY_ELEMETRICS_CSL_DAT = 17160_u32
  MM_KAY_ELEMETRICS_CSL_4CHANNEL = 17161_u32
  MM_CRYSTAL_CS4232_WAVEIN = 1_u32
  MM_CRYSTAL_CS4232_WAVEOUT = 2_u32
  MM_CRYSTAL_CS4232_WAVEMIXER = 3_u32
  MM_CRYSTAL_CS4232_WAVEAUX_AUX1 = 4_u32
  MM_CRYSTAL_CS4232_WAVEAUX_AUX2 = 5_u32
  MM_CRYSTAL_CS4232_WAVEAUX_LINE = 6_u32
  MM_CRYSTAL_CS4232_WAVEAUX_MONO = 7_u32
  MM_CRYSTAL_CS4232_WAVEAUX_MASTER = 8_u32
  MM_CRYSTAL_CS4232_MIDIIN = 9_u32
  MM_CRYSTAL_CS4232_MIDIOUT = 10_u32
  MM_CRYSTAL_CS4232_INPUTGAIN_AUX1 = 13_u32
  MM_CRYSTAL_CS4232_INPUTGAIN_LOOP = 14_u32
  MM_CRYSTAL_SOUND_FUSION_WAVEIN = 21_u32
  MM_CRYSTAL_SOUND_FUSION_WAVEOUT = 22_u32
  MM_CRYSTAL_SOUND_FUSION_MIXER = 23_u32
  MM_CRYSTAL_SOUND_FUSION_MIDIIN = 24_u32
  MM_CRYSTAL_SOUND_FUSION_MIDIOUT = 25_u32
  MM_CRYSTAL_SOUND_FUSION_JOYSTICK = 26_u32
  MM_QUARTERDECK_LHWAVEIN = 0_u32
  MM_QUARTERDECK_LHWAVEOUT = 1_u32
  MM_TDK_MW_MIDI_SYNTH = 1_u32
  MM_TDK_MW_MIDI_IN = 2_u32
  MM_TDK_MW_MIDI_OUT = 3_u32
  MM_TDK_MW_WAVE_IN = 4_u32
  MM_TDK_MW_WAVE_OUT = 5_u32
  MM_TDK_MW_AUX = 6_u32
  MM_TDK_MW_MIXER = 10_u32
  MM_TDK_MW_AUX_MASTER = 100_u32
  MM_TDK_MW_AUX_BASS = 101_u32
  MM_TDK_MW_AUX_TREBLE = 102_u32
  MM_TDK_MW_AUX_MIDI_VOL = 103_u32
  MM_TDK_MW_AUX_WAVE_VOL = 104_u32
  MM_TDK_MW_AUX_WAVE_RVB = 105_u32
  MM_TDK_MW_AUX_WAVE_CHR = 106_u32
  MM_TDK_MW_AUX_VOL = 107_u32
  MM_TDK_MW_AUX_RVB = 108_u32
  MM_TDK_MW_AUX_CHR = 109_u32
  MM_DIGITAL_AUDIO_LABS_TC = 1_u32
  MM_DIGITAL_AUDIO_LABS_DOC = 2_u32
  MM_DIGITAL_AUDIO_LABS_V8 = 16_u32
  MM_DIGITAL_AUDIO_LABS_CPRO = 17_u32
  MM_DIGITAL_AUDIO_LABS_VP = 18_u32
  MM_DIGITAL_AUDIO_LABS_CDLX = 19_u32
  MM_DIGITAL_AUDIO_LABS_CTDIF = 20_u32
  MM_SEERSYS_SEERSYNTH = 1_u32
  MM_SEERSYS_SEERWAVE = 2_u32
  MM_SEERSYS_SEERMIX = 3_u32
  MM_SEERSYS_WAVESYNTH = 4_u32
  MM_SEERSYS_WAVESYNTH_WG = 5_u32
  MM_SEERSYS_REALITY = 6_u32
  MM_OSPREY_1000WAVEIN = 1_u32
  MM_OSPREY_1000WAVEOUT = 2_u32
  MM_SOUNDESIGNS_WAVEIN = 1_u32
  MM_SOUNDESIGNS_WAVEOUT = 2_u32
  MM_SSP_SNDFESWAVEIN = 1_u32
  MM_SSP_SNDFESWAVEOUT = 2_u32
  MM_SSP_SNDFESMIDIIN = 3_u32
  MM_SSP_SNDFESMIDIOUT = 4_u32
  MM_SSP_SNDFESSYNTH = 5_u32
  MM_SSP_SNDFESMIX = 6_u32
  MM_SSP_SNDFESAUX = 7_u32
  MM_ECS_AADF_MIDI_IN = 10_u32
  MM_ECS_AADF_MIDI_OUT = 11_u32
  MM_ECS_AADF_WAVE2MIDI_IN = 12_u32
  MM_AMD_INTERWAVE_WAVEIN = 1_u32
  MM_AMD_INTERWAVE_WAVEOUT = 2_u32
  MM_AMD_INTERWAVE_SYNTH = 3_u32
  MM_AMD_INTERWAVE_MIXER1 = 4_u32
  MM_AMD_INTERWAVE_MIXER2 = 5_u32
  MM_AMD_INTERWAVE_JOYSTICK = 6_u32
  MM_AMD_INTERWAVE_EX_CD = 7_u32
  MM_AMD_INTERWAVE_MIDIIN = 8_u32
  MM_AMD_INTERWAVE_MIDIOUT = 9_u32
  MM_AMD_INTERWAVE_AUX1 = 10_u32
  MM_AMD_INTERWAVE_AUX2 = 11_u32
  MM_AMD_INTERWAVE_AUX_MIC = 12_u32
  MM_AMD_INTERWAVE_AUX_CD = 13_u32
  MM_AMD_INTERWAVE_MONO_IN = 14_u32
  MM_AMD_INTERWAVE_MONO_OUT = 15_u32
  MM_AMD_INTERWAVE_EX_TELEPHONY = 16_u32
  MM_AMD_INTERWAVE_WAVEOUT_BASE = 17_u32
  MM_AMD_INTERWAVE_WAVEOUT_TREBLE = 18_u32
  MM_AMD_INTERWAVE_STEREO_ENHANCED = 19_u32
  MM_COREDYNAMICS_DYNAMIXHR = 1_u32
  MM_COREDYNAMICS_DYNASONIX_SYNTH = 2_u32
  MM_COREDYNAMICS_DYNASONIX_MIDI_IN = 3_u32
  MM_COREDYNAMICS_DYNASONIX_MIDI_OUT = 4_u32
  MM_COREDYNAMICS_DYNASONIX_WAVE_IN = 5_u32
  MM_COREDYNAMICS_DYNASONIX_WAVE_OUT = 6_u32
  MM_COREDYNAMICS_DYNASONIX_AUDIO_IN = 7_u32
  MM_COREDYNAMICS_DYNASONIX_AUDIO_OUT = 8_u32
  MM_COREDYNAMICS_DYNAGRAFX_VGA = 9_u32
  MM_COREDYNAMICS_DYNAGRAFX_WAVE_IN = 10_u32
  MM_COREDYNAMICS_DYNAGRAFX_WAVE_OUT = 11_u32
  MM_CANAM_CBXWAVEOUT = 1_u32
  MM_CANAM_CBXWAVEIN = 2_u32
  MM_SOFTSOUND_CODEC = 1_u32
  MM_NORRIS_VOICELINK = 1_u32
  MM_DDD_MIDILINK_MIDIIN = 1_u32
  MM_DDD_MIDILINK_MIDIOUT = 2_u32
  MM_EUPHONICS_AUX_CD = 1_u32
  MM_EUPHONICS_AUX_LINE = 2_u32
  MM_EUPHONICS_AUX_MASTER = 3_u32
  MM_EUPHONICS_AUX_MIC = 4_u32
  MM_EUPHONICS_AUX_MIDI = 5_u32
  MM_EUPHONICS_AUX_WAVE = 6_u32
  MM_EUPHONICS_FMSYNTH_MONO = 7_u32
  MM_EUPHONICS_FMSYNTH_STEREO = 8_u32
  MM_EUPHONICS_MIDIIN = 9_u32
  MM_EUPHONICS_MIDIOUT = 10_u32
  MM_EUPHONICS_MIXER = 11_u32
  MM_EUPHONICS_WAVEIN = 12_u32
  MM_EUPHONICS_WAVEOUT = 13_u32
  MM_EUPHONICS_EUSYNTH = 14_u32
  CRYSTAL_NET_SFM_CODEC = 1_u32
  MM_CHROMATIC_M1 = 1_u32
  MM_CHROMATIC_M1_WAVEIN = 2_u32
  MM_CHROMATIC_M1_WAVEOUT = 3_u32
  MM_CHROMATIC_M1_FMSYNTH = 4_u32
  MM_CHROMATIC_M1_MIXER = 5_u32
  MM_CHROMATIC_M1_AUX = 6_u32
  MM_CHROMATIC_M1_AUX_CD = 7_u32
  MM_CHROMATIC_M1_MIDIIN = 8_u32
  MM_CHROMATIC_M1_MIDIOUT = 9_u32
  MM_CHROMATIC_M1_WTSYNTH = 16_u32
  MM_CHROMATIC_M1_MPEGWAVEIN = 17_u32
  MM_CHROMATIC_M1_MPEGWAVEOUT = 18_u32
  MM_CHROMATIC_M2 = 19_u32
  MM_CHROMATIC_M2_WAVEIN = 20_u32
  MM_CHROMATIC_M2_WAVEOUT = 21_u32
  MM_CHROMATIC_M2_FMSYNTH = 22_u32
  MM_CHROMATIC_M2_MIXER = 23_u32
  MM_CHROMATIC_M2_AUX = 24_u32
  MM_CHROMATIC_M2_AUX_CD = 25_u32
  MM_CHROMATIC_M2_MIDIIN = 32_u32
  MM_CHROMATIC_M2_MIDIOUT = 33_u32
  MM_CHROMATIC_M2_WTSYNTH = 34_u32
  MM_CHROMATIC_M2_MPEGWAVEIN = 35_u32
  MM_CHROMATIC_M2_MPEGWAVEOUT = 36_u32
  MM_VIENNASYS_TSP_WAVE_DRIVER = 1_u32
  MM_CONNECTIX_VIDEC_CODEC = 1_u32
  MM_GADGETLABS_WAVE44_WAVEIN = 1_u32
  MM_GADGETLABS_WAVE44_WAVEOUT = 2_u32
  MM_GADGETLABS_WAVE42_WAVEIN = 3_u32
  MM_GADGETLABS_WAVE42_WAVEOUT = 4_u32
  MM_GADGETLABS_WAVE4_MIDIIN = 5_u32
  MM_GADGETLABS_WAVE4_MIDIOUT = 6_u32
  MM_FRONTIER_WAVECENTER_MIDIIN = 1_u32
  MM_FRONTIER_WAVECENTER_MIDIOUT = 2_u32
  MM_FRONTIER_WAVECENTER_WAVEIN = 3_u32
  MM_FRONTIER_WAVECENTER_WAVEOUT = 4_u32
  MM_VIONA_QVINPCI_MIXER = 1_u32
  MM_VIONA_QVINPCI_WAVEIN = 2_u32
  MM_VIONAQVINPCI_WAVEOUT = 3_u32
  MM_VIONA_BUSTER_MIXER = 4_u32
  MM_VIONA_CINEMASTER_MIXER = 5_u32
  MM_VIONA_CONCERTO_MIXER = 6_u32
  MM_CASIO_WP150_MIDIOUT = 1_u32
  MM_CASIO_WP150_MIDIIN = 2_u32
  MM_CASIO_LSG_MIDIOUT = 3_u32
  MM_DIMD_PLATFORM = 0_u32
  MM_DIMD_DIRSOUND = 1_u32
  MM_DIMD_VIRTMPU = 2_u32
  MM_DIMD_VIRTSB = 3_u32
  MM_DIMD_VIRTJOY = 4_u32
  MM_DIMD_WAVEIN = 5_u32
  MM_DIMD_WAVEOUT = 6_u32
  MM_DIMD_MIDIIN = 7_u32
  MM_DIMD_MIDIOUT = 8_u32
  MM_DIMD_AUX_LINE = 9_u32
  MM_DIMD_MIXER = 10_u32
  MM_DIMD_WSS_WAVEIN = 14_u32
  MM_DIMD_WSS_WAVEOUT = 15_u32
  MM_DIMD_WSS_MIXER = 17_u32
  MM_DIMD_WSS_AUX = 21_u32
  MM_DIMD_WSS_SYNTH = 76_u32
  MM_S3_WAVEOUT = 1_u32
  MM_S3_WAVEIN = 2_u32
  MM_S3_MIDIOUT = 3_u32
  MM_S3_MIDIIN = 4_u32
  MM_S3_FMSYNTH = 5_u32
  MM_S3_MIXER = 6_u32
  MM_S3_AUX = 7_u32
  MM_VKC_MPU401_MIDIIN = 256_u32
  MM_VKC_SERIAL_MIDIIN = 257_u32
  MM_VKC_MPU401_MIDIOUT = 512_u32
  MM_VKC_SERIAL_MIDIOUT = 513_u32
  MM_ZEFIRO_ZA2 = 2_u32
  MM_FHGIIS_MPEGLAYER3_DECODE = 9_u32
  MM_FHGIIS_MPEGLAYER3 = 10_u32
  MM_FHGIIS_MPEGLAYER3_LITE = 10_u32
  MM_FHGIIS_MPEGLAYER3_BASIC = 11_u32
  MM_FHGIIS_MPEGLAYER3_ADVANCED = 12_u32
  MM_FHGIIS_MPEGLAYER3_PROFESSIONAL = 13_u32
  MM_FHGIIS_MPEGLAYER3_ADVANCEDPLUS = 14_u32
  MM_QUICKNET_PJWAVEIN = 1_u32
  MM_QUICKNET_PJWAVEOUT = 2_u32
  MM_SICRESOURCE_SSO3D = 2_u32
  MM_SICRESOURCE_SSOW3DI = 3_u32
  MM_NEOMAGIC_SYNTH = 1_u32
  MM_NEOMAGIC_WAVEOUT = 2_u32
  MM_NEOMAGIC_WAVEIN = 3_u32
  MM_NEOMAGIC_MIDIOUT = 4_u32
  MM_NEOMAGIC_MIDIIN = 5_u32
  MM_NEOMAGIC_AUX = 6_u32
  MM_NEOMAGIC_MW3DX_WAVEOUT = 10_u32
  MM_NEOMAGIC_MW3DX_WAVEIN = 11_u32
  MM_NEOMAGIC_MW3DX_MIDIOUT = 12_u32
  MM_NEOMAGIC_MW3DX_MIDIIN = 13_u32
  MM_NEOMAGIC_MW3DX_FMSYNTH = 14_u32
  MM_NEOMAGIC_MW3DX_GMSYNTH = 15_u32
  MM_NEOMAGIC_MW3DX_MIXER = 16_u32
  MM_NEOMAGIC_MW3DX_AUX = 17_u32
  MM_NEOMAGIC_MWAVE_WAVEOUT = 20_u32
  MM_NEOMAGIC_MWAVE_WAVEIN = 21_u32
  MM_NEOMAGIC_MWAVE_MIDIOUT = 22_u32
  MM_NEOMAGIC_MWAVE_MIDIIN = 23_u32
  MM_NEOMAGIC_MWAVE_MIXER = 24_u32
  MM_NEOMAGIC_MWAVE_AUX = 25_u32
  MM_MERGING_MPEGL3 = 1_u32
  MM_XIRLINK_VISIONLINK = 1_u32
  MM_OTI_611WAVEIN = 5_u32
  MM_OTI_611WAVEOUT = 6_u32
  MM_OTI_611MIXER = 7_u32
  MM_OTI_611MIDIN = 18_u32
  MM_OTI_611MIDIOUT = 19_u32
  MM_AUREAL_AU8820 = 16_u32
  MM_AU8820_SYNTH = 17_u32
  MM_AU8820_WAVEOUT = 18_u32
  MM_AU8820_WAVEIN = 19_u32
  MM_AU8820_MIXER = 20_u32
  MM_AU8820_AUX = 21_u32
  MM_AU8820_MIDIOUT = 22_u32
  MM_AU8820_MIDIIN = 23_u32
  MM_AUREAL_AU8830 = 32_u32
  MM_AU8830_SYNTH = 33_u32
  MM_AU8830_WAVEOUT = 34_u32
  MM_AU8830_WAVEIN = 35_u32
  MM_AU8830_MIXER = 36_u32
  MM_AU8830_AUX = 37_u32
  MM_AU8830_MIDIOUT = 38_u32
  MM_AU8830_MIDIIN = 39_u32
  MM_VIVO_AUDIO_CODEC = 1_u32
  MM_SHARP_MDC_MIDI_SYNTH = 1_u32
  MM_SHARP_MDC_MIDI_IN = 2_u32
  MM_SHARP_MDC_MIDI_OUT = 3_u32
  MM_SHARP_MDC_WAVE_IN = 4_u32
  MM_SHARP_MDC_WAVE_OUT = 5_u32
  MM_SHARP_MDC_AUX = 6_u32
  MM_SHARP_MDC_MIXER = 10_u32
  MM_SHARP_MDC_AUX_MASTER = 100_u32
  MM_SHARP_MDC_AUX_BASS = 101_u32
  MM_SHARP_MDC_AUX_TREBLE = 102_u32
  MM_SHARP_MDC_AUX_MIDI_VOL = 103_u32
  MM_SHARP_MDC_AUX_WAVE_VOL = 104_u32
  MM_SHARP_MDC_AUX_WAVE_RVB = 105_u32
  MM_SHARP_MDC_AUX_WAVE_CHR = 106_u32
  MM_SHARP_MDC_AUX_VOL = 107_u32
  MM_SHARP_MDC_AUX_RVB = 108_u32
  MM_SHARP_MDC_AUX_CHR = 109_u32
  MM_LUCENT_ACM_G723 = 0_u32
  MM_ATT_G729A = 1_u32
  MM_MARIAN_ARC44WAVEIN = 1_u32
  MM_MARIAN_ARC44WAVEOUT = 2_u32
  MM_MARIAN_PRODIF24WAVEIN = 3_u32
  MM_MARIAN_PRODIF24WAVEOUT = 4_u32
  MM_MARIAN_ARC88WAVEIN = 5_u32
  MM_MARIAN_ARC88WAVEOUT = 6_u32
  MM_BCB_NETBOARD_10 = 1_u32
  MM_BCB_TT75_10 = 2_u32
  MM_MOTIONPIXELS_MVI2 = 1_u32
  MM_QDESIGN_ACM_MPEG = 1_u32
  MM_QDESIGN_ACM_QDESIGN_MUSIC = 2_u32
  MM_NMP_CCP_WAVEIN = 1_u32
  MM_NMP_CCP_WAVEOUT = 2_u32
  MM_NMP_ACM_AMR = 10_u32
  MM_DF_ACM_G726 = 1_u32
  MM_DF_ACM_GSM610 = 2_u32
  MM_BERCOS_WAVEIN = 1_u32
  MM_BERCOS_MIXER = 2_u32
  MM_BERCOS_WAVEOUT = 3_u32
  MM_ONLIVE_MPCODEC = 1_u32
  MM_PHONET_PP_WAVEOUT = 1_u32
  MM_PHONET_PP_WAVEIN = 2_u32
  MM_PHONET_PP_MIXER = 3_u32
  MM_FTR_ENCODER_WAVEIN = 1_u32
  MM_FTR_ACM = 2_u32
  MM_ENET_T2000_LINEIN = 1_u32
  MM_ENET_T2000_LINEOUT = 2_u32
  MM_ENET_T2000_HANDSETIN = 3_u32
  MM_ENET_T2000_HANDSETOUT = 4_u32
  MM_EMAGIC_UNITOR8 = 1_u32
  MM_SIPROLAB_ACELPNET = 1_u32
  MM_DICTAPHONE_G726 = 1_u32
  MM_RZS_ACM_TUBGSM = 1_u32
  MM_EES_PCMIDI14 = 1_u32
  MM_EES_PCMIDI14_IN = 2_u32
  MM_EES_PCMIDI14_OUT1 = 3_u32
  MM_EES_PCMIDI14_OUT2 = 4_u32
  MM_EES_PCMIDI14_OUT3 = 5_u32
  MM_EES_PCMIDI14_OUT4 = 6_u32
  MM_HAFTMANN_LPTDAC2 = 1_u32
  MM_LUCID_PCI24WAVEIN = 1_u32
  MM_LUCID_PCI24WAVEOUT = 2_u32
  MM_HEADSPACE_HAESYNTH = 1_u32
  MM_HEADSPACE_HAEWAVEOUT = 2_u32
  MM_HEADSPACE_HAEWAVEIN = 3_u32
  MM_HEADSPACE_HAEMIXER = 4_u32
  MM_UNISYS_ACM_NAP = 1_u32
  MM_LUMINOSITI_SCWAVEIN = 1_u32
  MM_LUMINOSITI_SCWAVEOUT = 2_u32
  MM_LUMINOSITI_SCWAVEMIX = 3_u32
  MM_ACTIVEVOICE_ACM_VOXADPCM = 1_u32
  MM_DTS_DS = 1_u32
  MM_SOFTLAB_NSK_FRW_WAVEIN = 1_u32
  MM_SOFTLAB_NSK_FRW_WAVEOUT = 2_u32
  MM_SOFTLAB_NSK_FRW_MIXER = 3_u32
  MM_SOFTLAB_NSK_FRW_AUX = 4_u32
  MM_FORTEMEDIA_WAVEIN = 1_u32
  MM_FORTEMEDIA_WAVEOUT = 2_u32
  MM_FORTEMEDIA_FMSYNC = 3_u32
  MM_FORTEMEDIA_MIXER = 4_u32
  MM_FORTEMEDIA_AUX = 5_u32
  MM_SONORUS_STUDIO = 1_u32
  MM_I_LINK_VOICE_CODER = 1_u32
  MM_SELSIUS_SYSTEMS_RTPWAVEOUT = 1_u32
  MM_SELSIUS_SYSTEMS_RTPWAVEIN = 2_u32
  MM_ADMOS_FM_SYNTH = 1_u32
  MM_ADMOS_QS3AMIDIOUT = 2_u32
  MM_ADMOS_QS3AMIDIIN = 3_u32
  MM_ADMOS_QS3AWAVEOUT = 4_u32
  MM_ADMOS_QS3AWAVEIN = 5_u32
  MM_LEXICON_STUDIO_WAVE_OUT = 1_u32
  MM_LEXICON_STUDIO_WAVE_IN = 2_u32
  MM_SGI_320_WAVEIN = 1_u32
  MM_SGI_320_WAVEOUT = 2_u32
  MM_SGI_320_MIXER = 3_u32
  MM_SGI_540_WAVEIN = 4_u32
  MM_SGI_540_WAVEOUT = 5_u32
  MM_SGI_540_MIXER = 6_u32
  MM_SGI_RAD_ADATMONO1_WAVEIN = 7_u32
  MM_SGI_RAD_ADATMONO2_WAVEIN = 8_u32
  MM_SGI_RAD_ADATMONO3_WAVEIN = 9_u32
  MM_SGI_RAD_ADATMONO4_WAVEIN = 10_u32
  MM_SGI_RAD_ADATMONO5_WAVEIN = 11_u32
  MM_SGI_RAD_ADATMONO6_WAVEIN = 12_u32
  MM_SGI_RAD_ADATMONO7_WAVEIN = 13_u32
  MM_SGI_RAD_ADATMONO8_WAVEIN = 14_u32
  MM_SGI_RAD_ADATSTEREO12_WAVEIN = 15_u32
  MM_SGI_RAD_ADATSTEREO34_WAVEIN = 16_u32
  MM_SGI_RAD_ADATSTEREO56_WAVEIN = 17_u32
  MM_SGI_RAD_ADATSTEREO78_WAVEIN = 18_u32
  MM_SGI_RAD_ADAT8CHAN_WAVEIN = 19_u32
  MM_SGI_RAD_ADATMONO1_WAVEOUT = 20_u32
  MM_SGI_RAD_ADATMONO2_WAVEOUT = 21_u32
  MM_SGI_RAD_ADATMONO3_WAVEOUT = 22_u32
  MM_SGI_RAD_ADATMONO4_WAVEOUT = 23_u32
  MM_SGI_RAD_ADATMONO5_WAVEOUT = 24_u32
  MM_SGI_RAD_ADATMONO6_WAVEOUT = 25_u32
  MM_SGI_RAD_ADATMONO7_WAVEOUT = 26_u32
  MM_SGI_RAD_ADATMONO8_WAVEOUT = 27_u32
  MM_SGI_RAD_ADATSTEREO12_WAVEOUT = 28_u32
  MM_SGI_RAD_ADATSTEREO32_WAVEOUT = 29_u32
  MM_SGI_RAD_ADATSTEREO56_WAVEOUT = 30_u32
  MM_SGI_RAD_ADATSTEREO78_WAVEOUT = 31_u32
  MM_SGI_RAD_ADAT8CHAN_WAVEOUT = 32_u32
  MM_SGI_RAD_AESMONO1_WAVEIN = 33_u32
  MM_SGI_RAD_AESMONO2_WAVEIN = 34_u32
  MM_SGI_RAD_AESSTEREO_WAVEIN = 35_u32
  MM_SGI_RAD_AESMONO1_WAVEOUT = 36_u32
  MM_SGI_RAD_AESMONO2_WAVEOUT = 37_u32
  MM_SGI_RAD_AESSTEREO_WAVEOUT = 38_u32
  MM_IPI_ACM_HSX = 1_u32
  MM_IPI_ACM_RPELP = 2_u32
  MM_IPI_WF_ASSS = 3_u32
  MM_IPI_AT_WAVEOUT = 4_u32
  MM_IPI_AT_WAVEIN = 5_u32
  MM_IPI_AT_MIXER = 6_u32
  MM_ICE_WAVEOUT = 1_u32
  MM_ICE_WAVEIN = 2_u32
  MM_ICE_MTWAVEOUT = 3_u32
  MM_ICE_MTWAVEIN = 4_u32
  MM_ICE_MIDIOUT1 = 5_u32
  MM_ICE_MIDIIN1 = 6_u32
  MM_ICE_MIDIOUT2 = 7_u32
  MM_ICE_MIDIIN2 = 8_u32
  MM_ICE_SYNTH = 9_u32
  MM_ICE_MIXER = 10_u32
  MM_ICE_AUX = 11_u32
  MM_VQST_VQC1 = 1_u32
  MM_VQST_VQC2 = 2_u32
  MM_ETEK_KWIKMIDI_MIDIIN = 1_u32
  MM_ETEK_KWIKMIDI_MIDIOUT = 2_u32
  MM_INTERNET_SSW_MIDIOUT = 10_u32
  MM_INTERNET_SSW_MIDIIN = 11_u32
  MM_INTERNET_SSW_WAVEOUT = 12_u32
  MM_INTERNET_SSW_WAVEIN = 13_u32
  MM_SONY_ACM_SCX = 1_u32
  MM_UH_ACM_ADPCM = 1_u32
  MM_SYDEC_NV_WAVEIN = 1_u32
  MM_SYDEC_NV_WAVEOUT = 2_u32
  MM_FLEXION_X300_WAVEIN = 1_u32
  MM_FLEXION_X300_WAVEOUT = 2_u32
  MM_VIA_WAVEOUT = 1_u32
  MM_VIA_WAVEIN = 2_u32
  MM_VIA_MIXER = 3_u32
  MM_VIA_AUX = 4_u32
  MM_VIA_MPU401_MIDIOUT = 5_u32
  MM_VIA_MPU401_MIDIIN = 6_u32
  MM_VIA_SWFM_SYNTH = 7_u32
  MM_VIA_WDM_WAVEOUT = 8_u32
  MM_VIA_WDM_WAVEIN = 9_u32
  MM_VIA_WDM_MIXER = 10_u32
  MM_VIA_WDM_MPU401_MIDIOUT = 11_u32
  MM_VIA_WDM_MPU401_MIDIIN = 12_u32
  MM_MICRONAS_SC4 = 1_u32
  MM_MICRONAS_CLP833 = 2_u32
  MM_HP_WAVEOUT = 1_u32
  MM_HP_WAVEIN = 2_u32
  MM_QUICKAUDIO_MINIMIDI = 1_u32
  MM_QUICKAUDIO_MAXIMIDI = 2_u32
  MM_ICCC_UNA3_WAVEIN = 1_u32
  MM_ICCC_UNA3_WAVEOUT = 2_u32
  MM_ICCC_UNA3_AUX = 3_u32
  MM_ICCC_UNA3_MIXER = 4_u32
  MM_3COM_CB_MIXER = 1_u32
  MM_3COM_CB_WAVEIN = 2_u32
  MM_3COM_CB_WAVEOUT = 3_u32
  MM_MINDMAKER_GC_WAVEIN = 1_u32
  MM_MINDMAKER_GC_WAVEOUT = 2_u32
  MM_MINDMAKER_GC_MIXER = 3_u32
  MM_TELEKOL_WAVEOUT = 1_u32
  MM_TELEKOL_WAVEIN = 2_u32
  MM_ALGOVISION_VB80WAVEOUT = 1_u32
  MM_ALGOVISION_VB80WAVEIN = 2_u32
  MM_ALGOVISION_VB80MIXER = 3_u32
  MM_ALGOVISION_VB80AUX = 4_u32
  MM_ALGOVISION_VB80AUX2 = 5_u32
  WAVE_FORMAT_UNKNOWN = 0_u32
  WAVE_FORMAT_ADPCM = 2_u32
  WAVE_FORMAT_IEEE_FLOAT = 3_u32
  WAVE_FORMAT_VSELP = 4_u32
  WAVE_FORMAT_IBM_CVSD = 5_u32
  WAVE_FORMAT_ALAW = 6_u32
  WAVE_FORMAT_MULAW = 7_u32
  WAVE_FORMAT_DTS = 8_u32
  WAVE_FORMAT_DRM = 9_u32
  WAVE_FORMAT_WMAVOICE9 = 10_u32
  WAVE_FORMAT_WMAVOICE10 = 11_u32
  WAVE_FORMAT_OKI_ADPCM = 16_u32
  WAVE_FORMAT_DVI_ADPCM = 17_u32
  WAVE_FORMAT_IMA_ADPCM = 17_u32
  WAVE_FORMAT_MEDIASPACE_ADPCM = 18_u32
  WAVE_FORMAT_SIERRA_ADPCM = 19_u32
  WAVE_FORMAT_G723_ADPCM = 20_u32
  WAVE_FORMAT_DIGISTD = 21_u32
  WAVE_FORMAT_DIGIFIX = 22_u32
  WAVE_FORMAT_DIALOGIC_OKI_ADPCM = 23_u32
  WAVE_FORMAT_MEDIAVISION_ADPCM = 24_u32
  WAVE_FORMAT_CU_CODEC = 25_u32
  WAVE_FORMAT_HP_DYN_VOICE = 26_u32
  WAVE_FORMAT_YAMAHA_ADPCM = 32_u32
  WAVE_FORMAT_SONARC = 33_u32
  WAVE_FORMAT_DSPGROUP_TRUESPEECH = 34_u32
  WAVE_FORMAT_ECHOSC1 = 35_u32
  WAVE_FORMAT_AUDIOFILE_AF36 = 36_u32
  WAVE_FORMAT_APTX = 37_u32
  WAVE_FORMAT_AUDIOFILE_AF10 = 38_u32
  WAVE_FORMAT_PROSODY_1612 = 39_u32
  WAVE_FORMAT_LRC = 40_u32
  WAVE_FORMAT_DOLBY_AC2 = 48_u32
  WAVE_FORMAT_GSM610 = 49_u32
  WAVE_FORMAT_MSNAUDIO = 50_u32
  WAVE_FORMAT_ANTEX_ADPCME = 51_u32
  WAVE_FORMAT_CONTROL_RES_VQLPC = 52_u32
  WAVE_FORMAT_DIGIREAL = 53_u32
  WAVE_FORMAT_DIGIADPCM = 54_u32
  WAVE_FORMAT_CONTROL_RES_CR10 = 55_u32
  WAVE_FORMAT_NMS_VBXADPCM = 56_u32
  WAVE_FORMAT_CS_IMAADPCM = 57_u32
  WAVE_FORMAT_ECHOSC3 = 58_u32
  WAVE_FORMAT_ROCKWELL_ADPCM = 59_u32
  WAVE_FORMAT_ROCKWELL_DIGITALK = 60_u32
  WAVE_FORMAT_XEBEC = 61_u32
  WAVE_FORMAT_G721_ADPCM = 64_u32
  WAVE_FORMAT_G728_CELP = 65_u32
  WAVE_FORMAT_MSG723 = 66_u32
  WAVE_FORMAT_INTEL_G723_1 = 67_u32
  WAVE_FORMAT_INTEL_G729 = 68_u32
  WAVE_FORMAT_SHARP_G726 = 69_u32
  WAVE_FORMAT_MPEG = 80_u32
  WAVE_FORMAT_RT24 = 82_u32
  WAVE_FORMAT_PAC = 83_u32
  WAVE_FORMAT_MPEGLAYER3 = 85_u32
  WAVE_FORMAT_LUCENT_G723 = 89_u32
  WAVE_FORMAT_CIRRUS = 96_u32
  WAVE_FORMAT_ESPCM = 97_u32
  WAVE_FORMAT_VOXWARE = 98_u32
  WAVE_FORMAT_CANOPUS_ATRAC = 99_u32
  WAVE_FORMAT_G726_ADPCM = 100_u32
  WAVE_FORMAT_G722_ADPCM = 101_u32
  WAVE_FORMAT_DSAT = 102_u32
  WAVE_FORMAT_DSAT_DISPLAY = 103_u32
  WAVE_FORMAT_VOXWARE_BYTE_ALIGNED = 105_u32
  WAVE_FORMAT_VOXWARE_AC8 = 112_u32
  WAVE_FORMAT_VOXWARE_AC10 = 113_u32
  WAVE_FORMAT_VOXWARE_AC16 = 114_u32
  WAVE_FORMAT_VOXWARE_AC20 = 115_u32
  WAVE_FORMAT_VOXWARE_RT24 = 116_u32
  WAVE_FORMAT_VOXWARE_RT29 = 117_u32
  WAVE_FORMAT_VOXWARE_RT29HW = 118_u32
  WAVE_FORMAT_VOXWARE_VR12 = 119_u32
  WAVE_FORMAT_VOXWARE_VR18 = 120_u32
  WAVE_FORMAT_VOXWARE_TQ40 = 121_u32
  WAVE_FORMAT_VOXWARE_SC3 = 122_u32
  WAVE_FORMAT_VOXWARE_SC3_1 = 123_u32
  WAVE_FORMAT_SOFTSOUND = 128_u32
  WAVE_FORMAT_VOXWARE_TQ60 = 129_u32
  WAVE_FORMAT_MSRT24 = 130_u32
  WAVE_FORMAT_G729A = 131_u32
  WAVE_FORMAT_MVI_MVI2 = 132_u32
  WAVE_FORMAT_DF_G726 = 133_u32
  WAVE_FORMAT_DF_GSM610 = 134_u32
  WAVE_FORMAT_ISIAUDIO = 136_u32
  WAVE_FORMAT_ONLIVE = 137_u32
  WAVE_FORMAT_MULTITUDE_FT_SX20 = 138_u32
  WAVE_FORMAT_INFOCOM_ITS_G721_ADPCM = 139_u32
  WAVE_FORMAT_CONVEDIA_G729 = 140_u32
  WAVE_FORMAT_CONGRUENCY = 141_u32
  WAVE_FORMAT_SBC24 = 145_u32
  WAVE_FORMAT_DOLBY_AC3_SPDIF = 146_u32
  WAVE_FORMAT_MEDIASONIC_G723 = 147_u32
  WAVE_FORMAT_PROSODY_8KBPS = 148_u32
  WAVE_FORMAT_ZYXEL_ADPCM = 151_u32
  WAVE_FORMAT_PHILIPS_LPCBB = 152_u32
  WAVE_FORMAT_PACKED = 153_u32
  WAVE_FORMAT_MALDEN_PHONYTALK = 160_u32
  WAVE_FORMAT_RACAL_RECORDER_GSM = 161_u32
  WAVE_FORMAT_RACAL_RECORDER_G720_A = 162_u32
  WAVE_FORMAT_RACAL_RECORDER_G723_1 = 163_u32
  WAVE_FORMAT_RACAL_RECORDER_TETRA_ACELP = 164_u32
  WAVE_FORMAT_NEC_AAC = 176_u32
  WAVE_FORMAT_RAW_AAC1 = 255_u32
  WAVE_FORMAT_RHETOREX_ADPCM = 256_u32
  WAVE_FORMAT_IRAT = 257_u32
  WAVE_FORMAT_VIVO_G723 = 273_u32
  WAVE_FORMAT_VIVO_SIREN = 274_u32
  WAVE_FORMAT_PHILIPS_CELP = 288_u32
  WAVE_FORMAT_PHILIPS_GRUNDIG = 289_u32
  WAVE_FORMAT_DIGITAL_G723 = 291_u32
  WAVE_FORMAT_SANYO_LD_ADPCM = 293_u32
  WAVE_FORMAT_SIPROLAB_ACEPLNET = 304_u32
  WAVE_FORMAT_SIPROLAB_ACELP4800 = 305_u32
  WAVE_FORMAT_SIPROLAB_ACELP8V3 = 306_u32
  WAVE_FORMAT_SIPROLAB_G729 = 307_u32
  WAVE_FORMAT_SIPROLAB_G729A = 308_u32
  WAVE_FORMAT_SIPROLAB_KELVIN = 309_u32
  WAVE_FORMAT_VOICEAGE_AMR = 310_u32
  WAVE_FORMAT_G726ADPCM = 320_u32
  WAVE_FORMAT_DICTAPHONE_CELP68 = 321_u32
  WAVE_FORMAT_DICTAPHONE_CELP54 = 322_u32
  WAVE_FORMAT_QUALCOMM_PUREVOICE = 336_u32
  WAVE_FORMAT_QUALCOMM_HALFRATE = 337_u32
  WAVE_FORMAT_TUBGSM = 341_u32
  WAVE_FORMAT_MSAUDIO1 = 352_u32
  WAVE_FORMAT_WMAUDIO2 = 353_u32
  WAVE_FORMAT_WMAUDIO3 = 354_u32
  WAVE_FORMAT_WMAUDIO_LOSSLESS = 355_u32
  WAVE_FORMAT_WMASPDIF = 356_u32
  WAVE_FORMAT_UNISYS_NAP_ADPCM = 368_u32
  WAVE_FORMAT_UNISYS_NAP_ULAW = 369_u32
  WAVE_FORMAT_UNISYS_NAP_ALAW = 370_u32
  WAVE_FORMAT_UNISYS_NAP_16K = 371_u32
  WAVE_FORMAT_SYCOM_ACM_SYC008 = 372_u32
  WAVE_FORMAT_SYCOM_ACM_SYC701_G726L = 373_u32
  WAVE_FORMAT_SYCOM_ACM_SYC701_CELP54 = 374_u32
  WAVE_FORMAT_SYCOM_ACM_SYC701_CELP68 = 375_u32
  WAVE_FORMAT_KNOWLEDGE_ADVENTURE_ADPCM = 376_u32
  WAVE_FORMAT_FRAUNHOFER_IIS_MPEG2_AAC = 384_u32
  WAVE_FORMAT_DTS_DS = 400_u32
  WAVE_FORMAT_CREATIVE_ADPCM = 512_u32
  WAVE_FORMAT_CREATIVE_FASTSPEECH8 = 514_u32
  WAVE_FORMAT_CREATIVE_FASTSPEECH10 = 515_u32
  WAVE_FORMAT_UHER_ADPCM = 528_u32
  WAVE_FORMAT_ULEAD_DV_AUDIO = 533_u32
  WAVE_FORMAT_ULEAD_DV_AUDIO_1 = 534_u32
  WAVE_FORMAT_QUARTERDECK = 544_u32
  WAVE_FORMAT_ILINK_VC = 560_u32
  WAVE_FORMAT_RAW_SPORT = 576_u32
  WAVE_FORMAT_ESST_AC3 = 577_u32
  WAVE_FORMAT_GENERIC_PASSTHRU = 585_u32
  WAVE_FORMAT_IPI_HSX = 592_u32
  WAVE_FORMAT_IPI_RPELP = 593_u32
  WAVE_FORMAT_CS2 = 608_u32
  WAVE_FORMAT_SONY_SCX = 624_u32
  WAVE_FORMAT_SONY_SCY = 625_u32
  WAVE_FORMAT_SONY_ATRAC3 = 626_u32
  WAVE_FORMAT_SONY_SPC = 627_u32
  WAVE_FORMAT_TELUM_AUDIO = 640_u32
  WAVE_FORMAT_TELUM_IA_AUDIO = 641_u32
  WAVE_FORMAT_NORCOM_VOICE_SYSTEMS_ADPCM = 645_u32
  WAVE_FORMAT_FM_TOWNS_SND = 768_u32
  WAVE_FORMAT_MICRONAS = 848_u32
  WAVE_FORMAT_MICRONAS_CELP833 = 849_u32
  WAVE_FORMAT_BTV_DIGITAL = 1024_u32
  WAVE_FORMAT_INTEL_MUSIC_CODER = 1025_u32
  WAVE_FORMAT_INDEO_AUDIO = 1026_u32
  WAVE_FORMAT_QDESIGN_MUSIC = 1104_u32
  WAVE_FORMAT_ON2_VP7_AUDIO = 1280_u32
  WAVE_FORMAT_ON2_VP6_AUDIO = 1281_u32
  WAVE_FORMAT_VME_VMPCM = 1664_u32
  WAVE_FORMAT_TPC = 1665_u32
  WAVE_FORMAT_LIGHTWAVE_LOSSLESS = 2222_u32
  WAVE_FORMAT_OLIGSM = 4096_u32
  WAVE_FORMAT_OLIADPCM = 4097_u32
  WAVE_FORMAT_OLICELP = 4098_u32
  WAVE_FORMAT_OLISBC = 4099_u32
  WAVE_FORMAT_OLIOPR = 4100_u32
  WAVE_FORMAT_LH_CODEC = 4352_u32
  WAVE_FORMAT_LH_CODEC_CELP = 4353_u32
  WAVE_FORMAT_LH_CODEC_SBC8 = 4354_u32
  WAVE_FORMAT_LH_CODEC_SBC12 = 4355_u32
  WAVE_FORMAT_LH_CODEC_SBC16 = 4356_u32
  WAVE_FORMAT_NORRIS = 5120_u32
  WAVE_FORMAT_ISIAUDIO_2 = 5121_u32
  WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS = 5376_u32
  WAVE_FORMAT_MPEG_ADTS_AAC = 5632_u32
  WAVE_FORMAT_MPEG_RAW_AAC = 5633_u32
  WAVE_FORMAT_MPEG_LOAS = 5634_u32
  WAVE_FORMAT_NOKIA_MPEG_ADTS_AAC = 5640_u32
  WAVE_FORMAT_NOKIA_MPEG_RAW_AAC = 5641_u32
  WAVE_FORMAT_VODAFONE_MPEG_ADTS_AAC = 5642_u32
  WAVE_FORMAT_VODAFONE_MPEG_RAW_AAC = 5643_u32
  WAVE_FORMAT_MPEG_HEAAC = 5648_u32
  WAVE_FORMAT_VOXWARE_RT24_SPEECH = 6172_u32
  WAVE_FORMAT_SONICFOUNDRY_LOSSLESS = 6513_u32
  WAVE_FORMAT_INNINGS_TELECOM_ADPCM = 6521_u32
  WAVE_FORMAT_LUCENT_SX8300P = 7175_u32
  WAVE_FORMAT_LUCENT_SX5363S = 7180_u32
  WAVE_FORMAT_CUSEEME = 7939_u32
  WAVE_FORMAT_NTCSOFT_ALF2CM_ACM = 8132_u32
  WAVE_FORMAT_DVM = 8192_u32
  WAVE_FORMAT_DTS2 = 8193_u32
  WAVE_FORMAT_MAKEAVIS = 13075_u32
  WAVE_FORMAT_DIVIO_MPEG4_AAC = 16707_u32
  WAVE_FORMAT_NOKIA_ADAPTIVE_MULTIRATE = 16897_u32
  WAVE_FORMAT_DIVIO_G726 = 16963_u32
  WAVE_FORMAT_LEAD_SPEECH = 17228_u32
  WAVE_FORMAT_LEAD_VORBIS = 22092_u32
  WAVE_FORMAT_WAVPACK_AUDIO = 22358_u32
  WAVE_FORMAT_ALAC = 27745_u32
  WAVE_FORMAT_OGG_VORBIS_MODE_1 = 26447_u32
  WAVE_FORMAT_OGG_VORBIS_MODE_2 = 26448_u32
  WAVE_FORMAT_OGG_VORBIS_MODE_3 = 26449_u32
  WAVE_FORMAT_OGG_VORBIS_MODE_1_PLUS = 26479_u32
  WAVE_FORMAT_OGG_VORBIS_MODE_2_PLUS = 26480_u32
  WAVE_FORMAT_OGG_VORBIS_MODE_3_PLUS = 26481_u32
  WAVE_FORMAT_3COM_NBX = 28672_u32
  WAVE_FORMAT_OPUS = 28751_u32
  WAVE_FORMAT_FAAD_AAC = 28781_u32
  WAVE_FORMAT_AMR_NB = 29537_u32
  WAVE_FORMAT_AMR_WB = 29538_u32
  WAVE_FORMAT_AMR_WP = 29539_u32
  WAVE_FORMAT_GSM_AMR_CBR = 31265_u32
  WAVE_FORMAT_GSM_AMR_VBR_SID = 31266_u32
  WAVE_FORMAT_COMVERSE_INFOSYS_G723_1 = 41216_u32
  WAVE_FORMAT_COMVERSE_INFOSYS_AVQSBC = 41217_u32
  WAVE_FORMAT_COMVERSE_INFOSYS_SBC = 41218_u32
  WAVE_FORMAT_SYMBOL_G729_A = 41219_u32
  WAVE_FORMAT_VOICEAGE_AMR_WB = 41220_u32
  WAVE_FORMAT_INGENIENT_G726 = 41221_u32
  WAVE_FORMAT_MPEG4_AAC = 41222_u32
  WAVE_FORMAT_ENCORE_G726 = 41223_u32
  WAVE_FORMAT_ZOLL_ASAO = 41224_u32
  WAVE_FORMAT_SPEEX_VOICE = 41225_u32
  WAVE_FORMAT_VIANIX_MASC = 41226_u32
  WAVE_FORMAT_WM9_SPECTRUM_ANALYZER = 41227_u32
  WAVE_FORMAT_WMF_SPECTRUM_ANAYZER = 41228_u32
  WAVE_FORMAT_GSM_610 = 41229_u32
  WAVE_FORMAT_GSM_620 = 41230_u32
  WAVE_FORMAT_GSM_660 = 41231_u32
  WAVE_FORMAT_GSM_690 = 41232_u32
  WAVE_FORMAT_GSM_ADAPTIVE_MULTIRATE_WB = 41233_u32
  WAVE_FORMAT_POLYCOM_G722 = 41234_u32
  WAVE_FORMAT_POLYCOM_G728 = 41235_u32
  WAVE_FORMAT_POLYCOM_G729_A = 41236_u32
  WAVE_FORMAT_POLYCOM_SIREN = 41237_u32
  WAVE_FORMAT_GLOBAL_IP_ILBC = 41238_u32
  WAVE_FORMAT_RADIOTIME_TIME_SHIFT_RADIO = 41239_u32
  WAVE_FORMAT_NICE_ACA = 41240_u32
  WAVE_FORMAT_NICE_ADPCM = 41241_u32
  WAVE_FORMAT_VOCORD_G721 = 41242_u32
  WAVE_FORMAT_VOCORD_G726 = 41243_u32
  WAVE_FORMAT_VOCORD_G722_1 = 41244_u32
  WAVE_FORMAT_VOCORD_G728 = 41245_u32
  WAVE_FORMAT_VOCORD_G729 = 41246_u32
  WAVE_FORMAT_VOCORD_G729_A = 41247_u32
  WAVE_FORMAT_VOCORD_G723_1 = 41248_u32
  WAVE_FORMAT_VOCORD_LBC = 41249_u32
  WAVE_FORMAT_NICE_G728 = 41250_u32
  WAVE_FORMAT_FRACE_TELECOM_G729 = 41251_u32
  WAVE_FORMAT_CODIAN = 41252_u32
  WAVE_FORMAT_DOLBY_AC4 = 44096_u32
  WAVE_FORMAT_FLAC = 61868_u32
  WAVE_FORMAT_DEVELOPMENT = 65535_u32
  ACM_MPEG_LAYER1 = 1_u32
  ACM_MPEG_LAYER2 = 2_u32
  ACM_MPEG_LAYER3 = 4_u32
  ACM_MPEG_STEREO = 1_u32
  ACM_MPEG_JOINTSTEREO = 2_u32
  ACM_MPEG_DUALCHANNEL = 4_u32
  ACM_MPEG_SINGLECHANNEL = 8_u32
  ACM_MPEG_PRIVATEBIT = 1_u32
  ACM_MPEG_COPYRIGHT = 2_u32
  ACM_MPEG_ORIGINALHOME = 4_u32
  ACM_MPEG_PROTECTIONBIT = 8_u32
  ACM_MPEG_ID_MPEG1 = 16_u32
  MPEGLAYER3_WFX_EXTRA_BYTES = 12_u32
  MPEGLAYER3_ID_UNKNOWN = 0_u32
  MPEGLAYER3_ID_MPEG = 1_u32
  MPEGLAYER3_ID_CONSTANTFRAMESIZE = 2_u32
  MM_MSFT_ACM_WMAUDIO = 39_u32
  WMAUDIO_BITS_PER_SAMPLE = 16_u32
  WMAUDIO_MAX_CHANNELS = 2_u32
  MM_MSFT_ACM_MSAUDIO1 = 39_u32
  MSAUDIO1_BITS_PER_SAMPLE = 16_u32
  MSAUDIO1_MAX_CHANNELS = 2_u32
  MM_MSFT_ACM_WMAUDIO2 = 101_u32
  WMAUDIO2_BITS_PER_SAMPLE = 16_u32
  WMAUDIO2_MAX_CHANNELS = 2_u32
  WAVE_FILTER_UNKNOWN = 0_u32
  WAVE_FILTER_DEVELOPMENT = 65535_u32
  WAVE_FILTER_VOLUME = 1_u32
  WAVE_FILTER_ECHO = 2_u32
  JPEG_PROCESS_BASELINE = 0_u32
  AVIIF_CONTROLFRAME = 512_i32
  JIFMK_SOF0 = 65472_u32
  JIFMK_SOF1 = 65473_u32
  JIFMK_SOF2 = 65474_u32
  JIFMK_SOF3 = 65475_u32
  JIFMK_SOF5 = 65477_u32
  JIFMK_SOF6 = 65478_u32
  JIFMK_SOF7 = 65479_u32
  JIFMK_JPG = 65480_u32
  JIFMK_SOF9 = 65481_u32
  JIFMK_SOF10 = 65482_u32
  JIFMK_SOF11 = 65483_u32
  JIFMK_SOF13 = 65485_u32
  JIFMK_SOF14 = 65486_u32
  JIFMK_SOF15 = 65487_u32
  JIFMK_DHT = 65476_u32
  JIFMK_DAC = 65484_u32
  JIFMK_RST0 = 65488_u32
  JIFMK_RST1 = 65489_u32
  JIFMK_RST2 = 65490_u32
  JIFMK_RST3 = 65491_u32
  JIFMK_RST4 = 65492_u32
  JIFMK_RST5 = 65493_u32
  JIFMK_RST6 = 65494_u32
  JIFMK_RST7 = 65495_u32
  JIFMK_SOI = 65496_u32
  JIFMK_EOI = 65497_u32
  JIFMK_SOS = 65498_u32
  JIFMK_DQT = 65499_u32
  JIFMK_DNL = 65500_u32
  JIFMK_DRI = 65501_u32
  JIFMK_DHP = 65502_u32
  JIFMK_EXP = 65503_u32
  JIFMK_APP0 = 65504_u32
  JIFMK_APP1 = 65505_u32
  JIFMK_APP2 = 65506_u32
  JIFMK_APP3 = 65507_u32
  JIFMK_APP4 = 65508_u32
  JIFMK_APP5 = 65509_u32
  JIFMK_APP6 = 65510_u32
  JIFMK_APP7 = 65511_u32
  JIFMK_JPG0 = 65520_u32
  JIFMK_JPG1 = 65521_u32
  JIFMK_JPG2 = 65522_u32
  JIFMK_JPG3 = 65523_u32
  JIFMK_JPG4 = 65524_u32
  JIFMK_JPG5 = 65525_u32
  JIFMK_JPG6 = 65526_u32
  JIFMK_JPG7 = 65527_u32
  JIFMK_JPG8 = 65528_u32
  JIFMK_JPG9 = 65529_u32
  JIFMK_JPG10 = 65530_u32
  JIFMK_JPG11 = 65531_u32
  JIFMK_JPG12 = 65532_u32
  JIFMK_JPG13 = 65533_u32
  JIFMK_COM = 65534_u32
  JIFMK_TEM = 65281_u32
  JIFMK_RES = 65282_u32
  JIFMK_00 = 65280_u32
  JIFMK_FF = 65535_u32
  JPEG_Y = 1_u32
  JPEG_YCbCr = 2_u32
  JPEG_RGB = 3_u32
  MIXERCONTROL_CONTROLTYPE_SRS_MTS = 536936454_u32
  MIXERCONTROL_CONTROLTYPE_SRS_ONOFF = 536936455_u32
  MIXERCONTROL_CONTROLTYPE_SRS_SYNTHSELECT = 536936456_u32
  VP_COMMAND_GET = 1_u32
  VP_COMMAND_SET = 2_u32
  VP_FLAGS_TV_MODE = 1_u32
  VP_FLAGS_TV_STANDARD = 2_u32
  VP_FLAGS_FLICKER = 4_u32
  VP_FLAGS_OVERSCAN = 8_u32
  VP_FLAGS_MAX_UNSCALED = 16_u32
  VP_FLAGS_POSITION = 32_u32
  VP_FLAGS_BRIGHTNESS = 64_u32
  VP_FLAGS_CONTRAST = 128_u32
  VP_FLAGS_COPYPROTECT = 256_u32
  VP_MODE_WIN_GRAPHICS = 1_u32
  VP_MODE_TV_PLAYBACK = 2_u32
  VP_TV_STANDARD_NTSC_M = 1_u32
  VP_TV_STANDARD_NTSC_M_J = 2_u32
  VP_TV_STANDARD_PAL_B = 4_u32
  VP_TV_STANDARD_PAL_D = 8_u32
  VP_TV_STANDARD_PAL_H = 16_u32
  VP_TV_STANDARD_PAL_I = 32_u32
  VP_TV_STANDARD_PAL_M = 64_u32
  VP_TV_STANDARD_PAL_N = 128_u32
  VP_TV_STANDARD_SECAM_B = 256_u32
  VP_TV_STANDARD_SECAM_D = 512_u32
  VP_TV_STANDARD_SECAM_G = 1024_u32
  VP_TV_STANDARD_SECAM_H = 2048_u32
  VP_TV_STANDARD_SECAM_K = 4096_u32
  VP_TV_STANDARD_SECAM_K1 = 8192_u32
  VP_TV_STANDARD_SECAM_L = 16384_u32
  VP_TV_STANDARD_WIN_VGA = 32768_u32
  VP_TV_STANDARD_NTSC_433 = 65536_u32
  VP_TV_STANDARD_PAL_G = 131072_u32
  VP_TV_STANDARD_PAL_60 = 262144_u32
  VP_TV_STANDARD_SECAM_L1 = 524288_u32
  VP_CP_TYPE_APS_TRIGGER = 1_u32
  VP_CP_TYPE_MACROVISION = 2_u32
  VP_CP_CMD_ACTIVATE = 1_u32
  VP_CP_CMD_DEACTIVATE = 2_u32
  VP_CP_CMD_CHANGE = 4_u32
  ICVERSION = 260_u32
  BI_1632 = 842217009_u32
  ICERR_OK = 0_i32
  ICERR_DONTDRAW = 1_i32
  ICERR_NEWPALETTE = 2_i32
  ICERR_GOTOKEYFRAME = 3_i32
  ICERR_STOPDRAWING = 4_i32
  ICERR_UNSUPPORTED = -1_i32
  ICERR_BADFORMAT = -2_i32
  ICERR_MEMORY = -3_i32
  ICERR_INTERNAL = -4_i32
  ICERR_BADFLAGS = -5_i32
  ICERR_BADPARAM = -6_i32
  ICERR_BADSIZE = -7_i32
  ICERR_BADHANDLE = -8_i32
  ICERR_CANTUPDATE = -9_i32
  ICERR_ABORT = -10_i32
  ICERR_ERROR = -100_i32
  ICERR_BADBITDEPTH = -200_i32
  ICERR_BADIMAGESIZE = -201_i32
  ICERR_CUSTOM = -400_i32
  ICMODE_COMPRESS = 1_u32
  ICMODE_DECOMPRESS = 2_u32
  ICMODE_FASTDECOMPRESS = 3_u32
  ICMODE_QUERY = 4_u32
  ICMODE_FASTCOMPRESS = 5_u32
  ICMODE_DRAW = 8_u32
  ICMODE_INTERNALF_FUNCTION32 = 32768_u32
  ICMODE_INTERNALF_MASK = 32768_u32
  AVIIF_TWOCC = 2_i32
  ICQUALITY_LOW = 0_u32
  ICQUALITY_HIGH = 10000_u32
  ICQUALITY_DEFAULT = -1_i32
  ICM_USER = 16384_u32
  ICM_RESERVED_LOW = 20480_u32
  ICM_RESERVED_HIGH = 24576_u32
  ICM_GETSTATE = 20480_u32
  ICM_SETSTATE = 20481_u32
  ICM_GETINFO = 20482_u32
  ICM_CONFIGURE = 20490_u32
  ICM_ABOUT = 20491_u32
  ICM_GETERRORTEXT = 20492_u32
  ICM_GETFORMATNAME = 20500_u32
  ICM_ENUMFORMATS = 20501_u32
  ICM_GETDEFAULTQUALITY = 20510_u32
  ICM_GETQUALITY = 20511_u32
  ICM_SETQUALITY = 20512_u32
  ICM_SET = 20520_u32
  ICM_GET = 20521_u32
  ICM_COMPRESS_GET_FORMAT = 16388_u32
  ICM_COMPRESS_GET_SIZE = 16389_u32
  ICM_COMPRESS_QUERY = 16390_u32
  ICM_COMPRESS_BEGIN = 16391_u32
  ICM_COMPRESS = 16392_u32
  ICM_COMPRESS_END = 16393_u32
  ICM_DECOMPRESS_GET_FORMAT = 16394_u32
  ICM_DECOMPRESS_QUERY = 16395_u32
  ICM_DECOMPRESS_BEGIN = 16396_u32
  ICM_DECOMPRESS = 16397_u32
  ICM_DECOMPRESS_END = 16398_u32
  ICM_DECOMPRESS_SET_PALETTE = 16413_u32
  ICM_DECOMPRESS_GET_PALETTE = 16414_u32
  ICM_DRAW_QUERY = 16415_u32
  ICM_DRAW_BEGIN = 16399_u32
  ICM_DRAW_GET_PALETTE = 16400_u32
  ICM_DRAW_UPDATE = 16401_u32
  ICM_DRAW_START = 16402_u32
  ICM_DRAW_STOP = 16403_u32
  ICM_DRAW_BITS = 16404_u32
  ICM_DRAW_END = 16405_u32
  ICM_DRAW_GETTIME = 16416_u32
  ICM_DRAW = 16417_u32
  ICM_DRAW_WINDOW = 16418_u32
  ICM_DRAW_SETTIME = 16419_u32
  ICM_DRAW_REALIZE = 16420_u32
  ICM_DRAW_FLUSH = 16421_u32
  ICM_DRAW_RENDERBUFFER = 16422_u32
  ICM_DRAW_START_PLAY = 16423_u32
  ICM_DRAW_STOP_PLAY = 16424_u32
  ICM_DRAW_SUGGESTFORMAT = 16434_u32
  ICM_DRAW_CHANGEPALETTE = 16435_u32
  ICM_DRAW_IDLE = 16436_u32
  ICM_GETBUFFERSWANTED = 16425_u32
  ICM_GETDEFAULTKEYFRAMERATE = 16426_u32
  ICM_DECOMPRESSEX_BEGIN = 16444_u32
  ICM_DECOMPRESSEX_QUERY = 16445_u32
  ICM_DECOMPRESSEX = 16446_u32
  ICM_DECOMPRESSEX_END = 16447_u32
  ICM_COMPRESS_FRAMES_INFO = 16454_u32
  ICM_COMPRESS_FRAMES = 16455_u32
  ICM_SET_STATUS_PROC = 16456_u32
  VIDCF_QUALITY = 1_u32
  VIDCF_CRUNCH = 2_u32
  VIDCF_TEMPORAL = 4_u32
  VIDCF_COMPRESSFRAMES = 8_u32
  VIDCF_DRAW = 16_u32
  VIDCF_FASTTEMPORALC = 32_u32
  VIDCF_FASTTEMPORALD = 128_u32
  ICCOMPRESS_KEYFRAME = 1_i32
  ICCOMPRESSFRAMES_PADDING = 1_u32
  ICSTATUS_START = 0_u32
  ICSTATUS_STATUS = 1_u32
  ICSTATUS_END = 2_u32
  ICSTATUS_ERROR = 3_u32
  ICSTATUS_YIELD = 4_u32
  ICDECOMPRESS_HURRYUP = -2147483648_i32
  ICDECOMPRESS_UPDATE = 1073741824_i32
  ICDECOMPRESS_PREROLL = 536870912_i32
  ICDECOMPRESS_NULLFRAME = 268435456_i32
  ICDECOMPRESS_NOTKEYFRAME = 134217728_i32
  ICDRAW_QUERY = 1_i32
  ICDRAW_FULLSCREEN = 2_i32
  ICDRAW_HDC = 4_i32
  ICDRAW_ANIMATE = 8_i32
  ICDRAW_CONTINUE = 16_i32
  ICDRAW_MEMORYDC = 32_i32
  ICDRAW_UPDATING = 64_i32
  ICDRAW_RENDER = 128_i32
  ICDRAW_BUFFER = 256_i32
  ICDRAW_HURRYUP = -2147483648_i32
  ICDRAW_UPDATE = 1073741824_i32
  ICDRAW_PREROLL = 536870912_i32
  ICDRAW_NULLFRAME = 268435456_i32
  ICDRAW_NOTKEYFRAME = 134217728_i32
  ICINSTALL_UNICODE = 32768_u32
  ICINSTALL_FUNCTION = 1_u32
  ICINSTALL_DRIVER = 2_u32
  ICINSTALL_HDRV = 4_u32
  ICINSTALL_DRIVERW = 32770_u32
  ICMF_CONFIGURE_QUERY = 1_u32
  ICMF_ABOUT_QUERY = 1_u32
  ICMF_COMPVARS_VALID = 1_u32
  ICMF_CHOOSE_KEYFRAME = 1_u32
  ICMF_CHOOSE_DATARATE = 2_u32
  ICMF_CHOOSE_PREVIEW = 4_u32
  ICMF_CHOOSE_ALLCOMPRESSORS = 8_u32
  DDF_0001 = 1_u32
  DDF_UPDATE = 2_u32
  DDF_SAME_HDC = 4_u32
  DDF_SAME_DRAW = 8_u32
  DDF_DONTDRAW = 16_u32
  DDF_ANIMATE = 32_u32
  DDF_BUFFER = 64_u32
  DDF_JUSTDRAWIT = 128_u32
  DDF_FULLSCREEN = 256_u32
  DDF_BACKGROUNDPAL = 512_u32
  DDF_NOTKEYFRAME = 1024_u32
  DDF_HURRYUP = 2048_u32
  DDF_HALFTONE = 4096_u32
  DDF_2000 = 8192_u32
  DDF_PREROLL = 16_u32
  DDF_SAME_DIB = 8_u32
  DDF_SAME_SIZE = 8_u32
  PD_CAN_DRAW_DIB = 1_u32
  PD_CAN_STRETCHDIB = 2_u32
  PD_STRETCHDIB_1_1_OK = 4_u32
  PD_STRETCHDIB_1_2_OK = 8_u32
  PD_STRETCHDIB_1_N_OK = 16_u32
  AVIGETFRAMEF_BESTDISPLAYFMT = 1_u32
  AVISTREAMINFO_DISABLED = 1_u32
  AVISTREAMINFO_FORMATCHANGES = 65536_u32
  AVIFILEINFO_HASINDEX = 16_u32
  AVIFILEINFO_MUSTUSEINDEX = 32_u32
  AVIFILEINFO_ISINTERLEAVED = 256_u32
  AVIFILEINFO_WASCAPTUREFILE = 65536_u32
  AVIFILEINFO_COPYRIGHTED = 131072_u32
  AVIFILECAPS_CANREAD = 1_u32
  AVIFILECAPS_CANWRITE = 2_u32
  AVIFILECAPS_ALLKEYFRAMES = 16_u32
  AVIFILECAPS_NOCOMPRESSION = 32_u32
  AVICOMPRESSF_INTERLEAVE = 1_u32
  AVICOMPRESSF_DATARATE = 2_u32
  AVICOMPRESSF_KEYFRAMES = 4_u32
  AVICOMPRESSF_VALID = 8_u32
  CLSID_AVISimpleUnMarshal = "00020009-0000-0000-c000-000000000046"
  CLSID_AVIFile = "00020000-0000-0000-c000-000000000046"
  AVIFILEHANDLER_CANREAD = 1_u32
  AVIFILEHANDLER_CANWRITE = 2_u32
  AVIFILEHANDLER_CANACCEPTNONRGB = 4_u32
  AVISTREAMREAD_CONVENIENT = -1_i32
  FIND_DIR = 15_i32
  FIND_NEXT = 1_i32
  FIND_PREV = 4_i32
  FIND_FROM_START = 8_i32
  FIND_TYPE = 240_i32
  FIND_KEY = 16_i32
  FIND_ANY = 32_i32
  FIND_FORMAT = 64_i32
  FIND_RET = 61440_i32
  FIND_POS = 0_i32
  FIND_LENGTH = 4096_i32
  FIND_OFFSET = 8192_i32
  FIND_SIZE = 12288_i32
  FIND_INDEX = 16384_i32
  SEARCH_NEAREST = 4_i32
  SEARCH_BACKWARD = 4_i32
  SEARCH_FORWARD = 1_i32
  SEARCH_KEY = 16_i32
  SEARCH_ANY = 32_i32
  AVIERR_OK = 0_i32
  MCIWND_WINDOW_CLASS = "MCIWndClass"
  MCIWNDOPENF_NEW = 1_u32
  MCIWNDF_NOAUTOSIZEWINDOW = 1_u32
  MCIWNDF_NOPLAYBAR = 2_u32
  MCIWNDF_NOAUTOSIZEMOVIE = 4_u32
  MCIWNDF_NOMENU = 8_u32
  MCIWNDF_SHOWNAME = 16_u32
  MCIWNDF_SHOWPOS = 32_u32
  MCIWNDF_SHOWMODE = 64_u32
  MCIWNDF_SHOWALL = 112_u32
  MCIWNDF_NOTIFYMODE = 256_u32
  MCIWNDF_NOTIFYPOS = 512_u32
  MCIWNDF_NOTIFYSIZE = 1024_u32
  MCIWNDF_NOTIFYERROR = 4096_u32
  MCIWNDF_NOTIFYALL = 7936_u32
  MCIWNDF_NOTIFYANSI = 128_u32
  MCIWNDF_NOTIFYMEDIAA = 2176_u32
  MCIWNDF_NOTIFYMEDIAW = 2048_u32
  MCIWNDF_NOTIFYMEDIA = 2048_u32
  MCIWNDF_RECORD = 8192_u32
  MCIWNDF_NOERRORDLG = 16384_u32
  MCIWNDF_NOOPEN = 32768_u32
  MCIWNDM_GETDEVICEID = 1124_u32
  MCIWNDM_GETSTART = 1127_u32
  MCIWNDM_GETLENGTH = 1128_u32
  MCIWNDM_GETEND = 1129_u32
  MCIWNDM_EJECT = 1131_u32
  MCIWNDM_SETZOOM = 1132_u32
  MCIWNDM_GETZOOM = 1133_u32
  MCIWNDM_SETVOLUME = 1134_u32
  MCIWNDM_GETVOLUME = 1135_u32
  MCIWNDM_SETSPEED = 1136_u32
  MCIWNDM_GETSPEED = 1137_u32
  MCIWNDM_SETREPEAT = 1138_u32
  MCIWNDM_GETREPEAT = 1139_u32
  MCIWNDM_REALIZE = 1142_u32
  MCIWNDM_VALIDATEMEDIA = 1145_u32
  MCIWNDM_PLAYFROM = 1146_u32
  MCIWNDM_PLAYTO = 1147_u32
  MCIWNDM_GETPALETTE = 1150_u32
  MCIWNDM_SETPALETTE = 1151_u32
  MCIWNDM_SETTIMERS = 1153_u32
  MCIWNDM_SETACTIVETIMER = 1154_u32
  MCIWNDM_SETINACTIVETIMER = 1155_u32
  MCIWNDM_GETACTIVETIMER = 1156_u32
  MCIWNDM_GETINACTIVETIMER = 1157_u32
  MCIWNDM_CHANGESTYLES = 1159_u32
  MCIWNDM_GETSTYLES = 1160_u32
  MCIWNDM_GETALIAS = 1161_u32
  MCIWNDM_PLAYREVERSE = 1163_u32
  MCIWNDM_GET_SOURCE = 1164_u32
  MCIWNDM_PUT_SOURCE = 1165_u32
  MCIWNDM_GET_DEST = 1166_u32
  MCIWNDM_PUT_DEST = 1167_u32
  MCIWNDM_CAN_PLAY = 1168_u32
  MCIWNDM_CAN_WINDOW = 1169_u32
  MCIWNDM_CAN_RECORD = 1170_u32
  MCIWNDM_CAN_SAVE = 1171_u32
  MCIWNDM_CAN_EJECT = 1172_u32
  MCIWNDM_CAN_CONFIG = 1173_u32
  MCIWNDM_PALETTEKICK = 1174_u32
  MCIWNDM_OPENINTERFACE = 1175_u32
  MCIWNDM_SETOWNER = 1176_u32
  MCIWNDM_SENDSTRINGA = 1125_u32
  MCIWNDM_GETPOSITIONA = 1126_u32
  MCIWNDM_GETMODEA = 1130_u32
  MCIWNDM_SETTIMEFORMATA = 1143_u32
  MCIWNDM_GETTIMEFORMATA = 1144_u32
  MCIWNDM_GETFILENAMEA = 1148_u32
  MCIWNDM_GETDEVICEA = 1149_u32
  MCIWNDM_GETERRORA = 1152_u32
  MCIWNDM_NEWA = 1158_u32
  MCIWNDM_RETURNSTRINGA = 1162_u32
  MCIWNDM_OPENA = 1177_u32
  MCIWNDM_SENDSTRINGW = 1225_u32
  MCIWNDM_GETPOSITIONW = 1226_u32
  MCIWNDM_GETMODEW = 1230_u32
  MCIWNDM_SETTIMEFORMATW = 1243_u32
  MCIWNDM_GETTIMEFORMATW = 1244_u32
  MCIWNDM_GETFILENAMEW = 1248_u32
  MCIWNDM_GETDEVICEW = 1249_u32
  MCIWNDM_GETERRORW = 1252_u32
  MCIWNDM_NEWW = 1258_u32
  MCIWNDM_RETURNSTRINGW = 1262_u32
  MCIWNDM_OPENW = 1276_u32
  MCIWNDM_SENDSTRING = 1225_u32
  MCIWNDM_GETPOSITION = 1226_u32
  MCIWNDM_GETMODE = 1230_u32
  MCIWNDM_SETTIMEFORMAT = 1243_u32
  MCIWNDM_GETTIMEFORMAT = 1244_u32
  MCIWNDM_GETFILENAME = 1248_u32
  MCIWNDM_GETDEVICE = 1249_u32
  MCIWNDM_GETERROR = 1252_u32
  MCIWNDM_NEW = 1258_u32
  MCIWNDM_RETURNSTRING = 1262_u32
  MCIWNDM_OPEN = 1276_u32
  MCIWNDM_NOTIFYMODE = 1224_u32
  MCIWNDM_NOTIFYPOS = 1225_u32
  MCIWNDM_NOTIFYSIZE = 1226_u32
  MCIWNDM_NOTIFYMEDIA = 1227_u32
  MCIWNDM_NOTIFYERROR = 1229_u32
  MCIWND_START = -1_i32
  MCIWND_END = -2_i32
  MCI_OPEN = 2051_u32
  MCI_CLOSE = 2052_u32
  MCI_PLAY = 2054_u32
  MCI_SEEK = 2055_u32
  MCI_STOP = 2056_u32
  MCI_PAUSE = 2057_u32
  MCI_STEP = 2062_u32
  MCI_RECORD = 2063_u32
  MCI_SAVE = 2067_u32
  MCI_CUT = 2129_u32
  MCI_COPY = 2130_u32
  MCI_PASTE = 2131_u32
  MCI_RESUME = 2133_u32
  MCI_DELETE = 2134_u32
  MCI_MODE_NOT_READY = 524_u32
  MCI_MODE_STOP = 525_u32
  MCI_MODE_PLAY = 526_u32
  MCI_MODE_RECORD = 527_u32
  MCI_MODE_SEEK = 528_u32
  MCI_MODE_PAUSE = 529_u32
  MCI_MODE_OPEN = 530_u32
  DV_ERR_OK = 0_u32
  DV_ERR_BASE = 1_u32
  DV_ERR_NONSPECIFIC = 1_u32
  DV_ERR_BADFORMAT = 2_u32
  DV_ERR_STILLPLAYING = 3_u32
  DV_ERR_UNPREPARED = 4_u32
  DV_ERR_SYNC = 5_u32
  DV_ERR_TOOMANYCHANNELS = 6_u32
  DV_ERR_NOTDETECTED = 7_u32
  DV_ERR_BADINSTALL = 8_u32
  DV_ERR_CREATEPALETTE = 9_u32
  DV_ERR_SIZEFIELD = 10_u32
  DV_ERR_PARAM1 = 11_u32
  DV_ERR_PARAM2 = 12_u32
  DV_ERR_CONFIG1 = 13_u32
  DV_ERR_CONFIG2 = 14_u32
  DV_ERR_FLAGS = 15_u32
  DV_ERR_13 = 16_u32
  DV_ERR_NOTSUPPORTED = 17_u32
  DV_ERR_NOMEM = 18_u32
  DV_ERR_ALLOCATED = 19_u32
  DV_ERR_BADDEVICEID = 20_u32
  DV_ERR_INVALHANDLE = 21_u32
  DV_ERR_BADERRNUM = 22_u32
  DV_ERR_NO_BUFFERS = 23_u32
  DV_ERR_MEM_CONFLICT = 24_u32
  DV_ERR_IO_CONFLICT = 25_u32
  DV_ERR_DMA_CONFLICT = 26_u32
  DV_ERR_INT_CONFLICT = 27_u32
  DV_ERR_PROTECT_ONLY = 28_u32
  DV_ERR_LASTERROR = 28_u32
  DV_ERR_USER_MSG = 1001_u32
  DV_VM_OPEN = 976_u32
  DV_VM_CLOSE = 977_u32
  DV_VM_DATA = 978_u32
  DV_VM_ERROR = 979_u32
  VHDR_DONE = 1_u32
  VHDR_PREPARED = 2_u32
  VHDR_INQUEUE = 4_u32
  VHDR_KEYFRAME = 8_u32
  VHDR_VALID = 15_u32
  VCAPS_OVERLAY = 1_u32
  VCAPS_SRC_CAN_CLIP = 2_u32
  VCAPS_DST_CAN_CLIP = 4_u32
  VCAPS_CAN_SCALE = 8_u32
  VIDEO_EXTERNALIN = 1_u32
  VIDEO_EXTERNALOUT = 2_u32
  VIDEO_IN = 4_u32
  VIDEO_OUT = 8_u32
  VIDEO_DLG_QUERY = 16_u32
  VIDEO_CONFIGURE_QUERY = 32768_u32
  VIDEO_CONFIGURE_SET = 4096_u32
  VIDEO_CONFIGURE_GET = 8192_u32
  VIDEO_CONFIGURE_QUERYSIZE = 1_u32
  VIDEO_CONFIGURE_CURRENT = 16_u32
  VIDEO_CONFIGURE_NOMINAL = 32_u32
  VIDEO_CONFIGURE_MIN = 64_u32
  VIDEO_CONFIGURE_MAX = 128_u32
  DVM_USER = 16384_u32
  DVM_CONFIGURE_START = 4096_u32
  DVM_CONFIGURE_END = 8191_u32
  DVM_PALETTE = 4097_u32
  DVM_FORMAT = 4098_u32
  DVM_PALETTERGB555 = 4099_u32
  DVM_SRC_RECT = 4100_u32
  DVM_DST_RECT = 4101_u32
  WM_CAP_UNICODE_START = 1124_u32
  WM_CAP_GET_CAPSTREAMPTR = 1025_u32
  WM_CAP_SET_CALLBACK_ERRORW = 1126_u32
  WM_CAP_SET_CALLBACK_STATUSW = 1127_u32
  WM_CAP_SET_CALLBACK_ERRORA = 1026_u32
  WM_CAP_SET_CALLBACK_STATUSA = 1027_u32
  WM_CAP_SET_CALLBACK_ERROR = 1126_u32
  WM_CAP_SET_CALLBACK_STATUS = 1127_u32
  WM_CAP_SET_CALLBACK_YIELD = 1028_u32
  WM_CAP_SET_CALLBACK_FRAME = 1029_u32
  WM_CAP_SET_CALLBACK_VIDEOSTREAM = 1030_u32
  WM_CAP_SET_CALLBACK_WAVESTREAM = 1031_u32
  WM_CAP_GET_USER_DATA = 1032_u32
  WM_CAP_SET_USER_DATA = 1033_u32
  WM_CAP_DRIVER_CONNECT = 1034_u32
  WM_CAP_DRIVER_DISCONNECT = 1035_u32
  WM_CAP_DRIVER_GET_NAMEA = 1036_u32
  WM_CAP_DRIVER_GET_VERSIONA = 1037_u32
  WM_CAP_DRIVER_GET_NAMEW = 1136_u32
  WM_CAP_DRIVER_GET_VERSIONW = 1137_u32
  WM_CAP_DRIVER_GET_NAME = 1136_u32
  WM_CAP_DRIVER_GET_VERSION = 1137_u32
  WM_CAP_DRIVER_GET_CAPS = 1038_u32
  WM_CAP_FILE_SET_CAPTURE_FILEA = 1044_u32
  WM_CAP_FILE_GET_CAPTURE_FILEA = 1045_u32
  WM_CAP_FILE_SAVEASA = 1047_u32
  WM_CAP_FILE_SAVEDIBA = 1049_u32
  WM_CAP_FILE_SET_CAPTURE_FILEW = 1144_u32
  WM_CAP_FILE_GET_CAPTURE_FILEW = 1145_u32
  WM_CAP_FILE_SAVEASW = 1147_u32
  WM_CAP_FILE_SAVEDIBW = 1149_u32
  WM_CAP_FILE_SET_CAPTURE_FILE = 1144_u32
  WM_CAP_FILE_GET_CAPTURE_FILE = 1145_u32
  WM_CAP_FILE_SAVEAS = 1147_u32
  WM_CAP_FILE_SAVEDIB = 1149_u32
  WM_CAP_FILE_ALLOCATE = 1046_u32
  WM_CAP_FILE_SET_INFOCHUNK = 1048_u32
  WM_CAP_EDIT_COPY = 1054_u32
  WM_CAP_SET_AUDIOFORMAT = 1059_u32
  WM_CAP_GET_AUDIOFORMAT = 1060_u32
  WM_CAP_DLG_VIDEOFORMAT = 1065_u32
  WM_CAP_DLG_VIDEOSOURCE = 1066_u32
  WM_CAP_DLG_VIDEODISPLAY = 1067_u32
  WM_CAP_GET_VIDEOFORMAT = 1068_u32
  WM_CAP_SET_VIDEOFORMAT = 1069_u32
  WM_CAP_DLG_VIDEOCOMPRESSION = 1070_u32
  WM_CAP_SET_PREVIEW = 1074_u32
  WM_CAP_SET_OVERLAY = 1075_u32
  WM_CAP_SET_PREVIEWRATE = 1076_u32
  WM_CAP_SET_SCALE = 1077_u32
  WM_CAP_GET_STATUS = 1078_u32
  WM_CAP_SET_SCROLL = 1079_u32
  WM_CAP_GRAB_FRAME = 1084_u32
  WM_CAP_GRAB_FRAME_NOSTOP = 1085_u32
  WM_CAP_SEQUENCE = 1086_u32
  WM_CAP_SEQUENCE_NOFILE = 1087_u32
  WM_CAP_SET_SEQUENCE_SETUP = 1088_u32
  WM_CAP_GET_SEQUENCE_SETUP = 1089_u32
  WM_CAP_SET_MCI_DEVICEA = 1090_u32
  WM_CAP_GET_MCI_DEVICEA = 1091_u32
  WM_CAP_SET_MCI_DEVICEW = 1190_u32
  WM_CAP_GET_MCI_DEVICEW = 1191_u32
  WM_CAP_SET_MCI_DEVICE = 1190_u32
  WM_CAP_GET_MCI_DEVICE = 1191_u32
  WM_CAP_STOP = 1092_u32
  WM_CAP_ABORT = 1093_u32
  WM_CAP_SINGLE_FRAME_OPEN = 1094_u32
  WM_CAP_SINGLE_FRAME_CLOSE = 1095_u32
  WM_CAP_SINGLE_FRAME = 1096_u32
  WM_CAP_PAL_OPENA = 1104_u32
  WM_CAP_PAL_SAVEA = 1105_u32
  WM_CAP_PAL_OPENW = 1204_u32
  WM_CAP_PAL_SAVEW = 1205_u32
  WM_CAP_PAL_OPEN = 1204_u32
  WM_CAP_PAL_SAVE = 1205_u32
  WM_CAP_PAL_PASTE = 1106_u32
  WM_CAP_PAL_AUTOCREATE = 1107_u32
  WM_CAP_PAL_MANUALCREATE = 1108_u32
  WM_CAP_SET_CALLBACK_CAPCONTROL = 1109_u32
  WM_CAP_UNICODE_END = 1205_u32
  WM_CAP_END = 1205_u32
  AVSTREAMMASTER_AUDIO = 0_u32
  AVSTREAMMASTER_NONE = 1_u32
  CONTROLCALLBACK_PREROLL = 1_u32
  CONTROLCALLBACK_CAPTURING = 2_u32
  IDS_CAP_BEGIN = 300_u32
  IDS_CAP_END = 301_u32
  IDS_CAP_INFO = 401_u32
  IDS_CAP_OUTOFMEM = 402_u32
  IDS_CAP_FILEEXISTS = 403_u32
  IDS_CAP_ERRORPALOPEN = 404_u32
  IDS_CAP_ERRORPALSAVE = 405_u32
  IDS_CAP_ERRORDIBSAVE = 406_u32
  IDS_CAP_DEFAVIEXT = 407_u32
  IDS_CAP_DEFPALEXT = 408_u32
  IDS_CAP_CANTOPEN = 409_u32
  IDS_CAP_SEQ_MSGSTART = 410_u32
  IDS_CAP_SEQ_MSGSTOP = 411_u32
  IDS_CAP_VIDEDITERR = 412_u32
  IDS_CAP_READONLYFILE = 413_u32
  IDS_CAP_WRITEERROR = 414_u32
  IDS_CAP_NODISKSPACE = 415_u32
  IDS_CAP_SETFILESIZE = 416_u32
  IDS_CAP_SAVEASPERCENT = 417_u32
  IDS_CAP_DRIVER_ERROR = 418_u32
  IDS_CAP_WAVE_OPEN_ERROR = 419_u32
  IDS_CAP_WAVE_ALLOC_ERROR = 420_u32
  IDS_CAP_WAVE_PREPARE_ERROR = 421_u32
  IDS_CAP_WAVE_ADD_ERROR = 422_u32
  IDS_CAP_WAVE_SIZE_ERROR = 423_u32
  IDS_CAP_VIDEO_OPEN_ERROR = 424_u32
  IDS_CAP_VIDEO_ALLOC_ERROR = 425_u32
  IDS_CAP_VIDEO_PREPARE_ERROR = 426_u32
  IDS_CAP_VIDEO_ADD_ERROR = 427_u32
  IDS_CAP_VIDEO_SIZE_ERROR = 428_u32
  IDS_CAP_FILE_OPEN_ERROR = 429_u32
  IDS_CAP_FILE_WRITE_ERROR = 430_u32
  IDS_CAP_RECORDING_ERROR = 431_u32
  IDS_CAP_RECORDING_ERROR2 = 432_u32
  IDS_CAP_AVI_INIT_ERROR = 433_u32
  IDS_CAP_NO_FRAME_CAP_ERROR = 434_u32
  IDS_CAP_NO_PALETTE_WARN = 435_u32
  IDS_CAP_MCI_CONTROL_ERROR = 436_u32
  IDS_CAP_MCI_CANT_STEP_ERROR = 437_u32
  IDS_CAP_NO_AUDIO_CAP_ERROR = 438_u32
  IDS_CAP_AVI_DRAWDIB_ERROR = 439_u32
  IDS_CAP_COMPRESSOR_ERROR = 440_u32
  IDS_CAP_AUDIO_DROP_ERROR = 441_u32
  IDS_CAP_AUDIO_DROP_COMPERROR = 442_u32
  IDS_CAP_STAT_LIVE_MODE = 500_u32
  IDS_CAP_STAT_OVERLAY_MODE = 501_u32
  IDS_CAP_STAT_CAP_INIT = 502_u32
  IDS_CAP_STAT_CAP_FINI = 503_u32
  IDS_CAP_STAT_PALETTE_BUILD = 504_u32
  IDS_CAP_STAT_OPTPAL_BUILD = 505_u32
  IDS_CAP_STAT_I_FRAMES = 506_u32
  IDS_CAP_STAT_L_FRAMES = 507_u32
  IDS_CAP_STAT_CAP_L_FRAMES = 508_u32
  IDS_CAP_STAT_CAP_AUDIO = 509_u32
  IDS_CAP_STAT_VIDEOCURRENT = 510_u32
  IDS_CAP_STAT_VIDEOAUDIO = 511_u32
  IDS_CAP_STAT_VIDEOONLY = 512_u32
  IDS_CAP_STAT_FRAMESDROPPED = 513_u32
  JOYERR_NOERROR = 0_u32
  JOYERR_PARMS = 165_u32
  JOYERR_NOCANDO = 166_u32
  JOYERR_UNPLUGGED = 167_u32
  JOY_BUTTON1 = 1_u32
  JOY_BUTTON2 = 2_u32
  JOY_BUTTON3 = 4_u32
  JOY_BUTTON4 = 8_u32
  JOY_BUTTON1CHG = 256_u32
  JOY_BUTTON2CHG = 512_u32
  JOY_BUTTON3CHG = 1024_u32
  JOY_BUTTON4CHG = 2048_u32
  JOY_BUTTON5 = 16_i32
  JOY_BUTTON6 = 32_i32
  JOY_BUTTON7 = 64_i32
  JOY_BUTTON8 = 128_i32
  JOY_BUTTON9 = 256_i32
  JOY_BUTTON10 = 512_i32
  JOY_BUTTON11 = 1024_i32
  JOY_BUTTON12 = 2048_i32
  JOY_BUTTON13 = 4096_i32
  JOY_BUTTON14 = 8192_i32
  JOY_BUTTON15 = 16384_i32
  JOY_BUTTON16 = 32768_i32
  JOY_BUTTON17 = 65536_i32
  JOY_BUTTON18 = 131072_i32
  JOY_BUTTON19 = 262144_i32
  JOY_BUTTON20 = 524288_i32
  JOY_BUTTON21 = 1048576_i32
  JOY_BUTTON22 = 2097152_i32
  JOY_BUTTON23 = 4194304_i32
  JOY_BUTTON24 = 8388608_i32
  JOY_BUTTON25 = 16777216_i32
  JOY_BUTTON26 = 33554432_i32
  JOY_BUTTON27 = 67108864_i32
  JOY_BUTTON28 = 134217728_i32
  JOY_BUTTON29 = 268435456_i32
  JOY_BUTTON30 = 536870912_i32
  JOY_BUTTON31 = 1073741824_i32
  JOY_BUTTON32 = -2147483648_i32
  JOY_POVFORWARD = 0_u32
  JOY_POVRIGHT = 9000_u32
  JOY_POVBACKWARD = 18000_u32
  JOY_POVLEFT = 27000_u32
  JOY_RETURNX = 1_i32
  JOY_RETURNY = 2_i32
  JOY_RETURNZ = 4_i32
  JOY_RETURNR = 8_i32
  JOY_RETURNU = 16_i32
  JOY_RETURNV = 32_i32
  JOY_RETURNPOV = 64_i32
  JOY_RETURNBUTTONS = 128_i32
  JOY_RETURNRAWDATA = 256_i32
  JOY_RETURNPOVCTS = 512_i32
  JOY_RETURNCENTERED = 1024_i32
  JOY_USEDEADZONE = 2048_i32
  JOY_CAL_READALWAYS = 65536_i32
  JOY_CAL_READXYONLY = 131072_i32
  JOY_CAL_READ3 = 262144_i32
  JOY_CAL_READ4 = 524288_i32
  JOY_CAL_READXONLY = 1048576_i32
  JOY_CAL_READYONLY = 2097152_i32
  JOY_CAL_READ5 = 4194304_i32
  JOY_CAL_READ6 = 8388608_i32
  JOY_CAL_READZONLY = 16777216_i32
  JOY_CAL_READRONLY = 33554432_i32
  JOY_CAL_READUONLY = 67108864_i32
  JOY_CAL_READVONLY = 134217728_i32
  JOYSTICKID1 = 0_u32
  JOYSTICKID2 = 1_u32
  JOYCAPS_HASZ = 1_u32
  JOYCAPS_HASR = 2_u32
  JOYCAPS_HASU = 4_u32
  JOYCAPS_HASV = 8_u32
  JOYCAPS_HASPOV = 16_u32
  JOYCAPS_POV4DIR = 32_u32
  JOYCAPS_POVCTS = 64_u32
  DRV_LOAD = 1_u32
  DRV_ENABLE = 2_u32
  DRV_OPEN = 3_u32
  DRV_CLOSE = 4_u32
  DRV_DISABLE = 5_u32
  DRV_FREE = 6_u32
  DRV_CONFIGURE = 7_u32
  DRV_QUERYCONFIGURE = 8_u32
  DRV_INSTALL = 9_u32
  DRV_REMOVE = 10_u32
  DRV_RESERVED = 2048_u32
  DRV_USER = 16384_u32
  DRIVERS_SECTION = "DRIVERS32"
  MCI_SECTION = "MCI32"
  DCB_NOSWITCH = 8_u32
  DCB_TYPEMASK = 7_u32
  DCB_NULL = 0_u32
  DCB_WINDOW = 1_u32
  DCB_TASK = 2_u32
  DCB_FUNCTION = 3_u32
  DCB_EVENT = 5_u32
  DRVM_INIT = 100_u32
  DRVM_EXIT = 101_u32
  DRVM_DISABLE = 102_u32
  DRVM_ENABLE = 103_u32
  DRVM_INIT_EX = 104_u32
  DRVM_USER = 16384_u32
  DRVM_MAPPER_RECONFIGURE = 8193_u32
  DRVM_MAPPER_PREFERRED_GET = 8213_u32
  DRVM_MAPPER_CONSOLEVOICECOM_GET = 8215_u32
  DRV_QUERYDEVNODE = 2050_u32
  DRV_QUERYMAPPABLE = 2053_u32
  DRV_QUERYMODULE = 2057_u32
  DRV_PNPINSTALL = 2059_u32
  DRV_QUERYDEVICEINTERFACE = 2060_u32
  DRV_QUERYDEVICEINTERFACESIZE = 2061_u32
  DRV_QUERYSTRINGID = 2062_u32
  DRV_QUERYSTRINGIDSIZE = 2063_u32
  DRV_QUERYIDFROMSTRINGID = 2064_u32
  DRV_QUERYFUNCTIONINSTANCEID = 2065_u32
  DRV_QUERYFUNCTIONINSTANCEIDSIZE = 2066_u32
  DRVM_MAPPER_PREFERRED_FLAGS_PREFERREDONLY = 1_u32
  DRVM_IOCTL = 256_u32
  DRVM_ADD_THRU = 257_u32
  DRVM_REMOVE_THRU = 258_u32
  DRVM_IOCTL_LAST = 261_u32
  DRVM_IOCTL_CMD_USER = 0_i32
  DRVM_IOCTL_CMD_SYSTEM = -2147483648_i32
  VADMAD_Device_ID = 1092_u32
  WODM_INIT = 100_u32
  WIDM_INIT = 100_u32
  WODM_INIT_EX = 104_u32
  WIDM_INIT_EX = 104_u32
  WODM_GETNUMDEVS = 3_u32
  WODM_GETDEVCAPS = 4_u32
  WODM_OPEN = 5_u32
  WODM_CLOSE = 6_u32
  WODM_PREPARE = 7_u32
  WODM_UNPREPARE = 8_u32
  WODM_WRITE = 9_u32
  WODM_PAUSE = 10_u32
  WODM_RESTART = 11_u32
  WODM_RESET = 12_u32
  WODM_GETPOS = 13_u32
  WODM_GETPITCH = 14_u32
  WODM_SETPITCH = 15_u32
  WODM_GETVOLUME = 16_u32
  WODM_SETVOLUME = 17_u32
  WODM_GETPLAYBACKRATE = 18_u32
  WODM_SETPLAYBACKRATE = 19_u32
  WODM_BREAKLOOP = 20_u32
  WODM_PREFERRED = 21_u32
  WODM_BUSY = 21_u32
  WIDM_GETNUMDEVS = 50_u32
  WIDM_GETDEVCAPS = 51_u32
  WIDM_OPEN = 52_u32
  WIDM_CLOSE = 53_u32
  WIDM_PREPARE = 54_u32
  WIDM_UNPREPARE = 55_u32
  WIDM_ADDBUFFER = 56_u32
  WIDM_START = 57_u32
  WIDM_STOP = 58_u32
  WIDM_RESET = 59_u32
  WIDM_GETPOS = 60_u32
  WIDM_PREFERRED = 61_u32
  MIDI_IO_PACKED = 0_i32
  MIDI_IO_COOKED = 2_i32
  MODM_GETNUMDEVS = 1_u32
  MODM_GETDEVCAPS = 2_u32
  MODM_OPEN = 3_u32
  MODM_CLOSE = 4_u32
  MODM_PREPARE = 5_u32
  MODM_UNPREPARE = 6_u32
  MODM_DATA = 7_u32
  MODM_LONGDATA = 8_u32
  MODM_RESET = 9_u32
  MODM_GETVOLUME = 10_u32
  MODM_SETVOLUME = 11_u32
  MODM_CACHEPATCHES = 12_u32
  MODM_CACHEDRUMPATCHES = 13_u32
  MODM_STRMDATA = 14_u32
  MODM_GETPOS = 17_u32
  MODM_PAUSE = 18_u32
  MODM_RESTART = 19_u32
  MODM_STOP = 20_u32
  MODM_PROPERTIES = 21_u32
  MODM_PREFERRED = 22_u32
  MODM_RECONFIGURE = 18280_u32
  MIDM_GETNUMDEVS = 53_u32
  MIDM_GETDEVCAPS = 54_u32
  MIDM_OPEN = 55_u32
  MIDM_CLOSE = 56_u32
  MIDM_PREPARE = 57_u32
  MIDM_UNPREPARE = 58_u32
  MIDM_ADDBUFFER = 59_u32
  MIDM_START = 60_u32
  MIDM_STOP = 61_u32
  MIDM_RESET = 62_u32
  AUXM_INIT = 100_u32
  AUXM_INIT_EX = 104_u32
  AUXDM_GETNUMDEVS = 3_u32
  AUXDM_GETDEVCAPS = 4_u32
  AUXDM_GETVOLUME = 5_u32
  AUXDM_SETVOLUME = 6_u32
  MXDM_INIT = 100_u32
  MXDM_INIT_EX = 104_u32
  MXDM_USER = 16384_u32
  MXDM_BASE = 1_u32
  MXDM_GETNUMDEVS = 1_u32
  MXDM_GETDEVCAPS = 2_u32
  MXDM_OPEN = 3_u32
  MXDM_CLOSE = 4_u32
  MXDM_GETLINEINFO = 5_u32
  MXDM_GETLINECONTROLS = 6_u32
  MXDM_GETCONTROLDETAILS = 7_u32
  MXDM_SETCONTROLDETAILS = 8_u32
  TDD_KILLTIMEREVENT = 2048_u32
  TDD_SETTIMEREVENT = 2052_u32
  TDD_GETSYSTEMTIME = 2056_u32
  TDD_GETDEVCAPS = 2060_u32
  TDD_BEGINMINPERIOD = 2064_u32
  TDD_ENDMINPERIOD = 2068_u32
  JOY_CONFIGCHANGED_MSGSTRING = "MSJSTICK_VJOYD_MSGSTR"
  JDD_GETNUMDEVS = 2049_u32
  JDD_GETDEVCAPS = 2050_u32
  JDD_GETPOS = 2305_u32
  JDD_SETCALIBRATION = 2306_u32
  JDD_CONFIGCHANGED = 2307_u32
  JDD_GETPOSEX = 2308_u32
  MCI_OPEN_DRIVER = 2049_u32
  MCI_CLOSE_DRIVER = 2050_u32
  MCI_FALSE = 531_u32
  MCI_TRUE = 532_u32
  MCI_FORMAT_MILLISECONDS_S = 533_u32
  MCI_FORMAT_HMS_S = 534_u32
  MCI_FORMAT_MSF_S = 535_u32
  MCI_FORMAT_FRAMES_S = 536_u32
  MCI_FORMAT_SMPTE_24_S = 537_u32
  MCI_FORMAT_SMPTE_25_S = 538_u32
  MCI_FORMAT_SMPTE_30_S = 539_u32
  MCI_FORMAT_SMPTE_30DROP_S = 540_u32
  MCI_FORMAT_BYTES_S = 541_u32
  MCI_FORMAT_SAMPLES_S = 542_u32
  MCI_FORMAT_TMSF_S = 543_u32
  MCI_VD_FORMAT_TRACK_S = 1029_u32
  WAVE_FORMAT_PCM_S = 1152_u32
  WAVE_MAPPER_S = 1153_u32
  MCI_SEQ_MAPPER_S = 1221_u32
  MCI_SEQ_FILE_S = 1222_u32
  MCI_SEQ_MIDI_S = 1223_u32
  MCI_SEQ_SMPTE_S = 1224_u32
  MCI_SEQ_FORMAT_SONGPTR_S = 1225_u32
  MCI_SEQ_NONE_S = 1226_u32
  MIDIMAPPER_S = 1227_u32
  MCI_MAX_DEVICE_TYPE_LENGTH = 80_u32
  MCI_RESOURCE_RETURNED = 65536_u32
  MCI_COLONIZED3_RETURN = 131072_u32
  MCI_COLONIZED4_RETURN = 262144_u32
  MCI_INTEGER_RETURNED = 524288_u32
  MCI_RESOURCE_DRIVER = 1048576_u32
  MCI_COMMAND_HEAD = 0_u32
  MCI_STRING = 1_u32
  MCI_INTEGER = 2_u32
  MCI_END_COMMAND = 3_u32
  MCI_RETURN = 4_u32
  MCI_FLAG = 5_u32
  MCI_END_COMMAND_LIST = 6_u32
  MCI_RECT = 7_u32
  MCI_CONSTANT = 8_u32
  MCI_END_CONSTANT = 9_u32
  MCI_HWND = 10_u32
  MCI_HPAL = 11_u32
  MCI_HDC = 12_u32
  MCI_INTEGER64 = 13_u32
  TASKERR_NOTASKSUPPORT = 1_u32
  TASKERR_OUTOFMEMORY = 2_u32
  DRV_EXITSESSION = 11_u32
  DRV_POWER = 15_u32
  DRVCNF_CANCEL = 0_u32
  DRVCNF_OK = 1_u32
  DRVCNF_RESTART = 2_u32
  DRV_CANCEL = 0_u32
  DRV_OK = 1_u32
  DRV_RESTART = 2_u32
  DRV_MCI_LAST = 6143_u32
  MMIOERR_BASE = 256_u32
  MMIOERR_FILENOTFOUND = 257_u32
  MMIOERR_OUTOFMEMORY = 258_u32
  MMIOERR_CANNOTOPEN = 259_u32
  MMIOERR_CANNOTCLOSE = 260_u32
  MMIOERR_CANNOTREAD = 261_u32
  MMIOERR_CANNOTWRITE = 262_u32
  MMIOERR_CANNOTSEEK = 263_u32
  MMIOERR_CANNOTEXPAND = 264_u32
  MMIOERR_CHUNKNOTFOUND = 265_u32
  MMIOERR_UNBUFFERED = 266_u32
  MMIOERR_PATHNOTFOUND = 267_u32
  MMIOERR_ACCESSDENIED = 268_u32
  MMIOERR_SHARINGVIOLATION = 269_u32
  MMIOERR_NETWORKERROR = 270_u32
  MMIOERR_TOOMANYOPENFILES = 271_u32
  MMIOERR_INVALIDFILE = 272_u32
  MMIO_RWMODE = 3_u32
  MMIO_SHAREMODE = 112_u32
  MMIO_CREATE = 4096_u32
  MMIO_PARSE = 256_u32
  MMIO_DELETE = 512_u32
  MMIO_EXIST = 16384_u32
  MMIO_ALLOCBUF = 65536_u32
  MMIO_GETTEMP = 131072_u32
  MMIO_DIRTY = 268435456_u32
  MMIO_READ = 0_u32
  MMIO_WRITE = 1_u32
  MMIO_READWRITE = 2_u32
  MMIO_COMPAT = 0_u32
  MMIO_EXCLUSIVE = 16_u32
  MMIO_DENYWRITE = 32_u32
  MMIO_DENYREAD = 48_u32
  MMIO_DENYNONE = 64_u32
  MMIO_FHOPEN = 16_u32
  MMIO_EMPTYBUF = 16_u32
  MMIO_TOUPPER = 16_u32
  MMIO_INSTALLPROC = 65536_u32
  MMIO_GLOBALPROC = 268435456_u32
  MMIO_REMOVEPROC = 131072_u32
  MMIO_UNICODEPROC = 16777216_u32
  MMIO_FINDPROC = 262144_u32
  MMIO_FINDCHUNK = 16_u32
  MMIO_FINDRIFF = 32_u32
  MMIO_FINDLIST = 64_u32
  MMIO_CREATERIFF = 32_u32
  MMIO_CREATELIST = 64_u32
  MMIOM_READ = 0_u32
  MMIOM_WRITE = 1_u32
  MMIOM_SEEK = 2_u32
  MMIOM_OPEN = 3_u32
  MMIOM_CLOSE = 4_u32
  MMIOM_WRITEFLUSH = 5_u32
  MMIOM_RENAME = 6_u32
  MMIOM_USER = 32768_u32
  SEEK_SET = 0_u32
  SEEK_CUR = 1_u32
  SEEK_END = 2_u32
  MMIO_DEFAULTBUFFER = 8192_u32
  FACILITY_NS = 13_u32
  MCI_MCIAVI_PLAY_WINDOW = 16777216_i32
  MCI_MCIAVI_PLAY_FULLSCREEN = 33554432_i32
  MCI_MCIAVI_PLAY_FULLBY2 = 67108864_i32
  MCI_AVI_STATUS_FRAMES_SKIPPED = 32769_i32
  MCI_AVI_STATUS_LAST_PLAY_SPEED = 32770_i32
  MCI_AVI_STATUS_AUDIO_BREAKS = 32771_i32
  MCI_AVI_SETVIDEO_DRAW_PROCEDURE = 32768_i32
  MCI_AVI_SETVIDEO_PALETTE_COLOR = 33024_i32
  MCI_AVI_SETVIDEO_PALETTE_HALFTONE = 65535_i32
  MCIERR_AVI_OLDAVIFORMAT = 612_u32
  MCIERR_AVI_NOTINTERLEAVED = 613_u32
  MCIERR_AVI_NODISPDIB = 614_u32
  MCIERR_AVI_CANTPLAYFULLSCREEN = 615_u32
  MCIERR_AVI_TOOBIGFORVGA = 616_u32
  MCIERR_AVI_NOCOMPRESSOR = 617_u32
  MCIERR_AVI_DISPLAYERROR = 618_u32
  MCIERR_AVI_AUDIOERROR = 619_u32
  MCIERR_AVI_BADPALETTE = 620_u32
  DLG_ACMFORMATCHOOSE_ID = 70_u32
  IDD_ACMFORMATCHOOSE_BTN_HELP = 9_u32
  IDD_ACMFORMATCHOOSE_CMB_CUSTOM = 100_u32
  IDD_ACMFORMATCHOOSE_CMB_FORMATTAG = 101_u32
  IDD_ACMFORMATCHOOSE_CMB_FORMAT = 102_u32
  IDD_ACMFORMATCHOOSE_BTN_SETNAME = 103_u32
  IDD_ACMFORMATCHOOSE_BTN_DELNAME = 104_u32
  DLG_ACMFILTERCHOOSE_ID = 71_u32
  IDD_ACMFILTERCHOOSE_BTN_HELP = 9_u32
  IDD_ACMFILTERCHOOSE_CMB_CUSTOM = 100_u32
  IDD_ACMFILTERCHOOSE_CMB_FILTERTAG = 101_u32
  IDD_ACMFILTERCHOOSE_CMB_FILTER = 102_u32
  IDD_ACMFILTERCHOOSE_BTN_SETNAME = 103_u32
  IDD_ACMFILTERCHOOSE_BTN_DELNAME = 104_u32
  FACILITY_NS_WIN32 = 7_u32
  NS_S_CALLPENDING = 851968_i32
  NS_S_CALLABORTED = 851969_i32
  NS_S_STREAM_TRUNCATED = 851970_i32
  NS_W_SERVER_BANDWIDTH_LIMIT = -2146631677_i32
  NS_W_FILE_BANDWIDTH_LIMIT = -2146631676_i32
  NS_E_NOCONNECTION = -1072889851_i32
  NS_E_CANNOTCONNECT = -1072889850_i32
  NS_E_CANNOTDESTROYTITLE = -1072889849_i32
  NS_E_CANNOTRENAMETITLE = -1072889848_i32
  NS_E_CANNOTOFFLINEDISK = -1072889847_i32
  NS_E_CANNOTONLINEDISK = -1072889846_i32
  NS_E_NOREGISTEREDWALKER = -1072889845_i32
  NS_E_NOFUNNEL = -1072889844_i32
  NS_E_NO_LOCALPLAY = -1072889843_i32
  NS_E_NETWORK_BUSY = -1072889842_i32
  NS_E_TOO_MANY_SESS = -1072889841_i32
  NS_E_ALREADY_CONNECTED = -1072889840_i32
  NS_E_INVALID_INDEX = -1072889839_i32
  NS_E_PROTOCOL_MISMATCH = -1072889838_i32
  NS_E_TIMEOUT = -1072889837_i32
  NS_E_NET_WRITE = -1072889836_i32
  NS_E_NET_READ = -1072889835_i32
  NS_E_DISK_WRITE = -1072889834_i32
  NS_E_DISK_READ = -1072889833_i32
  NS_E_FILE_WRITE = -1072889832_i32
  NS_E_FILE_READ = -1072889831_i32
  NS_E_FILE_NOT_FOUND = -1072889830_i32
  NS_E_FILE_EXISTS = -1072889829_i32
  NS_E_INVALID_NAME = -1072889828_i32
  NS_E_FILE_OPEN_FAILED = -1072889827_i32
  NS_E_FILE_ALLOCATION_FAILED = -1072889826_i32
  NS_E_FILE_INIT_FAILED = -1072889825_i32
  NS_E_FILE_PLAY_FAILED = -1072889824_i32
  NS_E_SET_DISK_UID_FAILED = -1072889823_i32
  NS_E_INDUCED = -1072889822_i32
  NS_E_CCLINK_DOWN = -1072889821_i32
  NS_E_INTERNAL = -1072889820_i32
  NS_E_BUSY = -1072889819_i32
  NS_E_UNRECOGNIZED_STREAM_TYPE = -1072889818_i32
  NS_E_NETWORK_SERVICE_FAILURE = -1072889817_i32
  NS_E_NETWORK_RESOURCE_FAILURE = -1072889816_i32
  NS_E_CONNECTION_FAILURE = -1072889815_i32
  NS_E_SHUTDOWN = -1072889814_i32
  NS_E_INVALID_REQUEST = -1072889813_i32
  NS_E_INSUFFICIENT_BANDWIDTH = -1072889812_i32
  NS_E_NOT_REBUILDING = -1072889811_i32
  NS_E_LATE_OPERATION = -1072889810_i32
  NS_E_INVALID_DATA = -1072889809_i32
  NS_E_FILE_BANDWIDTH_LIMIT = -1072889808_i32
  NS_E_OPEN_FILE_LIMIT = -1072889807_i32
  NS_E_BAD_CONTROL_DATA = -1072889806_i32
  NS_E_NO_STREAM = -1072889805_i32
  NS_E_STREAM_END = -1072889804_i32
  NS_E_SERVER_NOT_FOUND = -1072889803_i32
  NS_E_DUPLICATE_NAME = -1072889802_i32
  NS_E_DUPLICATE_ADDRESS = -1072889801_i32
  NS_E_BAD_MULTICAST_ADDRESS = -1072889800_i32
  NS_E_BAD_ADAPTER_ADDRESS = -1072889799_i32
  NS_E_BAD_DELIVERY_MODE = -1072889798_i32
  NS_E_INVALID_CHANNEL = -1072889797_i32
  NS_E_INVALID_STREAM = -1072889796_i32
  NS_E_INVALID_ARCHIVE = -1072889795_i32
  NS_E_NOTITLES = -1072889794_i32
  NS_E_INVALID_CLIENT = -1072889793_i32
  NS_E_INVALID_BLACKHOLE_ADDRESS = -1072889792_i32
  NS_E_INCOMPATIBLE_FORMAT = -1072889791_i32
  NS_E_INVALID_KEY = -1072889790_i32
  NS_E_INVALID_PORT = -1072889789_i32
  NS_E_INVALID_TTL = -1072889788_i32
  NS_E_STRIDE_REFUSED = -1072889787_i32
  NS_E_MMSAUTOSERVER_CANTFINDWALKER = -1072889786_i32
  NS_E_MAX_BITRATE = -1072889785_i32
  NS_E_LOGFILEPERIOD = -1072889784_i32
  NS_E_MAX_CLIENTS = -1072889783_i32
  NS_E_LOG_FILE_SIZE = -1072889782_i32
  NS_E_MAX_FILERATE = -1072889781_i32
  NS_E_WALKER_UNKNOWN = -1072889780_i32
  NS_E_WALKER_SERVER = -1072889779_i32
  NS_E_WALKER_USAGE = -1072889778_i32
  NS_I_TIGER_START = 1074593871_i32
  NS_E_TIGER_FAIL = -1072889776_i32
  NS_I_CUB_START = 1074593873_i32
  NS_I_CUB_RUNNING = 1074593874_i32
  NS_E_CUB_FAIL = -1072889773_i32
  NS_I_DISK_START = 1074593876_i32
  NS_E_DISK_FAIL = -1072889771_i32
  NS_I_DISK_REBUILD_STARTED = 1074593878_i32
  NS_I_DISK_REBUILD_FINISHED = 1074593879_i32
  NS_I_DISK_REBUILD_ABORTED = 1074593880_i32
  NS_I_LIMIT_FUNNELS = 1074593881_i32
  NS_I_START_DISK = 1074593882_i32
  NS_I_STOP_DISK = 1074593883_i32
  NS_I_STOP_CUB = 1074593884_i32
  NS_I_KILL_USERSESSION = 1074593885_i32
  NS_I_KILL_CONNECTION = 1074593886_i32
  NS_I_REBUILD_DISK = 1074593887_i32
  NS_W_UNKNOWN_EVENT = -2146631584_i32
  NS_E_MAX_FUNNELS_ALERT = -1072889760_i32
  NS_E_ALLOCATE_FILE_FAIL = -1072889759_i32
  NS_E_PAGING_ERROR = -1072889758_i32
  NS_E_BAD_BLOCK0_VERSION = -1072889757_i32
  NS_E_BAD_DISK_UID = -1072889756_i32
  NS_E_BAD_FSMAJOR_VERSION = -1072889755_i32
  NS_E_BAD_STAMPNUMBER = -1072889754_i32
  NS_E_PARTIALLY_REBUILT_DISK = -1072889753_i32
  NS_E_ENACTPLAN_GIVEUP = -1072889752_i32
  MCMADM_I_NO_EVENTS = 1074593897_i32
  MCMADM_E_REGKEY_NOT_FOUND = -1072889750_i32
  NS_E_NO_FORMATS = -1072889749_i32
  NS_E_NO_REFERENCES = -1072889748_i32
  NS_E_WAVE_OPEN = -1072889747_i32
  NS_I_LOGGING_FAILED = 1074593902_i32
  NS_E_CANNOTCONNECTEVENTS = -1072889745_i32
  NS_I_LIMIT_BANDWIDTH = 1074593904_i32
  NS_E_NO_DEVICE = -1072889743_i32
  NS_E_NO_SPECIFIED_DEVICE = -1072889742_i32
  NS_E_NOTHING_TO_DO = -1072887823_i32
  NS_E_NO_MULTICAST = -1072887822_i32
  NS_E_MONITOR_GIVEUP = -1072889656_i32
  NS_E_REMIRRORED_DISK = -1072889655_i32
  NS_E_INSUFFICIENT_DATA = -1072889654_i32
  NS_E_ASSERT = -1072889653_i32
  NS_E_BAD_ADAPTER_NAME = -1072889652_i32
  NS_E_NOT_LICENSED = -1072889651_i32
  NS_E_NO_SERVER_CONTACT = -1072889650_i32
  NS_E_TOO_MANY_TITLES = -1072889649_i32
  NS_E_TITLE_SIZE_EXCEEDED = -1072889648_i32
  NS_E_UDP_DISABLED = -1072889647_i32
  NS_E_TCP_DISABLED = -1072889646_i32
  NS_E_HTTP_DISABLED = -1072889645_i32
  NS_E_LICENSE_EXPIRED = -1072889644_i32
  NS_E_TITLE_BITRATE = -1072889643_i32
  NS_E_EMPTY_PROGRAM_NAME = -1072889642_i32
  NS_E_MISSING_CHANNEL = -1072889641_i32
  NS_E_NO_CHANNELS = -1072889640_i32
  NS_E_INVALID_INDEX2 = -1072889639_i32
  NS_E_CUB_FAIL_LINK = -1072889456_i32
  NS_I_CUB_UNFAIL_LINK = 1074594193_i32
  NS_E_BAD_CUB_UID = -1072889454_i32
  NS_I_RESTRIPE_START = 1074594195_i32
  NS_I_RESTRIPE_DONE = 1074594196_i32
  NS_E_GLITCH_MODE = -1072889451_i32
  NS_I_RESTRIPE_DISK_OUT = 1074594198_i32
  NS_I_RESTRIPE_CUB_OUT = 1074594199_i32
  NS_I_DISK_STOP = 1074594200_i32
  NS_I_CATATONIC_FAILURE = -2146631271_i32
  NS_I_CATATONIC_AUTO_UNFAIL = -2146631270_i32
  NS_E_NO_MEDIA_PROTOCOL = -1072889445_i32
  NS_E_INVALID_INPUT_FORMAT = -1072886856_i32
  NS_E_MSAUDIO_NOT_INSTALLED = -1072886855_i32
  NS_E_UNEXPECTED_MSAUDIO_ERROR = -1072886854_i32
  NS_E_INVALID_OUTPUT_FORMAT = -1072886853_i32
  NS_E_NOT_CONFIGURED = -1072886852_i32
  NS_E_PROTECTED_CONTENT = -1072886851_i32
  NS_E_LICENSE_REQUIRED = -1072886850_i32
  NS_E_TAMPERED_CONTENT = -1072886849_i32
  NS_E_LICENSE_OUTOFDATE = -1072886848_i32
  NS_E_LICENSE_INCORRECT_RIGHTS = -1072886847_i32
  NS_E_AUDIO_CODEC_NOT_INSTALLED = -1072886846_i32
  NS_E_AUDIO_CODEC_ERROR = -1072886845_i32
  NS_E_VIDEO_CODEC_NOT_INSTALLED = -1072886844_i32
  NS_E_VIDEO_CODEC_ERROR = -1072886843_i32
  NS_E_INVALIDPROFILE = -1072886842_i32
  NS_E_INCOMPATIBLE_VERSION = -1072886841_i32
  NS_S_REBUFFERING = 854984_i32
  NS_S_DEGRADING_QUALITY = 854985_i32
  NS_E_OFFLINE_MODE = -1072886838_i32
  NS_E_NOT_CONNECTED = -1072886837_i32
  NS_E_TOO_MUCH_DATA = -1072886836_i32
  NS_E_UNSUPPORTED_PROPERTY = -1072886835_i32
  NS_E_8BIT_WAVE_UNSUPPORTED = -1072886834_i32
  NS_E_NO_MORE_SAMPLES = -1072886833_i32
  NS_E_INVALID_SAMPLING_RATE = -1072886832_i32
  NS_E_MAX_PACKET_SIZE_TOO_SMALL = -1072886831_i32
  NS_E_LATE_PACKET = -1072886830_i32
  NS_E_DUPLICATE_PACKET = -1072886829_i32
  NS_E_SDK_BUFFERTOOSMALL = -1072886828_i32
  NS_E_INVALID_NUM_PASSES = -1072886827_i32
  NS_E_ATTRIBUTE_READ_ONLY = -1072886826_i32
  NS_E_ATTRIBUTE_NOT_ALLOWED = -1072886825_i32
  NS_E_INVALID_EDL = -1072886824_i32
  NS_E_DATA_UNIT_EXTENSION_TOO_LARGE = -1072886823_i32
  NS_E_CODEC_DMO_ERROR = -1072886822_i32
  NS_S_TRANSCRYPTOR_EOF = 855003_i32
  NS_E_FEATURE_DISABLED_BY_GROUP_POLICY = -1072886820_i32
  NS_E_FEATURE_DISABLED_IN_SKU = -1072886819_i32
  NS_E_WMDRM_DEPRECATED = -1072886818_i32
  NS_E_NO_CD = -1072885856_i32
  NS_E_CANT_READ_DIGITAL = -1072885855_i32
  NS_E_DEVICE_DISCONNECTED = -1072885854_i32
  NS_E_DEVICE_NOT_SUPPORT_FORMAT = -1072885853_i32
  NS_E_SLOW_READ_DIGITAL = -1072885852_i32
  NS_E_MIXER_INVALID_LINE = -1072885851_i32
  NS_E_MIXER_INVALID_CONTROL = -1072885850_i32
  NS_E_MIXER_INVALID_VALUE = -1072885849_i32
  NS_E_MIXER_UNKNOWN_MMRESULT = -1072885848_i32
  NS_E_USER_STOP = -1072885847_i32
  NS_E_MP3_FORMAT_NOT_FOUND = -1072885846_i32
  NS_E_CD_READ_ERROR_NO_CORRECTION = -1072885845_i32
  NS_E_CD_READ_ERROR = -1072885844_i32
  NS_E_CD_SLOW_COPY = -1072885843_i32
  NS_E_CD_COPYTO_CD = -1072885842_i32
  NS_E_MIXER_NODRIVER = -1072885841_i32
  NS_E_REDBOOK_ENABLED_WHILE_COPYING = -1072885840_i32
  NS_E_CD_REFRESH = -1072885839_i32
  NS_E_CD_DRIVER_PROBLEM = -1072885838_i32
  NS_E_WONT_DO_DIGITAL = -1072885837_i32
  NS_E_WMPXML_NOERROR = -1072885836_i32
  NS_E_WMPXML_ENDOFDATA = -1072885835_i32
  NS_E_WMPXML_PARSEERROR = -1072885834_i32
  NS_E_WMPXML_ATTRIBUTENOTFOUND = -1072885833_i32
  NS_E_WMPXML_PINOTFOUND = -1072885832_i32
  NS_E_WMPXML_EMPTYDOC = -1072885831_i32
  NS_E_WMP_PATH_ALREADY_IN_LIBRARY = -1072885830_i32
  NS_E_WMP_FILESCANALREADYSTARTED = -1072885826_i32
  NS_E_WMP_HME_INVALIDOBJECTID = -1072885825_i32
  NS_E_WMP_MF_CODE_EXPIRED = -1072885824_i32
  NS_E_WMP_HME_NOTSEARCHABLEFORITEMS = -1072885823_i32
  NS_E_WMP_HME_STALEREQUEST = -1072885822_i32
  NS_E_WMP_ADDTOLIBRARY_FAILED = -1072885817_i32
  NS_E_WMP_WINDOWSAPIFAILURE = -1072885816_i32
  NS_E_WMP_RECORDING_NOT_ALLOWED = -1072885815_i32
  NS_E_DEVICE_NOT_READY = -1072885814_i32
  NS_E_DAMAGED_FILE = -1072885813_i32
  NS_E_MPDB_GENERIC = -1072885812_i32
  NS_E_FILE_FAILED_CHECKS = -1072885811_i32
  NS_E_MEDIA_LIBRARY_FAILED = -1072885810_i32
  NS_E_SHARING_VIOLATION = -1072885809_i32
  NS_E_NO_ERROR_STRING_FOUND = -1072885808_i32
  NS_E_WMPOCX_NO_REMOTE_CORE = -1072885807_i32
  NS_E_WMPOCX_NO_ACTIVE_CORE = -1072885806_i32
  NS_E_WMPOCX_NOT_RUNNING_REMOTELY = -1072885805_i32
  NS_E_WMPOCX_NO_REMOTE_WINDOW = -1072885804_i32
  NS_E_WMPOCX_ERRORMANAGERNOTAVAILABLE = -1072885803_i32
  NS_E_PLUGIN_NOTSHUTDOWN = -1072885802_i32
  NS_E_WMP_CANNOT_FIND_FOLDER = -1072885801_i32
  NS_E_WMP_STREAMING_RECORDING_NOT_ALLOWED = -1072885800_i32
  NS_E_WMP_PLUGINDLL_NOTFOUND = -1072885799_i32
  NS_E_NEED_TO_ASK_USER = -1072885798_i32
  NS_E_WMPOCX_PLAYER_NOT_DOCKED = -1072885797_i32
  NS_E_WMP_EXTERNAL_NOTREADY = -1072885796_i32
  NS_E_WMP_MLS_STALE_DATA = -1072885795_i32
  NS_E_WMP_UI_SUBCONTROLSNOTSUPPORTED = -1072885794_i32
  NS_E_WMP_UI_VERSIONMISMATCH = -1072885793_i32
  NS_E_WMP_UI_NOTATHEMEFILE = -1072885792_i32
  NS_E_WMP_UI_SUBELEMENTNOTFOUND = -1072885791_i32
  NS_E_WMP_UI_VERSIONPARSE = -1072885790_i32
  NS_E_WMP_UI_VIEWIDNOTFOUND = -1072885789_i32
  NS_E_WMP_UI_PASSTHROUGH = -1072885788_i32
  NS_E_WMP_UI_OBJECTNOTFOUND = -1072885787_i32
  NS_E_WMP_UI_SECONDHANDLER = -1072885786_i32
  NS_E_WMP_UI_NOSKININZIP = -1072885785_i32
  NS_S_WMP_UI_VERSIONMISMATCH = 856040_i32
  NS_S_WMP_EXCEPTION = 856041_i32
  NS_E_WMP_URLDOWNLOADFAILED = -1072885782_i32
  NS_E_WMPOCX_UNABLE_TO_LOAD_SKIN = -1072885781_i32
  NS_E_WMP_INVALID_SKIN = -1072885780_i32
  NS_E_WMP_SENDMAILFAILED = -1072885779_i32
  NS_E_WMP_LOCKEDINSKINMODE = -1072885778_i32
  NS_E_WMP_FAILED_TO_SAVE_FILE = -1072885777_i32
  NS_E_WMP_SAVEAS_READONLY = -1072885776_i32
  NS_E_WMP_FAILED_TO_SAVE_PLAYLIST = -1072885775_i32
  NS_E_WMP_FAILED_TO_OPEN_WMD = -1072885774_i32
  NS_E_WMP_CANT_PLAY_PROTECTED = -1072885773_i32
  NS_E_SHARING_STATE_OUT_OF_SYNC = -1072885772_i32
  NS_E_WMPOCX_REMOTE_PLAYER_ALREADY_RUNNING = -1072885766_i32
  NS_E_WMP_RBC_JPGMAPPINGIMAGE = -1072885756_i32
  NS_E_WMP_JPGTRANSPARENCY = -1072885755_i32
  NS_E_WMP_INVALID_MAX_VAL = -1072885751_i32
  NS_E_WMP_INVALID_MIN_VAL = -1072885750_i32
  NS_E_WMP_CS_JPGPOSITIONIMAGE = -1072885746_i32
  NS_E_WMP_CS_NOTEVENLYDIVISIBLE = -1072885745_i32
  NS_E_WMPZIP_NOTAZIPFILE = -1072885736_i32
  NS_E_WMPZIP_CORRUPT = -1072885735_i32
  NS_E_WMPZIP_FILENOTFOUND = -1072885734_i32
  NS_E_WMP_IMAGE_FILETYPE_UNSUPPORTED = -1072885726_i32
  NS_E_WMP_IMAGE_INVALID_FORMAT = -1072885725_i32
  NS_E_WMP_GIF_UNEXPECTED_ENDOFFILE = -1072885724_i32
  NS_E_WMP_GIF_INVALID_FORMAT = -1072885723_i32
  NS_E_WMP_GIF_BAD_VERSION_NUMBER = -1072885722_i32
  NS_E_WMP_GIF_NO_IMAGE_IN_FILE = -1072885721_i32
  NS_E_WMP_PNG_INVALIDFORMAT = -1072885720_i32
  NS_E_WMP_PNG_UNSUPPORTED_BITDEPTH = -1072885719_i32
  NS_E_WMP_PNG_UNSUPPORTED_COMPRESSION = -1072885718_i32
  NS_E_WMP_PNG_UNSUPPORTED_FILTER = -1072885717_i32
  NS_E_WMP_PNG_UNSUPPORTED_INTERLACE = -1072885716_i32
  NS_E_WMP_PNG_UNSUPPORTED_BAD_CRC = -1072885715_i32
  NS_E_WMP_BMP_INVALID_BITMASK = -1072885714_i32
  NS_E_WMP_BMP_TOPDOWN_DIB_UNSUPPORTED = -1072885713_i32
  NS_E_WMP_BMP_BITMAP_NOT_CREATED = -1072885712_i32
  NS_E_WMP_BMP_COMPRESSION_UNSUPPORTED = -1072885711_i32
  NS_E_WMP_BMP_INVALID_FORMAT = -1072885710_i32
  NS_E_WMP_JPG_JERR_ARITHCODING_NOTIMPL = -1072885709_i32
  NS_E_WMP_JPG_INVALID_FORMAT = -1072885708_i32
  NS_E_WMP_JPG_BAD_DCTSIZE = -1072885707_i32
  NS_E_WMP_JPG_BAD_VERSION_NUMBER = -1072885706_i32
  NS_E_WMP_JPG_BAD_PRECISION = -1072885705_i32
  NS_E_WMP_JPG_CCIR601_NOTIMPL = -1072885704_i32
  NS_E_WMP_JPG_NO_IMAGE_IN_FILE = -1072885703_i32
  NS_E_WMP_JPG_READ_ERROR = -1072885702_i32
  NS_E_WMP_JPG_FRACT_SAMPLE_NOTIMPL = -1072885701_i32
  NS_E_WMP_JPG_IMAGE_TOO_BIG = -1072885700_i32
  NS_E_WMP_JPG_UNEXPECTED_ENDOFFILE = -1072885699_i32
  NS_E_WMP_JPG_SOF_UNSUPPORTED = -1072885698_i32
  NS_E_WMP_JPG_UNKNOWN_MARKER = -1072885697_i32
  NS_S_WMP_LOADED_GIF_IMAGE = 856128_i32
  NS_S_WMP_LOADED_PNG_IMAGE = 856129_i32
  NS_S_WMP_LOADED_BMP_IMAGE = 856130_i32
  NS_S_WMP_LOADED_JPG_IMAGE = 856131_i32
  NS_E_WMP_FAILED_TO_OPEN_IMAGE = -1072885692_i32
  NS_E_WMP_DAI_SONGTOOSHORT = -1072885687_i32
  NS_E_WMG_RATEUNAVAILABLE = -1072885686_i32
  NS_E_WMG_PLUGINUNAVAILABLE = -1072885685_i32
  NS_E_WMG_CANNOTQUEUE = -1072885684_i32
  NS_E_WMG_PREROLLLICENSEACQUISITIONNOTALLOWED = -1072885683_i32
  NS_E_WMG_UNEXPECTEDPREROLLSTATUS = -1072885682_i32
  NS_S_WMG_FORCE_DROP_FRAME = 856143_i32
  NS_E_WMG_INVALID_COPP_CERTIFICATE = -1072885679_i32
  NS_E_WMG_COPP_SECURITY_INVALID = -1072885678_i32
  NS_E_WMG_COPP_UNSUPPORTED = -1072885677_i32
  NS_E_WMG_INVALIDSTATE = -1072885676_i32
  NS_E_WMG_SINKALREADYEXISTS = -1072885675_i32
  NS_E_WMG_NOSDKINTERFACE = -1072885674_i32
  NS_E_WMG_NOTALLOUTPUTSRENDERED = -1072885673_i32
  NS_E_WMG_FILETRANSFERNOTALLOWED = -1072885672_i32
  NS_E_WMR_UNSUPPORTEDSTREAM = -1072885671_i32
  NS_E_WMR_PINNOTFOUND = -1072885670_i32
  NS_E_WMR_WAITINGONFORMATSWITCH = -1072885669_i32
  NS_E_WMR_NOSOURCEFILTER = -1072885668_i32
  NS_E_WMR_PINTYPENOMATCH = -1072885667_i32
  NS_E_WMR_NOCALLBACKAVAILABLE = -1072885666_i32
  NS_S_WMR_ALREADYRENDERED = 856159_i32
  NS_S_WMR_PINTYPEPARTIALMATCH = 856160_i32
  NS_S_WMR_PINTYPEFULLMATCH = 856161_i32
  NS_E_WMR_SAMPLEPROPERTYNOTSET = -1072885662_i32
  NS_E_WMR_CANNOT_RENDER_BINARY_STREAM = -1072885661_i32
  NS_E_WMG_LICENSE_TAMPERED = -1072885660_i32
  NS_E_WMR_WILLNOT_RENDER_BINARY_STREAM = -1072885659_i32
  NS_S_WMG_ADVISE_DROP_FRAME = 856166_i32
  NS_S_WMG_ADVISE_DROP_TO_KEYFRAME = 856167_i32
  NS_E_WMX_UNRECOGNIZED_PLAYLIST_FORMAT = -1072885656_i32
  NS_E_ASX_INVALIDFORMAT = -1072885655_i32
  NS_E_ASX_INVALIDVERSION = -1072885654_i32
  NS_E_ASX_INVALID_REPEAT_BLOCK = -1072885653_i32
  NS_E_ASX_NOTHING_TO_WRITE = -1072885652_i32
  NS_E_URLLIST_INVALIDFORMAT = -1072885651_i32
  NS_E_WMX_ATTRIBUTE_DOES_NOT_EXIST = -1072885650_i32
  NS_E_WMX_ATTRIBUTE_ALREADY_EXISTS = -1072885649_i32
  NS_E_WMX_ATTRIBUTE_UNRETRIEVABLE = -1072885648_i32
  NS_E_WMX_ITEM_DOES_NOT_EXIST = -1072885647_i32
  NS_E_WMX_ITEM_TYPE_ILLEGAL = -1072885646_i32
  NS_E_WMX_ITEM_UNSETTABLE = -1072885645_i32
  NS_E_WMX_PLAYLIST_EMPTY = -1072885644_i32
  NS_E_MLS_SMARTPLAYLIST_FILTER_NOT_REGISTERED = -1072885643_i32
  NS_E_WMX_INVALID_FORMAT_OVER_NESTING = -1072885642_i32
  NS_E_WMPCORE_NOSOURCEURLSTRING = -1072885636_i32
  NS_E_WMPCORE_COCREATEFAILEDFORGITOBJECT = -1072885635_i32
  NS_E_WMPCORE_FAILEDTOGETMARSHALLEDEVENTHANDLERINTERFACE = -1072885634_i32
  NS_E_WMPCORE_BUFFERTOOSMALL = -1072885633_i32
  NS_E_WMPCORE_UNAVAILABLE = -1072885632_i32
  NS_E_WMPCORE_INVALIDPLAYLISTMODE = -1072885631_i32
  NS_E_WMPCORE_ITEMNOTINPLAYLIST = -1072885626_i32
  NS_E_WMPCORE_PLAYLISTEMPTY = -1072885625_i32
  NS_E_WMPCORE_NOBROWSER = -1072885624_i32
  NS_E_WMPCORE_UNRECOGNIZED_MEDIA_URL = -1072885623_i32
  NS_E_WMPCORE_GRAPH_NOT_IN_LIST = -1072885622_i32
  NS_E_WMPCORE_PLAYLIST_EMPTY_OR_SINGLE_MEDIA = -1072885621_i32
  NS_E_WMPCORE_ERRORSINKNOTREGISTERED = -1072885620_i32
  NS_E_WMPCORE_ERRORMANAGERNOTAVAILABLE = -1072885619_i32
  NS_E_WMPCORE_WEBHELPFAILED = -1072885618_i32
  NS_E_WMPCORE_MEDIA_ERROR_RESUME_FAILED = -1072885617_i32
  NS_E_WMPCORE_NO_REF_IN_ENTRY = -1072885616_i32
  NS_E_WMPCORE_WMX_LIST_ATTRIBUTE_NAME_EMPTY = -1072885615_i32
  NS_E_WMPCORE_WMX_LIST_ATTRIBUTE_NAME_ILLEGAL = -1072885614_i32
  NS_E_WMPCORE_WMX_LIST_ATTRIBUTE_VALUE_EMPTY = -1072885613_i32
  NS_E_WMPCORE_WMX_LIST_ATTRIBUTE_VALUE_ILLEGAL = -1072885612_i32
  NS_E_WMPCORE_WMX_LIST_ITEM_ATTRIBUTE_NAME_EMPTY = -1072885611_i32
  NS_E_WMPCORE_WMX_LIST_ITEM_ATTRIBUTE_NAME_ILLEGAL = -1072885610_i32
  NS_E_WMPCORE_WMX_LIST_ITEM_ATTRIBUTE_VALUE_EMPTY = -1072885609_i32
  NS_E_WMPCORE_LIST_ENTRY_NO_REF = -1072885608_i32
  NS_E_WMPCORE_MISNAMED_FILE = -1072885607_i32
  NS_E_WMPCORE_CODEC_NOT_TRUSTED = -1072885606_i32
  NS_E_WMPCORE_CODEC_NOT_FOUND = -1072885605_i32
  NS_E_WMPCORE_CODEC_DOWNLOAD_NOT_ALLOWED = -1072885604_i32
  NS_E_WMPCORE_ERROR_DOWNLOADING_PLAYLIST = -1072885603_i32
  NS_E_WMPCORE_FAILED_TO_BUILD_PLAYLIST = -1072885602_i32
  NS_E_WMPCORE_PLAYLIST_ITEM_ALTERNATE_NONE = -1072885601_i32
  NS_E_WMPCORE_PLAYLIST_ITEM_ALTERNATE_EXHAUSTED = -1072885600_i32
  NS_E_WMPCORE_PLAYLIST_ITEM_ALTERNATE_NAME_NOT_FOUND = -1072885599_i32
  NS_E_WMPCORE_PLAYLIST_ITEM_ALTERNATE_MORPH_FAILED = -1072885598_i32
  NS_E_WMPCORE_PLAYLIST_ITEM_ALTERNATE_INIT_FAILED = -1072885597_i32
  NS_E_WMPCORE_MEDIA_ALTERNATE_REF_EMPTY = -1072885596_i32
  NS_E_WMPCORE_PLAYLIST_NO_EVENT_NAME = -1072885595_i32
  NS_E_WMPCORE_PLAYLIST_EVENT_ATTRIBUTE_ABSENT = -1072885594_i32
  NS_E_WMPCORE_PLAYLIST_EVENT_EMPTY = -1072885593_i32
  NS_E_WMPCORE_PLAYLIST_STACK_EMPTY = -1072885592_i32
  NS_E_WMPCORE_CURRENT_MEDIA_NOT_ACTIVE = -1072885591_i32
  NS_E_WMPCORE_USER_CANCEL = -1072885589_i32
  NS_E_WMPCORE_PLAYLIST_REPEAT_EMPTY = -1072885588_i32
  NS_E_WMPCORE_PLAYLIST_REPEAT_START_MEDIA_NONE = -1072885587_i32
  NS_E_WMPCORE_PLAYLIST_REPEAT_END_MEDIA_NONE = -1072885586_i32
  NS_E_WMPCORE_INVALID_PLAYLIST_URL = -1072885585_i32
  NS_E_WMPCORE_MISMATCHED_RUNTIME = -1072885584_i32
  NS_E_WMPCORE_PLAYLIST_IMPORT_FAILED_NO_ITEMS = -1072885583_i32
  NS_E_WMPCORE_VIDEO_TRANSFORM_FILTER_INSERTION = -1072885582_i32
  NS_E_WMPCORE_MEDIA_UNAVAILABLE = -1072885581_i32
  NS_E_WMPCORE_WMX_ENTRYREF_NO_REF = -1072885580_i32
  NS_E_WMPCORE_NO_PLAYABLE_MEDIA_IN_PLAYLIST = -1072885579_i32
  NS_E_WMPCORE_PLAYLIST_EMPTY_NESTED_PLAYLIST_SKIPPED_ITEMS = -1072885578_i32
  NS_E_WMPCORE_BUSY = -1072885577_i32
  NS_E_WMPCORE_MEDIA_CHILD_PLAYLIST_UNAVAILABLE = -1072885576_i32
  NS_E_WMPCORE_MEDIA_NO_CHILD_PLAYLIST = -1072885575_i32
  NS_E_WMPCORE_FILE_NOT_FOUND = -1072885574_i32
  NS_E_WMPCORE_TEMP_FILE_NOT_FOUND = -1072885573_i32
  NS_E_WMDM_REVOKED = -1072885572_i32
  NS_E_DDRAW_GENERIC = -1072885571_i32
  NS_E_DISPLAY_MODE_CHANGE_FAILED = -1072885570_i32
  NS_E_PLAYLIST_CONTAINS_ERRORS = -1072885569_i32
  NS_E_CHANGING_PROXY_NAME = -1072885568_i32
  NS_E_CHANGING_PROXY_PORT = -1072885567_i32
  NS_E_CHANGING_PROXY_EXCEPTIONLIST = -1072885566_i32
  NS_E_CHANGING_PROXYBYPASS = -1072885565_i32
  NS_E_CHANGING_PROXY_PROTOCOL_NOT_FOUND = -1072885564_i32
  NS_E_GRAPH_NOAUDIOLANGUAGE = -1072885563_i32
  NS_E_GRAPH_NOAUDIOLANGUAGESELECTED = -1072885562_i32
  NS_E_CORECD_NOTAMEDIACD = -1072885561_i32
  NS_E_WMPCORE_MEDIA_URL_TOO_LONG = -1072885560_i32
  NS_E_WMPFLASH_CANT_FIND_COM_SERVER = -1072885559_i32
  NS_E_WMPFLASH_INCOMPATIBLEVERSION = -1072885558_i32
  NS_E_WMPOCXGRAPH_IE_DISALLOWS_ACTIVEX_CONTROLS = -1072885557_i32
  NS_E_NEED_CORE_REFERENCE = -1072885556_i32
  NS_E_MEDIACD_READ_ERROR = -1072885555_i32
  NS_E_IE_DISALLOWS_ACTIVEX_CONTROLS = -1072885554_i32
  NS_E_FLASH_PLAYBACK_NOT_ALLOWED = -1072885553_i32
  NS_E_UNABLE_TO_CREATE_RIP_LOCATION = -1072885552_i32
  NS_E_WMPCORE_SOME_CODECS_MISSING = -1072885551_i32
  NS_E_WMP_RIP_FAILED = -1072885550_i32
  NS_E_WMP_FAILED_TO_RIP_TRACK = -1072885549_i32
  NS_E_WMP_ERASE_FAILED = -1072885548_i32
  NS_E_WMP_FORMAT_FAILED = -1072885547_i32
  NS_E_WMP_CANNOT_BURN_NON_LOCAL_FILE = -1072885546_i32
  NS_E_WMP_FILE_TYPE_CANNOT_BURN_TO_AUDIO_CD = -1072885545_i32
  NS_E_WMP_FILE_DOES_NOT_FIT_ON_CD = -1072885544_i32
  NS_E_WMP_FILE_NO_DURATION = -1072885543_i32
  NS_E_PDA_FAILED_TO_BURN = -1072885542_i32
  NS_S_NEED_TO_BUY_BURN_RIGHTS = 856283_i32
  NS_E_FAILED_DOWNLOAD_ABORT_BURN = -1072885540_i32
  NS_E_WMPCORE_DEVICE_DRIVERS_MISSING = -1072885539_i32
  NS_S_WMPCORE_PLAYLISTCLEARABORT = 856318_i32
  NS_S_WMPCORE_PLAYLISTREMOVEITEMABORT = 856319_i32
  NS_S_WMPCORE_PLAYLIST_CREATION_PENDING = 856322_i32
  NS_S_WMPCORE_MEDIA_VALIDATION_PENDING = 856323_i32
  NS_S_WMPCORE_PLAYLIST_REPEAT_SECONDARY_SEGMENTS_IGNORED = 856324_i32
  NS_S_WMPCORE_COMMAND_NOT_AVAILABLE = 856325_i32
  NS_S_WMPCORE_PLAYLIST_NAME_AUTO_GENERATED = 856326_i32
  NS_S_WMPCORE_PLAYLIST_IMPORT_MISSING_ITEMS = 856327_i32
  NS_S_WMPCORE_PLAYLIST_COLLAPSED_TO_SINGLE_MEDIA = 856328_i32
  NS_S_WMPCORE_MEDIA_CHILD_PLAYLIST_OPEN_PENDING = 856329_i32
  NS_S_WMPCORE_MORE_NODES_AVAIABLE = 856330_i32
  NS_E_WMPIM_USEROFFLINE = -1072885466_i32
  NS_E_WMPIM_USERCANCELED = -1072885465_i32
  NS_E_WMPIM_DIALUPFAILED = -1072885464_i32
  NS_E_WINSOCK_ERROR_STRING = -1072885463_i32
  NS_E_WMPBR_NOLISTENER = -1072885456_i32
  NS_E_WMPBR_BACKUPCANCEL = -1072885455_i32
  NS_E_WMPBR_RESTORECANCEL = -1072885454_i32
  NS_E_WMPBR_ERRORWITHURL = -1072885453_i32
  NS_E_WMPBR_NAMECOLLISION = -1072885452_i32
  NS_S_WMPBR_SUCCESS = 856373_i32
  NS_S_WMPBR_PARTIALSUCCESS = 856374_i32
  NS_E_WMPBR_DRIVE_INVALID = -1072885449_i32
  NS_E_WMPBR_BACKUPRESTOREFAILED = -1072885448_i32
  NS_S_WMPEFFECT_TRANSPARENT = 856388_i32
  NS_S_WMPEFFECT_OPAQUE = 856389_i32
  NS_S_OPERATION_PENDING = 856398_i32
  NS_E_WMP_CONVERT_FILE_FAILED = -1072885416_i32
  NS_E_WMP_CONVERT_NO_RIGHTS_ERRORURL = -1072885415_i32
  NS_E_WMP_CONVERT_NO_RIGHTS_NOERRORURL = -1072885414_i32
  NS_E_WMP_CONVERT_FILE_CORRUPT = -1072885413_i32
  NS_E_WMP_CONVERT_PLUGIN_UNAVAILABLE_ERRORURL = -1072885412_i32
  NS_E_WMP_CONVERT_PLUGIN_UNAVAILABLE_NOERRORURL = -1072885411_i32
  NS_E_WMP_CONVERT_PLUGIN_UNKNOWN_FILE_OWNER = -1072885410_i32
  NS_E_DVD_DISC_COPY_PROTECT_OUTPUT_NS = -1072885408_i32
  NS_E_DVD_DISC_COPY_PROTECT_OUTPUT_FAILED = -1072885407_i32
  NS_E_DVD_NO_SUBPICTURE_STREAM = -1072885406_i32
  NS_E_DVD_COPY_PROTECT = -1072885405_i32
  NS_E_DVD_AUTHORING_PROBLEM = -1072885404_i32
  NS_E_DVD_INVALID_DISC_REGION = -1072885403_i32
  NS_E_DVD_COMPATIBLE_VIDEO_CARD = -1072885402_i32
  NS_E_DVD_MACROVISION = -1072885401_i32
  NS_E_DVD_SYSTEM_DECODER_REGION = -1072885400_i32
  NS_E_DVD_DISC_DECODER_REGION = -1072885399_i32
  NS_E_DVD_NO_VIDEO_STREAM = -1072885398_i32
  NS_E_DVD_NO_AUDIO_STREAM = -1072885397_i32
  NS_E_DVD_GRAPH_BUILDING = -1072885396_i32
  NS_E_DVD_NO_DECODER = -1072885395_i32
  NS_E_DVD_PARENTAL = -1072885394_i32
  NS_E_DVD_CANNOT_JUMP = -1072885393_i32
  NS_E_DVD_DEVICE_CONTENTION = -1072885392_i32
  NS_E_DVD_NO_VIDEO_MEMORY = -1072885391_i32
  NS_E_DVD_CANNOT_COPY_PROTECTED = -1072885390_i32
  NS_E_DVD_REQUIRED_PROPERTY_NOT_SET = -1072885389_i32
  NS_E_DVD_INVALID_TITLE_CHAPTER = -1072885388_i32
  NS_E_NO_CD_BURNER = -1072885386_i32
  NS_E_DEVICE_IS_NOT_READY = -1072885385_i32
  NS_E_PDA_UNSUPPORTED_FORMAT = -1072885384_i32
  NS_E_NO_PDA = -1072885383_i32
  NS_E_PDA_UNSPECIFIED_ERROR = -1072885382_i32
  NS_E_MEMSTORAGE_BAD_DATA = -1072885381_i32
  NS_E_PDA_FAIL_SELECT_DEVICE = -1072885380_i32
  NS_E_PDA_FAIL_READ_WAVE_FILE = -1072885379_i32
  NS_E_IMAPI_LOSSOFSTREAMING = -1072885378_i32
  NS_E_PDA_DEVICE_FULL = -1072885377_i32
  NS_E_FAIL_LAUNCH_ROXIO_PLUGIN = -1072885376_i32
  NS_E_PDA_DEVICE_FULL_IN_SESSION = -1072885375_i32
  NS_E_IMAPI_MEDIUM_INVALIDTYPE = -1072885374_i32
  NS_E_PDA_MANUALDEVICE = -1072885373_i32
  NS_E_PDA_PARTNERSHIPNOTEXIST = -1072885372_i32
  NS_E_PDA_CANNOT_CREATE_ADDITIONAL_SYNC_RELATIONSHIP = -1072885371_i32
  NS_E_PDA_NO_TRANSCODE_OF_DRM = -1072885370_i32
  NS_E_PDA_TRANSCODECACHEFULL = -1072885369_i32
  NS_E_PDA_TOO_MANY_FILE_COLLISIONS = -1072885368_i32
  NS_E_PDA_CANNOT_TRANSCODE = -1072885367_i32
  NS_E_PDA_TOO_MANY_FILES_IN_DIRECTORY = -1072885366_i32
  NS_E_PROCESSINGSHOWSYNCWIZARD = -1072885365_i32
  NS_E_PDA_TRANSCODE_NOT_PERMITTED = -1072885364_i32
  NS_E_PDA_INITIALIZINGDEVICES = -1072885363_i32
  NS_E_PDA_OBSOLETE_SP = -1072885362_i32
  NS_E_PDA_TITLE_COLLISION = -1072885361_i32
  NS_E_PDA_DEVICESUPPORTDISABLED = -1072885360_i32
  NS_E_PDA_NO_LONGER_AVAILABLE = -1072885359_i32
  NS_E_PDA_ENCODER_NOT_RESPONDING = -1072885358_i32
  NS_E_PDA_CANNOT_SYNC_FROM_LOCATION = -1072885357_i32
  NS_E_WMP_PROTOCOL_PROBLEM = -1072885356_i32
  NS_E_WMP_NO_DISK_SPACE = -1072885355_i32
  NS_E_WMP_LOGON_FAILURE = -1072885354_i32
  NS_E_WMP_CANNOT_FIND_FILE = -1072885353_i32
  NS_E_WMP_SERVER_INACCESSIBLE = -1072885352_i32
  NS_E_WMP_UNSUPPORTED_FORMAT = -1072885351_i32
  NS_E_WMP_DSHOW_UNSUPPORTED_FORMAT = -1072885350_i32
  NS_E_WMP_PLAYLIST_EXISTS = -1072885349_i32
  NS_E_WMP_NONMEDIA_FILES = -1072885348_i32
  NS_E_WMP_INVALID_ASX = -1072885347_i32
  NS_E_WMP_ALREADY_IN_USE = -1072885346_i32
  NS_E_WMP_IMAPI_FAILURE = -1072885345_i32
  NS_E_WMP_WMDM_FAILURE = -1072885344_i32
  NS_E_WMP_CODEC_NEEDED_WITH_4CC = -1072885343_i32
  NS_E_WMP_CODEC_NEEDED_WITH_FORMATTAG = -1072885342_i32
  NS_E_WMP_MSSAP_NOT_AVAILABLE = -1072885341_i32
  NS_E_WMP_WMDM_INTERFACEDEAD = -1072885340_i32
  NS_E_WMP_WMDM_NOTCERTIFIED = -1072885339_i32
  NS_E_WMP_WMDM_LICENSE_NOTEXIST = -1072885338_i32
  NS_E_WMP_WMDM_LICENSE_EXPIRED = -1072885337_i32
  NS_E_WMP_WMDM_BUSY = -1072885336_i32
  NS_E_WMP_WMDM_NORIGHTS = -1072885335_i32
  NS_E_WMP_WMDM_INCORRECT_RIGHTS = -1072885334_i32
  NS_E_WMP_IMAPI_GENERIC = -1072885333_i32
  NS_E_WMP_IMAPI_DEVICE_NOTPRESENT = -1072885331_i32
  NS_E_WMP_IMAPI_DEVICE_BUSY = -1072885330_i32
  NS_E_WMP_IMAPI_LOSS_OF_STREAMING = -1072885329_i32
  NS_E_WMP_SERVER_UNAVAILABLE = -1072885328_i32
  NS_E_WMP_FILE_OPEN_FAILED = -1072885327_i32
  NS_E_WMP_VERIFY_ONLINE = -1072885326_i32
  NS_E_WMP_SERVER_NOT_RESPONDING = -1072885325_i32
  NS_E_WMP_DRM_CORRUPT_BACKUP = -1072885324_i32
  NS_E_WMP_DRM_LICENSE_SERVER_UNAVAILABLE = -1072885323_i32
  NS_E_WMP_NETWORK_FIREWALL = -1072885322_i32
  NS_E_WMP_NO_REMOVABLE_MEDIA = -1072885321_i32
  NS_E_WMP_PROXY_CONNECT_TIMEOUT = -1072885320_i32
  NS_E_WMP_NEED_UPGRADE = -1072885319_i32
  NS_E_WMP_AUDIO_HW_PROBLEM = -1072885318_i32
  NS_E_WMP_INVALID_PROTOCOL = -1072885317_i32
  NS_E_WMP_INVALID_LIBRARY_ADD = -1072885316_i32
  NS_E_WMP_MMS_NOT_SUPPORTED = -1072885315_i32
  NS_E_WMP_NO_PROTOCOLS_SELECTED = -1072885314_i32
  NS_E_WMP_GOFULLSCREEN_FAILED = -1072885313_i32
  NS_E_WMP_NETWORK_ERROR = -1072885312_i32
  NS_E_WMP_CONNECT_TIMEOUT = -1072885311_i32
  NS_E_WMP_MULTICAST_DISABLED = -1072885310_i32
  NS_E_WMP_SERVER_DNS_TIMEOUT = -1072885309_i32
  NS_E_WMP_PROXY_NOT_FOUND = -1072885308_i32
  NS_E_WMP_TAMPERED_CONTENT = -1072885307_i32
  NS_E_WMP_OUTOFMEMORY = -1072885306_i32
  NS_E_WMP_AUDIO_CODEC_NOT_INSTALLED = -1072885305_i32
  NS_E_WMP_VIDEO_CODEC_NOT_INSTALLED = -1072885304_i32
  NS_E_WMP_IMAPI_DEVICE_INVALIDTYPE = -1072885303_i32
  NS_E_WMP_DRM_DRIVER_AUTH_FAILURE = -1072885302_i32
  NS_E_WMP_NETWORK_RESOURCE_FAILURE = -1072885301_i32
  NS_E_WMP_UPGRADE_APPLICATION = -1072885300_i32
  NS_E_WMP_UNKNOWN_ERROR = -1072885299_i32
  NS_E_WMP_INVALID_KEY = -1072885298_i32
  NS_E_WMP_CD_ANOTHER_USER = -1072885297_i32
  NS_E_WMP_DRM_NEEDS_AUTHORIZATION = -1072885296_i32
  NS_E_WMP_BAD_DRIVER = -1072885295_i32
  NS_E_WMP_ACCESS_DENIED = -1072885294_i32
  NS_E_WMP_LICENSE_RESTRICTS = -1072885293_i32
  NS_E_WMP_INVALID_REQUEST = -1072885292_i32
  NS_E_WMP_CD_STASH_NO_SPACE = -1072885291_i32
  NS_E_WMP_DRM_NEW_HARDWARE = -1072885290_i32
  NS_E_WMP_DRM_INVALID_SIG = -1072885289_i32
  NS_E_WMP_DRM_CANNOT_RESTORE = -1072885288_i32
  NS_E_WMP_BURN_DISC_OVERFLOW = -1072885287_i32
  NS_E_WMP_DRM_GENERIC_LICENSE_FAILURE = -1072885286_i32
  NS_E_WMP_DRM_NO_SECURE_CLOCK = -1072885285_i32
  NS_E_WMP_DRM_NO_RIGHTS = -1072885284_i32
  NS_E_WMP_DRM_INDIV_FAILED = -1072885283_i32
  NS_E_WMP_SERVER_NONEWCONNECTIONS = -1072885282_i32
  NS_E_WMP_MULTIPLE_ERROR_IN_PLAYLIST = -1072885281_i32
  NS_E_WMP_IMAPI2_ERASE_FAIL = -1072885280_i32
  NS_E_WMP_IMAPI2_ERASE_DEVICE_BUSY = -1072885279_i32
  NS_E_WMP_DRM_COMPONENT_FAILURE = -1072885278_i32
  NS_E_WMP_DRM_NO_DEVICE_CERT = -1072885277_i32
  NS_E_WMP_SERVER_SECURITY_ERROR = -1072885276_i32
  NS_E_WMP_AUDIO_DEVICE_LOST = -1072885275_i32
  NS_E_WMP_IMAPI_MEDIA_INCOMPATIBLE = -1072885274_i32
  NS_E_SYNCWIZ_DEVICE_FULL = -1072885266_i32
  NS_E_SYNCWIZ_CANNOT_CHANGE_SETTINGS = -1072885265_i32
  NS_E_TRANSCODE_DELETECACHEERROR = -1072885264_i32
  NS_E_CD_NO_BUFFERS_READ = -1072885256_i32
  NS_E_CD_EMPTY_TRACK_QUEUE = -1072885255_i32
  NS_E_CD_NO_READER = -1072885254_i32
  NS_E_CD_ISRC_INVALID = -1072885253_i32
  NS_E_CD_MEDIA_CATALOG_NUMBER_INVALID = -1072885252_i32
  NS_E_SLOW_READ_DIGITAL_WITH_ERRORCORRECTION = -1072885251_i32
  NS_E_CD_SPEEDDETECT_NOT_ENOUGH_READS = -1072885250_i32
  NS_E_CD_QUEUEING_DISABLED = -1072885249_i32
  NS_E_WMP_DRM_ACQUIRING_LICENSE = -1072885246_i32
  NS_E_WMP_DRM_LICENSE_EXPIRED = -1072885245_i32
  NS_E_WMP_DRM_LICENSE_NOTACQUIRED = -1072885244_i32
  NS_E_WMP_DRM_LICENSE_NOTENABLED = -1072885243_i32
  NS_E_WMP_DRM_LICENSE_UNUSABLE = -1072885242_i32
  NS_E_WMP_DRM_LICENSE_CONTENT_REVOKED = -1072885241_i32
  NS_E_WMP_DRM_LICENSE_NOSAP = -1072885240_i32
  NS_E_WMP_DRM_UNABLE_TO_ACQUIRE_LICENSE = -1072885239_i32
  NS_E_WMP_LICENSE_REQUIRED = -1072885238_i32
  NS_E_WMP_PROTECTED_CONTENT = -1072885237_i32
  NS_E_WMP_POLICY_VALUE_NOT_CONFIGURED = -1072885206_i32
  NS_E_PDA_CANNOT_SYNC_FROM_INTERNET = -1072885196_i32
  NS_E_PDA_CANNOT_SYNC_INVALID_PLAYLIST = -1072885195_i32
  NS_E_PDA_FAILED_TO_SYNCHRONIZE_FILE = -1072885194_i32
  NS_E_PDA_SYNC_FAILED = -1072885193_i32
  NS_E_PDA_DELETE_FAILED = -1072885192_i32
  NS_E_PDA_FAILED_TO_RETRIEVE_FILE = -1072885191_i32
  NS_E_PDA_DEVICE_NOT_RESPONDING = -1072885190_i32
  NS_E_PDA_FAILED_TO_TRANSCODE_PHOTO = -1072885189_i32
  NS_E_PDA_FAILED_TO_ENCRYPT_TRANSCODED_FILE = -1072885188_i32
  NS_E_PDA_CANNOT_TRANSCODE_TO_AUDIO = -1072885187_i32
  NS_E_PDA_CANNOT_TRANSCODE_TO_VIDEO = -1072885186_i32
  NS_E_PDA_CANNOT_TRANSCODE_TO_IMAGE = -1072885185_i32
  NS_E_PDA_RETRIEVED_FILE_FILENAME_TOO_LONG = -1072885184_i32
  NS_E_PDA_CEWMDM_DRM_ERROR = -1072885183_i32
  NS_E_INCOMPLETE_PLAYLIST = -1072885182_i32
  NS_E_PDA_SYNC_RUNNING = -1072885181_i32
  NS_E_PDA_SYNC_LOGIN_ERROR = -1072885180_i32
  NS_E_PDA_TRANSCODE_CODEC_NOT_FOUND = -1072885179_i32
  NS_E_CANNOT_SYNC_DRM_TO_NON_JANUS_DEVICE = -1072885178_i32
  NS_E_CANNOT_SYNC_PREVIOUS_SYNC_RUNNING = -1072885177_i32
  NS_E_WMP_HWND_NOTFOUND = -1072885156_i32
  NS_E_BKGDOWNLOAD_WRONG_NO_FILES = -1072885155_i32
  NS_E_BKGDOWNLOAD_COMPLETECANCELLEDJOB = -1072885154_i32
  NS_E_BKGDOWNLOAD_CANCELCOMPLETEDJOB = -1072885153_i32
  NS_E_BKGDOWNLOAD_NOJOBPOINTER = -1072885152_i32
  NS_E_BKGDOWNLOAD_INVALIDJOBSIGNATURE = -1072885151_i32
  NS_E_BKGDOWNLOAD_FAILED_TO_CREATE_TEMPFILE = -1072885150_i32
  NS_E_BKGDOWNLOAD_PLUGIN_FAILEDINITIALIZE = -1072885149_i32
  NS_E_BKGDOWNLOAD_PLUGIN_FAILEDTOMOVEFILE = -1072885148_i32
  NS_E_BKGDOWNLOAD_CALLFUNCFAILED = -1072885147_i32
  NS_E_BKGDOWNLOAD_CALLFUNCTIMEOUT = -1072885146_i32
  NS_E_BKGDOWNLOAD_CALLFUNCENDED = -1072885145_i32
  NS_E_BKGDOWNLOAD_WMDUNPACKFAILED = -1072885144_i32
  NS_E_BKGDOWNLOAD_FAILEDINITIALIZE = -1072885143_i32
  NS_E_INTERFACE_NOT_REGISTERED_IN_GIT = -1072885142_i32
  NS_E_BKGDOWNLOAD_INVALID_FILE_NAME = -1072885141_i32
  NS_E_IMAGE_DOWNLOAD_FAILED = -1072885106_i32
  NS_E_WMP_UDRM_NOUSERLIST = -1072885056_i32
  NS_E_WMP_DRM_NOT_ACQUIRING = -1072885055_i32
  NS_E_WMP_BSTR_TOO_LONG = -1072885006_i32
  NS_E_WMP_AUTOPLAY_INVALID_STATE = -1072884996_i32
  NS_E_WMP_COMPONENT_REVOKED = -1072884986_i32
  NS_E_CURL_NOTSAFE = -1072884956_i32
  NS_E_CURL_INVALIDCHAR = -1072884955_i32
  NS_E_CURL_INVALIDHOSTNAME = -1072884954_i32
  NS_E_CURL_INVALIDPATH = -1072884953_i32
  NS_E_CURL_INVALIDSCHEME = -1072884952_i32
  NS_E_CURL_INVALIDURL = -1072884951_i32
  NS_E_CURL_CANTWALK = -1072884949_i32
  NS_E_CURL_INVALIDPORT = -1072884948_i32
  NS_E_CURLHELPER_NOTADIRECTORY = -1072884947_i32
  NS_E_CURLHELPER_NOTAFILE = -1072884946_i32
  NS_E_CURL_CANTDECODE = -1072884945_i32
  NS_E_CURLHELPER_NOTRELATIVE = -1072884944_i32
  NS_E_CURL_INVALIDBUFFERSIZE = -1072884943_i32
  NS_E_SUBSCRIPTIONSERVICE_PLAYBACK_DISALLOWED = -1072884906_i32
  NS_E_CANNOT_BUY_OR_DOWNLOAD_FROM_MULTIPLE_SERVICES = -1072884905_i32
  NS_E_CANNOT_BUY_OR_DOWNLOAD_CONTENT = -1072884904_i32
  NS_S_TRACK_BUY_REQUIRES_ALBUM_PURCHASE = 856921_i32
  NS_E_NOT_CONTENT_PARTNER_TRACK = -1072884902_i32
  NS_E_TRACK_DOWNLOAD_REQUIRES_ALBUM_PURCHASE = -1072884901_i32
  NS_E_TRACK_DOWNLOAD_REQUIRES_PURCHASE = -1072884900_i32
  NS_E_TRACK_PURCHASE_MAXIMUM_EXCEEDED = -1072884899_i32
  NS_S_NAVIGATION_COMPLETE_WITH_ERRORS = 856926_i32
  NS_E_SUBSCRIPTIONSERVICE_LOGIN_FAILED = -1072884897_i32
  NS_E_SUBSCRIPTIONSERVICE_DOWNLOAD_TIMEOUT = -1072884896_i32
  NS_S_TRACK_ALREADY_DOWNLOADED = 856929_i32
  NS_E_CONTENT_PARTNER_STILL_INITIALIZING = -1072884894_i32
  NS_E_OPEN_CONTAINING_FOLDER_FAILED = -1072884893_i32
  NS_E_ADVANCEDEDIT_TOO_MANY_PICTURES = -1072884886_i32
  NS_E_REDIRECT = -1072884856_i32
  NS_E_STALE_PRESENTATION = -1072884855_i32
  NS_E_NAMESPACE_WRONG_PERSIST = -1072884854_i32
  NS_E_NAMESPACE_WRONG_TYPE = -1072884853_i32
  NS_E_NAMESPACE_NODE_CONFLICT = -1072884852_i32
  NS_E_NAMESPACE_NODE_NOT_FOUND = -1072884851_i32
  NS_E_NAMESPACE_BUFFER_TOO_SMALL = -1072884850_i32
  NS_E_NAMESPACE_TOO_MANY_CALLBACKS = -1072884849_i32
  NS_E_NAMESPACE_DUPLICATE_CALLBACK = -1072884848_i32
  NS_E_NAMESPACE_CALLBACK_NOT_FOUND = -1072884847_i32
  NS_E_NAMESPACE_NAME_TOO_LONG = -1072884846_i32
  NS_E_NAMESPACE_DUPLICATE_NAME = -1072884845_i32
  NS_E_NAMESPACE_EMPTY_NAME = -1072884844_i32
  NS_E_NAMESPACE_INDEX_TOO_LARGE = -1072884843_i32
  NS_E_NAMESPACE_BAD_NAME = -1072884842_i32
  NS_E_NAMESPACE_WRONG_SECURITY = -1072884841_i32
  NS_E_CACHE_ARCHIVE_CONFLICT = -1072884756_i32
  NS_E_CACHE_ORIGIN_SERVER_NOT_FOUND = -1072884755_i32
  NS_E_CACHE_ORIGIN_SERVER_TIMEOUT = -1072884754_i32
  NS_E_CACHE_NOT_BROADCAST = -1072884753_i32
  NS_E_CACHE_CANNOT_BE_CACHED = -1072884752_i32
  NS_E_CACHE_NOT_MODIFIED = -1072884751_i32
  NS_E_CANNOT_REMOVE_PUBLISHING_POINT = -1072884656_i32
  NS_E_CANNOT_REMOVE_PLUGIN = -1072884655_i32
  NS_E_WRONG_PUBLISHING_POINT_TYPE = -1072884654_i32
  NS_E_UNSUPPORTED_LOAD_TYPE = -1072884653_i32
  NS_E_INVALID_PLUGIN_LOAD_TYPE_CONFIGURATION = -1072884652_i32
  NS_E_INVALID_PUBLISHING_POINT_NAME = -1072884651_i32
  NS_E_TOO_MANY_MULTICAST_SINKS = -1072884650_i32
  NS_E_PUBLISHING_POINT_INVALID_REQUEST_WHILE_STARTED = -1072884649_i32
  NS_E_MULTICAST_PLUGIN_NOT_ENABLED = -1072884648_i32
  NS_E_INVALID_OPERATING_SYSTEM_VERSION = -1072884647_i32
  NS_E_PUBLISHING_POINT_REMOVED = -1072884646_i32
  NS_E_INVALID_PUSH_PUBLISHING_POINT_START_REQUEST = -1072884645_i32
  NS_E_UNSUPPORTED_LANGUAGE = -1072884644_i32
  NS_E_WRONG_OS_VERSION = -1072884643_i32
  NS_E_PUBLISHING_POINT_STOPPED = -1072884642_i32
  NS_E_PLAYLIST_ENTRY_ALREADY_PLAYING = -1072884556_i32
  NS_E_EMPTY_PLAYLIST = -1072884555_i32
  NS_E_PLAYLIST_PARSE_FAILURE = -1072884554_i32
  NS_E_PLAYLIST_UNSUPPORTED_ENTRY = -1072884553_i32
  NS_E_PLAYLIST_ENTRY_NOT_IN_PLAYLIST = -1072884552_i32
  NS_E_PLAYLIST_ENTRY_SEEK = -1072884551_i32
  NS_E_PLAYLIST_RECURSIVE_PLAYLISTS = -1072884550_i32
  NS_E_PLAYLIST_TOO_MANY_NESTED_PLAYLISTS = -1072884549_i32
  NS_E_PLAYLIST_SHUTDOWN = -1072884548_i32
  NS_E_PLAYLIST_END_RECEDING = -1072884547_i32
  NS_I_PLAYLIST_CHANGE_RECEDING = 1074599102_i32
  NS_E_DATAPATH_NO_SINK = -1072884456_i32
  NS_S_PUBLISHING_POINT_STARTED_WITH_FAILED_SINKS = 857369_i32
  NS_E_INVALID_PUSH_TEMPLATE = -1072884454_i32
  NS_E_INVALID_PUSH_PUBLISHING_POINT = -1072884453_i32
  NS_E_CRITICAL_ERROR = -1072884452_i32
  NS_E_NO_NEW_CONNECTIONS = -1072884451_i32
  NS_E_WSX_INVALID_VERSION = -1072884450_i32
  NS_E_HEADER_MISMATCH = -1072884449_i32
  NS_E_PUSH_DUPLICATE_PUBLISHING_POINT_NAME = -1072884448_i32
  NS_E_NO_SCRIPT_ENGINE = -1072884356_i32
  NS_E_PLUGIN_ERROR_REPORTED = -1072884355_i32
  NS_E_SOURCE_PLUGIN_NOT_FOUND = -1072884354_i32
  NS_E_PLAYLIST_PLUGIN_NOT_FOUND = -1072884353_i32
  NS_E_DATA_SOURCE_ENUMERATION_NOT_SUPPORTED = -1072884352_i32
  NS_E_MEDIA_PARSER_INVALID_FORMAT = -1072884351_i32
  NS_E_SCRIPT_DEBUGGER_NOT_INSTALLED = -1072884350_i32
  NS_E_FEATURE_REQUIRES_ENTERPRISE_SERVER = -1072884349_i32
  NS_E_WIZARD_RUNNING = -1072884348_i32
  NS_E_INVALID_LOG_URL = -1072884347_i32
  NS_E_INVALID_MTU_RANGE = -1072884346_i32
  NS_E_INVALID_PLAY_STATISTICS = -1072884345_i32
  NS_E_LOG_NEED_TO_BE_SKIPPED = -1072884344_i32
  NS_E_HTTP_TEXT_DATACONTAINER_SIZE_LIMIT_EXCEEDED = -1072884343_i32
  NS_E_PORT_IN_USE = -1072884342_i32
  NS_E_PORT_IN_USE_HTTP = -1072884341_i32
  NS_E_HTTP_TEXT_DATACONTAINER_INVALID_SERVER_RESPONSE = -1072884340_i32
  NS_E_ARCHIVE_REACH_QUOTA = -1072884339_i32
  NS_E_ARCHIVE_ABORT_DUE_TO_BCAST = -1072884338_i32
  NS_E_ARCHIVE_GAP_DETECTED = -1072884337_i32
  NS_E_AUTHORIZATION_FILE_NOT_FOUND = -1072884336_i32
  NS_E_BAD_MARKIN = -1072882856_i32
  NS_E_BAD_MARKOUT = -1072882855_i32
  NS_E_NOMATCHING_MEDIASOURCE = -1072882854_i32
  NS_E_UNSUPPORTED_SOURCETYPE = -1072882853_i32
  NS_E_TOO_MANY_AUDIO = -1072882852_i32
  NS_E_TOO_MANY_VIDEO = -1072882851_i32
  NS_E_NOMATCHING_ELEMENT = -1072882850_i32
  NS_E_MISMATCHED_MEDIACONTENT = -1072882849_i32
  NS_E_CANNOT_DELETE_ACTIVE_SOURCEGROUP = -1072882848_i32
  NS_E_AUDIODEVICE_BUSY = -1072882847_i32
  NS_E_AUDIODEVICE_UNEXPECTED = -1072882846_i32
  NS_E_AUDIODEVICE_BADFORMAT = -1072882845_i32
  NS_E_VIDEODEVICE_BUSY = -1072882844_i32
  NS_E_VIDEODEVICE_UNEXPECTED = -1072882843_i32
  NS_E_INVALIDCALL_WHILE_ENCODER_RUNNING = -1072882842_i32
  NS_E_NO_PROFILE_IN_SOURCEGROUP = -1072882841_i32
  NS_E_VIDEODRIVER_UNSTABLE = -1072882840_i32
  NS_E_VIDCAPSTARTFAILED = -1072882839_i32
  NS_E_VIDSOURCECOMPRESSION = -1072882838_i32
  NS_E_VIDSOURCESIZE = -1072882837_i32
  NS_E_ICMQUERYFORMAT = -1072882836_i32
  NS_E_VIDCAPCREATEWINDOW = -1072882835_i32
  NS_E_VIDCAPDRVINUSE = -1072882834_i32
  NS_E_NO_MEDIAFORMAT_IN_SOURCE = -1072882833_i32
  NS_E_NO_VALID_OUTPUT_STREAM = -1072882832_i32
  NS_E_NO_VALID_SOURCE_PLUGIN = -1072882831_i32
  NS_E_NO_ACTIVE_SOURCEGROUP = -1072882830_i32
  NS_E_NO_SCRIPT_STREAM = -1072882829_i32
  NS_E_INVALIDCALL_WHILE_ARCHIVAL_RUNNING = -1072882828_i32
  NS_E_INVALIDPACKETSIZE = -1072882827_i32
  NS_E_PLUGIN_CLSID_INVALID = -1072882826_i32
  NS_E_UNSUPPORTED_ARCHIVETYPE = -1072882825_i32
  NS_E_UNSUPPORTED_ARCHIVEOPERATION = -1072882824_i32
  NS_E_ARCHIVE_FILENAME_NOTSET = -1072882823_i32
  NS_E_SOURCEGROUP_NOTPREPARED = -1072882822_i32
  NS_E_PROFILE_MISMATCH = -1072882821_i32
  NS_E_INCORRECTCLIPSETTINGS = -1072882820_i32
  NS_E_NOSTATSAVAILABLE = -1072882819_i32
  NS_E_NOTARCHIVING = -1072882818_i32
  NS_E_INVALIDCALL_WHILE_ENCODER_STOPPED = -1072882817_i32
  NS_E_NOSOURCEGROUPS = -1072882816_i32
  NS_E_INVALIDINPUTFPS = -1072882815_i32
  NS_E_NO_DATAVIEW_SUPPORT = -1072882814_i32
  NS_E_CODEC_UNAVAILABLE = -1072882813_i32
  NS_E_ARCHIVE_SAME_AS_INPUT = -1072882812_i32
  NS_E_SOURCE_NOTSPECIFIED = -1072882811_i32
  NS_E_NO_REALTIME_TIMECOMPRESSION = -1072882810_i32
  NS_E_UNSUPPORTED_ENCODER_DEVICE = -1072882809_i32
  NS_E_UNEXPECTED_DISPLAY_SETTINGS = -1072882808_i32
  NS_E_NO_AUDIODATA = -1072882807_i32
  NS_E_INPUTSOURCE_PROBLEM = -1072882806_i32
  NS_E_WME_VERSION_MISMATCH = -1072882805_i32
  NS_E_NO_REALTIME_PREPROCESS = -1072882804_i32
  NS_E_NO_REPEAT_PREPROCESS = -1072882803_i32
  NS_E_CANNOT_PAUSE_LIVEBROADCAST = -1072882802_i32
  NS_E_DRM_PROFILE_NOT_SET = -1072882801_i32
  NS_E_DUPLICATE_DRMPROFILE = -1072882800_i32
  NS_E_INVALID_DEVICE = -1072882799_i32
  NS_E_SPEECHEDL_ON_NON_MIXEDMODE = -1072882798_i32
  NS_E_DRM_PASSWORD_TOO_LONG = -1072882797_i32
  NS_E_DEVCONTROL_FAILED_SEEK = -1072882796_i32
  NS_E_INTERLACE_REQUIRE_SAMESIZE = -1072882795_i32
  NS_E_TOO_MANY_DEVICECONTROL = -1072882794_i32
  NS_E_NO_MULTIPASS_FOR_LIVEDEVICE = -1072882793_i32
  NS_E_MISSING_AUDIENCE = -1072882792_i32
  NS_E_AUDIENCE_CONTENTTYPE_MISMATCH = -1072882791_i32
  NS_E_MISSING_SOURCE_INDEX = -1072882790_i32
  NS_E_NUM_LANGUAGE_MISMATCH = -1072882789_i32
  NS_E_LANGUAGE_MISMATCH = -1072882788_i32
  NS_E_VBRMODE_MISMATCH = -1072882787_i32
  NS_E_INVALID_INPUT_AUDIENCE_INDEX = -1072882786_i32
  NS_E_INVALID_INPUT_LANGUAGE = -1072882785_i32
  NS_E_INVALID_INPUT_STREAM = -1072882784_i32
  NS_E_EXPECT_MONO_WAV_INPUT = -1072882783_i32
  NS_E_INPUT_WAVFORMAT_MISMATCH = -1072882782_i32
  NS_E_RECORDQ_DISK_FULL = -1072882781_i32
  NS_E_NO_PAL_INVERSE_TELECINE = -1072882780_i32
  NS_E_ACTIVE_SG_DEVICE_DISCONNECTED = -1072882779_i32
  NS_E_ACTIVE_SG_DEVICE_CONTROL_DISCONNECTED = -1072882778_i32
  NS_E_NO_FRAMES_SUBMITTED_TO_ANALYZER = -1072882777_i32
  NS_E_INPUT_DOESNOT_SUPPORT_SMPTE = -1072882776_i32
  NS_E_NO_SMPTE_WITH_MULTIPLE_SOURCEGROUPS = -1072882775_i32
  NS_E_BAD_CONTENTEDL = -1072882774_i32
  NS_E_INTERLACEMODE_MISMATCH = -1072882773_i32
  NS_E_NONSQUAREPIXELMODE_MISMATCH = -1072882772_i32
  NS_E_SMPTEMODE_MISMATCH = -1072882771_i32
  NS_E_END_OF_TAPE = -1072882770_i32
  NS_E_NO_MEDIA_IN_AUDIENCE = -1072882769_i32
  NS_E_NO_AUDIENCES = -1072882768_i32
  NS_E_NO_AUDIO_COMPAT = -1072882767_i32
  NS_E_INVALID_VBR_COMPAT = -1072882766_i32
  NS_E_NO_PROFILE_NAME = -1072882765_i32
  NS_E_INVALID_VBR_WITH_UNCOMP = -1072882764_i32
  NS_E_MULTIPLE_VBR_AUDIENCES = -1072882763_i32
  NS_E_UNCOMP_COMP_COMBINATION = -1072882762_i32
  NS_E_MULTIPLE_AUDIO_CODECS = -1072882761_i32
  NS_E_MULTIPLE_AUDIO_FORMATS = -1072882760_i32
  NS_E_AUDIO_BITRATE_STEPDOWN = -1072882759_i32
  NS_E_INVALID_AUDIO_PEAKRATE = -1072882758_i32
  NS_E_INVALID_AUDIO_PEAKRATE_2 = -1072882757_i32
  NS_E_INVALID_AUDIO_BUFFERMAX = -1072882756_i32
  NS_E_MULTIPLE_VIDEO_CODECS = -1072882755_i32
  NS_E_MULTIPLE_VIDEO_SIZES = -1072882754_i32
  NS_E_INVALID_VIDEO_BITRATE = -1072882753_i32
  NS_E_VIDEO_BITRATE_STEPDOWN = -1072882752_i32
  NS_E_INVALID_VIDEO_PEAKRATE = -1072882751_i32
  NS_E_INVALID_VIDEO_PEAKRATE_2 = -1072882750_i32
  NS_E_INVALID_VIDEO_WIDTH = -1072882749_i32
  NS_E_INVALID_VIDEO_HEIGHT = -1072882748_i32
  NS_E_INVALID_VIDEO_FPS = -1072882747_i32
  NS_E_INVALID_VIDEO_KEYFRAME = -1072882746_i32
  NS_E_INVALID_VIDEO_IQUALITY = -1072882745_i32
  NS_E_INVALID_VIDEO_CQUALITY = -1072882744_i32
  NS_E_INVALID_VIDEO_BUFFER = -1072882743_i32
  NS_E_INVALID_VIDEO_BUFFERMAX = -1072882742_i32
  NS_E_INVALID_VIDEO_BUFFERMAX_2 = -1072882741_i32
  NS_E_INVALID_VIDEO_WIDTH_ALIGN = -1072882740_i32
  NS_E_INVALID_VIDEO_HEIGHT_ALIGN = -1072882739_i32
  NS_E_MULTIPLE_SCRIPT_BITRATES = -1072882738_i32
  NS_E_INVALID_SCRIPT_BITRATE = -1072882737_i32
  NS_E_MULTIPLE_FILE_BITRATES = -1072882736_i32
  NS_E_INVALID_FILE_BITRATE = -1072882735_i32
  NS_E_SAME_AS_INPUT_COMBINATION = -1072882734_i32
  NS_E_SOURCE_CANNOT_LOOP = -1072882733_i32
  NS_E_INVALID_FOLDDOWN_COEFFICIENTS = -1072882732_i32
  NS_E_DRMPROFILE_NOTFOUND = -1072882731_i32
  NS_E_INVALID_TIMECODE = -1072882730_i32
  NS_E_NO_AUDIO_TIMECOMPRESSION = -1072882729_i32
  NS_E_NO_TWOPASS_TIMECOMPRESSION = -1072882728_i32
  NS_E_TIMECODE_REQUIRES_VIDEOSTREAM = -1072882727_i32
  NS_E_NO_MBR_WITH_TIMECODE = -1072882726_i32
  NS_E_INVALID_INTERLACEMODE = -1072882725_i32
  NS_E_INVALID_INTERLACE_COMPAT = -1072882724_i32
  NS_E_INVALID_NONSQUAREPIXEL_COMPAT = -1072882723_i32
  NS_E_INVALID_SOURCE_WITH_DEVICE_CONTROL = -1072882722_i32
  NS_E_CANNOT_GENERATE_BROADCAST_INFO_FOR_QUALITYVBR = -1072882721_i32
  NS_E_EXCEED_MAX_DRM_PROFILE_LIMIT = -1072882720_i32
  NS_E_DEVICECONTROL_UNSTABLE = -1072882719_i32
  NS_E_INVALID_PIXEL_ASPECT_RATIO = -1072882718_i32
  NS_E_AUDIENCE__LANGUAGE_CONTENTTYPE_MISMATCH = -1072882717_i32
  NS_E_INVALID_PROFILE_CONTENTTYPE = -1072882716_i32
  NS_E_TRANSFORM_PLUGIN_NOT_FOUND = -1072882715_i32
  NS_E_TRANSFORM_PLUGIN_INVALID = -1072882714_i32
  NS_E_EDL_REQUIRED_FOR_DEVICE_MULTIPASS = -1072882713_i32
  NS_E_INVALID_VIDEO_WIDTH_FOR_INTERLACED_ENCODING = -1072882712_i32
  NS_E_MARKIN_UNSUPPORTED = -1072882711_i32
  NS_E_DRM_INVALID_APPLICATION = -1072879855_i32
  NS_E_DRM_LICENSE_STORE_ERROR = -1072879854_i32
  NS_E_DRM_SECURE_STORE_ERROR = -1072879853_i32
  NS_E_DRM_LICENSE_STORE_SAVE_ERROR = -1072879852_i32
  NS_E_DRM_SECURE_STORE_UNLOCK_ERROR = -1072879851_i32
  NS_E_DRM_INVALID_CONTENT = -1072879850_i32
  NS_E_DRM_UNABLE_TO_OPEN_LICENSE = -1072879849_i32
  NS_E_DRM_INVALID_LICENSE = -1072879848_i32
  NS_E_DRM_INVALID_MACHINE = -1072879847_i32
  NS_E_DRM_ENUM_LICENSE_FAILED = -1072879845_i32
  NS_E_DRM_INVALID_LICENSE_REQUEST = -1072879844_i32
  NS_E_DRM_UNABLE_TO_INITIALIZE = -1072879843_i32
  NS_E_DRM_UNABLE_TO_ACQUIRE_LICENSE = -1072879842_i32
  NS_E_DRM_INVALID_LICENSE_ACQUIRED = -1072879841_i32
  NS_E_DRM_NO_RIGHTS = -1072879840_i32
  NS_E_DRM_KEY_ERROR = -1072879839_i32
  NS_E_DRM_ENCRYPT_ERROR = -1072879838_i32
  NS_E_DRM_DECRYPT_ERROR = -1072879837_i32
  NS_E_DRM_LICENSE_INVALID_XML = -1072879835_i32
  NS_S_DRM_LICENSE_ACQUIRED = 861990_i32
  NS_S_DRM_INDIVIDUALIZED = 861991_i32
  NS_E_DRM_NEEDS_INDIVIDUALIZATION = -1072879832_i32
  NS_E_DRM_ALREADY_INDIVIDUALIZED = -1072879831_i32
  NS_E_DRM_ACTION_NOT_QUERIED = -1072879830_i32
  NS_E_DRM_ACQUIRING_LICENSE = -1072879829_i32
  NS_E_DRM_INDIVIDUALIZING = -1072879828_i32
  NS_E_BACKUP_RESTORE_FAILURE = -1072879827_i32
  NS_E_BACKUP_RESTORE_BAD_REQUEST_ID = -1072879826_i32
  NS_E_DRM_PARAMETERS_MISMATCHED = -1072879825_i32
  NS_E_DRM_UNABLE_TO_CREATE_LICENSE_OBJECT = -1072879824_i32
  NS_E_DRM_UNABLE_TO_CREATE_INDI_OBJECT = -1072879823_i32
  NS_E_DRM_UNABLE_TO_CREATE_ENCRYPT_OBJECT = -1072879822_i32
  NS_E_DRM_UNABLE_TO_CREATE_DECRYPT_OBJECT = -1072879821_i32
  NS_E_DRM_UNABLE_TO_CREATE_PROPERTIES_OBJECT = -1072879820_i32
  NS_E_DRM_UNABLE_TO_CREATE_BACKUP_OBJECT = -1072879819_i32
  NS_E_DRM_INDIVIDUALIZE_ERROR = -1072879818_i32
  NS_E_DRM_LICENSE_OPEN_ERROR = -1072879817_i32
  NS_E_DRM_LICENSE_CLOSE_ERROR = -1072879816_i32
  NS_E_DRM_GET_LICENSE_ERROR = -1072879815_i32
  NS_E_DRM_QUERY_ERROR = -1072879814_i32
  NS_E_DRM_REPORT_ERROR = -1072879813_i32
  NS_E_DRM_GET_LICENSESTRING_ERROR = -1072879812_i32
  NS_E_DRM_GET_CONTENTSTRING_ERROR = -1072879811_i32
  NS_E_DRM_MONITOR_ERROR = -1072879810_i32
  NS_E_DRM_UNABLE_TO_SET_PARAMETER = -1072879809_i32
  NS_E_DRM_INVALID_APPDATA = -1072879808_i32
  NS_E_DRM_INVALID_APPDATA_VERSION = -1072879807_i32
  NS_E_DRM_BACKUP_EXISTS = -1072879806_i32
  NS_E_DRM_BACKUP_CORRUPT = -1072879805_i32
  NS_E_DRM_BACKUPRESTORE_BUSY = -1072879804_i32
  NS_E_BACKUP_RESTORE_BAD_DATA = -1072879803_i32
  NS_S_DRM_MONITOR_CANCELLED = 862022_i32
  NS_S_DRM_ACQUIRE_CANCELLED = 862023_i32
  NS_E_DRM_LICENSE_UNUSABLE = -1072879800_i32
  NS_E_DRM_INVALID_PROPERTY = -1072879799_i32
  NS_E_DRM_SECURE_STORE_NOT_FOUND = -1072879798_i32
  NS_E_DRM_CACHED_CONTENT_ERROR = -1072879797_i32
  NS_E_DRM_INDIVIDUALIZATION_INCOMPLETE = -1072879796_i32
  NS_E_DRM_DRIVER_AUTH_FAILURE = -1072879795_i32
  NS_E_DRM_NEED_UPGRADE_MSSAP = -1072879794_i32
  NS_E_DRM_REOPEN_CONTENT = -1072879793_i32
  NS_E_DRM_DRIVER_DIGIOUT_FAILURE = -1072879792_i32
  NS_E_DRM_INVALID_SECURESTORE_PASSWORD = -1072879791_i32
  NS_E_DRM_APPCERT_REVOKED = -1072879790_i32
  NS_E_DRM_RESTORE_FRAUD = -1072879789_i32
  NS_E_DRM_HARDWARE_INCONSISTENT = -1072879788_i32
  NS_E_DRM_SDMI_TRIGGER = -1072879787_i32
  NS_E_DRM_SDMI_NOMORECOPIES = -1072879786_i32
  NS_E_DRM_UNABLE_TO_CREATE_HEADER_OBJECT = -1072879785_i32
  NS_E_DRM_UNABLE_TO_CREATE_KEYS_OBJECT = -1072879784_i32
  NS_E_DRM_LICENSE_NOTACQUIRED = -1072879783_i32
  NS_E_DRM_UNABLE_TO_CREATE_CODING_OBJECT = -1072879782_i32
  NS_E_DRM_UNABLE_TO_CREATE_STATE_DATA_OBJECT = -1072879781_i32
  NS_E_DRM_BUFFER_TOO_SMALL = -1072879780_i32
  NS_E_DRM_UNSUPPORTED_PROPERTY = -1072879779_i32
  NS_E_DRM_ERROR_BAD_NET_RESP = -1072879778_i32
  NS_E_DRM_STORE_NOTALLSTORED = -1072879777_i32
  NS_E_DRM_SECURITY_COMPONENT_SIGNATURE_INVALID = -1072879776_i32
  NS_E_DRM_INVALID_DATA = -1072879775_i32
  NS_E_DRM_POLICY_DISABLE_ONLINE = -1072879774_i32
  NS_E_DRM_UNABLE_TO_CREATE_AUTHENTICATION_OBJECT = -1072879773_i32
  NS_E_DRM_NOT_CONFIGURED = -1072879772_i32
  NS_E_DRM_DEVICE_ACTIVATION_CANCELED = -1072879771_i32
  NS_E_BACKUP_RESTORE_TOO_MANY_RESETS = -1072879770_i32
  NS_E_DRM_DEBUGGING_NOT_ALLOWED = -1072879769_i32
  NS_E_DRM_OPERATION_CANCELED = -1072879768_i32
  NS_E_DRM_RESTRICTIONS_NOT_RETRIEVED = -1072879767_i32
  NS_E_DRM_UNABLE_TO_CREATE_PLAYLIST_OBJECT = -1072879766_i32
  NS_E_DRM_UNABLE_TO_CREATE_PLAYLIST_BURN_OBJECT = -1072879765_i32
  NS_E_DRM_UNABLE_TO_CREATE_DEVICE_REGISTRATION_OBJECT = -1072879764_i32
  NS_E_DRM_UNABLE_TO_CREATE_METERING_OBJECT = -1072879763_i32
  NS_S_DRM_BURNABLE_TRACK = 862062_i32
  NS_S_DRM_BURNABLE_TRACK_WITH_PLAYLIST_RESTRICTION = 862063_i32
  NS_E_DRM_TRACK_EXCEEDED_PLAYLIST_RESTICTION = -1072879760_i32
  NS_E_DRM_TRACK_EXCEEDED_TRACKBURN_RESTRICTION = -1072879759_i32
  NS_E_DRM_UNABLE_TO_GET_DEVICE_CERT = -1072879758_i32
  NS_E_DRM_UNABLE_TO_GET_SECURE_CLOCK = -1072879757_i32
  NS_E_DRM_UNABLE_TO_SET_SECURE_CLOCK = -1072879756_i32
  NS_E_DRM_UNABLE_TO_GET_SECURE_CLOCK_FROM_SERVER = -1072879755_i32
  NS_E_DRM_POLICY_METERING_DISABLED = -1072879754_i32
  NS_E_DRM_TRANSFER_CHAINED_LICENSES_UNSUPPORTED = -1072879753_i32
  NS_E_DRM_SDK_VERSIONMISMATCH = -1072879752_i32
  NS_E_DRM_LIC_NEEDS_DEVICE_CLOCK_SET = -1072879751_i32
  NS_E_LICENSE_HEADER_MISSING_URL = -1072879750_i32
  NS_E_DEVICE_NOT_WMDRM_DEVICE = -1072879749_i32
  NS_E_DRM_INVALID_APPCERT = -1072879748_i32
  NS_E_DRM_PROTOCOL_FORCEFUL_TERMINATION_ON_PETITION = -1072879747_i32
  NS_E_DRM_PROTOCOL_FORCEFUL_TERMINATION_ON_CHALLENGE = -1072879746_i32
  NS_E_DRM_CHECKPOINT_FAILED = -1072879745_i32
  NS_E_DRM_BB_UNABLE_TO_INITIALIZE = -1072879744_i32
  NS_E_DRM_UNABLE_TO_LOAD_HARDWARE_ID = -1072879743_i32
  NS_E_DRM_UNABLE_TO_OPEN_DATA_STORE = -1072879742_i32
  NS_E_DRM_DATASTORE_CORRUPT = -1072879741_i32
  NS_E_DRM_UNABLE_TO_CREATE_INMEMORYSTORE_OBJECT = -1072879740_i32
  NS_E_DRM_STUBLIB_REQUIRED = -1072879739_i32
  NS_E_DRM_UNABLE_TO_CREATE_CERTIFICATE_OBJECT = -1072879738_i32
  NS_E_DRM_MIGRATION_TARGET_NOT_ONLINE = -1072879737_i32
  NS_E_DRM_INVALID_MIGRATION_IMAGE = -1072879736_i32
  NS_E_DRM_MIGRATION_TARGET_STATES_CORRUPTED = -1072879735_i32
  NS_E_DRM_MIGRATION_IMPORTER_NOT_AVAILABLE = -1072879734_i32
  NS_DRM_E_MIGRATION_UPGRADE_WITH_DIFF_SID = -1072879733_i32
  NS_DRM_E_MIGRATION_SOURCE_MACHINE_IN_USE = -1072879732_i32
  NS_DRM_E_MIGRATION_TARGET_MACHINE_LESS_THAN_LH = -1072879731_i32
  NS_DRM_E_MIGRATION_IMAGE_ALREADY_EXISTS = -1072879730_i32
  NS_E_DRM_HARDWAREID_MISMATCH = -1072879729_i32
  NS_E_INVALID_DRMV2CLT_STUBLIB = -1072879728_i32
  NS_E_DRM_MIGRATION_INVALID_LEGACYV2_DATA = -1072879727_i32
  NS_E_DRM_MIGRATION_LICENSE_ALREADY_EXISTS = -1072879726_i32
  NS_E_DRM_MIGRATION_INVALID_LEGACYV2_SST_PASSWORD = -1072879725_i32
  NS_E_DRM_MIGRATION_NOT_SUPPORTED = -1072879724_i32
  NS_E_DRM_UNABLE_TO_CREATE_MIGRATION_IMPORTER_OBJECT = -1072879723_i32
  NS_E_DRM_CHECKPOINT_MISMATCH = -1072879722_i32
  NS_E_DRM_CHECKPOINT_CORRUPT = -1072879721_i32
  NS_E_REG_FLUSH_FAILURE = -1072879720_i32
  NS_E_HDS_KEY_MISMATCH = -1072879719_i32
  NS_E_DRM_MIGRATION_OPERATION_CANCELLED = -1072879718_i32
  NS_E_DRM_MIGRATION_OBJECT_IN_USE = -1072879717_i32
  NS_E_DRM_MALFORMED_CONTENT_HEADER = -1072879716_i32
  NS_E_DRM_LICENSE_EXPIRED = -1072879656_i32
  NS_E_DRM_LICENSE_NOTENABLED = -1072879655_i32
  NS_E_DRM_LICENSE_APPSECLOW = -1072879654_i32
  NS_E_DRM_STORE_NEEDINDI = -1072879653_i32
  NS_E_DRM_STORE_NOTALLOWED = -1072879652_i32
  NS_E_DRM_LICENSE_APP_NOTALLOWED = -1072879651_i32
  NS_S_DRM_NEEDS_INDIVIDUALIZATION = 862174_i32
  NS_E_DRM_LICENSE_CERT_EXPIRED = -1072879649_i32
  NS_E_DRM_LICENSE_SECLOW = -1072879648_i32
  NS_E_DRM_LICENSE_CONTENT_REVOKED = -1072879647_i32
  NS_E_DRM_DEVICE_NOT_REGISTERED = -1072879646_i32
  NS_E_DRM_LICENSE_NOSAP = -1072879606_i32
  NS_E_DRM_LICENSE_NOSVP = -1072879605_i32
  NS_E_DRM_LICENSE_NOWDM = -1072879604_i32
  NS_E_DRM_LICENSE_NOTRUSTEDCODEC = -1072879603_i32
  NS_E_DRM_SOURCEID_NOT_SUPPORTED = -1072879602_i32
  NS_E_DRM_NEEDS_UPGRADE_TEMPFILE = -1072879555_i32
  NS_E_DRM_NEED_UPGRADE_PD = -1072879554_i32
  NS_E_DRM_SIGNATURE_FAILURE = -1072879553_i32
  NS_E_DRM_LICENSE_SERVER_INFO_MISSING = -1072879552_i32
  NS_E_DRM_BUSY = -1072879551_i32
  NS_E_DRM_PD_TOO_MANY_DEVICES = -1072879550_i32
  NS_E_DRM_INDIV_FRAUD = -1072879549_i32
  NS_E_DRM_INDIV_NO_CABS = -1072879548_i32
  NS_E_DRM_INDIV_SERVICE_UNAVAILABLE = -1072879547_i32
  NS_E_DRM_RESTORE_SERVICE_UNAVAILABLE = -1072879546_i32
  NS_E_DRM_CLIENT_CODE_EXPIRED = -1072879545_i32
  NS_E_DRM_NO_UPLINK_LICENSE = -1072879544_i32
  NS_E_DRM_INVALID_KID = -1072879543_i32
  NS_E_DRM_LICENSE_INITIALIZATION_ERROR = -1072879542_i32
  NS_E_DRM_CHAIN_TOO_LONG = -1072879540_i32
  NS_E_DRM_UNSUPPORTED_ALGORITHM = -1072879539_i32
  NS_E_DRM_LICENSE_DELETION_ERROR = -1072879538_i32
  NS_E_DRM_INVALID_CERTIFICATE = -1072879456_i32
  NS_E_DRM_CERTIFICATE_REVOKED = -1072879455_i32
  NS_E_DRM_LICENSE_UNAVAILABLE = -1072879454_i32
  NS_E_DRM_DEVICE_LIMIT_REACHED = -1072879453_i32
  NS_E_DRM_UNABLE_TO_VERIFY_PROXIMITY = -1072879452_i32
  NS_E_DRM_MUST_REGISTER = -1072879451_i32
  NS_E_DRM_MUST_APPROVE = -1072879450_i32
  NS_E_DRM_MUST_REVALIDATE = -1072879449_i32
  NS_E_DRM_INVALID_PROXIMITY_RESPONSE = -1072879448_i32
  NS_E_DRM_INVALID_SESSION = -1072879447_i32
  NS_E_DRM_DEVICE_NOT_OPEN = -1072879446_i32
  NS_E_DRM_DEVICE_ALREADY_REGISTERED = -1072879445_i32
  NS_E_DRM_UNSUPPORTED_PROTOCOL_VERSION = -1072879444_i32
  NS_E_DRM_UNSUPPORTED_ACTION = -1072879443_i32
  NS_E_DRM_CERTIFICATE_SECURITY_LEVEL_INADEQUATE = -1072879442_i32
  NS_E_DRM_UNABLE_TO_OPEN_PORT = -1072879441_i32
  NS_E_DRM_BAD_REQUEST = -1072879440_i32
  NS_E_DRM_INVALID_CRL = -1072879439_i32
  NS_E_DRM_ATTRIBUTE_TOO_LONG = -1072879438_i32
  NS_E_DRM_EXPIRED_LICENSEBLOB = -1072879437_i32
  NS_E_DRM_INVALID_LICENSEBLOB = -1072879436_i32
  NS_E_DRM_INCLUSION_LIST_REQUIRED = -1072879435_i32
  NS_E_DRM_DRMV2CLT_REVOKED = -1072879434_i32
  NS_E_DRM_RIV_TOO_SMALL = -1072879433_i32
  NS_E_OUTPUT_PROTECTION_LEVEL_UNSUPPORTED = -1072879356_i32
  NS_E_COMPRESSED_DIGITAL_VIDEO_PROTECTION_LEVEL_UNSUPPORTED = -1072879355_i32
  NS_E_UNCOMPRESSED_DIGITAL_VIDEO_PROTECTION_LEVEL_UNSUPPORTED = -1072879354_i32
  NS_E_ANALOG_VIDEO_PROTECTION_LEVEL_UNSUPPORTED = -1072879353_i32
  NS_E_COMPRESSED_DIGITAL_AUDIO_PROTECTION_LEVEL_UNSUPPORTED = -1072879352_i32
  NS_E_UNCOMPRESSED_DIGITAL_AUDIO_PROTECTION_LEVEL_UNSUPPORTED = -1072879351_i32
  NS_E_OUTPUT_PROTECTION_SCHEME_UNSUPPORTED = -1072879350_i32
  NS_S_REBOOT_RECOMMENDED = 862968_i32
  NS_S_REBOOT_REQUIRED = 862969_i32
  NS_E_REBOOT_RECOMMENDED = -1072878854_i32
  NS_E_REBOOT_REQUIRED = -1072878853_i32
  NS_E_SETUP_INCOMPLETE = -1072878852_i32
  NS_E_SETUP_DRM_MIGRATION_FAILED = -1072878851_i32
  NS_E_SETUP_IGNORABLE_FAILURE = -1072878850_i32
  NS_E_SETUP_DRM_MIGRATION_FAILED_AND_IGNORABLE_FAILURE = -1072878849_i32
  NS_E_SETUP_BLOCKED = -1072878848_i32
  NS_E_UNKNOWN_PROTOCOL = -1072877856_i32
  NS_E_REDIRECT_TO_PROXY = -1072877855_i32
  NS_E_INTERNAL_SERVER_ERROR = -1072877854_i32
  NS_E_BAD_REQUEST = -1072877853_i32
  NS_E_ERROR_FROM_PROXY = -1072877852_i32
  NS_E_PROXY_TIMEOUT = -1072877851_i32
  NS_E_SERVER_UNAVAILABLE = -1072877850_i32
  NS_E_REFUSED_BY_SERVER = -1072877849_i32
  NS_E_INCOMPATIBLE_SERVER = -1072877848_i32
  NS_E_MULTICAST_DISABLED = -1072877847_i32
  NS_E_INVALID_REDIRECT = -1072877846_i32
  NS_E_ALL_PROTOCOLS_DISABLED = -1072877845_i32
  NS_E_MSBD_NO_LONGER_SUPPORTED = -1072877844_i32
  NS_E_PROXY_NOT_FOUND = -1072877843_i32
  NS_E_CANNOT_CONNECT_TO_PROXY = -1072877842_i32
  NS_E_SERVER_DNS_TIMEOUT = -1072877841_i32
  NS_E_PROXY_DNS_TIMEOUT = -1072877840_i32
  NS_E_CLOSED_ON_SUSPEND = -1072877839_i32
  NS_E_CANNOT_READ_PLAYLIST_FROM_MEDIASERVER = -1072877838_i32
  NS_E_SESSION_NOT_FOUND = -1072877837_i32
  NS_E_REQUIRE_STREAMING_CLIENT = -1072877836_i32
  NS_E_PLAYLIST_ENTRY_HAS_CHANGED = -1072877835_i32
  NS_E_PROXY_ACCESSDENIED = -1072877834_i32
  NS_E_PROXY_SOURCE_ACCESSDENIED = -1072877833_i32
  NS_E_NETWORK_SINK_WRITE = -1072877832_i32
  NS_E_FIREWALL = -1072877831_i32
  NS_E_MMS_NOT_SUPPORTED = -1072877830_i32
  NS_E_SERVER_ACCESSDENIED = -1072877829_i32
  NS_E_RESOURCE_GONE = -1072877828_i32
  NS_E_NO_EXISTING_PACKETIZER = -1072877827_i32
  NS_E_BAD_SYNTAX_IN_SERVER_RESPONSE = -1072877826_i32
  NS_I_RECONNECTED = 1074605823_i32
  NS_E_RESET_SOCKET_CONNECTION = -1072877824_i32
  NS_I_NOLOG_STOP = 1074605825_i32
  NS_E_TOO_MANY_HOPS = -1072877822_i32
  NS_I_EXISTING_PACKETIZER = 1074605827_i32
  NS_I_MANUAL_PROXY = 1074605828_i32
  NS_E_TOO_MUCH_DATA_FROM_SERVER = -1072877819_i32
  NS_E_CONNECT_TIMEOUT = -1072877818_i32
  NS_E_PROXY_CONNECT_TIMEOUT = -1072877817_i32
  NS_E_SESSION_INVALID = -1072877816_i32
  NS_S_EOSRECEDING = 864009_i32
  NS_E_PACKETSINK_UNKNOWN_FEC_STREAM = -1072877814_i32
  NS_E_PUSH_CANNOTCONNECT = -1072877813_i32
  NS_E_INCOMPATIBLE_PUSH_SERVER = -1072877812_i32
  NS_S_CHANGENOTICE = 864013_i32
  NS_E_END_OF_PLAYLIST = -1072876856_i32
  NS_E_USE_FILE_SOURCE = -1072876855_i32
  NS_E_PROPERTY_NOT_FOUND = -1072876854_i32
  NS_E_PROPERTY_READ_ONLY = -1072876852_i32
  NS_E_TABLE_KEY_NOT_FOUND = -1072876851_i32
  NS_E_INVALID_QUERY_OPERATOR = -1072876849_i32
  NS_E_INVALID_QUERY_PROPERTY = -1072876848_i32
  NS_E_PROPERTY_NOT_SUPPORTED = -1072876846_i32
  NS_E_SCHEMA_CLASSIFY_FAILURE = -1072876844_i32
  NS_E_METADATA_FORMAT_NOT_SUPPORTED = -1072876843_i32
  NS_E_METADATA_NO_EDITING_CAPABILITY = -1072876842_i32
  NS_E_METADATA_CANNOT_SET_LOCALE = -1072876841_i32
  NS_E_METADATA_LANGUAGE_NOT_SUPORTED = -1072876840_i32
  NS_E_METADATA_NO_RFC1766_NAME_FOR_LOCALE = -1072876839_i32
  NS_E_METADATA_NOT_AVAILABLE = -1072876838_i32
  NS_E_METADATA_CACHE_DATA_NOT_AVAILABLE = -1072876837_i32
  NS_E_METADATA_INVALID_DOCUMENT_TYPE = -1072876836_i32
  NS_E_METADATA_IDENTIFIER_NOT_AVAILABLE = -1072876835_i32
  NS_E_METADATA_CANNOT_RETRIEVE_FROM_OFFLINE_CACHE = -1072876834_i32
  VFW_HIDE_SETTINGS_PAGE = 1_u32
  VFW_HIDE_VIDEOSRC_PAGE = 2_u32
  VFW_HIDE_CAMERACONTROL_PAGE = 4_u32
  VFW_OEM_ADD_PAGE = 2147483648_u32
  VFW_USE_DEVICE_HANDLE = 1_u32
  VFW_USE_STREAM_HANDLE = 2_u32
  VFW_QUERY_DEV_CHANGED = 256_u32
  TARGET_DEVICE_FRIENDLY_NAME = "TargetDeviceFriendlyName"
  TARGET_DEVICE_OPEN_EXCLUSIVELY = "TargetDeviceOpenExclusively"
  MCIERR_INVALID_DEVICE_ID = 257_u32
  MCIERR_UNRECOGNIZED_KEYWORD = 259_u32
  MCIERR_UNRECOGNIZED_COMMAND = 261_u32
  MCIERR_HARDWARE = 262_u32
  MCIERR_INVALID_DEVICE_NAME = 263_u32
  MCIERR_OUT_OF_MEMORY = 264_u32
  MCIERR_DEVICE_OPEN = 265_u32
  MCIERR_CANNOT_LOAD_DRIVER = 266_u32
  MCIERR_MISSING_COMMAND_STRING = 267_u32
  MCIERR_PARAM_OVERFLOW = 268_u32
  MCIERR_MISSING_STRING_ARGUMENT = 269_u32
  MCIERR_BAD_INTEGER = 270_u32
  MCIERR_PARSER_INTERNAL = 271_u32
  MCIERR_DRIVER_INTERNAL = 272_u32
  MCIERR_MISSING_PARAMETER = 273_u32
  MCIERR_UNSUPPORTED_FUNCTION = 274_u32
  MCIERR_FILE_NOT_FOUND = 275_u32
  MCIERR_DEVICE_NOT_READY = 276_u32
  MCIERR_INTERNAL = 277_u32
  MCIERR_DRIVER = 278_u32
  MCIERR_CANNOT_USE_ALL = 279_u32
  MCIERR_MULTIPLE = 280_u32
  MCIERR_EXTENSION_NOT_FOUND = 281_u32
  MCIERR_OUTOFRANGE = 282_u32
  MCIERR_FLAGS_NOT_COMPATIBLE = 284_u32
  MCIERR_FILE_NOT_SAVED = 286_u32
  MCIERR_DEVICE_TYPE_REQUIRED = 287_u32
  MCIERR_DEVICE_LOCKED = 288_u32
  MCIERR_DUPLICATE_ALIAS = 289_u32
  MCIERR_BAD_CONSTANT = 290_u32
  MCIERR_MUST_USE_SHAREABLE = 291_u32
  MCIERR_MISSING_DEVICE_NAME = 292_u32
  MCIERR_BAD_TIME_FORMAT = 293_u32
  MCIERR_NO_CLOSING_QUOTE = 294_u32
  MCIERR_DUPLICATE_FLAGS = 295_u32
  MCIERR_INVALID_FILE = 296_u32
  MCIERR_NULL_PARAMETER_BLOCK = 297_u32
  MCIERR_UNNAMED_RESOURCE = 298_u32
  MCIERR_NEW_REQUIRES_ALIAS = 299_u32
  MCIERR_NOTIFY_ON_AUTO_OPEN = 300_u32
  MCIERR_NO_ELEMENT_ALLOWED = 301_u32
  MCIERR_NONAPPLICABLE_FUNCTION = 302_u32
  MCIERR_ILLEGAL_FOR_AUTO_OPEN = 303_u32
  MCIERR_FILENAME_REQUIRED = 304_u32
  MCIERR_EXTRA_CHARACTERS = 305_u32
  MCIERR_DEVICE_NOT_INSTALLED = 306_u32
  MCIERR_GET_CD = 307_u32
  MCIERR_SET_CD = 308_u32
  MCIERR_SET_DRIVE = 309_u32
  MCIERR_DEVICE_LENGTH = 310_u32
  MCIERR_DEVICE_ORD_LENGTH = 311_u32
  MCIERR_NO_INTEGER = 312_u32
  MCIERR_WAVE_OUTPUTSINUSE = 320_u32
  MCIERR_WAVE_SETOUTPUTINUSE = 321_u32
  MCIERR_WAVE_INPUTSINUSE = 322_u32
  MCIERR_WAVE_SETINPUTINUSE = 323_u32
  MCIERR_WAVE_OUTPUTUNSPECIFIED = 324_u32
  MCIERR_WAVE_INPUTUNSPECIFIED = 325_u32
  MCIERR_WAVE_OUTPUTSUNSUITABLE = 326_u32
  MCIERR_WAVE_SETOUTPUTUNSUITABLE = 327_u32
  MCIERR_WAVE_INPUTSUNSUITABLE = 328_u32
  MCIERR_WAVE_SETINPUTUNSUITABLE = 329_u32
  MCIERR_SEQ_DIV_INCOMPATIBLE = 336_u32
  MCIERR_SEQ_PORT_INUSE = 337_u32
  MCIERR_SEQ_PORT_NONEXISTENT = 338_u32
  MCIERR_SEQ_PORT_MAPNODEVICE = 339_u32
  MCIERR_SEQ_PORT_MISCERROR = 340_u32
  MCIERR_SEQ_TIMER = 341_u32
  MCIERR_SEQ_PORTUNSPECIFIED = 342_u32
  MCIERR_SEQ_NOMIDIPRESENT = 343_u32
  MCIERR_NO_WINDOW = 346_u32
  MCIERR_CREATEWINDOW = 347_u32
  MCIERR_FILE_READ = 348_u32
  MCIERR_FILE_WRITE = 349_u32
  MCIERR_NO_IDENTITY = 350_u32
  MCIERR_CUSTOM_DRIVER_BASE = 512_u32
  MCI_FIRST = 2048_u32
  MCI_ESCAPE = 2053_u32
  MCI_INFO = 2058_u32
  MCI_GETDEVCAPS = 2059_u32
  MCI_SPIN = 2060_u32
  MCI_SET = 2061_u32
  MCI_SYSINFO = 2064_u32
  MCI_BREAK = 2065_u32
  MCI_STATUS = 2068_u32
  MCI_CUE = 2096_u32
  MCI_REALIZE = 2112_u32
  MCI_WINDOW = 2113_u32
  MCI_PUT = 2114_u32
  MCI_WHERE = 2115_u32
  MCI_FREEZE = 2116_u32
  MCI_UNFREEZE = 2117_u32
  MCI_LOAD = 2128_u32
  MCI_UPDATE = 2132_u32
  MCI_USER_MESSAGES = 3072_u32
  MCI_LAST = 4095_u32
  MCI_DEVTYPE_VCR = 513_u32
  MCI_DEVTYPE_VIDEODISC = 514_u32
  MCI_DEVTYPE_OVERLAY = 515_u32
  MCI_DEVTYPE_CD_AUDIO = 516_u32
  MCI_DEVTYPE_DAT = 517_u32
  MCI_DEVTYPE_SCANNER = 518_u32
  MCI_DEVTYPE_ANIMATION = 519_u32
  MCI_DEVTYPE_DIGITAL_VIDEO = 520_u32
  MCI_DEVTYPE_OTHER = 521_u32
  MCI_DEVTYPE_WAVEFORM_AUDIO = 522_u32
  MCI_DEVTYPE_SEQUENCER = 523_u32
  MCI_DEVTYPE_FIRST = 513_u32
  MCI_DEVTYPE_LAST = 523_u32
  MCI_DEVTYPE_FIRST_USER = 4096_u32
  MCI_FORMAT_MILLISECONDS = 0_u32
  MCI_FORMAT_HMS = 1_u32
  MCI_FORMAT_MSF = 2_u32
  MCI_FORMAT_FRAMES = 3_u32
  MCI_FORMAT_SMPTE_24 = 4_u32
  MCI_FORMAT_SMPTE_25 = 5_u32
  MCI_FORMAT_SMPTE_30 = 6_u32
  MCI_FORMAT_SMPTE_30DROP = 7_u32
  MCI_FORMAT_BYTES = 8_u32
  MCI_FORMAT_SAMPLES = 9_u32
  MCI_FORMAT_TMSF = 10_u32
  MCI_NOTIFY_SUCCESSFUL = 1_u32
  MCI_NOTIFY_SUPERSEDED = 2_u32
  MCI_NOTIFY_ABORTED = 4_u32
  MCI_NOTIFY_FAILURE = 8_u32
  MCI_NOTIFY = 1_i32
  MCI_WAIT = 2_i32
  MCI_FROM = 4_i32
  MCI_TO = 8_i32
  MCI_TRACK = 16_i32
  MCI_OPEN_SHAREABLE = 256_i32
  MCI_OPEN_ELEMENT = 512_i32
  MCI_OPEN_ALIAS = 1024_i32
  MCI_OPEN_ELEMENT_ID = 2048_i32
  MCI_OPEN_TYPE_ID = 4096_i32
  MCI_OPEN_TYPE = 8192_i32
  MCI_SEEK_TO_START = 256_i32
  MCI_SEEK_TO_END = 512_i32
  MCI_STATUS_ITEM = 256_i32
  MCI_STATUS_START = 512_i32
  MCI_STATUS_LENGTH = 1_i32
  MCI_STATUS_POSITION = 2_i32
  MCI_STATUS_NUMBER_OF_TRACKS = 3_i32
  MCI_STATUS_MODE = 4_i32
  MCI_STATUS_MEDIA_PRESENT = 5_i32
  MCI_STATUS_TIME_FORMAT = 6_i32
  MCI_STATUS_READY = 7_i32
  MCI_STATUS_CURRENT_TRACK = 8_i32
  MCI_INFO_PRODUCT = 256_i32
  MCI_INFO_FILE = 512_i32
  MCI_INFO_MEDIA_UPC = 1024_i32
  MCI_INFO_MEDIA_IDENTITY = 2048_i32
  MCI_INFO_NAME = 4096_i32
  MCI_INFO_COPYRIGHT = 8192_i32
  MCI_GETDEVCAPS_ITEM = 256_i32
  MCI_GETDEVCAPS_CAN_RECORD = 1_i32
  MCI_GETDEVCAPS_HAS_AUDIO = 2_i32
  MCI_GETDEVCAPS_HAS_VIDEO = 3_i32
  MCI_GETDEVCAPS_DEVICE_TYPE = 4_i32
  MCI_GETDEVCAPS_USES_FILES = 5_i32
  MCI_GETDEVCAPS_COMPOUND_DEVICE = 6_i32
  MCI_GETDEVCAPS_CAN_EJECT = 7_i32
  MCI_GETDEVCAPS_CAN_PLAY = 8_i32
  MCI_GETDEVCAPS_CAN_SAVE = 9_i32
  MCI_SYSINFO_QUANTITY = 256_i32
  MCI_SYSINFO_OPEN = 512_i32
  MCI_SYSINFO_NAME = 1024_i32
  MCI_SYSINFO_INSTALLNAME = 2048_i32
  MCI_SET_DOOR_OPEN = 256_i32
  MCI_SET_DOOR_CLOSED = 512_i32
  MCI_SET_TIME_FORMAT = 1024_i32
  MCI_SET_AUDIO = 2048_i32
  MCI_SET_VIDEO = 4096_i32
  MCI_SET_ON = 8192_i32
  MCI_SET_OFF = 16384_i32
  MCI_SET_AUDIO_ALL = 0_i32
  MCI_SET_AUDIO_LEFT = 1_i32
  MCI_SET_AUDIO_RIGHT = 2_i32
  MCI_BREAK_KEY = 256_i32
  MCI_BREAK_HWND = 512_i32
  MCI_BREAK_OFF = 1024_i32
  MCI_RECORD_INSERT = 256_i32
  MCI_RECORD_OVERWRITE = 512_i32
  MCI_SAVE_FILE = 256_i32
  MCI_LOAD_FILE = 256_i32
  MCI_VD_MODE_PARK = 1025_u32
  MCI_VD_MEDIA_CLV = 1026_u32
  MCI_VD_MEDIA_CAV = 1027_u32
  MCI_VD_MEDIA_OTHER = 1028_u32
  MCI_VD_FORMAT_TRACK = 16385_u32
  MCI_VD_PLAY_REVERSE = 65536_i32
  MCI_VD_PLAY_FAST = 131072_i32
  MCI_VD_PLAY_SPEED = 262144_i32
  MCI_VD_PLAY_SCAN = 524288_i32
  MCI_VD_PLAY_SLOW = 1048576_i32
  MCI_VD_SEEK_REVERSE = 65536_i32
  MCI_VD_STATUS_SPEED = 16386_i32
  MCI_VD_STATUS_FORWARD = 16387_i32
  MCI_VD_STATUS_MEDIA_TYPE = 16388_i32
  MCI_VD_STATUS_SIDE = 16389_i32
  MCI_VD_STATUS_DISC_SIZE = 16390_i32
  MCI_VD_GETDEVCAPS_CLV = 65536_i32
  MCI_VD_GETDEVCAPS_CAV = 131072_i32
  MCI_VD_SPIN_UP = 65536_i32
  MCI_VD_SPIN_DOWN = 131072_i32
  MCI_VD_GETDEVCAPS_CAN_REVERSE = 16386_i32
  MCI_VD_GETDEVCAPS_FAST_RATE = 16387_i32
  MCI_VD_GETDEVCAPS_SLOW_RATE = 16388_i32
  MCI_VD_GETDEVCAPS_NORMAL_RATE = 16389_i32
  MCI_VD_STEP_FRAMES = 65536_i32
  MCI_VD_STEP_REVERSE = 131072_i32
  MCI_VD_ESCAPE_STRING = 256_i32
  MCI_CDA_STATUS_TYPE_TRACK = 16385_i32
  MCI_CDA_TRACK_AUDIO = 1088_u32
  MCI_CDA_TRACK_OTHER = 1089_u32
  MCI_WAVE_PCM = 1152_u32
  MCI_WAVE_MAPPER = 1153_u32
  MCI_WAVE_OPEN_BUFFER = 65536_i32
  MCI_WAVE_SET_FORMATTAG = 65536_i32
  MCI_WAVE_SET_CHANNELS = 131072_i32
  MCI_WAVE_SET_SAMPLESPERSEC = 262144_i32
  MCI_WAVE_SET_AVGBYTESPERSEC = 524288_i32
  MCI_WAVE_SET_BLOCKALIGN = 1048576_i32
  MCI_WAVE_SET_BITSPERSAMPLE = 2097152_i32
  MCI_WAVE_INPUT = 4194304_i32
  MCI_WAVE_OUTPUT = 8388608_i32
  MCI_WAVE_STATUS_FORMATTAG = 16385_i32
  MCI_WAVE_STATUS_CHANNELS = 16386_i32
  MCI_WAVE_STATUS_SAMPLESPERSEC = 16387_i32
  MCI_WAVE_STATUS_AVGBYTESPERSEC = 16388_i32
  MCI_WAVE_STATUS_BLOCKALIGN = 16389_i32
  MCI_WAVE_STATUS_BITSPERSAMPLE = 16390_i32
  MCI_WAVE_STATUS_LEVEL = 16391_i32
  MCI_WAVE_SET_ANYINPUT = 67108864_i32
  MCI_WAVE_SET_ANYOUTPUT = 134217728_i32
  MCI_WAVE_GETDEVCAPS_INPUTS = 16385_i32
  MCI_WAVE_GETDEVCAPS_OUTPUTS = 16386_i32
  MCI_SEQ_FORMAT_SONGPTR = 16385_u32
  MCI_SEQ_FILE = 16386_u32
  MCI_SEQ_MIDI = 16387_u32
  MCI_SEQ_SMPTE = 16388_u32
  MCI_SEQ_NONE = 65533_u32
  MCI_SEQ_MAPPER = 65535_u32
  MCI_SEQ_STATUS_TEMPO = 16386_i32
  MCI_SEQ_STATUS_PORT = 16387_i32
  MCI_SEQ_STATUS_SLAVE = 16391_i32
  MCI_SEQ_STATUS_MASTER = 16392_i32
  MCI_SEQ_STATUS_OFFSET = 16393_i32
  MCI_SEQ_STATUS_DIVTYPE = 16394_i32
  MCI_SEQ_STATUS_NAME = 16395_i32
  MCI_SEQ_STATUS_COPYRIGHT = 16396_i32
  MCI_SEQ_SET_TEMPO = 65536_i32
  MCI_SEQ_SET_PORT = 131072_i32
  MCI_SEQ_SET_SLAVE = 262144_i32
  MCI_SEQ_SET_MASTER = 524288_i32
  MCI_SEQ_SET_OFFSET = 16777216_i32
  MCI_ANIM_OPEN_WS = 65536_i32
  MCI_ANIM_OPEN_PARENT = 131072_i32
  MCI_ANIM_OPEN_NOSTATIC = 262144_i32
  MCI_ANIM_PLAY_SPEED = 65536_i32
  MCI_ANIM_PLAY_REVERSE = 131072_i32
  MCI_ANIM_PLAY_FAST = 262144_i32
  MCI_ANIM_PLAY_SLOW = 524288_i32
  MCI_ANIM_PLAY_SCAN = 1048576_i32
  MCI_ANIM_STEP_REVERSE = 65536_i32
  MCI_ANIM_STEP_FRAMES = 131072_i32
  MCI_ANIM_STATUS_SPEED = 16385_i32
  MCI_ANIM_STATUS_FORWARD = 16386_i32
  MCI_ANIM_STATUS_HWND = 16387_i32
  MCI_ANIM_STATUS_HPAL = 16388_i32
  MCI_ANIM_STATUS_STRETCH = 16389_i32
  MCI_ANIM_INFO_TEXT = 65536_i32
  MCI_ANIM_GETDEVCAPS_CAN_REVERSE = 16385_i32
  MCI_ANIM_GETDEVCAPS_FAST_RATE = 16386_i32
  MCI_ANIM_GETDEVCAPS_SLOW_RATE = 16387_i32
  MCI_ANIM_GETDEVCAPS_NORMAL_RATE = 16388_i32
  MCI_ANIM_GETDEVCAPS_PALETTES = 16390_i32
  MCI_ANIM_GETDEVCAPS_CAN_STRETCH = 16391_i32
  MCI_ANIM_GETDEVCAPS_MAX_WINDOWS = 16392_i32
  MCI_ANIM_REALIZE_NORM = 65536_i32
  MCI_ANIM_REALIZE_BKGD = 131072_i32
  MCI_ANIM_WINDOW_HWND = 65536_i32
  MCI_ANIM_WINDOW_STATE = 262144_i32
  MCI_ANIM_WINDOW_TEXT = 524288_i32
  MCI_ANIM_WINDOW_ENABLE_STRETCH = 1048576_i32
  MCI_ANIM_WINDOW_DISABLE_STRETCH = 2097152_i32
  MCI_ANIM_WINDOW_DEFAULT = 0_i32
  MCI_ANIM_RECT = 65536_i32
  MCI_ANIM_PUT_SOURCE = 131072_i32
  MCI_ANIM_PUT_DESTINATION = 262144_i32
  MCI_ANIM_WHERE_SOURCE = 131072_i32
  MCI_ANIM_WHERE_DESTINATION = 262144_i32
  MCI_ANIM_UPDATE_HDC = 131072_i32
  MCI_OVLY_OPEN_WS = 65536_i32
  MCI_OVLY_OPEN_PARENT = 131072_i32
  MCI_OVLY_STATUS_HWND = 16385_i32
  MCI_OVLY_STATUS_STRETCH = 16386_i32
  MCI_OVLY_INFO_TEXT = 65536_i32
  MCI_OVLY_GETDEVCAPS_CAN_STRETCH = 16385_i32
  MCI_OVLY_GETDEVCAPS_CAN_FREEZE = 16386_i32
  MCI_OVLY_GETDEVCAPS_MAX_WINDOWS = 16387_i32
  MCI_OVLY_WINDOW_HWND = 65536_i32
  MCI_OVLY_WINDOW_STATE = 262144_i32
  MCI_OVLY_WINDOW_TEXT = 524288_i32
  MCI_OVLY_WINDOW_ENABLE_STRETCH = 1048576_i32
  MCI_OVLY_WINDOW_DISABLE_STRETCH = 2097152_i32
  MCI_OVLY_WINDOW_DEFAULT = 0_i32
  MCI_OVLY_RECT = 65536_i32
  MCI_OVLY_PUT_SOURCE = 131072_i32
  MCI_OVLY_PUT_DESTINATION = 262144_i32
  MCI_OVLY_PUT_FRAME = 524288_i32
  MCI_OVLY_PUT_VIDEO = 1048576_i32
  MCI_OVLY_WHERE_SOURCE = 131072_i32
  MCI_OVLY_WHERE_DESTINATION = 262144_i32
  MCI_OVLY_WHERE_FRAME = 524288_i32
  MCI_OVLY_WHERE_VIDEO = 1048576_i32

  CLSID_KSDATAFORMAT_SUBTYPE_IEEE_FLOAT = LibC::GUID.new(0x3_u32, 0x0_u16, 0x10_u16, StaticArray[0x80_u8, 0x0_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x38_u8, 0x9b_u8, 0x71_u8])


  @[Extern]
  struct ADPCMCOEFSET
    property iCoef1 : Int16
    property iCoef2 : Int16
    def initialize(@iCoef1 : Int16, @iCoef2 : Int16)
    end
  end

  @[Extern]
  struct ADPCMWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wSamplesPerBlock : UInt16
    property wNumCoef : UInt16
    property aCoef : Win32cr::Media::Multimedia::ADPCMCOEFSET*
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wSamplesPerBlock : UInt16, @wNumCoef : UInt16, @aCoef : Win32cr::Media::Multimedia::ADPCMCOEFSET*)
    end
  end

  @[Extern]
  struct DRMWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wReserved : UInt16
    property ulContentId : UInt32
    property wfxSecure : Win32cr::Media::Audio::WAVEFORMATEX
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wReserved : UInt16, @ulContentId : UInt32, @wfxSecure : Win32cr::Media::Audio::WAVEFORMATEX)
    end
  end

  @[Extern]
  struct DVIADPCMWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wSamplesPerBlock : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wSamplesPerBlock : UInt16)
    end
  end

  @[Extern]
  struct IMAADPCMWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wSamplesPerBlock : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wSamplesPerBlock : UInt16)
    end
  end

  @[Extern]
  struct MEDIASPACEADPCMWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wRevision : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wRevision : UInt16)
    end
  end

  @[Extern]
  struct SIERRAADPCMWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wRevision : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wRevision : UInt16)
    end
  end

  @[Extern]
  struct G723_ADPCMWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property cbExtraSize : UInt16
    property nAuxBlockSize : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @cbExtraSize : UInt16, @nAuxBlockSize : UInt16)
    end
  end

  @[Extern]
  struct DIGISTDWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX)
    end
  end

  @[Extern]
  struct DIGIFIXWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX)
    end
  end

  @[Extern]
  struct DIALOGICOKIADPCMWAVEFORMAT
    property ewf : Win32cr::Media::Audio::WAVEFORMATEX
    def initialize(@ewf : Win32cr::Media::Audio::WAVEFORMATEX)
    end
  end

  @[Extern]
  struct YAMAHA_ADPCMWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX)
    end
  end

  @[Extern]
  struct SONARCWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wCompType : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wCompType : UInt16)
    end
  end

  @[Extern]
  struct TRUESPEECHWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wRevision : UInt16
    property nSamplesPerBlock : UInt16
    property abReserved : UInt8[28]
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wRevision : UInt16, @nSamplesPerBlock : UInt16, @abReserved : UInt8[28])
    end
  end

  @[Extern]
  struct ECHOSC1WAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX)
    end
  end

  @[Extern]
  struct AUDIOFILE_AF36WAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX)
    end
  end

  @[Extern]
  struct APTXWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX)
    end
  end

  @[Extern]
  struct AUDIOFILE_AF10WAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX)
    end
  end

  @[Extern]
  struct DOLBYAC2WAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property nAuxBitsCode : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @nAuxBitsCode : UInt16)
    end
  end

  @[Extern]
  struct GSM610WAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wSamplesPerBlock : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wSamplesPerBlock : UInt16)
    end
  end

  @[Extern]
  struct ADPCMEWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wSamplesPerBlock : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wSamplesPerBlock : UInt16)
    end
  end

  @[Extern]
  struct CONTRESVQLPCWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wSamplesPerBlock : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wSamplesPerBlock : UInt16)
    end
  end

  @[Extern]
  struct DIGIREALWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wSamplesPerBlock : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wSamplesPerBlock : UInt16)
    end
  end

  @[Extern]
  struct DIGIADPCMWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wSamplesPerBlock : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wSamplesPerBlock : UInt16)
    end
  end

  @[Extern]
  struct CONTRESCR10WAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wSamplesPerBlock : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wSamplesPerBlock : UInt16)
    end
  end

  @[Extern]
  struct NMS_VBXADPCMWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wSamplesPerBlock : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wSamplesPerBlock : UInt16)
    end
  end

  @[Extern]
  struct G721_ADPCMWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property nAuxBlockSize : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @nAuxBlockSize : UInt16)
    end
  end

  @[Extern]
  struct MSAUDIO1WAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wSamplesPerBlock : UInt16
    property wEncodeOptions : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wSamplesPerBlock : UInt16, @wEncodeOptions : UInt16)
    end
  end

  @[Extern]
  struct WMAUDIO2WAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property dwSamplesPerBlock : UInt32
    property wEncodeOptions : UInt16
    property dwSuperBlockAlign : UInt32
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @dwSamplesPerBlock : UInt32, @wEncodeOptions : UInt16, @dwSuperBlockAlign : UInt32)
    end
  end

  @[Extern]
  struct WMAUDIO3WAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wValidBitsPerSample : UInt16
    property dwChannelMask : UInt32
    property dwReserved1 : UInt32
    property dwReserved2 : UInt32
    property wEncodeOptions : UInt16
    property wReserved3 : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wValidBitsPerSample : UInt16, @dwChannelMask : UInt32, @dwReserved1 : UInt32, @dwReserved2 : UInt32, @wEncodeOptions : UInt16, @wReserved3 : UInt16)
    end
  end

  @[Extern]
  struct CREATIVEADPCMWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wRevision : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wRevision : UInt16)
    end
  end

  @[Extern]
  struct CREATIVEFASTSPEECH8WAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wRevision : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wRevision : UInt16)
    end
  end

  @[Extern]
  struct CREATIVEFASTSPEECH10WAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wRevision : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wRevision : UInt16)
    end
  end

  @[Extern]
  struct FMTOWNS_SND_WAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    property wRevision : UInt16
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX, @wRevision : UInt16)
    end
  end

  @[Extern]
  struct OLIGSMWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX)
    end
  end

  @[Extern]
  struct OLIADPCMWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX)
    end
  end

  @[Extern]
  struct OLICELPWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX)
    end
  end

  @[Extern]
  struct OLISBCWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX)
    end
  end

  @[Extern]
  struct OLIOPRWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX)
    end
  end

  @[Extern]
  struct CSIMAADPCMWAVEFORMAT
    property wfx : Win32cr::Media::Audio::WAVEFORMATEX
    def initialize(@wfx : Win32cr::Media::Audio::WAVEFORMATEX)
    end
  end

  @[Extern]
  struct S_riffwave_inst
    property bUnshiftedNote : UInt8
    property chFineTune : Win32cr::Foundation::CHAR
    property chGain : Win32cr::Foundation::CHAR
    property bLowNote : UInt8
    property bHighNote : UInt8
    property bLowVelocity : UInt8
    property bHighVelocity : UInt8
    def initialize(@bUnshiftedNote : UInt8, @chFineTune : Win32cr::Foundation::CHAR, @chGain : Win32cr::Foundation::CHAR, @bLowNote : UInt8, @bHighNote : UInt8, @bLowVelocity : UInt8, @bHighVelocity : UInt8)
    end
  end

  @[Extern]
  struct EXBMINFOHEADER
    property bmi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER
    property biExtDataOffset : UInt32
    def initialize(@bmi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER, @biExtDataOffset : UInt32)
    end
  end

  @[Extern]
  struct JPEGINFOHEADER
    property jpeg_size : UInt32
    property jpeg_process : UInt32
    property jpeg_color_space_id : UInt32
    property jpeg_bits_per_sample : UInt32
    property jpegh_sub_sampling : UInt32
    property jpegv_sub_sampling : UInt32
    def initialize(@jpeg_size : UInt32, @jpeg_process : UInt32, @jpeg_color_space_id : UInt32, @jpeg_bits_per_sample : UInt32, @jpegh_sub_sampling : UInt32, @jpegv_sub_sampling : UInt32)
    end
  end

  @[Extern]
  struct MCI_GENERIC_PARMS
    property dwCallback : LibC::UIntPtrT
    def initialize(@dwCallback : LibC::UIntPtrT)
    end
  end

  @[Extern]
  struct MCI_OPEN_PARMSA
    property dwCallback : LibC::UIntPtrT
    property wDeviceID : UInt32
    property lpstrDeviceType : Win32cr::Foundation::PSTR
    property lpstrElementName : Win32cr::Foundation::PSTR
    property lpstrAlias : Win32cr::Foundation::PSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @wDeviceID : UInt32, @lpstrDeviceType : Win32cr::Foundation::PSTR, @lpstrElementName : Win32cr::Foundation::PSTR, @lpstrAlias : Win32cr::Foundation::PSTR)
    end
  end

  @[Extern]
  struct MCI_OPEN_PARMSW
    property dwCallback : LibC::UIntPtrT
    property wDeviceID : UInt32
    property lpstrDeviceType : Win32cr::Foundation::PWSTR
    property lpstrElementName : Win32cr::Foundation::PWSTR
    property lpstrAlias : Win32cr::Foundation::PWSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @wDeviceID : UInt32, @lpstrDeviceType : Win32cr::Foundation::PWSTR, @lpstrElementName : Win32cr::Foundation::PWSTR, @lpstrAlias : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct MCI_PLAY_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwFrom : UInt32
    property dwTo : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwFrom : UInt32, @dwTo : UInt32)
    end
  end

  @[Extern]
  struct MCI_SEEK_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwTo : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwTo : UInt32)
    end
  end

  @[Extern]
  struct MCI_STATUS_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwReturn : LibC::UIntPtrT
    property dwItem : UInt32
    property dwTrack : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwReturn : LibC::UIntPtrT, @dwItem : UInt32, @dwTrack : UInt32)
    end
  end

  @[Extern]
  struct MCI_INFO_PARMSA
    property dwCallback : LibC::UIntPtrT
    property lpstrReturn : Win32cr::Foundation::PSTR
    property dwRetSize : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrReturn : Win32cr::Foundation::PSTR, @dwRetSize : UInt32)
    end
  end

  @[Extern]
  struct MCI_INFO_PARMSW
    property dwCallback : LibC::UIntPtrT
    property lpstrReturn : Win32cr::Foundation::PWSTR
    property dwRetSize : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrReturn : Win32cr::Foundation::PWSTR, @dwRetSize : UInt32)
    end
  end

  @[Extern]
  struct MCI_GETDEVCAPS_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwReturn : UInt32
    property dwItem : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwReturn : UInt32, @dwItem : UInt32)
    end
  end

  @[Extern]
  struct MCI_SYSINFO_PARMSA
    property dwCallback : LibC::UIntPtrT
    property lpstrReturn : Win32cr::Foundation::PSTR
    property dwRetSize : UInt32
    property dwNumber : UInt32
    property wDeviceType : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrReturn : Win32cr::Foundation::PSTR, @dwRetSize : UInt32, @dwNumber : UInt32, @wDeviceType : UInt32)
    end
  end

  @[Extern]
  struct MCI_SYSINFO_PARMSW
    property dwCallback : LibC::UIntPtrT
    property lpstrReturn : Win32cr::Foundation::PWSTR
    property dwRetSize : UInt32
    property dwNumber : UInt32
    property wDeviceType : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrReturn : Win32cr::Foundation::PWSTR, @dwRetSize : UInt32, @dwNumber : UInt32, @wDeviceType : UInt32)
    end
  end

  @[Extern]
  struct MCI_SET_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwTimeFormat : UInt32
    property dwAudio : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwTimeFormat : UInt32, @dwAudio : UInt32)
    end
  end

  @[Extern]
  struct MCI_BREAK_PARMS
    property dwCallback : LibC::UIntPtrT
    property nVirtKey : Int32
    property hwndBreak : Win32cr::Foundation::HWND
    def initialize(@dwCallback : LibC::UIntPtrT, @nVirtKey : Int32, @hwndBreak : Win32cr::Foundation::HWND)
    end
  end

  @[Extern]
  struct MCI_SAVE_PARMSA
    property dwCallback : LibC::UIntPtrT
    property lpfilename : Win32cr::Foundation::PSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @lpfilename : Win32cr::Foundation::PSTR)
    end
  end

  @[Extern]
  struct MCI_SAVE_PARMSW
    property dwCallback : LibC::UIntPtrT
    property lpfilename : Win32cr::Foundation::PWSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @lpfilename : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct MCI_LOAD_PARMSA
    property dwCallback : LibC::UIntPtrT
    property lpfilename : Win32cr::Foundation::PSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @lpfilename : Win32cr::Foundation::PSTR)
    end
  end

  @[Extern]
  struct MCI_LOAD_PARMSW
    property dwCallback : LibC::UIntPtrT
    property lpfilename : Win32cr::Foundation::PWSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @lpfilename : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct MCI_RECORD_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwFrom : UInt32
    property dwTo : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwFrom : UInt32, @dwTo : UInt32)
    end
  end

  @[Extern]
  struct MCI_VD_PLAY_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwFrom : UInt32
    property dwTo : UInt32
    property dwSpeed : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwFrom : UInt32, @dwTo : UInt32, @dwSpeed : UInt32)
    end
  end

  @[Extern]
  struct MCI_VD_STEP_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwFrames : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwFrames : UInt32)
    end
  end

  @[Extern]
  struct MCI_VD_ESCAPE_PARMSA
    property dwCallback : LibC::UIntPtrT
    property lpstrCommand : Win32cr::Foundation::PSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrCommand : Win32cr::Foundation::PSTR)
    end
  end

  @[Extern]
  struct MCI_VD_ESCAPE_PARMSW
    property dwCallback : LibC::UIntPtrT
    property lpstrCommand : Win32cr::Foundation::PWSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrCommand : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct MCI_WAVE_OPEN_PARMSA
    property dwCallback : LibC::UIntPtrT
    property wDeviceID : UInt32
    property lpstrDeviceType : Win32cr::Foundation::PSTR
    property lpstrElementName : Win32cr::Foundation::PSTR
    property lpstrAlias : Win32cr::Foundation::PSTR
    property dwBufferSeconds : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @wDeviceID : UInt32, @lpstrDeviceType : Win32cr::Foundation::PSTR, @lpstrElementName : Win32cr::Foundation::PSTR, @lpstrAlias : Win32cr::Foundation::PSTR, @dwBufferSeconds : UInt32)
    end
  end

  @[Extern]
  struct MCI_WAVE_OPEN_PARMSW
    property dwCallback : LibC::UIntPtrT
    property wDeviceID : UInt32
    property lpstrDeviceType : Win32cr::Foundation::PWSTR
    property lpstrElementName : Win32cr::Foundation::PWSTR
    property lpstrAlias : Win32cr::Foundation::PWSTR
    property dwBufferSeconds : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @wDeviceID : UInt32, @lpstrDeviceType : Win32cr::Foundation::PWSTR, @lpstrElementName : Win32cr::Foundation::PWSTR, @lpstrAlias : Win32cr::Foundation::PWSTR, @dwBufferSeconds : UInt32)
    end
  end

  @[Extern]
  struct MCI_WAVE_DELETE_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwFrom : UInt32
    property dwTo : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwFrom : UInt32, @dwTo : UInt32)
    end
  end

  @[Extern]
  struct MCI_WAVE_SET_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwTimeFormat : UInt32
    property dwAudio : UInt32
    property wInput : UInt32
    property wOutput : UInt32
    property wFormatTag : UInt16
    property wReserved2 : UInt16
    property nChannels : UInt16
    property wReserved3 : UInt16
    property nSamplesPerSec : UInt32
    property nAvgBytesPerSec : UInt32
    property nBlockAlign : UInt16
    property wReserved4 : UInt16
    property wBitsPerSample : UInt16
    property wReserved5 : UInt16
    def initialize(@dwCallback : LibC::UIntPtrT, @dwTimeFormat : UInt32, @dwAudio : UInt32, @wInput : UInt32, @wOutput : UInt32, @wFormatTag : UInt16, @wReserved2 : UInt16, @nChannels : UInt16, @wReserved3 : UInt16, @nSamplesPerSec : UInt32, @nAvgBytesPerSec : UInt32, @nBlockAlign : UInt16, @wReserved4 : UInt16, @wBitsPerSample : UInt16, @wReserved5 : UInt16)
    end
  end

  @[Extern]
  struct MCI_SEQ_SET_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwTimeFormat : UInt32
    property dwAudio : UInt32
    property dwTempo : UInt32
    property dwPort : UInt32
    property dwSlave : UInt32
    property dwMaster : UInt32
    property dwOffset : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwTimeFormat : UInt32, @dwAudio : UInt32, @dwTempo : UInt32, @dwPort : UInt32, @dwSlave : UInt32, @dwMaster : UInt32, @dwOffset : UInt32)
    end
  end

  @[Extern]
  struct MCI_ANIM_OPEN_PARMSA
    property dwCallback : LibC::UIntPtrT
    property wDeviceID : UInt32
    property lpstrDeviceType : Win32cr::Foundation::PSTR
    property lpstrElementName : Win32cr::Foundation::PSTR
    property lpstrAlias : Win32cr::Foundation::PSTR
    property dwStyle : UInt32
    property hWndParent : Win32cr::Foundation::HWND
    def initialize(@dwCallback : LibC::UIntPtrT, @wDeviceID : UInt32, @lpstrDeviceType : Win32cr::Foundation::PSTR, @lpstrElementName : Win32cr::Foundation::PSTR, @lpstrAlias : Win32cr::Foundation::PSTR, @dwStyle : UInt32, @hWndParent : Win32cr::Foundation::HWND)
    end
  end

  @[Extern]
  struct MCI_ANIM_OPEN_PARMSW
    property dwCallback : LibC::UIntPtrT
    property wDeviceID : UInt32
    property lpstrDeviceType : Win32cr::Foundation::PWSTR
    property lpstrElementName : Win32cr::Foundation::PWSTR
    property lpstrAlias : Win32cr::Foundation::PWSTR
    property dwStyle : UInt32
    property hWndParent : Win32cr::Foundation::HWND
    def initialize(@dwCallback : LibC::UIntPtrT, @wDeviceID : UInt32, @lpstrDeviceType : Win32cr::Foundation::PWSTR, @lpstrElementName : Win32cr::Foundation::PWSTR, @lpstrAlias : Win32cr::Foundation::PWSTR, @dwStyle : UInt32, @hWndParent : Win32cr::Foundation::HWND)
    end
  end

  @[Extern]
  struct MCI_ANIM_PLAY_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwFrom : UInt32
    property dwTo : UInt32
    property dwSpeed : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwFrom : UInt32, @dwTo : UInt32, @dwSpeed : UInt32)
    end
  end

  @[Extern]
  struct MCI_ANIM_STEP_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwFrames : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwFrames : UInt32)
    end
  end

  @[Extern]
  struct MCI_ANIM_WINDOW_PARMSA
    property dwCallback : LibC::UIntPtrT
    property hWnd : Win32cr::Foundation::HWND
    property nCmdShow : UInt32
    property lpstrText : Win32cr::Foundation::PSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @hWnd : Win32cr::Foundation::HWND, @nCmdShow : UInt32, @lpstrText : Win32cr::Foundation::PSTR)
    end
  end

  @[Extern]
  struct MCI_ANIM_WINDOW_PARMSW
    property dwCallback : LibC::UIntPtrT
    property hWnd : Win32cr::Foundation::HWND
    property nCmdShow : UInt32
    property lpstrText : Win32cr::Foundation::PWSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @hWnd : Win32cr::Foundation::HWND, @nCmdShow : UInt32, @lpstrText : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct MCI_ANIM_RECT_PARMS
    property dwCallback : LibC::UIntPtrT
    property rc : Win32cr::Foundation::RECT
    def initialize(@dwCallback : LibC::UIntPtrT, @rc : Win32cr::Foundation::RECT)
    end
  end

  @[Extern]
  struct MCI_ANIM_UPDATE_PARMS
    property dwCallback : LibC::UIntPtrT
    property rc : Win32cr::Foundation::RECT
    property hDC : Win32cr::Graphics::Gdi::HDC
    def initialize(@dwCallback : LibC::UIntPtrT, @rc : Win32cr::Foundation::RECT, @hDC : Win32cr::Graphics::Gdi::HDC)
    end
  end

  @[Extern]
  struct MCI_OVLY_OPEN_PARMSA
    property dwCallback : LibC::UIntPtrT
    property wDeviceID : UInt32
    property lpstrDeviceType : Win32cr::Foundation::PSTR
    property lpstrElementName : Win32cr::Foundation::PSTR
    property lpstrAlias : Win32cr::Foundation::PSTR
    property dwStyle : UInt32
    property hWndParent : Win32cr::Foundation::HWND
    def initialize(@dwCallback : LibC::UIntPtrT, @wDeviceID : UInt32, @lpstrDeviceType : Win32cr::Foundation::PSTR, @lpstrElementName : Win32cr::Foundation::PSTR, @lpstrAlias : Win32cr::Foundation::PSTR, @dwStyle : UInt32, @hWndParent : Win32cr::Foundation::HWND)
    end
  end

  @[Extern]
  struct MCI_OVLY_OPEN_PARMSW
    property dwCallback : LibC::UIntPtrT
    property wDeviceID : UInt32
    property lpstrDeviceType : Win32cr::Foundation::PWSTR
    property lpstrElementName : Win32cr::Foundation::PWSTR
    property lpstrAlias : Win32cr::Foundation::PWSTR
    property dwStyle : UInt32
    property hWndParent : Win32cr::Foundation::HWND
    def initialize(@dwCallback : LibC::UIntPtrT, @wDeviceID : UInt32, @lpstrDeviceType : Win32cr::Foundation::PWSTR, @lpstrElementName : Win32cr::Foundation::PWSTR, @lpstrAlias : Win32cr::Foundation::PWSTR, @dwStyle : UInt32, @hWndParent : Win32cr::Foundation::HWND)
    end
  end

  @[Extern]
  struct MCI_OVLY_WINDOW_PARMSA
    property dwCallback : LibC::UIntPtrT
    property hWnd : Win32cr::Foundation::HWND
    property nCmdShow : UInt32
    property lpstrText : Win32cr::Foundation::PSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @hWnd : Win32cr::Foundation::HWND, @nCmdShow : UInt32, @lpstrText : Win32cr::Foundation::PSTR)
    end
  end

  @[Extern]
  struct MCI_OVLY_WINDOW_PARMSW
    property dwCallback : LibC::UIntPtrT
    property hWnd : Win32cr::Foundation::HWND
    property nCmdShow : UInt32
    property lpstrText : Win32cr::Foundation::PWSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @hWnd : Win32cr::Foundation::HWND, @nCmdShow : UInt32, @lpstrText : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct MCI_OVLY_RECT_PARMS
    property dwCallback : LibC::UIntPtrT
    property rc : Win32cr::Foundation::RECT
    def initialize(@dwCallback : LibC::UIntPtrT, @rc : Win32cr::Foundation::RECT)
    end
  end

  @[Extern]
  struct MCI_OVLY_SAVE_PARMSA
    property dwCallback : LibC::UIntPtrT
    property lpfilename : Win32cr::Foundation::PSTR
    property rc : Win32cr::Foundation::RECT
    def initialize(@dwCallback : LibC::UIntPtrT, @lpfilename : Win32cr::Foundation::PSTR, @rc : Win32cr::Foundation::RECT)
    end
  end

  @[Extern]
  struct MCI_OVLY_SAVE_PARMSW
    property dwCallback : LibC::UIntPtrT
    property lpfilename : Win32cr::Foundation::PWSTR
    property rc : Win32cr::Foundation::RECT
    def initialize(@dwCallback : LibC::UIntPtrT, @lpfilename : Win32cr::Foundation::PWSTR, @rc : Win32cr::Foundation::RECT)
    end
  end

  @[Extern]
  struct MCI_OVLY_LOAD_PARMSA
    property dwCallback : LibC::UIntPtrT
    property lpfilename : Win32cr::Foundation::PSTR
    property rc : Win32cr::Foundation::RECT
    def initialize(@dwCallback : LibC::UIntPtrT, @lpfilename : Win32cr::Foundation::PSTR, @rc : Win32cr::Foundation::RECT)
    end
  end

  @[Extern]
  struct MCI_OVLY_LOAD_PARMSW
    property dwCallback : LibC::UIntPtrT
    property lpfilename : Win32cr::Foundation::PWSTR
    property rc : Win32cr::Foundation::RECT
    def initialize(@dwCallback : LibC::UIntPtrT, @lpfilename : Win32cr::Foundation::PWSTR, @rc : Win32cr::Foundation::RECT)
    end
  end

  @[Extern]
  struct DRVCONFIGINFOEX
    property dwDCISize : UInt32
    property lpszDCISectionName : Win32cr::Foundation::PWSTR
    property lpszDCIAliasName : Win32cr::Foundation::PWSTR
    property dnDevNode : UInt32
    def initialize(@dwDCISize : UInt32, @lpszDCISectionName : Win32cr::Foundation::PWSTR, @lpszDCIAliasName : Win32cr::Foundation::PWSTR, @dnDevNode : UInt32)
    end
  end

  @[Extern]
  struct DRVCONFIGINFO
    property dwDCISize : UInt32
    property lpszDCISectionName : Win32cr::Foundation::PWSTR
    property lpszDCIAliasName : Win32cr::Foundation::PWSTR
    def initialize(@dwDCISize : UInt32, @lpszDCISectionName : Win32cr::Foundation::PWSTR, @lpszDCIAliasName : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct MMIOINFO
    property dwFlags : UInt32
    property fccIOProc : UInt32
    property pIOProc : Win32cr::Media::Multimedia::LPMMIOPROC
    property wErrorRet : UInt32
    property htask : Win32cr::Media::HTASK
    property cchBuffer : Int32
    property pchBuffer : Int8*
    property pchNext : Int8*
    property pchEndRead : Int8*
    property pchEndWrite : Int8*
    property lBufOffset : Int32
    property lDiskOffset : Int32
    property adwInfo : UInt32[3]
    property dwReserved1 : UInt32
    property dwReserved2 : UInt32
    property hmmio : Win32cr::Media::Multimedia::HMMIO
    def initialize(@dwFlags : UInt32, @fccIOProc : UInt32, @pIOProc : Win32cr::Media::Multimedia::LPMMIOPROC, @wErrorRet : UInt32, @htask : Win32cr::Media::HTASK, @cchBuffer : Int32, @pchBuffer : Int8*, @pchNext : Int8*, @pchEndRead : Int8*, @pchEndWrite : Int8*, @lBufOffset : Int32, @lDiskOffset : Int32, @adwInfo : UInt32[3], @dwReserved1 : UInt32, @dwReserved2 : UInt32, @hmmio : Win32cr::Media::Multimedia::HMMIO)
    end
  end

  @[Extern]
  struct MMCKINFO
    property ckid : UInt32
    property cksize : UInt32
    property fccType : UInt32
    property dwDataOffset : UInt32
    property dwFlags : UInt32
    def initialize(@ckid : UInt32, @cksize : UInt32, @fccType : UInt32, @dwDataOffset : UInt32, @dwFlags : UInt32)
    end
  end

  @[Extern]
  struct JOYCAPSA
    property wMid : UInt16
    property wPid : UInt16
    property szPname : Win32cr::Foundation::CHAR[32]
    property wXmin : UInt32
    property wXmax : UInt32
    property wYmin : UInt32
    property wYmax : UInt32
    property wZmin : UInt32
    property wZmax : UInt32
    property wNumButtons : UInt32
    property wPeriodMin : UInt32
    property wPeriodMax : UInt32
    property wRmin : UInt32
    property wRmax : UInt32
    property wUmin : UInt32
    property wUmax : UInt32
    property wVmin : UInt32
    property wVmax : UInt32
    property wCaps : UInt32
    property wMaxAxes : UInt32
    property wNumAxes : UInt32
    property wMaxButtons : UInt32
    property szRegKey : Win32cr::Foundation::CHAR[32]
    property szOEMVxD : Win32cr::Foundation::CHAR[260]
    def initialize(@wMid : UInt16, @wPid : UInt16, @szPname : Win32cr::Foundation::CHAR[32], @wXmin : UInt32, @wXmax : UInt32, @wYmin : UInt32, @wYmax : UInt32, @wZmin : UInt32, @wZmax : UInt32, @wNumButtons : UInt32, @wPeriodMin : UInt32, @wPeriodMax : UInt32, @wRmin : UInt32, @wRmax : UInt32, @wUmin : UInt32, @wUmax : UInt32, @wVmin : UInt32, @wVmax : UInt32, @wCaps : UInt32, @wMaxAxes : UInt32, @wNumAxes : UInt32, @wMaxButtons : UInt32, @szRegKey : Win32cr::Foundation::CHAR[32], @szOEMVxD : Win32cr::Foundation::CHAR[260])
    end
  end

  @[Extern]
  struct JOYCAPSW
    property wMid : UInt16
    property wPid : UInt16
    property szPname : UInt16[32]
    property wXmin : UInt32
    property wXmax : UInt32
    property wYmin : UInt32
    property wYmax : UInt32
    property wZmin : UInt32
    property wZmax : UInt32
    property wNumButtons : UInt32
    property wPeriodMin : UInt32
    property wPeriodMax : UInt32
    property wRmin : UInt32
    property wRmax : UInt32
    property wUmin : UInt32
    property wUmax : UInt32
    property wVmin : UInt32
    property wVmax : UInt32
    property wCaps : UInt32
    property wMaxAxes : UInt32
    property wNumAxes : UInt32
    property wMaxButtons : UInt32
    property szRegKey : UInt16[32]
    property szOEMVxD : UInt16[260]
    def initialize(@wMid : UInt16, @wPid : UInt16, @szPname : UInt16[32], @wXmin : UInt32, @wXmax : UInt32, @wYmin : UInt32, @wYmax : UInt32, @wZmin : UInt32, @wZmax : UInt32, @wNumButtons : UInt32, @wPeriodMin : UInt32, @wPeriodMax : UInt32, @wRmin : UInt32, @wRmax : UInt32, @wUmin : UInt32, @wUmax : UInt32, @wVmin : UInt32, @wVmax : UInt32, @wCaps : UInt32, @wMaxAxes : UInt32, @wNumAxes : UInt32, @wMaxButtons : UInt32, @szRegKey : UInt16[32], @szOEMVxD : UInt16[260])
    end
  end

  @[Extern]
  struct JOYCAPS2A
    property wMid : UInt16
    property wPid : UInt16
    property szPname : Win32cr::Foundation::CHAR[32]
    property wXmin : UInt32
    property wXmax : UInt32
    property wYmin : UInt32
    property wYmax : UInt32
    property wZmin : UInt32
    property wZmax : UInt32
    property wNumButtons : UInt32
    property wPeriodMin : UInt32
    property wPeriodMax : UInt32
    property wRmin : UInt32
    property wRmax : UInt32
    property wUmin : UInt32
    property wUmax : UInt32
    property wVmin : UInt32
    property wVmax : UInt32
    property wCaps : UInt32
    property wMaxAxes : UInt32
    property wNumAxes : UInt32
    property wMaxButtons : UInt32
    property szRegKey : Win32cr::Foundation::CHAR[32]
    property szOEMVxD : Win32cr::Foundation::CHAR[260]
    property manufacturer_guid : LibC::GUID
    property product_guid : LibC::GUID
    property name_guid : LibC::GUID
    def initialize(@wMid : UInt16, @wPid : UInt16, @szPname : Win32cr::Foundation::CHAR[32], @wXmin : UInt32, @wXmax : UInt32, @wYmin : UInt32, @wYmax : UInt32, @wZmin : UInt32, @wZmax : UInt32, @wNumButtons : UInt32, @wPeriodMin : UInt32, @wPeriodMax : UInt32, @wRmin : UInt32, @wRmax : UInt32, @wUmin : UInt32, @wUmax : UInt32, @wVmin : UInt32, @wVmax : UInt32, @wCaps : UInt32, @wMaxAxes : UInt32, @wNumAxes : UInt32, @wMaxButtons : UInt32, @szRegKey : Win32cr::Foundation::CHAR[32], @szOEMVxD : Win32cr::Foundation::CHAR[260], @manufacturer_guid : LibC::GUID, @product_guid : LibC::GUID, @name_guid : LibC::GUID)
    end
  end

  @[Extern]
  struct JOYCAPS2W
    property wMid : UInt16
    property wPid : UInt16
    property szPname : UInt16[32]
    property wXmin : UInt32
    property wXmax : UInt32
    property wYmin : UInt32
    property wYmax : UInt32
    property wZmin : UInt32
    property wZmax : UInt32
    property wNumButtons : UInt32
    property wPeriodMin : UInt32
    property wPeriodMax : UInt32
    property wRmin : UInt32
    property wRmax : UInt32
    property wUmin : UInt32
    property wUmax : UInt32
    property wVmin : UInt32
    property wVmax : UInt32
    property wCaps : UInt32
    property wMaxAxes : UInt32
    property wNumAxes : UInt32
    property wMaxButtons : UInt32
    property szRegKey : UInt16[32]
    property szOEMVxD : UInt16[260]
    property manufacturer_guid : LibC::GUID
    property product_guid : LibC::GUID
    property name_guid : LibC::GUID
    def initialize(@wMid : UInt16, @wPid : UInt16, @szPname : UInt16[32], @wXmin : UInt32, @wXmax : UInt32, @wYmin : UInt32, @wYmax : UInt32, @wZmin : UInt32, @wZmax : UInt32, @wNumButtons : UInt32, @wPeriodMin : UInt32, @wPeriodMax : UInt32, @wRmin : UInt32, @wRmax : UInt32, @wUmin : UInt32, @wUmax : UInt32, @wVmin : UInt32, @wVmax : UInt32, @wCaps : UInt32, @wMaxAxes : UInt32, @wNumAxes : UInt32, @wMaxButtons : UInt32, @szRegKey : UInt16[32], @szOEMVxD : UInt16[260], @manufacturer_guid : LibC::GUID, @product_guid : LibC::GUID, @name_guid : LibC::GUID)
    end
  end

  @[Extern]
  struct JOYINFO
    property wXpos : UInt32
    property wYpos : UInt32
    property wZpos : UInt32
    property wButtons : UInt32
    def initialize(@wXpos : UInt32, @wYpos : UInt32, @wZpos : UInt32, @wButtons : UInt32)
    end
  end

  @[Extern]
  struct JOYINFOEX
    property dwSize : UInt32
    property dwFlags : UInt32
    property dwXpos : UInt32
    property dwYpos : UInt32
    property dwZpos : UInt32
    property dwRpos : UInt32
    property dwUpos : UInt32
    property dwVpos : UInt32
    property dwButtons : UInt32
    property dwButtonNumber : UInt32
    property dwPOV : UInt32
    property dwReserved1 : UInt32
    property dwReserved2 : UInt32
    def initialize(@dwSize : UInt32, @dwFlags : UInt32, @dwXpos : UInt32, @dwYpos : UInt32, @dwZpos : UInt32, @dwRpos : UInt32, @dwUpos : UInt32, @dwVpos : UInt32, @dwButtons : UInt32, @dwButtonNumber : UInt32, @dwPOV : UInt32, @dwReserved1 : UInt32, @dwReserved2 : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_RECT_PARMS
    property dwCallback : LibC::UIntPtrT
    property rc : Win32cr::Foundation::RECT
    def initialize(@dwCallback : LibC::UIntPtrT, @rc : Win32cr::Foundation::RECT)
    end
  end

  @[Extern]
  struct MCI_DGV_CAPTURE_PARMSA
    property dwCallback : LibC::UIntPtrT
    property lpstrFileName : Win32cr::Foundation::PSTR
    property rc : Win32cr::Foundation::RECT
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrFileName : Win32cr::Foundation::PSTR, @rc : Win32cr::Foundation::RECT)
    end
  end

  @[Extern]
  struct MCI_DGV_CAPTURE_PARMSW
    property dwCallback : LibC::UIntPtrT
    property lpstrFileName : Win32cr::Foundation::PWSTR
    property rc : Win32cr::Foundation::RECT
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrFileName : Win32cr::Foundation::PWSTR, @rc : Win32cr::Foundation::RECT)
    end
  end

  @[Extern]
  struct MCI_DGV_COPY_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwFrom : UInt32
    property dwTo : UInt32
    property rc : Win32cr::Foundation::RECT
    property dwAudioStream : UInt32
    property dwVideoStream : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwFrom : UInt32, @dwTo : UInt32, @rc : Win32cr::Foundation::RECT, @dwAudioStream : UInt32, @dwVideoStream : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_CUE_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwTo : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwTo : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_CUT_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwFrom : UInt32
    property dwTo : UInt32
    property rc : Win32cr::Foundation::RECT
    property dwAudioStream : UInt32
    property dwVideoStream : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwFrom : UInt32, @dwTo : UInt32, @rc : Win32cr::Foundation::RECT, @dwAudioStream : UInt32, @dwVideoStream : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_DELETE_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwFrom : UInt32
    property dwTo : UInt32
    property rc : Win32cr::Foundation::RECT
    property dwAudioStream : UInt32
    property dwVideoStream : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwFrom : UInt32, @dwTo : UInt32, @rc : Win32cr::Foundation::RECT, @dwAudioStream : UInt32, @dwVideoStream : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_INFO_PARMSA
    property dwCallback : LibC::UIntPtrT
    property lpstrReturn : Win32cr::Foundation::PSTR
    property dwRetSize : UInt32
    property dwItem : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrReturn : Win32cr::Foundation::PSTR, @dwRetSize : UInt32, @dwItem : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_INFO_PARMSW
    property dwCallback : LibC::UIntPtrT
    property lpstrReturn : Win32cr::Foundation::PWSTR
    property dwRetSize : UInt32
    property dwItem : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrReturn : Win32cr::Foundation::PWSTR, @dwRetSize : UInt32, @dwItem : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_LIST_PARMSA
    property dwCallback : LibC::UIntPtrT
    property lpstrReturn : Win32cr::Foundation::PSTR
    property dwLength : UInt32
    property dwNumber : UInt32
    property dwItem : UInt32
    property lpstrAlgorithm : Win32cr::Foundation::PSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrReturn : Win32cr::Foundation::PSTR, @dwLength : UInt32, @dwNumber : UInt32, @dwItem : UInt32, @lpstrAlgorithm : Win32cr::Foundation::PSTR)
    end
  end

  @[Extern]
  struct MCI_DGV_LIST_PARMSW
    property dwCallback : LibC::UIntPtrT
    property lpstrReturn : Win32cr::Foundation::PWSTR
    property dwLength : UInt32
    property dwNumber : UInt32
    property dwItem : UInt32
    property lpstrAlgorithm : Win32cr::Foundation::PWSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrReturn : Win32cr::Foundation::PWSTR, @dwLength : UInt32, @dwNumber : UInt32, @dwItem : UInt32, @lpstrAlgorithm : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct MCI_DGV_MONITOR_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwSource : UInt32
    property dwMethod : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwSource : UInt32, @dwMethod : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_OPEN_PARMSA
    property dwCallback : LibC::UIntPtrT
    property wDeviceID : UInt32
    property lpstrDeviceType : Win32cr::Foundation::PSTR
    property lpstrElementName : Win32cr::Foundation::PSTR
    property lpstrAlias : Win32cr::Foundation::PSTR
    property dwStyle : UInt32
    property hWndParent : Win32cr::Foundation::HWND
    def initialize(@dwCallback : LibC::UIntPtrT, @wDeviceID : UInt32, @lpstrDeviceType : Win32cr::Foundation::PSTR, @lpstrElementName : Win32cr::Foundation::PSTR, @lpstrAlias : Win32cr::Foundation::PSTR, @dwStyle : UInt32, @hWndParent : Win32cr::Foundation::HWND)
    end
  end

  @[Extern]
  struct MCI_DGV_OPEN_PARMSW
    property dwCallback : LibC::UIntPtrT
    property wDeviceID : UInt32
    property lpstrDeviceType : Win32cr::Foundation::PWSTR
    property lpstrElementName : Win32cr::Foundation::PWSTR
    property lpstrAlias : Win32cr::Foundation::PWSTR
    property dwStyle : UInt32
    property hWndParent : Win32cr::Foundation::HWND
    def initialize(@dwCallback : LibC::UIntPtrT, @wDeviceID : UInt32, @lpstrDeviceType : Win32cr::Foundation::PWSTR, @lpstrElementName : Win32cr::Foundation::PWSTR, @lpstrAlias : Win32cr::Foundation::PWSTR, @dwStyle : UInt32, @hWndParent : Win32cr::Foundation::HWND)
    end
  end

  @[Extern]
  struct MCI_DGV_PASTE_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwTo : UInt32
    property rc : Win32cr::Foundation::RECT
    property dwAudioStream : UInt32
    property dwVideoStream : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwTo : UInt32, @rc : Win32cr::Foundation::RECT, @dwAudioStream : UInt32, @dwVideoStream : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_QUALITY_PARMSA
    property dwCallback : LibC::UIntPtrT
    property dwItem : UInt32
    property lpstrName : Win32cr::Foundation::PSTR
    property lpstrAlgorithm : UInt32
    property dwHandle : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwItem : UInt32, @lpstrName : Win32cr::Foundation::PSTR, @lpstrAlgorithm : UInt32, @dwHandle : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_QUALITY_PARMSW
    property dwCallback : LibC::UIntPtrT
    property dwItem : UInt32
    property lpstrName : Win32cr::Foundation::PWSTR
    property lpstrAlgorithm : UInt32
    property dwHandle : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwItem : UInt32, @lpstrName : Win32cr::Foundation::PWSTR, @lpstrAlgorithm : UInt32, @dwHandle : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_RECORD_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwFrom : UInt32
    property dwTo : UInt32
    property rc : Win32cr::Foundation::RECT
    property dwAudioStream : UInt32
    property dwVideoStream : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwFrom : UInt32, @dwTo : UInt32, @rc : Win32cr::Foundation::RECT, @dwAudioStream : UInt32, @dwVideoStream : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_RESERVE_PARMSA
    property dwCallback : LibC::UIntPtrT
    property lpstrPath : Win32cr::Foundation::PSTR
    property dwSize : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrPath : Win32cr::Foundation::PSTR, @dwSize : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_RESERVE_PARMSW
    property dwCallback : LibC::UIntPtrT
    property lpstrPath : Win32cr::Foundation::PWSTR
    property dwSize : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrPath : Win32cr::Foundation::PWSTR, @dwSize : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_RESTORE_PARMSA
    property dwCallback : LibC::UIntPtrT
    property lpstrFileName : Win32cr::Foundation::PSTR
    property rc : Win32cr::Foundation::RECT
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrFileName : Win32cr::Foundation::PSTR, @rc : Win32cr::Foundation::RECT)
    end
  end

  @[Extern]
  struct MCI_DGV_RESTORE_PARMSW
    property dwCallback : LibC::UIntPtrT
    property lpstrFileName : Win32cr::Foundation::PWSTR
    property rc : Win32cr::Foundation::RECT
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrFileName : Win32cr::Foundation::PWSTR, @rc : Win32cr::Foundation::RECT)
    end
  end

  @[Extern]
  struct MCI_DGV_SAVE_PARMSA
    property dwCallback : LibC::UIntPtrT
    property lpstrFileName : Win32cr::Foundation::PSTR
    property rc : Win32cr::Foundation::RECT
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrFileName : Win32cr::Foundation::PSTR, @rc : Win32cr::Foundation::RECT)
    end
  end

  @[Extern]
  struct MCI_DGV_SAVE_PARMSW
    property dwCallback : LibC::UIntPtrT
    property lpstrFileName : Win32cr::Foundation::PWSTR
    property rc : Win32cr::Foundation::RECT
    def initialize(@dwCallback : LibC::UIntPtrT, @lpstrFileName : Win32cr::Foundation::PWSTR, @rc : Win32cr::Foundation::RECT)
    end
  end

  @[Extern]
  struct MCI_DGV_SET_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwTimeFormat : UInt32
    property dwAudio : UInt32
    property dwFileFormat : UInt32
    property dwSpeed : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwTimeFormat : UInt32, @dwAudio : UInt32, @dwFileFormat : UInt32, @dwSpeed : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_SETAUDIO_PARMSA
    property dwCallback : LibC::UIntPtrT
    property dwItem : UInt32
    property dwValue : UInt32
    property dwOver : UInt32
    property lpstrAlgorithm : Win32cr::Foundation::PSTR
    property lpstrQuality : Win32cr::Foundation::PSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @dwItem : UInt32, @dwValue : UInt32, @dwOver : UInt32, @lpstrAlgorithm : Win32cr::Foundation::PSTR, @lpstrQuality : Win32cr::Foundation::PSTR)
    end
  end

  @[Extern]
  struct MCI_DGV_SETAUDIO_PARMSW
    property dwCallback : LibC::UIntPtrT
    property dwItem : UInt32
    property dwValue : UInt32
    property dwOver : UInt32
    property lpstrAlgorithm : Win32cr::Foundation::PWSTR
    property lpstrQuality : Win32cr::Foundation::PWSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @dwItem : UInt32, @dwValue : UInt32, @dwOver : UInt32, @lpstrAlgorithm : Win32cr::Foundation::PWSTR, @lpstrQuality : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct MCI_DGV_SIGNAL_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwPosition : UInt32
    property dwPeriod : UInt32
    property dwUserParm : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwPosition : UInt32, @dwPeriod : UInt32, @dwUserParm : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_SETVIDEO_PARMSA
    property dwCallback : LibC::UIntPtrT
    property dwItem : UInt32
    property dwValue : UInt32
    property dwOver : UInt32
    property lpstrAlgorithm : Win32cr::Foundation::PSTR
    property lpstrQuality : Win32cr::Foundation::PSTR
    property dwSourceNumber : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwItem : UInt32, @dwValue : UInt32, @dwOver : UInt32, @lpstrAlgorithm : Win32cr::Foundation::PSTR, @lpstrQuality : Win32cr::Foundation::PSTR, @dwSourceNumber : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_SETVIDEO_PARMSW
    property dwCallback : LibC::UIntPtrT
    property dwItem : UInt32
    property dwValue : UInt32
    property dwOver : UInt32
    property lpstrAlgorithm : Win32cr::Foundation::PWSTR
    property lpstrQuality : Win32cr::Foundation::PWSTR
    property dwSourceNumber : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwItem : UInt32, @dwValue : UInt32, @dwOver : UInt32, @lpstrAlgorithm : Win32cr::Foundation::PWSTR, @lpstrQuality : Win32cr::Foundation::PWSTR, @dwSourceNumber : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_STATUS_PARMSA
    property dwCallback : LibC::UIntPtrT
    property dwReturn : LibC::UIntPtrT
    property dwItem : UInt32
    property dwTrack : UInt32
    property lpstrDrive : Win32cr::Foundation::PSTR
    property dwReference : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwReturn : LibC::UIntPtrT, @dwItem : UInt32, @dwTrack : UInt32, @lpstrDrive : Win32cr::Foundation::PSTR, @dwReference : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_STATUS_PARMSW
    property dwCallback : LibC::UIntPtrT
    property dwReturn : LibC::UIntPtrT
    property dwItem : UInt32
    property dwTrack : UInt32
    property lpstrDrive : Win32cr::Foundation::PWSTR
    property dwReference : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwReturn : LibC::UIntPtrT, @dwItem : UInt32, @dwTrack : UInt32, @lpstrDrive : Win32cr::Foundation::PWSTR, @dwReference : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_STEP_PARMS
    property dwCallback : LibC::UIntPtrT
    property dwFrames : UInt32
    def initialize(@dwCallback : LibC::UIntPtrT, @dwFrames : UInt32)
    end
  end

  @[Extern]
  struct MCI_DGV_UPDATE_PARMS
    property dwCallback : LibC::UIntPtrT
    property rc : Win32cr::Foundation::RECT
    property hDC : Win32cr::Graphics::Gdi::HDC
    def initialize(@dwCallback : LibC::UIntPtrT, @rc : Win32cr::Foundation::RECT, @hDC : Win32cr::Graphics::Gdi::HDC)
    end
  end

  @[Extern]
  struct MCI_DGV_WINDOW_PARMSA
    property dwCallback : LibC::UIntPtrT
    property hWnd : Win32cr::Foundation::HWND
    property nCmdShow : UInt32
    property lpstrText : Win32cr::Foundation::PSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @hWnd : Win32cr::Foundation::HWND, @nCmdShow : UInt32, @lpstrText : Win32cr::Foundation::PSTR)
    end
  end

  @[Extern]
  struct MCI_DGV_WINDOW_PARMSW
    property dwCallback : LibC::UIntPtrT
    property hWnd : Win32cr::Foundation::HWND
    property nCmdShow : UInt32
    property lpstrText : Win32cr::Foundation::PWSTR
    def initialize(@dwCallback : LibC::UIntPtrT, @hWnd : Win32cr::Foundation::HWND, @nCmdShow : UInt32, @lpstrText : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct ICOPEN
    property dwSize : UInt32
    property fccType : UInt32
    property fccHandler : UInt32
    property dwVersion : UInt32
    property dwFlags : UInt32
    property dwError : Win32cr::Foundation::LRESULT
    property pV1Reserved : Void*
    property pV2Reserved : Void*
    property dnDevNode : UInt32
    def initialize(@dwSize : UInt32, @fccType : UInt32, @fccHandler : UInt32, @dwVersion : UInt32, @dwFlags : UInt32, @dwError : Win32cr::Foundation::LRESULT, @pV1Reserved : Void*, @pV2Reserved : Void*, @dnDevNode : UInt32)
    end
  end

  @[Extern]
  struct ICINFO
    property dwSize : UInt32
    property fccType : UInt32
    property fccHandler : UInt32
    property dwFlags : UInt32
    property dwVersion : UInt32
    property dwVersionICM : UInt32
    property szName : UInt16[16]
    property szDescription : UInt16[128]
    property szDriver : UInt16[128]
    def initialize(@dwSize : UInt32, @fccType : UInt32, @fccHandler : UInt32, @dwFlags : UInt32, @dwVersion : UInt32, @dwVersionICM : UInt32, @szName : UInt16[16], @szDescription : UInt16[128], @szDriver : UInt16[128])
    end
  end

  @[Extern]
  struct ICCOMPRESS
    property dwFlags : UInt32
    property lpbiOutput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*
    property lpOutput : Void*
    property lpbiInput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*
    property lpInput : Void*
    property lpckid : UInt32*
    property lpdwFlags : UInt32*
    property lFrameNum : Int32
    property dwFrameSize : UInt32
    property dwQuality : UInt32
    property lpbiPrev : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*
    property lpPrev : Void*
    def initialize(@dwFlags : UInt32, @lpbiOutput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, @lpOutput : Void*, @lpbiInput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, @lpInput : Void*, @lpckid : UInt32*, @lpdwFlags : UInt32*, @lFrameNum : Int32, @dwFrameSize : UInt32, @dwQuality : UInt32, @lpbiPrev : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, @lpPrev : Void*)
    end
  end

  @[Extern]
  struct ICCOMPRESSFRAMES
    property dwFlags : UInt32
    property lpbiOutput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*
    property lOutput : Win32cr::Foundation::LPARAM
    property lpbiInput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*
    property lInput : Win32cr::Foundation::LPARAM
    property lStartFrame : Int32
    property lFrameCount : Int32
    property lQuality : Int32
    property lDataRate : Int32
    property lKeyRate : Int32
    property dwRate : UInt32
    property dwScale : UInt32
    property dwOverheadPerFrame : UInt32
    property dwReserved2 : UInt32
    property get_data : LibC::IntPtrT
    property put_data : LibC::IntPtrT
    def initialize(@dwFlags : UInt32, @lpbiOutput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, @lOutput : Win32cr::Foundation::LPARAM, @lpbiInput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, @lInput : Win32cr::Foundation::LPARAM, @lStartFrame : Int32, @lFrameCount : Int32, @lQuality : Int32, @lDataRate : Int32, @lKeyRate : Int32, @dwRate : UInt32, @dwScale : UInt32, @dwOverheadPerFrame : UInt32, @dwReserved2 : UInt32, @get_data : LibC::IntPtrT, @put_data : LibC::IntPtrT)
    end
  end

  @[Extern]
  struct ICSETSTATUSPROC
    property dwFlags : UInt32
    property lParam : Win32cr::Foundation::LPARAM
    property status : LibC::IntPtrT
    def initialize(@dwFlags : UInt32, @lParam : Win32cr::Foundation::LPARAM, @status : LibC::IntPtrT)
    end
  end

  @[Extern]
  struct ICDECOMPRESS
    property dwFlags : UInt32
    property lpbiInput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*
    property lpInput : Void*
    property lpbiOutput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*
    property lpOutput : Void*
    property ckid : UInt32
    def initialize(@dwFlags : UInt32, @lpbiInput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, @lpInput : Void*, @lpbiOutput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, @lpOutput : Void*, @ckid : UInt32)
    end
  end

  @[Extern]
  struct ICDECOMPRESSEX
    property dwFlags : UInt32
    property lpbiSrc : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*
    property lpSrc : Void*
    property lpbiDst : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*
    property lpDst : Void*
    property xDst : Int32
    property yDst : Int32
    property dxDst : Int32
    property dyDst : Int32
    property xSrc : Int32
    property ySrc : Int32
    property dxSrc : Int32
    property dySrc : Int32
    def initialize(@dwFlags : UInt32, @lpbiSrc : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, @lpSrc : Void*, @lpbiDst : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, @lpDst : Void*, @xDst : Int32, @yDst : Int32, @dxDst : Int32, @dyDst : Int32, @xSrc : Int32, @ySrc : Int32, @dxSrc : Int32, @dySrc : Int32)
    end
  end

  @[Extern]
  struct ICDRAWBEGIN
    property dwFlags : UInt32
    property hpal : Win32cr::Graphics::Gdi::HPALETTE
    property hwnd : Win32cr::Foundation::HWND
    property hdc : Win32cr::Graphics::Gdi::HDC
    property xDst : Int32
    property yDst : Int32
    property dxDst : Int32
    property dyDst : Int32
    property lpbi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*
    property xSrc : Int32
    property ySrc : Int32
    property dxSrc : Int32
    property dySrc : Int32
    property dwRate : UInt32
    property dwScale : UInt32
    def initialize(@dwFlags : UInt32, @hpal : Win32cr::Graphics::Gdi::HPALETTE, @hwnd : Win32cr::Foundation::HWND, @hdc : Win32cr::Graphics::Gdi::HDC, @xDst : Int32, @yDst : Int32, @dxDst : Int32, @dyDst : Int32, @lpbi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, @xSrc : Int32, @ySrc : Int32, @dxSrc : Int32, @dySrc : Int32, @dwRate : UInt32, @dwScale : UInt32)
    end
  end

  @[Extern]
  struct ICDRAW
    property dwFlags : UInt32
    property lpFormat : Void*
    property lpData : Void*
    property cbData : UInt32
    property lTime : Int32
    def initialize(@dwFlags : UInt32, @lpFormat : Void*, @lpData : Void*, @cbData : UInt32, @lTime : Int32)
    end
  end

  @[Extern]
  struct ICDRAWSUGGEST
    property lpbiIn : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*
    property lpbiSuggest : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*
    property dxSrc : Int32
    property dySrc : Int32
    property dxDst : Int32
    property dyDst : Int32
    property hicDecompressor : Win32cr::Media::Multimedia::HIC
    def initialize(@lpbiIn : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, @lpbiSuggest : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, @dxSrc : Int32, @dySrc : Int32, @dxDst : Int32, @dyDst : Int32, @hicDecompressor : Win32cr::Media::Multimedia::HIC)
    end
  end

  @[Extern]
  struct ICPALETTE
    property dwFlags : UInt32
    property iStart : Int32
    property iLen : Int32
    property lppe : Win32cr::Graphics::Gdi::PALETTEENTRY*
    def initialize(@dwFlags : UInt32, @iStart : Int32, @iLen : Int32, @lppe : Win32cr::Graphics::Gdi::PALETTEENTRY*)
    end
  end

  @[Extern]
  struct COMPVARS
    property cbSize : Int32
    property dwFlags : UInt32
    property hic : Win32cr::Media::Multimedia::HIC
    property fccType : UInt32
    property fccHandler : UInt32
    property lpbiIn : Win32cr::Graphics::Gdi::BITMAPINFO*
    property lpbiOut : Win32cr::Graphics::Gdi::BITMAPINFO*
    property lpBitsOut : Void*
    property lpBitsPrev : Void*
    property lFrame : Int32
    property lKey : Int32
    property lDataRate : Int32
    property lQ : Int32
    property lKeyCount : Int32
    property lpState : Void*
    property cbState : Int32
    def initialize(@cbSize : Int32, @dwFlags : UInt32, @hic : Win32cr::Media::Multimedia::HIC, @fccType : UInt32, @fccHandler : UInt32, @lpbiIn : Win32cr::Graphics::Gdi::BITMAPINFO*, @lpbiOut : Win32cr::Graphics::Gdi::BITMAPINFO*, @lpBitsOut : Void*, @lpBitsPrev : Void*, @lFrame : Int32, @lKey : Int32, @lDataRate : Int32, @lQ : Int32, @lKeyCount : Int32, @lpState : Void*, @cbState : Int32)
    end
  end

  @[Extern]
  struct DRAWDIBTIME
    property timeCount : Int32
    property timeDraw : Int32
    property timeDecompress : Int32
    property timeDither : Int32
    property timeStretch : Int32
    property timeBlt : Int32
    property timeSetDIBits : Int32
    def initialize(@timeCount : Int32, @timeDraw : Int32, @timeDecompress : Int32, @timeDither : Int32, @timeStretch : Int32, @timeBlt : Int32, @timeSetDIBits : Int32)
    end
  end

  @[Extern]
  struct AVISTREAMINFOW
    property fccType : UInt32
    property fccHandler : UInt32
    property dwFlags : UInt32
    property dwCaps : UInt32
    property wPriority : UInt16
    property wLanguage : UInt16
    property dwScale : UInt32
    property dwRate : UInt32
    property dwStart : UInt32
    property dwLength : UInt32
    property dwInitialFrames : UInt32
    property dwSuggestedBufferSize : UInt32
    property dwQuality : UInt32
    property dwSampleSize : UInt32
    property rcFrame : Win32cr::Foundation::RECT
    property dwEditCount : UInt32
    property dwFormatChangeCount : UInt32
    property szName : UInt16[64]
    def initialize(@fccType : UInt32, @fccHandler : UInt32, @dwFlags : UInt32, @dwCaps : UInt32, @wPriority : UInt16, @wLanguage : UInt16, @dwScale : UInt32, @dwRate : UInt32, @dwStart : UInt32, @dwLength : UInt32, @dwInitialFrames : UInt32, @dwSuggestedBufferSize : UInt32, @dwQuality : UInt32, @dwSampleSize : UInt32, @rcFrame : Win32cr::Foundation::RECT, @dwEditCount : UInt32, @dwFormatChangeCount : UInt32, @szName : UInt16[64])
    end
  end

  @[Extern]
  struct AVISTREAMINFOA
    property fccType : UInt32
    property fccHandler : UInt32
    property dwFlags : UInt32
    property dwCaps : UInt32
    property wPriority : UInt16
    property wLanguage : UInt16
    property dwScale : UInt32
    property dwRate : UInt32
    property dwStart : UInt32
    property dwLength : UInt32
    property dwInitialFrames : UInt32
    property dwSuggestedBufferSize : UInt32
    property dwQuality : UInt32
    property dwSampleSize : UInt32
    property rcFrame : Win32cr::Foundation::RECT
    property dwEditCount : UInt32
    property dwFormatChangeCount : UInt32
    property szName : Win32cr::Foundation::CHAR[64]
    def initialize(@fccType : UInt32, @fccHandler : UInt32, @dwFlags : UInt32, @dwCaps : UInt32, @wPriority : UInt16, @wLanguage : UInt16, @dwScale : UInt32, @dwRate : UInt32, @dwStart : UInt32, @dwLength : UInt32, @dwInitialFrames : UInt32, @dwSuggestedBufferSize : UInt32, @dwQuality : UInt32, @dwSampleSize : UInt32, @rcFrame : Win32cr::Foundation::RECT, @dwEditCount : UInt32, @dwFormatChangeCount : UInt32, @szName : Win32cr::Foundation::CHAR[64])
    end
  end

  @[Extern]
  struct AVIFILEINFOW
    property dwMaxBytesPerSec : UInt32
    property dwFlags : UInt32
    property dwCaps : UInt32
    property dwStreams : UInt32
    property dwSuggestedBufferSize : UInt32
    property dwWidth : UInt32
    property dwHeight : UInt32
    property dwScale : UInt32
    property dwRate : UInt32
    property dwLength : UInt32
    property dwEditCount : UInt32
    property szFileType : UInt16[64]
    def initialize(@dwMaxBytesPerSec : UInt32, @dwFlags : UInt32, @dwCaps : UInt32, @dwStreams : UInt32, @dwSuggestedBufferSize : UInt32, @dwWidth : UInt32, @dwHeight : UInt32, @dwScale : UInt32, @dwRate : UInt32, @dwLength : UInt32, @dwEditCount : UInt32, @szFileType : UInt16[64])
    end
  end

  @[Extern]
  struct AVIFILEINFOA
    property dwMaxBytesPerSec : UInt32
    property dwFlags : UInt32
    property dwCaps : UInt32
    property dwStreams : UInt32
    property dwSuggestedBufferSize : UInt32
    property dwWidth : UInt32
    property dwHeight : UInt32
    property dwScale : UInt32
    property dwRate : UInt32
    property dwLength : UInt32
    property dwEditCount : UInt32
    property szFileType : Win32cr::Foundation::CHAR[64]
    def initialize(@dwMaxBytesPerSec : UInt32, @dwFlags : UInt32, @dwCaps : UInt32, @dwStreams : UInt32, @dwSuggestedBufferSize : UInt32, @dwWidth : UInt32, @dwHeight : UInt32, @dwScale : UInt32, @dwRate : UInt32, @dwLength : UInt32, @dwEditCount : UInt32, @szFileType : Win32cr::Foundation::CHAR[64])
    end
  end

  @[Extern]
  struct AVICOMPRESSOPTIONS
    property fccType : UInt32
    property fccHandler : UInt32
    property dwKeyFrameEvery : UInt32
    property dwQuality : UInt32
    property dwBytesPerSecond : UInt32
    property dwFlags : UInt32
    property lpFormat : Void*
    property cbFormat : UInt32
    property lpParms : Void*
    property cbParms : UInt32
    property dwInterleaveEvery : UInt32
    def initialize(@fccType : UInt32, @fccHandler : UInt32, @dwKeyFrameEvery : UInt32, @dwQuality : UInt32, @dwBytesPerSecond : UInt32, @dwFlags : UInt32, @lpFormat : Void*, @cbFormat : UInt32, @lpParms : Void*, @cbParms : UInt32, @dwInterleaveEvery : UInt32)
    end
  end

  @[Extern]
  struct VIDEOHDR
    property lpData : UInt8*
    property dwBufferLength : UInt32
    property dwBytesUsed : UInt32
    property dwTimeCaptured : UInt32
    property dwUser : LibC::UIntPtrT
    property dwFlags : UInt32
    property dwReserved : LibC::UIntPtrT[4]
    def initialize(@lpData : UInt8*, @dwBufferLength : UInt32, @dwBytesUsed : UInt32, @dwTimeCaptured : UInt32, @dwUser : LibC::UIntPtrT, @dwFlags : UInt32, @dwReserved : LibC::UIntPtrT[4])
    end
  end

  @[Extern]
  struct CHANNEL_CAPS
    property dwFlags : UInt32
    property dwSrcRectXMod : UInt32
    property dwSrcRectYMod : UInt32
    property dwSrcRectWidthMod : UInt32
    property dwSrcRectHeightMod : UInt32
    property dwDstRectXMod : UInt32
    property dwDstRectYMod : UInt32
    property dwDstRectWidthMod : UInt32
    property dwDstRectHeightMod : UInt32
    def initialize(@dwFlags : UInt32, @dwSrcRectXMod : UInt32, @dwSrcRectYMod : UInt32, @dwSrcRectWidthMod : UInt32, @dwSrcRectHeightMod : UInt32, @dwDstRectXMod : UInt32, @dwDstRectYMod : UInt32, @dwDstRectWidthMod : UInt32, @dwDstRectHeightMod : UInt32)
    end
  end

  @[Extern]
  struct CAPDRIVERCAPS
    property wDeviceIndex : UInt32
    property fHasOverlay : Win32cr::Foundation::BOOL
    property fHasDlgVideoSource : Win32cr::Foundation::BOOL
    property fHasDlgVideoFormat : Win32cr::Foundation::BOOL
    property fHasDlgVideoDisplay : Win32cr::Foundation::BOOL
    property fCaptureInitialized : Win32cr::Foundation::BOOL
    property fDriverSuppliesPalettes : Win32cr::Foundation::BOOL
    property hVideoIn : Win32cr::Foundation::HANDLE
    property hVideoOut : Win32cr::Foundation::HANDLE
    property hVideoExtIn : Win32cr::Foundation::HANDLE
    property hVideoExtOut : Win32cr::Foundation::HANDLE
    def initialize(@wDeviceIndex : UInt32, @fHasOverlay : Win32cr::Foundation::BOOL, @fHasDlgVideoSource : Win32cr::Foundation::BOOL, @fHasDlgVideoFormat : Win32cr::Foundation::BOOL, @fHasDlgVideoDisplay : Win32cr::Foundation::BOOL, @fCaptureInitialized : Win32cr::Foundation::BOOL, @fDriverSuppliesPalettes : Win32cr::Foundation::BOOL, @hVideoIn : Win32cr::Foundation::HANDLE, @hVideoOut : Win32cr::Foundation::HANDLE, @hVideoExtIn : Win32cr::Foundation::HANDLE, @hVideoExtOut : Win32cr::Foundation::HANDLE)
    end
  end

  @[Extern]
  struct CAPSTATUS
    property uiImageWidth : UInt32
    property uiImageHeight : UInt32
    property fLiveWindow : Win32cr::Foundation::BOOL
    property fOverlayWindow : Win32cr::Foundation::BOOL
    property fScale : Win32cr::Foundation::BOOL
    property ptScroll : Win32cr::Foundation::POINT
    property fUsingDefaultPalette : Win32cr::Foundation::BOOL
    property fAudioHardware : Win32cr::Foundation::BOOL
    property fCapFileExists : Win32cr::Foundation::BOOL
    property dwCurrentVideoFrame : UInt32
    property dwCurrentVideoFramesDropped : UInt32
    property dwCurrentWaveSamples : UInt32
    property dwCurrentTimeElapsedMS : UInt32
    property hPalCurrent : Win32cr::Graphics::Gdi::HPALETTE
    property fCapturingNow : Win32cr::Foundation::BOOL
    property dwReturn : UInt32
    property wNumVideoAllocated : UInt32
    property wNumAudioAllocated : UInt32
    def initialize(@uiImageWidth : UInt32, @uiImageHeight : UInt32, @fLiveWindow : Win32cr::Foundation::BOOL, @fOverlayWindow : Win32cr::Foundation::BOOL, @fScale : Win32cr::Foundation::BOOL, @ptScroll : Win32cr::Foundation::POINT, @fUsingDefaultPalette : Win32cr::Foundation::BOOL, @fAudioHardware : Win32cr::Foundation::BOOL, @fCapFileExists : Win32cr::Foundation::BOOL, @dwCurrentVideoFrame : UInt32, @dwCurrentVideoFramesDropped : UInt32, @dwCurrentWaveSamples : UInt32, @dwCurrentTimeElapsedMS : UInt32, @hPalCurrent : Win32cr::Graphics::Gdi::HPALETTE, @fCapturingNow : Win32cr::Foundation::BOOL, @dwReturn : UInt32, @wNumVideoAllocated : UInt32, @wNumAudioAllocated : UInt32)
    end
  end

  @[Extern]
  struct CAPTUREPARMS
    property dwRequestMicroSecPerFrame : UInt32
    property fMakeUserHitOKToCapture : Win32cr::Foundation::BOOL
    property wPercentDropForError : UInt32
    property fYield : Win32cr::Foundation::BOOL
    property dwIndexSize : UInt32
    property wChunkGranularity : UInt32
    property fUsingDOSMemory : Win32cr::Foundation::BOOL
    property wNumVideoRequested : UInt32
    property fCaptureAudio : Win32cr::Foundation::BOOL
    property wNumAudioRequested : UInt32
    property vKeyAbort : UInt32
    property fAbortLeftMouse : Win32cr::Foundation::BOOL
    property fAbortRightMouse : Win32cr::Foundation::BOOL
    property fLimitEnabled : Win32cr::Foundation::BOOL
    property wTimeLimit : UInt32
    property fMCIControl : Win32cr::Foundation::BOOL
    property fStepMCIDevice : Win32cr::Foundation::BOOL
    property dwMCIStartTime : UInt32
    property dwMCIStopTime : UInt32
    property fStepCaptureAt2x : Win32cr::Foundation::BOOL
    property wStepCaptureAverageFrames : UInt32
    property dwAudioBufferSize : UInt32
    property fDisableWriteCache : Win32cr::Foundation::BOOL
    property av_stream_master : UInt32
    def initialize(@dwRequestMicroSecPerFrame : UInt32, @fMakeUserHitOKToCapture : Win32cr::Foundation::BOOL, @wPercentDropForError : UInt32, @fYield : Win32cr::Foundation::BOOL, @dwIndexSize : UInt32, @wChunkGranularity : UInt32, @fUsingDOSMemory : Win32cr::Foundation::BOOL, @wNumVideoRequested : UInt32, @fCaptureAudio : Win32cr::Foundation::BOOL, @wNumAudioRequested : UInt32, @vKeyAbort : UInt32, @fAbortLeftMouse : Win32cr::Foundation::BOOL, @fAbortRightMouse : Win32cr::Foundation::BOOL, @fLimitEnabled : Win32cr::Foundation::BOOL, @wTimeLimit : UInt32, @fMCIControl : Win32cr::Foundation::BOOL, @fStepMCIDevice : Win32cr::Foundation::BOOL, @dwMCIStartTime : UInt32, @dwMCIStopTime : UInt32, @fStepCaptureAt2x : Win32cr::Foundation::BOOL, @wStepCaptureAverageFrames : UInt32, @dwAudioBufferSize : UInt32, @fDisableWriteCache : Win32cr::Foundation::BOOL, @av_stream_master : UInt32)
    end
  end

  @[Extern]
  struct CAPINFOCHUNK
    property fccInfoID : UInt32
    property lpData : Void*
    property cbData : Int32
    def initialize(@fccInfoID : UInt32, @lpData : Void*, @cbData : Int32)
    end
  end

  @[Extern]
  struct DRVM_IOCTL_DATA
    property dwSize : UInt32
    property dwCmd : UInt32
    def initialize(@dwSize : UInt32, @dwCmd : UInt32)
    end
  end

  @[Extern]
  struct WAVEOPENDESC
    property hWave : Win32cr::Media::Audio::HWAVE
    property lpFormat : Win32cr::Media::Audio::WAVEFORMAT*
    property dwCallback : LibC::UIntPtrT
    property dwInstance : LibC::UIntPtrT
    property uMappedDeviceID : UInt32
    property dnDevNode : LibC::UIntPtrT
    def initialize(@hWave : Win32cr::Media::Audio::HWAVE, @lpFormat : Win32cr::Media::Audio::WAVEFORMAT*, @dwCallback : LibC::UIntPtrT, @dwInstance : LibC::UIntPtrT, @uMappedDeviceID : UInt32, @dnDevNode : LibC::UIntPtrT)
    end
  end

  @[Extern]
  struct MIDIOPENSTRMID
    property dwStreamID : UInt32
    property uDeviceID : UInt32
    def initialize(@dwStreamID : UInt32, @uDeviceID : UInt32)
    end
  end

  @[Extern]
  struct MIXEROPENDESC
    property hmx : Win32cr::Media::Audio::HMIXER
    property pReserved0 : Void*
    property dwCallback : LibC::UIntPtrT
    property dwInstance : LibC::UIntPtrT
    property dnDevNode : LibC::UIntPtrT
    def initialize(@hmx : Win32cr::Media::Audio::HMIXER, @pReserved0 : Void*, @dwCallback : LibC::UIntPtrT, @dwInstance : LibC::UIntPtrT, @dnDevNode : LibC::UIntPtrT)
    end
  end

  @[Extern]
  struct TIMEREVENT
    property wDelay : UInt16
    property wResolution : UInt16
    property lpFunction : Win32cr::Media::LPTIMECALLBACK
    property dwUser : UInt32
    property wFlags : UInt16
    property wReserved1 : UInt16
    def initialize(@wDelay : UInt16, @wResolution : UInt16, @lpFunction : Win32cr::Media::LPTIMECALLBACK, @dwUser : UInt32, @wFlags : UInt16, @wReserved1 : UInt16)
    end
  end

  @[Extern]
  struct MCI_OPEN_DRIVER_PARMS
    property wDeviceID : UInt32
    property lpstrParams : Win32cr::Foundation::PWSTR
    property wCustomCommandTable : UInt32
    property wType : UInt32
    def initialize(@wDeviceID : UInt32, @lpstrParams : Win32cr::Foundation::PWSTR, @wCustomCommandTable : UInt32, @wType : UInt32)
    end
  end

  @[Extern]
  record IAVIStreamVtbl,
    query_interface : Proc(IAVIStream*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAVIStream*, UInt32),
    release : Proc(IAVIStream*, UInt32),
    create : Proc(IAVIStream*, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT),
    info : Proc(IAVIStream*, Win32cr::Media::Multimedia::AVISTREAMINFOW*, Int32, Win32cr::Foundation::HRESULT),
    find_sample : Proc(IAVIStream*, Int32, Int32, Int32),
    read_format : Proc(IAVIStream*, Int32, Void*, Int32*, Win32cr::Foundation::HRESULT),
    set_format : Proc(IAVIStream*, Int32, Void*, Int32, Win32cr::Foundation::HRESULT),
    read : Proc(IAVIStream*, Int32, Int32, Void*, Int32, Int32*, Int32*, Win32cr::Foundation::HRESULT),
    write : Proc(IAVIStream*, Int32, Int32, Void*, Int32, UInt32, Int32*, Int32*, Win32cr::Foundation::HRESULT),
    delete : Proc(IAVIStream*, Int32, Int32, Win32cr::Foundation::HRESULT),
    read_data : Proc(IAVIStream*, UInt32, Void*, Int32*, Win32cr::Foundation::HRESULT),
    write_data : Proc(IAVIStream*, UInt32, Void*, Int32, Win32cr::Foundation::HRESULT),
    set_info : Proc(IAVIStream*, Win32cr::Media::Multimedia::AVISTREAMINFOW*, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAVIStream, lpVtbl : IAVIStreamVtbl* do
    GUID = LibC::GUID.new(0x20021_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IAVIStream*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAVIStream*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAVIStream*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create(this : IAVIStream*, lParam1 : Win32cr::Foundation::LPARAM, lParam2 : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create.call(this, lParam1, lParam2)
    end
    def info(this : IAVIStream*, psi : Win32cr::Media::Multimedia::AVISTREAMINFOW*, lSize : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.info.call(this, psi, lSize)
    end
    def find_sample(this : IAVIStream*, lPos : Int32, lFlags : Int32) : Int32
      @lpVtbl.try &.value.find_sample.call(this, lPos, lFlags)
    end
    def read_format(this : IAVIStream*, lPos : Int32, lpFormat : Void*, lpcbFormat : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read_format.call(this, lPos, lpFormat, lpcbFormat)
    end
    def set_format(this : IAVIStream*, lPos : Int32, lpFormat : Void*, cbFormat : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_format.call(this, lPos, lpFormat, cbFormat)
    end
    def read(this : IAVIStream*, lStart : Int32, lSamples : Int32, lpBuffer : Void*, cbBuffer : Int32, plBytes : Int32*, plSamples : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read.call(this, lStart, lSamples, lpBuffer, cbBuffer, plBytes, plSamples)
    end
    def write(this : IAVIStream*, lStart : Int32, lSamples : Int32, lpBuffer : Void*, cbBuffer : Int32, dwFlags : UInt32, plSampWritten : Int32*, plBytesWritten : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write.call(this, lStart, lSamples, lpBuffer, cbBuffer, dwFlags, plSampWritten, plBytesWritten)
    end
    def delete(this : IAVIStream*, lStart : Int32, lSamples : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete.call(this, lStart, lSamples)
    end
    def read_data(this : IAVIStream*, fcc : UInt32, lp : Void*, lpcb : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read_data.call(this, fcc, lp, lpcb)
    end
    def write_data(this : IAVIStream*, fcc : UInt32, lp : Void*, cb : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_data.call(this, fcc, lp, cb)
    end
    def set_info(this : IAVIStream*, lpInfo : Win32cr::Media::Multimedia::AVISTREAMINFOW*, cbInfo : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_info.call(this, lpInfo, cbInfo)
    end

  end

  @[Extern]
  record IAVIStreamingVtbl,
    query_interface : Proc(IAVIStreaming*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAVIStreaming*, UInt32),
    release : Proc(IAVIStreaming*, UInt32),
    begin__ : Proc(IAVIStreaming*, Int32, Int32, Int32, Win32cr::Foundation::HRESULT),
    end__ : Proc(IAVIStreaming*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAVIStreaming, lpVtbl : IAVIStreamingVtbl* do
    GUID = LibC::GUID.new(0x20022_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IAVIStreaming*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAVIStreaming*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAVIStreaming*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def begin__(this : IAVIStreaming*, lStart : Int32, lEnd : Int32, lRate : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.begin__.call(this, lStart, lEnd, lRate)
    end
    def end__(this : IAVIStreaming*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.end__.call(this)
    end

  end

  @[Extern]
  record IAVIEditStreamVtbl,
    query_interface : Proc(IAVIEditStream*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAVIEditStream*, UInt32),
    release : Proc(IAVIEditStream*, UInt32),
    cut : Proc(IAVIEditStream*, Int32*, Int32*, Void**, Win32cr::Foundation::HRESULT),
    copy : Proc(IAVIEditStream*, Int32*, Int32*, Void**, Win32cr::Foundation::HRESULT),
    paste : Proc(IAVIEditStream*, Int32*, Int32*, Void*, Int32, Int32, Win32cr::Foundation::HRESULT),
    clone : Proc(IAVIEditStream*, Void**, Win32cr::Foundation::HRESULT),
    set_info : Proc(IAVIEditStream*, Win32cr::Media::Multimedia::AVISTREAMINFOW*, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAVIEditStream, lpVtbl : IAVIEditStreamVtbl* do
    GUID = LibC::GUID.new(0x20024_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IAVIEditStream*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAVIEditStream*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAVIEditStream*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def cut(this : IAVIEditStream*, plStart : Int32*, plLength : Int32*, ppResult : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cut.call(this, plStart, plLength, ppResult)
    end
    def copy(this : IAVIEditStream*, plStart : Int32*, plLength : Int32*, ppResult : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy.call(this, plStart, plLength, ppResult)
    end
    def paste(this : IAVIEditStream*, plPos : Int32*, plLength : Int32*, pstream : Void*, lStart : Int32, lEnd : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.paste.call(this, plPos, plLength, pstream, lStart, lEnd)
    end
    def clone(this : IAVIEditStream*, ppResult : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppResult)
    end
    def set_info(this : IAVIEditStream*, lpInfo : Win32cr::Media::Multimedia::AVISTREAMINFOW*, cbInfo : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_info.call(this, lpInfo, cbInfo)
    end

  end

  @[Extern]
  record IAVIPersistFileVtbl,
    query_interface : Proc(IAVIPersistFile*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAVIPersistFile*, UInt32),
    release : Proc(IAVIPersistFile*, UInt32),
    get_class_id : Proc(IAVIPersistFile*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    is_dirty : Proc(IAVIPersistFile*, Win32cr::Foundation::HRESULT),
    load : Proc(IAVIPersistFile*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    save : Proc(IAVIPersistFile*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    save_completed : Proc(IAVIPersistFile*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_cur_file : Proc(IAVIPersistFile*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    reserved1 : Proc(IAVIPersistFile*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAVIPersistFile, lpVtbl : IAVIPersistFileVtbl* do
    GUID = LibC::GUID.new(0x20025_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IAVIPersistFile*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAVIPersistFile*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAVIPersistFile*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_class_id(this : IAVIPersistFile*, pClassID : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_class_id.call(this, pClassID)
    end
    def is_dirty(this : IAVIPersistFile*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_dirty.call(this)
    end
    def load(this : IAVIPersistFile*, pszFileName : Win32cr::Foundation::PWSTR, dwMode : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.load.call(this, pszFileName, dwMode)
    end
    def save(this : IAVIPersistFile*, pszFileName : Win32cr::Foundation::PWSTR, fRemember : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.save.call(this, pszFileName, fRemember)
    end
    def save_completed(this : IAVIPersistFile*, pszFileName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.save_completed.call(this, pszFileName)
    end
    def get_cur_file(this : IAVIPersistFile*, ppszFileName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cur_file.call(this, ppszFileName)
    end
    def reserved1(this : IAVIPersistFile*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reserved1.call(this)
    end

  end

  @[Extern]
  record IAVIFileVtbl,
    query_interface : Proc(IAVIFile*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAVIFile*, UInt32),
    release : Proc(IAVIFile*, UInt32),
    info : Proc(IAVIFile*, Win32cr::Media::Multimedia::AVIFILEINFOW*, Int32, Win32cr::Foundation::HRESULT),
    get_stream : Proc(IAVIFile*, Void**, UInt32, Int32, Win32cr::Foundation::HRESULT),
    create_stream : Proc(IAVIFile*, Void**, Win32cr::Media::Multimedia::AVISTREAMINFOW*, Win32cr::Foundation::HRESULT),
    write_data : Proc(IAVIFile*, UInt32, Void*, Int32, Win32cr::Foundation::HRESULT),
    read_data : Proc(IAVIFile*, UInt32, Void*, Int32*, Win32cr::Foundation::HRESULT),
    end_record : Proc(IAVIFile*, Win32cr::Foundation::HRESULT),
    delete_stream : Proc(IAVIFile*, UInt32, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAVIFile, lpVtbl : IAVIFileVtbl* do
    GUID = LibC::GUID.new(0x20020_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IAVIFile*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAVIFile*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAVIFile*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def info(this : IAVIFile*, pfi : Win32cr::Media::Multimedia::AVIFILEINFOW*, lSize : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.info.call(this, pfi, lSize)
    end
    def get_stream(this : IAVIFile*, ppStream : Void**, fccType : UInt32, lParam : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_stream.call(this, ppStream, fccType, lParam)
    end
    def create_stream(this : IAVIFile*, ppStream : Void**, psi : Win32cr::Media::Multimedia::AVISTREAMINFOW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_stream.call(this, ppStream, psi)
    end
    def write_data(this : IAVIFile*, ckid : UInt32, lpData : Void*, cbData : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_data.call(this, ckid, lpData, cbData)
    end
    def read_data(this : IAVIFile*, ckid : UInt32, lpData : Void*, lpcbData : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read_data.call(this, ckid, lpData, lpcbData)
    end
    def end_record(this : IAVIFile*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.end_record.call(this)
    end
    def delete_stream(this : IAVIFile*, fccType : UInt32, lParam : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_stream.call(this, fccType, lParam)
    end

  end

  @[Extern]
  record IGetFrameVtbl,
    query_interface : Proc(IGetFrame*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IGetFrame*, UInt32),
    release : Proc(IGetFrame*, UInt32),
    get_frame : Proc(IGetFrame*, Int32, Void*),
    begin__ : Proc(IGetFrame*, Int32, Int32, Int32, Win32cr::Foundation::HRESULT),
    end__ : Proc(IGetFrame*, Win32cr::Foundation::HRESULT),
    set_format : Proc(IGetFrame*, Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, Void*, Int32, Int32, Int32, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IGetFrame, lpVtbl : IGetFrameVtbl* do
    GUID = LibC::GUID.new(0x20023_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IGetFrame*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IGetFrame*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IGetFrame*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_frame(this : IGetFrame*, lPos : Int32) : Void*
      @lpVtbl.try &.value.get_frame.call(this, lPos)
    end
    def begin__(this : IGetFrame*, lStart : Int32, lEnd : Int32, lRate : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.begin__.call(this, lStart, lEnd, lRate)
    end
    def end__(this : IGetFrame*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.end__.call(this)
    end
    def set_format(this : IGetFrame*, lpbi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpBits : Void*, x : Int32, y : Int32, dx : Int32, dy : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_format.call(this, lpbi, lpBits, x, y, dx, dy)
    end

  end

  def mciSendCommandA(mciId : UInt32, uMsg : UInt32, dwParam1 : LibC::UIntPtrT, dwParam2 : LibC::UIntPtrT) : UInt32
    C.mciSendCommandA(mciId, uMsg, dwParam1, dwParam2)
  end

  def mciSendCommandW(mciId : UInt32, uMsg : UInt32, dwParam1 : LibC::UIntPtrT, dwParam2 : LibC::UIntPtrT) : UInt32
    C.mciSendCommandW(mciId, uMsg, dwParam1, dwParam2)
  end

  def mciSendStringA(lpstrCommand : Win32cr::Foundation::PSTR, lpstrReturnString : UInt8*, uReturnLength : UInt32, hwndCallback : Win32cr::Foundation::HWND) : UInt32
    C.mciSendStringA(lpstrCommand, lpstrReturnString, uReturnLength, hwndCallback)
  end

  def mciSendStringW(lpstrCommand : Win32cr::Foundation::PWSTR, lpstrReturnString : UInt16*, uReturnLength : UInt32, hwndCallback : Win32cr::Foundation::HWND) : UInt32
    C.mciSendStringW(lpstrCommand, lpstrReturnString, uReturnLength, hwndCallback)
  end

  def mciGetDeviceIDA(pszDevice : Win32cr::Foundation::PSTR) : UInt32
    C.mciGetDeviceIDA(pszDevice)
  end

  def mciGetDeviceIDW(pszDevice : Win32cr::Foundation::PWSTR) : UInt32
    C.mciGetDeviceIDW(pszDevice)
  end

  def mciGetDeviceIDFromElementIDA(dwElementID : UInt32, lpstrType : Win32cr::Foundation::PSTR) : UInt32
    C.mciGetDeviceIDFromElementIDA(dwElementID, lpstrType)
  end

  def mciGetDeviceIDFromElementIDW(dwElementID : UInt32, lpstrType : Win32cr::Foundation::PWSTR) : UInt32
    C.mciGetDeviceIDFromElementIDW(dwElementID, lpstrType)
  end

  def mciGetErrorStringA(mcierr : UInt32, pszText : UInt8*, cchText : UInt32) : Win32cr::Foundation::BOOL
    C.mciGetErrorStringA(mcierr, pszText, cchText)
  end

  def mciGetErrorStringW(mcierr : UInt32, pszText : UInt16*, cchText : UInt32) : Win32cr::Foundation::BOOL
    C.mciGetErrorStringW(mcierr, pszText, cchText)
  end

  def mciSetYieldProc(mciId : UInt32, fpYieldProc : Win32cr::Media::Multimedia::YIELDPROC, dwYieldData : UInt32) : Win32cr::Foundation::BOOL
    C.mciSetYieldProc(mciId, fpYieldProc, dwYieldData)
  end

  def mciGetCreatorTask(mciId : UInt32) : Win32cr::Media::HTASK
    C.mciGetCreatorTask(mciId)
  end

  def mciGetYieldProc(mciId : UInt32, pdwYieldData : UInt32*) : Win32cr::Media::Multimedia::YIELDPROC
    C.mciGetYieldProc(mciId, pdwYieldData)
  end

  def mciGetDriverData(wDeviceID : UInt32) : LibC::UIntPtrT
    C.mciGetDriverData(wDeviceID)
  end

  def mciLoadCommandResource(hInstance : Win32cr::Foundation::HANDLE, lpResName : Win32cr::Foundation::PWSTR, wType : UInt32) : UInt32
    C.mciLoadCommandResource(hInstance, lpResName, wType)
  end

  def mciSetDriverData(wDeviceID : UInt32, dwData : LibC::UIntPtrT) : Win32cr::Foundation::BOOL
    C.mciSetDriverData(wDeviceID, dwData)
  end

  def mciDriverYield(wDeviceID : UInt32) : UInt32
    C.mciDriverYield(wDeviceID)
  end

  def mciDriverNotify(hwndCallback : Win32cr::Foundation::HANDLE, wDeviceID : UInt32, uStatus : UInt32) : Win32cr::Foundation::BOOL
    C.mciDriverNotify(hwndCallback, wDeviceID, uStatus)
  end

  def mciFreeCommandResource(wTable : UInt32) : Win32cr::Foundation::BOOL
    C.mciFreeCommandResource(wTable)
  end

  def closeDriver(hDriver : Win32cr::Media::Multimedia::HDRVR, lParam1 : Win32cr::Foundation::LPARAM, lParam2 : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
    C.CloseDriver(hDriver, lParam1, lParam2)
  end

  def openDriver(szDriverName : Win32cr::Foundation::PWSTR, szSectionName : Win32cr::Foundation::PWSTR, lParam2 : Win32cr::Foundation::LPARAM) : Win32cr::Media::Multimedia::HDRVR
    C.OpenDriver(szDriverName, szSectionName, lParam2)
  end

  def sendDriverMessage(hDriver : Win32cr::Media::Multimedia::HDRVR, message : UInt32, lParam1 : Win32cr::Foundation::LPARAM, lParam2 : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
    C.SendDriverMessage(hDriver, message, lParam1, lParam2)
  end

  def drvGetModuleHandle(hDriver : Win32cr::Media::Multimedia::HDRVR) : Win32cr::Foundation::HINSTANCE
    C.DrvGetModuleHandle(hDriver)
  end

  def getDriverModuleHandle(hDriver : Win32cr::Media::Multimedia::HDRVR) : Win32cr::Foundation::HINSTANCE
    C.GetDriverModuleHandle(hDriver)
  end

  def defDriverProc(dwDriverIdentifier : LibC::UIntPtrT, hdrvr : Win32cr::Media::Multimedia::HDRVR, uMsg : UInt32, lParam1 : Win32cr::Foundation::LPARAM, lParam2 : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
    C.DefDriverProc(dwDriverIdentifier, hdrvr, uMsg, lParam1, lParam2)
  end

  def driverCallback(dwCallback : LibC::UIntPtrT, dwFlags : UInt32, hDevice : Win32cr::Media::Multimedia::HDRVR, dwMsg : UInt32, dwUser : LibC::UIntPtrT, dwParam1 : LibC::UIntPtrT, dwParam2 : LibC::UIntPtrT) : Win32cr::Foundation::BOOL
    C.DriverCallback(dwCallback, dwFlags, hDevice, dwMsg, dwUser, dwParam1, dwParam2)
  end

  def sndOpenSound(event_name : Win32cr::Foundation::PWSTR, app_name : Win32cr::Foundation::PWSTR, flags : Int32, file_handle : Win32cr::Foundation::HANDLE*) : Int32
    C.sndOpenSound(event_name, app_name, flags, file_handle)
  end

  def mmDrvInstall(hDriver : Win32cr::Media::Multimedia::HDRVR, wszDrvEntry : Win32cr::Foundation::PWSTR, drvMessage : Win32cr::Media::Multimedia::DRIVERMSGPROC, wFlags : UInt32) : UInt32
    C.mmDrvInstall(hDriver, wszDrvEntry, drvMessage, wFlags)
  end

  def mmioStringToFOURCCA(sz : Win32cr::Foundation::PSTR, uFlags : UInt32) : UInt32
    C.mmioStringToFOURCCA(sz, uFlags)
  end

  def mmioStringToFOURCCW(sz : Win32cr::Foundation::PWSTR, uFlags : UInt32) : UInt32
    C.mmioStringToFOURCCW(sz, uFlags)
  end

  def mmioInstallIOProcA(fccIOProc : UInt32, pIOProc : Win32cr::Media::Multimedia::LPMMIOPROC, dwFlags : UInt32) : Win32cr::Media::Multimedia::LPMMIOPROC
    C.mmioInstallIOProcA(fccIOProc, pIOProc, dwFlags)
  end

  def mmioInstallIOProcW(fccIOProc : UInt32, pIOProc : Win32cr::Media::Multimedia::LPMMIOPROC, dwFlags : UInt32) : Win32cr::Media::Multimedia::LPMMIOPROC
    C.mmioInstallIOProcW(fccIOProc, pIOProc, dwFlags)
  end

  def mmioOpenA(pszFileName : UInt8*, pmmioinfo : Win32cr::Media::Multimedia::MMIOINFO*, fdwOpen : UInt32) : Win32cr::Media::Multimedia::HMMIO
    C.mmioOpenA(pszFileName, pmmioinfo, fdwOpen)
  end

  def mmioOpenW(pszFileName : UInt16*, pmmioinfo : Win32cr::Media::Multimedia::MMIOINFO*, fdwOpen : UInt32) : Win32cr::Media::Multimedia::HMMIO
    C.mmioOpenW(pszFileName, pmmioinfo, fdwOpen)
  end

  def mmioRenameA(pszFileName : Win32cr::Foundation::PSTR, pszNewFileName : Win32cr::Foundation::PSTR, pmmioinfo : Win32cr::Media::Multimedia::MMIOINFO*, fdwRename : UInt32) : UInt32
    C.mmioRenameA(pszFileName, pszNewFileName, pmmioinfo, fdwRename)
  end

  def mmioRenameW(pszFileName : Win32cr::Foundation::PWSTR, pszNewFileName : Win32cr::Foundation::PWSTR, pmmioinfo : Win32cr::Media::Multimedia::MMIOINFO*, fdwRename : UInt32) : UInt32
    C.mmioRenameW(pszFileName, pszNewFileName, pmmioinfo, fdwRename)
  end

  def mmioClose(hmmio : Win32cr::Media::Multimedia::HMMIO, fuClose : UInt32) : UInt32
    C.mmioClose(hmmio, fuClose)
  end

  def mmioRead(hmmio : Win32cr::Media::Multimedia::HMMIO, pch : Int8*, cch : Int32) : Int32
    C.mmioRead(hmmio, pch, cch)
  end

  def mmioWrite(hmmio : Win32cr::Media::Multimedia::HMMIO, pch : Win32cr::Foundation::PSTR, cch : Int32) : Int32
    C.mmioWrite(hmmio, pch, cch)
  end

  def mmioSeek(hmmio : Win32cr::Media::Multimedia::HMMIO, lOffset : Int32, iOrigin : Int32) : Int32
    C.mmioSeek(hmmio, lOffset, iOrigin)
  end

  def mmioGetInfo(hmmio : Win32cr::Media::Multimedia::HMMIO, pmmioinfo : Win32cr::Media::Multimedia::MMIOINFO*, fuInfo : UInt32) : UInt32
    C.mmioGetInfo(hmmio, pmmioinfo, fuInfo)
  end

  def mmioSetInfo(hmmio : Win32cr::Media::Multimedia::HMMIO, pmmioinfo : Win32cr::Media::Multimedia::MMIOINFO*, fuInfo : UInt32) : UInt32
    C.mmioSetInfo(hmmio, pmmioinfo, fuInfo)
  end

  def mmioSetBuffer(hmmio : Win32cr::Media::Multimedia::HMMIO, pchBuffer : UInt8*, cchBuffer : Int32, fuBuffer : UInt32) : UInt32
    C.mmioSetBuffer(hmmio, pchBuffer, cchBuffer, fuBuffer)
  end

  def mmioFlush(hmmio : Win32cr::Media::Multimedia::HMMIO, fuFlush : UInt32) : UInt32
    C.mmioFlush(hmmio, fuFlush)
  end

  def mmioAdvance(hmmio : Win32cr::Media::Multimedia::HMMIO, pmmioinfo : Win32cr::Media::Multimedia::MMIOINFO*, fuAdvance : UInt32) : UInt32
    C.mmioAdvance(hmmio, pmmioinfo, fuAdvance)
  end

  def mmioSendMessage(hmmio : Win32cr::Media::Multimedia::HMMIO, uMsg : UInt32, lParam1 : Win32cr::Foundation::LPARAM, lParam2 : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
    C.mmioSendMessage(hmmio, uMsg, lParam1, lParam2)
  end

  def mmioDescend(hmmio : Win32cr::Media::Multimedia::HMMIO, pmmcki : Win32cr::Media::Multimedia::MMCKINFO*, pmmckiParent : Win32cr::Media::Multimedia::MMCKINFO*, fuDescend : UInt32) : UInt32
    C.mmioDescend(hmmio, pmmcki, pmmckiParent, fuDescend)
  end

  def mmioAscend(hmmio : Win32cr::Media::Multimedia::HMMIO, pmmcki : Win32cr::Media::Multimedia::MMCKINFO*, fuAscend : UInt32) : UInt32
    C.mmioAscend(hmmio, pmmcki, fuAscend)
  end

  def mmioCreateChunk(hmmio : Win32cr::Media::Multimedia::HMMIO, pmmcki : Win32cr::Media::Multimedia::MMCKINFO*, fuCreate : UInt32) : UInt32
    C.mmioCreateChunk(hmmio, pmmcki, fuCreate)
  end

  def joyGetPosEx(uJoyID : UInt32, pji : Win32cr::Media::Multimedia::JOYINFOEX*) : UInt32
    C.joyGetPosEx(uJoyID, pji)
  end

  def joyGetNumDevs : UInt32
    C.joyGetNumDevs
  end

  def joyGetDevCapsA(uJoyID : LibC::UIntPtrT, pjc : Win32cr::Media::Multimedia::JOYCAPSA*, cbjc : UInt32) : UInt32
    C.joyGetDevCapsA(uJoyID, pjc, cbjc)
  end

  def joyGetDevCapsW(uJoyID : LibC::UIntPtrT, pjc : Win32cr::Media::Multimedia::JOYCAPSW*, cbjc : UInt32) : UInt32
    C.joyGetDevCapsW(uJoyID, pjc, cbjc)
  end

  def joyGetPos(uJoyID : UInt32, pji : Win32cr::Media::Multimedia::JOYINFO*) : UInt32
    C.joyGetPos(uJoyID, pji)
  end

  def joyGetThreshold(uJoyID : UInt32, puThreshold : UInt32*) : UInt32
    C.joyGetThreshold(uJoyID, puThreshold)
  end

  def joyReleaseCapture(uJoyID : UInt32) : UInt32
    C.joyReleaseCapture(uJoyID)
  end

  def joySetCapture(hwnd : Win32cr::Foundation::HWND, uJoyID : UInt32, uPeriod : UInt32, fChanged : Win32cr::Foundation::BOOL) : UInt32
    C.joySetCapture(hwnd, uJoyID, uPeriod, fChanged)
  end

  def joySetThreshold(uJoyID : UInt32, uThreshold : UInt32) : UInt32
    C.joySetThreshold(uJoyID, uThreshold)
  end

  def videoForWindowsVersion : UInt32
    C.VideoForWindowsVersion
  end

  def iCInfo(fccType : UInt32, fccHandler : UInt32, lpicinfo : Win32cr::Media::Multimedia::ICINFO*) : Win32cr::Foundation::BOOL
    C.ICInfo(fccType, fccHandler, lpicinfo)
  end

  def iCInstall(fccType : UInt32, fccHandler : UInt32, lParam : Win32cr::Foundation::LPARAM, szDesc : Win32cr::Foundation::PSTR, wFlags : UInt32) : Win32cr::Foundation::BOOL
    C.ICInstall(fccType, fccHandler, lParam, szDesc, wFlags)
  end

  def iCRemove(fccType : UInt32, fccHandler : UInt32, wFlags : UInt32) : Win32cr::Foundation::BOOL
    C.ICRemove(fccType, fccHandler, wFlags)
  end

  def iCGetInfo(hic : Win32cr::Media::Multimedia::HIC, picinfo : Win32cr::Media::Multimedia::ICINFO*, cb : UInt32) : Win32cr::Foundation::LRESULT
    C.ICGetInfo(hic, picinfo, cb)
  end

  def iCOpen(fccType : UInt32, fccHandler : UInt32, wMode : UInt32) : Win32cr::Media::Multimedia::HIC
    C.ICOpen(fccType, fccHandler, wMode)
  end

  def iCOpenFunction(fccType : UInt32, fccHandler : UInt32, wMode : UInt32, lpfnHandler : Win32cr::Foundation::FARPROC) : Win32cr::Media::Multimedia::HIC
    C.ICOpenFunction(fccType, fccHandler, wMode, lpfnHandler)
  end

  def iCClose(hic : Win32cr::Media::Multimedia::HIC) : Win32cr::Foundation::LRESULT
    C.ICClose(hic)
  end

  def iCSendMessage(hic : Win32cr::Media::Multimedia::HIC, msg : UInt32, dw1 : LibC::UIntPtrT, dw2 : LibC::UIntPtrT) : Win32cr::Foundation::LRESULT
    C.ICSendMessage(hic, msg, dw1, dw2)
  end

  def iCCompress(hic : Win32cr::Media::Multimedia::HIC, dwFlags : UInt32, lpbiOutput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpData : Void*, lpbiInput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpBits : Void*, lpckid : UInt32*, lpdwFlags : UInt32*, lFrameNum : Int32, dwFrameSize : UInt32, dwQuality : UInt32, lpbiPrev : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpPrev : Void*) : UInt32
    C.ICCompress(hic, dwFlags, lpbiOutput, lpData, lpbiInput, lpBits, lpckid, lpdwFlags, lFrameNum, dwFrameSize, dwQuality, lpbiPrev, lpPrev)
  end

  def iCDecompress(hic : Win32cr::Media::Multimedia::HIC, dwFlags : UInt32, lpbiFormat : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpData : Void*, lpbi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpBits : Void*) : UInt32
    C.ICDecompress(hic, dwFlags, lpbiFormat, lpData, lpbi, lpBits)
  end

  def iCDrawBegin(hic : Win32cr::Media::Multimedia::HIC, dwFlags : UInt32, hpal : Win32cr::Graphics::Gdi::HPALETTE, hwnd : Win32cr::Foundation::HWND, hdc : Win32cr::Graphics::Gdi::HDC, xDst : Int32, yDst : Int32, dxDst : Int32, dyDst : Int32, lpbi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, xSrc : Int32, ySrc : Int32, dxSrc : Int32, dySrc : Int32, dwRate : UInt32, dwScale : UInt32) : UInt32
    C.ICDrawBegin(hic, dwFlags, hpal, hwnd, hdc, xDst, yDst, dxDst, dyDst, lpbi, xSrc, ySrc, dxSrc, dySrc, dwRate, dwScale)
  end

  def iCDraw(hic : Win32cr::Media::Multimedia::HIC, dwFlags : UInt32, lpFormat : Void*, lpData : Void*, cbData : UInt32, lTime : Int32) : UInt32
    C.ICDraw(hic, dwFlags, lpFormat, lpData, cbData, lTime)
  end

  def iCLocate(fccType : UInt32, fccHandler : UInt32, lpbiIn : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpbiOut : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, wFlags : UInt16) : Win32cr::Media::Multimedia::HIC
    C.ICLocate(fccType, fccHandler, lpbiIn, lpbiOut, wFlags)
  end

  def iCGetDisplayFormat(hic : Win32cr::Media::Multimedia::HIC, lpbiIn : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpbiOut : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, bit_depth : Int32, dx : Int32, dy : Int32) : Win32cr::Media::Multimedia::HIC
    C.ICGetDisplayFormat(hic, lpbiIn, lpbiOut, bit_depth, dx, dy)
  end

  def iCImageCompress(hic : Win32cr::Media::Multimedia::HIC, uiFlags : UInt32, lpbiIn : Win32cr::Graphics::Gdi::BITMAPINFO*, lpBits : Void*, lpbiOut : Win32cr::Graphics::Gdi::BITMAPINFO*, lQuality : Int32, plSize : Int32*) : Win32cr::Foundation::HANDLE
    C.ICImageCompress(hic, uiFlags, lpbiIn, lpBits, lpbiOut, lQuality, plSize)
  end

  def iCImageDecompress(hic : Win32cr::Media::Multimedia::HIC, uiFlags : UInt32, lpbiIn : Win32cr::Graphics::Gdi::BITMAPINFO*, lpBits : Void*, lpbiOut : Win32cr::Graphics::Gdi::BITMAPINFO*) : Win32cr::Foundation::HANDLE
    C.ICImageDecompress(hic, uiFlags, lpbiIn, lpBits, lpbiOut)
  end

  def iCCompressorChoose(hwnd : Win32cr::Foundation::HWND, uiFlags : UInt32, pvIn : Void*, lpData : Void*, pc : Win32cr::Media::Multimedia::COMPVARS*, lpszTitle : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.ICCompressorChoose(hwnd, uiFlags, pvIn, lpData, pc, lpszTitle)
  end

  def iCSeqCompressFrameStart(pc : Win32cr::Media::Multimedia::COMPVARS*, lpbiIn : Win32cr::Graphics::Gdi::BITMAPINFO*) : Win32cr::Foundation::BOOL
    C.ICSeqCompressFrameStart(pc, lpbiIn)
  end

  def iCSeqCompressFrameEnd(pc : Win32cr::Media::Multimedia::COMPVARS*) : Void
    C.ICSeqCompressFrameEnd(pc)
  end

  def iCSeqCompressFrame(pc : Win32cr::Media::Multimedia::COMPVARS*, uiFlags : UInt32, lpBits : Void*, pfKey : Win32cr::Foundation::BOOL*, plSize : Int32*) : Void*
    C.ICSeqCompressFrame(pc, uiFlags, lpBits, pfKey, plSize)
  end

  def iCCompressorFree(pc : Win32cr::Media::Multimedia::COMPVARS*) : Void
    C.ICCompressorFree(pc)
  end

  def drawDibOpen : LibC::IntPtrT
    C.DrawDibOpen
  end

  def drawDibClose(hdd : LibC::IntPtrT) : Win32cr::Foundation::BOOL
    C.DrawDibClose(hdd)
  end

  def drawDibGetBuffer(hdd : LibC::IntPtrT, lpbi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, dwSize : UInt32, dwFlags : UInt32) : Void*
    C.DrawDibGetBuffer(hdd, lpbi, dwSize, dwFlags)
  end

  def drawDibGetPalette(hdd : LibC::IntPtrT) : Win32cr::Graphics::Gdi::HPALETTE
    C.DrawDibGetPalette(hdd)
  end

  def drawDibSetPalette(hdd : LibC::IntPtrT, hpal : Win32cr::Graphics::Gdi::HPALETTE) : Win32cr::Foundation::BOOL
    C.DrawDibSetPalette(hdd, hpal)
  end

  def drawDibChangePalette(hdd : LibC::IntPtrT, iStart : Int32, iLen : Int32, lppe : Win32cr::Graphics::Gdi::PALETTEENTRY*) : Win32cr::Foundation::BOOL
    C.DrawDibChangePalette(hdd, iStart, iLen, lppe)
  end

  def drawDibRealize(hdd : LibC::IntPtrT, hdc : Win32cr::Graphics::Gdi::HDC, fBackground : Win32cr::Foundation::BOOL) : UInt32
    C.DrawDibRealize(hdd, hdc, fBackground)
  end

  def drawDibStart(hdd : LibC::IntPtrT, rate : UInt32) : Win32cr::Foundation::BOOL
    C.DrawDibStart(hdd, rate)
  end

  def drawDibStop(hdd : LibC::IntPtrT) : Win32cr::Foundation::BOOL
    C.DrawDibStop(hdd)
  end

  def drawDibBegin(hdd : LibC::IntPtrT, hdc : Win32cr::Graphics::Gdi::HDC, dxDst : Int32, dyDst : Int32, lpbi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, dxSrc : Int32, dySrc : Int32, wFlags : UInt32) : Win32cr::Foundation::BOOL
    C.DrawDibBegin(hdd, hdc, dxDst, dyDst, lpbi, dxSrc, dySrc, wFlags)
  end

  def drawDibDraw(hdd : LibC::IntPtrT, hdc : Win32cr::Graphics::Gdi::HDC, xDst : Int32, yDst : Int32, dxDst : Int32, dyDst : Int32, lpbi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpBits : Void*, xSrc : Int32, ySrc : Int32, dxSrc : Int32, dySrc : Int32, wFlags : UInt32) : Win32cr::Foundation::BOOL
    C.DrawDibDraw(hdd, hdc, xDst, yDst, dxDst, dyDst, lpbi, lpBits, xSrc, ySrc, dxSrc, dySrc, wFlags)
  end

  def drawDibEnd(hdd : LibC::IntPtrT) : Win32cr::Foundation::BOOL
    C.DrawDibEnd(hdd)
  end

  def drawDibTime(hdd : LibC::IntPtrT, lpddtime : Win32cr::Media::Multimedia::DRAWDIBTIME*) : Win32cr::Foundation::BOOL
    C.DrawDibTime(hdd, lpddtime)
  end

  def drawDibProfileDisplay(lpbi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*) : Win32cr::Foundation::LRESULT
    C.DrawDibProfileDisplay(lpbi)
  end

  def aVIFileInit : Void
    C.AVIFileInit
  end

  def aVIFileExit : Void
    C.AVIFileExit
  end

  def aVIFileAddRef(pfile : Void*) : UInt32
    C.AVIFileAddRef(pfile)
  end

  def aVIFileRelease(pfile : Void*) : UInt32
    C.AVIFileRelease(pfile)
  end

  def aVIFileOpenA(ppfile : Void**, szFile : Win32cr::Foundation::PSTR, uMode : UInt32, lpHandler : LibC::GUID*) : Win32cr::Foundation::HRESULT
    C.AVIFileOpenA(ppfile, szFile, uMode, lpHandler)
  end

  def aVIFileOpenW(ppfile : Void**, szFile : Win32cr::Foundation::PWSTR, uMode : UInt32, lpHandler : LibC::GUID*) : Win32cr::Foundation::HRESULT
    C.AVIFileOpenW(ppfile, szFile, uMode, lpHandler)
  end

  def aVIFileInfoW(pfile : Void*, pfi : Win32cr::Media::Multimedia::AVIFILEINFOW*, lSize : Int32) : Win32cr::Foundation::HRESULT
    C.AVIFileInfoW(pfile, pfi, lSize)
  end

  def aVIFileInfoA(pfile : Void*, pfi : Win32cr::Media::Multimedia::AVIFILEINFOA*, lSize : Int32) : Win32cr::Foundation::HRESULT
    C.AVIFileInfoA(pfile, pfi, lSize)
  end

  def aVIFileGetStream(pfile : Void*, ppavi : Void**, fccType : UInt32, lParam : Int32) : Win32cr::Foundation::HRESULT
    C.AVIFileGetStream(pfile, ppavi, fccType, lParam)
  end

  def aVIFileCreateStreamW(pfile : Void*, ppavi : Void**, psi : Win32cr::Media::Multimedia::AVISTREAMINFOW*) : Win32cr::Foundation::HRESULT
    C.AVIFileCreateStreamW(pfile, ppavi, psi)
  end

  def aVIFileCreateStreamA(pfile : Void*, ppavi : Void**, psi : Win32cr::Media::Multimedia::AVISTREAMINFOA*) : Win32cr::Foundation::HRESULT
    C.AVIFileCreateStreamA(pfile, ppavi, psi)
  end

  def aVIFileWriteData(pfile : Void*, ckid : UInt32, lpData : Void*, cbData : Int32) : Win32cr::Foundation::HRESULT
    C.AVIFileWriteData(pfile, ckid, lpData, cbData)
  end

  def aVIFileReadData(pfile : Void*, ckid : UInt32, lpData : Void*, lpcbData : Int32*) : Win32cr::Foundation::HRESULT
    C.AVIFileReadData(pfile, ckid, lpData, lpcbData)
  end

  def aVIFileEndRecord(pfile : Void*) : Win32cr::Foundation::HRESULT
    C.AVIFileEndRecord(pfile)
  end

  def aVIStreamAddRef(pavi : Void*) : UInt32
    C.AVIStreamAddRef(pavi)
  end

  def aVIStreamRelease(pavi : Void*) : UInt32
    C.AVIStreamRelease(pavi)
  end

  def aVIStreamInfoW(pavi : Void*, psi : Win32cr::Media::Multimedia::AVISTREAMINFOW*, lSize : Int32) : Win32cr::Foundation::HRESULT
    C.AVIStreamInfoW(pavi, psi, lSize)
  end

  def aVIStreamInfoA(pavi : Void*, psi : Win32cr::Media::Multimedia::AVISTREAMINFOA*, lSize : Int32) : Win32cr::Foundation::HRESULT
    C.AVIStreamInfoA(pavi, psi, lSize)
  end

  def aVIStreamFindSample(pavi : Void*, lPos : Int32, lFlags : Int32) : Int32
    C.AVIStreamFindSample(pavi, lPos, lFlags)
  end

  def aVIStreamReadFormat(pavi : Void*, lPos : Int32, lpFormat : Void*, lpcbFormat : Int32*) : Win32cr::Foundation::HRESULT
    C.AVIStreamReadFormat(pavi, lPos, lpFormat, lpcbFormat)
  end

  def aVIStreamSetFormat(pavi : Void*, lPos : Int32, lpFormat : Void*, cbFormat : Int32) : Win32cr::Foundation::HRESULT
    C.AVIStreamSetFormat(pavi, lPos, lpFormat, cbFormat)
  end

  def aVIStreamReadData(pavi : Void*, fcc : UInt32, lp : Void*, lpcb : Int32*) : Win32cr::Foundation::HRESULT
    C.AVIStreamReadData(pavi, fcc, lp, lpcb)
  end

  def aVIStreamWriteData(pavi : Void*, fcc : UInt32, lp : Void*, cb : Int32) : Win32cr::Foundation::HRESULT
    C.AVIStreamWriteData(pavi, fcc, lp, cb)
  end

  def aVIStreamRead(pavi : Void*, lStart : Int32, lSamples : Int32, lpBuffer : Void*, cbBuffer : Int32, plBytes : Int32*, plSamples : Int32*) : Win32cr::Foundation::HRESULT
    C.AVIStreamRead(pavi, lStart, lSamples, lpBuffer, cbBuffer, plBytes, plSamples)
  end

  def aVIStreamWrite(pavi : Void*, lStart : Int32, lSamples : Int32, lpBuffer : Void*, cbBuffer : Int32, dwFlags : UInt32, plSampWritten : Int32*, plBytesWritten : Int32*) : Win32cr::Foundation::HRESULT
    C.AVIStreamWrite(pavi, lStart, lSamples, lpBuffer, cbBuffer, dwFlags, plSampWritten, plBytesWritten)
  end

  def aVIStreamStart(pavi : Void*) : Int32
    C.AVIStreamStart(pavi)
  end

  def aVIStreamLength(pavi : Void*) : Int32
    C.AVIStreamLength(pavi)
  end

  def aVIStreamTimeToSample(pavi : Void*, lTime : Int32) : Int32
    C.AVIStreamTimeToSample(pavi, lTime)
  end

  def aVIStreamSampleToTime(pavi : Void*, lSample : Int32) : Int32
    C.AVIStreamSampleToTime(pavi, lSample)
  end

  def aVIStreamBeginStreaming(pavi : Void*, lStart : Int32, lEnd : Int32, lRate : Int32) : Win32cr::Foundation::HRESULT
    C.AVIStreamBeginStreaming(pavi, lStart, lEnd, lRate)
  end

  def aVIStreamEndStreaming(pavi : Void*) : Win32cr::Foundation::HRESULT
    C.AVIStreamEndStreaming(pavi)
  end

  def aVIStreamGetFrameOpen(pavi : Void*, lpbiWanted : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*) : Void*
    C.AVIStreamGetFrameOpen(pavi, lpbiWanted)
  end

  def aVIStreamGetFrame(pg : Void*, lPos : Int32) : Void*
    C.AVIStreamGetFrame(pg, lPos)
  end

  def aVIStreamGetFrameClose(pg : Void*) : Win32cr::Foundation::HRESULT
    C.AVIStreamGetFrameClose(pg)
  end

  def aVIStreamOpenFromFileA(ppavi : Void**, szFile : Win32cr::Foundation::PSTR, fccType : UInt32, lParam : Int32, mode : UInt32, pclsidHandler : LibC::GUID*) : Win32cr::Foundation::HRESULT
    C.AVIStreamOpenFromFileA(ppavi, szFile, fccType, lParam, mode, pclsidHandler)
  end

  def aVIStreamOpenFromFileW(ppavi : Void**, szFile : Win32cr::Foundation::PWSTR, fccType : UInt32, lParam : Int32, mode : UInt32, pclsidHandler : LibC::GUID*) : Win32cr::Foundation::HRESULT
    C.AVIStreamOpenFromFileW(ppavi, szFile, fccType, lParam, mode, pclsidHandler)
  end

  def aVIStreamCreate(ppavi : Void**, lParam1 : Int32, lParam2 : Int32, pclsidHandler : LibC::GUID*) : Win32cr::Foundation::HRESULT
    C.AVIStreamCreate(ppavi, lParam1, lParam2, pclsidHandler)
  end

  def aVIMakeCompressedStream(ppsCompressed : Void**, ppsSource : Void*, lpOptions : Win32cr::Media::Multimedia::AVICOMPRESSOPTIONS*, pclsidHandler : LibC::GUID*) : Win32cr::Foundation::HRESULT
    C.AVIMakeCompressedStream(ppsCompressed, ppsSource, lpOptions, pclsidHandler)
  end

  def aVISaveA(szFile : Win32cr::Foundation::PSTR, pclsidHandler : LibC::GUID*, lpfnCallback : Win32cr::Media::Multimedia::AVISAVECALLBACK, nStreams : Int32, pfile : Void*, lpOptions : Win32cr::Media::Multimedia::AVICOMPRESSOPTIONS*) : Win32cr::Foundation::HRESULT
    C.AVISaveA(szFile, pclsidHandler, lpfnCallback, nStreams, pfile, lpOptions)
  end

  def aVISaveVA(szFile : Win32cr::Foundation::PSTR, pclsidHandler : LibC::GUID*, lpfnCallback : Win32cr::Media::Multimedia::AVISAVECALLBACK, nStreams : Int32, ppavi : Void**, plpOptions : Win32cr::Media::Multimedia::AVICOMPRESSOPTIONS**) : Win32cr::Foundation::HRESULT
    C.AVISaveVA(szFile, pclsidHandler, lpfnCallback, nStreams, ppavi, plpOptions)
  end

  def aVISaveW(szFile : Win32cr::Foundation::PWSTR, pclsidHandler : LibC::GUID*, lpfnCallback : Win32cr::Media::Multimedia::AVISAVECALLBACK, nStreams : Int32, pfile : Void*, lpOptions : Win32cr::Media::Multimedia::AVICOMPRESSOPTIONS*) : Win32cr::Foundation::HRESULT
    C.AVISaveW(szFile, pclsidHandler, lpfnCallback, nStreams, pfile, lpOptions)
  end

  def aVISaveVW(szFile : Win32cr::Foundation::PWSTR, pclsidHandler : LibC::GUID*, lpfnCallback : Win32cr::Media::Multimedia::AVISAVECALLBACK, nStreams : Int32, ppavi : Void**, plpOptions : Win32cr::Media::Multimedia::AVICOMPRESSOPTIONS**) : Win32cr::Foundation::HRESULT
    C.AVISaveVW(szFile, pclsidHandler, lpfnCallback, nStreams, ppavi, plpOptions)
  end

  def aVISaveOptions(hwnd : Win32cr::Foundation::HWND, uiFlags : UInt32, nStreams : Int32, ppavi : Void**, plpOptions : Win32cr::Media::Multimedia::AVICOMPRESSOPTIONS**) : LibC::IntPtrT
    C.AVISaveOptions(hwnd, uiFlags, nStreams, ppavi, plpOptions)
  end

  def aVISaveOptionsFree(nStreams : Int32, plpOptions : Win32cr::Media::Multimedia::AVICOMPRESSOPTIONS**) : Win32cr::Foundation::HRESULT
    C.AVISaveOptionsFree(nStreams, plpOptions)
  end

  def aVIBuildFilterW(lpszFilter : UInt16*, cbFilter : Int32, fSaving : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
    C.AVIBuildFilterW(lpszFilter, cbFilter, fSaving)
  end

  def aVIBuildFilterA(lpszFilter : UInt8*, cbFilter : Int32, fSaving : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
    C.AVIBuildFilterA(lpszFilter, cbFilter, fSaving)
  end

  def aVIMakeFileFromStreams(ppfile : Void**, nStreams : Int32, papStreams : Void**) : Win32cr::Foundation::HRESULT
    C.AVIMakeFileFromStreams(ppfile, nStreams, papStreams)
  end

  def aVIMakeStreamFromClipboard(cfFormat : UInt32, hGlobal : Win32cr::Foundation::HANDLE, ppstream : Void**) : Win32cr::Foundation::HRESULT
    C.AVIMakeStreamFromClipboard(cfFormat, hGlobal, ppstream)
  end

  def aVIPutFileOnClipboard(pf : Void*) : Win32cr::Foundation::HRESULT
    C.AVIPutFileOnClipboard(pf)
  end

  def aVIGetFromClipboard(lppf : Void**) : Win32cr::Foundation::HRESULT
    C.AVIGetFromClipboard(lppf)
  end

  def aVIClearClipboard : Win32cr::Foundation::HRESULT
    C.AVIClearClipboard
  end

  def createEditableStream(ppsEditable : Void**, psSource : Void*) : Win32cr::Foundation::HRESULT
    C.CreateEditableStream(ppsEditable, psSource)
  end

  def editStreamCut(pavi : Void*, plStart : Int32*, plLength : Int32*, ppResult : Void**) : Win32cr::Foundation::HRESULT
    C.EditStreamCut(pavi, plStart, plLength, ppResult)
  end

  def editStreamCopy(pavi : Void*, plStart : Int32*, plLength : Int32*, ppResult : Void**) : Win32cr::Foundation::HRESULT
    C.EditStreamCopy(pavi, plStart, plLength, ppResult)
  end

  def editStreamPaste(pavi : Void*, plPos : Int32*, plLength : Int32*, pstream : Void*, lStart : Int32, lEnd : Int32) : Win32cr::Foundation::HRESULT
    C.EditStreamPaste(pavi, plPos, plLength, pstream, lStart, lEnd)
  end

  def editStreamClone(pavi : Void*, ppResult : Void**) : Win32cr::Foundation::HRESULT
    C.EditStreamClone(pavi, ppResult)
  end

  def editStreamSetNameA(pavi : Void*, lpszName : Win32cr::Foundation::PSTR) : Win32cr::Foundation::HRESULT
    C.EditStreamSetNameA(pavi, lpszName)
  end

  def editStreamSetNameW(pavi : Void*, lpszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
    C.EditStreamSetNameW(pavi, lpszName)
  end

  def editStreamSetInfoW(pavi : Void*, lpInfo : Win32cr::Media::Multimedia::AVISTREAMINFOW*, cbInfo : Int32) : Win32cr::Foundation::HRESULT
    C.EditStreamSetInfoW(pavi, lpInfo, cbInfo)
  end

  def editStreamSetInfoA(pavi : Void*, lpInfo : Win32cr::Media::Multimedia::AVISTREAMINFOA*, cbInfo : Int32) : Win32cr::Foundation::HRESULT
    C.EditStreamSetInfoA(pavi, lpInfo, cbInfo)
  end

  def mCIWndCreateA(hwndParent : Win32cr::Foundation::HWND, hInstance : Win32cr::Foundation::HINSTANCE, dwStyle : UInt32, szFile : Win32cr::Foundation::PSTR) : Win32cr::Foundation::HWND
    C.MCIWndCreateA(hwndParent, hInstance, dwStyle, szFile)
  end

  def mCIWndCreateW(hwndParent : Win32cr::Foundation::HWND, hInstance : Win32cr::Foundation::HINSTANCE, dwStyle : UInt32, szFile : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HWND
    C.MCIWndCreateW(hwndParent, hInstance, dwStyle, szFile)
  end

  def mCIWndRegisterClass : Win32cr::Foundation::BOOL
    C.MCIWndRegisterClass
  end

  def capCreateCaptureWindowA(lpszWindowName : Win32cr::Foundation::PSTR, dwStyle : UInt32, x : Int32, y : Int32, nWidth : Int32, nHeight : Int32, hwndParent : Win32cr::Foundation::HWND, nID : Int32) : Win32cr::Foundation::HWND
    C.capCreateCaptureWindowA(lpszWindowName, dwStyle, x, y, nWidth, nHeight, hwndParent, nID)
  end

  def capGetDriverDescriptionA(wDriverIndex : UInt32, lpszName : UInt8*, cbName : Int32, lpszVer : UInt8*, cbVer : Int32) : Win32cr::Foundation::BOOL
    C.capGetDriverDescriptionA(wDriverIndex, lpszName, cbName, lpszVer, cbVer)
  end

  def capCreateCaptureWindowW(lpszWindowName : Win32cr::Foundation::PWSTR, dwStyle : UInt32, x : Int32, y : Int32, nWidth : Int32, nHeight : Int32, hwndParent : Win32cr::Foundation::HWND, nID : Int32) : Win32cr::Foundation::HWND
    C.capCreateCaptureWindowW(lpszWindowName, dwStyle, x, y, nWidth, nHeight, hwndParent, nID)
  end

  def capGetDriverDescriptionW(wDriverIndex : UInt32, lpszName : UInt16*, cbName : Int32, lpszVer : UInt16*, cbVer : Int32) : Win32cr::Foundation::BOOL
    C.capGetDriverDescriptionW(wDriverIndex, lpszName, cbName, lpszVer, cbVer)
  end

  def getOpenFileNamePreviewA(lpofn : Win32cr::UI::Controls::Dialogs::OPENFILENAMEA*) : Win32cr::Foundation::BOOL
    C.GetOpenFileNamePreviewA(lpofn)
  end

  def getSaveFileNamePreviewA(lpofn : Win32cr::UI::Controls::Dialogs::OPENFILENAMEA*) : Win32cr::Foundation::BOOL
    C.GetSaveFileNamePreviewA(lpofn)
  end

  def getOpenFileNamePreviewW(lpofn : Win32cr::UI::Controls::Dialogs::OPENFILENAMEW*) : Win32cr::Foundation::BOOL
    C.GetOpenFileNamePreviewW(lpofn)
  end

  def getSaveFileNamePreviewW(lpofn : Win32cr::UI::Controls::Dialogs::OPENFILENAMEW*) : Win32cr::Foundation::BOOL
    C.GetSaveFileNamePreviewW(lpofn)
  end

  def mmTaskCreate(lpfn : Win32cr::Media::Multimedia::LPTASKCALLBACK, lph : Win32cr::Foundation::HANDLE*, dwInst : LibC::UIntPtrT) : UInt32
    C.mmTaskCreate(lpfn, lph, dwInst)
  end

  def mmTaskBlock(h : UInt32) : Void
    C.mmTaskBlock(h)
  end

  def mmTaskSignal(h : UInt32) : Win32cr::Foundation::BOOL
    C.mmTaskSignal(h)
  end

  def mmTaskYield : Void
    C.mmTaskYield
  end

  def mmGetCurrentTask : UInt32
    C.mmGetCurrentTask
  end

  @[Link("winmm")]
  @[Link("msvfw32")]
  @[Link("avifil32")]
  @[Link("avicap32")]
  lib C
    # :nodoc:
    fun mciSendCommandA(mciId : UInt32, uMsg : UInt32, dwParam1 : LibC::UIntPtrT, dwParam2 : LibC::UIntPtrT) : UInt32

    # :nodoc:
    fun mciSendCommandW(mciId : UInt32, uMsg : UInt32, dwParam1 : LibC::UIntPtrT, dwParam2 : LibC::UIntPtrT) : UInt32

    # :nodoc:
    fun mciSendStringA(lpstrCommand : Win32cr::Foundation::PSTR, lpstrReturnString : UInt8*, uReturnLength : UInt32, hwndCallback : Win32cr::Foundation::HWND) : UInt32

    # :nodoc:
    fun mciSendStringW(lpstrCommand : Win32cr::Foundation::PWSTR, lpstrReturnString : UInt16*, uReturnLength : UInt32, hwndCallback : Win32cr::Foundation::HWND) : UInt32

    # :nodoc:
    fun mciGetDeviceIDA(pszDevice : Win32cr::Foundation::PSTR) : UInt32

    # :nodoc:
    fun mciGetDeviceIDW(pszDevice : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun mciGetDeviceIDFromElementIDA(dwElementID : UInt32, lpstrType : Win32cr::Foundation::PSTR) : UInt32

    # :nodoc:
    fun mciGetDeviceIDFromElementIDW(dwElementID : UInt32, lpstrType : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun mciGetErrorStringA(mcierr : UInt32, pszText : UInt8*, cchText : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun mciGetErrorStringW(mcierr : UInt32, pszText : UInt16*, cchText : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun mciSetYieldProc(mciId : UInt32, fpYieldProc : Win32cr::Media::Multimedia::YIELDPROC, dwYieldData : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun mciGetCreatorTask(mciId : UInt32) : Win32cr::Media::HTASK

    # :nodoc:
    fun mciGetYieldProc(mciId : UInt32, pdwYieldData : UInt32*) : Win32cr::Media::Multimedia::YIELDPROC

    # :nodoc:
    fun mciGetDriverData(wDeviceID : UInt32) : LibC::UIntPtrT

    # :nodoc:
    fun mciLoadCommandResource(hInstance : Win32cr::Foundation::HANDLE, lpResName : Win32cr::Foundation::PWSTR, wType : UInt32) : UInt32

    # :nodoc:
    fun mciSetDriverData(wDeviceID : UInt32, dwData : LibC::UIntPtrT) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun mciDriverYield(wDeviceID : UInt32) : UInt32

    # :nodoc:
    fun mciDriverNotify(hwndCallback : Win32cr::Foundation::HANDLE, wDeviceID : UInt32, uStatus : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun mciFreeCommandResource(wTable : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun CloseDriver(hDriver : Win32cr::Media::Multimedia::HDRVR, lParam1 : Win32cr::Foundation::LPARAM, lParam2 : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT

    # :nodoc:
    fun OpenDriver(szDriverName : Win32cr::Foundation::PWSTR, szSectionName : Win32cr::Foundation::PWSTR, lParam2 : Win32cr::Foundation::LPARAM) : Win32cr::Media::Multimedia::HDRVR

    # :nodoc:
    fun SendDriverMessage(hDriver : Win32cr::Media::Multimedia::HDRVR, message : UInt32, lParam1 : Win32cr::Foundation::LPARAM, lParam2 : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT

    # :nodoc:
    fun DrvGetModuleHandle(hDriver : Win32cr::Media::Multimedia::HDRVR) : Win32cr::Foundation::HINSTANCE

    # :nodoc:
    fun GetDriverModuleHandle(hDriver : Win32cr::Media::Multimedia::HDRVR) : Win32cr::Foundation::HINSTANCE

    # :nodoc:
    fun DefDriverProc(dwDriverIdentifier : LibC::UIntPtrT, hdrvr : Win32cr::Media::Multimedia::HDRVR, uMsg : UInt32, lParam1 : Win32cr::Foundation::LPARAM, lParam2 : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT

    # :nodoc:
    fun DriverCallback(dwCallback : LibC::UIntPtrT, dwFlags : UInt32, hDevice : Win32cr::Media::Multimedia::HDRVR, dwMsg : UInt32, dwUser : LibC::UIntPtrT, dwParam1 : LibC::UIntPtrT, dwParam2 : LibC::UIntPtrT) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun sndOpenSound(event_name : Win32cr::Foundation::PWSTR, app_name : Win32cr::Foundation::PWSTR, flags : Int32, file_handle : Win32cr::Foundation::HANDLE*) : Int32

    # :nodoc:
    fun mmDrvInstall(hDriver : Win32cr::Media::Multimedia::HDRVR, wszDrvEntry : Win32cr::Foundation::PWSTR, drvMessage : Win32cr::Media::Multimedia::DRIVERMSGPROC, wFlags : UInt32) : UInt32

    # :nodoc:
    fun mmioStringToFOURCCA(sz : Win32cr::Foundation::PSTR, uFlags : UInt32) : UInt32

    # :nodoc:
    fun mmioStringToFOURCCW(sz : Win32cr::Foundation::PWSTR, uFlags : UInt32) : UInt32

    # :nodoc:
    fun mmioInstallIOProcA(fccIOProc : UInt32, pIOProc : Win32cr::Media::Multimedia::LPMMIOPROC, dwFlags : UInt32) : Win32cr::Media::Multimedia::LPMMIOPROC

    # :nodoc:
    fun mmioInstallIOProcW(fccIOProc : UInt32, pIOProc : Win32cr::Media::Multimedia::LPMMIOPROC, dwFlags : UInt32) : Win32cr::Media::Multimedia::LPMMIOPROC

    # :nodoc:
    fun mmioOpenA(pszFileName : UInt8*, pmmioinfo : Win32cr::Media::Multimedia::MMIOINFO*, fdwOpen : UInt32) : Win32cr::Media::Multimedia::HMMIO

    # :nodoc:
    fun mmioOpenW(pszFileName : UInt16*, pmmioinfo : Win32cr::Media::Multimedia::MMIOINFO*, fdwOpen : UInt32) : Win32cr::Media::Multimedia::HMMIO

    # :nodoc:
    fun mmioRenameA(pszFileName : Win32cr::Foundation::PSTR, pszNewFileName : Win32cr::Foundation::PSTR, pmmioinfo : Win32cr::Media::Multimedia::MMIOINFO*, fdwRename : UInt32) : UInt32

    # :nodoc:
    fun mmioRenameW(pszFileName : Win32cr::Foundation::PWSTR, pszNewFileName : Win32cr::Foundation::PWSTR, pmmioinfo : Win32cr::Media::Multimedia::MMIOINFO*, fdwRename : UInt32) : UInt32

    # :nodoc:
    fun mmioClose(hmmio : Win32cr::Media::Multimedia::HMMIO, fuClose : UInt32) : UInt32

    # :nodoc:
    fun mmioRead(hmmio : Win32cr::Media::Multimedia::HMMIO, pch : Int8*, cch : Int32) : Int32

    # :nodoc:
    fun mmioWrite(hmmio : Win32cr::Media::Multimedia::HMMIO, pch : Win32cr::Foundation::PSTR, cch : Int32) : Int32

    # :nodoc:
    fun mmioSeek(hmmio : Win32cr::Media::Multimedia::HMMIO, lOffset : Int32, iOrigin : Int32) : Int32

    # :nodoc:
    fun mmioGetInfo(hmmio : Win32cr::Media::Multimedia::HMMIO, pmmioinfo : Win32cr::Media::Multimedia::MMIOINFO*, fuInfo : UInt32) : UInt32

    # :nodoc:
    fun mmioSetInfo(hmmio : Win32cr::Media::Multimedia::HMMIO, pmmioinfo : Win32cr::Media::Multimedia::MMIOINFO*, fuInfo : UInt32) : UInt32

    # :nodoc:
    fun mmioSetBuffer(hmmio : Win32cr::Media::Multimedia::HMMIO, pchBuffer : UInt8*, cchBuffer : Int32, fuBuffer : UInt32) : UInt32

    # :nodoc:
    fun mmioFlush(hmmio : Win32cr::Media::Multimedia::HMMIO, fuFlush : UInt32) : UInt32

    # :nodoc:
    fun mmioAdvance(hmmio : Win32cr::Media::Multimedia::HMMIO, pmmioinfo : Win32cr::Media::Multimedia::MMIOINFO*, fuAdvance : UInt32) : UInt32

    # :nodoc:
    fun mmioSendMessage(hmmio : Win32cr::Media::Multimedia::HMMIO, uMsg : UInt32, lParam1 : Win32cr::Foundation::LPARAM, lParam2 : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT

    # :nodoc:
    fun mmioDescend(hmmio : Win32cr::Media::Multimedia::HMMIO, pmmcki : Win32cr::Media::Multimedia::MMCKINFO*, pmmckiParent : Win32cr::Media::Multimedia::MMCKINFO*, fuDescend : UInt32) : UInt32

    # :nodoc:
    fun mmioAscend(hmmio : Win32cr::Media::Multimedia::HMMIO, pmmcki : Win32cr::Media::Multimedia::MMCKINFO*, fuAscend : UInt32) : UInt32

    # :nodoc:
    fun mmioCreateChunk(hmmio : Win32cr::Media::Multimedia::HMMIO, pmmcki : Win32cr::Media::Multimedia::MMCKINFO*, fuCreate : UInt32) : UInt32

    # :nodoc:
    fun joyGetPosEx(uJoyID : UInt32, pji : Win32cr::Media::Multimedia::JOYINFOEX*) : UInt32

    # :nodoc:
    fun joyGetNumDevs : UInt32

    # :nodoc:
    fun joyGetDevCapsA(uJoyID : LibC::UIntPtrT, pjc : Win32cr::Media::Multimedia::JOYCAPSA*, cbjc : UInt32) : UInt32

    # :nodoc:
    fun joyGetDevCapsW(uJoyID : LibC::UIntPtrT, pjc : Win32cr::Media::Multimedia::JOYCAPSW*, cbjc : UInt32) : UInt32

    # :nodoc:
    fun joyGetPos(uJoyID : UInt32, pji : Win32cr::Media::Multimedia::JOYINFO*) : UInt32

    # :nodoc:
    fun joyGetThreshold(uJoyID : UInt32, puThreshold : UInt32*) : UInt32

    # :nodoc:
    fun joyReleaseCapture(uJoyID : UInt32) : UInt32

    # :nodoc:
    fun joySetCapture(hwnd : Win32cr::Foundation::HWND, uJoyID : UInt32, uPeriod : UInt32, fChanged : Win32cr::Foundation::BOOL) : UInt32

    # :nodoc:
    fun joySetThreshold(uJoyID : UInt32, uThreshold : UInt32) : UInt32

    # :nodoc:
    fun VideoForWindowsVersion : UInt32

    # :nodoc:
    fun ICInfo(fccType : UInt32, fccHandler : UInt32, lpicinfo : Win32cr::Media::Multimedia::ICINFO*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun ICInstall(fccType : UInt32, fccHandler : UInt32, lParam : Win32cr::Foundation::LPARAM, szDesc : Win32cr::Foundation::PSTR, wFlags : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun ICRemove(fccType : UInt32, fccHandler : UInt32, wFlags : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun ICGetInfo(hic : Win32cr::Media::Multimedia::HIC, picinfo : Win32cr::Media::Multimedia::ICINFO*, cb : UInt32) : Win32cr::Foundation::LRESULT

    # :nodoc:
    fun ICOpen(fccType : UInt32, fccHandler : UInt32, wMode : UInt32) : Win32cr::Media::Multimedia::HIC

    # :nodoc:
    fun ICOpenFunction(fccType : UInt32, fccHandler : UInt32, wMode : UInt32, lpfnHandler : Win32cr::Foundation::FARPROC) : Win32cr::Media::Multimedia::HIC

    # :nodoc:
    fun ICClose(hic : Win32cr::Media::Multimedia::HIC) : Win32cr::Foundation::LRESULT

    # :nodoc:
    fun ICSendMessage(hic : Win32cr::Media::Multimedia::HIC, msg : UInt32, dw1 : LibC::UIntPtrT, dw2 : LibC::UIntPtrT) : Win32cr::Foundation::LRESULT

    # :nodoc:
    fun ICCompress(hic : Win32cr::Media::Multimedia::HIC, dwFlags : UInt32, lpbiOutput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpData : Void*, lpbiInput : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpBits : Void*, lpckid : UInt32*, lpdwFlags : UInt32*, lFrameNum : Int32, dwFrameSize : UInt32, dwQuality : UInt32, lpbiPrev : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpPrev : Void*) : UInt32

    # :nodoc:
    fun ICDecompress(hic : Win32cr::Media::Multimedia::HIC, dwFlags : UInt32, lpbiFormat : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpData : Void*, lpbi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpBits : Void*) : UInt32

    # :nodoc:
    fun ICDrawBegin(hic : Win32cr::Media::Multimedia::HIC, dwFlags : UInt32, hpal : Win32cr::Graphics::Gdi::HPALETTE, hwnd : Win32cr::Foundation::HWND, hdc : Win32cr::Graphics::Gdi::HDC, xDst : Int32, yDst : Int32, dxDst : Int32, dyDst : Int32, lpbi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, xSrc : Int32, ySrc : Int32, dxSrc : Int32, dySrc : Int32, dwRate : UInt32, dwScale : UInt32) : UInt32

    # :nodoc:
    fun ICDraw(hic : Win32cr::Media::Multimedia::HIC, dwFlags : UInt32, lpFormat : Void*, lpData : Void*, cbData : UInt32, lTime : Int32) : UInt32

    # :nodoc:
    fun ICLocate(fccType : UInt32, fccHandler : UInt32, lpbiIn : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpbiOut : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, wFlags : UInt16) : Win32cr::Media::Multimedia::HIC

    # :nodoc:
    fun ICGetDisplayFormat(hic : Win32cr::Media::Multimedia::HIC, lpbiIn : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpbiOut : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, bit_depth : Int32, dx : Int32, dy : Int32) : Win32cr::Media::Multimedia::HIC

    # :nodoc:
    fun ICImageCompress(hic : Win32cr::Media::Multimedia::HIC, uiFlags : UInt32, lpbiIn : Win32cr::Graphics::Gdi::BITMAPINFO*, lpBits : Void*, lpbiOut : Win32cr::Graphics::Gdi::BITMAPINFO*, lQuality : Int32, plSize : Int32*) : Win32cr::Foundation::HANDLE

    # :nodoc:
    fun ICImageDecompress(hic : Win32cr::Media::Multimedia::HIC, uiFlags : UInt32, lpbiIn : Win32cr::Graphics::Gdi::BITMAPINFO*, lpBits : Void*, lpbiOut : Win32cr::Graphics::Gdi::BITMAPINFO*) : Win32cr::Foundation::HANDLE

    # :nodoc:
    fun ICCompressorChoose(hwnd : Win32cr::Foundation::HWND, uiFlags : UInt32, pvIn : Void*, lpData : Void*, pc : Win32cr::Media::Multimedia::COMPVARS*, lpszTitle : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun ICSeqCompressFrameStart(pc : Win32cr::Media::Multimedia::COMPVARS*, lpbiIn : Win32cr::Graphics::Gdi::BITMAPINFO*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun ICSeqCompressFrameEnd(pc : Win32cr::Media::Multimedia::COMPVARS*) : Void

    # :nodoc:
    fun ICSeqCompressFrame(pc : Win32cr::Media::Multimedia::COMPVARS*, uiFlags : UInt32, lpBits : Void*, pfKey : Win32cr::Foundation::BOOL*, plSize : Int32*) : Void*

    # :nodoc:
    fun ICCompressorFree(pc : Win32cr::Media::Multimedia::COMPVARS*) : Void

    # :nodoc:
    fun DrawDibOpen : LibC::IntPtrT

    # :nodoc:
    fun DrawDibClose(hdd : LibC::IntPtrT) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DrawDibGetBuffer(hdd : LibC::IntPtrT, lpbi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, dwSize : UInt32, dwFlags : UInt32) : Void*

    # :nodoc:
    fun DrawDibGetPalette(hdd : LibC::IntPtrT) : Win32cr::Graphics::Gdi::HPALETTE

    # :nodoc:
    fun DrawDibSetPalette(hdd : LibC::IntPtrT, hpal : Win32cr::Graphics::Gdi::HPALETTE) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DrawDibChangePalette(hdd : LibC::IntPtrT, iStart : Int32, iLen : Int32, lppe : Win32cr::Graphics::Gdi::PALETTEENTRY*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DrawDibRealize(hdd : LibC::IntPtrT, hdc : Win32cr::Graphics::Gdi::HDC, fBackground : Win32cr::Foundation::BOOL) : UInt32

    # :nodoc:
    fun DrawDibStart(hdd : LibC::IntPtrT, rate : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DrawDibStop(hdd : LibC::IntPtrT) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DrawDibBegin(hdd : LibC::IntPtrT, hdc : Win32cr::Graphics::Gdi::HDC, dxDst : Int32, dyDst : Int32, lpbi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, dxSrc : Int32, dySrc : Int32, wFlags : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DrawDibDraw(hdd : LibC::IntPtrT, hdc : Win32cr::Graphics::Gdi::HDC, xDst : Int32, yDst : Int32, dxDst : Int32, dyDst : Int32, lpbi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*, lpBits : Void*, xSrc : Int32, ySrc : Int32, dxSrc : Int32, dySrc : Int32, wFlags : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DrawDibEnd(hdd : LibC::IntPtrT) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DrawDibTime(hdd : LibC::IntPtrT, lpddtime : Win32cr::Media::Multimedia::DRAWDIBTIME*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DrawDibProfileDisplay(lpbi : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*) : Win32cr::Foundation::LRESULT

    # :nodoc:
    fun AVIFileInit : Void

    # :nodoc:
    fun AVIFileExit : Void

    # :nodoc:
    fun AVIFileAddRef(pfile : Void*) : UInt32

    # :nodoc:
    fun AVIFileRelease(pfile : Void*) : UInt32

    # :nodoc:
    fun AVIFileOpenA(ppfile : Void**, szFile : Win32cr::Foundation::PSTR, uMode : UInt32, lpHandler : LibC::GUID*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIFileOpenW(ppfile : Void**, szFile : Win32cr::Foundation::PWSTR, uMode : UInt32, lpHandler : LibC::GUID*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIFileInfoW(pfile : Void*, pfi : Win32cr::Media::Multimedia::AVIFILEINFOW*, lSize : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIFileInfoA(pfile : Void*, pfi : Win32cr::Media::Multimedia::AVIFILEINFOA*, lSize : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIFileGetStream(pfile : Void*, ppavi : Void**, fccType : UInt32, lParam : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIFileCreateStreamW(pfile : Void*, ppavi : Void**, psi : Win32cr::Media::Multimedia::AVISTREAMINFOW*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIFileCreateStreamA(pfile : Void*, ppavi : Void**, psi : Win32cr::Media::Multimedia::AVISTREAMINFOA*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIFileWriteData(pfile : Void*, ckid : UInt32, lpData : Void*, cbData : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIFileReadData(pfile : Void*, ckid : UInt32, lpData : Void*, lpcbData : Int32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIFileEndRecord(pfile : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIStreamAddRef(pavi : Void*) : UInt32

    # :nodoc:
    fun AVIStreamRelease(pavi : Void*) : UInt32

    # :nodoc:
    fun AVIStreamInfoW(pavi : Void*, psi : Win32cr::Media::Multimedia::AVISTREAMINFOW*, lSize : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIStreamInfoA(pavi : Void*, psi : Win32cr::Media::Multimedia::AVISTREAMINFOA*, lSize : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIStreamFindSample(pavi : Void*, lPos : Int32, lFlags : Int32) : Int32

    # :nodoc:
    fun AVIStreamReadFormat(pavi : Void*, lPos : Int32, lpFormat : Void*, lpcbFormat : Int32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIStreamSetFormat(pavi : Void*, lPos : Int32, lpFormat : Void*, cbFormat : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIStreamReadData(pavi : Void*, fcc : UInt32, lp : Void*, lpcb : Int32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIStreamWriteData(pavi : Void*, fcc : UInt32, lp : Void*, cb : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIStreamRead(pavi : Void*, lStart : Int32, lSamples : Int32, lpBuffer : Void*, cbBuffer : Int32, plBytes : Int32*, plSamples : Int32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIStreamWrite(pavi : Void*, lStart : Int32, lSamples : Int32, lpBuffer : Void*, cbBuffer : Int32, dwFlags : UInt32, plSampWritten : Int32*, plBytesWritten : Int32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIStreamStart(pavi : Void*) : Int32

    # :nodoc:
    fun AVIStreamLength(pavi : Void*) : Int32

    # :nodoc:
    fun AVIStreamTimeToSample(pavi : Void*, lTime : Int32) : Int32

    # :nodoc:
    fun AVIStreamSampleToTime(pavi : Void*, lSample : Int32) : Int32

    # :nodoc:
    fun AVIStreamBeginStreaming(pavi : Void*, lStart : Int32, lEnd : Int32, lRate : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIStreamEndStreaming(pavi : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIStreamGetFrameOpen(pavi : Void*, lpbiWanted : Win32cr::Graphics::Gdi::BITMAPINFOHEADER*) : Void*

    # :nodoc:
    fun AVIStreamGetFrame(pg : Void*, lPos : Int32) : Void*

    # :nodoc:
    fun AVIStreamGetFrameClose(pg : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIStreamOpenFromFileA(ppavi : Void**, szFile : Win32cr::Foundation::PSTR, fccType : UInt32, lParam : Int32, mode : UInt32, pclsidHandler : LibC::GUID*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIStreamOpenFromFileW(ppavi : Void**, szFile : Win32cr::Foundation::PWSTR, fccType : UInt32, lParam : Int32, mode : UInt32, pclsidHandler : LibC::GUID*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIStreamCreate(ppavi : Void**, lParam1 : Int32, lParam2 : Int32, pclsidHandler : LibC::GUID*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIMakeCompressedStream(ppsCompressed : Void**, ppsSource : Void*, lpOptions : Win32cr::Media::Multimedia::AVICOMPRESSOPTIONS*, pclsidHandler : LibC::GUID*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVISaveA(szFile : Win32cr::Foundation::PSTR, pclsidHandler : LibC::GUID*, lpfnCallback : Win32cr::Media::Multimedia::AVISAVECALLBACK, nStreams : Int32, pfile : Void*, lpOptions : Win32cr::Media::Multimedia::AVICOMPRESSOPTIONS*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVISaveVA(szFile : Win32cr::Foundation::PSTR, pclsidHandler : LibC::GUID*, lpfnCallback : Win32cr::Media::Multimedia::AVISAVECALLBACK, nStreams : Int32, ppavi : Void**, plpOptions : Win32cr::Media::Multimedia::AVICOMPRESSOPTIONS**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVISaveW(szFile : Win32cr::Foundation::PWSTR, pclsidHandler : LibC::GUID*, lpfnCallback : Win32cr::Media::Multimedia::AVISAVECALLBACK, nStreams : Int32, pfile : Void*, lpOptions : Win32cr::Media::Multimedia::AVICOMPRESSOPTIONS*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVISaveVW(szFile : Win32cr::Foundation::PWSTR, pclsidHandler : LibC::GUID*, lpfnCallback : Win32cr::Media::Multimedia::AVISAVECALLBACK, nStreams : Int32, ppavi : Void**, plpOptions : Win32cr::Media::Multimedia::AVICOMPRESSOPTIONS**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVISaveOptions(hwnd : Win32cr::Foundation::HWND, uiFlags : UInt32, nStreams : Int32, ppavi : Void**, plpOptions : Win32cr::Media::Multimedia::AVICOMPRESSOPTIONS**) : LibC::IntPtrT

    # :nodoc:
    fun AVISaveOptionsFree(nStreams : Int32, plpOptions : Win32cr::Media::Multimedia::AVICOMPRESSOPTIONS**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIBuildFilterW(lpszFilter : UInt16*, cbFilter : Int32, fSaving : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIBuildFilterA(lpszFilter : UInt8*, cbFilter : Int32, fSaving : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIMakeFileFromStreams(ppfile : Void**, nStreams : Int32, papStreams : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIMakeStreamFromClipboard(cfFormat : UInt32, hGlobal : Win32cr::Foundation::HANDLE, ppstream : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIPutFileOnClipboard(pf : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIGetFromClipboard(lppf : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AVIClearClipboard : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun CreateEditableStream(ppsEditable : Void**, psSource : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun EditStreamCut(pavi : Void*, plStart : Int32*, plLength : Int32*, ppResult : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun EditStreamCopy(pavi : Void*, plStart : Int32*, plLength : Int32*, ppResult : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun EditStreamPaste(pavi : Void*, plPos : Int32*, plLength : Int32*, pstream : Void*, lStart : Int32, lEnd : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun EditStreamClone(pavi : Void*, ppResult : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun EditStreamSetNameA(pavi : Void*, lpszName : Win32cr::Foundation::PSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun EditStreamSetNameW(pavi : Void*, lpszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun EditStreamSetInfoW(pavi : Void*, lpInfo : Win32cr::Media::Multimedia::AVISTREAMINFOW*, cbInfo : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun EditStreamSetInfoA(pavi : Void*, lpInfo : Win32cr::Media::Multimedia::AVISTREAMINFOA*, cbInfo : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun MCIWndCreateA(hwndParent : Win32cr::Foundation::HWND, hInstance : Win32cr::Foundation::HINSTANCE, dwStyle : UInt32, szFile : Win32cr::Foundation::PSTR) : Win32cr::Foundation::HWND

    # :nodoc:
    fun MCIWndCreateW(hwndParent : Win32cr::Foundation::HWND, hInstance : Win32cr::Foundation::HINSTANCE, dwStyle : UInt32, szFile : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HWND

    # :nodoc:
    fun MCIWndRegisterClass : Win32cr::Foundation::BOOL

    # :nodoc:
    fun capCreateCaptureWindowA(lpszWindowName : Win32cr::Foundation::PSTR, dwStyle : UInt32, x : Int32, y : Int32, nWidth : Int32, nHeight : Int32, hwndParent : Win32cr::Foundation::HWND, nID : Int32) : Win32cr::Foundation::HWND

    # :nodoc:
    fun capGetDriverDescriptionA(wDriverIndex : UInt32, lpszName : UInt8*, cbName : Int32, lpszVer : UInt8*, cbVer : Int32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun capCreateCaptureWindowW(lpszWindowName : Win32cr::Foundation::PWSTR, dwStyle : UInt32, x : Int32, y : Int32, nWidth : Int32, nHeight : Int32, hwndParent : Win32cr::Foundation::HWND, nID : Int32) : Win32cr::Foundation::HWND

    # :nodoc:
    fun capGetDriverDescriptionW(wDriverIndex : UInt32, lpszName : UInt16*, cbName : Int32, lpszVer : UInt16*, cbVer : Int32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetOpenFileNamePreviewA(lpofn : Win32cr::UI::Controls::Dialogs::OPENFILENAMEA*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetSaveFileNamePreviewA(lpofn : Win32cr::UI::Controls::Dialogs::OPENFILENAMEA*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetOpenFileNamePreviewW(lpofn : Win32cr::UI::Controls::Dialogs::OPENFILENAMEW*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetSaveFileNamePreviewW(lpofn : Win32cr::UI::Controls::Dialogs::OPENFILENAMEW*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun mmTaskCreate(lpfn : Win32cr::Media::Multimedia::LPTASKCALLBACK, lph : Win32cr::Foundation::HANDLE*, dwInst : LibC::UIntPtrT) : UInt32

    # :nodoc:
    fun mmTaskBlock(h : UInt32) : Void

    # :nodoc:
    fun mmTaskSignal(h : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun mmTaskYield : Void

    # :nodoc:
    fun mmGetCurrentTask : UInt32

  end
end