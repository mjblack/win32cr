require "./../system/com.cr"
require "./../foundation.cr"
require "./windows_and_messaging.cr"
require "./shell/common.cr"
require "./../graphics/gdi.cr"
require "./shell/properties_system.cr"
require "./../system/ole.cr"
require "./controls.cr"
require "./../system/com/structured_storage.cr"
require "./../storage/file_system.cr"
require "./../system/registry.cr"
require "./../system/search.cr"
require "./../system/io.cr"
require "./../data/xml/ms_xml.cr"
require "./../system/console.cr"
require "./../network_management/w_net.cr"
require "./../security.cr"
require "./../system/threading.cr"
require "./../graphics/direct_composition.cr"
require "./../system/com/urlmon.cr"

module Win32cr::UI::Shell
  extend self
  alias ShFindChangeNotificationHandle = LibC::IntPtrT
  alias HDROP = LibC::IntPtrT
  alias HPSXA = LibC::IntPtrT
  alias SUBCLASSPROC = Proc(Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, LibC::UIntPtrT, LibC::UIntPtrT, Win32cr::Foundation::LRESULT)

  alias BFFCALLBACK = Proc(Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LPARAM, Int32)

  alias LPFNDFMCALLBACK = Proc(Void*, Win32cr::Foundation::HWND, Void*, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT)

  alias LPFNVIEWCALLBACK = Proc(Void*, Void*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT)

  alias PFNCANSHAREFOLDERW = Proc(Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)

  alias PFNSHOWSHAREFOLDERUIW = Proc(Win32cr::Foundation::HWND, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)

  alias DLLGETVERSIONPROC = Proc(Win32cr::UI::Shell::DLLVERSIONINFO*, Win32cr::Foundation::HRESULT)

  alias APPLET_PROC = Proc(Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LPARAM, Int32)

  alias PAPPSTATE_CHANGE_ROUTINE = Proc(Win32cr::Foundation::BOOLEAN, Void*, Void)

  alias PAPPCONSTRAIN_CHANGE_ROUTINE = Proc(Win32cr::Foundation::BOOLEAN, Void*, Void)

  HLINK_E_FIRST = -2147221248_i32
  HLINK_S_FIRST = 262400_i32
  WM_CPL_LAUNCH = 2024_u32
  WM_CPL_LAUNCHED = 2025_u32
  CPL_DYNAMIC_RES = 0_u32
  CPL_INIT = 1_u32
  CPL_GETCOUNT = 2_u32
  CPL_INQUIRE = 3_u32
  CPL_SELECT = 4_u32
  CPL_DBLCLK = 5_u32
  CPL_STOP = 6_u32
  CPL_EXIT = 7_u32
  CPL_NEWINQUIRE = 8_u32
  CPL_STARTWPARMSA = 9_u32
  CPL_STARTWPARMSW = 10_u32
  CPL_STARTWPARMS = 10_u32
  CPL_SETUP = 200_u32
  HLINK_S_DONTHIDE = 262400_i32
  FOLDERID_NetworkFolder = "d20beec4-5ca8-4905-ae3b-bf251ea09b53"
  FOLDERID_ComputerFolder = "0ac0837c-bbf8-452a-850d-79d08e667ca7"
  FOLDERID_InternetFolder = "4d9f7874-4e0c-4904-967b-40b0d20c3e4b"
  FOLDERID_ControlPanelFolder = "82a74aeb-aeb4-465c-a014-d097ee346d63"
  FOLDERID_PrintersFolder = "76fc4e2d-d6ad-4519-a663-37bd56068185"
  FOLDERID_SyncManagerFolder = "43668bf8-c14e-49b2-97c9-747784d784b7"
  FOLDERID_SyncSetupFolder = "0f214138-b1d3-4a90-bba9-27cbc0c5389a"
  FOLDERID_ConflictFolder = "4bfefb45-347d-4006-a5be-ac0cb0567192"
  FOLDERID_SyncResultsFolder = "289a9a43-be44-4057-a41b-587a76d7e7f9"
  FOLDERID_RecycleBinFolder = "b7534046-3ecb-4c18-be4e-64cd4cb7d6ac"
  FOLDERID_ConnectionsFolder = "6f0cd92b-2e97-45d1-88ff-b0d186b8dedd"
  FOLDERID_Fonts = "fd228cb7-ae11-4ae3-864c-16f3910ab8fe"
  FOLDERID_Desktop = "b4bfcc3a-db2c-424c-b029-7fe99a87c641"
  FOLDERID_Startup = "b97d20bb-f46a-4c97-ba10-5e3608430854"
  FOLDERID_Programs = "a77f5d77-2e2b-44c3-a6a2-aba601054a51"
  FOLDERID_StartMenu = "625b53c3-ab48-4ec1-ba1f-a1ef4146fc19"
  FOLDERID_Recent = "ae50c081-ebd2-438a-8655-8a092e34987a"
  FOLDERID_SendTo = "8983036c-27c0-404b-8f08-102d10dcfd74"
  FOLDERID_Documents = "fdd39ad0-238f-46af-adb4-6c85480369c7"
  FOLDERID_Favorites = "1777f761-68ad-4d8a-87bd-30b759fa33dd"
  FOLDERID_NetHood = "c5abbf53-e17f-4121-8900-86626fc2c973"
  FOLDERID_PrintHood = "9274bd8d-cfd1-41c3-b35e-b13f55a758f4"
  FOLDERID_Templates = "a63293e8-664e-48db-a079-df759e0509f7"
  FOLDERID_CommonStartup = "82a5ea35-d9cd-47c5-9629-e15d2f714e6e"
  FOLDERID_CommonPrograms = "0139d44e-6afe-49f2-8690-3dafcae6ffb8"
  FOLDERID_CommonStartMenu = "a4115719-d62e-491d-aa7c-e74b8be3b067"
  FOLDERID_PublicDesktop = "c4aa340d-f20f-4863-afef-f87ef2e6ba25"
  FOLDERID_ProgramData = "62ab5d82-fdc1-4dc3-a9dd-070d1d495d97"
  FOLDERID_CommonTemplates = "b94237e7-57ac-4347-9151-b08c6c32d1f7"
  FOLDERID_PublicDocuments = "ed4824af-dce4-45a8-81e2-fc7965083634"
  FOLDERID_RoamingAppData = "3eb685db-65f9-4cf6-a03a-e3ef65729f3d"
  FOLDERID_LocalAppData = "f1b32785-6fba-4fcf-9d55-7b8e7f157091"
  FOLDERID_LocalAppDataLow = "a520a1a4-1780-4ff6-bd18-167343c5af16"
  FOLDERID_InternetCache = "352481e8-33be-4251-ba85-6007caedcf9d"
  FOLDERID_Cookies = "2b0f765d-c0e9-4171-908e-08a611b84ff6"
  FOLDERID_History = "d9dc8a3b-b784-432e-a781-5a1130a75963"
  FOLDERID_System = "1ac14e77-02e7-4e5d-b744-2eb1ae5198b7"
  FOLDERID_SystemX86 = "d65231b0-b2f1-4857-a4ce-a8e7c6ea7d27"
  FOLDERID_Windows = "f38bf404-1d43-42f2-9305-67de0b28fc23"
  FOLDERID_Profile = "5e6c858f-0e22-4760-9afe-ea3317b67173"
  FOLDERID_Pictures = "33e28130-4e1e-4676-835a-98395c3bc3bb"
  FOLDERID_ProgramFilesX86 = "7c5a40ef-a0fb-4bfc-874a-c0f2e0b9fa8e"
  FOLDERID_ProgramFilesCommonX86 = "de974d24-d9c6-4d3e-bf91-f4455120b917"
  FOLDERID_ProgramFilesX64 = "6d809377-6af0-444b-8957-a3773f02200e"
  FOLDERID_ProgramFilesCommonX64 = "6365d5a7-0f0d-45e5-87f6-0da56b6a4f7d"
  FOLDERID_ProgramFiles = "905e63b6-c1bf-494e-b29c-65b732d3d21a"
  FOLDERID_ProgramFilesCommon = "f7f1ed05-9f6d-47a2-aaae-29d317c6f066"
  FOLDERID_UserProgramFiles = "5cd7aee2-2219-4a67-b85d-6c9ce15660cb"
  FOLDERID_UserProgramFilesCommon = "bcbd3057-ca5c-4622-b42d-bc56db0ae516"
  FOLDERID_AdminTools = "724ef170-a42d-4fef-9f26-b60e846fba4f"
  FOLDERID_CommonAdminTools = "d0384e7d-bac3-4797-8f14-cba229b392b5"
  FOLDERID_Music = "4bd8d571-6d19-48d3-be97-422220080e43"
  FOLDERID_Videos = "18989b1d-99b5-455b-841c-ab7c74e4ddfc"
  FOLDERID_Ringtones = "c870044b-f49e-4126-a9c3-b52a1ff411e8"
  FOLDERID_PublicPictures = "b6ebfb86-6907-413c-9af7-4fc2abf07cc5"
  FOLDERID_PublicMusic = "3214fab5-9757-4298-bb61-92a9deaa44ff"
  FOLDERID_PublicVideos = "2400183a-6185-49fb-a2d8-4a392a602ba3"
  FOLDERID_PublicRingtones = "e555ab60-153b-4d17-9f04-a5fe99fc15ec"
  FOLDERID_ResourceDir = "8ad10c31-2adb-4296-a8f7-e4701232c972"
  FOLDERID_LocalizedResourcesDir = "2a00375e-224c-49de-b8d1-440df7ef3ddc"
  FOLDERID_CommonOEMLinks = "c1bae2d0-10df-4334-bedd-7aa20b227a9d"
  FOLDERID_CDBurning = "9e52ab10-f80d-49df-acb8-4330f5687855"
  FOLDERID_UserProfiles = "0762d272-c50a-4bb0-a382-697dcd729b80"
  FOLDERID_Playlists = "de92c1c7-837f-4f69-a3bb-86e631204a23"
  FOLDERID_SamplePlaylists = "15ca69b3-30ee-49c1-ace1-6b5ec372afb5"
  FOLDERID_SampleMusic = "b250c668-f57d-4ee1-a63c-290ee7d1aa1f"
  FOLDERID_SamplePictures = "c4900540-2379-4c75-844b-64e6faf8716b"
  FOLDERID_SampleVideos = "859ead94-2e85-48ad-a71a-0969cb56a6cd"
  FOLDERID_PhotoAlbums = "69d2cf90-fc33-4fb7-9a0c-ebb0f0fcb43c"
  FOLDERID_Public = "dfdf76a2-c82a-4d63-906a-5644ac457385"
  FOLDERID_ChangeRemovePrograms = "df7266ac-9274-4867-8d55-3bd661de872d"
  FOLDERID_AppUpdates = "a305ce99-f527-492b-8b1a-7e76fa98d6e4"
  FOLDERID_AddNewPrograms = "de61d971-5ebc-4f02-a3a9-6c82895e5c04"
  FOLDERID_Downloads = "374de290-123f-4565-9164-39c4925e467b"
  FOLDERID_PublicDownloads = "3d644c9b-1fb8-4f30-9b45-f670235f79c0"
  FOLDERID_SavedSearches = "7d1d3a04-debb-4115-95cf-2f29da2920da"
  FOLDERID_QuickLaunch = "52a4f021-7b75-48a9-9f6b-4b87a210bc8f"
  FOLDERID_Contacts = "56784854-c6cb-462b-8169-88e350acb882"
  FOLDERID_SidebarParts = "a75d362e-50fc-4fb7-ac2c-a8beaa314493"
  FOLDERID_SidebarDefaultParts = "7b396e54-9ec5-4300-be0a-2482ebae1a26"
  FOLDERID_PublicGameTasks = "debf2536-e1a8-4c59-b6a2-414586476aea"
  FOLDERID_GameTasks = "054fae61-4dd8-4787-80b6-090220c4b700"
  FOLDERID_SavedGames = "4c5c32ff-bb9d-43b0-b5b4-2d72e54eaaa4"
  FOLDERID_Games = "cac52c1a-b53d-4edc-92d7-6b2e8ac19434"
  FOLDERID_SEARCH_MAPI = "98ec0e18-2098-4d44-8644-66979315a281"
  FOLDERID_SEARCH_CSC = "ee32e446-31ca-4aba-814f-a5ebd2fd6d5e"
  FOLDERID_Links = "bfb9d5e0-c6a9-404c-b2b2-ae6db6af4968"
  FOLDERID_UsersFiles = "f3ce0f7c-4901-4acc-8648-d5d44b04ef8f"
  FOLDERID_UsersLibraries = "a302545d-deff-464b-abe8-61c8648d939b"
  FOLDERID_SearchHome = "190337d1-b8ca-4121-a639-6d472d16972a"
  FOLDERID_OriginalImages = "2c36c0aa-5812-4b87-bfd0-4cd0dfb19b39"
  FOLDERID_DocumentsLibrary = "7b0db17d-9cd2-4a93-9733-46cc89022e7c"
  FOLDERID_MusicLibrary = "2112ab0a-c86a-4ffe-a368-0de96e47012e"
  FOLDERID_PicturesLibrary = "a990ae9f-a03b-4e80-94bc-9912d7504104"
  FOLDERID_VideosLibrary = "491e922f-5643-4af4-a7eb-4e7a138d8174"
  FOLDERID_RecordedTVLibrary = "1a6fdba2-f42d-4358-a798-b74d745926c5"
  FOLDERID_HomeGroup = "52528a6b-b9e3-4add-b60d-588c2dba842d"
  FOLDERID_HomeGroupCurrentUser = "9b74b6a3-0dfd-4f11-9e78-5f7800f2e772"
  FOLDERID_DeviceMetadataStore = "5ce4a5e9-e4eb-479d-b89f-130c02886155"
  FOLDERID_Libraries = "1b3ea5dc-b587-4786-b4ef-bd1dc332aeae"
  FOLDERID_PublicLibraries = "48daf80b-e6cf-4f4e-b800-0e69d84ee384"
  FOLDERID_UserPinned = "9e3995ab-1f9c-4f13-b827-48b24b6c7174"
  FOLDERID_ImplicitAppShortcuts = "bcb5256f-79f6-4cee-b725-dc34e402fd46"
  FOLDERID_AccountPictures = "008ca0b1-55b4-4c56-b8a8-4de4b299d3be"
  FOLDERID_PublicUserTiles = "0482af6c-08f1-4c34-8c90-e17ec98b1e17"
  FOLDERID_AppsFolder = "1e87508d-89c2-42f0-8a7e-645a0f50ca58"
  FOLDERID_StartMenuAllPrograms = "f26305ef-6948-40b9-b255-81453d09c785"
  FOLDERID_CommonStartMenuPlaces = "a440879f-87a0-4f7d-b700-0207b966194a"
  FOLDERID_ApplicationShortcuts = "a3918781-e5f2-4890-b3d9-a7e54332328c"
  FOLDERID_RoamingTiles = "00bcfc5a-ed94-4e48-96a1-3f6217f21990"
  FOLDERID_RoamedTileImages = "aaa8d5a5-f1d6-4259-baa8-78e7ef60835e"
  FOLDERID_Screenshots = "b7bede81-df94-4682-a7d8-57a52620b86f"
  FOLDERID_CameraRoll = "ab5fb87b-7ce2-4f83-915d-550846c9537b"
  FOLDERID_SkyDrive = "a52bba46-e9e1-435f-b3d9-28daa648c0f6"
  FOLDERID_OneDrive = "a52bba46-e9e1-435f-b3d9-28daa648c0f6"
  FOLDERID_SkyDriveDocuments = "24d89e24-2f19-4534-9dde-6a6671fbb8fe"
  FOLDERID_SkyDrivePictures = "339719b5-8c47-4894-94c2-d8f77add44a6"
  FOLDERID_SkyDriveMusic = "c3f2459e-80d6-45dc-bfef-1f769f2be730"
  FOLDERID_SkyDriveCameraRoll = "767e6811-49cb-4273-87c2-20f355e1085b"
  FOLDERID_SearchHistory = "0d4c3db6-03a3-462f-a0e6-08924c41b5d4"
  FOLDERID_SearchTemplates = "7e636bfe-dfa9-4d5e-b456-d7b39851d8a9"
  FOLDERID_CameraRollLibrary = "2b20df75-1eda-4039-8097-38798227d5b7"
  FOLDERID_SavedPictures = "3b193882-d3ad-4eab-965a-69829d1fb59f"
  FOLDERID_SavedPicturesLibrary = "e25b5812-be88-4bd9-94b0-29233477b6c3"
  FOLDERID_RetailDemo = "12d4c69e-24ad-4923-be19-31321c43a767"
  FOLDERID_Device = "1c2ac1dc-4358-4b6c-9733-af21156576f0"
  FOLDERID_DevelopmentFiles = "dbe8e08e-3053-4bbc-b183-2a7b2b191e59"
  FOLDERID_Objects3D = "31c0dd25-9439-4f12-bf41-7ff4eda38722"
  FOLDERID_AppCaptures = "edc0fe71-98d8-4f4a-b920-c8dc133cb165"
  FOLDERID_LocalDocuments = "f42ee2d3-909f-4907-8871-4c22fc0bf756"
  FOLDERID_LocalPictures = "0ddd015d-b06c-45d5-8c4c-f59713854639"
  FOLDERID_LocalVideos = "35286a68-3c57-41a1-bbb1-0eae73d76c95"
  FOLDERID_LocalMusic = "a0c69a99-21c8-4671-8703-7934162fcf1d"
  FOLDERID_LocalDownloads = "7d83ee9b-2244-4e70-b1f5-5393042af1e4"
  FOLDERID_RecordedCalls = "2f8b40c2-83ed-48ee-b383-a1f157ec6f9a"
  FOLDERID_AllAppMods = "7ad67899-66af-43ba-9156-6aad42e6c596"
  FOLDERID_CurrentAppMods = "3db40b20-2a30-4dbe-917e-771dd21dd099"
  FOLDERID_AppDataDesktop = "b2c5e279-7add-439f-b28c-c41fe1bbf672"
  FOLDERID_AppDataDocuments = "7be16610-1f7f-44ac-bff0-83e15f2ffca1"
  FOLDERID_AppDataFavorites = "7cfbefbc-de1f-45aa-b843-a542ac536cc9"
  FOLDERID_AppDataProgramData = "559d40a3-a036-40fa-af61-84cb430a4d34"
  FOLDERID_LocalStorage = "b3eb08d3-a1f3-496b-865a-42b536cda0ec"
  CLSID_InternetShortcut = "fbf23b40-e3f0-101b-8488-00aa003e56f8"
  CLSID_NetworkDomain = "46e06680-4bf0-11d1-83ee-00a0c90dc849"
  CLSID_NetworkServer = "c0542a90-4bf0-11d1-83ee-00a0c90dc849"
  CLSID_NetworkShare = "54a754c0-4bf0-11d1-83ee-00a0c90dc849"
  CLSID_MyComputer = "20d04fe0-3aea-1069-a2d8-08002b30309d"
  CLSID_Internet = "871c5380-42a0-1069-a2ea-08002b30309d"
  CLSID_RecycleBin = "645ff040-5081-101b-9f08-00aa002f954e"
  CLSID_ControlPanel = "21ec2020-3aea-1069-a2dd-08002b30309d"
  CLSID_Printers = "2227a280-3aea-1069-a2de-08002b30309d"
  CLSID_MyDocuments = "450d8fba-ad25-11d0-98a8-0800361b1103"
  STR_MYDOCS_CLSID = "{450D8FBA-AD25-11D0-98A8-0800361B1103}"
  CATID_BrowsableShellExt = "00021490-0000-0000-c000-000000000046"
  CATID_BrowseInPlace = "00021491-0000-0000-c000-000000000046"
  CATID_DeskBand = "00021492-0000-0000-c000-000000000046"
  CATID_InfoBand = "00021493-0000-0000-c000-000000000046"
  CATID_CommBand = "00021494-0000-0000-c000-000000000046"
  FMTID_Intshcut = "000214a0-0000-0000-c000-000000000046"
  FMTID_InternetSite = "000214a1-0000-0000-c000-000000000046"
  CGID_Explorer = "000214d0-0000-0000-c000-000000000046"
  CGID_ShellDocView = "000214d1-0000-0000-c000-000000000046"
  CGID_ShellServiceObject = "000214d2-0000-0000-c000-000000000046"
  CGID_ExplorerBarDoc = "000214d3-0000-0000-c000-000000000046"
  CLSID_FolderShortcut = "0afaced1-e828-11d1-9187-b532f1e9575d"
  CLSID_CFSIconOverlayManager = "63b51f81-c868-11d0-999c-00c04fd655e1"
  CLSID_ShellThumbnailDiskCache = "1ebdcf80-a200-11d0-a3a4-00c04fd706ec"
  SID_DefView = "6d12fe80-7911-11cf-9534-0000c05bae0b"
  CGID_DefView = "4af07f10-d231-11d0-b942-00a0c90312e1"
  CLSID_MenuBand = "5b4dae26-b807-11d0-9815-00c04fd91972"
  VID_LargeIcons = "0057d0e0-3573-11cf-ae69-08002b2e1262"
  VID_SmallIcons = "089000c0-3573-11cf-ae69-08002b2e1262"
  VID_List = "0e1fa5e0-3573-11cf-ae69-08002b2e1262"
  VID_Details = "137e7700-3573-11cf-ae69-08002b2e1262"
  VID_Tile = "65f125e5-7be1-4810-ba9d-d271c8432ce3"
  VID_Content = "30c2c434-0889-4c8d-985d-a9f71830b0a9"
  VID_Thumbnails = "8bebb290-52d0-11d0-b7f4-00c04fd706ec"
  VID_ThumbStrip = "8eefa624-d1e9-445b-94b7-74fbce2ea11a"
  SID_SInPlaceBrowser = "1d2ae02b-3655-46cc-b63a-285988153bca"
  SID_SSearchBoxInfo = "142daa61-516b-4713-b49c-fb985ef82998"
  SID_CommandsPropertyBag = "6e043250-4416-485c-b143-e62a760d9fe5"
  CLSID_CUrlHistory = "3c374a40-bae4-11cf-bf7d-00aa006946ee"
  CLSID_CURLSearchHook = "cfbfae00-17a6-11d0-99cb-00c04fd64497"
  CLSID_AutoComplete = "00bb2763-6a77-11d0-a535-00c04fd7d062"
  CLSID_ACLHistory = "00bb2764-6a77-11d0-a535-00c04fd7d062"
  CLSID_ACListISF = "03c036f1-a186-11d0-824a-00aa005b4383"
  CLSID_ACLMRU = "6756a641-de71-11d0-831b-00aa005b4383"
  CLSID_ACLMulti = "00bb2765-6a77-11d0-a535-00c04fd7d062"
  CLSID_ACLCustomMRU = "6935db93-21e8-4ccc-beb9-9fe3c77a297a"
  CLSID_ProgressDialog = "f8383852-fcd3-11d1-a6b9-006097df5bd4"
  SID_STopLevelBrowser = "4c96be40-915c-11cf-99d3-00aa004ae837"
  CLSID_FileTypes = "b091e540-83e3-11cf-a713-0020afd79762"
  CLSID_ActiveDesktop = "75048700-ef1f-11d0-9888-006097deacf9"
  CLSID_QueryAssociations = "a07034fd-6caa-4954-ac3f-97a27216f98a"
  CLSID_LinkColumnProvider = "24f14f02-7b1c-11d1-838f-0000f80461cf"
  CGID_ShortCut = "93a68750-951a-11d1-946f-000000000000"
  CLSID_InternetButtons = "1e796980-9cc5-11d1-a83f-00c04fc99d61"
  CLSID_MSOButtons = "178f34b8-a282-11d2-86c5-00c04f8eea99"
  CLSID_ToolbarExtButtons = "2ce4b5d8-a28f-11d2-86c5-00c04f8eea99"
  CLSID_DarwinAppPublisher = "cfccc7a0-a282-11d1-9082-006008059382"
  CLSID_DocHostUIHandler = "7057e952-bd1b-11d1-8919-00c04fc2c836"
  FMTID_ShellDetails = "28636aa6-953d-11d2-b5d6-00c04fd918d0"
  PID_FINDDATA = 0_u32
  PID_NETRESOURCE = 1_u32
  PID_DESCRIPTIONID = 2_u32
  PID_WHICHFOLDER = 3_u32
  PID_NETWORKLOCATION = 4_u32
  PID_COMPUTERNAME = 5_u32
  FMTID_Storage = "b725f130-47ef-101a-a5f1-02608c9eebac"
  FMTID_ImageProperties = "14b81da1-0135-4d31-96d9-6cbfc9671a99"
  FMTID_CustomImageProperties = "7ecd8b0e-c136-4a9b-9411-4ebd6673ccc3"
  FMTID_LibraryProperties = "5d76b67f-9b3d-44bb-b6ae-25da4f638a67"
  FMTID_Displaced = "9b174b33-40ff-11d2-a27e-00c04fc30871"
  PID_DISPLACED_FROM = 2_u32
  PID_DISPLACED_DATE = 3_u32
  FMTID_Briefcase = "328d8b21-7729-4bfc-954c-902b329d56b0"
  PID_SYNC_COPY_IN = 2_u32
  FMTID_Misc = "9b174b34-40ff-11d2-a27e-00c04fc30871"
  PID_MISC_STATUS = 2_u32
  PID_MISC_ACCESSCOUNT = 3_u32
  PID_MISC_OWNER = 4_u32
  PID_HTMLINFOTIPFILE = 5_u32
  PID_MISC_PICS = 6_u32
  FMTID_WebView = "f2275480-f782-4291-bd94-f13693513aec"
  PID_DISPLAY_PROPERTIES = 0_u32
  PID_INTROTEXT = 1_u32
  FMTID_MUSIC = "56a3372e-ce9c-11d2-9f0e-006097c686f6"
  PIDSI_ARTIST = 2_u32
  PIDSI_SONGTITLE = 3_u32
  PIDSI_ALBUM = 4_u32
  PIDSI_YEAR = 5_u32
  PIDSI_COMMENT = 6_u32
  PIDSI_TRACK = 7_u32
  PIDSI_GENRE = 11_u32
  PIDSI_LYRICS = 12_u32
  FMTID_DRM = "aeac19e4-89ae-4508-b9b7-bb867abee2ed"
  PIDDRSI_PROTECTED = 2_u32
  PIDDRSI_DESCRIPTION = 3_u32
  PIDDRSI_PLAYCOUNT = 4_u32
  PIDDRSI_PLAYSTARTS = 5_u32
  PIDDRSI_PLAYEXPIRES = 6_u32
  PIDVSI_STREAM_NAME = 2_u32
  PIDVSI_FRAME_WIDTH = 3_u32
  PIDVSI_FRAME_HEIGHT = 4_u32
  PIDVSI_TIMELENGTH = 7_u32
  PIDVSI_FRAME_COUNT = 5_u32
  PIDVSI_FRAME_RATE = 6_u32
  PIDVSI_DATA_RATE = 8_u32
  PIDVSI_SAMPLE_SIZE = 9_u32
  PIDVSI_COMPRESSION = 10_u32
  PIDVSI_STREAM_NUMBER = 11_u32
  PIDASI_FORMAT = 2_u32
  PIDASI_TIMELENGTH = 3_u32
  PIDASI_AVG_DATA_RATE = 4_u32
  PIDASI_SAMPLE_RATE = 5_u32
  PIDASI_SAMPLE_SIZE = 6_u32
  PIDASI_CHANNEL_COUNT = 7_u32
  PIDASI_STREAM_NUMBER = 8_u32
  PIDASI_STREAM_NAME = 9_u32
  PIDASI_COMPRESSION = 10_u32
  PID_CONTROLPANEL_CATEGORY = 2_u32
  FMTID_Volume = "9b174b35-40ff-11d2-a27e-00c04fc30871"
  PID_VOLUME_FREE = 2_u32
  PID_VOLUME_CAPACITY = 3_u32
  PID_VOLUME_FILESYSTEM = 4_u32
  PID_SHARE_CSC_STATUS = 2_u32
  PID_LINK_TARGET = 2_u32
  PID_LINK_TARGET_TYPE = 3_u32
  FMTID_Query = "49691c90-7e17-101a-a91c-08002b2ecda9"
  PID_QUERY_RANK = 2_u32
  CLSID_HWShellExecute = "ffb8655f-81b9-4fce-b89c-9a6ba76d13e7"
  CLSID_DragDropHelper = "4657278a-411b-11d2-839a-00c04fd918d0"
  CLSID_CAnchorBrowsePropertyPage = "3050f3bb-98b5-11cf-bb82-00aa00bdce0b"
  CLSID_CImageBrowsePropertyPage = "3050f3b3-98b5-11cf-bb82-00aa00bdce0b"
  CLSID_CDocBrowsePropertyPage = "3050f3b4-98b5-11cf-bb82-00aa00bdce0b"
  SID_STopWindow = "49e1b500-4636-11d3-97f7-00c04f45d0b3"
  SID_SGetViewFromViewDual = "889a935d-971e-4b12-b90c-24dfc9e1e5e8"
  CLSID_FolderItemsMultiLevel = "53c74826-ab99-4d33-aca4-3117f51d3788"
  CLSID_NewMenu = "d969a300-e7ff-11d0-a93b-00a0c90f2719"
  BHID_SFObject = "3981e224-f559-11d3-8e3a-00c04f6837d5"
  BHID_SFUIObject = "3981e225-f559-11d3-8e3a-00c04f6837d5"
  BHID_SFViewObject = "3981e226-f559-11d3-8e3a-00c04f6837d5"
  BHID_Storage = "3981e227-f559-11d3-8e3a-00c04f6837d5"
  BHID_Stream = "1cebb3ab-7c10-499a-a417-92ca16c4cb83"
  BHID_RandomAccessStream = "f16fc93b-77ae-4cfe-bda7-a866eea6878d"
  BHID_LinkTargetItem = "3981e228-f559-11d3-8e3a-00c04f6837d5"
  BHID_StorageEnum = "4621a4e3-f0d6-4773-8a9c-46e77b174840"
  BHID_Transfer = "d5e346a1-f753-4932-b403-4574800e2498"
  BHID_PropertyStore = "0384e1a4-1523-439c-a4c8-ab911052f586"
  BHID_ThumbnailHandler = "7b2e650a-8e20-4f4a-b09e-6597afc72fb0"
  BHID_EnumItems = "94f60519-2850-4924-aa5a-d15e84868039"
  BHID_DataObject = "b8c0bd9f-ed24-455c-83e6-d5390c4fe8c4"
  BHID_AssociationArray = "bea9ef17-82f1-4f60-9284-4f8db75c3be9"
  BHID_Filter = "38d08778-f557-4690-9ebf-ba54706ad8f7"
  BHID_EnumAssocHandlers = "b8ab0b9c-c2ec-4f7a-918d-314900e6280a"
  BHID_StorageItem = "404e2109-77d2-4699-a5a0-4fdf10db9837"
  BHID_FilePlaceholder = "8677dceb-aae0-4005-8d3d-547fa852f825"
  CATID_FilePlaceholderMergeHandler = "3e9c9a51-d4aa-4870-b47c-7424b491f1cc"
  SID_CtxQueryAssociations = "faadfc40-b777-4b69-aa81-77035ef0e6e8"
  CLSID_QuickLinks = "0e5cbf21-d15f-11d0-8301-00aa005b4383"
  CLSID_ISFBand = "d82be2b0-5764-11d0-a96e-00c04fd705a2"
  CLSID_ShellFldSetExt = "6d5313c0-8c62-11d1-b2cd-006097df8c11"
  SID_SMenuBandChild = "ed9cc020-08b9-11d1-9823-00c04fd91972"
  SID_SMenuBandParent = "8c278eec-3eab-11d1-8cb0-00c04fd918d0"
  SID_SMenuPopup = "d1e7afeb-6a2e-11d0-8c78-00c04fd918b4"
  SID_SMenuBandBottomSelected = "165ebaf4-6d51-11d2-83ad-00c04fd918d0"
  SID_SMenuBandBottom = "743ca664-0deb-11d1-9825-00c04fd91972"
  SID_MenuShellFolder = "a6c17eb4-2d65-11d2-838f-00c04fd918d0"
  SID_SMenuBandContextMenuModifier = "39545874-7162-465e-b783-2aa1874fef81"
  SID_SMenuBandBKContextMenu = "164bbd86-1d0d-4de0-9a3b-d9729647c2b8"
  CGID_MENUDESKBAR = "5c9f0a12-959e-11d0-a3a4-00a0c9082636"
  SID_SMenuBandTop = "9493a810-ec38-11d0-bc46-00aa006ce2f5"
  CLSID_MenuToolbarBase = "40b96610-b522-11d1-b3b4-00aa006efde7"
  CLSID_MenuBandSite = "e13ef4e4-d2f2-11d0-9816-00c04fd91972"
  SID_SCommDlgBrowser = "80f30233-b7df-11d2-a33b-006097df5bd4"
  CPFG_LOGON_USERNAME = "da15bbe8-954d-4fd3-b0f4-1fb5b90b174b"
  CPFG_LOGON_PASSWORD = "60624cfa-a477-47b1-8a8e-3a4a19981827"
  CPFG_SMARTCARD_USERNAME = "3e1ecf69-568c-4d96-9d59-46444174e2d6"
  CPFG_SMARTCARD_PIN = "4fe5263b-9181-46c1-b0a4-9dedd4db7dea"
  CPFG_CREDENTIAL_PROVIDER_LOGO = "2d837775-f6cd-464e-a745-482fd0b47493"
  CPFG_CREDENTIAL_PROVIDER_LABEL = "286bbff3-bad4-438f-b007-79b7267c3d48"
  CPFG_STANDALONE_SUBMIT_BUTTON = "0b7b0ad8-cc36-4d59-802b-82f714fa7022"
  CPFG_STYLE_LINK_AS_BUTTON = "088fa508-94a6-4430-a4cb-6fc6e3c0b9e2"
  FOLDERTYPEID_Invalid = "57807898-8c4f-4462-bb63-71042380b109"
  FOLDERTYPEID_Generic = "5c4f28b5-f869-4e84-8e60-f11db97c5cc7"
  FOLDERTYPEID_GenericSearchResults = "7fde1a1e-8b31-49a5-93b8-6be14cfa4943"
  FOLDERTYPEID_GenericLibrary = "5f4eab9a-6833-4f61-899d-31cf46979d49"
  FOLDERTYPEID_Documents = "7d49d726-3c21-4f05-99aa-fdc2c9474656"
  FOLDERTYPEID_Pictures = "b3690e58-e961-423b-b687-386ebfd83239"
  FOLDERTYPEID_Music = "94d6ddcc-4a68-4175-a374-bd584a510b78"
  FOLDERTYPEID_Videos = "5fa96407-7e77-483c-ac93-691d05850de8"
  FOLDERTYPEID_Downloads = "885a186e-a440-4ada-812b-db871b942259"
  FOLDERTYPEID_UserFiles = "cd0fc69b-71e2-46e5-9690-5bcd9f57aab3"
  FOLDERTYPEID_UsersLibraries = "c4d98f09-6124-4fe0-9942-826416082da9"
  FOLDERTYPEID_OtherUsers = "b337fd00-9dd5-4635-a6d4-da33fd102b7a"
  FOLDERTYPEID_PublishedItems = "7f2f5b96-ff74-41da-afd8-1c78a5f3aea2"
  FOLDERTYPEID_Communications = "91475fe5-586b-4eba-8d75-d17434b8cdf6"
  FOLDERTYPEID_Contacts = "de2b70ec-9bf7-4a93-bd3d-243f7881d492"
  FOLDERTYPEID_StartMenu = "ef87b4cb-f2ce-4785-8658-4ca6c63e38c6"
  FOLDERTYPEID_RecordedTV = "5557a28f-5da6-4f83-8809-c2c98a11a6fa"
  FOLDERTYPEID_SavedGames = "d0363307-28cb-4106-9f23-2956e3e5e0e7"
  FOLDERTYPEID_OpenSearch = "8faf9629-1980-46ff-8023-9dceab9c3ee3"
  FOLDERTYPEID_SearchConnector = "982725ee-6f47-479e-b447-812bfa7d2e8f"
  FOLDERTYPEID_AccountPictures = "db2a5d8f-06e6-4007-aba6-af877d526ea6"
  FOLDERTYPEID_Games = "b689b0d0-76d3-4cbb-87f7-585d0e0ce070"
  FOLDERTYPEID_ControlPanelCategory = "de4f0660-fa10-4b8f-a494-068b20b22307"
  FOLDERTYPEID_ControlPanelClassic = "0c3794f3-b545-43aa-a329-c37430c58d2a"
  FOLDERTYPEID_Printers = "2c7bbec6-c844-4a0a-91fa-cef6f59cfda1"
  FOLDERTYPEID_RecycleBin = "d6d9e004-cd87-442b-9d57-5e0aeb4f6f72"
  FOLDERTYPEID_SoftwareExplorer = "d674391b-52d9-4e07-834e-67c98610f39d"
  FOLDERTYPEID_CompressedFolder = "80213e82-bcfd-4c4f-8817-bb27601267a9"
  FOLDERTYPEID_NetworkExplorer = "25cc242b-9a7c-4f51-80e0-7a2928febe42"
  FOLDERTYPEID_Searches = "0b0ba2e3-405f-415e-a6ee-cad625207853"
  FOLDERTYPEID_SearchHome = "834d8a44-0974-4ed6-866e-f203d80b3810"
  FOLDERTYPEID_StorageProviderGeneric = "4f01ebc5-2385-41f2-a28e-2c5c91fb56e0"
  FOLDERTYPEID_StorageProviderDocuments = "dd61bd66-70e8-48dd-9655-65c5e1aac2d1"
  FOLDERTYPEID_StorageProviderPictures = "71d642a9-f2b1-42cd-ad92-eb9300c7cc0a"
  FOLDERTYPEID_StorageProviderMusic = "672ecd7e-af04-4399-875c-0290845b6247"
  FOLDERTYPEID_StorageProviderVideos = "51294da1-d7b1-485b-9e9a-17cffe33e187"
  SYNCMGR_OBJECTID_Icon = "6dbc85c3-5d07-4c72-a777-7fec78072c06"
  SYNCMGR_OBJECTID_EventStore = "4bef34b9-a786-4075-ba88-0c2b9d89a98f"
  SYNCMGR_OBJECTID_ConflictStore = "d78181f4-2389-47e4-a960-60bcc2ed930b"
  SYNCMGR_OBJECTID_BrowseContent = "57cbb584-e9b4-47ae-a120-c4df3335dee2"
  SYNCMGR_OBJECTID_ShowSchedule = "edc6f3e3-8441-4109-adf3-6c1ca0b7de47"
  SYNCMGR_OBJECTID_QueryBeforeActivate = "d882d80b-e7aa-49ed-86b7-e6e1f714cdfe"
  SYNCMGR_OBJECTID_QueryBeforeDeactivate = "a0efc282-60e0-460e-9374-ea88513cfc80"
  SYNCMGR_OBJECTID_QueryBeforeEnable = "04cbf7f0-5beb-4de1-bc90-908345c480f6"
  SYNCMGR_OBJECTID_QueryBeforeDisable = "bb5f64aa-f004-4eb5-8e4d-26751966344c"
  SYNCMGR_OBJECTID_QueryBeforeDelete = "f76c3397-afb3-45d7-a59f-5a49e905437e"
  SYNCMGR_OBJECTID_EventLinkClick = "2203bdc1-1af1-4082-8c30-28399f41384c"
  EP_NavPane = "cb316b22-25f7-42b8-8a09-540d23a43c2f"
  EP_Commands = "d9745868-ca5f-4a76-91cd-f5a129fbb076"
  EP_Commands_Organize = "72e81700-e3ec-4660-bf24-3c3b7b648806"
  EP_Commands_View = "21f7c32d-eeaa-439b-bb51-37b96fd6a943"
  EP_DetailsPane = "43abf98b-89b8-472d-b9ce-e69b8229f019"
  EP_PreviewPane = "893c63d1-45c8-4d17-be19-223be71be365"
  EP_QueryPane = "65bcde4f-4f07-4f27-83a7-1afca4df7ddd"
  EP_AdvQueryPane = "b4e9db8b-34ba-4c39-b5cc-16a1bd2c411c"
  EP_StatusBar = "65fe56ce-5cfe-4bc4-ad8a-7ae3fe7e8f7c"
  EP_Ribbon = "d27524a8-c9f2-4834-a106-df8889fd4f37"
  CATID_LocationFactory = "965c4d51-8b76-4e57-80b7-564d2ea4b55e"
  CATID_LocationProvider = "1b3ca474-2614-414b-b813-1aceca3e3dd8"
  ItemCount_Property_GUID = "abbf5c45-5ccc-47b7-bb4e-87cb87bbd162"
  SelectedItemCount_Property_GUID = "8fe316d2-0e52-460a-9c1e-48f273d470a3"
  ItemIndex_Property_GUID = "92a053da-2969-4021-bf27-514cfc2e4a69"
  CATID_SearchableApplication = "366c292a-d9b3-4dbf-bb70-e62ec3d0bbbf"
  IDD_WIZEXTN_FIRST = 20480_u32
  IDD_WIZEXTN_LAST = 20736_u32
  SHPWHF_NORECOMPRESS = 1_u32
  SHPWHF_NONETPLACECREATE = 2_u32
  SHPWHF_NOFILESELECTOR = 4_u32
  SHPWHF_USEMRU = 8_u32
  SHPWHF_ANYLOCATION = 256_u32
  SHPWHF_VALIDATEVIAWEBFOLDERS = 65536_u32
  ACDD_VISIBLE = 1_u32
  PROPSTR_EXTENSIONCOMPLETIONSTATE = "ExtensionCompletionState"
  SID_SCommandBarState = "b99eaa5c-3850-4400-bc33-2ce534048bf8"
  NSTCDHPOS_ONTOP = -1_i32
  FVSIF_RECT = 1_u32
  FVSIF_PINNED = 2_u32
  FVSIF_NEWFAILED = 134217728_u32
  FVSIF_NEWFILE = 2147483648_u32
  FVSIF_CANVIEWIT = 1073741824_u32
  FCIDM_TOOLBAR = 40960_u32
  FCIDM_STATUS = 40961_u32
  IDC_OFFLINE_HAND = 103_u32
  IDC_PANTOOL_HAND_OPEN = 104_u32
  IDC_PANTOOL_HAND_CLOSED = 105_u32
  PANE_NONE = 4294967295_u32
  PANE_ZONE = 1_u32
  PANE_OFFLINE = 2_u32
  PANE_PRINTER = 3_u32
  PANE_SSL = 4_u32
  PANE_NAVIGATION = 5_u32
  PANE_PROGRESS = 6_u32
  PANE_PRIVACY = 7_u32
  DWFRF_NORMAL = 0_u32
  DWFRF_DELETECONFIGDATA = 1_u32
  DWFAF_HIDDEN = 1_u32
  DWFAF_GROUP1 = 2_u32
  DWFAF_GROUP2 = 4_u32
  DWFAF_AUTOHIDE = 16_u32
  SHIMSTCAPFLAG_LOCKABLE = 1_u32
  SHIMSTCAPFLAG_PURGEABLE = 2_u32
  ISFB_MASK_STATE = 1_u32
  ISFB_MASK_BKCOLOR = 2_u32
  ISFB_MASK_VIEWMODE = 4_u32
  ISFB_MASK_SHELLFOLDER = 8_u32
  ISFB_MASK_IDLIST = 16_u32
  ISFB_MASK_COLORS = 32_u32
  ISFB_STATE_DEFAULT = 0_u32
  ISFB_STATE_DEBOSSED = 1_u32
  ISFB_STATE_ALLOWRENAME = 2_u32
  ISFB_STATE_NOSHOWTEXT = 4_u32
  ISFB_STATE_CHANNELBAR = 16_u32
  ISFB_STATE_QLINKSMODE = 32_u32
  ISFB_STATE_FULLOPEN = 64_u32
  ISFB_STATE_NONAMESORT = 128_u32
  ISFB_STATE_BTNMINSIZE = 256_u32
  ISFBVIEWMODE_SMALLICONS = 1_u32
  ISFBVIEWMODE_LARGEICONS = 2_u32
  ISFBVIEWMODE_LOGOS = 3_u32
  DBC_GS_IDEAL = 0_u32
  DBC_GS_SIZEDOWN = 1_u32
  DBC_HIDE = 0_u32
  DBC_SHOW = 1_u32
  DBC_SHOWOBSCURE = 2_u32
  SSM_CLEAR = 0_u32
  SSM_SET = 1_u32
  SSM_REFRESH = 2_u32
  SSM_UPDATE = 4_u32
  SCHEME_DISPLAY = 1_u32
  SCHEME_EDIT = 2_u32
  SCHEME_LOCAL = 4_u32
  SCHEME_GLOBAL = 8_u32
  SCHEME_REFRESH = 16_u32
  SCHEME_UPDATE = 32_u32
  SCHEME_DONOTUSE = 64_u32
  SCHEME_CREATE = 128_u32
  GADOF_DIRTY = 1_u32
  SHCDF_UPDATEITEM = 1_u32
  PPCF_ADDQUOTES = 1_u32
  PPCF_ADDARGUMENTS = 3_u32
  PPCF_NODIRECTORIES = 16_u32
  PPCF_FORCEQUALIFY = 64_u32
  PPCF_LONGESTPOSSIBLE = 128_u32
  OPENPROPS_NONE = 0_u32
  OPENPROPS_INHIBITPIF = 32768_u32
  GETPROPS_NONE = 0_u32
  SETPROPS_NONE = 0_u32
  CLOSEPROPS_NONE = 0_u32
  CLOSEPROPS_DISCARD = 1_u32
  TBIF_APPEND = 0_u32
  TBIF_PREPEND = 1_u32
  TBIF_REPLACE = 2_u32
  TBIF_DEFAULT = 0_u32
  TBIF_INTERNETBAR = 65536_u32
  TBIF_STANDARDTOOLBAR = 131072_u32
  TBIF_NOTOOLBAR = 196608_u32
  SFVM_REARRANGE = 1_u32
  SFVM_ADDOBJECT = 3_u32
  SFVM_REMOVEOBJECT = 6_u32
  SFVM_UPDATEOBJECT = 7_u32
  SFVM_GETSELECTEDOBJECTS = 9_u32
  SFVM_SETITEMPOS = 14_u32
  SFVM_SETCLIPBOARD = 16_u32
  SFVM_SETPOINTS = 23_u32
  GIL_OPENICON = 1_u32
  GIL_FORSHELL = 2_u32
  GIL_ASYNC = 32_u32
  GIL_DEFAULTICON = 64_u32
  GIL_FORSHORTCUT = 128_u32
  GIL_CHECKSHIELD = 512_u32
  GIL_SIMULATEDOC = 1_u32
  GIL_PERINSTANCE = 2_u32
  GIL_PERCLASS = 4_u32
  GIL_NOTFILENAME = 8_u32
  GIL_DONTCACHE = 16_u32
  GIL_SHIELD = 512_u32
  GIL_FORCENOSHIELD = 1024_u32
  SIOM_OVERLAYINDEX = 1_u32
  SIOM_ICONINDEX = 2_u32
  SIOM_RESERVED_SHARED = 0_u32
  SIOM_RESERVED_LINK = 1_u32
  SIOM_RESERVED_SLOWFILE = 2_u32
  SIOM_RESERVED_DEFAULT = 3_u32
  OI_DEFAULT = 0_u32
  OI_ASYNC = 4294962926_u32
  IDO_SHGIOI_SHARE = 268435455_u32
  IDO_SHGIOI_LINK = 268435454_u32
  IDO_SHGIOI_SLOWFILE = 4294967293_u64
  IDO_SHGIOI_DEFAULT = 4294967292_u64
  NT_CONSOLE_PROPS_SIG = 2684354562_u32
  NT_FE_CONSOLE_PROPS_SIG = 2684354564_u32
  EXP_DARWIN_ID_SIG = 2684354566_u32
  EXP_SPECIAL_FOLDER_SIG = 2684354565_u32
  EXP_SZ_LINK_SIG = 2684354561_u32
  EXP_SZ_ICON_SIG = 2684354567_u32
  EXP_PROPERTYSTORAGE_SIG = 2684354569_u32
  FCIDM_SHVIEWFIRST = 0_u32
  FCIDM_SHVIEWLAST = 32767_u32
  FCIDM_BROWSERFIRST = 40960_u32
  FCIDM_BROWSERLAST = 48896_u32
  FCIDM_GLOBALFIRST = 32768_u32
  FCIDM_GLOBALLAST = 40959_u32
  FCIDM_MENU_FILE = 32768_u32
  FCIDM_MENU_EDIT = 32832_u32
  FCIDM_MENU_VIEW = 32896_u32
  FCIDM_MENU_VIEW_SEP_OPTIONS = 32897_u32
  FCIDM_MENU_TOOLS = 32960_u32
  FCIDM_MENU_TOOLS_SEP_GOTO = 32961_u32
  FCIDM_MENU_HELP = 33024_u32
  FCIDM_MENU_FIND = 33088_u32
  FCIDM_MENU_EXPLORE = 33104_u32
  FCIDM_MENU_FAVORITES = 33136_u32
  OFASI_EDIT = 1_u32
  OFASI_OPENDESKTOP = 2_u32
  CSIDL_DESKTOP = 0_u32
  CSIDL_INTERNET = 1_u32
  CSIDL_PROGRAMS = 2_u32
  CSIDL_CONTROLS = 3_u32
  CSIDL_PRINTERS = 4_u32
  CSIDL_PERSONAL = 5_u32
  CSIDL_FAVORITES = 6_u32
  CSIDL_STARTUP = 7_u32
  CSIDL_RECENT = 8_u32
  CSIDL_SENDTO = 9_u32
  CSIDL_BITBUCKET = 10_u32
  CSIDL_STARTMENU = 11_u32
  CSIDL_MYDOCUMENTS = 5_u32
  CSIDL_MYMUSIC = 13_u32
  CSIDL_MYVIDEO = 14_u32
  CSIDL_DESKTOPDIRECTORY = 16_u32
  CSIDL_DRIVES = 17_u32
  CSIDL_NETWORK = 18_u32
  CSIDL_NETHOOD = 19_u32
  CSIDL_FONTS = 20_u32
  CSIDL_TEMPLATES = 21_u32
  CSIDL_COMMON_STARTMENU = 22_u32
  CSIDL_COMMON_PROGRAMS = 23_u32
  CSIDL_COMMON_STARTUP = 24_u32
  CSIDL_COMMON_DESKTOPDIRECTORY = 25_u32
  CSIDL_APPDATA = 26_u32
  CSIDL_PRINTHOOD = 27_u32
  CSIDL_LOCAL_APPDATA = 28_u32
  CSIDL_ALTSTARTUP = 29_u32
  CSIDL_COMMON_ALTSTARTUP = 30_u32
  CSIDL_COMMON_FAVORITES = 31_u32
  CSIDL_INTERNET_CACHE = 32_u32
  CSIDL_COOKIES = 33_u32
  CSIDL_HISTORY = 34_u32
  CSIDL_COMMON_APPDATA = 35_u32
  CSIDL_WINDOWS = 36_u32
  CSIDL_SYSTEM = 37_u32
  CSIDL_PROGRAM_FILES = 38_u32
  CSIDL_MYPICTURES = 39_u32
  CSIDL_PROFILE = 40_u32
  CSIDL_SYSTEMX86 = 41_u32
  CSIDL_PROGRAM_FILESX86 = 42_u32
  CSIDL_PROGRAM_FILES_COMMON = 43_u32
  CSIDL_PROGRAM_FILES_COMMONX86 = 44_u32
  CSIDL_COMMON_TEMPLATES = 45_u32
  CSIDL_COMMON_DOCUMENTS = 46_u32
  CSIDL_COMMON_ADMINTOOLS = 47_u32
  CSIDL_ADMINTOOLS = 48_u32
  CSIDL_CONNECTIONS = 49_u32
  CSIDL_COMMON_MUSIC = 53_u32
  CSIDL_COMMON_PICTURES = 54_u32
  CSIDL_COMMON_VIDEO = 55_u32
  CSIDL_RESOURCES = 56_u32
  CSIDL_RESOURCES_LOCALIZED = 57_u32
  CSIDL_COMMON_OEM_LINKS = 58_u32
  CSIDL_CDBURN_AREA = 59_u32
  CSIDL_COMPUTERSNEARME = 61_u32
  CSIDL_FLAG_CREATE = 32768_u32
  CSIDL_FLAG_DONT_VERIFY = 16384_u32
  CSIDL_FLAG_DONT_UNEXPAND = 8192_u32
  CSIDL_FLAG_NO_ALIAS = 4096_u32
  CSIDL_FLAG_PER_USER_INIT = 2048_u32
  CSIDL_FLAG_MASK = 65280_u32
  FCS_READ = 1_u32
  FCS_FORCEWRITE = 2_u32
  FCS_FLAG_DRAGDROP = 2_u32
  FCSM_VIEWID = 1_u32
  FCSM_WEBVIEWTEMPLATE = 2_u32
  FCSM_INFOTIP = 4_u32
  FCSM_CLSID = 8_u32
  FCSM_ICONFILE = 16_u32
  FCSM_LOGO = 32_u32
  FCSM_FLAGS = 64_u32
  BIF_RETURNONLYFSDIRS = 1_u32
  BIF_DONTGOBELOWDOMAIN = 2_u32
  BIF_STATUSTEXT = 4_u32
  BIF_RETURNFSANCESTORS = 8_u32
  BIF_EDITBOX = 16_u32
  BIF_VALIDATE = 32_u32
  BIF_NEWDIALOGSTYLE = 64_u32
  BIF_BROWSEINCLUDEURLS = 128_u32
  BIF_UAHINT = 256_u32
  BIF_NONEWFOLDERBUTTON = 512_u32
  BIF_NOTRANSLATETARGETS = 1024_u32
  BIF_BROWSEFORCOMPUTER = 4096_u32
  BIF_BROWSEFORPRINTER = 8192_u32
  BIF_BROWSEINCLUDEFILES = 16384_u32
  BIF_SHAREABLE = 32768_u32
  BIF_BROWSEFILEJUNCTIONS = 65536_u32
  BFFM_INITIALIZED = 1_u32
  BFFM_SELCHANGED = 2_u32
  BFFM_VALIDATEFAILEDA = 3_u32
  BFFM_VALIDATEFAILEDW = 4_u32
  BFFM_IUNKNOWN = 5_u32
  BFFM_SETSTATUSTEXTA = 1124_u32
  BFFM_ENABLEOK = 1125_u32
  BFFM_SETSELECTIONA = 1126_u32
  BFFM_SETSELECTIONW = 1127_u32
  BFFM_SETSTATUSTEXTW = 1128_u32
  BFFM_SETOKTEXT = 1129_u32
  BFFM_SETEXPANDED = 1130_u32
  BFFM_SETSTATUSTEXT = 1128_u32
  BFFM_SETSELECTION = 1127_u32
  BFFM_VALIDATEFAILED = 4_u32
  CMDID_INTSHORTCUTCREATE = 1_i32
  STR_PARSE_WITH_PROPERTIES = "ParseWithProperties"
  STR_PARSE_PARTIAL_IDLIST = "ParseOriginalItem"
  PROGDLG_NORMAL = 0_u32
  PROGDLG_MODAL = 1_u32
  PROGDLG_AUTOTIME = 2_u32
  PROGDLG_NOTIME = 4_u32
  PROGDLG_NOMINIMIZE = 8_u32
  PROGDLG_NOPROGRESSBAR = 16_u32
  PROGDLG_MARQUEEPROGRESS = 32_u32
  PROGDLG_NOCANCEL = 64_u32
  PDTIMER_RESET = 1_u32
  PDTIMER_PAUSE = 2_u32
  PDTIMER_RESUME = 3_u32
  COMPONENT_TOP = 1073741823_u32
  COMP_TYPE_HTMLDOC = 0_u32
  COMP_TYPE_PICTURE = 1_u32
  COMP_TYPE_WEBSITE = 2_u32
  COMP_TYPE_CONTROL = 3_u32
  COMP_TYPE_CFHTML = 4_u32
  COMP_TYPE_MAX = 4_u32
  IS_NORMAL = 1_u32
  IS_FULLSCREEN = 2_u32
  IS_SPLIT = 4_u32
  AD_APPLY_SAVE = 1_u32
  AD_APPLY_HTMLGEN = 2_u32
  AD_APPLY_REFRESH = 4_u32
  AD_APPLY_FORCE = 8_u32
  AD_APPLY_BUFFERED_REFRESH = 16_u32
  AD_APPLY_DYNAMICREFRESH = 32_u32
  AD_GETWP_BMP = 0_u32
  AD_GETWP_IMAGE = 1_u32
  AD_GETWP_LAST_APPLIED = 2_u32
  WPSTYLE_CENTER = 0_u32
  WPSTYLE_TILE = 1_u32
  WPSTYLE_STRETCH = 2_u32
  WPSTYLE_KEEPASPECT = 3_u32
  WPSTYLE_CROPTOFIT = 4_u32
  WPSTYLE_SPAN = 5_u32
  WPSTYLE_MAX = 6_u32
  COMP_ELEM_TYPE = 1_u32
  COMP_ELEM_CHECKED = 2_u32
  COMP_ELEM_DIRTY = 4_u32
  COMP_ELEM_NOSCROLL = 8_u32
  COMP_ELEM_POS_LEFT = 16_u32
  COMP_ELEM_POS_TOP = 32_u32
  COMP_ELEM_SIZE_WIDTH = 64_u32
  COMP_ELEM_SIZE_HEIGHT = 128_u32
  COMP_ELEM_POS_ZINDEX = 256_u32
  COMP_ELEM_SOURCE = 512_u32
  COMP_ELEM_FRIENDLYNAME = 1024_u32
  COMP_ELEM_SUBSCRIBEDURL = 2048_u32
  COMP_ELEM_ORIGINAL_CSI = 4096_u32
  COMP_ELEM_RESTORED_CSI = 8192_u32
  COMP_ELEM_CURITEMSTATE = 16384_u32
  ADDURL_SILENT = 1_u32
  COMPONENT_DEFAULT_LEFT = 65535_u32
  COMPONENT_DEFAULT_TOP = 65535_u32
  MAX_COLUMN_NAME_LEN = 80_u32
  MAX_COLUMN_DESC_LEN = 128_u32
  CFSTR_SHELLIDLIST = "Shell IDList Array"
  CFSTR_SHELLIDLISTOFFSET = "Shell Object Offsets"
  CFSTR_NETRESOURCES = "Net Resource"
  CFSTR_FILEDESCRIPTORA = "FileGroupDescriptor"
  CFSTR_FILEDESCRIPTORW = "FileGroupDescriptorW"
  CFSTR_FILECONTENTS = "FileContents"
  CFSTR_FILENAMEA = "FileName"
  CFSTR_FILENAMEW = "FileNameW"
  CFSTR_PRINTERGROUP = "PrinterFriendlyName"
  CFSTR_FILENAMEMAPA = "FileNameMap"
  CFSTR_FILENAMEMAPW = "FileNameMapW"
  CFSTR_SHELLURL = "UniformResourceLocator"
  CFSTR_INETURLA = "UniformResourceLocator"
  CFSTR_INETURLW = "UniformResourceLocatorW"
  CFSTR_PREFERREDDROPEFFECT = "Preferred DropEffect"
  CFSTR_PERFORMEDDROPEFFECT = "Performed DropEffect"
  CFSTR_PASTESUCCEEDED = "Paste Succeeded"
  CFSTR_INDRAGLOOP = "InShellDragLoop"
  CFSTR_MOUNTEDVOLUME = "MountedVolume"
  CFSTR_PERSISTEDDATAOBJECT = "PersistedDataObject"
  CFSTR_TARGETCLSID = "TargetCLSID"
  CFSTR_LOGICALPERFORMEDDROPEFFECT = "Logical Performed DropEffect"
  CFSTR_AUTOPLAY_SHELLIDLISTS = "Autoplay Enumerated IDList Array"
  CFSTR_UNTRUSTEDDRAGDROP = "UntrustedDragDrop"
  CFSTR_FILE_ATTRIBUTES_ARRAY = "File Attributes Array"
  CFSTR_INVOKECOMMAND_DROPPARAM = "InvokeCommand DropParam"
  CFSTR_SHELLDROPHANDLER = "DropHandlerCLSID"
  CFSTR_DROPDESCRIPTION = "DropDescription"
  CFSTR_ZONEIDENTIFIER = "ZoneIdentifier"
  CFSTR_FILEDESCRIPTOR = "FileGroupDescriptorW"
  CFSTR_FILENAME = "FileNameW"
  CFSTR_FILENAMEMAP = "FileNameMapW"
  CFSTR_INETURL = "UniformResourceLocatorW"
  DVASPECT_SHORTNAME = 2_u32
  DVASPECT_COPY = 3_u32
  DVASPECT_LINK = 4_u32
  SHCNEE_ORDERCHANGED = 2_i32
  SHCNEE_MSI_CHANGE = 4_i32
  SHCNEE_MSI_UNINSTALL = 5_i32
  NUM_POINTS = 3_u32
  CABINETSTATE_VERSION = 2_u32
  PIFNAMESIZE = 30_u32
  PIFSTARTLOCSIZE = 63_u32
  PIFDEFPATHSIZE = 64_u32
  PIFPARAMSSIZE = 64_u32
  PIFSHPROGSIZE = 64_u32
  PIFSHDATASIZE = 64_u32
  PIFDEFFILESIZE = 80_u32
  PIFMAXFILEPATH = 260_u32
  QCMINFO_PLACE_BEFORE = 0_u32
  QCMINFO_PLACE_AFTER = 1_u32
  SFVSOC_INVALIDATE_ALL = 1_u32
  SFVSOC_NOSCROLL = 2_u32
  SHELLSTATEVERSION_IE4 = 9_u32
  SHELLSTATEVERSION_WIN2K = 10_u32
  SHPPFW_NONE = 0_u32
  SHPPFW_DIRCREATE = 1_u32
  SHPPFW_ASKDIRCREATE = 2_u32
  SHPPFW_IGNOREFILENAME = 4_u32
  SHPPFW_NOWRITECHECK = 8_u32
  SHPPFW_MEDIACHECKONLY = 16_u32
  CMF_NORMAL = 0_u32
  CMF_DEFAULTONLY = 1_u32
  CMF_VERBSONLY = 2_u32
  CMF_EXPLORE = 4_u32
  CMF_NOVERBS = 8_u32
  CMF_CANRENAME = 16_u32
  CMF_NODEFAULT = 32_u32
  CMF_INCLUDESTATIC = 64_u32
  CMF_ITEMMENU = 128_u32
  CMF_EXTENDEDVERBS = 256_u32
  CMF_DISABLEDVERBS = 512_u32
  CMF_ASYNCVERBSTATE = 1024_u32
  CMF_OPTIMIZEFORINVOKE = 2048_u32
  CMF_SYNCCASCADEMENU = 4096_u32
  CMF_DONOTPICKDEFAULT = 8192_u32
  CMF_RESERVED = 4294901760_u32
  GCS_VERBA = 0_u32
  GCS_HELPTEXTA = 1_u32
  GCS_VALIDATEA = 2_u32
  GCS_VERBW = 4_u32
  GCS_HELPTEXTW = 5_u32
  GCS_VALIDATEW = 6_u32
  GCS_VERBICONW = 20_u32
  GCS_UNICODE = 4_u32
  GCS_VERB = 4_u32
  GCS_HELPTEXT = 5_u32
  GCS_VALIDATE = 6_u32
  CMDSTR_NEWFOLDERA = "NewFolder"
  CMDSTR_VIEWLISTA = "ViewList"
  CMDSTR_VIEWDETAILSA = "ViewDetails"
  CMDSTR_NEWFOLDERW = "NewFolder"
  CMDSTR_VIEWLISTW = "ViewList"
  CMDSTR_VIEWDETAILSW = "ViewDetails"
  CMDSTR_NEWFOLDER = "NewFolder"
  CMDSTR_VIEWLIST = "ViewList"
  CMDSTR_VIEWDETAILS = "ViewDetails"
  CMIC_MASK_SHIFT_DOWN = 268435456_u32
  CMIC_MASK_CONTROL_DOWN = 1073741824_u32
  CMIC_MASK_PTINVOKE = 536870912_u32
  IRTIR_TASK_NOT_RUNNING = 0_u32
  IRTIR_TASK_RUNNING = 1_u32
  IRTIR_TASK_SUSPENDED = 2_u32
  IRTIR_TASK_PENDING = 3_u32
  IRTIR_TASK_FINISHED = 4_u32
  ITSAT_DEFAULT_PRIORITY = 268435456_u32
  ITSAT_MAX_PRIORITY = 2147483647_u32
  ITSAT_MIN_PRIORITY = 0_u32
  ITSSFLAG_COMPLETE_ON_DESTROY = 0_u32
  ITSSFLAG_KILL_ON_DESTROY = 1_u32
  ITSSFLAG_FLAGS_MASK = 3_u32
  CSIDL_FLAG_PFTI_TRACKTARGET = 16384_u32
  SHCIDS_ALLFIELDS = -2147483648_i32
  SHCIDS_CANONICALONLY = 268435456_i32
  SHCIDS_BITMASK = -65536_i32
  SHCIDS_COLUMNMASK = 65535_i32
  SFGAO_STORAGE = 8_i32
  SFGAO_CANRENAME = 16_i32
  SFGAO_CANDELETE = 32_i32
  SFGAO_HASPROPSHEET = 64_i32
  SFGAO_DROPTARGET = 256_i32
  SFGAO_CAPABILITYMASK = 375_i32
  SFGAO_PLACEHOLDER = 2048_i32
  SFGAO_SYSTEM = 4096_i32
  SFGAO_ENCRYPTED = 8192_i32
  SFGAO_ISSLOW = 16384_i32
  SFGAO_GHOSTED = 32768_i32
  SFGAO_LINK = 65536_i32
  SFGAO_SHARE = 131072_i32
  SFGAO_READONLY = 262144_i32
  SFGAO_HIDDEN = 524288_i32
  SFGAO_DISPLAYATTRMASK = 1032192_i32
  SFGAO_FILESYSANCESTOR = 268435456_i32
  SFGAO_FOLDER = 536870912_i32
  SFGAO_FILESYSTEM = 1073741824_i32
  SFGAO_HASSUBFOLDER = -2147483648_i32
  SFGAO_CONTENTSMASK = -2147483648_i32
  SFGAO_VALIDATE = 16777216_i32
  SFGAO_REMOVABLE = 33554432_i32
  SFGAO_COMPRESSED = 67108864_i32
  SFGAO_BROWSABLE = 134217728_i32
  SFGAO_NONENUMERATED = 1048576_i32
  SFGAO_NEWCONTENT = 2097152_i32
  SFGAO_CANMONIKER = 4194304_i32
  SFGAO_HASSTORAGE = 4194304_i32
  SFGAO_STREAM = 4194304_i32
  SFGAO_STORAGEANCESTOR = 8388608_i32
  SFGAO_STORAGECAPMASK = 1891958792_i32
  SFGAO_PKEYSFGAOMASK = -2130427904_i32
  CONFLICT_RESOLUTION_CLSID_KEY = "ConflictResolutionCLSID"
  STR_BIND_FORCE_FOLDER_SHORTCUT_RESOLVE = "Force Folder Shortcut Resolve"
  STR_AVOID_DRIVE_RESTRICTION_POLICY = "Avoid Drive Restriction Policy"
  STR_SKIP_BINDING_CLSID = "Skip Binding CLSID"
  STR_PARSE_PREFER_FOLDER_BROWSING = "Parse Prefer Folder Browsing"
  STR_DONT_PARSE_RELATIVE = "Don't Parse Relative"
  STR_PARSE_TRANSLATE_ALIASES = "Parse Translate Aliases"
  STR_PARSE_SKIP_NET_CACHE = "Skip Net Resource Cache"
  STR_PARSE_SHELL_PROTOCOL_TO_FILE_OBJECTS = "Parse Shell Protocol To File Objects"
  STR_TRACK_CLSID = "Track the CLSID"
  STR_INTERNAL_NAVIGATE = "Internal Navigation"
  STR_PARSE_PROPERTYSTORE = "DelegateNamedProperties"
  STR_NO_VALIDATE_FILENAME_CHARS = "NoValidateFilenameChars"
  STR_BIND_DELEGATE_CREATE_OBJECT = "Delegate Object Creation"
  STR_PARSE_ALLOW_INTERNET_SHELL_FOLDERS = "Allow binding to Internet shell folder handlers and negate STR_PARSE_PREFER_WEB_BROWSING"
  STR_PARSE_PREFER_WEB_BROWSING = "Do not bind to Internet shell folder handlers"
  STR_PARSE_SHOW_NET_DIAGNOSTICS_UI = "Show network diagnostics UI"
  STR_PARSE_DONT_REQUIRE_VALIDATED_URLS = "Do not require validated URLs"
  STR_INTERNETFOLDER_PARSE_ONLY_URLMON_BINDABLE = "Validate URL"
  BIND_INTERRUPTABLE = 4294967295_u32
  STR_BIND_FOLDERS_READ_ONLY = "Folders As Read Only"
  STR_BIND_FOLDER_ENUM_MODE = "Folder Enum Mode"
  STR_PARSE_WITH_EXPLICIT_PROGID = "ExplicitProgid"
  STR_PARSE_WITH_EXPLICIT_ASSOCAPP = "ExplicitAssociationApp"
  STR_PARSE_EXPLICIT_ASSOCIATION_SUCCESSFUL = "ExplicitAssociationSuccessful"
  STR_PARSE_AND_CREATE_ITEM = "ParseAndCreateItem"
  STR_PROPERTYBAG_PARAM = "SHBindCtxPropertyBag"
  STR_ENUM_ITEMS_FLAGS = "SHCONTF"
  STR_STORAGEITEM_CREATION_FLAGS = "SHGETSTORAGEITEM"
  STR_ITEM_CACHE_CONTEXT = "ItemCacheContext"
  CDBOSC_SETFOCUS = 0_u32
  CDBOSC_KILLFOCUS = 1_u32
  CDBOSC_SELCHANGE = 2_u32
  CDBOSC_RENAME = 3_u32
  CDBOSC_STATECHANGE = 4_u32
  CDB2N_CONTEXTMENU_DONE = 1_u32
  CDB2N_CONTEXTMENU_START = 2_u32
  CDB2GVF_SHOWALLFILES = 1_u32
  CDB2GVF_ISFILESAVE = 2_u32
  CDB2GVF_ALLOWPREVIEWPANE = 4_u32
  CDB2GVF_NOSELECTVERB = 8_u32
  CDB2GVF_NOINCLUDEITEM = 16_u32
  CDB2GVF_ISFOLDERPICKER = 32_u32
  CDB2GVF_ADDSHIELD = 64_u32
  SBSP_DEFBROWSER = 0_u32
  SBSP_SAMEBROWSER = 1_u32
  SBSP_NEWBROWSER = 2_u32
  SBSP_DEFMODE = 0_u32
  SBSP_OPENMODE = 16_u32
  SBSP_EXPLOREMODE = 32_u32
  SBSP_HELPMODE = 64_u32
  SBSP_NOTRANSFERHIST = 128_u32
  SBSP_ABSOLUTE = 0_u32
  SBSP_RELATIVE = 4096_u32
  SBSP_PARENT = 8192_u32
  SBSP_NAVIGATEBACK = 16384_u32
  SBSP_NAVIGATEFORWARD = 32768_u32
  SBSP_ALLOW_AUTONAVIGATE = 65536_u32
  SBSP_KEEPSAMETEMPLATE = 131072_u32
  SBSP_KEEPWORDWHEELTEXT = 262144_u32
  SBSP_ACTIVATE_NOFOCUS = 524288_u32
  SBSP_CREATENOHISTORY = 1048576_u32
  SBSP_PLAYNOSOUND = 2097152_u32
  SBSP_CALLERUNTRUSTED = 8388608_u32
  SBSP_TRUSTFIRSTDOWNLOAD = 16777216_u32
  SBSP_UNTRUSTEDFORDOWNLOAD = 33554432_u32
  SBSP_NOAUTOSELECT = 67108864_u32
  SBSP_WRITENOHISTORY = 134217728_u32
  SBSP_TRUSTEDFORACTIVEX = 268435456_u32
  SBSP_FEEDNAVIGATION = 536870912_u32
  SBSP_REDIRECT = 1073741824_u32
  SBSP_INITIATEDBYHLINKFRAME = 2147483648_u32
  FCW_STATUS = 1_u32
  FCW_TOOLBAR = 2_u32
  FCW_TREE = 3_u32
  FCW_INTERNETBAR = 6_u32
  FCW_PROGRESS = 8_u32
  FCT_MERGE = 1_u32
  FCT_CONFIGABLE = 2_u32
  FCT_ADDTOEND = 4_u32
  STR_DONT_RESOLVE_LINK = "Don't Resolve Link"
  STR_GET_ASYNC_HANDLER = "GetAsyncHandler"
  STR_GPS_HANDLERPROPERTIESONLY = "GPS_HANDLERPROPERTIESONLY"
  STR_GPS_FASTPROPERTIESONLY = "GPS_FASTPROPERTIESONLY"
  STR_GPS_OPENSLOWITEM = "GPS_OPENSLOWITEM"
  STR_GPS_DELAYCREATION = "GPS_DELAYCREATION"
  STR_GPS_BESTEFFORT = "GPS_BESTEFFORT"
  STR_GPS_NO_OPLOCK = "GPS_NO_OPLOCK"
  DI_GETDRAGIMAGE = "ShellGetDragImage"
  ARCONTENT_AUTORUNINF = 2_u32
  ARCONTENT_AUDIOCD = 4_u32
  ARCONTENT_DVDMOVIE = 8_u32
  ARCONTENT_BLANKCD = 16_u32
  ARCONTENT_BLANKDVD = 32_u32
  ARCONTENT_UNKNOWNCONTENT = 64_u32
  ARCONTENT_AUTOPLAYPIX = 128_u32
  ARCONTENT_AUTOPLAYMUSIC = 256_u32
  ARCONTENT_AUTOPLAYVIDEO = 512_u32
  ARCONTENT_VCD = 1024_u32
  ARCONTENT_SVCD = 2048_u32
  ARCONTENT_DVDAUDIO = 4096_u32
  ARCONTENT_BLANKBD = 8192_u32
  ARCONTENT_BLURAY = 16384_u32
  ARCONTENT_CAMERASTORAGE = 32768_u32
  ARCONTENT_CUSTOMEVENT = 65536_u32
  ARCONTENT_NONE = 0_u32
  ARCONTENT_MASK = 131070_u32
  ARCONTENT_PHASE_UNKNOWN = 0_u32
  ARCONTENT_PHASE_PRESNIFF = 268435456_u32
  ARCONTENT_PHASE_SNIFFING = 536870912_u32
  ARCONTENT_PHASE_FINAL = 1073741824_u32
  ARCONTENT_PHASE_MASK = 1879048192_u32
  IEI_PRIORITY_MAX = 2147483647_u32
  IEI_PRIORITY_MIN = 0_u32
  IEIT_PRIORITY_NORMAL = 268435456_u32
  IEIFLAG_ASYNC = 1_u32
  IEIFLAG_CACHE = 2_u32
  IEIFLAG_ASPECT = 4_u32
  IEIFLAG_OFFLINE = 8_u32
  IEIFLAG_GLEAM = 16_u32
  IEIFLAG_SCREEN = 32_u32
  IEIFLAG_ORIGSIZE = 64_u32
  IEIFLAG_NOSTAMP = 128_u32
  IEIFLAG_NOBORDER = 256_u32
  IEIFLAG_QUALITY = 512_u32
  IEIFLAG_REFRESH = 1024_u32
  DBIM_MINSIZE = 1_u32
  DBIM_MAXSIZE = 2_u32
  DBIM_INTEGRAL = 4_u32
  DBIM_ACTUAL = 8_u32
  DBIM_TITLE = 16_u32
  DBIM_MODEFLAGS = 32_u32
  DBIM_BKCOLOR = 64_u32
  DBIMF_NORMAL = 0_u32
  DBIMF_FIXED = 1_u32
  DBIMF_FIXEDBMP = 4_u32
  DBIMF_VARIABLEHEIGHT = 8_u32
  DBIMF_UNDELETEABLE = 16_u32
  DBIMF_DEBOSSED = 32_u32
  DBIMF_BKCOLOR = 64_u32
  DBIMF_USECHEVRON = 128_u32
  DBIMF_BREAK = 256_u32
  DBIMF_ADDTOFRONT = 512_u32
  DBIMF_TOPALIGN = 1024_u32
  DBIMF_NOGRIPPER = 2048_u32
  DBIMF_ALWAYSGRIPPER = 4096_u32
  DBIMF_NOMARGINS = 8192_u32
  DBIF_VIEWMODE_NORMAL = 0_u32
  DBIF_VIEWMODE_VERTICAL = 1_u32
  DBIF_VIEWMODE_FLOATING = 2_u32
  DBIF_VIEWMODE_TRANSPARENT = 4_u32
  DBPC_SELECTFIRST = 4294967295_u32
  THBN_CLICKED = 6144_u32
  FOFX_NOSKIPJUNCTIONS = 65536_u32
  FOFX_PREFERHARDLINK = 131072_u32
  FOFX_SHOWELEVATIONPROMPT = 262144_u32
  FOFX_RECYCLEONDELETE = 524288_u32
  FOFX_EARLYFAILURE = 1048576_u32
  FOFX_PRESERVEFILEEXTENSIONS = 2097152_u32
  FOFX_KEEPNEWERFILE = 4194304_u32
  FOFX_NOCOPYHOOKS = 8388608_u32
  FOFX_NOMINIMIZEBOX = 16777216_u32
  FOFX_MOVEACLSACROSSVOLUMES = 33554432_u32
  FOFX_DONTDISPLAYSOURCEPATH = 67108864_u32
  FOFX_DONTDISPLAYDESTPATH = 134217728_u32
  FOFX_REQUIREELEVATION = 268435456_u32
  FOFX_ADDUNDORECORD = 536870912_u32
  FOFX_COPYASDOWNLOAD = 1073741824_u32
  FOFX_DONTDISPLAYLOCATIONS = 2147483648_u32
  BSIM_STATE = 1_u32
  BSIM_STYLE = 2_u32
  BSSF_VISIBLE = 1_u32
  BSSF_NOTITLE = 2_u32
  BSSF_UNDELETEABLE = 4096_u32
  BSIS_AUTOGRIPPER = 0_u32
  BSIS_NOGRIPPER = 1_u32
  BSIS_ALWAYSGRIPPER = 2_u32
  BSIS_LEFTALIGN = 4_u32
  BSIS_SINGLECLICK = 8_u32
  BSIS_NOCONTEXTMENU = 16_u32
  BSIS_NODROPTARGET = 32_u32
  BSIS_NOCAPTION = 64_u32
  BSIS_PREFERNOLINEBREAK = 128_u32
  BSIS_LOCKED = 256_u32
  BSIS_PRESERVEORDERDURINGLAYOUT = 512_u32
  BSIS_FIXEDORDER = 1024_u32
  OF_CAP_CANSWITCHTO = 1_u32
  OF_CAP_CANCLOSE = 2_u32
  SMDM_SHELLFOLDER = 1_u32
  SMDM_HMENU = 2_u32
  SMDM_TOOLBAR = 4_u32
  SMC_INITMENU = 1_u32
  SMC_CREATE = 2_u32
  SMC_EXITMENU = 3_u32
  SMC_GETINFO = 5_u32
  SMC_GETSFINFO = 6_u32
  SMC_GETOBJECT = 7_u32
  SMC_GETSFOBJECT = 8_u32
  SMC_SFEXEC = 9_u32
  SMC_SFSELECTITEM = 10_u32
  SMC_REFRESH = 16_u32
  SMC_DEMOTE = 17_u32
  SMC_PROMOTE = 18_u32
  SMC_DEFAULTICON = 22_u32
  SMC_NEWITEM = 23_u32
  SMC_CHEVRONEXPAND = 25_u32
  SMC_DISPLAYCHEVRONTIP = 42_u32
  SMC_SETSFOBJECT = 45_u32
  SMC_SHCHANGENOTIFY = 46_u32
  SMC_CHEVRONGETTIP = 47_u32
  SMC_SFDDRESTRICTED = 48_u32
  SMC_SFEXEC_MIDDLE = 49_u32
  SMC_GETAUTOEXPANDSTATE = 65_u32
  SMC_AUTOEXPANDCHANGE = 66_u32
  SMC_GETCONTEXTMENUMODIFIER = 67_u32
  SMC_GETBKCONTEXTMENU = 68_u32
  SMC_OPEN = 69_u32
  SMAE_EXPANDED = 1_u32
  SMAE_CONTRACTED = 2_u32
  SMAE_USER = 4_u32
  SMAE_VALID = 7_u32
  SMINIT_DEFAULT = 0_u32
  SMINIT_RESTRICT_DRAGDROP = 2_u32
  SMINIT_TOPLEVEL = 4_u32
  SMINIT_CACHED = 16_u32
  SMINIT_AUTOEXPAND = 256_u32
  SMINIT_AUTOTOOLTIP = 512_u32
  SMINIT_DROPONCONTAINER = 1024_u32
  SMINIT_VERTICAL = 268435456_u32
  SMINIT_HORIZONTAL = 536870912_u32
  SMSET_TOP = 268435456_u32
  SMSET_BOTTOM = 536870912_u32
  SMSET_DONTOWN = 1_u32
  SMINV_REFRESH = 1_u32
  SMINV_ID = 8_u32
  E_PREVIEWHANDLER_DRM_FAIL = -2042494975_i32
  E_PREVIEWHANDLER_NOAUTH = -2042494974_i32
  E_PREVIEWHANDLER_NOTFOUND = -2042494973_i32
  E_PREVIEWHANDLER_CORRUPT = -2042494972_i32
  STR_FILE_SYS_BIND_DATA = "File System Bind Data"
  STR_FILE_SYS_BIND_DATA_WIN7_FORMAT = "Win7FileSystemIdList"
  HOMEGROUP_SECURITY_GROUP_MULTI = "HUG"
  HOMEGROUP_SECURITY_GROUP = "HomeUsers"
  PROP_CONTRACT_DELEGATE = "ContractDelegate"
  SID_URLExecutionContext = "fb5f8ebc-bbb6-4d10-a461-777291a09030"
  STR_TAB_REUSE_IDENTIFIER = "Tab Reuse Identifier"
  STR_REFERRER_IDENTIFIER = "Referrer Identifier"
  SID_LaunchSourceViewSizePreference = "80605492-67d9-414f-af89-a1cdf1242bc1"
  SID_LaunchTargetViewSizePreference = "26db2472-b7b7-406b-9702-730a4e20d3bf"
  SID_LaunchSourceAppUserModelId = "2ce78010-74db-48bc-9c6a-10f372495723"
  SID_ShellExecuteNamedPropertyStore = "eb84ada2-00ff-4992-8324-ed5ce061cb29"
  ISIOI_ICONFILE = 1_u32
  ISIOI_ICONINDEX = 2_u32
  ABM_NEW = 0_u32
  ABM_REMOVE = 1_u32
  ABM_QUERYPOS = 2_u32
  ABM_SETPOS = 3_u32
  ABM_GETSTATE = 4_u32
  ABM_GETTASKBARPOS = 5_u32
  ABM_ACTIVATE = 6_u32
  ABM_GETAUTOHIDEBAR = 7_u32
  ABM_SETAUTOHIDEBAR = 8_u32
  ABM_WINDOWPOSCHANGED = 9_u32
  ABM_SETSTATE = 10_u32
  ABM_GETAUTOHIDEBAREX = 11_u32
  ABM_SETAUTOHIDEBAREX = 12_u32
  ABN_STATECHANGE = 0_u32
  ABN_POSCHANGED = 1_u32
  ABN_FULLSCREENAPP = 2_u32
  ABN_WINDOWARRANGE = 3_u32
  ABS_AUTOHIDE = 1_u32
  ABS_ALWAYSONTOP = 2_u32
  ABE_LEFT = 0_u32
  ABE_TOP = 1_u32
  ABE_RIGHT = 2_u32
  ABE_BOTTOM = 3_u32
  FO_MOVE = 1_u32
  FO_COPY = 2_u32
  FO_DELETE = 3_u32
  FO_RENAME = 4_u32
  FOF_MULTIDESTFILES = 1_u32
  FOF_CONFIRMMOUSE = 2_u32
  FOF_SILENT = 4_u32
  FOF_RENAMEONCOLLISION = 8_u32
  FOF_NOCONFIRMATION = 16_u32
  FOF_WANTMAPPINGHANDLE = 32_u32
  FOF_ALLOWUNDO = 64_u32
  FOF_FILESONLY = 128_u32
  FOF_SIMPLEPROGRESS = 256_u32
  FOF_NOCONFIRMMKDIR = 512_u32
  FOF_NOERRORUI = 1024_u32
  FOF_NOCOPYSECURITYATTRIBS = 2048_u32
  FOF_NORECURSION = 4096_u32
  FOF_NO_CONNECTED_ELEMENTS = 8192_u32
  FOF_WANTNUKEWARNING = 16384_u32
  FOF_NORECURSEREPARSE = 32768_u32
  PO_DELETE = 19_u32
  PO_RENAME = 20_u32
  PO_PORTCHANGE = 32_u32
  PO_REN_PORT = 52_u32
  SE_ERR_FNF = 2_u32
  SE_ERR_PNF = 3_u32
  SE_ERR_ACCESSDENIED = 5_u32
  SE_ERR_OOM = 8_u32
  SE_ERR_DLLNOTFOUND = 32_u32
  SE_ERR_SHARE = 26_u32
  SE_ERR_ASSOCINCOMPLETE = 27_u32
  SE_ERR_DDETIMEOUT = 28_u32
  SE_ERR_DDEFAIL = 29_u32
  SE_ERR_DDEBUSY = 30_u32
  SE_ERR_NOASSOC = 31_u32
  SEE_MASK_DEFAULT = 0_u32
  SEE_MASK_CLASSNAME = 1_u32
  SEE_MASK_CLASSKEY = 3_u32
  SEE_MASK_IDLIST = 4_u32
  SEE_MASK_INVOKEIDLIST = 12_u32
  SEE_MASK_ICON = 16_u32
  SEE_MASK_HOTKEY = 32_u32
  SEE_MASK_NOCLOSEPROCESS = 64_u32
  SEE_MASK_CONNECTNETDRV = 128_u32
  SEE_MASK_NOASYNC = 256_u32
  SEE_MASK_FLAG_DDEWAIT = 256_u32
  SEE_MASK_DOENVSUBST = 512_u32
  SEE_MASK_FLAG_NO_UI = 1024_u32
  SEE_MASK_UNICODE = 16384_u32
  SEE_MASK_NO_CONSOLE = 32768_u32
  SEE_MASK_ASYNCOK = 1048576_u32
  SEE_MASK_HMONITOR = 2097152_u32
  SEE_MASK_NOZONECHECKS = 8388608_u32
  SEE_MASK_NOQUERYCLASSSTORE = 16777216_u32
  SEE_MASK_WAITFORINPUTIDLE = 33554432_u32
  SEE_MASK_FLAG_LOG_USAGE = 67108864_u32
  SEE_MASK_FLAG_HINST_IS_SITE = 134217728_u32
  SHERB_NOCONFIRMATION = 1_u32
  SHERB_NOPROGRESSUI = 2_u32
  SHERB_NOSOUND = 4_u32
  NIN_SELECT = 1024_u32
  NINF_KEY = 1_u32
  NIN_BALLOONSHOW = 1026_u32
  NIN_BALLOONHIDE = 1027_u32
  NIN_BALLOONTIMEOUT = 1028_u32
  NIN_BALLOONUSERCLICK = 1029_u32
  NIN_POPUPOPEN = 1030_u32
  NIN_POPUPCLOSE = 1031_u32
  NOTIFYICON_VERSION = 3_u32
  NOTIFYICON_VERSION_4 = 4_u32
  NIS_HIDDEN = 1_u32
  NIS_SHAREDICON = 2_u32
  NIIF_NONE = 0_u32
  NIIF_INFO = 1_u32
  NIIF_WARNING = 2_u32
  NIIF_ERROR = 3_u32
  NIIF_USER = 4_u32
  NIIF_ICON_MASK = 15_u32
  NIIF_NOSOUND = 16_u32
  NIIF_LARGE_ICON = 32_u32
  NIIF_RESPECT_QUIET_TIME = 128_u32
  SHGSI_ICONLOCATION = 0_u32
  SHGNLI_PIDL = 1_u64
  SHGNLI_PREFIXNAME = 2_u64
  SHGNLI_NOUNIQUE = 4_u64
  SHGNLI_NOLNK = 8_u64
  SHGNLI_NOLOCNAME = 16_u64
  SHGNLI_USEURLEXT = 32_u64
  PRINTACTION_OPEN = 0_u32
  PRINTACTION_PROPERTIES = 1_u32
  PRINTACTION_NETINSTALL = 2_u32
  PRINTACTION_NETINSTALLLINK = 3_u32
  PRINTACTION_TESTPAGE = 4_u32
  PRINTACTION_OPENNETPRN = 5_u32
  PRINTACTION_DOCUMENTDEFAULTS = 6_u32
  PRINTACTION_SERVERPROPERTIES = 7_u32
  PRINT_PROP_FORCE_NAME = 1_u32
  OFFLINE_STATUS_LOCAL = 1_u32
  OFFLINE_STATUS_REMOTE = 2_u32
  OFFLINE_STATUS_INCOMPLETE = 4_u32
  SHIL_LARGE = 0_u32
  SHIL_SMALL = 1_u32
  SHIL_EXTRALARGE = 2_u32
  SHIL_SYSSMALL = 3_u32
  SHIL_JUMBO = 4_u32
  SHIL_LAST = 4_u32
  WC_NETADDRESS = "msctls_netaddress"
  NCM_GETADDRESS = 1025_u32
  NCM_SETALLOWTYPE = 1026_u32
  NCM_GETALLOWTYPE = 1027_u32
  NCM_DISPLAYERRORTIP = 1028_u32
  CREDENTIAL_PROVIDER_NO_DEFAULT = 4294967295_u32
  Identity_LocalUserProvider = "a198529b-730f-4089-b646-a12557f5665e"
  MAX_SYNCMGR_ID = 64_u32
  MAX_SYNCMGR_PROGRESSTEXT = 260_u32
  MAX_SYNCMGR_NAME = 128_u32
  STIF_DEFAULT = 0_i32
  STIF_SUPPORT_HEX = 1_i32
  SZ_CONTENTTYPE_HTMLA = "text/html"
  SZ_CONTENTTYPE_HTMLW = "text/html"
  SZ_CONTENTTYPE_CDFA = "application/x-cdf"
  SZ_CONTENTTYPE_CDFW = "application/x-cdf"
  SZ_CONTENTTYPE_HTML = "text/html"
  SZ_CONTENTTYPE_CDF = "application/x-cdf"
  GCT_INVALID = 0_u32
  GCT_LFNCHAR = 1_u32
  GCT_SHORTCHAR = 2_u32
  GCT_WILD = 4_u32
  GCT_SEPARATOR = 8_u32
  PMSF_NORMAL = 0_u32
  PMSF_MULTIPLE = 1_u32
  PMSF_DONT_STRIP_SPACES = 65536_u32
  URL_UNESCAPE = 268435456_u32
  URL_ESCAPE_UNSAFE = 536870912_u32
  URL_PLUGGABLE_PROTOCOL = 1073741824_u32
  URL_WININET_COMPATIBILITY = 2147483648_u32
  URL_DONT_ESCAPE_EXTRA_INFO = 33554432_u32
  URL_DONT_UNESCAPE_EXTRA_INFO = 33554432_u32
  URL_BROWSER_MODE = 33554432_u32
  URL_ESCAPE_SPACES_ONLY = 67108864_u32
  URL_DONT_SIMPLIFY = 134217728_u32
  URL_NO_META = 134217728_u32
  URL_UNESCAPE_INPLACE = 1048576_u32
  URL_CONVERT_IF_DOSPATH = 2097152_u32
  URL_UNESCAPE_HIGH_ANSI_ONLY = 4194304_u32
  URL_INTERNAL_PATH = 8388608_u32
  URL_FILE_USE_PATHURL = 65536_u32
  URL_DONT_UNESCAPE = 131072_u32
  URL_ESCAPE_AS_UTF8 = 262144_u32
  URL_UNESCAPE_AS_UTF8 = 262144_u32
  URL_ESCAPE_ASCII_URI_COMPONENT = 524288_u32
  URL_UNESCAPE_URI_COMPONENT = 262144_u32
  URL_ESCAPE_PERCENT = 4096_u32
  URL_ESCAPE_SEGMENT_ONLY = 8192_u32
  URL_PARTFLAG_KEEPSCHEME = 1_u32
  URL_APPLY_DEFAULT = 1_u32
  URL_APPLY_GUESSSCHEME = 2_u32
  URL_APPLY_GUESSFILE = 4_u32
  URL_APPLY_FORCEAPPLY = 8_u32
  SRRF_RT_REG_NONE = 1_u32
  SRRF_RT_REG_SZ = 2_u32
  SRRF_RT_REG_EXPAND_SZ = 4_u32
  SRRF_RT_REG_BINARY = 8_u32
  SRRF_RT_REG_DWORD = 16_u32
  SRRF_RT_REG_MULTI_SZ = 32_u32
  SRRF_RT_REG_QWORD = 64_u32
  SRRF_RT_ANY = 65535_u32
  SRRF_RM_ANY = 0_u32
  SRRF_RM_NORMAL = 65536_u32
  SRRF_RM_SAFE = 131072_u32
  SRRF_RM_SAFENETWORK = 262144_u32
  SRRF_NOEXPAND = 268435456_u32
  SRRF_ZEROONFAILURE = 536870912_u32
  SRRF_NOVIRT = 1073741824_u32
  SHREGSET_HKCU = 1_u32
  SHREGSET_FORCE_HKCU = 2_u32
  SHREGSET_HKLM = 4_u32
  SHREGSET_FORCE_HKLM = 8_u32
  SPMODE_SHELL = 1_u32
  SPMODE_DEBUGOUT = 2_u32
  SPMODE_TEST = 4_u32
  SPMODE_BROWSER = 8_u32
  SPMODE_FLUSH = 16_u32
  SPMODE_EVENT = 32_u32
  SPMODE_MSVM = 64_u32
  SPMODE_FORMATTEXT = 128_u32
  SPMODE_PROFILE = 256_u32
  SPMODE_DEBUGBREAK = 512_u32
  SPMODE_MSGTRACE = 1024_u32
  SPMODE_PERFTAGS = 2048_u32
  SPMODE_MEMWATCH = 4096_u32
  SPMODE_DBMON = 8192_u32
  SPMODE_MULTISTOP = 16384_u32
  SPMODE_EVENTTRACE = 32768_u32
  SHGVSPB_PERUSER = 1_u32
  SHGVSPB_ALLUSERS = 2_u32
  SHGVSPB_PERFOLDER = 4_u32
  SHGVSPB_ALLFOLDERS = 8_u32
  SHGVSPB_INHERIT = 16_u32
  SHGVSPB_ROAM = 32_u32
  SHGVSPB_NOAUTODEFAULTS = 2147483648_u32
  FDTF_SHORTTIME = 1_u32
  FDTF_SHORTDATE = 2_u32
  FDTF_LONGDATE = 4_u32
  FDTF_LONGTIME = 8_u32
  FDTF_RELATIVE = 16_u32
  FDTF_LTRDATE = 256_u32
  FDTF_RTLDATE = 512_u32
  FDTF_NOAUTOREADINGORDER = 1024_u32
  PLATFORM_UNKNOWN = 0_u32
  PLATFORM_IE3 = 1_u32
  PLATFORM_BROWSERONLY = 1_u32
  PLATFORM_INTEGRATED = 2_u32
  ILMM_IE4 = 0_u32
  SHACF_DEFAULT = 0_u32
  SHACF_FILESYSTEM = 1_u32
  SHACF_URLHISTORY = 2_u32
  SHACF_URLMRU = 4_u32
  SHACF_USETAB = 8_u32
  SHACF_FILESYS_ONLY = 16_u32
  SHACF_FILESYS_DIRS = 32_u32
  SHACF_VIRTUAL_NAMESPACE = 64_u32
  SHACF_AUTOSUGGEST_FORCE_ON = 268435456_u32
  SHACF_AUTOSUGGEST_FORCE_OFF = 536870912_u32
  SHACF_AUTOAPPEND_FORCE_ON = 1073741824_u32
  SHACF_AUTOAPPEND_FORCE_OFF = 2147483648_u32
  DLLVER_PLATFORM_WINDOWS = 1_u32
  DLLVER_PLATFORM_NT = 2_u32
  DLLVER_MAJOR_MASK = 18446462598732840960_u64
  DLLVER_MINOR_MASK = 281470681743360_u64
  DLLVER_BUILD_MASK = 4294901760_u64
  DLLVER_QFE_MASK = 65535_u64
  WTS_E_FAILEDEXTRACTION = -2147175936_i32
  WTS_E_EXTRACTIONTIMEDOUT = -2147175935_i32
  WTS_E_SURROGATEUNAVAILABLE = -2147175934_i32
  WTS_E_FASTEXTRACTIONNOTSUPPORTED = -2147175933_i32
  WTS_E_DATAFILEUNAVAILABLE = -2147175932_i32
  WTS_E_EXTRACTIONPENDING = -2147175931_i32
  WTS_E_EXTRACTIONBLOCKED = -2147175930_i32
  WTS_E_NOSTORAGEPROVIDERTHUMBNAILHANDLER = -2147175929_i32
  SHIMGKEY_QUALITY = "Compression"
  SHIMGKEY_RAWFORMAT = "RawDataFormat"
  SHIMGDEC_DEFAULT = 0_u32
  SHIMGDEC_THUMBNAIL = 1_u32
  SHIMGDEC_LOADFULL = 2_u32
  E_NOTVALIDFORANIMATEDIMAGE = -2147221503_i32
  S_SYNCMGR_MISSINGITEMS = 262657_i32
  S_SYNCMGR_RETRYSYNC = 262658_i32
  S_SYNCMGR_CANCELITEM = 262659_i32
  S_SYNCMGR_CANCELALL = 262660_i32
  S_SYNCMGR_ITEMDELETED = 262672_i32
  S_SYNCMGR_ENUMITEMS = 262673_i32
  SYNCMGRPROGRESSITEM_STATUSTEXT = 1_u32
  SYNCMGRPROGRESSITEM_STATUSTYPE = 2_u32
  SYNCMGRPROGRESSITEM_PROGVALUE = 4_u32
  SYNCMGRPROGRESSITEM_MAXVALUE = 8_u32
  SYNCMGRLOGERROR_ERRORFLAGS = 1_u32
  SYNCMGRLOGERROR_ERRORID = 2_u32
  SYNCMGRLOGERROR_ITEMID = 4_u32
  SYNCMGRITEM_ITEMFLAGMASK = 127_u32
  MAX_SYNCMGRITEMNAME = 128_u32
  SYNCMGRHANDLERFLAG_MASK = 15_u32
  MAX_SYNCMGRHANDLERNAME = 32_u32
  SYNCMGRREGISTERFLAGS_MASK = 7_u32
  TLOG_BACK = -1_i32
  TLOG_CURRENT = 0_u32
  TLOG_FORE = 1_u32
  TLMENUF_INCLUDECURRENT = 1_u32
  TLMENUF_BACK = 16_u32
  TLMENUF_FORE = 32_u32
  BSF_REGISTERASDROPTARGET = 1_u32
  BSF_THEATERMODE = 2_u32
  BSF_NOLOCALFILEWARNING = 16_u32
  BSF_UISETBYAUTOMATION = 256_u32
  BSF_RESIZABLE = 512_u32
  BSF_CANMAXIMIZE = 1024_u32
  BSF_TOPBROWSER = 2048_u32
  BSF_NAVNOHISTORY = 4096_u32
  BSF_HTMLNAVCANCELED = 8192_u32
  BSF_DONTSHOWNAVCANCELPAGE = 16384_u32
  BSF_SETNAVIGATABLECODEPAGE = 32768_u32
  BSF_DELEGATEDNAVIGATION = 65536_u32
  BSF_TRUSTEDFORACTIVEX = 131072_u32
  BSF_MERGEDMENUS = 262144_u32
  BSF_FEEDNAVIGATION = 524288_u32
  BSF_FEEDSUBSCRIBED = 1048576_u32
  HLNF_CALLERUNTRUSTED = 2097152_u32
  HLNF_TRUSTEDFORACTIVEX = 4194304_u32
  HLNF_DISABLEWINDOWRESTRICTIONS = 8388608_u32
  HLNF_TRUSTFIRSTDOWNLOAD = 16777216_u32
  HLNF_UNTRUSTEDFORDOWNLOAD = 33554432_u32
  SHHLNF_NOAUTOSELECT = 67108864_u32
  SHHLNF_WRITENOHISTORY = 134217728_u32
  HLNF_EXTERNALNAVIGATE = 268435456_u32
  HLNF_ALLOW_AUTONAVIGATE = 536870912_u32
  HLNF_NEWWINDOWSMANAGED = 2147483648_u32
  INTERNET_MAX_PATH_LENGTH = 2048_u32
  INTERNET_MAX_SCHEME_LENGTH = 32_u32
  VIEW_PRIORITY_RESTRICTED = 112_u32
  VIEW_PRIORITY_CACHEHIT = 80_u32
  VIEW_PRIORITY_STALECACHEHIT = 69_u32
  VIEW_PRIORITY_USEASDEFAULT = 67_u32
  VIEW_PRIORITY_SHELLEXT = 64_u32
  VIEW_PRIORITY_CACHEMISS = 48_u32
  VIEW_PRIORITY_INHERIT = 32_u32
  VIEW_PRIORITY_SHELLEXT_ASBACKUP = 21_u32
  VIEW_PRIORITY_DESPERATE = 16_u32
  VIEW_PRIORITY_NONE = 0_u32
  VOLUME_PREFIX = "\\\\?\\Volume"
  PATHCCH_MAX_CCH = 32768_u32
  IDS_DESCRIPTION = 1_u32
  ID_APP = 100_u32
  DLG_SCRNSAVECONFIGURE = 2003_u32
  Idsispassword = 1000_u32
  Idsinifile = 1001_u32
  Idsscreensaver = 1002_u32
  Idspassword = 1003_u32
  Idsdifferentpw = 1004_u32
  Idschangepw = 1005_u32
  Idsbadoldpw = 1006_u32
  Idsappname = 1007_u32
  Idsnohelpmemory = 1008_u32
  Idshelpfile = 1009_u32
  Idsdefkeyword = 1010_u32
  MAXFILELEN = 13_u32
  TITLEBARNAMELEN = 40_u32
  APPNAMEBUFFERLEN = 40_u32
  BUFFLEN = 255_u32
  SCRM_VERIFYPW = 32768_u32
  E_FLAGS = -2147217408_i32
  IS_E_EXEC_FAILED = -2147213310_i32
  URL_E_INVALID_SYNTAX = -2147217407_i32
  URL_E_UNREGISTERED_PROTOCOL = -2147217406_i32
  CPLPAGE_MOUSE_BUTTONS = 1_u32
  CPLPAGE_MOUSE_PTRMOTION = 2_u32
  CPLPAGE_MOUSE_WHEEL = 3_u32
  CPLPAGE_KEYBOARD_SPEED = 1_u32
  CPLPAGE_DISPLAY_BACKGROUND = 1_u32
  DISPID_SELECTIONCHANGED = 200_u32
  DISPID_FILELISTENUMDONE = 201_u32
  DISPID_VERBINVOKED = 202_u32
  DISPID_DEFAULTVERBINVOKED = 203_u32
  DISPID_BEGINDRAG = 204_u32
  DISPID_VIEWMODECHANGED = 205_u32
  DISPID_NOITEMSTATE_CHANGED = 206_u32
  DISPID_CONTENTSCHANGED = 207_u32
  DISPID_FOCUSCHANGED = 208_u32
  DISPID_CHECKSTATECHANGED = 209_u32
  DISPID_ORDERCHANGED = 210_u32
  DISPID_VIEWPAINTDONE = 211_u32
  DISPID_COLUMNSCHANGED = 212_u32
  DISPID_CTRLMOUSEWHEEL = 213_u32
  DISPID_SORTDONE = 214_u32
  DISPID_ICONSIZECHANGED = 215_u32
  DISPID_FOLDERCHANGED = 217_u32
  DISPID_FILTERINVOKED = 218_u32
  DISPID_WORDWHEELEDITED = 219_u32
  DISPID_SELECTEDITEMCHANGED = 220_u32
  DISPID_EXPLORERWINDOWREADY = 221_u32
  DISPID_UPDATEIMAGE = 222_u32
  DISPID_INITIALENUMERATIONDONE = 223_u32
  DISPID_ENTERPRISEIDCHANGED = 224_u32
  DISPID_ENTERPRESSED = 200_u32
  DISPID_SEARCHCOMMAND_START = 1_u32
  DISPID_SEARCHCOMMAND_COMPLETE = 2_u32
  DISPID_SEARCHCOMMAND_ABORT = 3_u32
  DISPID_SEARCHCOMMAND_UPDATE = 4_u32
  DISPID_SEARCHCOMMAND_PROGRESSTEXT = 5_u32
  DISPID_SEARCHCOMMAND_ERROR = 6_u32
  DISPID_SEARCHCOMMAND_RESTORE = 7_u32
  DISPID_IADCCTL_DIRTY = 256_u32
  DISPID_IADCCTL_PUBCAT = 257_u32
  DISPID_IADCCTL_SORT = 258_u32
  DISPID_IADCCTL_FORCEX86 = 259_u32
  DISPID_IADCCTL_SHOWPOSTSETUP = 260_u32
  DISPID_IADCCTL_ONDOMAIN = 261_u32
  DISPID_IADCCTL_DEFAULTCAT = 262_u32
  COPYENGINE_S_YES = 2555905_i32
  COPYENGINE_S_NOT_HANDLED = 2555907_i32
  COPYENGINE_S_USER_RETRY = 2555908_i32
  COPYENGINE_S_USER_IGNORED = 2555909_i32
  COPYENGINE_S_MERGE = 2555910_i32
  COPYENGINE_S_DONT_PROCESS_CHILDREN = 2555912_i32
  COPYENGINE_S_ALREADY_DONE = 2555914_i32
  COPYENGINE_S_PENDING = 2555915_i32
  COPYENGINE_S_KEEP_BOTH = 2555916_i32
  COPYENGINE_S_CLOSE_PROGRAM = 2555917_i32
  COPYENGINE_S_COLLISIONRESOLVED = 2555918_i32
  COPYENGINE_S_PROGRESS_PAUSE = 2555919_i32
  COPYENGINE_E_USER_CANCELLED = -2144927744_i32
  COPYENGINE_E_CANCELLED = -2144927743_i32
  COPYENGINE_E_REQUIRES_ELEVATION = -2144927742_i32
  COPYENGINE_E_SAME_FILE = -2144927741_i32
  COPYENGINE_E_DIFF_DIR = -2144927740_i32
  COPYENGINE_E_MANY_SRC_1_DEST = -2144927739_i32
  COPYENGINE_E_DEST_SUBTREE = -2144927735_i32
  COPYENGINE_E_DEST_SAME_TREE = -2144927734_i32
  COPYENGINE_E_FLD_IS_FILE_DEST = -2144927733_i32
  COPYENGINE_E_FILE_IS_FLD_DEST = -2144927732_i32
  COPYENGINE_E_FILE_TOO_LARGE = -2144927731_i32
  COPYENGINE_E_REMOVABLE_FULL = -2144927730_i32
  COPYENGINE_E_DEST_IS_RO_CD = -2144927729_i32
  COPYENGINE_E_DEST_IS_RW_CD = -2144927728_i32
  COPYENGINE_E_DEST_IS_R_CD = -2144927727_i32
  COPYENGINE_E_DEST_IS_RO_DVD = -2144927726_i32
  COPYENGINE_E_DEST_IS_RW_DVD = -2144927725_i32
  COPYENGINE_E_DEST_IS_R_DVD = -2144927724_i32
  COPYENGINE_E_SRC_IS_RO_CD = -2144927723_i32
  COPYENGINE_E_SRC_IS_RW_CD = -2144927722_i32
  COPYENGINE_E_SRC_IS_R_CD = -2144927721_i32
  COPYENGINE_E_SRC_IS_RO_DVD = -2144927720_i32
  COPYENGINE_E_SRC_IS_RW_DVD = -2144927719_i32
  COPYENGINE_E_SRC_IS_R_DVD = -2144927718_i32
  COPYENGINE_E_INVALID_FILES_SRC = -2144927717_i32
  COPYENGINE_E_INVALID_FILES_DEST = -2144927716_i32
  COPYENGINE_E_PATH_TOO_DEEP_SRC = -2144927715_i32
  COPYENGINE_E_PATH_TOO_DEEP_DEST = -2144927714_i32
  COPYENGINE_E_ROOT_DIR_SRC = -2144927713_i32
  COPYENGINE_E_ROOT_DIR_DEST = -2144927712_i32
  COPYENGINE_E_ACCESS_DENIED_SRC = -2144927711_i32
  COPYENGINE_E_ACCESS_DENIED_DEST = -2144927710_i32
  COPYENGINE_E_PATH_NOT_FOUND_SRC = -2144927709_i32
  COPYENGINE_E_PATH_NOT_FOUND_DEST = -2144927708_i32
  COPYENGINE_E_NET_DISCONNECT_SRC = -2144927707_i32
  COPYENGINE_E_NET_DISCONNECT_DEST = -2144927706_i32
  COPYENGINE_E_SHARING_VIOLATION_SRC = -2144927705_i32
  COPYENGINE_E_SHARING_VIOLATION_DEST = -2144927704_i32
  COPYENGINE_E_ALREADY_EXISTS_NORMAL = -2144927703_i32
  COPYENGINE_E_ALREADY_EXISTS_READONLY = -2144927702_i32
  COPYENGINE_E_ALREADY_EXISTS_SYSTEM = -2144927701_i32
  COPYENGINE_E_ALREADY_EXISTS_FOLDER = -2144927700_i32
  COPYENGINE_E_STREAM_LOSS = -2144927699_i32
  COPYENGINE_E_EA_LOSS = -2144927698_i32
  COPYENGINE_E_PROPERTY_LOSS = -2144927697_i32
  COPYENGINE_E_PROPERTIES_LOSS = -2144927696_i32
  COPYENGINE_E_ENCRYPTION_LOSS = -2144927695_i32
  COPYENGINE_E_DISK_FULL = -2144927694_i32
  COPYENGINE_E_DISK_FULL_CLEAN = -2144927693_i32
  COPYENGINE_E_EA_NOT_SUPPORTED = -2144927692_i32
  COPYENGINE_E_CANT_REACH_SOURCE = -2144927691_i32
  COPYENGINE_E_RECYCLE_UNKNOWN_ERROR = -2144927691_i32
  COPYENGINE_E_RECYCLE_FORCE_NUKE = -2144927690_i32
  COPYENGINE_E_RECYCLE_SIZE_TOO_BIG = -2144927689_i32
  COPYENGINE_E_RECYCLE_PATH_TOO_LONG = -2144927688_i32
  COPYENGINE_E_RECYCLE_BIN_NOT_FOUND = -2144927686_i32
  COPYENGINE_E_NEWFILE_NAME_TOO_LONG = -2144927685_i32
  COPYENGINE_E_NEWFOLDER_NAME_TOO_LONG = -2144927684_i32
  COPYENGINE_E_DIR_NOT_EMPTY = -2144927683_i32
  COPYENGINE_E_FAT_MAX_IN_ROOT = -2144927682_i32
  COPYENGINE_E_ACCESSDENIED_READONLY = -2144927681_i32
  COPYENGINE_E_REDIRECTED_TO_WEBPAGE = -2144927680_i32
  COPYENGINE_E_SERVER_BAD_FILE_TYPE = -2144927679_i32
  COPYENGINE_E_INTERNET_ITEM_UNAVAILABLE = -2144927678_i32
  COPYENGINE_E_CANNOT_MOVE_FROM_RECYCLE_BIN = -2144927677_i32
  COPYENGINE_E_CANNOT_MOVE_SHARED_FOLDER = -2144927676_i32
  COPYENGINE_E_INTERNET_ITEM_STORAGE_PROVIDER_ERROR = -2144927675_i32
  COPYENGINE_E_INTERNET_ITEM_STORAGE_PROVIDER_PAUSED = -2144927674_i32
  COPYENGINE_E_REQUIRES_EDP_CONSENT = -2144927673_i32
  COPYENGINE_E_BLOCKED_BY_EDP_POLICY = -2144927672_i32
  COPYENGINE_E_REQUIRES_EDP_CONSENT_FOR_REMOVABLE_DRIVE = -2144927671_i32
  COPYENGINE_E_BLOCKED_BY_EDP_FOR_REMOVABLE_DRIVE = -2144927670_i32
  COPYENGINE_E_RMS_REQUIRES_EDP_CONSENT_FOR_REMOVABLE_DRIVE = -2144927669_i32
  COPYENGINE_E_RMS_BLOCKED_BY_EDP_FOR_REMOVABLE_DRIVE = -2144927668_i32
  COPYENGINE_E_WARNED_BY_DLP_POLICY = -2144927667_i32
  COPYENGINE_E_BLOCKED_BY_DLP_POLICY = -2144927666_i32
  COPYENGINE_E_SILENT_FAIL_BY_DLP_POLICY = -2144927665_i32
  NETCACHE_E_NEGATIVE_CACHE = -2144927488_i32
  EXECUTE_E_LAUNCH_APPLICATION = -2144927487_i32
  SHELL_E_WRONG_BITDEPTH = -2144927486_i32
  LINK_E_DELETE = -2144927485_i32
  STORE_E_NEWER_VERSION_AVAILABLE = -2144927484_i32
  E_FILE_PLACEHOLDER_NOT_INITIALIZED = -2144927472_i32
  E_FILE_PLACEHOLDER_VERSION_MISMATCH = -2144927471_i32
  E_FILE_PLACEHOLDER_SERVER_TIMED_OUT = -2144927470_i32
  E_FILE_PLACEHOLDER_STORAGEPROVIDER_NOT_FOUND = -2144927469_i32
  CAMERAROLL_E_NO_DOWNSAMPLING_REQUIRED = -2144927456_i32
  E_ACTIVATIONDENIED_USERCLOSE = -2144927440_i32
  E_ACTIVATIONDENIED_SHELLERROR = -2144927439_i32
  E_ACTIVATIONDENIED_SHELLRESTART = -2144927438_i32
  E_ACTIVATIONDENIED_UNEXPECTED = -2144927437_i32
  E_ACTIVATIONDENIED_SHELLNOTREADY = -2144927436_i32
  LIBRARY_E_NO_SAVE_LOCATION = -2144927232_i32
  LIBRARY_E_NO_ACCESSIBLE_LOCATION = -2144927231_i32
  E_USERTILE_UNSUPPORTEDFILETYPE = -2144927216_i32
  E_USERTILE_CHANGEDISABLED = -2144927215_i32
  E_USERTILE_LARGEORDYNAMIC = -2144927214_i32
  E_USERTILE_VIDEOFRAMESIZE = -2144927213_i32
  E_USERTILE_FILESIZE = -2144927212_i32
  IMM_ACC_DOCKING_E_INSUFFICIENTHEIGHT = -2144927184_i32
  IMM_ACC_DOCKING_E_DOCKOCCUPIED = -2144927183_i32
  IMSC_E_SHELL_COMPONENT_STARTUP_FAILURE = -2144927181_i32
  SHC_E_SHELL_COMPONENT_STARTUP_FAILURE = -2144927180_i32
  E_TILE_NOTIFICATIONS_PLATFORM_FAILURE = -2144927159_i32
  E_SHELL_EXTENSION_BLOCKED = -2144926975_i32
  E_IMAGEFEED_CHANGEDISABLED = -2144926960_i32
  GPFIDL_DEFAULT = 0_i32
  GPFIDL_ALTNAME = 1_i32
  GPFIDL_UNCPRINTER = 2_i32
  ISHCUTCMDID_DOWNLOADICON = 0_i32
  ISHCUTCMDID_INTSHORTCUTCREATE = 1_i32
  ISHCUTCMDID_COMMITHISTORY = 2_i32
  ISHCUTCMDID_SETUSERAWURL = 3_i32
  SFBID_PIDLCHANGED = 0_i32
  DBCID_EMPTY = 0_i32
  DBCID_ONDRAG = 1_i32
  DBCID_CLSIDOFBAR = 2_i32
  DBCID_RESIZE = 3_i32
  DBCID_GETBAR = 4_i32
  DBCID_UPDATESIZE = 5_i32
  BMICON_LARGE = 0_i32
  BMICON_SMALL = 1_i32
  ASSOCF_NONE = 0_i32
  ASSOCF_INIT_NOREMAPCLSID = 1_i32
  ASSOCF_INIT_BYEXENAME = 2_i32
  ASSOCF_OPEN_BYEXENAME = 2_i32
  ASSOCF_INIT_DEFAULTTOSTAR = 4_i32
  ASSOCF_INIT_DEFAULTTOFOLDER = 8_i32
  ASSOCF_NOUSERSETTINGS = 16_i32
  ASSOCF_NOTRUNCATE = 32_i32
  ASSOCF_VERIFY = 64_i32
  ASSOCF_REMAPRUNDLL = 128_i32
  ASSOCF_NOFIXUPS = 256_i32
  ASSOCF_IGNOREBASECLASS = 512_i32
  ASSOCF_INIT_IGNOREUNKNOWN = 1024_i32
  ASSOCF_INIT_FIXED_PROGID = 2048_i32
  ASSOCF_IS_PROTOCOL = 4096_i32
  ASSOCF_INIT_FOR_FILE = 8192_i32
  ASSOCF_IS_FULL_URI = 16384_i32
  ASSOCF_PER_MACHINE_ONLY = 32768_i32
  ASSOCF_APP_TO_APP = 65536_i32
  CTF_INSIST = 1_i32
  CTF_THREAD_REF = 2_i32
  CTF_PROCESS_REF = 4_i32
  CTF_COINIT_STA = 8_i32
  CTF_COINIT = 8_i32
  CTF_FREELIBANDEXIT = 16_i32
  CTF_REF_COUNTED = 32_i32
  CTF_WAIT_ALLOWCOM = 64_i32
  CTF_UNUSED = 128_i32
  CTF_INHERITWOW64 = 256_i32
  CTF_WAIT_NO_REENTRANCY = 512_i32
  CTF_KEYBOARD_LOCALE = 1024_i32
  CTF_OLEINITIALIZE = 2048_i32
  CTF_COINIT_MTA = 4096_i32
  CTF_NOADDREFLIB = 8192_i32

  CLSID_QueryCancelAutoPlay = LibC::GUID.new(0x331f1768_u32, 0x5a9_u16, 0x4ddd_u16, StaticArray[0xb8_u8, 0x6e_u8, 0xda_u8, 0xe3_u8, 0x4d_u8, 0xdc_u8, 0x99_u8, 0x8a_u8])

  CLSID_TimeCategorizer = LibC::GUID.new(0x3bb4118f_u32, 0xddfd_u16, 0x4d30_u16, StaticArray[0xa3_u8, 0x48_u8, 0x9f_u8, 0xb5_u8, 0xd6_u8, 0xbf_u8, 0x1a_u8, 0xfe_u8])

  CLSID_AlphabeticalCategorizer = LibC::GUID.new(0x3c2654c6_u32, 0x7372_u16, 0x4f6b_u16, StaticArray[0xb3_u8, 0x10_u8, 0x55_u8, 0xd6_u8, 0x12_u8, 0x8f_u8, 0x49_u8, 0xd2_u8])

  CLSID_MergedCategorizer = LibC::GUID.new(0x8e827c11_u32, 0x33e7_u16, 0x4bc1_u16, StaticArray[0xb2_u8, 0x42_u8, 0x8c_u8, 0xd9_u8, 0xa1_u8, 0xc2_u8, 0xb3_u8, 0x4_u8])

  CLSID_ImageProperties = LibC::GUID.new(0x7ab770c7_u32, 0xe23_u16, 0x4d7a_u16, StaticArray[0x8a_u8, 0xa2_u8, 0x19_u8, 0xbf_u8, 0xad_u8, 0x47_u8, 0x98_u8, 0x29_u8])

  CLSID_CDBurn = LibC::GUID.new(0xfbeb8a05_u32, 0xbeee_u16, 0x4442_u16, StaticArray[0x80_u8, 0x4e_u8, 0x40_u8, 0x9d_u8, 0x6c_u8, 0x45_u8, 0x15_u8, 0xe9_u8])

  CLSID_StartMenuPin = LibC::GUID.new(0xa2a9545d_u32, 0xa0c2_u16, 0x42b4_u16, StaticArray[0x97_u8, 0x8_u8, 0xa0_u8, 0xb2_u8, 0xba_u8, 0xdd_u8, 0x77_u8, 0xc8_u8])

  CLSID_WebWizardHost = LibC::GUID.new(0xc827f149_u32, 0x55c1_u16, 0x4d28_u16, StaticArray[0x93_u8, 0x5e_u8, 0x57_u8, 0xe4_u8, 0x7c_u8, 0xae_u8, 0xd9_u8, 0x73_u8])

  CLSID_PublishDropTarget = LibC::GUID.new(0xcc6eeffb_u32, 0x43f6_u16, 0x46c5_u16, StaticArray[0x96_u8, 0x19_u8, 0x51_u8, 0xd5_u8, 0x71_u8, 0x96_u8, 0x7f_u8, 0x7d_u8])

  CLSID_PublishingWizard = LibC::GUID.new(0x6b33163c_u32, 0x76a5_u16, 0x4b6c_u16, StaticArray[0xbf_u8, 0x21_u8, 0x45_u8, 0xde_u8, 0x9c_u8, 0xd5_u8, 0x3_u8, 0xa1_u8])

  CLSID_InternetPrintOrdering = LibC::GUID.new(0xadd36aa8_u32, 0x751a_u16, 0x4579_u16, StaticArray[0xa2_u8, 0x66_u8, 0xd6_u8, 0x6f_u8, 0x52_u8, 0x2_u8, 0xcc_u8, 0xbb_u8])

  CLSID_FolderViewHost = LibC::GUID.new(0x20b1cb23_u32, 0x6968_u16, 0x4eb9_u16, StaticArray[0xb7_u8, 0xd4_u8, 0xa6_u8, 0x6d_u8, 0x0_u8, 0xd0_u8, 0x7c_u8, 0xee_u8])

  CLSID_ExplorerBrowser = LibC::GUID.new(0x71f96385_u32, 0xddd6_u16, 0x48d3_u16, StaticArray[0xa0_u8, 0xc1_u8, 0xae_u8, 0x6_u8, 0xe8_u8, 0xb0_u8, 0x55_u8, 0xfb_u8])

  CLSID_ImageRecompress = LibC::GUID.new(0x6e33091c_u32, 0xd2f8_u16, 0x4740_u16, StaticArray[0xb5_u8, 0x5e_u8, 0x2e_u8, 0x11_u8, 0xd1_u8, 0x47_u8, 0x7a_u8, 0x2c_u8])

  CLSID_TrayBandSiteService = LibC::GUID.new(0xf60ad0a0_u32, 0xe5e1_u16, 0x45cb_u16, StaticArray[0xb5_u8, 0x1a_u8, 0xe1_u8, 0x5b_u8, 0x9f_u8, 0x8b_u8, 0x29_u8, 0x34_u8])

  CLSID_TrayDeskBand = LibC::GUID.new(0xe6442437_u32, 0x6c68_u16, 0x4f52_u16, StaticArray[0x94_u8, 0xdd_u8, 0x2c_u8, 0xfe_u8, 0xd2_u8, 0x67_u8, 0xef_u8, 0xb9_u8])

  CLSID_AttachmentServices = LibC::GUID.new(0x4125dd96_u32, 0xe03a_u16, 0x4103_u16, StaticArray[0x8f_u8, 0x70_u8, 0xe0_u8, 0x59_u8, 0x7d_u8, 0x80_u8, 0x3b_u8, 0x9c_u8])

  CLSID_DocPropShellExtension = LibC::GUID.new(0x883373c3_u32, 0xbf89_u16, 0x11d1_u16, StaticArray[0xbe_u8, 0x35_u8, 0x8_u8, 0x0_u8, 0x36_u8, 0xb1_u8, 0x1a_u8, 0x3_u8])

  CLSID_FSCopyHandler = LibC::GUID.new(0xd197380a_u32, 0xa79_u16, 0x4dc8_u16, StaticArray[0xa0_u8, 0x33_u8, 0xed_u8, 0x88_u8, 0x2c_u8, 0x2f_u8, 0xa1_u8, 0x4b_u8])

  CLSID_PreviousVersions = LibC::GUID.new(0x596ab062_u32, 0xb4d2_u16, 0x4215_u16, StaticArray[0x9f_u8, 0x74_u8, 0xe9_u8, 0x10_u8, 0x9b_u8, 0xa_u8, 0x81_u8, 0x53_u8])

  CLSID_NamespaceTreeControl = LibC::GUID.new(0xae054212_u32, 0x3535_u16, 0x4430_u16, StaticArray[0x83_u8, 0xed_u8, 0xd5_u8, 0x1_u8, 0xaa_u8, 0x66_u8, 0x80_u8, 0xe6_u8])

  CLSID_IENamespaceTreeControl = LibC::GUID.new(0xace52d03_u32, 0xe5cd_u16, 0x4b20_u16, StaticArray[0x82_u8, 0xff_u8, 0xe7_u8, 0x1b_u8, 0x11_u8, 0xbe_u8, 0xae_u8, 0x1d_u8])

  CLSID_ApplicationAssociationRegistrationUI = LibC::GUID.new(0x1968106d_u32, 0xf3b5_u16, 0x44cf_u16, StaticArray[0x89_u8, 0xe_u8, 0x11_u8, 0x6f_u8, 0xcb_u8, 0x9e_u8, 0xce_u8, 0xf1_u8])

  CLSID_DesktopGadget = LibC::GUID.new(0x924ccc1b_u32, 0x6562_u16, 0x4c85_u16, StaticArray[0x86_u8, 0x57_u8, 0xd1_u8, 0x77_u8, 0x92_u8, 0x52_u8, 0x22_u8, 0xb6_u8])

  CLSID_AccessibilityDockingService = LibC::GUID.new(0x29ce1d46_u32, 0xb481_u16, 0x4aa0_u16, StaticArray[0xa0_u8, 0x8a_u8, 0xd3_u8, 0xeb_u8, 0xc8_u8, 0xac_u8, 0xa4_u8, 0x2_u8])

  CLSID_ExecuteFolder = LibC::GUID.new(0x11dbb47c_u32, 0xa525_u16, 0x400b_u16, StaticArray[0x9e_u8, 0x80_u8, 0xa5_u8, 0x46_u8, 0x15_u8, 0xa0_u8, 0x90_u8, 0xc0_u8])

  CLSID_VirtualDesktopManager = LibC::GUID.new(0xaa509086_u32, 0x5ca9_u16, 0x4c25_u16, StaticArray[0x8f_u8, 0x95_u8, 0x58_u8, 0x9d_u8, 0x3c_u8, 0x7_u8, 0xb4_u8, 0x8a_u8])

  CLSID_StorageProviderBanners = LibC::GUID.new(0x7ccdf9f4_u32, 0xe576_u16, 0x455a_u16, StaticArray[0x8b_u8, 0xc7_u8, 0xf6_u8, 0xec_u8, 0x68_u8, 0xd6_u8, 0xf0_u8, 0x63_u8])

  CLSID_DesktopWallpaper = LibC::GUID.new(0xc2cf3110_u32, 0x460e_u16, 0x4fc1_u16, StaticArray[0xb9_u8, 0xd0_u8, 0x8a_u8, 0x1c_u8, 0xc_u8, 0x9c_u8, 0xc4_u8, 0xbd_u8])

  CLSID_ShellDesktop = LibC::GUID.new(0x21400_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])

  CLSID_ShellFSFolder = LibC::GUID.new(0xf3364ba0_u32, 0x65b9_u16, 0x11ce_u16, StaticArray[0xa9_u8, 0xba_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4a_u8, 0xe8_u8, 0x37_u8])

  CLSID_NetworkPlaces = LibC::GUID.new(0x208d2c60_u32, 0x3aea_u16, 0x1069_u16, StaticArray[0xa2_u8, 0xd7_u8, 0x8_u8, 0x0_u8, 0x2b_u8, 0x30_u8, 0x30_u8, 0x9d_u8])

  CLSID_ShellLink = LibC::GUID.new(0x21401_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])

  CLSID_DriveSizeCategorizer = LibC::GUID.new(0x94357b53_u32, 0xca29_u16, 0x4b78_u16, StaticArray[0x83_u8, 0xae_u8, 0xe8_u8, 0xfe_u8, 0x74_u8, 0x9_u8, 0x13_u8, 0x4f_u8])

  CLSID_DriveTypeCategorizer = LibC::GUID.new(0xb0a8f3cf_u32, 0x4333_u16, 0x4bab_u16, StaticArray[0x88_u8, 0x73_u8, 0x1c_u8, 0xcb_u8, 0x1c_u8, 0xad_u8, 0xa4_u8, 0x8b_u8])

  CLSID_FreeSpaceCategorizer = LibC::GUID.new(0xb5607793_u32, 0x24ac_u16, 0x44c7_u16, StaticArray[0x82_u8, 0xe2_u8, 0x83_u8, 0x17_u8, 0x26_u8, 0xaa_u8, 0x6c_u8, 0xb7_u8])

  CLSID_SizeCategorizer = LibC::GUID.new(0x55d7b852_u32, 0xf6d1_u16, 0x42f2_u16, StaticArray[0xaa_u8, 0x75_u8, 0x87_u8, 0x28_u8, 0xa1_u8, 0xb2_u8, 0xd2_u8, 0x64_u8])

  CLSID_PropertiesUI = LibC::GUID.new(0xd912f8cf_u32, 0x396_u16, 0x4915_u16, StaticArray[0x88_u8, 0x4e_u8, 0xfb_u8, 0x42_u8, 0x5d_u8, 0x32_u8, 0x94_u8, 0x3b_u8])

  CLSID_UserNotification = LibC::GUID.new(0x10890e_u32, 0x8789_u16, 0x413c_u16, StaticArray[0xad_u8, 0xbc_u8, 0x48_u8, 0xf5_u8, 0xb5_u8, 0x11_u8, 0xb3_u8, 0xaf_u8])

  CLSID_TaskbarList = LibC::GUID.new(0x56fdf344_u32, 0xfd6d_u16, 0x11d0_u16, StaticArray[0x95_u8, 0x8a_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0xc9_u8, 0xa0_u8, 0x90_u8])

  CLSID_ShellItem = LibC::GUID.new(0x9ac9fbe1_u32, 0xe0a2_u16, 0x4ad6_u16, StaticArray[0xb4_u8, 0xee_u8, 0xe2_u8, 0x12_u8, 0x1_u8, 0x3e_u8, 0xa9_u8, 0x17_u8])

  CLSID_NamespaceWalker = LibC::GUID.new(0x72eb61e0_u32, 0x8672_u16, 0x4303_u16, StaticArray[0x91_u8, 0x75_u8, 0xf2_u8, 0xe4_u8, 0xc6_u8, 0x8b_u8, 0x2e_u8, 0x7c_u8])

  CLSID_FileOperation = LibC::GUID.new(0x3ad05575_u32, 0x8857_u16, 0x4850_u16, StaticArray[0x92_u8, 0x77_u8, 0x11_u8, 0xb8_u8, 0x5b_u8, 0xdb_u8, 0x8e_u8, 0x9_u8])

  CLSID_FileOpenDialog = LibC::GUID.new(0xdc1c5a9c_u32, 0xe88a_u16, 0x4dde_u16, StaticArray[0xa5_u8, 0xa1_u8, 0x60_u8, 0xf8_u8, 0x2a_u8, 0x20_u8, 0xae_u8, 0xf7_u8])

  CLSID_FileSaveDialog = LibC::GUID.new(0xc0b4e2f3_u32, 0xba21_u16, 0x4773_u16, StaticArray[0x8d_u8, 0xba_u8, 0x33_u8, 0x5e_u8, 0xc9_u8, 0x46_u8, 0xeb_u8, 0x8b_u8])

  CLSID_KnownFolderManager = LibC::GUID.new(0x4df0c730_u32, 0xdf9d_u16, 0x4ae3_u16, StaticArray[0x91_u8, 0x53_u8, 0xaa_u8, 0x6b_u8, 0x82_u8, 0xe9_u8, 0x79_u8, 0x5a_u8])

  CLSID_SharingConfigurationManager = LibC::GUID.new(0x49f371e1_u32, 0x8c5c_u16, 0x4d9c_u16, StaticArray[0x9a_u8, 0x3b_u8, 0x54_u8, 0xa6_u8, 0x82_u8, 0x7f_u8, 0x51_u8, 0x3c_u8])

  CLSID_NetworkConnections = LibC::GUID.new(0x7007acc7_u32, 0x3202_u16, 0x11d1_u16, StaticArray[0xaa_u8, 0xd2_u8, 0x0_u8, 0x80_u8, 0x5f_u8, 0xc1_u8, 0x27_u8, 0xe_u8])

  CLSID_ScheduledTasks = LibC::GUID.new(0xd6277990_u32, 0x4c6a_u16, 0x11cf_u16, StaticArray[0x8d_u8, 0x87_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x60_u8, 0xf5_u8, 0xbf_u8])

  CLSID_ApplicationAssociationRegistration = LibC::GUID.new(0x591209c7_u32, 0x767b_u16, 0x42b2_u16, StaticArray[0x9f_u8, 0xba_u8, 0x44_u8, 0xee_u8, 0x46_u8, 0x15_u8, 0xf2_u8, 0xc7_u8])

  CLSID_SearchFolderItemFactory = LibC::GUID.new(0x14010e02_u32, 0xbbbd_u16, 0x41f0_u16, StaticArray[0x88_u8, 0xe3_u8, 0xed_u8, 0xa3_u8, 0x71_u8, 0x21_u8, 0x65_u8, 0x84_u8])

  CLSID_OpenControlPanel = LibC::GUID.new(0x6622d85_u32, 0x6856_u16, 0x4460_u16, StaticArray[0x8d_u8, 0xe1_u8, 0xa8_u8, 0x19_u8, 0x21_u8, 0xb4_u8, 0x1c_u8, 0x4b_u8])

  CLSID_MailRecipient = LibC::GUID.new(0x9e56be60_u32, 0xc50f_u16, 0x11cf_u16, StaticArray[0x9a_u8, 0x2c_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x90_u8, 0xce_u8])

  CLSID_NetworkExplorerFolder = LibC::GUID.new(0xf02c1a0d_u32, 0xbe21_u16, 0x4350_u16, StaticArray[0x88_u8, 0xb0_u8, 0x73_u8, 0x67_u8, 0xfc_u8, 0x96_u8, 0xef_u8, 0x3c_u8])

  CLSID_DestinationList = LibC::GUID.new(0x77f10cf0_u32, 0x3db5_u16, 0x4966_u16, StaticArray[0xb5_u8, 0x20_u8, 0xb7_u8, 0xc5_u8, 0x4f_u8, 0xd3_u8, 0x5e_u8, 0xd6_u8])

  CLSID_ApplicationDestinations = LibC::GUID.new(0x86c14003_u32, 0x4d6b_u16, 0x4ef3_u16, StaticArray[0xa7_u8, 0xb4_u8, 0x5_u8, 0x6_u8, 0x66_u8, 0x3b_u8, 0x2e_u8, 0x68_u8])

  CLSID_ApplicationDocumentLists = LibC::GUID.new(0x86bec222_u32, 0x30f2_u16, 0x47e0_u16, StaticArray[0x9f_u8, 0x25_u8, 0x60_u8, 0xd1_u8, 0x1c_u8, 0xd7_u8, 0x5c_u8, 0x28_u8])

  CLSID_HomeGroup = LibC::GUID.new(0xde77ba04_u32, 0x3c92_u16, 0x4d11_u16, StaticArray[0xa1_u8, 0xa5_u8, 0x42_u8, 0x35_u8, 0x2a_u8, 0x53_u8, 0xe0_u8, 0xe3_u8])

  CLSID_ShellLibrary = LibC::GUID.new(0xd9b3211d_u32, 0xe57f_u16, 0x4426_u16, StaticArray[0xaa_u8, 0xef_u8, 0x30_u8, 0xa8_u8, 0x6_u8, 0xad_u8, 0xd3_u8, 0x97_u8])

  CLSID_AppStartupLink = LibC::GUID.new(0x273eb5e7_u32, 0x88b0_u16, 0x4843_u16, StaticArray[0xbf_u8, 0xef_u8, 0xe2_u8, 0xc8_u8, 0x1d_u8, 0x43_u8, 0xaa_u8, 0xe5_u8])

  CLSID_EnumerableObjectCollection = LibC::GUID.new(0x2d3468c1_u32, 0x36a7_u16, 0x43b6_u16, StaticArray[0xac_u8, 0x24_u8, 0xd3_u8, 0xf0_u8, 0x2f_u8, 0xd9_u8, 0x60_u8, 0x7a_u8])

  CLSID_FrameworkInputPane = LibC::GUID.new(0xd5120aa3_u32, 0x46ba_u16, 0x44c5_u16, StaticArray[0x82_u8, 0x2d_u8, 0xca_u8, 0x80_u8, 0x92_u8, 0xc1_u8, 0xfc_u8, 0x72_u8])

  CLSID_DefFolderMenu = LibC::GUID.new(0xc63382be_u32, 0x7933_u16, 0x48d0_u16, StaticArray[0x9a_u8, 0xc8_u8, 0x85_u8, 0xfb_u8, 0x46_u8, 0xbe_u8, 0x2f_u8, 0xdd_u8])

  CLSID_AppVisibility = LibC::GUID.new(0x7e5fe3d9_u32, 0x985f_u16, 0x4908_u16, StaticArray[0x91_u8, 0xf9_u8, 0xee_u8, 0x19_u8, 0xf9_u8, 0xfd_u8, 0x15_u8, 0x14_u8])

  CLSID_AppShellVerbHandler = LibC::GUID.new(0x4ed3a719_u32, 0xcea8_u16, 0x4bd9_u16, StaticArray[0x91_u8, 0xd_u8, 0xe2_u8, 0x52_u8, 0xf9_u8, 0x97_u8, 0xaf_u8, 0xc2_u8])

  CLSID_ExecuteUnknown = LibC::GUID.new(0xe44e9428_u32, 0xbdbc_u16, 0x4987_u16, StaticArray[0xa0_u8, 0x99_u8, 0x40_u8, 0xdc_u8, 0x8f_u8, 0xd2_u8, 0x55_u8, 0xe7_u8])

  CLSID_PackageDebugSettings = LibC::GUID.new(0xb1aec16f_u32, 0x2383_u16, 0x4852_u16, StaticArray[0xb0_u8, 0xe9_u8, 0x8f_u8, 0xb_u8, 0x1d_u8, 0xc6_u8, 0x6b_u8, 0x4d_u8])

  CLSID_SuspensionDependencyManager = LibC::GUID.new(0x6b273fc5_u32, 0x61fd_u16, 0x4918_u16, StaticArray[0x95_u8, 0xa2_u8, 0xc3_u8, 0xb5_u8, 0xe9_u8, 0xd7_u8, 0xf5_u8, 0x81_u8])

  CLSID_ApplicationActivationManager = LibC::GUID.new(0x45ba127d_u32, 0x10a8_u16, 0x46ea_u16, StaticArray[0x8a_u8, 0xb7_u8, 0x56_u8, 0xea_u8, 0x90_u8, 0x78_u8, 0x94_u8, 0x3c_u8])

  CLSID_ApplicationDesignModeSettings = LibC::GUID.new(0x958a6fb5_u32, 0xdcb2_u16, 0x4faf_u16, StaticArray[0xaa_u8, 0xfd_u8, 0x7f_u8, 0xb0_u8, 0x54_u8, 0xad_u8, 0x1a_u8, 0x3b_u8])

  CLSID_WebBrowser_V1 = LibC::GUID.new(0xeab22ac3_u32, 0x30c1_u16, 0x11cf_u16, StaticArray[0xa7_u8, 0xeb_u8, 0x0_u8, 0x0_u8, 0xc0_u8, 0x5b_u8, 0xae_u8, 0xb_u8])

  CLSID_WebBrowser = LibC::GUID.new(0x8856f961_u32, 0x340a_u16, 0x11d0_u16, StaticArray[0xa9_u8, 0x6b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0x5_u8, 0xa2_u8])

  CLSID_InternetExplorer = LibC::GUID.new(0x2df01_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])

  CLSID_InternetExplorerMedium = LibC::GUID.new(0xd5e8041d_u32, 0x920f_u16, 0x45e9_u16, StaticArray[0xb8_u8, 0xfb_u8, 0xb1_u8, 0xde_u8, 0xb8_u8, 0x2c_u8, 0x6e_u8, 0x5e_u8])

  CLSID_ShellBrowserWindow = LibC::GUID.new(0xc08afd90_u32, 0xf2a1_u16, 0x11d1_u16, StaticArray[0x84_u8, 0x55_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x1f_u8, 0x38_u8, 0x80_u8])

  CLSID_ShellWindows = LibC::GUID.new(0x9ba05972_u32, 0xf6a8_u16, 0x11cf_u16, StaticArray[0xa4_u8, 0x42_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x8f_u8, 0x39_u8])

  CLSID_ShellUIHelper = LibC::GUID.new(0x64ab4bb7_u32, 0x111e_u16, 0x11d1_u16, StaticArray[0x8f_u8, 0x79_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc2_u8, 0xfb_u8, 0xe1_u8])

  CLSID_ShellNameSpace = LibC::GUID.new(0x55136805_u32, 0xb2de_u16, 0x11d1_u16, StaticArray[0xb9_u8, 0xf2_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x8b_u8, 0xc5_u8, 0x47_u8])

  CLSID_CScriptErrorList = LibC::GUID.new(0xefd01300_u32, 0x160f_u16, 0x11d2_u16, StaticArray[0xbb_u8, 0x2e_u8, 0x0_u8, 0x80_u8, 0x5f_u8, 0xf7_u8, 0xef_u8, 0xca_u8])

  CLSID_ShellFolderViewOC = LibC::GUID.new(0x9ba05971_u32, 0xf6a8_u16, 0x11cf_u16, StaticArray[0xa4_u8, 0x42_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x8f_u8, 0x39_u8])

  CLSID_ShellFolderItem = LibC::GUID.new(0x2fe352ea_u32, 0xfd1f_u16, 0x11d2_u16, StaticArray[0xb1_u8, 0xf4_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x8e_u8, 0xeb_u8, 0x3e_u8])

  CLSID_ShellLinkObject = LibC::GUID.new(0x11219420_u32, 0x1768_u16, 0x11d1_u16, StaticArray[0x95_u8, 0xbe_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0x97_u8, 0xea_u8, 0x4f_u8])

  CLSID_ShellFolderView = LibC::GUID.new(0x62112aa1_u32, 0xebe4_u16, 0x11cf_u16, StaticArray[0xa5_u8, 0xfb_u8, 0x0_u8, 0x20_u8, 0xaf_u8, 0xe7_u8, 0x29_u8, 0x2d_u8])

  CLSID_Shell = LibC::GUID.new(0x13709620_u32, 0xc279_u16, 0x11ce_u16, StaticArray[0xa4_u8, 0x9e_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])

  CLSID_ShellDispatchInproc = LibC::GUID.new(0xa89a860_u32, 0xd7b1_u16, 0x11ce_u16, StaticArray[0x83_u8, 0x50_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])

  CLSID_FileSearchBand = LibC::GUID.new(0xc4ee31f3_u32, 0x4768_u16, 0x11d2_u16, StaticArray[0xbe_u8, 0x5c_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa8_u8, 0x3d_u8, 0xa1_u8])

  CLSID_PasswordCredentialProvider = LibC::GUID.new(0x60b78e88_u32, 0xead8_u16, 0x445c_u16, StaticArray[0x9c_u8, 0xfd_u8, 0xb_u8, 0x87_u8, 0xf7_u8, 0x4e_u8, 0xa6_u8, 0xcd_u8])

  CLSID_V1PasswordCredentialProvider = LibC::GUID.new(0x6f45dc1e_u32, 0x5384_u16, 0x457a_u16, StaticArray[0xbc_u8, 0x13_u8, 0x2c_u8, 0xd8_u8, 0x1b_u8, 0xd_u8, 0x28_u8, 0xed_u8])

  CLSID_PINLogonCredentialProvider = LibC::GUID.new(0xcb82ea12_u32, 0x9f71_u16, 0x446d_u16, StaticArray[0x89_u8, 0xe1_u8, 0x8d_u8, 0x9_u8, 0x24_u8, 0xe1_u8, 0x25_u8, 0x6e_u8])

  CLSID_NPCredentialProvider = LibC::GUID.new(0x3dd6bec0_u32, 0x8193_u16, 0x4ffe_u16, StaticArray[0xae_u8, 0x25_u8, 0xe0_u8, 0x8e_u8, 0x39_u8, 0xea_u8, 0x40_u8, 0x63_u8])

  CLSID_SmartcardCredentialProvider = LibC::GUID.new(0x8fd7e19c_u32, 0x3bf7_u16, 0x489b_u16, StaticArray[0xa7_u8, 0x2c_u8, 0x84_u8, 0x6a_u8, 0xb3_u8, 0x67_u8, 0x8c_u8, 0x96_u8])

  CLSID_V1SmartcardCredentialProvider = LibC::GUID.new(0x8bf9a910_u32, 0xa8ff_u16, 0x457f_u16, StaticArray[0x99_u8, 0x9f_u8, 0xa5_u8, 0xca_u8, 0x10_u8, 0xb4_u8, 0xa8_u8, 0x85_u8])

  CLSID_SmartcardPinProvider = LibC::GUID.new(0x94596c7e_u32, 0x3744_u16, 0x41ce_u16, StaticArray[0x89_u8, 0x3e_u8, 0xbb_u8, 0xf0_u8, 0x91_u8, 0x22_u8, 0xf7_u8, 0x6a_u8])

  CLSID_SmartcardReaderSelectionProvider = LibC::GUID.new(0x1b283861_u32, 0x754f_u16, 0x4022_u16, StaticArray[0xad_u8, 0x47_u8, 0xa5_u8, 0xea_u8, 0xaa_u8, 0x61_u8, 0x88_u8, 0x94_u8])

  CLSID_SmartcardWinRTProvider = LibC::GUID.new(0x1ee7337f_u32, 0x85ac_u16, 0x45e2_u16, StaticArray[0xa2_u8, 0x3c_u8, 0x37_u8, 0xc7_u8, 0x53_u8, 0x20_u8, 0x97_u8, 0x69_u8])

  CLSID_GenericCredentialProvider = LibC::GUID.new(0x25cbb996_u32, 0x92ed_u16, 0x457e_u16, StaticArray[0xb2_u8, 0x8c_u8, 0x47_u8, 0x74_u8, 0x8_u8, 0x4b_u8, 0xd5_u8, 0x62_u8])

  CLSID_RASProvider = LibC::GUID.new(0x5537e283_u32, 0xb1e7_u16, 0x4ef8_u16, StaticArray[0x9c_u8, 0x6e_u8, 0x7a_u8, 0xb0_u8, 0xaf_u8, 0xe5_u8, 0x5_u8, 0x6d_u8])

  CLSID_OnexCredentialProvider = LibC::GUID.new(0x7aa0886_u32, 0xcc8d_u16, 0x4e19_u16, StaticArray[0xa4_u8, 0x10_u8, 0x1c_u8, 0x75_u8, 0xaf_u8, 0x68_u8, 0x6e_u8, 0x62_u8])

  CLSID_OnexPlapSmartcardCredentialProvider = LibC::GUID.new(0x33c86cd6_u32, 0x705f_u16, 0x4ba1_u16, StaticArray[0x9a_u8, 0xdb_u8, 0x67_u8, 0x7_u8, 0xb_u8, 0x83_u8, 0x77_u8, 0x75_u8])

  CLSID_VaultProvider = LibC::GUID.new(0x503739d0_u32, 0x4c5e_u16, 0x4cfd_u16, StaticArray[0xb3_u8, 0xba_u8, 0xd8_u8, 0x81_u8, 0x33_u8, 0x4f_u8, 0xd_u8, 0xf2_u8])

  CLSID_WinBioCredentialProvider = LibC::GUID.new(0xbec09223_u32, 0xb018_u16, 0x416d_u16, StaticArray[0xa0_u8, 0xac_u8, 0x52_u8, 0x39_u8, 0x71_u8, 0xb6_u8, 0x39_u8, 0xf5_u8])

  CLSID_V1WinBioCredentialProvider = LibC::GUID.new(0xac3ac249_u32, 0xe820_u16, 0x4343_u16, StaticArray[0xa6_u8, 0x5b_u8, 0x37_u8, 0x7a_u8, 0xc6_u8, 0x34_u8, 0xdc_u8, 0x9_u8])

  CLSID_SyncMgrClient = LibC::GUID.new(0x1202db60_u32, 0x1dac_u16, 0x42c5_u16, StaticArray[0xae_u8, 0xd5_u8, 0x1a_u8, 0xbd_u8, 0xd4_u8, 0x32_u8, 0x24_u8, 0x8e_u8])

  CLSID_SyncMgrControl = LibC::GUID.new(0x1a1f4206_u32, 0x688_u16, 0x4e7f_u16, StaticArray[0xbe_u8, 0x3_u8, 0xd8_u8, 0x2e_u8, 0xc6_u8, 0x9d_u8, 0xf9_u8, 0xa5_u8])

  CLSID_SyncMgrScheduleWizard = LibC::GUID.new(0x8d8b8e30_u32, 0xc451_u16, 0x421b_u16, StaticArray[0x85_u8, 0x53_u8, 0xd2_u8, 0x97_u8, 0x6a_u8, 0xfa_u8, 0x64_u8, 0x8c_u8])

  CLSID_SyncMgrFolder = LibC::GUID.new(0x9c73f5e5_u32, 0x7ae7_u16, 0x4e32_u16, StaticArray[0xa8_u8, 0xe8_u8, 0x8d_u8, 0x23_u8, 0xb8_u8, 0x52_u8, 0x55_u8, 0xbf_u8])

  CLSID_SyncSetupFolder = LibC::GUID.new(0x2e9e59c0_u32, 0xb437_u16, 0x4981_u16, StaticArray[0xa6_u8, 0x47_u8, 0x9c_u8, 0x34_u8, 0xb9_u8, 0xb9_u8, 0x8_u8, 0x91_u8])

  CLSID_ConflictFolder = LibC::GUID.new(0x289978ac_u32, 0xa101_u16, 0x4341_u16, StaticArray[0xa8_u8, 0x17_u8, 0x21_u8, 0xeb_u8, 0xa7_u8, 0xfd_u8, 0x4_u8, 0x6d_u8])

  CLSID_SyncResultsFolder = LibC::GUID.new(0x71d99464_u32, 0x3b6b_u16, 0x475c_u16, StaticArray[0xb2_u8, 0x41_u8, 0xe1_u8, 0x58_u8, 0x83_u8, 0x20_u8, 0x75_u8, 0x29_u8])

  CLSID_SimpleConflictPresenter = LibC::GUID.new(0x7a0f6ab7_u32, 0xed84_u16, 0x46b6_u16, StaticArray[0xb4_u8, 0x7e_u8, 0x2_u8, 0xaa_u8, 0x15_u8, 0x9a_u8, 0x15_u8, 0x2b_u8])

  CLSID_InputPanelConfiguration = LibC::GUID.new(0x2853add3_u32, 0xf096_u16, 0x4c63_u16, StaticArray[0xa7_u8, 0x8f_u8, 0x7f_u8, 0xa3_u8, 0xea_u8, 0x83_u8, 0x7f_u8, 0xb7_u8])

  CLSID_LocalThumbnailCache = LibC::GUID.new(0x50ef4544_u32, 0xac9f_u16, 0x4a8e_u16, StaticArray[0xb2_u8, 0x1b_u8, 0x8a_u8, 0x26_u8, 0x18_u8, 0xd_u8, 0xb1_u8, 0x3f_u8])

  CLSID_SharedBitmap = LibC::GUID.new(0x4db26476_u32, 0x6787_u16, 0x4046_u16, StaticArray[0xb8_u8, 0x36_u8, 0xe8_u8, 0x41_u8, 0x2a_u8, 0x9e_u8, 0x8a_u8, 0x27_u8])

  CLSID_ShellImageDataFactory = LibC::GUID.new(0x66e4e4fb_u32, 0xf385_u16, 0x4dd0_u16, StaticArray[0x8d_u8, 0x74_u8, 0xa2_u8, 0xef_u8, 0xd1_u8, 0xbc_u8, 0x61_u8, 0x78_u8])

  CLSID_SyncMgr = LibC::GUID.new(0x6295df27_u32, 0x35ee_u16, 0x11d1_u16, StaticArray[0x87_u8, 0x7_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x33_u8, 0x27_u8])

  CLSID_ThumbnailStreamCache = LibC::GUID.new(0xcbe0fed3_u32, 0x4b91_u16, 0x4e90_u16, StaticArray[0x83_u8, 0x54_u8, 0x8a_u8, 0x8c_u8, 0x84_u8, 0xec_u8, 0x68_u8, 0x72_u8])

  CLSID_TrackShellMenu = LibC::GUID.new(0x8278f931_u32, 0x2a3e_u16, 0x11d2_u16, StaticArray[0x83_u8, 0x8f_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xd0_u8])

  CLSID_ImageTranscode = LibC::GUID.new(0x17b75166_u32, 0x928f_u16, 0x417d_u16, StaticArray[0x96_u8, 0x85_u8, 0x64_u8, 0xaa_u8, 0x13_u8, 0x55_u8, 0x65_u8, 0xc1_u8])

  CLSID_ShowInputPaneAnimationCoordinator = LibC::GUID.new(0x1f046abf_u32, 0x3202_u16, 0x4dc1_u16, StaticArray[0x8c_u8, 0xb5_u8, 0x3c_u8, 0x67_u8, 0x61_u8, 0x7c_u8, 0xe1_u8, 0xfa_u8])

  CLSID_HideInputPaneAnimationCoordinator = LibC::GUID.new(0x384742b1_u32, 0x2a77_u16, 0x4cb3_u16, StaticArray[0x8c_u8, 0xf8_u8, 0x11_u8, 0x36_u8, 0xf5_u8, 0xe1_u8, 0x7e_u8, 0x59_u8])

  @[Flags]
  enum SHGFI_FLAGS
    SHGFI_ADDOVERLAYS = 32_i32
    SHGFI_ATTR_SPECIFIED = 131072_i32
    SHGFI_ATTRIBUTES = 2048_i32
    SHGFI_DISPLAYNAME = 512_i32
    SHGFI_EXETYPE = 8192_i32
    SHGFI_ICON = 256_i32
    SHGFI_ICONLOCATION = 4096_i32
    SHGFI_LARGEICON = 0_i32
    SHGFI_LINKOVERLAY = 32768_i32
    SHGFI_OPENICON = 2_i32
    SHGFI_OVERLAYINDEX = 64_i32
    SHGFI_PIDL = 8_i32
    SHGFI_SELECTED = 65536_i32
    SHGFI_SHELLICONSIZE = 4_i32
    SHGFI_SMALLICON = 1_i32
    SHGFI_SYSICONINDEX = 16384_i32
    SHGFI_TYPENAME = 1024_i32
    SHGFI_USEFILEATTRIBUTES = 16_i32
  end
  @[Flags]
  enum SHCNE_ID : UInt32
    SHCNE_RENAMEITEM = 1_u32
    SHCNE_CREATE = 2_u32
    SHCNE_DELETE = 4_u32
    SHCNE_MKDIR = 8_u32
    SHCNE_RMDIR = 16_u32
    SHCNE_MEDIAINSERTED = 32_u32
    SHCNE_MEDIAREMOVED = 64_u32
    SHCNE_DRIVEREMOVED = 128_u32
    SHCNE_DRIVEADD = 256_u32
    SHCNE_NETSHARE = 512_u32
    SHCNE_NETUNSHARE = 1024_u32
    SHCNE_ATTRIBUTES = 2048_u32
    SHCNE_UPDATEDIR = 4096_u32
    SHCNE_UPDATEITEM = 8192_u32
    SHCNE_SERVERDISCONNECT = 16384_u32
    SHCNE_UPDATEIMAGE = 32768_u32
    SHCNE_DRIVEADDGUI = 65536_u32
    SHCNE_RENAMEFOLDER = 131072_u32
    SHCNE_FREESPACE = 262144_u32
    SHCNE_EXTENDED_EVENT = 67108864_u32
    SHCNE_ASSOCCHANGED = 134217728_u32
    SHCNE_DISKEVENTS = 145439_u32
    SHCNE_GLOBALEVENTS = 201687520_u32
    SHCNE_ALLEVENTS = 2147483647_u32
    SHCNE_INTERRUPT = 2147483648_u32
  end
  @[Flags]
  enum SHCNRF_SOURCE
    SHCNRF_InterruptLevel = 1_i32
    SHCNRF_ShellLevel = 2_i32
    SHCNRF_RecursiveInterrupt = 4096_i32
    SHCNRF_NewDelivery = 32768_i32
  end
  @[Flags]
  enum SHCNF_FLAGS : UInt32
    SHCNF_IDLIST = 0_u32
    SHCNF_PATHA = 1_u32
    SHCNF_PRINTERA = 2_u32
    SHCNF_DWORD = 3_u32
    SHCNF_PATHW = 5_u32
    SHCNF_PRINTERW = 6_u32
    SHCNF_TYPE = 255_u32
    SHCNF_FLUSH = 4096_u32
    SHCNF_FLUSHNOWAIT = 12288_u32
    SHCNF_NOTIFYRECURSIVE = 65536_u32
    SHCNF_PATH = 5_u32
    SHCNF_PRINTER = 6_u32
  end
  @[Flags]
  enum QITIPF_FLAGS
    QITIPF_DEFAULT = 0_i32
    QITIPF_USENAME = 1_i32
    QITIPF_LINKNOTARGET = 2_i32
    QITIPF_LINKUSETARGET = 4_i32
    QITIPF_USESLOWTIP = 8_i32
    QITIPF_SINGLELINE = 16_i32
    QIF_CACHED = 1_i32
    QIF_DONTEXPANDFOLDER = 2_i32
  end
  enum SHDID_ID
    SHDID_ROOT_REGITEM = 1_i32
    SHDID_FS_FILE = 2_i32
    SHDID_FS_DIRECTORY = 3_i32
    SHDID_FS_OTHER = 4_i32
    SHDID_COMPUTER_DRIVE35 = 5_i32
    SHDID_COMPUTER_DRIVE525 = 6_i32
    SHDID_COMPUTER_REMOVABLE = 7_i32
    SHDID_COMPUTER_FIXED = 8_i32
    SHDID_COMPUTER_NETDRIVE = 9_i32
    SHDID_COMPUTER_CDROM = 10_i32
    SHDID_COMPUTER_RAMDISK = 11_i32
    SHDID_COMPUTER_OTHER = 12_i32
    SHDID_NET_DOMAIN = 13_i32
    SHDID_NET_SERVER = 14_i32
    SHDID_NET_SHARE = 15_i32
    SHDID_NET_RESTOFNET = 16_i32
    SHDID_NET_OTHER = 17_i32
    SHDID_COMPUTER_IMAGING = 18_i32
    SHDID_COMPUTER_AUDIO = 19_i32
    SHDID_COMPUTER_SHAREDDOCS = 20_i32
    SHDID_MOBILE_DEVICE = 21_i32
    SHDID_REMOTE_DESKTOP_DRIVE = 22_i32
  end
  enum SHGDFIL_FORMAT
    SHGDFIL_FINDDATA = 1_i32
    SHGDFIL_NETRESOURCE = 2_i32
    SHGDFIL_DESCRIPTIONID = 3_i32
  end
  @[Flags]
  enum PRF_FLAGS
    PRF_VERIFYEXISTS = 1_i32
    PRF_TRYPROGRAMEXTENSIONS = 3_i32
    PRF_FIRSTDIRDEF = 4_i32
    PRF_DONTFINDLNK = 8_i32
    PRF_REQUIREABSOLUTE = 16_i32
  end
  @[Flags]
  enum PCS_RET : UInt32
    PCS_FATAL = 2147483648_u32
    PCS_REPLACEDCHAR = 1_u32
    PCS_REMOVEDCHAR = 2_u32
    PCS_TRUNCATED = 4_u32
    PCS_PATHTOOLONG = 8_u32
  end
  @[Flags]
  enum MM_FLAGS : UInt32
    MM_ADDSEPARATOR = 1_u32
    MM_SUBMENUSHAVEIDS = 2_u32
    MM_DONTREMOVESEPS = 4_u32
  end
  @[Flags]
  enum SHOP_TYPE
    SHOP_PRINTERNAME = 1_i32
    SHOP_FILEPATH = 2_i32
    SHOP_VOLUMEGUID = 4_i32
  end
  enum SHFMT_ID : UInt32
    SHFMT_ID_DEFAULT = 65535_u32
  end
  @[Flags]
  enum SHFMT_OPT
    SHFMT_OPT_NONE = 0_i32
    SHFMT_OPT_FULL = 1_i32
    SHFMT_OPT_SYSONLY = 2_i32
  end
  enum SHFMT_RET : UInt32
    SHFMT_ERROR = 4294967295_u32
    SHFMT_CANCEL = 4294967294_u32
    SHFMT_NOFORMAT = 4294967293_u32
  end
  @[Flags]
  enum VALIDATEUNC_OPTION
    VALIDATEUNC_CONNECT = 1_i32
    VALIDATEUNC_NOUI = 2_i32
    VALIDATEUNC_PRINT = 4_i32
    VALIDATEUNC_PERSIST = 8_i32
    VALIDATEUNC_VALID = 15_i32
  end
  enum SFVM_MESSAGE_ID
    SFVM_MERGEMENU = 1_i32
    SFVM_INVOKECOMMAND = 2_i32
    SFVM_GETHELPTEXT = 3_i32
    SFVM_GETTOOLTIPTEXT = 4_i32
    SFVM_GETBUTTONINFO = 5_i32
    SFVM_GETBUTTONS = 6_i32
    SFVM_INITMENUPOPUP = 7_i32
    SFVM_FSNOTIFY = 14_i32
    SFVM_WINDOWCREATED = 15_i32
    SFVM_GETDETAILSOF = 23_i32
    SFVM_COLUMNCLICK = 24_i32
    SFVM_QUERYFSNOTIFY = 25_i32
    SFVM_DEFITEMCOUNT = 26_i32
    SFVM_DEFVIEWMODE = 27_i32
    SFVM_UNMERGEMENU = 28_i32
    SFVM_UPDATESTATUSBAR = 31_i32
    SFVM_BACKGROUNDENUM = 32_i32
    SFVM_DIDDRAGDROP = 36_i32
    SFVM_SETISFV = 39_i32
    SFVM_THISIDLIST = 41_i32
    SFVM_ADDPROPERTYPAGES = 47_i32
    SFVM_BACKGROUNDENUMDONE = 48_i32
    SFVM_GETNOTIFY = 49_i32
    SFVM_GETSORTDEFAULTS = 53_i32
    SFVM_SIZE = 57_i32
    SFVM_GETZONE = 58_i32
    SFVM_GETPANE = 59_i32
    SFVM_GETHELPTOPIC = 63_i32
    SFVM_GETANIMATION = 68_i32
  end
  enum SFVS_SELECT
    SFVS_SELECT_NONE = 0_i32
    SFVS_SELECT_ALLITEMS = 1_i32
    SFVS_SELECT_INVERT = 2_i32
  end
  enum DFM_MESSAGE_ID
    DFM_MERGECONTEXTMENU = 1_i32
    DFM_INVOKECOMMAND = 2_i32
    DFM_GETHELPTEXT = 5_i32
    DFM_WM_MEASUREITEM = 6_i32
    DFM_WM_DRAWITEM = 7_i32
    DFM_WM_INITMENUPOPUP = 8_i32
    DFM_VALIDATECMD = 9_i32
    DFM_MERGECONTEXTMENU_TOP = 10_i32
    DFM_GETHELPTEXTW = 11_i32
    DFM_INVOKECOMMANDEX = 12_i32
    DFM_MAPCOMMANDNAME = 13_i32
    DFM_GETDEFSTATICID = 14_i32
    DFM_GETVERBW = 15_i32
    DFM_GETVERBA = 16_i32
    DFM_MERGECONTEXTMENU_BOTTOM = 17_i32
    DFM_MODIFYQCMFLAGS = 18_i32
  end
  enum DFM_CMD
    DFM_CMD_DELETE = -1_i32
    DFM_CMD_MOVE = -2_i32
    DFM_CMD_COPY = -3_i32
    DFM_CMD_LINK = -4_i32
    DFM_CMD_PROPERTIES = -5_i32
    DFM_CMD_NEWFOLDER = -6_i32
    DFM_CMD_PASTE = -7_i32
    DFM_CMD_VIEWLIST = -8_i32
    DFM_CMD_VIEWDETAILS = -9_i32
    DFM_CMD_PASTELINK = -10_i32
    DFM_CMD_PASTESPECIAL = -11_i32
    DFM_CMD_MODALPROP = -12_i32
    DFM_CMD_RENAME = -13_i32
  end
  enum PID_IS
    PID_IS_URL = 2_i32
    PID_IS_NAME = 4_i32
    PID_IS_WORKINGDIR = 5_i32
    PID_IS_HOTKEY = 6_i32
    PID_IS_SHOWCMD = 7_i32
    PID_IS_ICONINDEX = 8_i32
    PID_IS_ICONFILE = 9_i32
    PID_IS_WHATSNEW = 10_i32
    PID_IS_AUTHOR = 11_i32
    PID_IS_DESCRIPTION = 12_i32
    PID_IS_COMMENT = 13_i32
    PID_IS_ROAMED = 15_i32
  end
  enum PID_INTSITE
    PID_INTSITE_WHATSNEW = 2_i32
    PID_INTSITE_AUTHOR = 3_i32
    PID_INTSITE_LASTVISIT = 4_i32
    PID_INTSITE_LASTMOD = 5_i32
    PID_INTSITE_VISITCOUNT = 6_i32
    PID_INTSITE_DESCRIPTION = 7_i32
    PID_INTSITE_COMMENT = 8_i32
    PID_INTSITE_FLAGS = 9_i32
    PID_INTSITE_CONTENTLEN = 10_i32
    PID_INTSITE_CONTENTCODE = 11_i32
    PID_INTSITE_RECURSE = 12_i32
    PID_INTSITE_WATCH = 13_i32
    PID_INTSITE_SUBSCRIPTION = 14_i32
    PID_INTSITE_URL = 15_i32
    PID_INTSITE_TITLE = 16_i32
    PID_INTSITE_CODEPAGE = 18_i32
    PID_INTSITE_TRACKING = 19_i32
    PID_INTSITE_ICONINDEX = 20_i32
    PID_INTSITE_ICONFILE = 21_i32
    PID_INTSITE_ROAMED = 34_i32
  end
  @[Flags]
  enum PIDISF_FLAGS
    PIDISF_RECENTLYCHANGED = 1_i32
    PIDISF_CACHEDSTICKY = 2_i32
    PIDISF_CACHEIMAGES = 16_i32
    PIDISF_FOLLOWALLLINKS = 32_i32
  end
  enum PIDISM_OPTIONS
    PIDISM_GLOBAL = 0_i32
    PIDISM_WATCH = 1_i32
    PIDISM_DONTWATCH = 2_i32
  end
  enum PIDISR_INFO
    PIDISR_UP_TO_DATE = 0_i32
    PIDISR_NEEDS_ADD = 1_i32
    PIDISR_NEEDS_UPDATE = 2_i32
    PIDISR_NEEDS_DELETE = 3_i32
  end
  @[Flags]
  enum SSF_MASK : UInt32
    SSF_SHOWALLOBJECTS = 1_u32
    SSF_SHOWEXTENSIONS = 2_u32
    SSF_HIDDENFILEEXTS = 4_u32
    SSF_SERVERADMINUI = 4_u32
    SSF_SHOWCOMPCOLOR = 8_u32
    SSF_SORTCOLUMNS = 16_u32
    SSF_SHOWSYSFILES = 32_u32
    SSF_DOUBLECLICKINWEBVIEW = 128_u32
    SSF_SHOWATTRIBCOL = 256_u32
    SSF_DESKTOPHTML = 512_u32
    SSF_WIN95CLASSIC = 1024_u32
    SSF_DONTPRETTYPATH = 2048_u32
    SSF_SHOWINFOTIP = 8192_u32
    SSF_MAPNETDRVBUTTON = 4096_u32
    SSF_NOCONFIRMRECYCLE = 32768_u32
    SSF_HIDEICONS = 16384_u32
    SSF_FILTER = 65536_u32
    SSF_WEBVIEW = 131072_u32
    SSF_SHOWSUPERHIDDEN = 262144_u32
    SSF_SEPPROCESS = 524288_u32
    SSF_NONETCRAWLING = 1048576_u32
    SSF_STARTPANELON = 2097152_u32
    SSF_SHOWSTARTPAGE = 4194304_u32
    SSF_AUTOCHECKSELECT = 8388608_u32
    SSF_ICONSONLY = 16777216_u32
    SSF_SHOWTYPEOVERLAY = 33554432_u32
    SSF_SHOWSTATUSBAR = 67108864_u32
  end
  enum NOTIFY_ICON_MESSAGE : UInt32
    NIM_ADD = 0_u32
    NIM_MODIFY = 1_u32
    NIM_DELETE = 2_u32
    NIM_SETFOCUS = 3_u32
    NIM_SETVERSION = 4_u32
  end
  @[Flags]
  enum NOTIFY_ICON_DATA_FLAGS : UInt32
    NIF_MESSAGE = 1_u32
    NIF_ICON = 2_u32
    NIF_TIP = 4_u32
    NIF_STATE = 8_u32
    NIF_INFO = 16_u32
    NIF_GUID = 32_u32
    NIF_REALTIME = 64_u32
    NIF_SHOWTIP = 128_u32
  end
  enum OS : UInt32
    OS_WINDOWS = 0_u32
    OS_NT = 1_u32
    OS_WIN95ORGREATER = 2_u32
    OS_NT4ORGREATER = 3_u32
    OS_WIN98ORGREATER = 5_u32
    OS_WIN98_GOLD = 6_u32
    OS_WIN2000ORGREATER = 7_u32
    OS_WIN2000PRO = 8_u32
    OS_WIN2000SERVER = 9_u32
    OS_WIN2000ADVSERVER = 10_u32
    OS_WIN2000DATACENTER = 11_u32
    OS_WIN2000TERMINAL = 12_u32
    OS_EMBEDDED = 13_u32
    OS_TERMINALCLIENT = 14_u32
    OS_TERMINALREMOTEADMIN = 15_u32
    OS_WIN95_GOLD = 16_u32
    OS_MEORGREATER = 17_u32
    OS_XPORGREATER = 18_u32
    OS_HOME = 19_u32
    OS_PROFESSIONAL = 20_u32
    OS_DATACENTER = 21_u32
    OS_ADVSERVER = 22_u32
    OS_SERVER = 23_u32
    OS_TERMINALSERVER = 24_u32
    OS_PERSONALTERMINALSERVER = 25_u32
    OS_FASTUSERSWITCHING = 26_u32
    OS_WELCOMELOGONUI = 27_u32
    OS_DOMAINMEMBER = 28_u32
    OS_ANYSERVER = 29_u32
    OS_WOW6432 = 30_u32
    OS_WEBSERVER = 31_u32
    OS_SMALLBUSINESSSERVER = 32_u32
    OS_TABLETPC = 33_u32
    OS_SERVERADMINUI = 34_u32
    OS_MEDIACENTER = 35_u32
    OS_APPLIANCE = 36_u32
  end
  enum SHGDNF : UInt32
    SHGDN_NORMAL = 0_u32
    SHGDN_INFOLDER = 1_u32
    SHGDN_FOREDITING = 4096_u32
    SHGDN_FORADDRESSBAR = 16384_u32
    SHGDN_FORPARSING = 32768_u32
  end
  enum SHCONTF_
    SHCONTF_CHECKING_FOR_CHILDREN = 16_i32
    SHCONTF_FOLDERS = 32_i32
    SHCONTF_NONFOLDERS = 64_i32
    SHCONTF_INCLUDEHIDDEN = 128_i32
    SHCONTF_INIT_ON_FIRST_NEXT = 256_i32
    SHCONTF_NETPRINTERSRCH = 512_i32
    SHCONTF_SHAREABLE = 1024_i32
    SHCONTF_STORAGE = 2048_i32
    SHCONTF_NAVIGATION_ENUM = 4096_i32
    SHCONTF_FASTITEMS = 8192_i32
    SHCONTF_FLATLIST = 16384_i32
    SHCONTF_ENABLE_ASYNC = 32768_i32
    SHCONTF_INCLUDESUPERHIDDEN = 65536_i32
  end
  enum STORAGE_PROVIDER_FILE_FLAGS
    SPFF_NONE = 0_i32
    SPFF_DOWNLOAD_BY_DEFAULT = 1_i32
    SPFF_CREATED_ON_THIS_DEVICE = 2_i32
  end
  enum MERGE_UPDATE_STATUS
    MUS_COMPLETE = 0_i32
    MUS_USERINPUTNEEDED = 1_i32
    MUS_FAILED = 2_i32
  end
  enum FOLDER_ENUM_MODE
    FEM_VIEWRESULT = 0_i32
    FEM_NAVIGATION = 1_i32
  end
  enum FOLDERFLAGS
    FWF_NONE = 0_i32
    FWF_AUTOARRANGE = 1_i32
    FWF_ABBREVIATEDNAMES = 2_i32
    FWF_SNAPTOGRID = 4_i32
    FWF_OWNERDATA = 8_i32
    FWF_BESTFITWINDOW = 16_i32
    FWF_DESKTOP = 32_i32
    FWF_SINGLESEL = 64_i32
    FWF_NOSUBFOLDERS = 128_i32
    FWF_TRANSPARENT = 256_i32
    FWF_NOCLIENTEDGE = 512_i32
    FWF_NOSCROLL = 1024_i32
    FWF_ALIGNLEFT = 2048_i32
    FWF_NOICONS = 4096_i32
    FWF_SHOWSELALWAYS = 8192_i32
    FWF_NOVISIBLE = 16384_i32
    FWF_SINGLECLICKACTIVATE = 32768_i32
    FWF_NOWEBVIEW = 65536_i32
    FWF_HIDEFILENAMES = 131072_i32
    FWF_CHECKSELECT = 262144_i32
    FWF_NOENUMREFRESH = 524288_i32
    FWF_NOGROUPING = 1048576_i32
    FWF_FULLROWSELECT = 2097152_i32
    FWF_NOFILTERS = 4194304_i32
    FWF_NOCOLUMNHEADER = 8388608_i32
    FWF_NOHEADERINALLVIEWS = 16777216_i32
    FWF_EXTENDEDTILES = 33554432_i32
    FWF_TRICHECKSELECT = 67108864_i32
    FWF_AUTOCHECKSELECT = 134217728_i32
    FWF_NOBROWSERVIEWSTATE = 268435456_i32
    FWF_SUBSETGROUPS = 536870912_i32
    FWF_USESEARCHFOLDER = 1073741824_i32
    FWF_ALLOWRTLREADING = -2147483648_i32
  end
  enum FOLDERVIEWMODE
    FVM_AUTO = -1_i32
    FVM_FIRST = 1_i32
    FVM_ICON = 1_i32
    FVM_SMALLICON = 2_i32
    FVM_LIST = 3_i32
    FVM_DETAILS = 4_i32
    FVM_THUMBNAIL = 5_i32
    FVM_TILE = 6_i32
    FVM_THUMBSTRIP = 7_i32
    FVM_CONTENT = 8_i32
    FVM_LAST = 8_i32
  end
  enum FOLDERLOGICALVIEWMODE
    FLVM_UNSPECIFIED = -1_i32
    FLVM_FIRST = 1_i32
    FLVM_DETAILS = 1_i32
    FLVM_TILES = 2_i32
    FLVM_ICONS = 3_i32
    FLVM_LIST = 4_i32
    FLVM_CONTENT = 5_i32
    FLVM_LAST = 5_i32
  end
  enum SVSIF_
    SVSI_DESELECT = 0_i32
    SVSI_SELECT = 1_i32
    SVSI_EDIT = 3_i32
    SVSI_DESELECTOTHERS = 4_i32
    SVSI_ENSUREVISIBLE = 8_i32
    SVSI_FOCUSED = 16_i32
    SVSI_TRANSLATEPT = 32_i32
    SVSI_SELECTIONMARK = 64_i32
    SVSI_POSITIONITEM = 128_i32
    SVSI_CHECK = 256_i32
    SVSI_CHECK2 = 512_i32
    SVSI_KEYBOARDSELECT = 1025_i32
    SVSI_NOTAKEFOCUS = 1073741824_i32
  end
  enum SVGIO_
    SVGIO_BACKGROUND = 0_i32
    SVGIO_SELECTION = 1_i32
    SVGIO_ALLVIEW = 2_i32
    SVGIO_CHECKED = 3_i32
    SVGIO_TYPE_MASK = 15_i32
    SVGIO_FLAG_VIEWORDER = -2147483648_i32
  end
  enum SVUIA_STATUS
    SVUIA_DEACTIVATE = 0_i32
    SVUIA_ACTIVATE_NOFOCUS = 1_i32
    SVUIA_ACTIVATE_FOCUS = 2_i32
    SVUIA_INPLACEACTIVATE = 3_i32
  end
  enum SORTDIRECTION
    SORT_DESCENDING = -1_i32
    SORT_ASCENDING = 1_i32
  end
  enum FVTEXTTYPE
    FVST_EMPTYTEXT = 0_i32
  end
  enum CM_MASK
    CM_MASK_WIDTH = 1_i32
    CM_MASK_DEFAULTWIDTH = 2_i32
    CM_MASK_IDEALWIDTH = 4_i32
    CM_MASK_NAME = 8_i32
    CM_MASK_STATE = 16_i32
  end
  enum CM_STATE
    CM_STATE_NONE = 0_i32
    CM_STATE_VISIBLE = 1_i32
    CM_STATE_FIXEDWIDTH = 2_i32
    CM_STATE_NOSORTBYFOLDERNESS = 4_i32
    CM_STATE_ALWAYSVISIBLE = 8_i32
  end
  enum CM_ENUM_FLAGS
    CM_ENUM_ALL = 1_i32
    CM_ENUM_VISIBLE = 2_i32
  end
  enum CM_SET_WIDTH_VALUE
    CM_WIDTH_USEDEFAULT = -1_i32
    CM_WIDTH_AUTOSIZE = -2_i32
  end
  enum SIGDN
    SIGDN_NORMALDISPLAY = 0_i32
    SIGDN_PARENTRELATIVEPARSING = -2147385343_i32
    SIGDN_DESKTOPABSOLUTEPARSING = -2147319808_i32
    SIGDN_PARENTRELATIVEEDITING = -2147282943_i32
    SIGDN_DESKTOPABSOLUTEEDITING = -2147172352_i32
    SIGDN_FILESYSPATH = -2147123200_i32
    SIGDN_URL = -2147057664_i32
    SIGDN_PARENTRELATIVEFORADDRESSBAR = -2146975743_i32
    SIGDN_PARENTRELATIVE = -2146959359_i32
    SIGDN_PARENTRELATIVEFORUI = -2146877439_i32
  end
  enum SICHINTF_
    SICHINT_DISPLAY = 0_i32
    SICHINT_ALLFIELDS = -2147483648_i32
    SICHINT_CANONICAL = 268435456_i32
    SICHINT_TEST_FILESYSPATH_IF_NOT_EQUAL = 536870912_i32
  end
  enum DATAOBJ_GET_ITEM_FLAGS
    DOGIF_DEFAULT = 0_i32
    DOGIF_TRAVERSE_LINK = 1_i32
    DOGIF_NO_HDROP = 2_i32
    DOGIF_NO_URL = 4_i32
    DOGIF_ONLY_IF_ONE = 8_i32
  end
  @[Flags]
  enum SIIGBF
    SIIGBF_RESIZETOFIT = 0_i32
    SIIGBF_BIGGERSIZEOK = 1_i32
    SIIGBF_MEMORYONLY = 2_i32
    SIIGBF_ICONONLY = 4_i32
    SIIGBF_THUMBNAILONLY = 8_i32
    SIIGBF_INCACHEONLY = 16_i32
    SIIGBF_CROPTOSQUARE = 32_i32
    SIIGBF_WIDETHUMBNAILS = 64_i32
    SIIGBF_ICONBACKGROUND = 128_i32
    SIIGBF_SCALEUP = 256_i32
  end
  enum STGOP
    STGOP_MOVE = 1_i32
    STGOP_COPY = 2_i32
    STGOP_SYNC = 3_i32
    STGOP_REMOVE = 5_i32
    STGOP_RENAME = 6_i32
    STGOP_APPLYPROPERTIES = 8_i32
    STGOP_NEW = 10_i32
  end
  enum TRANSFER_SOURCE_FLAGS_
    TSF_NORMAL = 0_i32
    TSF_FAIL_EXIST = 0_i32
    TSF_RENAME_EXIST = 1_i32
    TSF_OVERWRITE_EXIST = 2_i32
    TSF_ALLOW_DECRYPTION = 4_i32
    TSF_NO_SECURITY = 8_i32
    TSF_COPY_CREATION_TIME = 16_i32
    TSF_COPY_WRITE_TIME = 32_i32
    TSF_USE_FULL_ACCESS = 64_i32
    TSF_DELETE_RECYCLE_IF_POSSIBLE = 128_i32
    TSF_COPY_HARD_LINK = 256_i32
    TSF_COPY_LOCALIZED_NAME = 512_i32
    TSF_MOVE_AS_COPY_DELETE = 1024_i32
    TSF_SUSPEND_SHELLEVENTS = 2048_i32
  end
  enum TRANSFER_ADVISE_STATE_
    TS_NONE = 0_i32
    TS_PERFORMING = 1_i32
    TS_PREPARING = 2_i32
    TS_INDETERMINATE = 4_i32
  end
  enum SIATTRIBFLAGS
    SIATTRIBFLAGS_AND = 1_i32
    SIATTRIBFLAGS_OR = 2_i32
    SIATTRIBFLAGS_APPCOMPAT = 3_i32
    SIATTRIBFLAGS_MASK = 3_i32
    SIATTRIBFLAGS_ALLITEMS = 16384_i32
  end
  enum CATEGORYINFO_FLAGS
    CATINFO_NORMAL = 0_i32
    CATINFO_COLLAPSED = 1_i32
    CATINFO_HIDDEN = 2_i32
    CATINFO_EXPANDED = 4_i32
    CATINFO_NOHEADER = 8_i32
    CATINFO_NOTCOLLAPSIBLE = 16_i32
    CATINFO_NOHEADERCOUNT = 32_i32
    CATINFO_SUBSETTED = 64_i32
    CATINFO_SEPARATE_IMAGES = 128_i32
    CATINFO_SHOWEMPTY = 256_i32
  end
  enum CATSORT_FLAGS
    CATSORT_DEFAULT = 0_i32
    CATSORT_NAME = 1_i32
  end
  enum SLR_FLAGS
    SLR_NONE = 0_i32
    SLR_NO_UI = 1_i32
    SLR_ANY_MATCH = 2_i32
    SLR_UPDATE = 4_i32
    SLR_NOUPDATE = 8_i32
    SLR_NOSEARCH = 16_i32
    SLR_NOTRACK = 32_i32
    SLR_NOLINKINFO = 64_i32
    SLR_INVOKE_MSI = 128_i32
    SLR_NO_UI_WITH_MSG_PUMP = 257_i32
    SLR_OFFER_DELETE_WITHOUT_FILE = 512_i32
    SLR_KNOWNFOLDER = 1024_i32
    SLR_MACHINE_IN_LOCAL_TARGET = 2048_i32
    SLR_UPDATE_MACHINE_AND_SID = 4096_i32
    SLR_NO_OBJECT_ID = 8192_i32
  end
  enum SLGP_FLAGS
    SLGP_SHORTPATH = 1_i32
    SLGP_UNCPRIORITY = 2_i32
    SLGP_RAWPATH = 4_i32
    SLGP_RELATIVEPRIORITY = 8_i32
  end
  enum SPINITF_
    SPINITF_NORMAL = 0_i32
    SPINITF_MODAL = 1_i32
    SPINITF_NOMINIMIZE = 8_i32
  end
  enum SPBEGINF_
    SPBEGINF_NORMAL = 0_i32
    SPBEGINF_AUTOTIME = 2_i32
    SPBEGINF_NOPROGRESSBAR = 16_i32
    SPBEGINF_MARQUEEPROGRESS = 32_i32
    SPBEGINF_NOCANCELBUTTON = 64_i32
  end
  enum SPACTION
    SPACTION_NONE = 0_i32
    SPACTION_MOVING = 1_i32
    SPACTION_COPYING = 2_i32
    SPACTION_RECYCLING = 3_i32
    SPACTION_APPLYINGATTRIBS = 4_i32
    SPACTION_DOWNLOADING = 5_i32
    SPACTION_SEARCHING_INTERNET = 6_i32
    SPACTION_CALCULATING = 7_i32
    SPACTION_UPLOADING = 8_i32
    SPACTION_SEARCHING_FILES = 9_i32
    SPACTION_DELETING = 10_i32
    SPACTION_RENAMING = 11_i32
    SPACTION_FORMATTING = 12_i32
    SPACTION_COPY_MOVING = 13_i32
  end
  enum SPTEXT
    SPTEXT_ACTIONDESCRIPTION = 1_i32
    SPTEXT_ACTIONDETAIL = 2_i32
  end
  enum EXPPS_
    EXPPS_FILETYPES = 1_i32
  end
  enum DESKBANDCID
    DBID_BANDINFOCHANGED = 0_i32
    DBID_SHOWONLY = 1_i32
    DBID_MAXIMIZEBAND = 2_i32
    DBID_PUSHCHEVRON = 3_i32
    DBID_DELAYINIT = 4_i32
    DBID_FINISHINIT = 5_i32
    DBID_SETWINDOWTHEME = 6_i32
    DBID_PERMITAUTOHIDE = 7_i32
  end
  enum THUMBBUTTONFLAGS
    THBF_ENABLED = 0_i32
    THBF_DISABLED = 1_i32
    THBF_DISMISSONCLICK = 2_i32
    THBF_NOBACKGROUND = 4_i32
    THBF_HIDDEN = 8_i32
    THBF_NONINTERACTIVE = 16_i32
  end
  enum THUMBBUTTONMASK
    THB_BITMAP = 1_i32
    THB_ICON = 2_i32
    THB_TOOLTIP = 4_i32
    THB_FLAGS = 8_i32
  end
  enum TBPFLAG
    TBPF_NOPROGRESS = 0_i32
    TBPF_INDETERMINATE = 1_i32
    TBPF_NORMAL = 2_i32
    TBPF_ERROR = 4_i32
    TBPF_PAUSED = 8_i32
  end
  enum STPFLAG
    STPF_NONE = 0_i32
    STPF_USEAPPTHUMBNAILALWAYS = 1_i32
    STPF_USEAPPTHUMBNAILWHENACTIVE = 2_i32
    STPF_USEAPPPEEKALWAYS = 4_i32
    STPF_USEAPPPEEKWHENACTIVE = 8_i32
  end
  enum EXPLORER_BROWSER_OPTIONS
    EBO_NONE = 0_i32
    EBO_NAVIGATEONCE = 1_i32
    EBO_SHOWFRAMES = 2_i32
    EBO_ALWAYSNAVIGATE = 4_i32
    EBO_NOTRAVELLOG = 8_i32
    EBO_NOWRAPPERWINDOW = 16_i32
    EBO_HTMLSHAREPOINTVIEW = 32_i32
    EBO_NOBORDER = 64_i32
    EBO_NOPERSISTVIEWSTATE = 128_i32
  end
  enum EXPLORER_BROWSER_FILL_FLAGS
    EBF_NONE = 0_i32
    EBF_SELECTFROMDATAOBJECT = 256_i32
    EBF_NODROPTARGET = 512_i32
  end
  enum OPPROGDLGF_
    OPPROGDLG_DEFAULT = 0_i32
    OPPROGDLG_ENABLEPAUSE = 128_i32
    OPPROGDLG_ALLOWUNDO = 256_i32
    OPPROGDLG_DONTDISPLAYSOURCEPATH = 512_i32
    OPPROGDLG_DONTDISPLAYDESTPATH = 1024_i32
    OPPROGDLG_NOMULTIDAYESTIMATES = 2048_i32
    OPPROGDLG_DONTDISPLAYLOCATIONS = 4096_i32
  end
  enum PDMODE_
    PDM_DEFAULT = 0_i32
    PDM_RUN = 1_i32
    PDM_PREFLIGHT = 2_i32
    PDM_UNDOING = 4_i32
    PDM_ERRORSBLOCKING = 8_i32
    PDM_INDETERMINATE = 16_i32
  end
  enum FILE_OPERATION_FLAGS2
    FOF2_NONE = 0_i32
    FOF2_MERGEFOLDERSONCOLLISION = 1_i32
  end
  enum NAMESPACEWALKFLAG
    NSWF_DEFAULT = 0_i32
    NSWF_NONE_IMPLIES_ALL = 1_i32
    NSWF_ONE_IMPLIES_ALL = 2_i32
    NSWF_DONT_TRAVERSE_LINKS = 4_i32
    NSWF_DONT_ACCUMULATE_RESULT = 8_i32
    NSWF_TRAVERSE_STREAM_JUNCTIONS = 16_i32
    NSWF_FILESYSTEM_ONLY = 32_i32
    NSWF_SHOW_PROGRESS = 64_i32
    NSWF_FLAG_VIEWORDER = 128_i32
    NSWF_IGNORE_AUTOPLAY_HIDA = 256_i32
    NSWF_ASYNC = 512_i32
    NSWF_DONT_RESOLVE_LINKS = 1024_i32
    NSWF_ACCUMULATE_FOLDERS = 2048_i32
    NSWF_DONT_SORT = 4096_i32
    NSWF_USE_TRANSFER_MEDIUM = 8192_i32
    NSWF_DONT_TRAVERSE_STREAM_JUNCTIONS = 16384_i32
    NSWF_ANY_IMPLIES_ALL = 32768_i32
  end
  enum BANDSITECID
    BSID_BANDADDED = 0_i32
    BSID_BANDREMOVED = 1_i32
  end
  enum MENUBANDHANDLERCID
    MBHANDCID_PIDLSELECT = 0_i32
  end
  enum MENUPOPUPSELECT
    MPOS_EXECUTE = 0_i32
    MPOS_FULLCANCEL = 1_i32
    MPOS_CANCELLEVEL = 2_i32
    MPOS_SELECTLEFT = 3_i32
    MPOS_SELECTRIGHT = 4_i32
    MPOS_CHILDTRACKING = 5_i32
  end
  enum MENUPOPUPPOPUPFLAGS
    MPPF_SETFOCUS = 1_i32
    MPPF_INITIALSELECT = 2_i32
    MPPF_NOANIMATE = 4_i32
    MPPF_KEYBOARD = 16_i32
    MPPF_REPOSITION = 32_i32
    MPPF_FORCEZORDER = 64_i32
    MPPF_FINALSELECT = 128_i32
    MPPF_TOP = 536870912_i32
    MPPF_LEFT = 1073741824_i32
    MPPF_RIGHT = 1610612736_i32
    MPPF_BOTTOM = -2147483648_i32
    MPPF_POS_MASK = -536870912_i32
    MPPF_ALIGN_LEFT = 33554432_i32
    MPPF_ALIGN_RIGHT = 67108864_i32
  end
  enum FILE_USAGE_TYPE
    FUT_PLAYING = 0_i32
    FUT_EDITING = 1_i32
    FUT_GENERIC = 2_i32
  end
  enum FDE_OVERWRITE_RESPONSE
    FDEOR_DEFAULT = 0_i32
    FDEOR_ACCEPT = 1_i32
    FDEOR_REFUSE = 2_i32
  end
  enum FDE_SHAREVIOLATION_RESPONSE
    FDESVR_DEFAULT = 0_i32
    FDESVR_ACCEPT = 1_i32
    FDESVR_REFUSE = 2_i32
  end
  enum FDAP
    FDAP_BOTTOM = 0_i32
    FDAP_TOP = 1_i32
  end
  @[Flags]
  enum FILEOPENDIALOGOPTIONS : UInt32
    FOS_OVERWRITEPROMPT = 2_u32
    FOS_STRICTFILETYPES = 4_u32
    FOS_NOCHANGEDIR = 8_u32
    FOS_PICKFOLDERS = 32_u32
    FOS_FORCEFILESYSTEM = 64_u32
    FOS_ALLNONSTORAGEITEMS = 128_u32
    FOS_NOVALIDATE = 256_u32
    FOS_ALLOWMULTISELECT = 512_u32
    FOS_PATHMUSTEXIST = 2048_u32
    FOS_FILEMUSTEXIST = 4096_u32
    FOS_CREATEPROMPT = 8192_u32
    FOS_SHAREAWARE = 16384_u32
    FOS_NOREADONLYRETURN = 32768_u32
    FOS_NOTESTFILECREATE = 65536_u32
    FOS_HIDEMRUPLACES = 131072_u32
    FOS_HIDEPINNEDPLACES = 262144_u32
    FOS_NODEREFERENCELINKS = 1048576_u32
    FOS_OKBUTTONNEEDSINTERACTION = 2097152_u32
    FOS_DONTADDTORECENT = 33554432_u32
    FOS_FORCESHOWHIDDEN = 268435456_u32
    FOS_DEFAULTNOMINIMODE = 536870912_u32
    FOS_FORCEPREVIEWPANEON = 1073741824_u32
    FOS_SUPPORTSTREAMABLEITEMS = 2147483648_u32
  end
  enum CDCONTROLSTATEF
    CDCS_INACTIVE = 0_i32
    CDCS_ENABLED = 1_i32
    CDCS_VISIBLE = 2_i32
    CDCS_ENABLEDVISIBLE = 3_i32
  end
  enum ASSOCIATIONLEVEL
    AL_MACHINE = 0_i32
    AL_EFFECTIVE = 1_i32
    AL_USER = 2_i32
  end
  enum ASSOCIATIONTYPE
    AT_FILEEXTENSION = 0_i32
    AT_URLPROTOCOL = 1_i32
    AT_STARTMENUCLIENT = 2_i32
    AT_MIMETYPE = 3_i32
  end
  enum BROWSERFRAMEOPTIONS_
    BFO_NONE = 0_i32
    BFO_BROWSER_PERSIST_SETTINGS = 1_i32
    BFO_RENAME_FOLDER_OPTIONS_TOINTERNET = 2_i32
    BFO_BOTH_OPTIONS = 4_i32
    BIF_PREFER_INTERNET_SHORTCUT = 8_i32
    BFO_BROWSE_NO_IN_NEW_PROCESS = 16_i32
    BFO_ENABLE_HYPERLINK_TRACKING = 32_i32
    BFO_USE_IE_OFFLINE_SUPPORT = 64_i32
    BFO_SUBSTITUE_INTERNET_START_PAGE = 128_i32
    BFO_USE_IE_LOGOBANDING = 256_i32
    BFO_ADD_IE_TOCAPTIONBAR = 512_i32
    BFO_USE_DIALUP_REF = 1024_i32
    BFO_USE_IE_TOOLBAR = 2048_i32
    BFO_NO_PARENT_FOLDER_SUPPORT = 4096_i32
    BFO_NO_REOPEN_NEXT_RESTART = 8192_i32
    BFO_GO_HOME_PAGE = 16384_i32
    BFO_PREFER_IEPROCESS = 32768_i32
    BFO_SHOW_NAVIGATION_CANCELLED = 65536_i32
    BFO_USE_IE_STATUSBAR = 131072_i32
    BFO_QUERY_ALL = -1_i32
  end
  enum NWMF
    NWMF_UNLOADING = 1_i32
    NWMF_USERINITED = 2_i32
    NWMF_FIRST = 4_i32
    NWMF_OVERRIDEKEY = 8_i32
    NWMF_SHOWHELP = 16_i32
    NWMF_HTMLDIALOG = 32_i32
    NWMF_FROMDIALOGCHILD = 64_i32
    NWMF_USERREQUESTED = 128_i32
    NWMF_USERALLOWED = 256_i32
    NWMF_FORCEWINDOW = 65536_i32
    NWMF_FORCETAB = 131072_i32
    NWMF_SUGGESTWINDOW = 262144_i32
    NWMF_SUGGESTTAB = 524288_i32
    NWMF_INACTIVETAB = 1048576_i32
  end
  enum ATTACHMENT_PROMPT
    ATTACHMENT_PROMPT_NONE = 0_i32
    ATTACHMENT_PROMPT_SAVE = 1_i32
    ATTACHMENT_PROMPT_EXEC = 2_i32
    ATTACHMENT_PROMPT_EXEC_OR_SAVE = 3_i32
  end
  enum ATTACHMENT_ACTION
    ATTACHMENT_ACTION_CANCEL = 0_i32
    ATTACHMENT_ACTION_SAVE = 1_i32
    ATTACHMENT_ACTION_EXEC = 2_i32
  end
  enum SMINFOMASK
    SMIM_TYPE = 1_i32
    SMIM_FLAGS = 2_i32
    SMIM_ICON = 4_i32
  end
  enum SMINFOTYPE
    SMIT_SEPARATOR = 1_i32
    SMIT_STRING = 2_i32
  end
  enum SMINFOFLAGS
    SMIF_ICON = 1_i32
    SMIF_ACCELERATOR = 2_i32
    SMIF_DROPTARGET = 4_i32
    SMIF_SUBMENU = 8_i32
    SMIF_CHECKED = 32_i32
    SMIF_DROPCASCADE = 64_i32
    SMIF_HIDDEN = 128_i32
    SMIF_DISABLED = 256_i32
    SMIF_TRACKPOPUP = 512_i32
    SMIF_DEMOTED = 1024_i32
    SMIF_ALTSTATE = 2048_i32
    SMIF_DRAGNDROP = 4096_i32
    SMIF_NEW = 8192_i32
  end
  enum KF_CATEGORY
    KF_CATEGORY_VIRTUAL = 1_i32
    KF_CATEGORY_FIXED = 2_i32
    KF_CATEGORY_COMMON = 3_i32
    KF_CATEGORY_PERUSER = 4_i32
  end
  enum KF_DEFINITION_FLAGS_
    KFDF_LOCAL_REDIRECT_ONLY = 2_i32
    KFDF_ROAMABLE = 4_i32
    KFDF_PRECREATE = 8_i32
    KFDF_STREAM = 16_i32
    KFDF_PUBLISHEXPANDEDPATH = 32_i32
    KFDF_NO_REDIRECT_UI = 64_i32
  end
  enum KF_REDIRECT_FLAGS_
    KF_REDIRECT_USER_EXCLUSIVE = 1_i32
    KF_REDIRECT_COPY_SOURCE_DACL = 2_i32
    KF_REDIRECT_OWNER_USER = 4_i32
    KF_REDIRECT_SET_OWNER_EXPLICIT = 8_i32
    KF_REDIRECT_CHECK_ONLY = 16_i32
    KF_REDIRECT_WITH_UI = 32_i32
    KF_REDIRECT_UNPIN = 64_i32
    KF_REDIRECT_PIN = 128_i32
    KF_REDIRECT_COPY_CONTENTS = 512_i32
    KF_REDIRECT_DEL_SOURCE_CONTENTS = 1024_i32
    KF_REDIRECT_EXCLUDE_ALL_KNOWN_SUBFOLDERS = 2048_i32
  end
  enum KF_REDIRECTION_CAPABILITIES_
    KF_REDIRECTION_CAPABILITIES_ALLOW_ALL = 255_i32
    KF_REDIRECTION_CAPABILITIES_REDIRECTABLE = 1_i32
    KF_REDIRECTION_CAPABILITIES_DENY_ALL = 1048320_i32
    KF_REDIRECTION_CAPABILITIES_DENY_POLICY_REDIRECTED = 256_i32
    KF_REDIRECTION_CAPABILITIES_DENY_POLICY = 512_i32
    KF_REDIRECTION_CAPABILITIES_DENY_PERMISSIONS = 1024_i32
  end
  enum FFFP_MODE
    FFFP_EXACTMATCH = 0_i32
    FFFP_NEARESTPARENTMATCH = 1_i32
  end
  enum SHARE_ROLE
    SHARE_ROLE_INVALID = -1_i32
    SHARE_ROLE_READER = 0_i32
    SHARE_ROLE_CONTRIBUTOR = 1_i32
    SHARE_ROLE_CO_OWNER = 2_i32
    SHARE_ROLE_OWNER = 3_i32
    SHARE_ROLE_CUSTOM = 4_i32
    SHARE_ROLE_MIXED = 5_i32
  end
  enum DEF_SHARE_ID
    DEFSHAREID_USERS = 1_i32
    DEFSHAREID_PUBLIC = 2_i32
  end
  enum NMCII_FLAGS_
    NMCII_NONE = 0_i32
    NMCII_ITEMS = 1_i32
    NMCII_FOLDERS = 2_i32
  end
  enum NMCSAEI_FLAGS_
    NMCSAEI_SELECT = 0_i32
    NMCSAEI_EDIT = 1_i32
  end
  enum NSTCSTYLE_
    NSTCS_HASEXPANDOS = 1_i32
    NSTCS_HASLINES = 2_i32
    NSTCS_SINGLECLICKEXPAND = 4_i32
    NSTCS_FULLROWSELECT = 8_i32
    NSTCS_SPRINGEXPAND = 16_i32
    NSTCS_HORIZONTALSCROLL = 32_i32
    NSTCS_ROOTHASEXPANDO = 64_i32
    NSTCS_SHOWSELECTIONALWAYS = 128_i32
    NSTCS_NOINFOTIP = 512_i32
    NSTCS_EVENHEIGHT = 1024_i32
    NSTCS_NOREPLACEOPEN = 2048_i32
    NSTCS_DISABLEDRAGDROP = 4096_i32
    NSTCS_NOORDERSTREAM = 8192_i32
    NSTCS_RICHTOOLTIP = 16384_i32
    NSTCS_BORDER = 32768_i32
    NSTCS_NOEDITLABELS = 65536_i32
    NSTCS_TABSTOP = 131072_i32
    NSTCS_FAVORITESMODE = 524288_i32
    NSTCS_AUTOHSCROLL = 1048576_i32
    NSTCS_FADEINOUTEXPANDOS = 2097152_i32
    NSTCS_EMPTYTEXT = 4194304_i32
    NSTCS_CHECKBOXES = 8388608_i32
    NSTCS_PARTIALCHECKBOXES = 16777216_i32
    NSTCS_EXCLUSIONCHECKBOXES = 33554432_i32
    NSTCS_DIMMEDCHECKBOXES = 67108864_i32
    NSTCS_NOINDENTCHECKS = 134217728_i32
    NSTCS_ALLOWJUNCTIONS = 268435456_i32
    NSTCS_SHOWTABSBUTTON = 536870912_i32
    NSTCS_SHOWDELETEBUTTON = 1073741824_i32
    NSTCS_SHOWREFRESHBUTTON = -2147483648_i32
  end
  enum NSTCROOTSTYLE_
    NSTCRS_VISIBLE = 0_i32
    NSTCRS_HIDDEN = 1_i32
    NSTCRS_EXPANDED = 2_i32
  end
  enum NSTCITEMSTATE_
    NSTCIS_NONE = 0_i32
    NSTCIS_SELECTED = 1_i32
    NSTCIS_EXPANDED = 2_i32
    NSTCIS_BOLD = 4_i32
    NSTCIS_DISABLED = 8_i32
    NSTCIS_SELECTEDNOEXPAND = 16_i32
  end
  enum NSTCGNI
    NSTCGNI_NEXT = 0_i32
    NSTCGNI_NEXTVISIBLE = 1_i32
    NSTCGNI_PREV = 2_i32
    NSTCGNI_PREVVISIBLE = 3_i32
    NSTCGNI_PARENT = 4_i32
    NSTCGNI_CHILD = 5_i32
    NSTCGNI_FIRSTVISIBLE = 6_i32
    NSTCGNI_LASTVISIBLE = 7_i32
  end
  enum NSTCFOLDERCAPABILITIES
    NSTCFC_NONE = 0_i32
    NSTCFC_PINNEDITEMFILTERING = 1_i32
    NSTCFC_DELAY_REGISTER_NOTIFY = 2_i32
  end
  enum EXPLORERPANESTATE_
    EPS_DONTCARE = 0_i32
    EPS_DEFAULT_ON = 1_i32
    EPS_DEFAULT_OFF = 2_i32
    EPS_STATEMASK = 65535_i32
    EPS_INITIALSTATE = 65536_i32
    EPS_FORCE = 131072_i32
  end
  enum EXPCMDSTATE_
    ECS_ENABLED = 0_i32
    ECS_DISABLED = 1_i32
    ECS_HIDDEN = 2_i32
    ECS_CHECKBOX = 4_i32
    ECS_CHECKED = 8_i32
    ECS_RADIOCHECK = 16_i32
  end
  enum EXPCMDFLAGS_
    ECF_DEFAULT = 0_i32
    ECF_HASSUBCOMMANDS = 1_i32
    ECF_HASSPLITBUTTON = 2_i32
    ECF_HIDELABEL = 4_i32
    ECF_ISSEPARATOR = 8_i32
    ECF_HASLUASHIELD = 16_i32
    ECF_SEPARATORBEFORE = 32_i32
    ECF_SEPARATORAFTER = 64_i32
    ECF_ISDROPDOWN = 128_i32
    ECF_TOGGLEABLE = 256_i32
    ECF_AUTOMENUICONS = 512_i32
  end
  enum CPVIEW
    CPVIEW_CLASSIC = 0_i32
    CPVIEW_ALLITEMS = 0_i32
    CPVIEW_CATEGORY = 1_i32
    CPVIEW_HOME = 1_i32
  end
  enum KNOWNDESTCATEGORY
    KDC_FREQUENT = 1_i32
    KDC_RECENT = 2_i32
  end
  enum APPDOCLISTTYPE
    ADLT_RECENT = 0_i32
    ADLT_FREQUENT = 1_i32
  end
  enum DESKTOP_SLIDESHOW_OPTIONS
    DSO_SHUFFLEIMAGES = 1_i32
  end
  enum DESKTOP_SLIDESHOW_STATE
    DSS_ENABLED = 1_i32
    DSS_SLIDESHOW = 2_i32
    DSS_DISABLED_BY_REMOTE_SESSION = 4_i32
  end
  enum DESKTOP_SLIDESHOW_DIRECTION
    DSD_FORWARD = 0_i32
    DSD_BACKWARD = 1_i32
  end
  enum DESKTOP_WALLPAPER_POSITION
    DWPOS_CENTER = 0_i32
    DWPOS_TILE = 1_i32
    DWPOS_STRETCH = 2_i32
    DWPOS_FIT = 3_i32
    DWPOS_FILL = 4_i32
    DWPOS_SPAN = 5_i32
  end
  enum HOMEGROUPSHARINGCHOICES
    HGSC_NONE = 0_i32
    HGSC_MUSICLIBRARY = 1_i32
    HGSC_PICTURESLIBRARY = 2_i32
    HGSC_VIDEOSLIBRARY = 4_i32
    HGSC_DOCUMENTSLIBRARY = 8_i32
    HGSC_PRINTERS = 16_i32
  end
  enum LIBRARYFOLDERFILTER
    LFF_FORCEFILESYSTEM = 1_i32
    LFF_STORAGEITEMS = 2_i32
    LFF_ALLITEMS = 3_i32
  end
  enum LIBRARYOPTIONFLAGS
    LOF_DEFAULT = 0_i32
    LOF_PINNEDTONAVPANE = 1_i32
    LOF_MASK_ALL = 1_i32
  end
  enum DEFAULTSAVEFOLDERTYPE
    DSFT_DETECT = 1_i32
    DSFT_PRIVATE = 2_i32
    DSFT_PUBLIC = 3_i32
  end
  enum LIBRARYSAVEFLAGS
    LSF_FAILIFTHERE = 0_i32
    LSF_OVERRIDEEXISTING = 1_i32
    LSF_MAKEUNIQUENAME = 2_i32
  end
  enum DEFAULT_FOLDER_MENU_RESTRICTIONS
    DFMR_DEFAULT = 0_i32
    DFMR_NO_STATIC_VERBS = 8_i32
    DFMR_STATIC_VERBS_ONLY = 16_i32
    DFMR_NO_RESOURCE_VERBS = 32_i32
    DFMR_OPTIN_HANDLERS_ONLY = 64_i32
    DFMR_RESOURCE_AND_FOLDER_VERBS_ONLY = 128_i32
    DFMR_USE_SPECIFIED_HANDLERS = 256_i32
    DFMR_USE_SPECIFIED_VERBS = 512_i32
    DFMR_NO_ASYNC_VERBS = 1024_i32
    DFMR_NO_NATIVECPU_VERBS = 2048_i32
    DFMR_NO_NONWOW_VERBS = 4096_i32
  end
  enum ACTIVATEOPTIONS
    AO_NONE = 0_i32
    AO_DESIGNMODE = 1_i32
    AO_NOERRORUI = 2_i32
    AO_NOSPLASHSCREEN = 4_i32
    AO_PRELAUNCH = 33554432_i32
  end
  enum LIBRARYMANAGEDIALOGOPTIONS
    LMD_DEFAULT = 0_i32
    LMD_ALLOWUNINDEXABLENETWORKLOCATIONS = 1_i32
  end
  enum AHTYPE
    AHTYPE_UNDEFINED = 0_i32
    AHTYPE_USER_APPLICATION = 8_i32
    AHTYPE_ANY_APPLICATION = 16_i32
    AHTYPE_MACHINEDEFAULT = 32_i32
    AHTYPE_PROGID = 64_i32
    AHTYPE_APPLICATION = 128_i32
    AHTYPE_CLASS_APPLICATION = 256_i32
    AHTYPE_ANY_PROGID = 512_i32
  end
  enum ASSOC_FILTER
    ASSOC_FILTER_NONE = 0_i32
    ASSOC_FILTER_RECOMMENDED = 1_i32
  end
  enum MONITOR_APP_VISIBILITY
    MAV_UNKNOWN = 0_i32
    MAV_NO_APP_VISIBLE = 1_i32
    MAV_APP_VISIBLE = 2_i32
  end
  enum PACKAGE_EXECUTION_STATE
    PES_UNKNOWN = 0_i32
    PES_RUNNING = 1_i32
    PES_SUSPENDING = 2_i32
    PES_SUSPENDED = 3_i32
    PES_TERMINATED = 4_i32
  end
  enum AHE_TYPE
    AHE_DESKTOP = 0_i32
    AHE_IMMERSIVE = 1_i32
  end
  enum EC_HOST_UI_MODE
    ECHUIM_DESKTOP = 0_i32
    ECHUIM_IMMERSIVE = 1_i32
    ECHUIM_SYSTEM_LAUNCHER = 2_i32
  end
  enum APPLICATION_VIEW_STATE
    AVS_FULLSCREEN_LANDSCAPE = 0_i32
    AVS_FILLED = 1_i32
    AVS_SNAPPED = 2_i32
    AVS_FULLSCREEN_PORTRAIT = 3_i32
  end
  enum EDGE_GESTURE_KIND
    EGK_TOUCH = 0_i32
    EGK_KEYBOARD = 1_i32
    EGK_MOUSE = 2_i32
  end
  enum NATIVE_DISPLAY_ORIENTATION
    NDO_LANDSCAPE = 0_i32
    NDO_PORTRAIT = 1_i32
  end
  enum APPLICATION_VIEW_ORIENTATION
    AVO_LANDSCAPE = 0_i32
    AVO_PORTRAIT = 1_i32
  end
  enum ADJACENT_DISPLAY_EDGES
    ADE_NONE = 0_i32
    ADE_LEFT = 1_i32
    ADE_RIGHT = 2_i32
  end
  enum APPLICATION_VIEW_MIN_WIDTH
    AVMW_DEFAULT = 0_i32
    AVMW_320 = 1_i32
    AVMW_500 = 2_i32
  end
  enum APPLICATION_VIEW_SIZE_PREFERENCE
    AVSP_DEFAULT = 0_i32
    AVSP_USE_LESS = 1_i32
    AVSP_USE_HALF = 2_i32
    AVSP_USE_MORE = 3_i32
    AVSP_USE_MINIMUM = 4_i32
    AVSP_USE_NONE = 5_i32
    AVSP_CUSTOM = 6_i32
  end
  enum FLYOUT_PLACEMENT
    FP_DEFAULT = 0_i32
    FP_ABOVE = 1_i32
    FP_BELOW = 2_i32
    FP_LEFT = 3_i32
    FP_RIGHT = 4_i32
  end
  enum BANNER_NOTIFICATION_EVENT
    BNE_Rendered = 0_i32
    BNE_Hovered = 1_i32
    BNE_Closed = 2_i32
    BNE_Dismissed = 3_i32
    BNE_Button1Clicked = 4_i32
    BNE_Button2Clicked = 5_i32
  end
  enum SORT_ORDER_TYPE
    SOT_DEFAULT = 0_i32
    SOT_IGNORE_FOLDERNESS = 1_i32
  end
  enum FOLDERVIEWOPTIONS
    FVO_DEFAULT = 0_i32
    FVO_VISTALAYOUT = 1_i32
    FVO_CUSTOMPOSITION = 2_i32
    FVO_CUSTOMORDERING = 4_i32
    FVO_SUPPORTHYPERLINKS = 8_i32
    FVO_NOANIMATIONS = 16_i32
    FVO_NOSCROLLTIPS = 32_i32
  end
  enum SV3CVW3_FLAGS_
    SV3CVW3_DEFAULT = 0_i32
    SV3CVW3_NONINTERACTIVE = 1_i32
    SV3CVW3_FORCEVIEWMODE = 2_i32
    SV3CVW3_FORCEFOLDERFLAGS = 4_i32
  end
  enum VPWATERMARKFLAGS
    VPWF_DEFAULT = 0_i32
    VPWF_ALPHABLEND = 1_i32
  end
  enum VPCOLORFLAGS
    VPCF_TEXT = 1_i32
    VPCF_BACKGROUND = 2_i32
    VPCF_SORTCOLUMN = 3_i32
    VPCF_SUBTEXT = 4_i32
    VPCF_TEXTBACKGROUND = 5_i32
  end
  enum DSH_FLAGS
    DSH_ALLOWDROPDESCRIPTIONTEXT = 1_i32
  end
  enum CDBURNINGEXTENSIONRET
    CDBE_RET_DEFAULT = 0_i32
    CDBE_RET_DONTRUNOTHEREXTS = 1_i32
    CDBE_RET_STOPWIZARD = 2_i32
  end
  enum CDBE_ACTIONS_
    CDBE_TYPE_MUSIC = 1_i32
    CDBE_TYPE_DATA = 2_i32
    CDBE_TYPE_ALL = -1_i32
  end
  enum NSTCSTYLE2
    NSTCS2_DEFAULT = 0_i32
    NSTCS2_INTERRUPTNOTIFICATIONS = 1_i32
    NSTCS2_SHOWNULLSPACEMENU = 2_i32
    NSTCS2_DISPLAYPADDING = 4_i32
    NSTCS2_DISPLAYPINNEDONLY = 8_i32
    NTSCS2_NOSINGLETONAUTOEXPAND = 16_i32
    NTSCS2_NEVERINSERTNONENUMERATED = 32_i32
  end
  enum NSTCEHITTEST_
    NSTCEHT_NOWHERE = 1_i32
    NSTCEHT_ONITEMICON = 2_i32
    NSTCEHT_ONITEMLABEL = 4_i32
    NSTCEHT_ONITEMINDENT = 8_i32
    NSTCEHT_ONITEMBUTTON = 16_i32
    NSTCEHT_ONITEMRIGHT = 32_i32
    NSTCEHT_ONITEMSTATEICON = 64_i32
    NSTCEHT_ONITEM = 70_i32
    NSTCEHT_ONITEMTABBUTTON = 4096_i32
  end
  enum NSTCECLICKTYPE_
    NSTCECT_LBUTTON = 1_i32
    NSTCECT_MBUTTON = 2_i32
    NSTCECT_RBUTTON = 3_i32
    NSTCECT_BUTTON = 3_i32
    NSTCECT_DBLCLICK = 4_i32
  end
  enum UNDOCK_REASON
    UR_RESOLUTION_CHANGE = 0_i32
    UR_MONITOR_DISCONNECT = 1_i32
  end
  enum CommandStateChangeConstants
    CSC_UPDATECOMMANDS = -1_i32
    CSC_NAVIGATEFORWARD = 1_i32
    CSC_NAVIGATEBACK = 2_i32
  end
  enum SecureLockIconConstants
    Securelockiconunsecure = 0_i32
    Securelockiconmixed = 1_i32
    Securelockiconsecureunknownbits = 2_i32
    Securelockiconsecure40bit = 3_i32
    Securelockiconsecure56bit = 4_i32
    Securelockiconsecurefortezza = 5_i32
    Securelockiconsecure128bit = 6_i32
  end
  enum NewProcessCauseConstants
    ProtectedModeRedirect = 1_i32
  end
  enum ShellWindowTypeConstants
    SWC_EXPLORER = 0_i32
    SWC_BROWSER = 1_i32
    SWC_3RDPARTY = 2_i32
    SWC_CALLBACK = 4_i32
    SWC_DESKTOP = 8_i32
  end
  enum ShellWindowFindWindowOptions
    SWFO_NEEDDISPATCH = 1_i32
    SWFO_INCLUDEPENDING = 2_i32
    SWFO_COOKIEPASSED = 4_i32
  end
  enum BrowserNavConstants
    Navopeninnewwindow = 1_i32
    Navnohistory = 2_i32
    Navnoreadfromcache = 4_i32
    Navnowritetocache = 8_i32
    Navallowautosearch = 16_i32
    Navbrowserbar = 32_i32
    Navhyperlink = 64_i32
    Navenforcerestricted = 128_i32
    Navnewwindowsmanaged = 256_i32
    Navuntrustedfordownload = 512_i32
    Navtrustedforactivex = 1024_i32
    Navopeninnewtab = 2048_i32
    Navopeninbackgroundtab = 4096_i32
    Navkeepwordwheeltext = 8192_i32
    Navvirtualtab = 16384_i32
    Navblockredirectsxdomain = 32768_i32
    Navopennewforegroundtab = 65536_i32
    Navtravellogscreenshot = 131072_i32
    Navdeferunload = 262144_i32
    Navspeculative = 524288_i32
    Navsuggestnewwindow = 1048576_i32
    Navsuggestnewtab = 2097152_i32
    Navreserved1 = 4194304_i32
    Navhomepagenavigate = 8388608_i32
    Navrefresh = 16777216_i32
    Navhostnavigation = 33554432_i32
    Navreserved2 = 67108864_i32
    Navreserved3 = 134217728_i32
    Navreserved4 = 268435456_i32
    Navreserved5 = 536870912_i32
    Navreserved6 = 1073741824_i32
    Navreserved7 = -2147483648_i32
  end
  enum RefreshConstants
    REFRESH_NORMAL = 0_i32
    REFRESH_IFEXPIRED = 1_i32
    REFRESH_COMPLETELY = 3_i32
  end
  enum OfflineFolderStatus
    OFS_INACTIVE = -1_i32
    OFS_ONLINE = 0_i32
    OFS_OFFLINE = 1_i32
    OFS_SERVERBACK = 2_i32
    OFS_DIRTYCACHE = 3_i32
  end
  enum ShellFolderViewOptions
    SFVVO_SHOWALLOBJECTS = 1_i32
    SFVVO_SHOWEXTENSIONS = 2_i32
    SFVVO_SHOWCOMPCOLOR = 8_i32
    SFVVO_SHOWSYSFILES = 32_i32
    SFVVO_WIN95CLASSIC = 64_i32
    SFVVO_DOUBLECLICKINWEBVIEW = 128_i32
    SFVVO_DESKTOPHTML = 512_i32
  end
  enum ShellSpecialFolderConstants
    Ssfdesktop = 0_i32
    Ssfprograms = 2_i32
    Ssfcontrols = 3_i32
    Ssfprinters = 4_i32
    Ssfpersonal = 5_i32
    Ssffavorites = 6_i32
    Ssfstartup = 7_i32
    Ssfrecent = 8_i32
    Ssfsendto = 9_i32
    Ssfbitbucket = 10_i32
    Ssfstartmenu = 11_i32
    Ssfdesktopdirectory = 16_i32
    Ssfdrives = 17_i32
    Ssfnetwork = 18_i32
    Ssfnethood = 19_i32
    Ssffonts = 20_i32
    Ssftemplates = 21_i32
    Ssfcommonstartmenu = 22_i32
    Ssfcommonprograms = 23_i32
    Ssfcommonstartup = 24_i32
    Ssfcommondesktopdir = 25_i32
    Ssfappdata = 26_i32
    Ssfprinthood = 27_i32
    Ssflocalappdata = 28_i32
    Ssfaltstartup = 29_i32
    Ssfcommonaltstartup = 30_i32
    Ssfcommonfavorites = 31_i32
    Ssfinternetcache = 32_i32
    Ssfcookies = 33_i32
    Ssfhistory = 34_i32
    Ssfcommonappdata = 35_i32
    Ssfwindows = 36_i32
    Ssfsystem = 37_i32
    Ssfprogramfiles = 38_i32
    Ssfmypictures = 39_i32
    Ssfprofile = 40_i32
    Ssfsystemx86 = 41_i32
    Ssfprogramfilesx86 = 48_i32
  end
  enum AUTOCOMPLETEOPTIONS
    ACO_NONE = 0_i32
    ACO_AUTOSUGGEST = 1_i32
    ACO_AUTOAPPEND = 2_i32
    ACO_SEARCH = 4_i32
    ACO_FILTERPREFIXES = 8_i32
    ACO_USETAB = 16_i32
    ACO_UPDOWNKEYDROPSLIST = 32_i32
    ACO_RTLREADING = 64_i32
    ACO_WORD_FILTER = 128_i32
    ACO_NOPREFIXFILTERING = 256_i32
  end
  enum ACENUMOPTION
    ACEO_NONE = 0_i32
    ACEO_MOSTRECENTFIRST = 1_i32
    ACEO_FIRSTUNUSED = 65536_i32
  end
  enum SHELL_LINK_DATA_FLAGS
    SLDF_DEFAULT = 0_i32
    SLDF_HAS_ID_LIST = 1_i32
    SLDF_HAS_LINK_INFO = 2_i32
    SLDF_HAS_NAME = 4_i32
    SLDF_HAS_RELPATH = 8_i32
    SLDF_HAS_WORKINGDIR = 16_i32
    SLDF_HAS_ARGS = 32_i32
    SLDF_HAS_ICONLOCATION = 64_i32
    SLDF_UNICODE = 128_i32
    SLDF_FORCE_NO_LINKINFO = 256_i32
    SLDF_HAS_EXP_SZ = 512_i32
    SLDF_RUN_IN_SEPARATE = 1024_i32
    SLDF_HAS_DARWINID = 4096_i32
    SLDF_RUNAS_USER = 8192_i32
    SLDF_HAS_EXP_ICON_SZ = 16384_i32
    SLDF_NO_PIDL_ALIAS = 32768_i32
    SLDF_FORCE_UNCNAME = 65536_i32
    SLDF_RUN_WITH_SHIMLAYER = 131072_i32
    SLDF_FORCE_NO_LINKTRACK = 262144_i32
    SLDF_ENABLE_TARGET_METADATA = 524288_i32
    SLDF_DISABLE_LINK_PATH_TRACKING = 1048576_i32
    SLDF_DISABLE_KNOWNFOLDER_RELATIVE_TRACKING = 2097152_i32
    SLDF_NO_KF_ALIAS = 4194304_i32
    SLDF_ALLOW_LINK_TO_LINK = 8388608_i32
    SLDF_UNALIAS_ON_SAVE = 16777216_i32
    SLDF_PREFER_ENVIRONMENT_PATH = 33554432_i32
    SLDF_KEEP_LOCAL_IDLIST_FOR_UNC_TARGET = 67108864_i32
    SLDF_PERSIST_VOLUME_ID_RELATIVE = 134217728_i32
    SLDF_VALID = 268433407_i32
    SLDF_RESERVED = -2147483648_i32
  end
  enum SHGFP_TYPE
    SHGFP_TYPE_CURRENT = 0_i32
    SHGFP_TYPE_DEFAULT = 1_i32
  end
  enum KNOWN_FOLDER_FLAG
    KF_FLAG_DEFAULT = 0_i32
    KF_FLAG_FORCE_APP_DATA_REDIRECTION = 524288_i32
    KF_FLAG_RETURN_FILTER_REDIRECTION_TARGET = 262144_i32
    KF_FLAG_FORCE_PACKAGE_REDIRECTION = 131072_i32
    KF_FLAG_NO_PACKAGE_REDIRECTION = 65536_i32
    KF_FLAG_FORCE_APPCONTAINER_REDIRECTION = 131072_i32
    KF_FLAG_NO_APPCONTAINER_REDIRECTION = 65536_i32
    KF_FLAG_CREATE = 32768_i32
    KF_FLAG_DONT_VERIFY = 16384_i32
    KF_FLAG_DONT_UNEXPAND = 8192_i32
    KF_FLAG_NO_ALIAS = 4096_i32
    KF_FLAG_INIT = 2048_i32
    KF_FLAG_DEFAULT_PATH = 1024_i32
    KF_FLAG_NOT_PARENT_RELATIVE = 512_i32
    KF_FLAG_SIMPLE_IDLIST = 256_i32
    KF_FLAG_ALIAS_ONLY = -2147483648_i32
  end
  enum AUTOCOMPLETELISTOPTIONS
    ACLO_NONE = 0_i32
    ACLO_CURRENTDIR = 1_i32
    ACLO_MYCOMPUTER = 2_i32
    ACLO_DESKTOP = 4_i32
    ACLO_FAVORITES = 8_i32
    ACLO_FILESYSONLY = 16_i32
    ACLO_FILESYSDIRS = 32_i32
    ACLO_VIRTUALNAMESPACE = 64_i32
  end
  enum FD_FLAGS
    FD_CLSID = 1_i32
    FD_SIZEPOINT = 2_i32
    FD_ATTRIBUTES = 4_i32
    FD_CREATETIME = 8_i32
    FD_ACCESSTIME = 16_i32
    FD_WRITESTIME = 32_i32
    FD_FILESIZE = 64_i32
    FD_PROGRESSUI = 16384_i32
    FD_LINKUI = 32768_i32
    FD_UNICODE = -2147483648_i32
  end
  enum DROPIMAGETYPE
    DROPIMAGE_INVALID = -1_i32
    DROPIMAGE_NONE = 0_i32
    DROPIMAGE_COPY = 1_i32
    DROPIMAGE_MOVE = 2_i32
    DROPIMAGE_LINK = 4_i32
    DROPIMAGE_LABEL = 6_i32
    DROPIMAGE_WARNING = 7_i32
    DROPIMAGE_NOIMAGE = 8_i32
  end
  enum SHARD
    SHARD_PIDL = 1_i32
    SHARD_PATHA = 2_i32
    SHARD_PATHW = 3_i32
    SHARD_APPIDINFO = 4_i32
    SHARD_APPIDINFOIDLIST = 5_i32
    SHARD_LINK = 6_i32
    SHARD_APPIDINFOLINK = 7_i32
    SHARD_SHELLITEM = 8_i32
  end
  enum SCNRT_STATUS
    SCNRT_ENABLE = 0_i32
    SCNRT_DISABLE = 1_i32
  end
  enum RESTRICTIONS
    REST_NONE = 0_i32
    REST_NORUN = 1_i32
    REST_NOCLOSE = 2_i32
    REST_NOSAVESET = 4_i32
    REST_NOFILEMENU = 8_i32
    REST_NOSETFOLDERS = 16_i32
    REST_NOSETTASKBAR = 32_i32
    REST_NODESKTOP = 64_i32
    REST_NOFIND = 128_i32
    REST_NODRIVES = 256_i32
    REST_NODRIVEAUTORUN = 512_i32
    REST_NODRIVETYPEAUTORUN = 1024_i32
    REST_NONETHOOD = 2048_i32
    REST_STARTBANNER = 4096_i32
    REST_RESTRICTRUN = 8192_i32
    REST_NOPRINTERTABS = 16384_i32
    REST_NOPRINTERDELETE = 32768_i32
    REST_NOPRINTERADD = 65536_i32
    REST_NOSTARTMENUSUBFOLDERS = 131072_i32
    REST_MYDOCSONNET = 262144_i32
    REST_NOEXITTODOS = 524288_i32
    REST_ENFORCESHELLEXTSECURITY = 1048576_i32
    REST_LINKRESOLVEIGNORELINKINFO = 2097152_i32
    REST_NOCOMMONGROUPS = 4194304_i32
    REST_SEPARATEDESKTOPPROCESS = 8388608_i32
    REST_NOWEB = 16777216_i32
    REST_NOTRAYCONTEXTMENU = 33554432_i32
    REST_NOVIEWCONTEXTMENU = 67108864_i32
    REST_NONETCONNECTDISCONNECT = 134217728_i32
    REST_STARTMENULOGOFF = 268435456_i32
    REST_NOSETTINGSASSIST = 536870912_i32
    REST_NOINTERNETICON = 1073741825_i32
    REST_NORECENTDOCSHISTORY = 1073741826_i32
    REST_NORECENTDOCSMENU = 1073741827_i32
    REST_NOACTIVEDESKTOP = 1073741828_i32
    REST_NOACTIVEDESKTOPCHANGES = 1073741829_i32
    REST_NOFAVORITESMENU = 1073741830_i32
    REST_CLEARRECENTDOCSONEXIT = 1073741831_i32
    REST_CLASSICSHELL = 1073741832_i32
    REST_NOCUSTOMIZEWEBVIEW = 1073741833_i32
    REST_NOHTMLWALLPAPER = 1073741840_i32
    REST_NOCHANGINGWALLPAPER = 1073741841_i32
    REST_NODESKCOMP = 1073741842_i32
    REST_NOADDDESKCOMP = 1073741843_i32
    REST_NODELDESKCOMP = 1073741844_i32
    REST_NOCLOSEDESKCOMP = 1073741845_i32
    REST_NOCLOSE_DRAGDROPBAND = 1073741846_i32
    REST_NOMOVINGBAND = 1073741847_i32
    REST_NOEDITDESKCOMP = 1073741848_i32
    REST_NORESOLVESEARCH = 1073741849_i32
    REST_NORESOLVETRACK = 1073741850_i32
    REST_FORCECOPYACLWITHFILE = 1073741851_i32
    REST_NOFORGETSOFTWAREUPDATE = 1073741853_i32
    REST_NOSETACTIVEDESKTOP = 1073741854_i32
    REST_NOUPDATEWINDOWS = 1073741855_i32
    REST_NOCHANGESTARMENU = 1073741856_i32
    REST_NOFOLDEROPTIONS = 1073741857_i32
    REST_HASFINDCOMPUTERS = 1073741858_i32
    REST_INTELLIMENUS = 1073741859_i32
    REST_RUNDLGMEMCHECKBOX = 1073741860_i32
    REST_ARP_ShowPostSetup = 1073741861_i32
    REST_NOCSC = 1073741862_i32
    REST_NOCONTROLPANEL = 1073741863_i32
    REST_ENUMWORKGROUP = 1073741864_i32
    REST_ARP_NOARP = 1073741865_i32
    REST_ARP_NOREMOVEPAGE = 1073741866_i32
    REST_ARP_NOADDPAGE = 1073741867_i32
    REST_ARP_NOWINSETUPPAGE = 1073741868_i32
    REST_GREYMSIADS = 1073741869_i32
    REST_NOCHANGEMAPPEDDRIVELABEL = 1073741870_i32
    REST_NOCHANGEMAPPEDDRIVECOMMENT = 1073741871_i32
    REST_MaxRecentDocs = 1073741872_i32
    REST_NONETWORKCONNECTIONS = 1073741873_i32
    REST_FORCESTARTMENULOGOFF = 1073741874_i32
    REST_NOWEBVIEW = 1073741875_i32
    REST_NOCUSTOMIZETHISFOLDER = 1073741876_i32
    REST_NOENCRYPTION = 1073741877_i32
    REST_DONTSHOWSUPERHIDDEN = 1073741879_i32
    REST_NOSHELLSEARCHBUTTON = 1073741880_i32
    REST_NOHARDWARETAB = 1073741881_i32
    REST_NORUNASINSTALLPROMPT = 1073741882_i32
    REST_PROMPTRUNASINSTALLNETPATH = 1073741883_i32
    REST_NOMANAGEMYCOMPUTERVERB = 1073741884_i32
    REST_DISALLOWRUN = 1073741886_i32
    REST_NOWELCOMESCREEN = 1073741887_i32
    REST_RESTRICTCPL = 1073741888_i32
    REST_DISALLOWCPL = 1073741889_i32
    REST_NOSMBALLOONTIP = 1073741890_i32
    REST_NOSMHELP = 1073741891_i32
    REST_NOWINKEYS = 1073741892_i32
    REST_NOENCRYPTONMOVE = 1073741893_i32
    REST_NOLOCALMACHINERUN = 1073741894_i32
    REST_NOCURRENTUSERRUN = 1073741895_i32
    REST_NOLOCALMACHINERUNONCE = 1073741896_i32
    REST_NOCURRENTUSERRUNONCE = 1073741897_i32
    REST_FORCEACTIVEDESKTOPON = 1073741898_i32
    REST_NOVIEWONDRIVE = 1073741900_i32
    REST_NONETCRAWL = 1073741901_i32
    REST_NOSHAREDDOCUMENTS = 1073741902_i32
    REST_NOSMMYDOCS = 1073741903_i32
    REST_NOSMMYPICS = 1073741904_i32
    REST_ALLOWBITBUCKDRIVES = 1073741905_i32
    REST_NONLEGACYSHELLMODE = 1073741906_i32
    REST_NOCONTROLPANELBARRICADE = 1073741907_i32
    REST_NOSTARTPAGE = 1073741908_i32
    REST_NOAUTOTRAYNOTIFY = 1073741909_i32
    REST_NOTASKGROUPING = 1073741910_i32
    REST_NOCDBURNING = 1073741911_i32
    REST_MYCOMPNOPROP = 1073741912_i32
    REST_MYDOCSNOPROP = 1073741913_i32
    REST_NOSTARTPANEL = 1073741914_i32
    REST_NODISPLAYAPPEARANCEPAGE = 1073741915_i32
    REST_NOTHEMESTAB = 1073741916_i32
    REST_NOVISUALSTYLECHOICE = 1073741917_i32
    REST_NOSIZECHOICE = 1073741918_i32
    REST_NOCOLORCHOICE = 1073741919_i32
    REST_SETVISUALSTYLE = 1073741920_i32
    REST_STARTRUNNOHOMEPATH = 1073741921_i32
    REST_NOUSERNAMEINSTARTPANEL = 1073741922_i32
    REST_NOMYCOMPUTERICON = 1073741923_i32
    REST_NOSMNETWORKPLACES = 1073741924_i32
    REST_NOSMPINNEDLIST = 1073741925_i32
    REST_NOSMMYMUSIC = 1073741926_i32
    REST_NOSMEJECTPC = 1073741927_i32
    REST_NOSMMOREPROGRAMS = 1073741928_i32
    REST_NOSMMFUPROGRAMS = 1073741929_i32
    REST_NOTRAYITEMSDISPLAY = 1073741930_i32
    REST_NOTOOLBARSONTASKBAR = 1073741931_i32
    REST_NOSMCONFIGUREPROGRAMS = 1073741935_i32
    REST_HIDECLOCK = 1073741936_i32
    REST_NOLOWDISKSPACECHECKS = 1073741937_i32
    REST_NOENTIRENETWORK = 1073741938_i32
    REST_NODESKTOPCLEANUP = 1073741939_i32
    REST_BITBUCKNUKEONDELETE = 1073741940_i32
    REST_BITBUCKCONFIRMDELETE = 1073741941_i32
    REST_BITBUCKNOPROP = 1073741942_i32
    REST_NODISPBACKGROUND = 1073741943_i32
    REST_NODISPSCREENSAVEPG = 1073741944_i32
    REST_NODISPSETTINGSPG = 1073741945_i32
    REST_NODISPSCREENSAVEPREVIEW = 1073741946_i32
    REST_NODISPLAYCPL = 1073741947_i32
    REST_HIDERUNASVERB = 1073741948_i32
    REST_NOTHUMBNAILCACHE = 1073741949_i32
    REST_NOSTRCMPLOGICAL = 1073741950_i32
    REST_NOPUBLISHWIZARD = 1073741951_i32
    REST_NOONLINEPRINTSWIZARD = 1073741952_i32
    REST_NOWEBSERVICES = 1073741953_i32
    REST_ALLOWUNHASHEDWEBVIEW = 1073741954_i32
    REST_ALLOWLEGACYWEBVIEW = 1073741955_i32
    REST_REVERTWEBVIEWSECURITY = 1073741956_i32
    REST_INHERITCONSOLEHANDLES = 1073741958_i32
    REST_NOREMOTERECURSIVEEVENTS = 1073741961_i32
    REST_NOREMOTECHANGENOTIFY = 1073741969_i32
    REST_NOENUMENTIRENETWORK = 1073741971_i32
    REST_NOINTERNETOPENWITH = 1073741973_i32
    REST_DONTRETRYBADNETNAME = 1073741979_i32
    REST_ALLOWFILECLSIDJUNCTIONS = 1073741980_i32
    REST_NOUPNPINSTALL = 1073741981_i32
    REST_ARP_DONTGROUPPATCHES = 1073741996_i32
    REST_ARP_NOCHOOSEPROGRAMSPAGE = 1073741997_i32
    REST_NODISCONNECT = 1090519041_i32
    REST_NOSECURITY = 1090519042_i32
    REST_NOFILEASSOCIATE = 1090519043_i32
    REST_ALLOWCOMMENTTOGGLE = 1090519044_i32
  end
  @[Flags]
  enum OPEN_AS_INFO_FLAGS : UInt32
    OAIF_ALLOW_REGISTRATION = 1_u32
    OAIF_REGISTER_EXT = 2_u32
    OAIF_EXEC = 4_u32
    OAIF_FORCE_REGISTRATION = 8_u32
    OAIF_HIDE_REGISTRATION = 32_u32
    OAIF_URL_PROTOCOL = 64_u32
    OAIF_FILE_IS_URI = 128_u32
  end
  enum IESHORTCUTFLAGS
    IESHORTCUT_NEWBROWSER = 1_i32
    IESHORTCUT_OPENNEWTAB = 2_i32
    IESHORTCUT_FORCENAVIGATE = 4_i32
    IESHORTCUT_BACKGROUNDTAB = 8_i32
  end
  enum DISPLAY_DEVICE_TYPE
    DEVICE_PRIMARY = 0_i32
    DEVICE_IMMERSIVE = 1_i32
  end
  @[Flags]
  enum SCALE_CHANGE_FLAGS : UInt32
    SCF_VALUE_NONE = 0_u32
    SCF_SCALE = 1_u32
    SCF_PHYSICAL = 2_u32
  end
  enum SHELL_UI_COMPONENT
    SHELL_UI_COMPONENT_TASKBARS = 0_i32
    SHELL_UI_COMPONENT_NOTIFICATIONAREA = 1_i32
    SHELL_UI_COMPONENT_DESKBAND = 2_i32
  end
  enum ASSOCCLASS
    ASSOCCLASS_SHELL_KEY = 0_i32
    ASSOCCLASS_PROGID_KEY = 1_i32
    ASSOCCLASS_PROGID_STR = 2_i32
    ASSOCCLASS_CLSID_KEY = 3_i32
    ASSOCCLASS_CLSID_STR = 4_i32
    ASSOCCLASS_APP_KEY = 5_i32
    ASSOCCLASS_APP_STR = 6_i32
    ASSOCCLASS_SYSTEM_STR = 7_i32
    ASSOCCLASS_FOLDER = 8_i32
    ASSOCCLASS_STAR = 9_i32
    ASSOCCLASS_FIXED_PROGID_STR = 10_i32
    ASSOCCLASS_PROTOCOL_STR = 11_i32
  end
  enum QUERY_USER_NOTIFICATION_STATE
    QUNS_NOT_PRESENT = 1_i32
    QUNS_BUSY = 2_i32
    QUNS_RUNNING_D3D_FULL_SCREEN = 3_i32
    QUNS_PRESENTATION_MODE = 4_i32
    QUNS_ACCEPTS_NOTIFICATIONS = 5_i32
    QUNS_QUIET_TIME = 6_i32
    QUNS_APP = 7_i32
  end
  enum SHSTOCKICONID
    SIID_DOCNOASSOC = 0_i32
    SIID_DOCASSOC = 1_i32
    SIID_APPLICATION = 2_i32
    SIID_FOLDER = 3_i32
    SIID_FOLDEROPEN = 4_i32
    SIID_DRIVE525 = 5_i32
    SIID_DRIVE35 = 6_i32
    SIID_DRIVEREMOVE = 7_i32
    SIID_DRIVEFIXED = 8_i32
    SIID_DRIVENET = 9_i32
    SIID_DRIVENETDISABLED = 10_i32
    SIID_DRIVECD = 11_i32
    SIID_DRIVERAM = 12_i32
    SIID_WORLD = 13_i32
    SIID_SERVER = 15_i32
    SIID_PRINTER = 16_i32
    SIID_MYNETWORK = 17_i32
    SIID_FIND = 22_i32
    SIID_HELP = 23_i32
    SIID_SHARE = 28_i32
    SIID_LINK = 29_i32
    SIID_SLOWFILE = 30_i32
    SIID_RECYCLER = 31_i32
    SIID_RECYCLERFULL = 32_i32
    SIID_MEDIACDAUDIO = 40_i32
    SIID_LOCK = 47_i32
    SIID_AUTOLIST = 49_i32
    SIID_PRINTERNET = 50_i32
    SIID_SERVERSHARE = 51_i32
    SIID_PRINTERFAX = 52_i32
    SIID_PRINTERFAXNET = 53_i32
    SIID_PRINTERFILE = 54_i32
    SIID_STACK = 55_i32
    SIID_MEDIASVCD = 56_i32
    SIID_STUFFEDFOLDER = 57_i32
    SIID_DRIVEUNKNOWN = 58_i32
    SIID_DRIVEDVD = 59_i32
    SIID_MEDIADVD = 60_i32
    SIID_MEDIADVDRAM = 61_i32
    SIID_MEDIADVDRW = 62_i32
    SIID_MEDIADVDR = 63_i32
    SIID_MEDIADVDROM = 64_i32
    SIID_MEDIACDAUDIOPLUS = 65_i32
    SIID_MEDIACDRW = 66_i32
    SIID_MEDIACDR = 67_i32
    SIID_MEDIACDBURN = 68_i32
    SIID_MEDIABLANKCD = 69_i32
    SIID_MEDIACDROM = 70_i32
    SIID_AUDIOFILES = 71_i32
    SIID_IMAGEFILES = 72_i32
    SIID_VIDEOFILES = 73_i32
    SIID_MIXEDFILES = 74_i32
    SIID_FOLDERBACK = 75_i32
    SIID_FOLDERFRONT = 76_i32
    SIID_SHIELD = 77_i32
    SIID_WARNING = 78_i32
    SIID_INFO = 79_i32
    SIID_ERROR = 80_i32
    SIID_KEY = 81_i32
    SIID_SOFTWARE = 82_i32
    SIID_RENAME = 83_i32
    SIID_DELETE = 84_i32
    SIID_MEDIAAUDIODVD = 85_i32
    SIID_MEDIAMOVIEDVD = 86_i32
    SIID_MEDIAENHANCEDCD = 87_i32
    SIID_MEDIAENHANCEDDVD = 88_i32
    SIID_MEDIAHDDVD = 89_i32
    SIID_MEDIABLURAY = 90_i32
    SIID_MEDIAVCD = 91_i32
    SIID_MEDIADVDPLUSR = 92_i32
    SIID_MEDIADVDPLUSRW = 93_i32
    SIID_DESKTOPPC = 94_i32
    SIID_MOBILEPC = 95_i32
    SIID_USERS = 96_i32
    SIID_MEDIASMARTMEDIA = 97_i32
    SIID_MEDIACOMPACTFLASH = 98_i32
    SIID_DEVICECELLPHONE = 99_i32
    SIID_DEVICECAMERA = 100_i32
    SIID_DEVICEVIDEOCAMERA = 101_i32
    SIID_DEVICEAUDIOPLAYER = 102_i32
    SIID_NETWORKCONNECT = 103_i32
    SIID_INTERNET = 104_i32
    SIID_ZIPFILE = 105_i32
    SIID_SETTINGS = 106_i32
    SIID_DRIVEHDDVD = 132_i32
    SIID_DRIVEBD = 133_i32
    SIID_MEDIAHDDVDROM = 134_i32
    SIID_MEDIAHDDVDR = 135_i32
    SIID_MEDIAHDDVDRAM = 136_i32
    SIID_MEDIABDROM = 137_i32
    SIID_MEDIABDR = 138_i32
    SIID_MEDIABDRE = 139_i32
    SIID_CLUSTEREDDRIVE = 140_i32
    SIID_MAX_ICONS = 181_i32
  end
  enum SFBS_FLAGS
    SFBS_FLAGS_ROUND_TO_NEAREST_DISPLAYED_DIGIT = 1_i32
    SFBS_FLAGS_TRUNCATE_UNDISPLAYED_DECIMAL_DIGITS = 2_i32
  end
  enum URL_SCHEME
    URL_SCHEME_INVALID = -1_i32
    URL_SCHEME_UNKNOWN = 0_i32
    URL_SCHEME_FTP = 1_i32
    URL_SCHEME_HTTP = 2_i32
    URL_SCHEME_GOPHER = 3_i32
    URL_SCHEME_MAILTO = 4_i32
    URL_SCHEME_NEWS = 5_i32
    URL_SCHEME_NNTP = 6_i32
    URL_SCHEME_TELNET = 7_i32
    URL_SCHEME_WAIS = 8_i32
    URL_SCHEME_FILE = 9_i32
    URL_SCHEME_MK = 10_i32
    URL_SCHEME_HTTPS = 11_i32
    URL_SCHEME_SHELL = 12_i32
    URL_SCHEME_SNEWS = 13_i32
    URL_SCHEME_LOCAL = 14_i32
    URL_SCHEME_JAVASCRIPT = 15_i32
    URL_SCHEME_VBSCRIPT = 16_i32
    URL_SCHEME_ABOUT = 17_i32
    URL_SCHEME_RES = 18_i32
    URL_SCHEME_MSSHELLROOTED = 19_i32
    URL_SCHEME_MSSHELLIDLIST = 20_i32
    URL_SCHEME_MSHELP = 21_i32
    URL_SCHEME_MSSHELLDEVICE = 22_i32
    URL_SCHEME_WILDCARD = 23_i32
    URL_SCHEME_SEARCH_MS = 24_i32
    URL_SCHEME_SEARCH = 25_i32
    URL_SCHEME_KNOWNFOLDER = 26_i32
    URL_SCHEME_MAXVALUE = 27_i32
  end
  enum URL_PART
    URL_PART_NONE = 0_i32
    URL_PART_SCHEME = 1_i32
    URL_PART_HOSTNAME = 2_i32
    URL_PART_USERNAME = 3_i32
    URL_PART_PASSWORD = 4_i32
    URL_PART_PORT = 5_i32
    URL_PART_QUERY = 6_i32
  end
  enum URLIS
    URLIS_URL = 0_i32
    URLIS_OPAQUE = 1_i32
    URLIS_NOHISTORY = 2_i32
    URLIS_FILEURL = 3_i32
    URLIS_APPLIABLE = 4_i32
    URLIS_DIRECTORY = 5_i32
    URLIS_HASQUERY = 6_i32
  end
  enum SHREGDEL_FLAGS
    SHREGDEL_DEFAULT = 0_i32
    SHREGDEL_HKCU = 1_i32
    SHREGDEL_HKLM = 16_i32
    SHREGDEL_BOTH = 17_i32
  end
  enum SHREGENUM_FLAGS
    SHREGENUM_DEFAULT = 0_i32
    SHREGENUM_HKCU = 1_i32
    SHREGENUM_HKLM = 16_i32
    SHREGENUM_BOTH = 17_i32
  end
  enum ASSOCSTR
    ASSOCSTR_COMMAND = 1_i32
    ASSOCSTR_EXECUTABLE = 2_i32
    ASSOCSTR_FRIENDLYDOCNAME = 3_i32
    ASSOCSTR_FRIENDLYAPPNAME = 4_i32
    ASSOCSTR_NOOPEN = 5_i32
    ASSOCSTR_SHELLNEWVALUE = 6_i32
    ASSOCSTR_DDECOMMAND = 7_i32
    ASSOCSTR_DDEIFEXEC = 8_i32
    ASSOCSTR_DDEAPPLICATION = 9_i32
    ASSOCSTR_DDETOPIC = 10_i32
    ASSOCSTR_INFOTIP = 11_i32
    ASSOCSTR_QUICKTIP = 12_i32
    ASSOCSTR_TILEINFO = 13_i32
    ASSOCSTR_CONTENTTYPE = 14_i32
    ASSOCSTR_DEFAULTICON = 15_i32
    ASSOCSTR_SHELLEXTENSION = 16_i32
    ASSOCSTR_DROPTARGET = 17_i32
    ASSOCSTR_DELEGATEEXECUTE = 18_i32
    ASSOCSTR_SUPPORTED_URI_PROTOCOLS = 19_i32
    ASSOCSTR_PROGID = 20_i32
    ASSOCSTR_APPID = 21_i32
    ASSOCSTR_APPPUBLISHER = 22_i32
    ASSOCSTR_APPICONREFERENCE = 23_i32
    ASSOCSTR_MAX = 24_i32
  end
  enum ASSOCKEY
    ASSOCKEY_SHELLEXECCLASS = 1_i32
    ASSOCKEY_APP = 2_i32
    ASSOCKEY_CLASS = 3_i32
    ASSOCKEY_BASECLASS = 4_i32
    ASSOCKEY_MAX = 5_i32
  end
  enum ASSOCDATA
    ASSOCDATA_MSIDESCRIPTOR = 1_i32
    ASSOCDATA_NOACTIVATEHANDLER = 2_i32
    ASSOCDATA_UNUSED1 = 3_i32
    ASSOCDATA_HASPERUSERASSOC = 4_i32
    ASSOCDATA_EDITFLAGS = 5_i32
    ASSOCDATA_VALUE = 6_i32
    ASSOCDATA_MAX = 7_i32
  end
  enum ASSOCENUM
    ASSOCENUM_NONE = 0_i32
  end
  enum FILETYPEATTRIBUTEFLAGS
    FTA_None = 0_i32
    FTA_Exclude = 1_i32
    FTA_Show = 2_i32
    FTA_HasExtension = 4_i32
    FTA_NoEdit = 8_i32
    FTA_NoRemove = 16_i32
    FTA_NoNewVerb = 32_i32
    FTA_NoEditVerb = 64_i32
    FTA_NoRemoveVerb = 128_i32
    FTA_NoEditDesc = 256_i32
    FTA_NoEditIcon = 512_i32
    FTA_NoEditDflt = 1024_i32
    FTA_NoEditVerbCmd = 2048_i32
    FTA_NoEditVerbExe = 4096_i32
    FTA_NoDDE = 8192_i32
    FTA_NoEditMIME = 32768_i32
    FTA_OpenIsSafe = 65536_i32
    FTA_AlwaysUnsafe = 131072_i32
    FTA_NoRecentDocs = 1048576_i32
    FTA_SafeForElevation = 2097152_i32
    FTA_AlwaysUseDirectInvoke = 4194304_i32
  end
  enum SHGLOBALCOUNTER
    GLOBALCOUNTER_SEARCHMANAGER = 0_i32
    GLOBALCOUNTER_SEARCHOPTIONS = 1_i32
    GLOBALCOUNTER_FOLDERSETTINGSCHANGE = 2_i32
    GLOBALCOUNTER_RATINGS = 3_i32
    GLOBALCOUNTER_APPROVEDSITES = 4_i32
    GLOBALCOUNTER_RESTRICTIONS = 5_i32
    GLOBALCOUNTER_SHELLSETTINGSCHANGED = 6_i32
    GLOBALCOUNTER_SYSTEMPIDLCHANGE = 7_i32
    GLOBALCOUNTER_OVERLAYMANAGER = 8_i32
    GLOBALCOUNTER_QUERYASSOCIATIONS = 9_i32
    GLOBALCOUNTER_IESESSIONS = 10_i32
    GLOBALCOUNTER_IEONLY_SESSIONS = 11_i32
    GLOBALCOUNTER_APPLICATION_DESTINATIONS = 12_i32
    UNUSED_RECYCLE_WAS_GLOBALCOUNTER_CSCSYNCINPROGRESS__ = 13_i32
    GLOBALCOUNTER_BITBUCKETNUMDELETERS = 14_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_SHARES = 15_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_A = 16_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_B = 17_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_C = 18_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_D = 19_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_E = 20_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_F = 21_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_G = 22_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_H = 23_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_I = 24_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_J = 25_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_K = 26_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_L = 27_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_M = 28_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_N = 29_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_O = 30_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_P = 31_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Q = 32_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_R = 33_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_S = 34_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_T = 35_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_U = 36_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_V = 37_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_W = 38_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_X = 39_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Y = 40_i32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Z = 41_i32
    UNUSED_RECYCLE_WAS_GLOBALCOUNTER_RECYCLEDIRTYCOUNT_SERVERDRIVE__ = 42_i32
    UNUSED_RECYCLE_WAS_GLOBALCOUNTER_RECYCLEGLOBALDIRTYCOUNT__ = 43_i32
    GLOBALCOUNTER_RECYCLEBINENUM = 44_i32
    GLOBALCOUNTER_RECYCLEBINCORRUPTED = 45_i32
    GLOBALCOUNTER_RATINGS_STATECOUNTER = 46_i32
    GLOBALCOUNTER_PRIVATE_PROFILE_CACHE = 47_i32
    GLOBALCOUNTER_INTERNETTOOLBAR_LAYOUT = 48_i32
    GLOBALCOUNTER_FOLDERDEFINITION_CACHE = 49_i32
    GLOBALCOUNTER_COMMONPLACES_LIST_CACHE = 50_i32
    GLOBALCOUNTER_PRIVATE_PROFILE_CACHE_MACHINEWIDE = 51_i32
    GLOBALCOUNTER_ASSOCCHANGED = 52_i32
    GLOBALCOUNTER_APP_ITEMS_STATE_STORE_CACHE = 53_i32
    GLOBALCOUNTER_SETTINGSYNC_ENABLED = 54_i32
    GLOBALCOUNTER_APPSFOLDER_FILETYPEASSOCIATION_COUNTER = 55_i32
    GLOBALCOUNTER_USERINFOCHANGED = 56_i32
    GLOBALCOUNTER_SYNC_ENGINE_INFORMATION_CACHE_MACHINEWIDE = 57_i32
    GLOBALCOUNTER_BANNERS_DATAMODEL_CACHE_MACHINEWIDE = 58_i32
    GLOBALCOUNTER_MAXIMUMVALUE = 59_i32
  end
  enum APPINFODATAFLAGS
    AIM_DISPLAYNAME = 1_i32
    AIM_VERSION = 2_i32
    AIM_PUBLISHER = 4_i32
    AIM_PRODUCTID = 8_i32
    AIM_REGISTEREDOWNER = 16_i32
    AIM_REGISTEREDCOMPANY = 32_i32
    AIM_LANGUAGE = 64_i32
    AIM_SUPPORTURL = 128_i32
    AIM_SUPPORTTELEPHONE = 256_i32
    AIM_HELPLINK = 512_i32
    AIM_INSTALLLOCATION = 1024_i32
    AIM_INSTALLSOURCE = 2048_i32
    AIM_INSTALLDATE = 4096_i32
    AIM_CONTACT = 16384_i32
    AIM_COMMENTS = 32768_i32
    AIM_IMAGE = 131072_i32
    AIM_READMEURL = 262144_i32
    AIM_UPDATEINFOURL = 524288_i32
  end
  enum APPACTIONFLAGS
    APPACTION_INSTALL = 1_i32
    APPACTION_UNINSTALL = 2_i32
    APPACTION_MODIFY = 4_i32
    APPACTION_REPAIR = 8_i32
    APPACTION_UPGRADE = 16_i32
    APPACTION_CANGETSIZE = 32_i32
    APPACTION_MODIFYREMOVE = 128_i32
    APPACTION_ADDLATER = 256_i32
    APPACTION_UNSCHEDULE = 512_i32
  end
  enum PUBAPPINFOFLAGS
    PAI_SOURCE = 1_i32
    PAI_ASSIGNEDTIME = 2_i32
    PAI_PUBLISHEDTIME = 4_i32
    PAI_SCHEDULEDTIME = 8_i32
    PAI_EXPIRETIME = 16_i32
  end
  enum CREDENTIAL_PROVIDER_USAGE_SCENARIO
    CPUS_INVALID = 0_i32
    CPUS_LOGON = 1_i32
    CPUS_UNLOCK_WORKSTATION = 2_i32
    CPUS_CHANGE_PASSWORD = 3_i32
    CPUS_CREDUI = 4_i32
    CPUS_PLAP = 5_i32
  end
  enum CREDENTIAL_PROVIDER_FIELD_TYPE
    CPFT_INVALID = 0_i32
    CPFT_LARGE_TEXT = 1_i32
    CPFT_SMALL_TEXT = 2_i32
    CPFT_COMMAND_LINK = 3_i32
    CPFT_EDIT_TEXT = 4_i32
    CPFT_PASSWORD_TEXT = 5_i32
    CPFT_TILE_IMAGE = 6_i32
    CPFT_CHECKBOX = 7_i32
    CPFT_COMBOBOX = 8_i32
    CPFT_SUBMIT_BUTTON = 9_i32
  end
  enum CREDENTIAL_PROVIDER_FIELD_STATE
    CPFS_HIDDEN = 0_i32
    CPFS_DISPLAY_IN_SELECTED_TILE = 1_i32
    CPFS_DISPLAY_IN_DESELECTED_TILE = 2_i32
    CPFS_DISPLAY_IN_BOTH = 3_i32
  end
  enum CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE
    CPFIS_NONE = 0_i32
    CPFIS_READONLY = 1_i32
    CPFIS_DISABLED = 2_i32
    CPFIS_FOCUSED = 3_i32
  end
  enum CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE
    CPGSR_NO_CREDENTIAL_NOT_FINISHED = 0_i32
    CPGSR_NO_CREDENTIAL_FINISHED = 1_i32
    CPGSR_RETURN_CREDENTIAL_FINISHED = 2_i32
    CPGSR_RETURN_NO_CREDENTIAL_FINISHED = 3_i32
  end
  enum CREDENTIAL_PROVIDER_STATUS_ICON
    CPSI_NONE = 0_i32
    CPSI_ERROR = 1_i32
    CPSI_WARNING = 2_i32
    CPSI_SUCCESS = 3_i32
  end
  enum CREDENTIAL_PROVIDER_ACCOUNT_OPTIONS
    CPAO_NONE = 0_i32
    CPAO_EMPTY_LOCAL = 1_i32
    CPAO_EMPTY_CONNECTED = 2_i32
  end
  enum CREDENTIAL_PROVIDER_CREDENTIAL_FIELD_OPTIONS
    CPCFO_NONE = 0_i32
    CPCFO_ENABLE_PASSWORD_REVEAL = 1_i32
    CPCFO_IS_EMAIL_ADDRESS = 2_i32
    CPCFO_ENABLE_TOUCH_KEYBOARD_AUTO_INVOKE = 4_i32
    CPCFO_NUMBERS_ONLY = 8_i32
    CPCFO_SHOW_ENGLISH_KEYBOARD = 16_i32
  end
  enum SYNCMGR_HANDLER_CAPABILITIES
    SYNCMGR_HCM_NONE = 0_i32
    SYNCMGR_HCM_PROVIDES_ICON = 1_i32
    SYNCMGR_HCM_EVENT_STORE = 2_i32
    SYNCMGR_HCM_CONFLICT_STORE = 4_i32
    SYNCMGR_HCM_SUPPORTS_CONCURRENT_SESSIONS = 16_i32
    SYNCMGR_HCM_CAN_BROWSE_CONTENT = 65536_i32
    SYNCMGR_HCM_CAN_SHOW_SCHEDULE = 131072_i32
    SYNCMGR_HCM_QUERY_BEFORE_ACTIVATE = 1048576_i32
    SYNCMGR_HCM_QUERY_BEFORE_DEACTIVATE = 2097152_i32
    SYNCMGR_HCM_QUERY_BEFORE_ENABLE = 4194304_i32
    SYNCMGR_HCM_QUERY_BEFORE_DISABLE = 8388608_i32
    SYNCMGR_HCM_VALID_MASK = 15925271_i32
  end
  enum SYNCMGR_HANDLER_POLICIES
    SYNCMGR_HPM_NONE = 0_i32
    SYNCMGR_HPM_PREVENT_ACTIVATE = 1_i32
    SYNCMGR_HPM_PREVENT_DEACTIVATE = 2_i32
    SYNCMGR_HPM_PREVENT_ENABLE = 4_i32
    SYNCMGR_HPM_PREVENT_DISABLE = 8_i32
    SYNCMGR_HPM_PREVENT_START_SYNC = 16_i32
    SYNCMGR_HPM_PREVENT_STOP_SYNC = 32_i32
    SYNCMGR_HPM_DISABLE_ENABLE = 256_i32
    SYNCMGR_HPM_DISABLE_DISABLE = 512_i32
    SYNCMGR_HPM_DISABLE_START_SYNC = 1024_i32
    SYNCMGR_HPM_DISABLE_STOP_SYNC = 2048_i32
    SYNCMGR_HPM_DISABLE_BROWSE = 4096_i32
    SYNCMGR_HPM_DISABLE_SCHEDULE = 8192_i32
    SYNCMGR_HPM_HIDDEN_BY_DEFAULT = 65536_i32
    SYNCMGR_HPM_BACKGROUND_SYNC_ONLY = 48_i32
    SYNCMGR_HPM_VALID_MASK = 77631_i32
  end
  enum SYNCMGR_HANDLER_TYPE
    SYNCMGR_HT_UNSPECIFIED = 0_i32
    SYNCMGR_HT_APPLICATION = 1_i32
    SYNCMGR_HT_DEVICE = 2_i32
    SYNCMGR_HT_FOLDER = 3_i32
    SYNCMGR_HT_SERVICE = 4_i32
    SYNCMGR_HT_COMPUTER = 5_i32
    SYNCMGR_HT_MIN = 0_i32
    SYNCMGR_HT_MAX = 5_i32
  end
  enum SYNCMGR_ITEM_CAPABILITIES
    SYNCMGR_ICM_NONE = 0_i32
    SYNCMGR_ICM_PROVIDES_ICON = 1_i32
    SYNCMGR_ICM_EVENT_STORE = 2_i32
    SYNCMGR_ICM_CONFLICT_STORE = 4_i32
    SYNCMGR_ICM_CAN_DELETE = 16_i32
    SYNCMGR_ICM_CAN_BROWSE_CONTENT = 65536_i32
    SYNCMGR_ICM_QUERY_BEFORE_ENABLE = 1048576_i32
    SYNCMGR_ICM_QUERY_BEFORE_DISABLE = 2097152_i32
    SYNCMGR_ICM_QUERY_BEFORE_DELETE = 4194304_i32
    SYNCMGR_ICM_VALID_MASK = 7405591_i32
  end
  enum SYNCMGR_ITEM_POLICIES
    SYNCMGR_IPM_NONE = 0_i32
    SYNCMGR_IPM_PREVENT_ENABLE = 1_i32
    SYNCMGR_IPM_PREVENT_DISABLE = 2_i32
    SYNCMGR_IPM_PREVENT_START_SYNC = 4_i32
    SYNCMGR_IPM_PREVENT_STOP_SYNC = 8_i32
    SYNCMGR_IPM_DISABLE_ENABLE = 16_i32
    SYNCMGR_IPM_DISABLE_DISABLE = 32_i32
    SYNCMGR_IPM_DISABLE_START_SYNC = 64_i32
    SYNCMGR_IPM_DISABLE_STOP_SYNC = 128_i32
    SYNCMGR_IPM_DISABLE_BROWSE = 256_i32
    SYNCMGR_IPM_DISABLE_DELETE = 512_i32
    SYNCMGR_IPM_HIDDEN_BY_DEFAULT = 65536_i32
    SYNCMGR_IPM_VALID_MASK = 66303_i32
  end
  enum SYNCMGR_PROGRESS_STATUS
    SYNCMGR_PS_UPDATING = 1_i32
    SYNCMGR_PS_UPDATING_INDETERMINATE = 2_i32
    SYNCMGR_PS_SUCCEEDED = 3_i32
    SYNCMGR_PS_FAILED = 4_i32
    SYNCMGR_PS_CANCELED = 5_i32
    SYNCMGR_PS_DISCONNECTED = 6_i32
    SYNCMGR_PS_MAX = 6_i32
  end
  enum SYNCMGR_CANCEL_REQUEST
    SYNCMGR_CR_NONE = 0_i32
    SYNCMGR_CR_CANCEL_ITEM = 1_i32
    SYNCMGR_CR_CANCEL_ALL = 2_i32
    SYNCMGR_CR_MAX = 2_i32
  end
  enum SYNCMGR_EVENT_LEVEL
    SYNCMGR_EL_INFORMATION = 1_i32
    SYNCMGR_EL_WARNING = 2_i32
    SYNCMGR_EL_ERROR = 3_i32
    SYNCMGR_EL_MAX = 3_i32
  end
  enum SYNCMGR_EVENT_FLAGS
    SYNCMGR_EF_NONE = 0_i32
    SYNCMGR_EF_VALID = 0_i32
  end
  enum SYNCMGR_CONTROL_FLAGS
    SYNCMGR_CF_NONE = 0_i32
    SYNCMGR_CF_NOWAIT = 0_i32
    SYNCMGR_CF_WAIT = 1_i32
    SYNCMGR_CF_NOUI = 2_i32
    SYNCMGR_CF_VALID = 3_i32
  end
  enum SYNCMGR_SYNC_CONTROL_FLAGS
    SYNCMGR_SCF_NONE = 0_i32
    SYNCMGR_SCF_IGNORE_IF_ALREADY_SYNCING = 1_i32
    SYNCMGR_SCF_VALID = 1_i32
  end
  enum SYNCMGR_UPDATE_REASON
    SYNCMGR_UR_ADDED = 0_i32
    SYNCMGR_UR_CHANGED = 1_i32
    SYNCMGR_UR_REMOVED = 2_i32
    SYNCMGR_UR_MAX = 2_i32
  end
  enum SYNCMGR_CONFLICT_ITEM_TYPE
    SYNCMGR_CIT_UPDATED = 1_i32
    SYNCMGR_CIT_DELETED = 2_i32
  end
  enum SYNCMGR_RESOLUTION_ABILITIES
    SYNCMGR_RA_KEEPOTHER = 1_i32
    SYNCMGR_RA_KEEPRECENT = 2_i32
    SYNCMGR_RA_REMOVEFROMSYNCSET = 4_i32
    SYNCMGR_RA_KEEP_SINGLE = 8_i32
    SYNCMGR_RA_KEEP_MULTIPLE = 16_i32
    SYNCMGR_RA_VALID = 31_i32
  end
  enum SYNCMGR_RESOLUTION_FEEDBACK
    SYNCMGR_RF_CONTINUE = 0_i32
    SYNCMGR_RF_REFRESH = 1_i32
    SYNCMGR_RF_CANCEL = 2_i32
  end
  enum SYNCMGR_PRESENTER_NEXT_STEP
    SYNCMGR_PNS_CONTINUE = 0_i32
    SYNCMGR_PNS_DEFAULT = 1_i32
    SYNCMGR_PNS_CANCEL = 2_i32
  end
  enum SYNCMGR_PRESENTER_CHOICE
    SYNCMGR_PC_NO_CHOICE = 0_i32
    SYNCMGR_PC_KEEP_ONE = 1_i32
    SYNCMGR_PC_KEEP_MULTIPLE = 2_i32
    SYNCMGR_PC_KEEP_RECENT = 3_i32
    SYNCMGR_PC_REMOVE_FROM_SYNC_SET = 4_i32
    SYNCMGR_PC_SKIP = 5_i32
  end
  enum WTS_FLAGS
    WTS_NONE = 0_i32
    WTS_EXTRACT = 0_i32
    WTS_INCACHEONLY = 1_i32
    WTS_FASTEXTRACT = 2_i32
    WTS_FORCEEXTRACTION = 4_i32
    WTS_SLOWRECLAIM = 8_i32
    WTS_EXTRACTDONOTCACHE = 32_i32
    WTS_SCALETOREQUESTEDSIZE = 64_i32
    WTS_SKIPFASTEXTRACT = 128_i32
    WTS_EXTRACTINPROC = 256_i32
    WTS_CROPTOSQUARE = 512_i32
    WTS_INSTANCESURROGATE = 1024_i32
    WTS_REQUIRESURROGATE = 2048_i32
    WTS_APPSTYLE = 8192_i32
    WTS_WIDETHUMBNAILS = 16384_i32
    WTS_IDEALCACHESIZEONLY = 32768_i32
    WTS_SCALEUP = 65536_i32
  end
  enum WTS_CACHEFLAGS
    WTS_DEFAULT = 0_i32
    WTS_LOWQUALITY = 1_i32
    WTS_CACHED = 2_i32
  end
  enum WTS_CONTEXTFLAGS
    WTSCF_DEFAULT = 0_i32
    WTSCF_APPSTYLE = 1_i32
    WTSCF_SQUARE = 2_i32
    WTSCF_WIDE = 4_i32
    WTSCF_FAST = 8_i32
  end
  enum WTS_ALPHATYPE
    WTSAT_UNKNOWN = 0_i32
    WTSAT_RGB = 1_i32
    WTSAT_ARGB = 2_i32
  end
  enum SYNCMGRSTATUS
    SYNCMGRSTATUS_STOPPED = 0_i32
    SYNCMGRSTATUS_SKIPPED = 1_i32
    SYNCMGRSTATUS_PENDING = 2_i32
    SYNCMGRSTATUS_UPDATING = 3_i32
    SYNCMGRSTATUS_SUCCEEDED = 4_i32
    SYNCMGRSTATUS_FAILED = 5_i32
    SYNCMGRSTATUS_PAUSED = 6_i32
    SYNCMGRSTATUS_RESUMING = 7_i32
    SYNCMGRSTATUS_UPDATING_INDETERMINATE = 8_i32
    SYNCMGRSTATUS_DELETED = 256_i32
  end
  enum SYNCMGRLOGLEVEL
    SYNCMGRLOGLEVEL_INFORMATION = 1_i32
    SYNCMGRLOGLEVEL_WARNING = 2_i32
    SYNCMGRLOGLEVEL_ERROR = 3_i32
    SYNCMGRLOGLEVEL_LOGLEVELMAX = 3_i32
  end
  enum SYNCMGRERRORFLAGS
    SYNCMGRERRORFLAG_ENABLEJUMPTEXT = 1_i32
  end
  enum SYNCMGRITEMFLAGS
    SYNCMGRITEM_HASPROPERTIES = 1_i32
    SYNCMGRITEM_TEMPORARY = 2_i32
    SYNCMGRITEM_ROAMINGUSER = 4_i32
    SYNCMGRITEM_LASTUPDATETIME = 8_i32
    SYNCMGRITEM_MAYDELETEITEM = 16_i32
    SYNCMGRITEM_HIDDEN = 32_i32
  end
  enum SYNCMGRFLAG
    SYNCMGRFLAG_CONNECT = 1_i32
    SYNCMGRFLAG_PENDINGDISCONNECT = 2_i32
    SYNCMGRFLAG_MANUAL = 3_i32
    SYNCMGRFLAG_IDLE = 4_i32
    SYNCMGRFLAG_INVOKE = 5_i32
    SYNCMGRFLAG_SCHEDULED = 6_i32
    SYNCMGRFLAG_EVENTMASK = 255_i32
    SYNCMGRFLAG_SETTINGS = 256_i32
    SYNCMGRFLAG_MAYBOTHERUSER = 512_i32
  end
  enum SYNCMGRHANDLERFLAGS
    SYNCMGRHANDLER_HASPROPERTIES = 1_i32
    SYNCMGRHANDLER_MAYESTABLISHCONNECTION = 2_i32
    SYNCMGRHANDLER_ALWAYSLISTHANDLER = 4_i32
    SYNCMGRHANDLER_HIDDEN = 8_i32
  end
  enum SYNCMGRITEMSTATE
    SYNCMGRITEMSTATE_UNCHECKED = 0_i32
    SYNCMGRITEMSTATE_CHECKED = 1_i32
  end
  enum SYNCMGRINVOKEFLAGS
    SYNCMGRINVOKE_STARTSYNC = 2_i32
    SYNCMGRINVOKE_MINIMIZED = 4_i32
  end
  enum SYNCMGRREGISTERFLAGS
    SYNCMGRREGISTERFLAG_CONNECT = 1_i32
    SYNCMGRREGISTERFLAG_PENDINGDISCONNECT = 2_i32
    SYNCMGRREGISTERFLAG_IDLE = 4_i32
  end
  enum ThumbnailStreamCacheOptions
    ExtractIfNotCached = 0_i32
    ReturnOnlyIfCached = 1_i32
    ResizeThumbnail = 2_i32
    AllowSmallerSize = 4_i32
  end
  enum TLENUMF
    TLEF_RELATIVE_INCLUDE_CURRENT = 1_i32
    TLEF_RELATIVE_BACK = 16_i32
    TLEF_RELATIVE_FORE = 32_i32
    TLEF_INCLUDE_UNINVOKEABLE = 64_i32
    TLEF_ABSOLUTE = 49_i32
    TLEF_EXCLUDE_SUBFRAME_ENTRIES = 128_i32
    TLEF_EXCLUDE_ABOUT_PAGES = 256_i32
  end
  enum HLSR_NOREDEF10_
    HLSR_HOME = 0_i32
    HLSR_SEARCHPAGE = 1_i32
    HLSR_HISTORYFOLDER = 2_i32
  end
  enum HLSHORTCUTF__NOREDEF10_
    HLSHORTCUTF_DEFAULT = 0_i32
    HLSHORTCUTF_DONTACTUALLYCREATE = 1_i32
    HLSHORTCUTF_USEFILENAMEFROMFRIENDLYNAME = 2_i32
    HLSHORTCUTF_USEUNIQUEFILENAME = 4_i32
    HLSHORTCUTF_MAYUSEEXISTINGSHORTCUT = 8_i32
  end
  enum HLTRANSLATEF_NOREDEF10_
    HLTRANSLATEF_DEFAULT = 0_i32
    HLTRANSLATEF_DONTAPPLYDEFAULTPREFIX = 1_i32
  end
  @[Flags]
  enum HLNF : UInt32
    HLNF_INTERNALJUMP = 1_u32
    HLNF_OPENINNEWWINDOW = 2_u32
    HLNF_NAVIGATINGBACK = 4_u32
    HLNF_NAVIGATINGFORWARD = 8_u32
    HLNF_NAVIGATINGTOSTACKITEM = 16_u32
    HLNF_CREATENOHISTORY = 32_u32
  end
  enum HLINKGETREF
    HLINKGETREF_DEFAULT = 0_i32
    HLINKGETREF_ABSOLUTE = 1_i32
    HLINKGETREF_RELATIVE = 2_i32
  end
  @[Flags]
  enum HLFNAMEF : UInt32
    HLFNAMEF_DEFAULT = 0_u32
    HLFNAMEF_TRYCACHE = 1_u32
    HLFNAMEF_TRYPRETTYTARGET = 2_u32
    HLFNAMEF_TRYFULLTARGET = 4_u32
    HLFNAMEF_TRYWIN95SHORTCUT = 8_u32
  end
  enum HLINKMISC
    HLINKMISC_RELATIVE = 1_i32
  end
  enum HLINKSETF
    HLINKSETF_TARGET = 1_i32
    HLINKSETF_LOCATION = 2_i32
  end
  enum HLINKWHICHMK
    HLINKWHICHMK_CONTAINER = 1_i32
    HLINKWHICHMK_BASE = 2_i32
  end
  enum HLTB_INFO
    HLTB_DOCKEDLEFT = 0_i32
    HLTB_DOCKEDTOP = 1_i32
    HLTB_DOCKEDRIGHT = 2_i32
    HLTB_DOCKEDBOTTOM = 3_i32
    HLTB_FLOATING = 4_i32
  end
  @[Flags]
  enum HLBWIF_FLAGS : UInt32
    HLBWIF_HASFRAMEWNDINFO = 1_u32
    HLBWIF_HASDOCWNDINFO = 2_u32
    HLBWIF_FRAMEWNDMAXIMIZED = 4_u32
    HLBWIF_DOCWNDMAXIMIZED = 8_u32
    HLBWIF_HASWEBTOOLBARINFO = 16_u32
    HLBWIF_WEBTOOLBARHIDDEN = 32_u32
  end
  enum HLID_INFO : UInt32
    HLID_INVALID = 0_u32
    HLID_PREVIOUS = 4294967295_u32
    HLID_NEXT = 4294967294_u32
    HLID_CURRENT = 4294967293_u32
    HLID_STACKBOTTOM = 4294967292_u32
    HLID_STACKTOP = 4294967291_u32
  end
  enum HLQF_INFO
    HLQF_ISVALID = 1_i32
    HLQF_ISCURRENT = 2_i32
  end
  enum BNSTATE
    BNS_NORMAL = 0_i32
    BNS_BEGIN_NAVIGATE = 1_i32
    BNS_NAVIGATE = 2_i32
  end
  enum SHELLBROWSERSHOWCONTROL
    SBSC_HIDE = 0_i32
    SBSC_SHOW = 1_i32
    SBSC_TOGGLE = 2_i32
    SBSC_QUERY = 3_i32
  end
  enum SECURELOCKCODE
    SECURELOCK_NOCHANGE = -1_i32
    SECURELOCK_SET_UNSECURE = 0_i32
    SECURELOCK_SET_MIXED = 1_i32
    SECURELOCK_SET_SECUREUNKNOWNBIT = 2_i32
    SECURELOCK_SET_SECURE40BIT = 3_i32
    SECURELOCK_SET_SECURE56BIT = 4_i32
    SECURELOCK_SET_FORTEZZA = 5_i32
    SECURELOCK_SET_SECURE128BIT = 6_i32
    SECURELOCK_FIRSTSUGGEST = 7_i32
    SECURELOCK_SUGGEST_UNSECURE = 7_i32
    SECURELOCK_SUGGEST_MIXED = 8_i32
    SECURELOCK_SUGGEST_SECUREUNKNOWNBIT = 9_i32
    SECURELOCK_SUGGEST_SECURE40BIT = 10_i32
    SECURELOCK_SUGGEST_SECURE56BIT = 11_i32
    SECURELOCK_SUGGEST_FORTEZZA = 12_i32
    SECURELOCK_SUGGEST_SECURE128BIT = 13_i32
  end
  enum IEPDNFLAGS
    IEPDN_BINDINGUI = 1_i32
  end
  enum TI_FLAGS
    TI_BITMAP = 1_i32
    TI_JPEG = 2_i32
  end
  @[Flags]
  enum PATHCCH_OPTIONS : UInt32
    PATHCCH_NONE = 0_u32
    PATHCCH_ALLOW_LONG_PATHS = 1_u32
    PATHCCH_FORCE_ENABLE_LONG_NAME_PROCESS = 2_u32
    PATHCCH_FORCE_DISABLE_LONG_NAME_PROCESS = 4_u32
    PATHCCH_DO_NOT_NORMALIZE_SEGMENTS = 8_u32
    PATHCCH_ENSURE_IS_EXTENDED_LENGTH_PATH = 16_u32
    PATHCCH_ENSURE_TRAILING_SLASH = 32_u32
    PATHCCH_CANONICALIZE_SLASHES = 64_u32
  end
  enum Iurl_seturl_flags
    IURL_SETURL_FL_GUESS_PROTOCOL = 1_i32
    IURL_SETURL_FL_USE_DEFAULT_PROTOCOL = 2_i32
  end
  enum Iurl_invokecommand_flags
    IURL_INVOKECOMMAND_FL_ALLOW_UI = 1_i32
    IURL_INVOKECOMMAND_FL_USE_DEFAULT_VERB = 2_i32
    IURL_INVOKECOMMAND_FL_DDEWAIT = 4_i32
    IURL_INVOKECOMMAND_FL_ASYNCOK = 8_i32
    IURL_INVOKECOMMAND_FL_LOG_USAGE = 16_i32
  end
  enum Translateurl_in_flags
    TRANSLATEURL_FL_GUESS_PROTOCOL = 1_i32
    TRANSLATEURL_FL_USE_DEFAULT_PROTOCOL = 2_i32
  end
  enum Urlassociationdialog_in_flags
    URLASSOCDLG_FL_USE_DEFAULT_NAME = 1_i32
    URLASSOCDLG_FL_REGISTER_ASSOC = 2_i32
  end
  enum Mimeassociationdialog_in_flags
    MIMEASSOCDLG_FL_REGISTER_ASSOC = 1_i32
  end

  @[Extern]
  struct APPSTATE_REGISTRATION_
    def initialize()
    end
  end

  @[Extern]
  struct APPCONSTRAIN_REGISTRATION_
    def initialize()
    end
  end

  @[Extern]
  struct APPCATEGORYINFO
    property locale : UInt32
    property pszDescription : Win32cr::Foundation::PWSTR
    property app_category_id : LibC::GUID
    def initialize(@locale : UInt32, @pszDescription : Win32cr::Foundation::PWSTR, @app_category_id : LibC::GUID)
    end
  end

  @[Extern]
  struct APPCATEGORYINFOLIST
    property cCategory : UInt32
    property pCategoryInfo : Win32cr::UI::Shell::APPCATEGORYINFO*
    def initialize(@cCategory : UInt32, @pCategoryInfo : Win32cr::UI::Shell::APPCATEGORYINFO*)
    end
  end

  @[Extern]
  struct HELPINFO
    property cbSize : UInt32
    property iContextType : Int32
    property iCtrlId : Int32
    property hItemHandle : Win32cr::Foundation::HANDLE
    property dwContextId : LibC::UIntPtrT
    property mouse_pos : Win32cr::Foundation::POINT
    def initialize(@cbSize : UInt32, @iContextType : Int32, @iCtrlId : Int32, @hItemHandle : Win32cr::Foundation::HANDLE, @dwContextId : LibC::UIntPtrT, @mouse_pos : Win32cr::Foundation::POINT)
    end
  end

  @[Extern]
  struct MULTIKEYHELPA
    property mkSize : UInt32
    property mkKeylist : Win32cr::Foundation::CHAR
    property szKeyphrase : Win32cr::Foundation::CHAR*
    def initialize(@mkSize : UInt32, @mkKeylist : Win32cr::Foundation::CHAR, @szKeyphrase : Win32cr::Foundation::CHAR*)
    end
  end

  @[Extern]
  struct MULTIKEYHELPW
    property mkSize : UInt32
    property mkKeylist : UInt16
    property szKeyphrase : UInt16*
    def initialize(@mkSize : UInt32, @mkKeylist : UInt16, @szKeyphrase : UInt16*)
    end
  end

  @[Extern]
  struct HELPWININFOA
    property wStructSize : Int32
    property x : Int32
    property y : Int32
    property dx : Int32
    property dy : Int32
    property wMax : Int32
    property rgchMember : Win32cr::Foundation::CHAR[2]
    def initialize(@wStructSize : Int32, @x : Int32, @y : Int32, @dx : Int32, @dy : Int32, @wMax : Int32, @rgchMember : Win32cr::Foundation::CHAR[2])
    end
  end

  @[Extern]
  struct HELPWININFOW
    property wStructSize : Int32
    property x : Int32
    property y : Int32
    property dx : Int32
    property dy : Int32
    property wMax : Int32
    property rgchMember : UInt16[2]
    def initialize(@wStructSize : Int32, @x : Int32, @y : Int32, @dx : Int32, @dy : Int32, @wMax : Int32, @rgchMember : UInt16[2])
    end
  end

  @[Extern]
  struct CMINVOKECOMMANDINFO
    property cbSize : UInt32
    property fMask : UInt32
    property hwnd : Win32cr::Foundation::HWND
    property lpVerb : Win32cr::Foundation::PSTR
    property lpParameters : Win32cr::Foundation::PSTR
    property lpDirectory : Win32cr::Foundation::PSTR
    property nShow : Int32
    property dwHotKey : UInt32
    property hIcon : Win32cr::Foundation::HANDLE
    def initialize(@cbSize : UInt32, @fMask : UInt32, @hwnd : Win32cr::Foundation::HWND, @lpVerb : Win32cr::Foundation::PSTR, @lpParameters : Win32cr::Foundation::PSTR, @lpDirectory : Win32cr::Foundation::PSTR, @nShow : Int32, @dwHotKey : UInt32, @hIcon : Win32cr::Foundation::HANDLE)
    end
  end

  @[Extern]
  struct CMINVOKECOMMANDINFOEX
    property cbSize : UInt32
    property fMask : UInt32
    property hwnd : Win32cr::Foundation::HWND
    property lpVerb : Win32cr::Foundation::PSTR
    property lpParameters : Win32cr::Foundation::PSTR
    property lpDirectory : Win32cr::Foundation::PSTR
    property nShow : Int32
    property dwHotKey : UInt32
    property hIcon : Win32cr::Foundation::HANDLE
    property lpTitle : Win32cr::Foundation::PSTR
    property lpVerbW : Win32cr::Foundation::PWSTR
    property lpParametersW : Win32cr::Foundation::PWSTR
    property lpDirectoryW : Win32cr::Foundation::PWSTR
    property lpTitleW : Win32cr::Foundation::PWSTR
    property ptInvoke : Win32cr::Foundation::POINT
    def initialize(@cbSize : UInt32, @fMask : UInt32, @hwnd : Win32cr::Foundation::HWND, @lpVerb : Win32cr::Foundation::PSTR, @lpParameters : Win32cr::Foundation::PSTR, @lpDirectory : Win32cr::Foundation::PSTR, @nShow : Int32, @dwHotKey : UInt32, @hIcon : Win32cr::Foundation::HANDLE, @lpTitle : Win32cr::Foundation::PSTR, @lpVerbW : Win32cr::Foundation::PWSTR, @lpParametersW : Win32cr::Foundation::PWSTR, @lpDirectoryW : Win32cr::Foundation::PWSTR, @lpTitleW : Win32cr::Foundation::PWSTR, @ptInvoke : Win32cr::Foundation::POINT)
    end
  end

  @[Extern]
  struct CMINVOKECOMMANDINFOEX_REMOTE
    property cbSize : UInt32
    property fMask : UInt32
    property hwnd : Win32cr::Foundation::HWND
    property lpVerbString : Win32cr::Foundation::PSTR
    property lpParameters : Win32cr::Foundation::PSTR
    property lpDirectory : Win32cr::Foundation::PSTR
    property nShow : Int32
    property dwHotKey : UInt32
    property lpTitle : Win32cr::Foundation::PSTR
    property lpVerbWString : Win32cr::Foundation::PWSTR
    property lpParametersW : Win32cr::Foundation::PWSTR
    property lpDirectoryW : Win32cr::Foundation::PWSTR
    property lpTitleW : Win32cr::Foundation::PWSTR
    property ptInvoke : Win32cr::Foundation::POINT
    property lpVerbInt : UInt32
    property lpVerbWInt : UInt32
    def initialize(@cbSize : UInt32, @fMask : UInt32, @hwnd : Win32cr::Foundation::HWND, @lpVerbString : Win32cr::Foundation::PSTR, @lpParameters : Win32cr::Foundation::PSTR, @lpDirectory : Win32cr::Foundation::PSTR, @nShow : Int32, @dwHotKey : UInt32, @lpTitle : Win32cr::Foundation::PSTR, @lpVerbWString : Win32cr::Foundation::PWSTR, @lpParametersW : Win32cr::Foundation::PWSTR, @lpDirectoryW : Win32cr::Foundation::PWSTR, @lpTitleW : Win32cr::Foundation::PWSTR, @ptInvoke : Win32cr::Foundation::POINT, @lpVerbInt : UInt32, @lpVerbWInt : UInt32)
    end
  end

  @[Extern]
  struct PERSIST_FOLDER_TARGET_INFO
    property pidlTargetFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property szTargetParsingName : UInt16[260]
    property szNetworkProvider : UInt16[260]
    property dwAttributes : UInt32
    property csidl : Int32
    def initialize(@pidlTargetFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, @szTargetParsingName : UInt16[260], @szNetworkProvider : UInt16[260], @dwAttributes : UInt32, @csidl : Int32)
    end
  end

  @[Extern]
  struct EXTRASEARCH
    property guidSearch : LibC::GUID
    property wszFriendlyName : UInt16[80]
    property wszUrl : UInt16[2084]
    def initialize(@guidSearch : LibC::GUID, @wszFriendlyName : UInt16[80], @wszUrl : UInt16[2084])
    end
  end

  @[Extern]
  struct FOLDERSETTINGS
    property view_mode : UInt32
    property fFlags : UInt32
    def initialize(@view_mode : UInt32, @fFlags : UInt32)
    end
  end

  @[Extern]
  struct SV2CVW2_PARAMS
    property cbSize : UInt32
    property psvPrev : Void*
    property pfs : Win32cr::UI::Shell::FOLDERSETTINGS*
    property psbOwner : Void*
    property prcView : Win32cr::Foundation::RECT*
    property pvid : LibC::GUID*
    property hwndView : Win32cr::Foundation::HWND
    def initialize(@cbSize : UInt32, @psvPrev : Void*, @pfs : Win32cr::UI::Shell::FOLDERSETTINGS*, @psbOwner : Void*, @prcView : Win32cr::Foundation::RECT*, @pvid : LibC::GUID*, @hwndView : Win32cr::Foundation::HWND)
    end
  end

  @[Extern]
  struct SORTCOLUMN
    property propkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY
    property direction : Win32cr::UI::Shell::SORTDIRECTION
    def initialize(@propkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY, @direction : Win32cr::UI::Shell::SORTDIRECTION)
    end
  end

  @[Extern]
  struct CM_COLUMNINFO
    property cbSize : UInt32
    property dwMask : UInt32
    property dwState : UInt32
    property uWidth : UInt32
    property uDefaultWidth : UInt32
    property uIdealWidth : UInt32
    property wszName : UInt16[80]
    def initialize(@cbSize : UInt32, @dwMask : UInt32, @dwState : UInt32, @uWidth : UInt32, @uDefaultWidth : UInt32, @uIdealWidth : UInt32, @wszName : UInt16[80])
    end
  end

  @[Extern]
  struct SHELL_ITEM_RESOURCE
    property guidType : LibC::GUID
    property szName : UInt16[260]
    def initialize(@guidType : LibC::GUID, @szName : UInt16[260])
    end
  end

  @[Extern]
  struct CATEGORY_INFO
    property cif : Win32cr::UI::Shell::CATEGORYINFO_FLAGS
    property wszName : UInt16[260]
    def initialize(@cif : Win32cr::UI::Shell::CATEGORYINFO_FLAGS, @wszName : UInt16[260])
    end
  end

  @[Extern]
  struct SHDRAGIMAGE
    property sizeDragImage : Win32cr::Foundation::SIZE
    property ptOffset : Win32cr::Foundation::POINT
    property hbmpDragImage : Win32cr::Graphics::Gdi::HBITMAP
    property crColorKey : UInt32
    def initialize(@sizeDragImage : Win32cr::Foundation::SIZE, @ptOffset : Win32cr::Foundation::POINT, @hbmpDragImage : Win32cr::Graphics::Gdi::HBITMAP, @crColorKey : UInt32)
    end
  end

  @[Extern]
  struct DESKBANDINFO
    property dwMask : UInt32
    property ptMinSize : Win32cr::Foundation::POINTL
    property ptMaxSize : Win32cr::Foundation::POINTL
    property ptIntegral : Win32cr::Foundation::POINTL
    property ptActual : Win32cr::Foundation::POINTL
    property wszTitle : UInt16[256]
    property dwModeFlags : UInt32
    property crBkgnd : UInt32
    def initialize(@dwMask : UInt32, @ptMinSize : Win32cr::Foundation::POINTL, @ptMaxSize : Win32cr::Foundation::POINTL, @ptIntegral : Win32cr::Foundation::POINTL, @ptActual : Win32cr::Foundation::POINTL, @wszTitle : UInt16[256], @dwModeFlags : UInt32, @crBkgnd : UInt32)
    end
  end

  @[Extern]
  struct THUMBBUTTON
    property dwMask : Win32cr::UI::Shell::THUMBBUTTONMASK
    property iId : UInt32
    property iBitmap : UInt32
    property hIcon : Win32cr::UI::WindowsAndMessaging::HICON
    property szTip : UInt16[260]
    property dwFlags : Win32cr::UI::Shell::THUMBBUTTONFLAGS
    def initialize(@dwMask : Win32cr::UI::Shell::THUMBBUTTONMASK, @iId : UInt32, @iBitmap : UInt32, @hIcon : Win32cr::UI::WindowsAndMessaging::HICON, @szTip : UInt16[260], @dwFlags : Win32cr::UI::Shell::THUMBBUTTONFLAGS)
    end
  end

  @[Extern]
  struct BANDSITEINFO
    property dwMask : UInt32
    property dwState : UInt32
    property dwStyle : UInt32
    def initialize(@dwMask : UInt32, @dwState : UInt32, @dwStyle : UInt32)
    end
  end

  @[Extern]
  struct DELEGATEITEMID
    property cbSize : UInt16
    property wOuter : UInt16
    property cbInner : UInt16
    property rgb : UInt8*
    def initialize(@cbSize : UInt16, @wOuter : UInt16, @cbInner : UInt16, @rgb : UInt8*)
    end
  end

  @[Extern]
  struct SMDATA
    property dwMask : UInt32
    property dwFlags : UInt32
    property hmenu : Win32cr::UI::WindowsAndMessaging::HMENU
    property hwnd : Win32cr::Foundation::HWND
    property uId : UInt32
    property uIdParent : UInt32
    property uIdAncestor : UInt32
    property punk : Void*
    property pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property pidlItem : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property psf : Void*
    property pvUserData : Void*
    def initialize(@dwMask : UInt32, @dwFlags : UInt32, @hmenu : Win32cr::UI::WindowsAndMessaging::HMENU, @hwnd : Win32cr::Foundation::HWND, @uId : UInt32, @uIdParent : UInt32, @uIdAncestor : UInt32, @punk : Void*, @pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, @pidlItem : Win32cr::UI::Shell::Common::ITEMIDLIST*, @psf : Void*, @pvUserData : Void*)
    end
  end

  @[Extern]
  struct SMINFO
    property dwMask : UInt32
    property dwType : UInt32
    property dwFlags : UInt32
    property iIcon : Int32
    def initialize(@dwMask : UInt32, @dwType : UInt32, @dwFlags : UInt32, @iIcon : Int32)
    end
  end

  @[Extern]
  struct SMCSHCHANGENOTIFYSTRUCT
    property lEvent : Int32
    property pidl1 : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property pidl2 : Win32cr::UI::Shell::Common::ITEMIDLIST*
    def initialize(@lEvent : Int32, @pidl1 : Win32cr::UI::Shell::Common::ITEMIDLIST*, @pidl2 : Win32cr::UI::Shell::Common::ITEMIDLIST*)
    end
  end

  @[Extern]
  struct KNOWNFOLDER_DEFINITION
    property category : Win32cr::UI::Shell::KF_CATEGORY
    property pszName : Win32cr::Foundation::PWSTR
    property pszDescription : Win32cr::Foundation::PWSTR
    property fidParent : LibC::GUID
    property pszRelativePath : Win32cr::Foundation::PWSTR
    property pszParsingName : Win32cr::Foundation::PWSTR
    property pszTooltip : Win32cr::Foundation::PWSTR
    property pszLocalizedName : Win32cr::Foundation::PWSTR
    property pszIcon : Win32cr::Foundation::PWSTR
    property pszSecurity : Win32cr::Foundation::PWSTR
    property dwAttributes : UInt32
    property kfdFlags : UInt32
    property ftidType : LibC::GUID
    def initialize(@category : Win32cr::UI::Shell::KF_CATEGORY, @pszName : Win32cr::Foundation::PWSTR, @pszDescription : Win32cr::Foundation::PWSTR, @fidParent : LibC::GUID, @pszRelativePath : Win32cr::Foundation::PWSTR, @pszParsingName : Win32cr::Foundation::PWSTR, @pszTooltip : Win32cr::Foundation::PWSTR, @pszLocalizedName : Win32cr::Foundation::PWSTR, @pszIcon : Win32cr::Foundation::PWSTR, @pszSecurity : Win32cr::Foundation::PWSTR, @dwAttributes : UInt32, @kfdFlags : UInt32, @ftidType : LibC::GUID)
    end
  end

  @[Extern]
  struct PREVIEWHANDLERFRAMEINFO
    property haccel : Win32cr::UI::WindowsAndMessaging::HACCEL
    property cAccelEntries : UInt32
    def initialize(@haccel : Win32cr::UI::WindowsAndMessaging::HACCEL, @cAccelEntries : UInt32)
    end
  end

  @[Extern]
  struct BANNER_NOTIFICATION
    property event : Win32cr::UI::Shell::BANNER_NOTIFICATION_EVENT
    property providerIdentity : Win32cr::Foundation::PWSTR
    property contentId : Win32cr::Foundation::PWSTR
    def initialize(@event : Win32cr::UI::Shell::BANNER_NOTIFICATION_EVENT, @providerIdentity : Win32cr::Foundation::PWSTR, @contentId : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct NSTCCUSTOMDRAW
    property psi : Void*
    property uItemState : UInt32
    property nstcis : UInt32
    property pszText : Win32cr::Foundation::PWSTR
    property iImage : Int32
    property himl : Win32cr::UI::Controls::HIMAGELIST
    property iLevel : Int32
    property iIndent : Int32
    def initialize(@psi : Void*, @uItemState : UInt32, @nstcis : UInt32, @pszText : Win32cr::Foundation::PWSTR, @iImage : Int32, @himl : Win32cr::UI::Controls::HIMAGELIST, @iLevel : Int32, @iIndent : Int32)
    end
  end

  @[Extern]
  struct DATABLOCK_HEADER
    property cbSize : UInt32
    property dwSignature : UInt32
    def initialize(@cbSize : UInt32, @dwSignature : UInt32)
    end
  end

  @[Extern]
  struct NT_CONSOLE_PROPS
    property dbh : Win32cr::UI::Shell::DATABLOCK_HEADER
    property wFillAttribute : UInt16
    property wPopupFillAttribute : UInt16
    property dwScreenBufferSize : Win32cr::System::Console::COORD
    property dwWindowSize : Win32cr::System::Console::COORD
    property dwWindowOrigin : Win32cr::System::Console::COORD
    property nFont : UInt32
    property nInputBufferSize : UInt32
    property dwFontSize : Win32cr::System::Console::COORD
    property uFontFamily : UInt32
    property uFontWeight : UInt32
    property face_name : UInt16[32]
    property uCursorSize : UInt32
    property bFullScreen : Win32cr::Foundation::BOOL
    property bQuickEdit : Win32cr::Foundation::BOOL
    property bInsertMode : Win32cr::Foundation::BOOL
    property bAutoPosition : Win32cr::Foundation::BOOL
    property uHistoryBufferSize : UInt32
    property uNumberOfHistoryBuffers : UInt32
    property bHistoryNoDup : Win32cr::Foundation::BOOL
    property color_table : UInt32[16]
    def initialize(@dbh : Win32cr::UI::Shell::DATABLOCK_HEADER, @wFillAttribute : UInt16, @wPopupFillAttribute : UInt16, @dwScreenBufferSize : Win32cr::System::Console::COORD, @dwWindowSize : Win32cr::System::Console::COORD, @dwWindowOrigin : Win32cr::System::Console::COORD, @nFont : UInt32, @nInputBufferSize : UInt32, @dwFontSize : Win32cr::System::Console::COORD, @uFontFamily : UInt32, @uFontWeight : UInt32, @face_name : UInt16[32], @uCursorSize : UInt32, @bFullScreen : Win32cr::Foundation::BOOL, @bQuickEdit : Win32cr::Foundation::BOOL, @bInsertMode : Win32cr::Foundation::BOOL, @bAutoPosition : Win32cr::Foundation::BOOL, @uHistoryBufferSize : UInt32, @uNumberOfHistoryBuffers : UInt32, @bHistoryNoDup : Win32cr::Foundation::BOOL, @color_table : UInt32[16])
    end
  end

  @[Extern]
  struct NT_FE_CONSOLE_PROPS
    property dbh : Win32cr::UI::Shell::DATABLOCK_HEADER
    property uCodePage : UInt32
    def initialize(@dbh : Win32cr::UI::Shell::DATABLOCK_HEADER, @uCodePage : UInt32)
    end
  end

  @[Extern]
  struct EXP_DARWIN_LINK
    property dbh : Win32cr::UI::Shell::DATABLOCK_HEADER
    property szDarwinID : Win32cr::Foundation::CHAR[260]
    property szwDarwinID : UInt16[260]
    def initialize(@dbh : Win32cr::UI::Shell::DATABLOCK_HEADER, @szDarwinID : Win32cr::Foundation::CHAR[260], @szwDarwinID : UInt16[260])
    end
  end

  @[Extern]
  struct EXP_SPECIAL_FOLDER
    property cbSize : UInt32
    property dwSignature : UInt32
    property idSpecialFolder : UInt32
    property cbOffset : UInt32
    def initialize(@cbSize : UInt32, @dwSignature : UInt32, @idSpecialFolder : UInt32, @cbOffset : UInt32)
    end
  end

  @[Extern]
  struct EXP_SZ_LINK
    property cbSize : UInt32
    property dwSignature : UInt32
    property szTarget : Win32cr::Foundation::CHAR[260]
    property swzTarget : UInt16[260]
    def initialize(@cbSize : UInt32, @dwSignature : UInt32, @szTarget : Win32cr::Foundation::CHAR[260], @swzTarget : UInt16[260])
    end
  end

  @[Extern]
  struct EXP_PROPERTYSTORAGE
    property cbSize : UInt32
    property dwSignature : UInt32
    property abPropertyStorage : UInt8*
    def initialize(@cbSize : UInt32, @dwSignature : UInt32, @abPropertyStorage : UInt8*)
    end
  end

  @[Extern]
  struct SHFOLDERCUSTOMSETTINGS
    property dwSize : UInt32
    property dwMask : UInt32
    property pvid : LibC::GUID*
    property pszWebViewTemplate : Win32cr::Foundation::PWSTR
    property cchWebViewTemplate : UInt32
    property pszWebViewTemplateVersion : Win32cr::Foundation::PWSTR
    property pszInfoTip : Win32cr::Foundation::PWSTR
    property cchInfoTip : UInt32
    property pclsid : LibC::GUID*
    property dwFlags : UInt32
    property pszIconFile : Win32cr::Foundation::PWSTR
    property cchIconFile : UInt32
    property iIconIndex : Int32
    property pszLogo : Win32cr::Foundation::PWSTR
    property cchLogo : UInt32
    def initialize(@dwSize : UInt32, @dwMask : UInt32, @pvid : LibC::GUID*, @pszWebViewTemplate : Win32cr::Foundation::PWSTR, @cchWebViewTemplate : UInt32, @pszWebViewTemplateVersion : Win32cr::Foundation::PWSTR, @pszInfoTip : Win32cr::Foundation::PWSTR, @cchInfoTip : UInt32, @pclsid : LibC::GUID*, @dwFlags : UInt32, @pszIconFile : Win32cr::Foundation::PWSTR, @cchIconFile : UInt32, @iIconIndex : Int32, @pszLogo : Win32cr::Foundation::PWSTR, @cchLogo : UInt32)
    end
  end

  @[Extern]
  struct BROWSEINFOA
    property hwndOwner : Win32cr::Foundation::HWND
    property pidlRoot : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property pszDisplayName : Win32cr::Foundation::PSTR
    property lpszTitle : Win32cr::Foundation::PSTR
    property ulFlags : UInt32
    property lpfn : Win32cr::UI::Shell::BFFCALLBACK
    property lParam : Win32cr::Foundation::LPARAM
    property iImage : Int32
    def initialize(@hwndOwner : Win32cr::Foundation::HWND, @pidlRoot : Win32cr::UI::Shell::Common::ITEMIDLIST*, @pszDisplayName : Win32cr::Foundation::PSTR, @lpszTitle : Win32cr::Foundation::PSTR, @ulFlags : UInt32, @lpfn : Win32cr::UI::Shell::BFFCALLBACK, @lParam : Win32cr::Foundation::LPARAM, @iImage : Int32)
    end
  end

  @[Extern]
  struct BROWSEINFOW
    property hwndOwner : Win32cr::Foundation::HWND
    property pidlRoot : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property pszDisplayName : Win32cr::Foundation::PWSTR
    property lpszTitle : Win32cr::Foundation::PWSTR
    property ulFlags : UInt32
    property lpfn : Win32cr::UI::Shell::BFFCALLBACK
    property lParam : Win32cr::Foundation::LPARAM
    property iImage : Int32
    def initialize(@hwndOwner : Win32cr::Foundation::HWND, @pidlRoot : Win32cr::UI::Shell::Common::ITEMIDLIST*, @pszDisplayName : Win32cr::Foundation::PWSTR, @lpszTitle : Win32cr::Foundation::PWSTR, @ulFlags : UInt32, @lpfn : Win32cr::UI::Shell::BFFCALLBACK, @lParam : Win32cr::Foundation::LPARAM, @iImage : Int32)
    end
  end

  @[Extern]
  struct NRESARRAY
    property cItems : UInt32
    property nr : Win32cr::NetworkManagement::WNet::NETRESOURCEA*
    def initialize(@cItems : UInt32, @nr : Win32cr::NetworkManagement::WNet::NETRESOURCEA*)
    end
  end

  @[Extern]
  struct CIDA
    property cidl : UInt32
    property aoffset : UInt32*
    def initialize(@cidl : UInt32, @aoffset : UInt32*)
    end
  end

  @[Extern]
  struct FILEDESCRIPTORA
    property dwFlags : UInt32
    property clsid : LibC::GUID
    property sizel : Win32cr::Foundation::SIZE
    property pointl : Win32cr::Foundation::POINTL
    property dwFileAttributes : UInt32
    property ftCreationTime : Win32cr::Foundation::FILETIME
    property ftLastAccessTime : Win32cr::Foundation::FILETIME
    property ftLastWriteTime : Win32cr::Foundation::FILETIME
    property nFileSizeHigh : UInt32
    property nFileSizeLow : UInt32
    property cFileName : Win32cr::Foundation::CHAR[260]
    def initialize(@dwFlags : UInt32, @clsid : LibC::GUID, @sizel : Win32cr::Foundation::SIZE, @pointl : Win32cr::Foundation::POINTL, @dwFileAttributes : UInt32, @ftCreationTime : Win32cr::Foundation::FILETIME, @ftLastAccessTime : Win32cr::Foundation::FILETIME, @ftLastWriteTime : Win32cr::Foundation::FILETIME, @nFileSizeHigh : UInt32, @nFileSizeLow : UInt32, @cFileName : Win32cr::Foundation::CHAR[260])
    end
  end

  @[Extern]
  struct FILEDESCRIPTORW
    property dwFlags : UInt32
    property clsid : LibC::GUID
    property sizel : Win32cr::Foundation::SIZE
    property pointl : Win32cr::Foundation::POINTL
    property dwFileAttributes : UInt32
    property ftCreationTime : Win32cr::Foundation::FILETIME
    property ftLastAccessTime : Win32cr::Foundation::FILETIME
    property ftLastWriteTime : Win32cr::Foundation::FILETIME
    property nFileSizeHigh : UInt32
    property nFileSizeLow : UInt32
    property cFileName : UInt16[260]
    def initialize(@dwFlags : UInt32, @clsid : LibC::GUID, @sizel : Win32cr::Foundation::SIZE, @pointl : Win32cr::Foundation::POINTL, @dwFileAttributes : UInt32, @ftCreationTime : Win32cr::Foundation::FILETIME, @ftLastAccessTime : Win32cr::Foundation::FILETIME, @ftLastWriteTime : Win32cr::Foundation::FILETIME, @nFileSizeHigh : UInt32, @nFileSizeLow : UInt32, @cFileName : UInt16[260])
    end
  end

  @[Extern]
  struct FILEGROUPDESCRIPTORA
    property cItems : UInt32
    property fgd : Win32cr::UI::Shell::FILEDESCRIPTORA*
    def initialize(@cItems : UInt32, @fgd : Win32cr::UI::Shell::FILEDESCRIPTORA*)
    end
  end

  @[Extern]
  struct FILEGROUPDESCRIPTORW
    property cItems : UInt32
    property fgd : Win32cr::UI::Shell::FILEDESCRIPTORW*
    def initialize(@cItems : UInt32, @fgd : Win32cr::UI::Shell::FILEDESCRIPTORW*)
    end
  end

  @[Extern]
  struct DROPFILES
    property pFiles : UInt32
    property pt : Win32cr::Foundation::POINT
    property fNC : Win32cr::Foundation::BOOL
    property fWide : Win32cr::Foundation::BOOL
    def initialize(@pFiles : UInt32, @pt : Win32cr::Foundation::POINT, @fNC : Win32cr::Foundation::BOOL, @fWide : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct FILE_ATTRIBUTES_ARRAY
    property cItems : UInt32
    property dwSumFileAttributes : UInt32
    property dwProductFileAttributes : UInt32
    property rgdwFileAttributes : UInt32*
    def initialize(@cItems : UInt32, @dwSumFileAttributes : UInt32, @dwProductFileAttributes : UInt32, @rgdwFileAttributes : UInt32*)
    end
  end

  @[Extern]
  struct DROPDESCRIPTION
    property type__ : Win32cr::UI::Shell::DROPIMAGETYPE
    property szMessage : UInt16[260]
    property szInsert : UInt16[260]
    def initialize(@type__ : Win32cr::UI::Shell::DROPIMAGETYPE, @szMessage : UInt16[260], @szInsert : UInt16[260])
    end
  end

  @[Extern]
  struct SHChangeNotifyEntry
    property pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property fRecursive : Win32cr::Foundation::BOOL
    def initialize(@pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, @fRecursive : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct SHARDAPPIDINFO
    property psi : Void*
    property pszAppID : Win32cr::Foundation::PWSTR
    def initialize(@psi : Void*, @pszAppID : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct SHARDAPPIDINFOIDLIST
    property pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property pszAppID : Win32cr::Foundation::PWSTR
    def initialize(@pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, @pszAppID : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct SHARDAPPIDINFOLINK
    property psl : Void*
    property pszAppID : Win32cr::Foundation::PWSTR
    def initialize(@psl : Void*, @pszAppID : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct SHChangeDWORDAsIDList
    property cb : UInt16
    property dwItem1 : UInt32
    property dwItem2 : UInt32
    property cbZero : UInt16
    def initialize(@cb : UInt16, @dwItem1 : UInt32, @dwItem2 : UInt32, @cbZero : UInt16)
    end
  end

  @[Extern]
  struct SHChangeUpdateImageIDList
    property cb : UInt16
    property iIconIndex : Int32
    property iCurIndex : Int32
    property uFlags : UInt32
    property dwProcessID : UInt32
    property szName : UInt16[260]
    property cbZero : UInt16
    def initialize(@cb : UInt16, @iIconIndex : Int32, @iCurIndex : Int32, @uFlags : UInt32, @dwProcessID : UInt32, @szName : UInt16[260], @cbZero : UInt16)
    end
  end

  @[Extern]
  struct SHDESCRIPTIONID
    property dwDescriptionId : Win32cr::UI::Shell::SHDID_ID
    property clsid : LibC::GUID
    def initialize(@dwDescriptionId : Win32cr::UI::Shell::SHDID_ID, @clsid : LibC::GUID)
    end
  end

  @[Extern]
  struct AUTO_SCROLL_DATA
    property iNextSample : Int32
    property dwLastScroll : UInt32
    property bFull : Win32cr::Foundation::BOOL
    property pts : Win32cr::Foundation::POINT[3]
    property dwTimes : UInt32[3]
    def initialize(@iNextSample : Int32, @dwLastScroll : UInt32, @bFull : Win32cr::Foundation::BOOL, @pts : Win32cr::Foundation::POINT[3], @dwTimes : UInt32[3])
    end
  end

  @[Extern]
  struct CABINETSTATE
    property cLength : UInt16
    property nVersion : UInt16
    property _bitfield : Int32
    property fMenuEnumFilter : UInt32
    def initialize(@cLength : UInt16, @nVersion : UInt16, @_bitfield : Int32, @fMenuEnumFilter : UInt32)
    end
  end

  @[Extern]
  struct OPENASINFO
    property pcszFile : Win32cr::Foundation::PWSTR
    property pcszClass : Win32cr::Foundation::PWSTR
    property oaifInFlags : Win32cr::UI::Shell::OPEN_AS_INFO_FLAGS
    def initialize(@pcszFile : Win32cr::Foundation::PWSTR, @pcszClass : Win32cr::Foundation::PWSTR, @oaifInFlags : Win32cr::UI::Shell::OPEN_AS_INFO_FLAGS)
    end
  end

  @[Extern]
  struct QCMINFO_IDMAP_PLACEMENT
    property id : UInt32
    property fFlags : UInt32
    def initialize(@id : UInt32, @fFlags : UInt32)
    end
  end

  @[Extern]
  struct QCMINFO_IDMAP
    property nMaxIds : UInt32
    property pIdList : Win32cr::UI::Shell::QCMINFO_IDMAP_PLACEMENT*
    def initialize(@nMaxIds : UInt32, @pIdList : Win32cr::UI::Shell::QCMINFO_IDMAP_PLACEMENT*)
    end
  end

  @[Extern]
  struct QCMINFO
    property hmenu : Win32cr::UI::WindowsAndMessaging::HMENU
    property indexMenu : UInt32
    property idCmdFirst : UInt32
    property idCmdLast : UInt32
    property pIdMap : Win32cr::UI::Shell::QCMINFO_IDMAP*
    def initialize(@hmenu : Win32cr::UI::WindowsAndMessaging::HMENU, @indexMenu : UInt32, @idCmdFirst : UInt32, @idCmdLast : UInt32, @pIdMap : Win32cr::UI::Shell::QCMINFO_IDMAP*)
    end
  end

  @[Extern]
  struct DETAILSINFO
    property pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property fmt : Int32
    property cxChar : Int32
    property str : Win32cr::UI::Shell::Common::STRRET
    property iImage : Int32
    def initialize(@pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, @fmt : Int32, @cxChar : Int32, @str : Win32cr::UI::Shell::Common::STRRET, @iImage : Int32)
    end
  end

  @[Extern]
  struct SFVM_PROPPAGE_DATA
    property dwReserved : UInt32
    property pfn : Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE
    property lParam : Win32cr::Foundation::LPARAM
    def initialize(@dwReserved : UInt32, @pfn : Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, @lParam : Win32cr::Foundation::LPARAM)
    end
  end

  @[Extern]
  struct SFVM_HELPTOPIC_DATA
    property wszHelpFile : UInt16[260]
    property wszHelpTopic : UInt16[260]
    def initialize(@wszHelpFile : UInt16[260], @wszHelpTopic : UInt16[260])
    end
  end

  @[Extern]
  struct ITEMSPACING
    property cxSmall : Int32
    property cySmall : Int32
    property cxLarge : Int32
    property cyLarge : Int32
    def initialize(@cxSmall : Int32, @cySmall : Int32, @cxLarge : Int32, @cyLarge : Int32)
    end
  end

  @[Extern]
  struct SFV_CREATE
    property cbSize : UInt32
    property pshf : Void*
    property psvOuter : Void*
    property psfvcb : Void*
    def initialize(@cbSize : UInt32, @pshf : Void*, @psvOuter : Void*, @psfvcb : Void*)
    end
  end

  @[Extern]
  struct DEFCONTEXTMENU
    property hwnd : Win32cr::Foundation::HWND
    property pcmcb : Void*
    property pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property psf : Void*
    property cidl : UInt32
    property apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**
    property punkAssociationInfo : Void*
    property cKeys : UInt32
    property aKeys : Win32cr::System::Registry::HKEY*
    def initialize(@hwnd : Win32cr::Foundation::HWND, @pcmcb : Void*, @pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, @psf : Void*, @cidl : UInt32, @apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, @punkAssociationInfo : Void*, @cKeys : UInt32, @aKeys : Win32cr::System::Registry::HKEY*)
    end
  end

  @[Extern]
  struct DFMICS
    property cbSize : UInt32
    property fMask : UInt32
    property lParam : Win32cr::Foundation::LPARAM
    property idCmdFirst : UInt32
    property idDefMax : UInt32
    property pici : Win32cr::UI::Shell::CMINVOKECOMMANDINFO*
    property punkSite : Void*
    def initialize(@cbSize : UInt32, @fMask : UInt32, @lParam : Win32cr::Foundation::LPARAM, @idCmdFirst : UInt32, @idDefMax : UInt32, @pici : Win32cr::UI::Shell::CMINVOKECOMMANDINFO*, @punkSite : Void*)
    end
  end

  @[Extern]
  struct CSFV
    property cbSize : UInt32
    property pshf : Void*
    property psvOuter : Void*
    property pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property lEvents : Int32
    property pfnCallback : Win32cr::UI::Shell::LPFNVIEWCALLBACK
    property fvm : Win32cr::UI::Shell::FOLDERVIEWMODE
    def initialize(@cbSize : UInt32, @pshf : Void*, @psvOuter : Void*, @pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, @lEvents : Int32, @pfnCallback : Win32cr::UI::Shell::LPFNVIEWCALLBACK, @fvm : Win32cr::UI::Shell::FOLDERVIEWMODE)
    end
  end

  @[Extern]
  struct SHELLSTATEA
    property _bitfield1 : Int32
    property dwWin95Unused : UInt32
    property uWin95Unused : UInt32
    property lParamSort : Int32
    property iSortDirection : Int32
    property version : UInt32
    property uNotUsed : UInt32
    property _bitfield2 : Int32
    def initialize(@_bitfield1 : Int32, @dwWin95Unused : UInt32, @uWin95Unused : UInt32, @lParamSort : Int32, @iSortDirection : Int32, @version : UInt32, @uNotUsed : UInt32, @_bitfield2 : Int32)
    end
  end

  @[Extern]
  struct SHELLSTATEW
    property _bitfield1 : Int32
    property dwWin95Unused : UInt32
    property uWin95Unused : UInt32
    property lParamSort : Int32
    property iSortDirection : Int32
    property version : UInt32
    property uNotUsed : UInt32
    property _bitfield2 : Int32
    def initialize(@_bitfield1 : Int32, @dwWin95Unused : UInt32, @uWin95Unused : UInt32, @lParamSort : Int32, @iSortDirection : Int32, @version : UInt32, @uNotUsed : UInt32, @_bitfield2 : Int32)
    end
  end

  @[Extern]
  struct SHELLFLAGSTATE
    property _bitfield : Int32
    def initialize(@_bitfield : Int32)
    end
  end

  @[Extern]
  struct BANDINFOSFB
    property dwMask : UInt32
    property dwStateMask : UInt32
    property dwState : UInt32
    property crBkgnd : UInt32
    property crBtnLt : UInt32
    property crBtnDk : UInt32
    property wViewMode : UInt16
    property wAlign : UInt16
    property psf : Void*
    property pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*
    def initialize(@dwMask : UInt32, @dwStateMask : UInt32, @dwState : UInt32, @crBkgnd : UInt32, @crBtnLt : UInt32, @crBtnDk : UInt32, @wViewMode : UInt16, @wAlign : UInt16, @psf : Void*, @pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*)
    end
  end

  @[Extern]
  struct SHCOLUMNINFO
    property scid : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY
    property vt : UInt16
    property fmt : UInt32
    property cChars : UInt32
    property csFlags : UInt32
    property wszTitle : UInt16[80]
    property wszDescription : UInt16[128]
    def initialize(@scid : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY, @vt : UInt16, @fmt : UInt32, @cChars : UInt32, @csFlags : UInt32, @wszTitle : UInt16[80], @wszDescription : UInt16[128])
    end
  end

  @[Extern]
  struct SHCOLUMNINIT
    property dwFlags : UInt32
    property dwReserved : UInt32
    property wszFolder : UInt16[260]
    def initialize(@dwFlags : UInt32, @dwReserved : UInt32, @wszFolder : UInt16[260])
    end
  end

  @[Extern]
  struct SHCOLUMNDATA
    property dwFlags : UInt32
    property dwFileAttributes : UInt32
    property dwReserved : UInt32
    property pwszExt : Win32cr::Foundation::PWSTR
    property wszFile : UInt16[260]
    def initialize(@dwFlags : UInt32, @dwFileAttributes : UInt32, @dwReserved : UInt32, @pwszExt : Win32cr::Foundation::PWSTR, @wszFile : UInt16[260])
    end
  end

  @[Extern]
  struct SHChangeProductKeyAsIDList
    property cb : UInt16
    property wszProductKey : UInt16[39]
    property cbZero : UInt16
    def initialize(@cb : UInt16, @wszProductKey : UInt16[39], @cbZero : UInt16)
    end
  end

  @[Extern]
  struct TBINFO
    property cbuttons : UInt32
    property uFlags : UInt32
    def initialize(@cbuttons : UInt32, @uFlags : UInt32)
    end
  end

  @[Extern]
  struct SFV_SETITEMPOS
    property pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property pt : Win32cr::Foundation::POINT
    def initialize(@pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, @pt : Win32cr::Foundation::POINT)
    end
  end

  @[Extern]
  struct AASHELLMENUFILENAME
    property cbTotal : Int16
    property rgbReserved : UInt8[12]
    property szFileName : UInt16*
    def initialize(@cbTotal : Int16, @rgbReserved : UInt8[12], @szFileName : UInt16*)
    end
  end

  @[Extern]
  struct AASHELLMENUITEM
    property lpReserved1 : Void*
    property iReserved : Int32
    property uiReserved : UInt32
    property lpName : Win32cr::UI::Shell::AASHELLMENUFILENAME*
    property psz : Win32cr::Foundation::PWSTR
    def initialize(@lpReserved1 : Void*, @iReserved : Int32, @uiReserved : UInt32, @lpName : Win32cr::UI::Shell::AASHELLMENUFILENAME*, @psz : Win32cr::Foundation::PWSTR)
    end
  end

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct DRAGINFOA
    property uSize : UInt32
    property pt : Win32cr::Foundation::POINT
    property fNC : Win32cr::Foundation::BOOL
    property lpFileList : Win32cr::Foundation::PSTR
    property grfKeyState : UInt32
    def initialize(@uSize : UInt32, @pt : Win32cr::Foundation::POINT, @fNC : Win32cr::Foundation::BOOL, @lpFileList : Win32cr::Foundation::PSTR, @grfKeyState : UInt32)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct DRAGINFOW
    property uSize : UInt32
    property pt : Win32cr::Foundation::POINT
    property fNC : Win32cr::Foundation::BOOL
    property lpFileList : Win32cr::Foundation::PWSTR
    property grfKeyState : UInt32
    def initialize(@uSize : UInt32, @pt : Win32cr::Foundation::POINT, @fNC : Win32cr::Foundation::BOOL, @lpFileList : Win32cr::Foundation::PWSTR, @grfKeyState : UInt32)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct APPBARDATA
    property cbSize : UInt32
    property hWnd : Win32cr::Foundation::HWND
    property uCallbackMessage : UInt32
    property uEdge : UInt32
    property rc : Win32cr::Foundation::RECT
    property lParam : Win32cr::Foundation::LPARAM
    def initialize(@cbSize : UInt32, @hWnd : Win32cr::Foundation::HWND, @uCallbackMessage : UInt32, @uEdge : UInt32, @rc : Win32cr::Foundation::RECT, @lParam : Win32cr::Foundation::LPARAM)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct SHFILEOPSTRUCTA
    property hwnd : Win32cr::Foundation::HWND
    property wFunc : UInt32
    property pFrom : Int8*
    property pTo : Int8*
    property fFlags : UInt16
    property fAnyOperationsAborted : Win32cr::Foundation::BOOL
    property hNameMappings : Void*
    property lpszProgressTitle : Win32cr::Foundation::PSTR
    def initialize(@hwnd : Win32cr::Foundation::HWND, @wFunc : UInt32, @pFrom : Int8*, @pTo : Int8*, @fFlags : UInt16, @fAnyOperationsAborted : Win32cr::Foundation::BOOL, @hNameMappings : Void*, @lpszProgressTitle : Win32cr::Foundation::PSTR)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct SHFILEOPSTRUCTW
    property hwnd : Win32cr::Foundation::HWND
    property wFunc : UInt32
    property pFrom : Win32cr::Foundation::PWSTR
    property pTo : Win32cr::Foundation::PWSTR
    property fFlags : UInt16
    property fAnyOperationsAborted : Win32cr::Foundation::BOOL
    property hNameMappings : Void*
    property lpszProgressTitle : Win32cr::Foundation::PWSTR
    def initialize(@hwnd : Win32cr::Foundation::HWND, @wFunc : UInt32, @pFrom : Win32cr::Foundation::PWSTR, @pTo : Win32cr::Foundation::PWSTR, @fFlags : UInt16, @fAnyOperationsAborted : Win32cr::Foundation::BOOL, @hNameMappings : Void*, @lpszProgressTitle : Win32cr::Foundation::PWSTR)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct SHNAMEMAPPINGA
    property pszOldPath : Win32cr::Foundation::PSTR
    property pszNewPath : Win32cr::Foundation::PSTR
    property cchOldPath : Int32
    property cchNewPath : Int32
    def initialize(@pszOldPath : Win32cr::Foundation::PSTR, @pszNewPath : Win32cr::Foundation::PSTR, @cchOldPath : Int32, @cchNewPath : Int32)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct SHNAMEMAPPINGW
    property pszOldPath : Win32cr::Foundation::PWSTR
    property pszNewPath : Win32cr::Foundation::PWSTR
    property cchOldPath : Int32
    property cchNewPath : Int32
    def initialize(@pszOldPath : Win32cr::Foundation::PWSTR, @pszNewPath : Win32cr::Foundation::PWSTR, @cchOldPath : Int32, @cchNewPath : Int32)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct SHELLEXECUTEINFOA
    property cbSize : UInt32
    property fMask : UInt32
    property hwnd : Win32cr::Foundation::HWND
    property lpVerb : Win32cr::Foundation::PSTR
    property lpFile : Win32cr::Foundation::PSTR
    property lpParameters : Win32cr::Foundation::PSTR
    property lpDirectory : Win32cr::Foundation::PSTR
    property nShow : Int32
    property hInstApp : Win32cr::Foundation::HINSTANCE
    property lpIDList : Void*
    property lpClass : Win32cr::Foundation::PSTR
    property hkeyClass : Win32cr::System::Registry::HKEY
    property dwHotKey : UInt32
    property anonymous : Anonymous_e__Union_
    property hProcess : Win32cr::Foundation::HANDLE

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property hIcon : Win32cr::Foundation::HANDLE
    property hMonitor : Win32cr::Foundation::HANDLE
    def initialize(@hIcon : Win32cr::Foundation::HANDLE, @hMonitor : Win32cr::Foundation::HANDLE)
    end
    end

    def initialize(@cbSize : UInt32, @fMask : UInt32, @hwnd : Win32cr::Foundation::HWND, @lpVerb : Win32cr::Foundation::PSTR, @lpFile : Win32cr::Foundation::PSTR, @lpParameters : Win32cr::Foundation::PSTR, @lpDirectory : Win32cr::Foundation::PSTR, @nShow : Int32, @hInstApp : Win32cr::Foundation::HINSTANCE, @lpIDList : Void*, @lpClass : Win32cr::Foundation::PSTR, @hkeyClass : Win32cr::System::Registry::HKEY, @dwHotKey : UInt32, @anonymous : Anonymous_e__Union_, @hProcess : Win32cr::Foundation::HANDLE)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct SHELLEXECUTEINFOW
    property cbSize : UInt32
    property fMask : UInt32
    property hwnd : Win32cr::Foundation::HWND
    property lpVerb : Win32cr::Foundation::PWSTR
    property lpFile : Win32cr::Foundation::PWSTR
    property lpParameters : Win32cr::Foundation::PWSTR
    property lpDirectory : Win32cr::Foundation::PWSTR
    property nShow : Int32
    property hInstApp : Win32cr::Foundation::HINSTANCE
    property lpIDList : Void*
    property lpClass : Win32cr::Foundation::PWSTR
    property hkeyClass : Win32cr::System::Registry::HKEY
    property dwHotKey : UInt32
    property anonymous : Anonymous_e__Union_
    property hProcess : Win32cr::Foundation::HANDLE

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property hIcon : Win32cr::Foundation::HANDLE
    property hMonitor : Win32cr::Foundation::HANDLE
    def initialize(@hIcon : Win32cr::Foundation::HANDLE, @hMonitor : Win32cr::Foundation::HANDLE)
    end
    end

    def initialize(@cbSize : UInt32, @fMask : UInt32, @hwnd : Win32cr::Foundation::HWND, @lpVerb : Win32cr::Foundation::PWSTR, @lpFile : Win32cr::Foundation::PWSTR, @lpParameters : Win32cr::Foundation::PWSTR, @lpDirectory : Win32cr::Foundation::PWSTR, @nShow : Int32, @hInstApp : Win32cr::Foundation::HINSTANCE, @lpIDList : Void*, @lpClass : Win32cr::Foundation::PWSTR, @hkeyClass : Win32cr::System::Registry::HKEY, @dwHotKey : UInt32, @anonymous : Anonymous_e__Union_, @hProcess : Win32cr::Foundation::HANDLE)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct SHCREATEPROCESSINFOW
    property cbSize : UInt32
    property fMask : UInt32
    property hwnd : Win32cr::Foundation::HWND
    property pszFile : Win32cr::Foundation::PWSTR
    property pszParameters : Win32cr::Foundation::PWSTR
    property pszCurrentDirectory : Win32cr::Foundation::PWSTR
    property hUserToken : Win32cr::Foundation::HANDLE
    property lpProcessAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*
    property lpThreadAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*
    property bInheritHandles : Win32cr::Foundation::BOOL
    property dwCreationFlags : UInt32
    property lpStartupInfo : Win32cr::System::Threading::STARTUPINFOW*
    property lpProcessInformation : Win32cr::System::Threading::PROCESS_INFORMATION*
    def initialize(@cbSize : UInt32, @fMask : UInt32, @hwnd : Win32cr::Foundation::HWND, @pszFile : Win32cr::Foundation::PWSTR, @pszParameters : Win32cr::Foundation::PWSTR, @pszCurrentDirectory : Win32cr::Foundation::PWSTR, @hUserToken : Win32cr::Foundation::HANDLE, @lpProcessAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, @lpThreadAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, @bInheritHandles : Win32cr::Foundation::BOOL, @dwCreationFlags : UInt32, @lpStartupInfo : Win32cr::System::Threading::STARTUPINFOW*, @lpProcessInformation : Win32cr::System::Threading::PROCESS_INFORMATION*)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct ASSOCIATIONELEMENT
    property ac : Win32cr::UI::Shell::ASSOCCLASS
    property hkClass : Win32cr::System::Registry::HKEY
    property pszClass : Win32cr::Foundation::PWSTR
    def initialize(@ac : Win32cr::UI::Shell::ASSOCCLASS, @hkClass : Win32cr::System::Registry::HKEY, @pszClass : Win32cr::Foundation::PWSTR)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct SHQUERYRBINFO
    property cbSize : UInt32
    property i64Size : Int64
    property i64NumItems : Int64
    def initialize(@cbSize : UInt32, @i64Size : Int64, @i64NumItems : Int64)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct NOTIFYICONDATAA
    property cbSize : UInt32
    property hWnd : Win32cr::Foundation::HWND
    property uID : UInt32
    property uFlags : Win32cr::UI::Shell::NOTIFY_ICON_DATA_FLAGS
    property uCallbackMessage : UInt32
    property hIcon : Win32cr::UI::WindowsAndMessaging::HICON
    property szTip : Win32cr::Foundation::CHAR[128]
    property dwState : UInt32
    property dwStateMask : UInt32
    property szInfo : Win32cr::Foundation::CHAR[256]
    property anonymous : Anonymous_e__Union_
    property szInfoTitle : Win32cr::Foundation::CHAR[64]
    property dwInfoFlags : UInt32
    property guidItem : LibC::GUID
    property hBalloonIcon : Win32cr::UI::WindowsAndMessaging::HICON

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property uTimeout : UInt32
    property uVersion : UInt32
    def initialize(@uTimeout : UInt32, @uVersion : UInt32)
    end
    end

    def initialize(@cbSize : UInt32, @hWnd : Win32cr::Foundation::HWND, @uID : UInt32, @uFlags : Win32cr::UI::Shell::NOTIFY_ICON_DATA_FLAGS, @uCallbackMessage : UInt32, @hIcon : Win32cr::UI::WindowsAndMessaging::HICON, @szTip : Win32cr::Foundation::CHAR[128], @dwState : UInt32, @dwStateMask : UInt32, @szInfo : Win32cr::Foundation::CHAR[256], @anonymous : Anonymous_e__Union_, @szInfoTitle : Win32cr::Foundation::CHAR[64], @dwInfoFlags : UInt32, @guidItem : LibC::GUID, @hBalloonIcon : Win32cr::UI::WindowsAndMessaging::HICON)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct NOTIFYICONDATAW
    property cbSize : UInt32
    property hWnd : Win32cr::Foundation::HWND
    property uID : UInt32
    property uFlags : Win32cr::UI::Shell::NOTIFY_ICON_DATA_FLAGS
    property uCallbackMessage : UInt32
    property hIcon : Win32cr::UI::WindowsAndMessaging::HICON
    property szTip : UInt16[128]
    property dwState : UInt32
    property dwStateMask : UInt32
    property szInfo : UInt16[256]
    property anonymous : Anonymous_e__Union_
    property szInfoTitle : UInt16[64]
    property dwInfoFlags : UInt32
    property guidItem : LibC::GUID
    property hBalloonIcon : Win32cr::UI::WindowsAndMessaging::HICON

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property uTimeout : UInt32
    property uVersion : UInt32
    def initialize(@uTimeout : UInt32, @uVersion : UInt32)
    end
    end

    def initialize(@cbSize : UInt32, @hWnd : Win32cr::Foundation::HWND, @uID : UInt32, @uFlags : Win32cr::UI::Shell::NOTIFY_ICON_DATA_FLAGS, @uCallbackMessage : UInt32, @hIcon : Win32cr::UI::WindowsAndMessaging::HICON, @szTip : UInt16[128], @dwState : UInt32, @dwStateMask : UInt32, @szInfo : UInt16[256], @anonymous : Anonymous_e__Union_, @szInfoTitle : UInt16[64], @dwInfoFlags : UInt32, @guidItem : LibC::GUID, @hBalloonIcon : Win32cr::UI::WindowsAndMessaging::HICON)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct NOTIFYICONIDENTIFIER
    property cbSize : UInt32
    property hWnd : Win32cr::Foundation::HWND
    property uID : UInt32
    property guidItem : LibC::GUID
    def initialize(@cbSize : UInt32, @hWnd : Win32cr::Foundation::HWND, @uID : UInt32, @guidItem : LibC::GUID)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct SHFILEINFOA
    property hIcon : Win32cr::UI::WindowsAndMessaging::HICON
    property iIcon : Int32
    property dwAttributes : UInt32
    property szDisplayName : Win32cr::Foundation::CHAR[260]
    property szTypeName : Win32cr::Foundation::CHAR[80]
    def initialize(@hIcon : Win32cr::UI::WindowsAndMessaging::HICON, @iIcon : Int32, @dwAttributes : UInt32, @szDisplayName : Win32cr::Foundation::CHAR[260], @szTypeName : Win32cr::Foundation::CHAR[80])
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct SHFILEINFOW
    property hIcon : Win32cr::UI::WindowsAndMessaging::HICON
    property iIcon : Int32
    property dwAttributes : UInt32
    property szDisplayName : UInt16[260]
    property szTypeName : UInt16[80]
    def initialize(@hIcon : Win32cr::UI::WindowsAndMessaging::HICON, @iIcon : Int32, @dwAttributes : UInt32, @szDisplayName : UInt16[260], @szTypeName : UInt16[80])
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct SHSTOCKICONINFO
    property cbSize : UInt32
    property hIcon : Win32cr::UI::WindowsAndMessaging::HICON
    property iSysImageIndex : Int32
    property iIcon : Int32
    property szPath : UInt16[260]
    def initialize(@cbSize : UInt32, @hIcon : Win32cr::UI::WindowsAndMessaging::HICON, @iSysImageIndex : Int32, @iIcon : Int32, @szPath : UInt16[260])
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct OPEN_PRINTER_PROPS_INFOA
    property dwSize : UInt32
    property pszSheetName : Win32cr::Foundation::PSTR
    property uSheetIndex : UInt32
    property dwFlags : UInt32
    property bModal : Win32cr::Foundation::BOOL
    def initialize(@dwSize : UInt32, @pszSheetName : Win32cr::Foundation::PSTR, @uSheetIndex : UInt32, @dwFlags : UInt32, @bModal : Win32cr::Foundation::BOOL)
    end
  end
  {% end %}

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  struct OPEN_PRINTER_PROPS_INFOW
    property dwSize : UInt32
    property pszSheetName : Win32cr::Foundation::PWSTR
    property uSheetIndex : UInt32
    property dwFlags : UInt32
    property bModal : Win32cr::Foundation::BOOL
    def initialize(@dwSize : UInt32, @pszSheetName : Win32cr::Foundation::PWSTR, @uSheetIndex : UInt32, @dwFlags : UInt32, @bModal : Win32cr::Foundation::BOOL)
    end
  end
  {% end %}

  @[Extern]
  struct NC_ADDRESS
    property pAddrInfo : NET_ADDRESS_INFO*
    property port_number : UInt16
    property prefix_length : UInt8

    # Nested Type NET_ADDRESS_INFO
    @[Extern]
    struct NET_ADDRESS_INFO
    def initialize()
    end
    end

    def initialize(@pAddrInfo : NET_ADDRESS_INFO*, @port_number : UInt16, @prefix_length : UInt8)
    end
  end

  @[Extern]
  struct PARSEDURLA
    property cbSize : UInt32
    property pszProtocol : Win32cr::Foundation::PSTR
    property cchProtocol : UInt32
    property pszSuffix : Win32cr::Foundation::PSTR
    property cchSuffix : UInt32
    property nScheme : UInt32
    def initialize(@cbSize : UInt32, @pszProtocol : Win32cr::Foundation::PSTR, @cchProtocol : UInt32, @pszSuffix : Win32cr::Foundation::PSTR, @cchSuffix : UInt32, @nScheme : UInt32)
    end
  end

  @[Extern]
  struct PARSEDURLW
    property cbSize : UInt32
    property pszProtocol : Win32cr::Foundation::PWSTR
    property cchProtocol : UInt32
    property pszSuffix : Win32cr::Foundation::PWSTR
    property cchSuffix : UInt32
    property nScheme : UInt32
    def initialize(@cbSize : UInt32, @pszProtocol : Win32cr::Foundation::PWSTR, @cchProtocol : UInt32, @pszSuffix : Win32cr::Foundation::PWSTR, @cchSuffix : UInt32, @nScheme : UInt32)
    end
  end

  @[Extern]
  struct QITAB
    property piid : LibC::GUID*
    property dwOffset : UInt32
    def initialize(@piid : LibC::GUID*, @dwOffset : UInt32)
    end
  end

  @[Extern]
  struct DLLVERSIONINFO
    property cbSize : UInt32
    property dwMajorVersion : UInt32
    property dwMinorVersion : UInt32
    property dwBuildNumber : UInt32
    property dwPlatformID : UInt32
    def initialize(@cbSize : UInt32, @dwMajorVersion : UInt32, @dwMinorVersion : UInt32, @dwBuildNumber : UInt32, @dwPlatformID : UInt32)
    end
  end

  @[Extern]
  struct DLLVERSIONINFO2
    property info1 : Win32cr::UI::Shell::DLLVERSIONINFO
    property dwFlags : UInt32
    property ullVersion : UInt64
    def initialize(@info1 : Win32cr::UI::Shell::DLLVERSIONINFO, @dwFlags : UInt32, @ullVersion : UInt64)
    end
  end

  @[Extern]
  struct APPINFODATA
    property cbSize : UInt32
    property dwMask : UInt32
    property pszDisplayName : Win32cr::Foundation::PWSTR
    property pszVersion : Win32cr::Foundation::PWSTR
    property pszPublisher : Win32cr::Foundation::PWSTR
    property pszProductID : Win32cr::Foundation::PWSTR
    property pszRegisteredOwner : Win32cr::Foundation::PWSTR
    property pszRegisteredCompany : Win32cr::Foundation::PWSTR
    property pszLanguage : Win32cr::Foundation::PWSTR
    property pszSupportUrl : Win32cr::Foundation::PWSTR
    property pszSupportTelephone : Win32cr::Foundation::PWSTR
    property pszHelpLink : Win32cr::Foundation::PWSTR
    property pszInstallLocation : Win32cr::Foundation::PWSTR
    property pszInstallSource : Win32cr::Foundation::PWSTR
    property pszInstallDate : Win32cr::Foundation::PWSTR
    property pszContact : Win32cr::Foundation::PWSTR
    property pszComments : Win32cr::Foundation::PWSTR
    property pszImage : Win32cr::Foundation::PWSTR
    property pszReadmeUrl : Win32cr::Foundation::PWSTR
    property pszUpdateInfoUrl : Win32cr::Foundation::PWSTR
    def initialize(@cbSize : UInt32, @dwMask : UInt32, @pszDisplayName : Win32cr::Foundation::PWSTR, @pszVersion : Win32cr::Foundation::PWSTR, @pszPublisher : Win32cr::Foundation::PWSTR, @pszProductID : Win32cr::Foundation::PWSTR, @pszRegisteredOwner : Win32cr::Foundation::PWSTR, @pszRegisteredCompany : Win32cr::Foundation::PWSTR, @pszLanguage : Win32cr::Foundation::PWSTR, @pszSupportUrl : Win32cr::Foundation::PWSTR, @pszSupportTelephone : Win32cr::Foundation::PWSTR, @pszHelpLink : Win32cr::Foundation::PWSTR, @pszInstallLocation : Win32cr::Foundation::PWSTR, @pszInstallSource : Win32cr::Foundation::PWSTR, @pszInstallDate : Win32cr::Foundation::PWSTR, @pszContact : Win32cr::Foundation::PWSTR, @pszComments : Win32cr::Foundation::PWSTR, @pszImage : Win32cr::Foundation::PWSTR, @pszReadmeUrl : Win32cr::Foundation::PWSTR, @pszUpdateInfoUrl : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct SLOWAPPINFO
    property ullSize : UInt64
    property ftLastUsed : Win32cr::Foundation::FILETIME
    property iTimesUsed : Int32
    property pszImage : Win32cr::Foundation::PWSTR
    def initialize(@ullSize : UInt64, @ftLastUsed : Win32cr::Foundation::FILETIME, @iTimesUsed : Int32, @pszImage : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct PUBAPPINFO
    property cbSize : UInt32
    property dwMask : UInt32
    property pszSource : Win32cr::Foundation::PWSTR
    property stAssigned : Win32cr::Foundation::SYSTEMTIME
    property stPublished : Win32cr::Foundation::SYSTEMTIME
    property stScheduled : Win32cr::Foundation::SYSTEMTIME
    property stExpire : Win32cr::Foundation::SYSTEMTIME
    def initialize(@cbSize : UInt32, @dwMask : UInt32, @pszSource : Win32cr::Foundation::PWSTR, @stAssigned : Win32cr::Foundation::SYSTEMTIME, @stPublished : Win32cr::Foundation::SYSTEMTIME, @stScheduled : Win32cr::Foundation::SYSTEMTIME, @stExpire : Win32cr::Foundation::SYSTEMTIME)
    end
  end

  @[Extern]
  struct CREDENTIAL_PROVIDER_FIELD_DESCRIPTOR
    property dwFieldID : UInt32
    property cpft : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_TYPE
    property pszLabel : Win32cr::Foundation::PWSTR
    property guidFieldType : LibC::GUID
    def initialize(@dwFieldID : UInt32, @cpft : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_TYPE, @pszLabel : Win32cr::Foundation::PWSTR, @guidFieldType : LibC::GUID)
    end
  end

  @[Extern]
  struct CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION
    property ulAuthenticationPackage : UInt32
    property clsidCredentialProvider : LibC::GUID
    property cbSerialization : UInt32
    property rgbSerialization : UInt8*
    def initialize(@ulAuthenticationPackage : UInt32, @clsidCredentialProvider : LibC::GUID, @cbSerialization : UInt32, @rgbSerialization : UInt8*)
    end
  end

  @[Extern]
  struct SYNCMGR_CONFLICT_ID_INFO
    property pblobID : Win32cr::System::Com::BYTE_BLOB*
    property pblobExtra : Win32cr::System::Com::BYTE_BLOB*
    def initialize(@pblobID : Win32cr::System::Com::BYTE_BLOB*, @pblobExtra : Win32cr::System::Com::BYTE_BLOB*)
    end
  end

  @[Extern]
  struct CONFIRM_CONFLICT_ITEM
    property pShellItem : Void*
    property pszOriginalName : Win32cr::Foundation::PWSTR
    property pszAlternateName : Win32cr::Foundation::PWSTR
    property pszLocationShort : Win32cr::Foundation::PWSTR
    property pszLocationFull : Win32cr::Foundation::PWSTR
    property nType : Win32cr::UI::Shell::SYNCMGR_CONFLICT_ITEM_TYPE
    def initialize(@pShellItem : Void*, @pszOriginalName : Win32cr::Foundation::PWSTR, @pszAlternateName : Win32cr::Foundation::PWSTR, @pszLocationShort : Win32cr::Foundation::PWSTR, @pszLocationFull : Win32cr::Foundation::PWSTR, @nType : Win32cr::UI::Shell::SYNCMGR_CONFLICT_ITEM_TYPE)
    end
  end

  @[Extern]
  struct CONFIRM_CONFLICT_RESULT_INFO
    property pszNewName : Win32cr::Foundation::PWSTR
    property iItemIndex : UInt32
    def initialize(@pszNewName : Win32cr::Foundation::PWSTR, @iItemIndex : UInt32)
    end
  end

  @[Extern]
  struct WTS_THUMBNAILID
    property rgbKey : UInt8[16]
    def initialize(@rgbKey : UInt8[16])
    end
  end

  @[Extern]
  struct SYNCMGRPROGRESSITEM
    property cbSize : UInt32
    property mask : UInt32
    property lpcStatusText : Win32cr::Foundation::PWSTR
    property dwStatusType : UInt32
    property iProgValue : Int32
    property iMaxValue : Int32
    def initialize(@cbSize : UInt32, @mask : UInt32, @lpcStatusText : Win32cr::Foundation::PWSTR, @dwStatusType : UInt32, @iProgValue : Int32, @iMaxValue : Int32)
    end
  end

  @[Extern]
  struct SYNCMGRLOGERRORINFO
    property cbSize : UInt32
    property mask : UInt32
    property dwSyncMgrErrorFlags : UInt32
    property error_id : LibC::GUID
    property item_id : LibC::GUID
    def initialize(@cbSize : UInt32, @mask : UInt32, @dwSyncMgrErrorFlags : UInt32, @error_id : LibC::GUID, @item_id : LibC::GUID)
    end
  end

  @[Extern]
  struct SYNCMGRITEM
    property cbSize : UInt32
    property dwFlags : UInt32
    property item_id : LibC::GUID
    property dwItemState : UInt32
    property hIcon : Win32cr::UI::WindowsAndMessaging::HICON
    property wszItemName : UInt16[128]
    property ftLastUpdate : Win32cr::Foundation::FILETIME
    def initialize(@cbSize : UInt32, @dwFlags : UInt32, @item_id : LibC::GUID, @dwItemState : UInt32, @hIcon : Win32cr::UI::WindowsAndMessaging::HICON, @wszItemName : UInt16[128], @ftLastUpdate : Win32cr::Foundation::FILETIME)
    end
  end

  @[Extern]
  struct SYNCMGRHANDLERINFO
    property cbSize : UInt32
    property hIcon : Win32cr::UI::WindowsAndMessaging::HICON
    property sync_mgr_handler_flags : UInt32
    property wszHandlerName : UInt16[32]
    def initialize(@cbSize : UInt32, @hIcon : Win32cr::UI::WindowsAndMessaging::HICON, @sync_mgr_handler_flags : UInt32, @wszHandlerName : UInt16[32])
    end
  end

  @[Extern]
  struct WINDOWDATA
    property dwWindowID : UInt32
    property uiCP : UInt32
    property pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property lpszUrl : Win32cr::Foundation::PWSTR
    property lpszUrlLocation : Win32cr::Foundation::PWSTR
    property lpszTitle : Win32cr::Foundation::PWSTR
    def initialize(@dwWindowID : UInt32, @uiCP : UInt32, @pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, @lpszUrl : Win32cr::Foundation::PWSTR, @lpszUrlLocation : Win32cr::Foundation::PWSTR, @lpszTitle : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct HLITEM
    property uHLID : UInt32
    property pwzFriendlyName : Win32cr::Foundation::PWSTR
    def initialize(@uHLID : UInt32, @pwzFriendlyName : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct HLTBINFO
    property uDockType : UInt32
    property rcTbPos : Win32cr::Foundation::RECT
    def initialize(@uDockType : UInt32, @rcTbPos : Win32cr::Foundation::RECT)
    end
  end

  @[Extern]
  struct HLBWINFO
    property cbSize : UInt32
    property grfHLBWIF : UInt32
    property rcFramePos : Win32cr::Foundation::RECT
    property rcDocPos : Win32cr::Foundation::RECT
    property hltbinfo : Win32cr::UI::Shell::HLTBINFO
    def initialize(@cbSize : UInt32, @grfHLBWIF : UInt32, @rcFramePos : Win32cr::Foundation::RECT, @rcDocPos : Win32cr::Foundation::RECT, @hltbinfo : Win32cr::UI::Shell::HLTBINFO)
    end
  end

  @[Extern]
  struct BASEBROWSERDATAXP
    property _hwnd : Win32cr::Foundation::HWND
    property _ptl : Void*
    property _phlf : Void*
    property _pauto_wb2 : Void*
    property _pauto_eds : Void*
    property _pauto_ss : Void*
    property _e_secure_lock_icon : Int32
    property _bitfield : UInt32
    property _u_activate_state : UInt32
    property _pidl_view_state : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property _pct_view : Void*
    property _pidl_cur : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property _psv : Void*
    property _psf : Void*
    property _hwnd_view : Win32cr::Foundation::HWND
    property _psz_title_cur : Win32cr::Foundation::PWSTR
    property _pidl_pending : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property _psv_pending : Void*
    property _psf_pending : Void*
    property _hwnd_view_pending : Win32cr::Foundation::HWND
    property _psz_title_pending : Win32cr::Foundation::PWSTR
    property _f_is_view_mshtml : Win32cr::Foundation::BOOL
    property _f_privacy_impacted : Win32cr::Foundation::BOOL
    property _clsid_view : LibC::GUID
    property _clsid_view_pending : LibC::GUID
    property _hwnd_frame : Win32cr::Foundation::HWND
    def initialize(@_hwnd : Win32cr::Foundation::HWND, @_ptl : Void*, @_phlf : Void*, @_pauto_wb2 : Void*, @_pauto_eds : Void*, @_pauto_ss : Void*, @_e_secure_lock_icon : Int32, @_bitfield : UInt32, @_u_activate_state : UInt32, @_pidl_view_state : Win32cr::UI::Shell::Common::ITEMIDLIST*, @_pct_view : Void*, @_pidl_cur : Win32cr::UI::Shell::Common::ITEMIDLIST*, @_psv : Void*, @_psf : Void*, @_hwnd_view : Win32cr::Foundation::HWND, @_psz_title_cur : Win32cr::Foundation::PWSTR, @_pidl_pending : Win32cr::UI::Shell::Common::ITEMIDLIST*, @_psv_pending : Void*, @_psf_pending : Void*, @_hwnd_view_pending : Win32cr::Foundation::HWND, @_psz_title_pending : Win32cr::Foundation::PWSTR, @_f_is_view_mshtml : Win32cr::Foundation::BOOL, @_f_privacy_impacted : Win32cr::Foundation::BOOL, @_clsid_view : LibC::GUID, @_clsid_view_pending : LibC::GUID, @_hwnd_frame : Win32cr::Foundation::HWND)
    end
  end

  @[Extern]
  struct BASEBROWSERDATALH
    property _hwnd : Win32cr::Foundation::HWND
    property _ptl : Void*
    property _phlf : Void*
    property _pauto_wb2 : Void*
    property _pauto_eds : Void*
    property _pauto_ss : Void*
    property _e_secure_lock_icon : Int32
    property _bitfield : UInt32
    property _u_activate_state : UInt32
    property _pidl_view_state : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property _pct_view : Void*
    property _pidl_cur : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property _psv : Void*
    property _psf : Void*
    property _hwnd_view : Win32cr::Foundation::HWND
    property _psz_title_cur : Win32cr::Foundation::PWSTR
    property _pidl_pending : Win32cr::UI::Shell::Common::ITEMIDLIST*
    property _psv_pending : Void*
    property _psf_pending : Void*
    property _hwnd_view_pending : Win32cr::Foundation::HWND
    property _psz_title_pending : Win32cr::Foundation::PWSTR
    property _f_is_view_mshtml : Win32cr::Foundation::BOOL
    property _f_privacy_impacted : Win32cr::Foundation::BOOL
    property _clsid_view : LibC::GUID
    property _clsid_view_pending : LibC::GUID
    property _hwnd_frame : Win32cr::Foundation::HWND
    property _l_phishing_filter_status : Int32
    def initialize(@_hwnd : Win32cr::Foundation::HWND, @_ptl : Void*, @_phlf : Void*, @_pauto_wb2 : Void*, @_pauto_eds : Void*, @_pauto_ss : Void*, @_e_secure_lock_icon : Int32, @_bitfield : UInt32, @_u_activate_state : UInt32, @_pidl_view_state : Win32cr::UI::Shell::Common::ITEMIDLIST*, @_pct_view : Void*, @_pidl_cur : Win32cr::UI::Shell::Common::ITEMIDLIST*, @_psv : Void*, @_psf : Void*, @_hwnd_view : Win32cr::Foundation::HWND, @_psz_title_cur : Win32cr::Foundation::PWSTR, @_pidl_pending : Win32cr::UI::Shell::Common::ITEMIDLIST*, @_psv_pending : Void*, @_psf_pending : Void*, @_hwnd_view_pending : Win32cr::Foundation::HWND, @_psz_title_pending : Win32cr::Foundation::PWSTR, @_f_is_view_mshtml : Win32cr::Foundation::BOOL, @_f_privacy_impacted : Win32cr::Foundation::BOOL, @_clsid_view : LibC::GUID, @_clsid_view_pending : LibC::GUID, @_hwnd_frame : Win32cr::Foundation::HWND, @_l_phishing_filter_status : Int32)
    end
  end

  @[Extern]
  struct FOLDERSETDATA
    property _fs : Win32cr::UI::Shell::FOLDERSETTINGS
    property _vid_restore : LibC::GUID
    property _dw_view_priority : UInt32
    def initialize(@_fs : Win32cr::UI::Shell::FOLDERSETTINGS, @_vid_restore : LibC::GUID, @_dw_view_priority : UInt32)
    end
  end

  @[Extern]
  struct TOOLBARITEM
    property ptbar : Void*
    property rcBorderTool : Win32cr::Foundation::RECT
    property pwszItem : Win32cr::Foundation::PWSTR
    property fShow : Win32cr::Foundation::BOOL
    property hMon : Win32cr::Graphics::Gdi::HMONITOR
    def initialize(@ptbar : Void*, @rcBorderTool : Win32cr::Foundation::RECT, @pwszItem : Win32cr::Foundation::PWSTR, @fShow : Win32cr::Foundation::BOOL, @hMon : Win32cr::Graphics::Gdi::HMONITOR)
    end
  end

  @[Extern]
  struct CPLINFO
    property idIcon : Int32
    property idName : Int32
    property idInfo : Int32
    property lData : LibC::IntPtrT
    def initialize(@idIcon : Int32, @idName : Int32, @idInfo : Int32, @lData : LibC::IntPtrT)
    end
  end

  @[Extern]
  struct NEWCPLINFOA
    property dwSize : UInt32
    property dwFlags : UInt32
    property dwHelpContext : UInt32
    property lData : LibC::IntPtrT
    property hIcon : Win32cr::UI::WindowsAndMessaging::HICON
    property szName : Win32cr::Foundation::CHAR[32]
    property szInfo : Win32cr::Foundation::CHAR[64]
    property szHelpFile : Win32cr::Foundation::CHAR[128]
    def initialize(@dwSize : UInt32, @dwFlags : UInt32, @dwHelpContext : UInt32, @lData : LibC::IntPtrT, @hIcon : Win32cr::UI::WindowsAndMessaging::HICON, @szName : Win32cr::Foundation::CHAR[32], @szInfo : Win32cr::Foundation::CHAR[64], @szHelpFile : Win32cr::Foundation::CHAR[128])
    end
  end

  @[Extern]
  struct NEWCPLINFOW
    property dwSize : UInt32
    property dwFlags : UInt32
    property dwHelpContext : UInt32
    property lData : LibC::IntPtrT
    property hIcon : Win32cr::UI::WindowsAndMessaging::HICON
    property szName : UInt16[32]
    property szInfo : UInt16[64]
    property szHelpFile : UInt16[128]
    def initialize(@dwSize : UInt32, @dwFlags : UInt32, @dwHelpContext : UInt32, @lData : LibC::IntPtrT, @hIcon : Win32cr::UI::WindowsAndMessaging::HICON, @szName : UInt16[32], @szInfo : UInt16[64], @szHelpFile : UInt16[128])
    end
  end

  @[Extern]
  struct PROFILEINFOA
    property dwSize : UInt32
    property dwFlags : UInt32
    property lpUserName : Win32cr::Foundation::PSTR
    property lpProfilePath : Win32cr::Foundation::PSTR
    property lpDefaultPath : Win32cr::Foundation::PSTR
    property lpServerName : Win32cr::Foundation::PSTR
    property lpPolicyPath : Win32cr::Foundation::PSTR
    property hProfile : Win32cr::Foundation::HANDLE
    def initialize(@dwSize : UInt32, @dwFlags : UInt32, @lpUserName : Win32cr::Foundation::PSTR, @lpProfilePath : Win32cr::Foundation::PSTR, @lpDefaultPath : Win32cr::Foundation::PSTR, @lpServerName : Win32cr::Foundation::PSTR, @lpPolicyPath : Win32cr::Foundation::PSTR, @hProfile : Win32cr::Foundation::HANDLE)
    end
  end

  @[Extern]
  struct PROFILEINFOW
    property dwSize : UInt32
    property dwFlags : UInt32
    property lpUserName : Win32cr::Foundation::PWSTR
    property lpProfilePath : Win32cr::Foundation::PWSTR
    property lpDefaultPath : Win32cr::Foundation::PWSTR
    property lpServerName : Win32cr::Foundation::PWSTR
    property lpPolicyPath : Win32cr::Foundation::PWSTR
    property hProfile : Win32cr::Foundation::HANDLE
    def initialize(@dwSize : UInt32, @dwFlags : UInt32, @lpUserName : Win32cr::Foundation::PWSTR, @lpProfilePath : Win32cr::Foundation::PWSTR, @lpDefaultPath : Win32cr::Foundation::PWSTR, @lpServerName : Win32cr::Foundation::PWSTR, @lpPolicyPath : Win32cr::Foundation::PWSTR, @hProfile : Win32cr::Foundation::HANDLE)
    end
  end

  @[Extern]
  struct Urlinvokecommandinfoa
    property dwcbSize : UInt32
    property dwFlags : UInt32
    property hwndParent : Win32cr::Foundation::HWND
    property pcszVerb : Win32cr::Foundation::PSTR
    def initialize(@dwcbSize : UInt32, @dwFlags : UInt32, @hwndParent : Win32cr::Foundation::HWND, @pcszVerb : Win32cr::Foundation::PSTR)
    end
  end

  @[Extern]
  struct Urlinvokecommandinfow
    property dwcbSize : UInt32
    property dwFlags : UInt32
    property hwndParent : Win32cr::Foundation::HWND
    property pcszVerb : Win32cr::Foundation::PWSTR
    def initialize(@dwcbSize : UInt32, @dwFlags : UInt32, @hwndParent : Win32cr::Foundation::HWND, @pcszVerb : Win32cr::Foundation::PWSTR)
    end
  end

  {% if flag?(:i386) %}
  @[Extern]
  struct DRAGINFOA
    property uSize : UInt32
    property pt : Win32cr::Foundation::POINT
    property fNC : Win32cr::Foundation::BOOL
    property lpFileList : Win32cr::Foundation::PSTR
    property grfKeyState : UInt32
    def initialize(@uSize : UInt32, @pt : Win32cr::Foundation::POINT, @fNC : Win32cr::Foundation::BOOL, @lpFileList : Win32cr::Foundation::PSTR, @grfKeyState : UInt32)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct DRAGINFOW
    property uSize : UInt32
    property pt : Win32cr::Foundation::POINT
    property fNC : Win32cr::Foundation::BOOL
    property lpFileList : Win32cr::Foundation::PWSTR
    property grfKeyState : UInt32
    def initialize(@uSize : UInt32, @pt : Win32cr::Foundation::POINT, @fNC : Win32cr::Foundation::BOOL, @lpFileList : Win32cr::Foundation::PWSTR, @grfKeyState : UInt32)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct APPBARDATA
    property cbSize : UInt32
    property hWnd : Win32cr::Foundation::HWND
    property uCallbackMessage : UInt32
    property uEdge : UInt32
    property rc : Win32cr::Foundation::RECT
    property lParam : Win32cr::Foundation::LPARAM
    def initialize(@cbSize : UInt32, @hWnd : Win32cr::Foundation::HWND, @uCallbackMessage : UInt32, @uEdge : UInt32, @rc : Win32cr::Foundation::RECT, @lParam : Win32cr::Foundation::LPARAM)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct SHFILEOPSTRUCTA
    property hwnd : Win32cr::Foundation::HWND
    property wFunc : UInt32
    property pFrom : Int8*
    property pTo : Int8*
    property fFlags : UInt16
    property fAnyOperationsAborted : Win32cr::Foundation::BOOL
    property hNameMappings : Void*
    property lpszProgressTitle : Win32cr::Foundation::PSTR
    def initialize(@hwnd : Win32cr::Foundation::HWND, @wFunc : UInt32, @pFrom : Int8*, @pTo : Int8*, @fFlags : UInt16, @fAnyOperationsAborted : Win32cr::Foundation::BOOL, @hNameMappings : Void*, @lpszProgressTitle : Win32cr::Foundation::PSTR)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct SHFILEOPSTRUCTW
    property hwnd : Win32cr::Foundation::HWND
    property wFunc : UInt32
    property pFrom : Win32cr::Foundation::PWSTR
    property pTo : Win32cr::Foundation::PWSTR
    property fFlags : UInt16
    property fAnyOperationsAborted : Win32cr::Foundation::BOOL
    property hNameMappings : Void*
    property lpszProgressTitle : Win32cr::Foundation::PWSTR
    def initialize(@hwnd : Win32cr::Foundation::HWND, @wFunc : UInt32, @pFrom : Win32cr::Foundation::PWSTR, @pTo : Win32cr::Foundation::PWSTR, @fFlags : UInt16, @fAnyOperationsAborted : Win32cr::Foundation::BOOL, @hNameMappings : Void*, @lpszProgressTitle : Win32cr::Foundation::PWSTR)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct SHNAMEMAPPINGA
    property pszOldPath : Win32cr::Foundation::PSTR
    property pszNewPath : Win32cr::Foundation::PSTR
    property cchOldPath : Int32
    property cchNewPath : Int32
    def initialize(@pszOldPath : Win32cr::Foundation::PSTR, @pszNewPath : Win32cr::Foundation::PSTR, @cchOldPath : Int32, @cchNewPath : Int32)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct SHNAMEMAPPINGW
    property pszOldPath : Win32cr::Foundation::PWSTR
    property pszNewPath : Win32cr::Foundation::PWSTR
    property cchOldPath : Int32
    property cchNewPath : Int32
    def initialize(@pszOldPath : Win32cr::Foundation::PWSTR, @pszNewPath : Win32cr::Foundation::PWSTR, @cchOldPath : Int32, @cchNewPath : Int32)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct SHELLEXECUTEINFOA
    property cbSize : UInt32
    property fMask : UInt32
    property hwnd : Win32cr::Foundation::HWND
    property lpVerb : Win32cr::Foundation::PSTR
    property lpFile : Win32cr::Foundation::PSTR
    property lpParameters : Win32cr::Foundation::PSTR
    property lpDirectory : Win32cr::Foundation::PSTR
    property nShow : Int32
    property hInstApp : Win32cr::Foundation::HINSTANCE
    property lpIDList : Void*
    property lpClass : Win32cr::Foundation::PSTR
    property hkeyClass : Win32cr::System::Registry::HKEY
    property dwHotKey : UInt32
    property anonymous : Anonymous_e__Union_
    property hProcess : Win32cr::Foundation::HANDLE

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property hIcon : Win32cr::Foundation::HANDLE
    property hMonitor : Win32cr::Foundation::HANDLE
    def initialize(@hIcon : Win32cr::Foundation::HANDLE, @hMonitor : Win32cr::Foundation::HANDLE)
    end
    end

    def initialize(@cbSize : UInt32, @fMask : UInt32, @hwnd : Win32cr::Foundation::HWND, @lpVerb : Win32cr::Foundation::PSTR, @lpFile : Win32cr::Foundation::PSTR, @lpParameters : Win32cr::Foundation::PSTR, @lpDirectory : Win32cr::Foundation::PSTR, @nShow : Int32, @hInstApp : Win32cr::Foundation::HINSTANCE, @lpIDList : Void*, @lpClass : Win32cr::Foundation::PSTR, @hkeyClass : Win32cr::System::Registry::HKEY, @dwHotKey : UInt32, @anonymous : Anonymous_e__Union_, @hProcess : Win32cr::Foundation::HANDLE)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct SHELLEXECUTEINFOW
    property cbSize : UInt32
    property fMask : UInt32
    property hwnd : Win32cr::Foundation::HWND
    property lpVerb : Win32cr::Foundation::PWSTR
    property lpFile : Win32cr::Foundation::PWSTR
    property lpParameters : Win32cr::Foundation::PWSTR
    property lpDirectory : Win32cr::Foundation::PWSTR
    property nShow : Int32
    property hInstApp : Win32cr::Foundation::HINSTANCE
    property lpIDList : Void*
    property lpClass : Win32cr::Foundation::PWSTR
    property hkeyClass : Win32cr::System::Registry::HKEY
    property dwHotKey : UInt32
    property anonymous : Anonymous_e__Union_
    property hProcess : Win32cr::Foundation::HANDLE

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property hIcon : Win32cr::Foundation::HANDLE
    property hMonitor : Win32cr::Foundation::HANDLE
    def initialize(@hIcon : Win32cr::Foundation::HANDLE, @hMonitor : Win32cr::Foundation::HANDLE)
    end
    end

    def initialize(@cbSize : UInt32, @fMask : UInt32, @hwnd : Win32cr::Foundation::HWND, @lpVerb : Win32cr::Foundation::PWSTR, @lpFile : Win32cr::Foundation::PWSTR, @lpParameters : Win32cr::Foundation::PWSTR, @lpDirectory : Win32cr::Foundation::PWSTR, @nShow : Int32, @hInstApp : Win32cr::Foundation::HINSTANCE, @lpIDList : Void*, @lpClass : Win32cr::Foundation::PWSTR, @hkeyClass : Win32cr::System::Registry::HKEY, @dwHotKey : UInt32, @anonymous : Anonymous_e__Union_, @hProcess : Win32cr::Foundation::HANDLE)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct SHCREATEPROCESSINFOW
    property cbSize : UInt32
    property fMask : UInt32
    property hwnd : Win32cr::Foundation::HWND
    property pszFile : Win32cr::Foundation::PWSTR
    property pszParameters : Win32cr::Foundation::PWSTR
    property pszCurrentDirectory : Win32cr::Foundation::PWSTR
    property hUserToken : Win32cr::Foundation::HANDLE
    property lpProcessAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*
    property lpThreadAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*
    property bInheritHandles : Win32cr::Foundation::BOOL
    property dwCreationFlags : UInt32
    property lpStartupInfo : Win32cr::System::Threading::STARTUPINFOW*
    property lpProcessInformation : Win32cr::System::Threading::PROCESS_INFORMATION*
    def initialize(@cbSize : UInt32, @fMask : UInt32, @hwnd : Win32cr::Foundation::HWND, @pszFile : Win32cr::Foundation::PWSTR, @pszParameters : Win32cr::Foundation::PWSTR, @pszCurrentDirectory : Win32cr::Foundation::PWSTR, @hUserToken : Win32cr::Foundation::HANDLE, @lpProcessAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, @lpThreadAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, @bInheritHandles : Win32cr::Foundation::BOOL, @dwCreationFlags : UInt32, @lpStartupInfo : Win32cr::System::Threading::STARTUPINFOW*, @lpProcessInformation : Win32cr::System::Threading::PROCESS_INFORMATION*)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct ASSOCIATIONELEMENT
    property ac : Win32cr::UI::Shell::ASSOCCLASS
    property hkClass : Win32cr::System::Registry::HKEY
    property pszClass : Win32cr::Foundation::PWSTR
    def initialize(@ac : Win32cr::UI::Shell::ASSOCCLASS, @hkClass : Win32cr::System::Registry::HKEY, @pszClass : Win32cr::Foundation::PWSTR)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct SHQUERYRBINFO
    property cbSize : UInt32
    property i64Size : Int64
    property i64NumItems : Int64
    def initialize(@cbSize : UInt32, @i64Size : Int64, @i64NumItems : Int64)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct NOTIFYICONDATAA
    property cbSize : UInt32
    property hWnd : Win32cr::Foundation::HWND
    property uID : UInt32
    property uFlags : Win32cr::UI::Shell::NOTIFY_ICON_DATA_FLAGS
    property uCallbackMessage : UInt32
    property hIcon : Win32cr::UI::WindowsAndMessaging::HICON
    property szTip : Win32cr::Foundation::CHAR[128]
    property dwState : UInt32
    property dwStateMask : UInt32
    property szInfo : Win32cr::Foundation::CHAR[256]
    property anonymous : Anonymous_e__Union_
    property szInfoTitle : Win32cr::Foundation::CHAR[64]
    property dwInfoFlags : UInt32
    property guidItem : LibC::GUID
    property hBalloonIcon : Win32cr::UI::WindowsAndMessaging::HICON

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property uTimeout : UInt32
    property uVersion : UInt32
    def initialize(@uTimeout : UInt32, @uVersion : UInt32)
    end
    end

    def initialize(@cbSize : UInt32, @hWnd : Win32cr::Foundation::HWND, @uID : UInt32, @uFlags : Win32cr::UI::Shell::NOTIFY_ICON_DATA_FLAGS, @uCallbackMessage : UInt32, @hIcon : Win32cr::UI::WindowsAndMessaging::HICON, @szTip : Win32cr::Foundation::CHAR[128], @dwState : UInt32, @dwStateMask : UInt32, @szInfo : Win32cr::Foundation::CHAR[256], @anonymous : Anonymous_e__Union_, @szInfoTitle : Win32cr::Foundation::CHAR[64], @dwInfoFlags : UInt32, @guidItem : LibC::GUID, @hBalloonIcon : Win32cr::UI::WindowsAndMessaging::HICON)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct NOTIFYICONDATAW
    property cbSize : UInt32
    property hWnd : Win32cr::Foundation::HWND
    property uID : UInt32
    property uFlags : Win32cr::UI::Shell::NOTIFY_ICON_DATA_FLAGS
    property uCallbackMessage : UInt32
    property hIcon : Win32cr::UI::WindowsAndMessaging::HICON
    property szTip : UInt16[128]
    property dwState : UInt32
    property dwStateMask : UInt32
    property szInfo : UInt16[256]
    property anonymous : Anonymous_e__Union_
    property szInfoTitle : UInt16[64]
    property dwInfoFlags : UInt32
    property guidItem : LibC::GUID
    property hBalloonIcon : Win32cr::UI::WindowsAndMessaging::HICON

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property uTimeout : UInt32
    property uVersion : UInt32
    def initialize(@uTimeout : UInt32, @uVersion : UInt32)
    end
    end

    def initialize(@cbSize : UInt32, @hWnd : Win32cr::Foundation::HWND, @uID : UInt32, @uFlags : Win32cr::UI::Shell::NOTIFY_ICON_DATA_FLAGS, @uCallbackMessage : UInt32, @hIcon : Win32cr::UI::WindowsAndMessaging::HICON, @szTip : UInt16[128], @dwState : UInt32, @dwStateMask : UInt32, @szInfo : UInt16[256], @anonymous : Anonymous_e__Union_, @szInfoTitle : UInt16[64], @dwInfoFlags : UInt32, @guidItem : LibC::GUID, @hBalloonIcon : Win32cr::UI::WindowsAndMessaging::HICON)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct NOTIFYICONIDENTIFIER
    property cbSize : UInt32
    property hWnd : Win32cr::Foundation::HWND
    property uID : UInt32
    property guidItem : LibC::GUID
    def initialize(@cbSize : UInt32, @hWnd : Win32cr::Foundation::HWND, @uID : UInt32, @guidItem : LibC::GUID)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct SHFILEINFOA
    property hIcon : Win32cr::UI::WindowsAndMessaging::HICON
    property iIcon : Int32
    property dwAttributes : UInt32
    property szDisplayName : Win32cr::Foundation::CHAR[260]
    property szTypeName : Win32cr::Foundation::CHAR[80]
    def initialize(@hIcon : Win32cr::UI::WindowsAndMessaging::HICON, @iIcon : Int32, @dwAttributes : UInt32, @szDisplayName : Win32cr::Foundation::CHAR[260], @szTypeName : Win32cr::Foundation::CHAR[80])
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct SHFILEINFOW
    property hIcon : Win32cr::UI::WindowsAndMessaging::HICON
    property iIcon : Int32
    property dwAttributes : UInt32
    property szDisplayName : UInt16[260]
    property szTypeName : UInt16[80]
    def initialize(@hIcon : Win32cr::UI::WindowsAndMessaging::HICON, @iIcon : Int32, @dwAttributes : UInt32, @szDisplayName : UInt16[260], @szTypeName : UInt16[80])
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct SHSTOCKICONINFO
    property cbSize : UInt32
    property hIcon : Win32cr::UI::WindowsAndMessaging::HICON
    property iSysImageIndex : Int32
    property iIcon : Int32
    property szPath : UInt16[260]
    def initialize(@cbSize : UInt32, @hIcon : Win32cr::UI::WindowsAndMessaging::HICON, @iSysImageIndex : Int32, @iIcon : Int32, @szPath : UInt16[260])
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct OPEN_PRINTER_PROPS_INFOA
    property dwSize : UInt32
    property pszSheetName : Win32cr::Foundation::PSTR
    property uSheetIndex : UInt32
    property dwFlags : UInt32
    property bModal : Win32cr::Foundation::BOOL
    def initialize(@dwSize : UInt32, @pszSheetName : Win32cr::Foundation::PSTR, @uSheetIndex : UInt32, @dwFlags : UInt32, @bModal : Win32cr::Foundation::BOOL)
    end
  end
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  struct OPEN_PRINTER_PROPS_INFOW
    property dwSize : UInt32
    property pszSheetName : Win32cr::Foundation::PWSTR
    property uSheetIndex : UInt32
    property dwFlags : UInt32
    property bModal : Win32cr::Foundation::BOOL
    def initialize(@dwSize : UInt32, @pszSheetName : Win32cr::Foundation::PWSTR, @uSheetIndex : UInt32, @dwFlags : UInt32, @bModal : Win32cr::Foundation::BOOL)
    end
  end
  {% end %}

  @[Extern]
  record INotifyReplicaVtbl,
    query_interface : Proc(INotifyReplica*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INotifyReplica*, UInt32),
    release : Proc(INotifyReplica*, UInt32),
    you_are_a_replica : Proc(INotifyReplica*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INotifyReplica, lpVtbl : INotifyReplicaVtbl* do
    GUID = LibC::GUID.new(0x99180163_u32, 0xda16_u16, 0x101a_u16, StaticArray[0x93_u8, 0x5c_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : INotifyReplica*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INotifyReplica*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INotifyReplica*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def you_are_a_replica(this : INotifyReplica*, ulcOtherReplicas : UInt32, rgpmkOtherReplicas : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.you_are_a_replica.call(this, ulcOtherReplicas, rgpmkOtherReplicas)
    end

  end

  @[Extern]
  record IContextMenuVtbl,
    query_interface : Proc(IContextMenu*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IContextMenu*, UInt32),
    release : Proc(IContextMenu*, UInt32),
    query_context_menu : Proc(IContextMenu*, Win32cr::UI::WindowsAndMessaging::HMENU, UInt32, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    invoke_command : Proc(IContextMenu*, Win32cr::UI::Shell::CMINVOKECOMMANDINFO*, Win32cr::Foundation::HRESULT),
    get_command_string : Proc(IContextMenu*, LibC::UIntPtrT, UInt32, UInt32*, Win32cr::Foundation::PSTR, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IContextMenu, lpVtbl : IContextMenuVtbl* do
    GUID = LibC::GUID.new(0x214e4_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IContextMenu*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IContextMenu*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IContextMenu*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def query_context_menu(this : IContextMenu*, hmenu : Win32cr::UI::WindowsAndMessaging::HMENU, indexMenu : UInt32, idCmdFirst : UInt32, idCmdLast : UInt32, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_context_menu.call(this, hmenu, indexMenu, idCmdFirst, idCmdLast, uFlags)
    end
    def invoke_command(this : IContextMenu*, pici : Win32cr::UI::Shell::CMINVOKECOMMANDINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_command.call(this, pici)
    end
    def get_command_string(this : IContextMenu*, idCmd : LibC::UIntPtrT, uType : UInt32, pReserved : UInt32*, pszName : Win32cr::Foundation::PSTR, cchMax : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_command_string.call(this, idCmd, uType, pReserved, pszName, cchMax)
    end

  end

  @[Extern]
  record IContextMenu2Vtbl,
    query_interface : Proc(IContextMenu2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IContextMenu2*, UInt32),
    release : Proc(IContextMenu2*, UInt32),
    query_context_menu : Proc(IContextMenu2*, Win32cr::UI::WindowsAndMessaging::HMENU, UInt32, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    invoke_command : Proc(IContextMenu2*, Win32cr::UI::Shell::CMINVOKECOMMANDINFO*, Win32cr::Foundation::HRESULT),
    get_command_string : Proc(IContextMenu2*, LibC::UIntPtrT, UInt32, UInt32*, Win32cr::Foundation::PSTR, UInt32, Win32cr::Foundation::HRESULT),
    handle_menu_msg : Proc(IContextMenu2*, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IContextMenu2, lpVtbl : IContextMenu2Vtbl* do
    GUID = LibC::GUID.new(0x214f4_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IContextMenu2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IContextMenu2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IContextMenu2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def query_context_menu(this : IContextMenu2*, hmenu : Win32cr::UI::WindowsAndMessaging::HMENU, indexMenu : UInt32, idCmdFirst : UInt32, idCmdLast : UInt32, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_context_menu.call(this, hmenu, indexMenu, idCmdFirst, idCmdLast, uFlags)
    end
    def invoke_command(this : IContextMenu2*, pici : Win32cr::UI::Shell::CMINVOKECOMMANDINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_command.call(this, pici)
    end
    def get_command_string(this : IContextMenu2*, idCmd : LibC::UIntPtrT, uType : UInt32, pReserved : UInt32*, pszName : Win32cr::Foundation::PSTR, cchMax : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_command_string.call(this, idCmd, uType, pReserved, pszName, cchMax)
    end
    def handle_menu_msg(this : IContextMenu2*, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.handle_menu_msg.call(this, uMsg, wParam, lParam)
    end

  end

  @[Extern]
  record IContextMenu3Vtbl,
    query_interface : Proc(IContextMenu3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IContextMenu3*, UInt32),
    release : Proc(IContextMenu3*, UInt32),
    query_context_menu : Proc(IContextMenu3*, Win32cr::UI::WindowsAndMessaging::HMENU, UInt32, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    invoke_command : Proc(IContextMenu3*, Win32cr::UI::Shell::CMINVOKECOMMANDINFO*, Win32cr::Foundation::HRESULT),
    get_command_string : Proc(IContextMenu3*, LibC::UIntPtrT, UInt32, UInt32*, Win32cr::Foundation::PSTR, UInt32, Win32cr::Foundation::HRESULT),
    handle_menu_msg : Proc(IContextMenu3*, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT),
    handle_menu_msg2 : Proc(IContextMenu3*, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LRESULT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IContextMenu3, lpVtbl : IContextMenu3Vtbl* do
    GUID = LibC::GUID.new(0xbcfce0a0_u32, 0xec17_u16, 0x11d0_u16, StaticArray[0x8d_u8, 0x10_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xf_u8, 0x27_u8, 0x19_u8])
    def query_interface(this : IContextMenu3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IContextMenu3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IContextMenu3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def query_context_menu(this : IContextMenu3*, hmenu : Win32cr::UI::WindowsAndMessaging::HMENU, indexMenu : UInt32, idCmdFirst : UInt32, idCmdLast : UInt32, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_context_menu.call(this, hmenu, indexMenu, idCmdFirst, idCmdLast, uFlags)
    end
    def invoke_command(this : IContextMenu3*, pici : Win32cr::UI::Shell::CMINVOKECOMMANDINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_command.call(this, pici)
    end
    def get_command_string(this : IContextMenu3*, idCmd : LibC::UIntPtrT, uType : UInt32, pReserved : UInt32*, pszName : Win32cr::Foundation::PSTR, cchMax : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_command_string.call(this, idCmd, uType, pReserved, pszName, cchMax)
    end
    def handle_menu_msg(this : IContextMenu3*, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.handle_menu_msg.call(this, uMsg, wParam, lParam)
    end
    def handle_menu_msg2(this : IContextMenu3*, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM, plResult : Win32cr::Foundation::LRESULT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.handle_menu_msg2.call(this, uMsg, wParam, lParam, plResult)
    end

  end

  @[Extern]
  record IExecuteCommandVtbl,
    query_interface : Proc(IExecuteCommand*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExecuteCommand*, UInt32),
    release : Proc(IExecuteCommand*, UInt32),
    set_key_state : Proc(IExecuteCommand*, UInt32, Win32cr::Foundation::HRESULT),
    set_parameters : Proc(IExecuteCommand*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_position : Proc(IExecuteCommand*, Win32cr::Foundation::POINT, Win32cr::Foundation::HRESULT),
    set_show_window : Proc(IExecuteCommand*, Int32, Win32cr::Foundation::HRESULT),
    set_no_show_ui : Proc(IExecuteCommand*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_directory : Proc(IExecuteCommand*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    execute : Proc(IExecuteCommand*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExecuteCommand, lpVtbl : IExecuteCommandVtbl* do
    GUID = LibC::GUID.new(0x7f9185b0_u32, 0xcb92_u16, 0x43c5_u16, StaticArray[0x80_u8, 0xa9_u8, 0x92_u8, 0x27_u8, 0x7a_u8, 0x4f_u8, 0x7b_u8, 0x54_u8])
    def query_interface(this : IExecuteCommand*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExecuteCommand*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExecuteCommand*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_key_state(this : IExecuteCommand*, grfKeyState : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_key_state.call(this, grfKeyState)
    end
    def set_parameters(this : IExecuteCommand*, pszParameters : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_parameters.call(this, pszParameters)
    end
    def set_position(this : IExecuteCommand*, pt : Win32cr::Foundation::POINT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_position.call(this, pt)
    end
    def set_show_window(this : IExecuteCommand*, nShow : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_show_window.call(this, nShow)
    end
    def set_no_show_ui(this : IExecuteCommand*, fNoShowUI : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_no_show_ui.call(this, fNoShowUI)
    end
    def set_directory(this : IExecuteCommand*, pszDirectory : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_directory.call(this, pszDirectory)
    end
    def execute(this : IExecuteCommand*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.execute.call(this)
    end

  end

  @[Extern]
  record IPersistFolderVtbl,
    query_interface : Proc(IPersistFolder*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPersistFolder*, UInt32),
    release : Proc(IPersistFolder*, UInt32),
    get_class_id : Proc(IPersistFolder*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IPersistFolder*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPersistFolder, lpVtbl : IPersistFolderVtbl* do
    GUID = LibC::GUID.new(0x214ea_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IPersistFolder*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPersistFolder*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPersistFolder*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_class_id(this : IPersistFolder*, pClassID : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_class_id.call(this, pClassID)
    end
    def initialize__(this : IPersistFolder*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, pidl)
    end

  end

  @[Extern]
  record IRunnableTaskVtbl,
    query_interface : Proc(IRunnableTask*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IRunnableTask*, UInt32),
    release : Proc(IRunnableTask*, UInt32),
    run : Proc(IRunnableTask*, Win32cr::Foundation::HRESULT),
    kill : Proc(IRunnableTask*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    suspend : Proc(IRunnableTask*, Win32cr::Foundation::HRESULT),
    resume : Proc(IRunnableTask*, Win32cr::Foundation::HRESULT),
    is_running : Proc(IRunnableTask*, UInt32)


  @[Extern]
  record IRunnableTask, lpVtbl : IRunnableTaskVtbl* do
    GUID = LibC::GUID.new(0x85788d00_u32, 0x6807_u16, 0x11d0_u16, StaticArray[0xb8_u8, 0x10_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0x6_u8, 0xec_u8])
    def query_interface(this : IRunnableTask*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IRunnableTask*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IRunnableTask*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def run(this : IRunnableTask*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run.call(this)
    end
    def kill(this : IRunnableTask*, bWait : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.kill.call(this, bWait)
    end
    def suspend(this : IRunnableTask*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.suspend.call(this)
    end
    def resume(this : IRunnableTask*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resume.call(this)
    end
    def is_running(this : IRunnableTask*) : UInt32
      @lpVtbl.try &.value.is_running.call(this)
    end

  end

  @[Extern]
  record IShellTaskSchedulerVtbl,
    query_interface : Proc(IShellTaskScheduler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellTaskScheduler*, UInt32),
    release : Proc(IShellTaskScheduler*, UInt32),
    add_task : Proc(IShellTaskScheduler*, Void*, LibC::GUID*, LibC::UIntPtrT, UInt32, Win32cr::Foundation::HRESULT),
    remove_tasks : Proc(IShellTaskScheduler*, LibC::GUID*, LibC::UIntPtrT, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    count_tasks : Proc(IShellTaskScheduler*, LibC::GUID*, UInt32),
    status : Proc(IShellTaskScheduler*, UInt32, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellTaskScheduler, lpVtbl : IShellTaskSchedulerVtbl* do
    GUID = LibC::GUID.new(0x6ccb7be0_u32, 0x6807_u16, 0x11d0_u16, StaticArray[0xb8_u8, 0x10_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0x6_u8, 0xec_u8])
    def query_interface(this : IShellTaskScheduler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellTaskScheduler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellTaskScheduler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_task(this : IShellTaskScheduler*, prt : Void*, rtoid : LibC::GUID*, lParam : LibC::UIntPtrT, dwPriority : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_task.call(this, prt, rtoid, lParam, dwPriority)
    end
    def remove_tasks(this : IShellTaskScheduler*, rtoid : LibC::GUID*, lParam : LibC::UIntPtrT, bWaitIfRunning : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_tasks.call(this, rtoid, lParam, bWaitIfRunning)
    end
    def count_tasks(this : IShellTaskScheduler*, rtoid : LibC::GUID*) : UInt32
      @lpVtbl.try &.value.count_tasks.call(this, rtoid)
    end
    def status(this : IShellTaskScheduler*, dwReleaseStatus : UInt32, dwThreadTimeout : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.status.call(this, dwReleaseStatus, dwThreadTimeout)
    end

  end

  @[Extern]
  record IPersistFolder2Vtbl,
    query_interface : Proc(IPersistFolder2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPersistFolder2*, UInt32),
    release : Proc(IPersistFolder2*, UInt32),
    get_class_id : Proc(IPersistFolder2*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IPersistFolder2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    get_cur_folder : Proc(IPersistFolder2*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPersistFolder2, lpVtbl : IPersistFolder2Vtbl* do
    GUID = LibC::GUID.new(0x1ac3d9f0_u32, 0x175c_u16, 0x11d1_u16, StaticArray[0x95_u8, 0xbe_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0x97_u8, 0xea_u8, 0x4f_u8])
    def query_interface(this : IPersistFolder2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPersistFolder2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPersistFolder2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_class_id(this : IPersistFolder2*, pClassID : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_class_id.call(this, pClassID)
    end
    def initialize__(this : IPersistFolder2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, pidl)
    end
    def get_cur_folder(this : IPersistFolder2*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cur_folder.call(this, ppidl)
    end

  end

  @[Extern]
  record IPersistFolder3Vtbl,
    query_interface : Proc(IPersistFolder3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPersistFolder3*, UInt32),
    release : Proc(IPersistFolder3*, UInt32),
    get_class_id : Proc(IPersistFolder3*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IPersistFolder3*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    get_cur_folder : Proc(IPersistFolder3*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    initialize_ex : Proc(IPersistFolder3*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::UI::Shell::PERSIST_FOLDER_TARGET_INFO*, Win32cr::Foundation::HRESULT),
    get_folder_target_info : Proc(IPersistFolder3*, Win32cr::UI::Shell::PERSIST_FOLDER_TARGET_INFO*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPersistFolder3, lpVtbl : IPersistFolder3Vtbl* do
    GUID = LibC::GUID.new(0xcef04fdf_u32, 0xfe72_u16, 0x11d2_u16, StaticArray[0x87_u8, 0xa5_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x68_u8, 0x37_u8, 0xcf_u8])
    def query_interface(this : IPersistFolder3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPersistFolder3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPersistFolder3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_class_id(this : IPersistFolder3*, pClassID : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_class_id.call(this, pClassID)
    end
    def initialize__(this : IPersistFolder3*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, pidl)
    end
    def get_cur_folder(this : IPersistFolder3*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cur_folder.call(this, ppidl)
    end
    def initialize_ex(this : IPersistFolder3*, pbc : Void*, pidlRoot : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppfti : Win32cr::UI::Shell::PERSIST_FOLDER_TARGET_INFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_ex.call(this, pbc, pidlRoot, ppfti)
    end
    def get_folder_target_info(this : IPersistFolder3*, ppfti : Win32cr::UI::Shell::PERSIST_FOLDER_TARGET_INFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder_target_info.call(this, ppfti)
    end

  end

  @[Extern]
  record IPersistIDListVtbl,
    query_interface : Proc(IPersistIDList*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPersistIDList*, UInt32),
    release : Proc(IPersistIDList*, UInt32),
    get_class_id : Proc(IPersistIDList*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    set_id_list : Proc(IPersistIDList*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    get_id_list : Proc(IPersistIDList*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPersistIDList, lpVtbl : IPersistIDListVtbl* do
    GUID = LibC::GUID.new(0x1079acfc_u32, 0x29bd_u16, 0x11d3_u16, StaticArray[0x8e_u8, 0xd_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x68_u8, 0x37_u8, 0xd5_u8])
    def query_interface(this : IPersistIDList*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPersistIDList*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPersistIDList*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_class_id(this : IPersistIDList*, pClassID : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_class_id.call(this, pClassID)
    end
    def set_id_list(this : IPersistIDList*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_id_list.call(this, pidl)
    end
    def get_id_list(this : IPersistIDList*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_id_list.call(this, ppidl)
    end

  end

  @[Extern]
  record IEnumIDListVtbl,
    query_interface : Proc(IEnumIDList*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumIDList*, UInt32),
    release : Proc(IEnumIDList*, UInt32),
    next__ : Proc(IEnumIDList*, UInt32, Win32cr::UI::Shell::Common::ITEMIDLIST**, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumIDList*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumIDList*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumIDList*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumIDList, lpVtbl : IEnumIDListVtbl* do
    GUID = LibC::GUID.new(0x214f2_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IEnumIDList*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumIDList*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumIDList*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumIDList*, celt : UInt32, rgelt : Win32cr::UI::Shell::Common::ITEMIDLIST**, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, rgelt, pceltFetched)
    end
    def skip(this : IEnumIDList*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumIDList*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumIDList*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppenum)
    end

  end

  @[Extern]
  record IEnumFullIDListVtbl,
    query_interface : Proc(IEnumFullIDList*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumFullIDList*, UInt32),
    release : Proc(IEnumFullIDList*, UInt32),
    next__ : Proc(IEnumFullIDList*, UInt32, Win32cr::UI::Shell::Common::ITEMIDLIST**, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumFullIDList*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumFullIDList*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumFullIDList*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumFullIDList, lpVtbl : IEnumFullIDListVtbl* do
    GUID = LibC::GUID.new(0xd0191542_u32, 0x7954_u16, 0x4908_u16, StaticArray[0xbc_u8, 0x6_u8, 0xb2_u8, 0x36_u8, 0xb_u8, 0xbe_u8, 0x45_u8, 0xba_u8])
    def query_interface(this : IEnumFullIDList*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumFullIDList*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumFullIDList*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumFullIDList*, celt : UInt32, rgelt : Win32cr::UI::Shell::Common::ITEMIDLIST**, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, rgelt, pceltFetched)
    end
    def skip(this : IEnumFullIDList*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumFullIDList*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumFullIDList*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppenum)
    end

  end

  @[Extern]
  record IFileSyncMergeHandlerVtbl,
    query_interface : Proc(IFileSyncMergeHandler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFileSyncMergeHandler*, UInt32),
    release : Proc(IFileSyncMergeHandler*, UInt32),
    merge : Proc(IFileSyncMergeHandler*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::MERGE_UPDATE_STATUS*, Win32cr::Foundation::HRESULT),
    show_resolve_conflict_ui_async : Proc(IFileSyncMergeHandler*, Win32cr::Foundation::PWSTR, Win32cr::Graphics::Gdi::HMONITOR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFileSyncMergeHandler, lpVtbl : IFileSyncMergeHandlerVtbl* do
    GUID = LibC::GUID.new(0xd97b5aac_u32, 0xc792_u16, 0x433c_u16, StaticArray[0x97_u8, 0x5d_u8, 0x35_u8, 0xc4_u8, 0xea_u8, 0xdc_u8, 0x7a_u8, 0x9d_u8])
    def query_interface(this : IFileSyncMergeHandler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFileSyncMergeHandler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFileSyncMergeHandler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def merge(this : IFileSyncMergeHandler*, localFilePath : Win32cr::Foundation::PWSTR, serverFilePath : Win32cr::Foundation::PWSTR, updateStatus : Win32cr::UI::Shell::MERGE_UPDATE_STATUS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.merge.call(this, localFilePath, serverFilePath, updateStatus)
    end
    def show_resolve_conflict_ui_async(this : IFileSyncMergeHandler*, localFilePath : Win32cr::Foundation::PWSTR, monitorToDisplayOn : Win32cr::Graphics::Gdi::HMONITOR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_resolve_conflict_ui_async.call(this, localFilePath, monitorToDisplayOn)
    end

  end

  @[Extern]
  record IObjectWithFolderEnumModeVtbl,
    query_interface : Proc(IObjectWithFolderEnumMode*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IObjectWithFolderEnumMode*, UInt32),
    release : Proc(IObjectWithFolderEnumMode*, UInt32),
    set_mode : Proc(IObjectWithFolderEnumMode*, Win32cr::UI::Shell::FOLDER_ENUM_MODE, Win32cr::Foundation::HRESULT),
    get_mode : Proc(IObjectWithFolderEnumMode*, Win32cr::UI::Shell::FOLDER_ENUM_MODE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IObjectWithFolderEnumMode, lpVtbl : IObjectWithFolderEnumModeVtbl* do
    GUID = LibC::GUID.new(0x6a9d9026_u32, 0xe6e_u16, 0x464c_u16, StaticArray[0xb0_u8, 0x0_u8, 0x42_u8, 0xec_u8, 0xc0_u8, 0x7d_u8, 0xe6_u8, 0x73_u8])
    def query_interface(this : IObjectWithFolderEnumMode*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IObjectWithFolderEnumMode*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IObjectWithFolderEnumMode*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_mode(this : IObjectWithFolderEnumMode*, feMode : Win32cr::UI::Shell::FOLDER_ENUM_MODE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_mode.call(this, feMode)
    end
    def get_mode(this : IObjectWithFolderEnumMode*, pfeMode : Win32cr::UI::Shell::FOLDER_ENUM_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_mode.call(this, pfeMode)
    end

  end

  @[Extern]
  record IParseAndCreateItemVtbl,
    query_interface : Proc(IParseAndCreateItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IParseAndCreateItem*, UInt32),
    release : Proc(IParseAndCreateItem*, UInt32),
    set_item : Proc(IParseAndCreateItem*, Void*, Win32cr::Foundation::HRESULT),
    get_item : Proc(IParseAndCreateItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IParseAndCreateItem, lpVtbl : IParseAndCreateItemVtbl* do
    GUID = LibC::GUID.new(0x67efed0e_u32, 0xe827_u16, 0x4408_u16, StaticArray[0xb4_u8, 0x93_u8, 0x78_u8, 0xf3_u8, 0x98_u8, 0x2b_u8, 0x68_u8, 0x5c_u8])
    def query_interface(this : IParseAndCreateItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IParseAndCreateItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IParseAndCreateItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_item(this : IParseAndCreateItem*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_item.call(this, psi)
    end
    def get_item(this : IParseAndCreateItem*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item.call(this, riid, ppv)
    end

  end

  @[Extern]
  record IShellFolderVtbl,
    query_interface : Proc(IShellFolder*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellFolder*, UInt32),
    release : Proc(IShellFolder*, UInt32),
    parse_display_name : Proc(IShellFolder*, Win32cr::Foundation::HWND, Void*, Win32cr::Foundation::PWSTR, UInt32*, Win32cr::UI::Shell::Common::ITEMIDLIST**, UInt32*, Win32cr::Foundation::HRESULT),
    enum_objects : Proc(IShellFolder*, Win32cr::Foundation::HWND, UInt32, Void**, Win32cr::Foundation::HRESULT),
    bind_to_object : Proc(IShellFolder*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Void*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    bind_to_storage : Proc(IShellFolder*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Void*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    compare_i_ds : Proc(IShellFolder*, Win32cr::Foundation::LPARAM, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    create_view_object : Proc(IShellFolder*, Win32cr::Foundation::HWND, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_attributes_of : Proc(IShellFolder*, UInt32, Win32cr::UI::Shell::Common::ITEMIDLIST**, UInt32*, Win32cr::Foundation::HRESULT),
    get_ui_object_of : Proc(IShellFolder*, Win32cr::Foundation::HWND, UInt32, Win32cr::UI::Shell::Common::ITEMIDLIST**, LibC::GUID*, UInt32*, Void**, Win32cr::Foundation::HRESULT),
    get_display_name_of : Proc(IShellFolder*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::UI::Shell::SHGDNF, Win32cr::UI::Shell::Common::STRRET*, Win32cr::Foundation::HRESULT),
    set_name_of : Proc(IShellFolder*, Win32cr::Foundation::HWND, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::SHGDNF, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellFolder, lpVtbl : IShellFolderVtbl* do
    GUID = LibC::GUID.new(0x214e6_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IShellFolder*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellFolder*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellFolder*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def parse_display_name(this : IShellFolder*, hwnd : Win32cr::Foundation::HWND, pbc : Void*, pszDisplayName : Win32cr::Foundation::PWSTR, pchEaten : UInt32*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, pdwAttributes : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.parse_display_name.call(this, hwnd, pbc, pszDisplayName, pchEaten, ppidl, pdwAttributes)
    end
    def enum_objects(this : IShellFolder*, hwnd : Win32cr::Foundation::HWND, grfFlags : UInt32, ppenumIDList : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_objects.call(this, hwnd, grfFlags, ppenumIDList)
    end
    def bind_to_object(this : IShellFolder*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pbc : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_to_object.call(this, pidl, pbc, riid, ppv)
    end
    def bind_to_storage(this : IShellFolder*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pbc : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_to_storage.call(this, pidl, pbc, riid, ppv)
    end
    def compare_i_ds(this : IShellFolder*, lParam : Win32cr::Foundation::LPARAM, pidl1 : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidl2 : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compare_i_ds.call(this, lParam, pidl1, pidl2)
    end
    def create_view_object(this : IShellFolder*, hwndOwner : Win32cr::Foundation::HWND, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_view_object.call(this, hwndOwner, riid, ppv)
    end
    def get_attributes_of(this : IShellFolder*, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, rgfInOut : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_attributes_of.call(this, cidl, apidl, rgfInOut)
    end
    def get_ui_object_of(this : IShellFolder*, hwndOwner : Win32cr::Foundation::HWND, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, riid : LibC::GUID*, rgfReserved : UInt32*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ui_object_of.call(this, hwndOwner, cidl, apidl, riid, rgfReserved, ppv)
    end
    def get_display_name_of(this : IShellFolder*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, uFlags : Win32cr::UI::Shell::SHGDNF, pName : Win32cr::UI::Shell::Common::STRRET*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_display_name_of.call(this, pidl, uFlags, pName)
    end
    def set_name_of(this : IShellFolder*, hwnd : Win32cr::Foundation::HWND, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszName : Win32cr::Foundation::PWSTR, uFlags : Win32cr::UI::Shell::SHGDNF, ppidlOut : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_name_of.call(this, hwnd, pidl, pszName, uFlags, ppidlOut)
    end

  end

  @[Extern]
  record IEnumExtraSearchVtbl,
    query_interface : Proc(IEnumExtraSearch*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumExtraSearch*, UInt32),
    release : Proc(IEnumExtraSearch*, UInt32),
    next__ : Proc(IEnumExtraSearch*, UInt32, Win32cr::UI::Shell::EXTRASEARCH*, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumExtraSearch*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumExtraSearch*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumExtraSearch*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumExtraSearch, lpVtbl : IEnumExtraSearchVtbl* do
    GUID = LibC::GUID.new(0xe700be1_u32, 0x9db6_u16, 0x11d1_u16, StaticArray[0xa1_u8, 0xce_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0x5d_u8, 0x13_u8])
    def query_interface(this : IEnumExtraSearch*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumExtraSearch*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumExtraSearch*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumExtraSearch*, celt : UInt32, rgelt : Win32cr::UI::Shell::EXTRASEARCH*, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, rgelt, pceltFetched)
    end
    def skip(this : IEnumExtraSearch*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumExtraSearch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumExtraSearch*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppenum)
    end

  end

  @[Extern]
  record IShellFolder2Vtbl,
    query_interface : Proc(IShellFolder2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellFolder2*, UInt32),
    release : Proc(IShellFolder2*, UInt32),
    parse_display_name : Proc(IShellFolder2*, Win32cr::Foundation::HWND, Void*, Win32cr::Foundation::PWSTR, UInt32*, Win32cr::UI::Shell::Common::ITEMIDLIST**, UInt32*, Win32cr::Foundation::HRESULT),
    enum_objects : Proc(IShellFolder2*, Win32cr::Foundation::HWND, UInt32, Void**, Win32cr::Foundation::HRESULT),
    bind_to_object : Proc(IShellFolder2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Void*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    bind_to_storage : Proc(IShellFolder2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Void*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    compare_i_ds : Proc(IShellFolder2*, Win32cr::Foundation::LPARAM, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    create_view_object : Proc(IShellFolder2*, Win32cr::Foundation::HWND, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_attributes_of : Proc(IShellFolder2*, UInt32, Win32cr::UI::Shell::Common::ITEMIDLIST**, UInt32*, Win32cr::Foundation::HRESULT),
    get_ui_object_of : Proc(IShellFolder2*, Win32cr::Foundation::HWND, UInt32, Win32cr::UI::Shell::Common::ITEMIDLIST**, LibC::GUID*, UInt32*, Void**, Win32cr::Foundation::HRESULT),
    get_display_name_of : Proc(IShellFolder2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::UI::Shell::SHGDNF, Win32cr::UI::Shell::Common::STRRET*, Win32cr::Foundation::HRESULT),
    set_name_of : Proc(IShellFolder2*, Win32cr::Foundation::HWND, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::SHGDNF, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    get_default_search_guid : Proc(IShellFolder2*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    enum_searches : Proc(IShellFolder2*, Void**, Win32cr::Foundation::HRESULT),
    get_default_column : Proc(IShellFolder2*, UInt32, UInt32*, UInt32*, Win32cr::Foundation::HRESULT),
    get_default_column_state : Proc(IShellFolder2*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_details_ex : Proc(IShellFolder2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_details_of : Proc(IShellFolder2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::UI::Shell::Common::SHELLDETAILS*, Win32cr::Foundation::HRESULT),
    map_column_to_scid : Proc(IShellFolder2*, UInt32, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellFolder2, lpVtbl : IShellFolder2Vtbl* do
    GUID = LibC::GUID.new(0x93f2f68c_u32, 0x1d1b_u16, 0x11d3_u16, StaticArray[0xa3_u8, 0xe_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x79_u8, 0xab_u8, 0xd1_u8])
    def query_interface(this : IShellFolder2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellFolder2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellFolder2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def parse_display_name(this : IShellFolder2*, hwnd : Win32cr::Foundation::HWND, pbc : Void*, pszDisplayName : Win32cr::Foundation::PWSTR, pchEaten : UInt32*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, pdwAttributes : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.parse_display_name.call(this, hwnd, pbc, pszDisplayName, pchEaten, ppidl, pdwAttributes)
    end
    def enum_objects(this : IShellFolder2*, hwnd : Win32cr::Foundation::HWND, grfFlags : UInt32, ppenumIDList : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_objects.call(this, hwnd, grfFlags, ppenumIDList)
    end
    def bind_to_object(this : IShellFolder2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pbc : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_to_object.call(this, pidl, pbc, riid, ppv)
    end
    def bind_to_storage(this : IShellFolder2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pbc : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_to_storage.call(this, pidl, pbc, riid, ppv)
    end
    def compare_i_ds(this : IShellFolder2*, lParam : Win32cr::Foundation::LPARAM, pidl1 : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidl2 : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compare_i_ds.call(this, lParam, pidl1, pidl2)
    end
    def create_view_object(this : IShellFolder2*, hwndOwner : Win32cr::Foundation::HWND, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_view_object.call(this, hwndOwner, riid, ppv)
    end
    def get_attributes_of(this : IShellFolder2*, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, rgfInOut : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_attributes_of.call(this, cidl, apidl, rgfInOut)
    end
    def get_ui_object_of(this : IShellFolder2*, hwndOwner : Win32cr::Foundation::HWND, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, riid : LibC::GUID*, rgfReserved : UInt32*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ui_object_of.call(this, hwndOwner, cidl, apidl, riid, rgfReserved, ppv)
    end
    def get_display_name_of(this : IShellFolder2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, uFlags : Win32cr::UI::Shell::SHGDNF, pName : Win32cr::UI::Shell::Common::STRRET*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_display_name_of.call(this, pidl, uFlags, pName)
    end
    def set_name_of(this : IShellFolder2*, hwnd : Win32cr::Foundation::HWND, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszName : Win32cr::Foundation::PWSTR, uFlags : Win32cr::UI::Shell::SHGDNF, ppidlOut : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_name_of.call(this, hwnd, pidl, pszName, uFlags, ppidlOut)
    end
    def get_default_search_guid(this : IShellFolder2*, pguid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_search_guid.call(this, pguid)
    end
    def enum_searches(this : IShellFolder2*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_searches.call(this, ppenum)
    end
    def get_default_column(this : IShellFolder2*, dwRes : UInt32, pSort : UInt32*, pDisplay : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_column.call(this, dwRes, pSort, pDisplay)
    end
    def get_default_column_state(this : IShellFolder2*, iColumn : UInt32, pcsFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_column_state.call(this, iColumn, pcsFlags)
    end
    def get_details_ex(this : IShellFolder2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pscid : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, pv : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_details_ex.call(this, pidl, pscid, pv)
    end
    def get_details_of(this : IShellFolder2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, iColumn : UInt32, psd : Win32cr::UI::Shell::Common::SHELLDETAILS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_details_of.call(this, pidl, iColumn, psd)
    end
    def map_column_to_scid(this : IShellFolder2*, iColumn : UInt32, pscid : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.map_column_to_scid.call(this, iColumn, pscid)
    end

  end

  @[Extern]
  record IShellViewVtbl,
    query_interface : Proc(IShellView*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellView*, UInt32),
    release : Proc(IShellView*, UInt32),
    get_window : Proc(IShellView*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    context_sensitive_help : Proc(IShellView*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    translate_accelerator : Proc(IShellView*, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT),
    enable_modeless : Proc(IShellView*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    ui_activate : Proc(IShellView*, UInt32, Win32cr::Foundation::HRESULT),
    refresh : Proc(IShellView*, Win32cr::Foundation::HRESULT),
    create_view_window : Proc(IShellView*, Void*, Win32cr::UI::Shell::FOLDERSETTINGS*, Void*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    destroy_view_window : Proc(IShellView*, Win32cr::Foundation::HRESULT),
    get_current_info : Proc(IShellView*, Win32cr::UI::Shell::FOLDERSETTINGS*, Win32cr::Foundation::HRESULT),
    add_property_sheet_pages : Proc(IShellView*, UInt32, Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT),
    save_view_state : Proc(IShellView*, Win32cr::Foundation::HRESULT),
    select_item : Proc(IShellView*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::Foundation::HRESULT),
    get_item_object : Proc(IShellView*, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellView, lpVtbl : IShellViewVtbl* do
    GUID = LibC::GUID.new(0x214e3_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IShellView*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellView*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellView*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IShellView*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, phwnd)
    end
    def context_sensitive_help(this : IShellView*, fEnterMode : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.context_sensitive_help.call(this, fEnterMode)
    end
    def translate_accelerator(this : IShellView*, pmsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_accelerator.call(this, pmsg)
    end
    def enable_modeless(this : IShellView*, fEnable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_modeless.call(this, fEnable)
    end
    def ui_activate(this : IShellView*, uState : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ui_activate.call(this, uState)
    end
    def refresh(this : IShellView*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh.call(this)
    end
    def create_view_window(this : IShellView*, psvPrevious : Void*, pfs : Win32cr::UI::Shell::FOLDERSETTINGS*, psb : Void*, prcView : Win32cr::Foundation::RECT*, phWnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_view_window.call(this, psvPrevious, pfs, psb, prcView, phWnd)
    end
    def destroy_view_window(this : IShellView*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.destroy_view_window.call(this)
    end
    def get_current_info(this : IShellView*, pfs : Win32cr::UI::Shell::FOLDERSETTINGS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_info.call(this, pfs)
    end
    def add_property_sheet_pages(this : IShellView*, dwReserved : UInt32, pfn : Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, lparam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_property_sheet_pages.call(this, dwReserved, pfn, lparam)
    end
    def save_view_state(this : IShellView*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.save_view_state.call(this)
    end
    def select_item(this : IShellView*, pidlItem : Win32cr::UI::Shell::Common::ITEMIDLIST*, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_item.call(this, pidlItem, uFlags)
    end
    def get_item_object(this : IShellView*, uItem : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_object.call(this, uItem, riid, ppv)
    end

  end

  @[Extern]
  record IShellView2Vtbl,
    query_interface : Proc(IShellView2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellView2*, UInt32),
    release : Proc(IShellView2*, UInt32),
    get_window : Proc(IShellView2*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    context_sensitive_help : Proc(IShellView2*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    translate_accelerator : Proc(IShellView2*, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT),
    enable_modeless : Proc(IShellView2*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    ui_activate : Proc(IShellView2*, UInt32, Win32cr::Foundation::HRESULT),
    refresh : Proc(IShellView2*, Win32cr::Foundation::HRESULT),
    create_view_window : Proc(IShellView2*, Void*, Win32cr::UI::Shell::FOLDERSETTINGS*, Void*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    destroy_view_window : Proc(IShellView2*, Win32cr::Foundation::HRESULT),
    get_current_info : Proc(IShellView2*, Win32cr::UI::Shell::FOLDERSETTINGS*, Win32cr::Foundation::HRESULT),
    add_property_sheet_pages : Proc(IShellView2*, UInt32, Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT),
    save_view_state : Proc(IShellView2*, Win32cr::Foundation::HRESULT),
    select_item : Proc(IShellView2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::Foundation::HRESULT),
    get_item_object : Proc(IShellView2*, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_view : Proc(IShellView2*, LibC::GUID*, UInt32, Win32cr::Foundation::HRESULT),
    create_view_window2 : Proc(IShellView2*, Win32cr::UI::Shell::SV2CVW2_PARAMS*, Win32cr::Foundation::HRESULT),
    handle_rename : Proc(IShellView2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    select_and_position_item : Proc(IShellView2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::Foundation::POINT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellView2, lpVtbl : IShellView2Vtbl* do
    GUID = LibC::GUID.new(0x88e39e80_u32, 0x3578_u16, 0x11cf_u16, StaticArray[0xae_u8, 0x69_u8, 0x8_u8, 0x0_u8, 0x2b_u8, 0x2e_u8, 0x12_u8, 0x62_u8])
    def query_interface(this : IShellView2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellView2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellView2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IShellView2*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, phwnd)
    end
    def context_sensitive_help(this : IShellView2*, fEnterMode : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.context_sensitive_help.call(this, fEnterMode)
    end
    def translate_accelerator(this : IShellView2*, pmsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_accelerator.call(this, pmsg)
    end
    def enable_modeless(this : IShellView2*, fEnable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_modeless.call(this, fEnable)
    end
    def ui_activate(this : IShellView2*, uState : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ui_activate.call(this, uState)
    end
    def refresh(this : IShellView2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh.call(this)
    end
    def create_view_window(this : IShellView2*, psvPrevious : Void*, pfs : Win32cr::UI::Shell::FOLDERSETTINGS*, psb : Void*, prcView : Win32cr::Foundation::RECT*, phWnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_view_window.call(this, psvPrevious, pfs, psb, prcView, phWnd)
    end
    def destroy_view_window(this : IShellView2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.destroy_view_window.call(this)
    end
    def get_current_info(this : IShellView2*, pfs : Win32cr::UI::Shell::FOLDERSETTINGS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_info.call(this, pfs)
    end
    def add_property_sheet_pages(this : IShellView2*, dwReserved : UInt32, pfn : Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, lparam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_property_sheet_pages.call(this, dwReserved, pfn, lparam)
    end
    def save_view_state(this : IShellView2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.save_view_state.call(this)
    end
    def select_item(this : IShellView2*, pidlItem : Win32cr::UI::Shell::Common::ITEMIDLIST*, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_item.call(this, pidlItem, uFlags)
    end
    def get_item_object(this : IShellView2*, uItem : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_object.call(this, uItem, riid, ppv)
    end
    def get_view(this : IShellView2*, pvid : LibC::GUID*, uView : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_view.call(this, pvid, uView)
    end
    def create_view_window2(this : IShellView2*, lpParams : Win32cr::UI::Shell::SV2CVW2_PARAMS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_view_window2.call(this, lpParams)
    end
    def handle_rename(this : IShellView2*, pidlNew : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.handle_rename.call(this, pidlNew)
    end
    def select_and_position_item(this : IShellView2*, pidlItem : Win32cr::UI::Shell::Common::ITEMIDLIST*, uFlags : UInt32, ppt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_and_position_item.call(this, pidlItem, uFlags, ppt)
    end

  end

  @[Extern]
  record IFolderViewVtbl,
    query_interface : Proc(IFolderView*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFolderView*, UInt32),
    release : Proc(IFolderView*, UInt32),
    get_current_view_mode : Proc(IFolderView*, UInt32*, Win32cr::Foundation::HRESULT),
    set_current_view_mode : Proc(IFolderView*, UInt32, Win32cr::Foundation::HRESULT),
    get_folder : Proc(IFolderView*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    item : Proc(IFolderView*, Int32, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    item_count : Proc(IFolderView*, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    items : Proc(IFolderView*, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_selection_marked_item : Proc(IFolderView*, Int32*, Win32cr::Foundation::HRESULT),
    get_focused_item : Proc(IFolderView*, Int32*, Win32cr::Foundation::HRESULT),
    get_item_position : Proc(IFolderView*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::POINT*, Win32cr::Foundation::HRESULT),
    get_spacing : Proc(IFolderView*, Win32cr::Foundation::POINT*, Win32cr::Foundation::HRESULT),
    get_default_spacing : Proc(IFolderView*, Win32cr::Foundation::POINT*, Win32cr::Foundation::HRESULT),
    get_auto_arrange : Proc(IFolderView*, Win32cr::Foundation::HRESULT),
    select_item : Proc(IFolderView*, Int32, UInt32, Win32cr::Foundation::HRESULT),
    select_and_position_items : Proc(IFolderView*, UInt32, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::POINT*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFolderView, lpVtbl : IFolderViewVtbl* do
    GUID = LibC::GUID.new(0xcde725b0_u32, 0xccc9_u16, 0x4519_u16, StaticArray[0x91_u8, 0x7e_u8, 0x32_u8, 0x5d_u8, 0x72_u8, 0xfa_u8, 0xb4_u8, 0xce_u8])
    def query_interface(this : IFolderView*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFolderView*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFolderView*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_current_view_mode(this : IFolderView*, pViewMode : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_view_mode.call(this, pViewMode)
    end
    def set_current_view_mode(this : IFolderView*, view_mode : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_current_view_mode.call(this, view_mode)
    end
    def get_folder(this : IFolderView*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder.call(this, riid, ppv)
    end
    def item(this : IFolderView*, iItemIndex : Int32, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item.call(this, iItemIndex, ppidl)
    end
    def item_count(this : IFolderView*, uFlags : UInt32, pcItems : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item_count.call(this, uFlags, pcItems)
    end
    def items(this : IFolderView*, uFlags : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.items.call(this, uFlags, riid, ppv)
    end
    def get_selection_marked_item(this : IFolderView*, piItem : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_selection_marked_item.call(this, piItem)
    end
    def get_focused_item(this : IFolderView*, piItem : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_focused_item.call(this, piItem)
    end
    def get_item_position(this : IFolderView*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_position.call(this, pidl, ppt)
    end
    def get_spacing(this : IFolderView*, ppt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_spacing.call(this, ppt)
    end
    def get_default_spacing(this : IFolderView*, ppt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_spacing.call(this, ppt)
    end
    def get_auto_arrange(this : IFolderView*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_auto_arrange.call(this)
    end
    def select_item(this : IFolderView*, iItem : Int32, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_item.call(this, iItem, dwFlags)
    end
    def select_and_position_items(this : IFolderView*, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, apt : Win32cr::Foundation::POINT*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_and_position_items.call(this, cidl, apidl, apt, dwFlags)
    end

  end

  @[Extern]
  record IFolderView2Vtbl,
    query_interface : Proc(IFolderView2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFolderView2*, UInt32),
    release : Proc(IFolderView2*, UInt32),
    get_current_view_mode : Proc(IFolderView2*, UInt32*, Win32cr::Foundation::HRESULT),
    set_current_view_mode : Proc(IFolderView2*, UInt32, Win32cr::Foundation::HRESULT),
    get_folder : Proc(IFolderView2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    item : Proc(IFolderView2*, Int32, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    item_count : Proc(IFolderView2*, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    items : Proc(IFolderView2*, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_selection_marked_item : Proc(IFolderView2*, Int32*, Win32cr::Foundation::HRESULT),
    get_focused_item : Proc(IFolderView2*, Int32*, Win32cr::Foundation::HRESULT),
    get_item_position : Proc(IFolderView2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::POINT*, Win32cr::Foundation::HRESULT),
    get_spacing : Proc(IFolderView2*, Win32cr::Foundation::POINT*, Win32cr::Foundation::HRESULT),
    get_default_spacing : Proc(IFolderView2*, Win32cr::Foundation::POINT*, Win32cr::Foundation::HRESULT),
    get_auto_arrange : Proc(IFolderView2*, Win32cr::Foundation::HRESULT),
    select_item : Proc(IFolderView2*, Int32, UInt32, Win32cr::Foundation::HRESULT),
    select_and_position_items : Proc(IFolderView2*, UInt32, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::POINT*, UInt32, Win32cr::Foundation::HRESULT),
    set_group_by : Proc(IFolderView2*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_group_by : Proc(IFolderView2*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    set_view_property : Proc(IFolderView2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::System::Com::StructuredStorage::PROPVARIANT*, Win32cr::Foundation::HRESULT),
    get_view_property : Proc(IFolderView2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::System::Com::StructuredStorage::PROPVARIANT*, Win32cr::Foundation::HRESULT),
    set_tile_view_properties : Proc(IFolderView2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_extended_tile_view_properties : Proc(IFolderView2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_text : Proc(IFolderView2*, Win32cr::UI::Shell::FVTEXTTYPE, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_current_folder_flags : Proc(IFolderView2*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_current_folder_flags : Proc(IFolderView2*, UInt32*, Win32cr::Foundation::HRESULT),
    get_sort_column_count : Proc(IFolderView2*, Int32*, Win32cr::Foundation::HRESULT),
    set_sort_columns : Proc(IFolderView2*, Win32cr::UI::Shell::SORTCOLUMN*, Int32, Win32cr::Foundation::HRESULT),
    get_sort_columns : Proc(IFolderView2*, Win32cr::UI::Shell::SORTCOLUMN*, Int32, Win32cr::Foundation::HRESULT),
    get_item : Proc(IFolderView2*, Int32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_visible_item : Proc(IFolderView2*, Int32, Win32cr::Foundation::BOOL, Int32*, Win32cr::Foundation::HRESULT),
    get_selected_item : Proc(IFolderView2*, Int32, Int32*, Win32cr::Foundation::HRESULT),
    get_selection : Proc(IFolderView2*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    get_selection_state : Proc(IFolderView2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32*, Win32cr::Foundation::HRESULT),
    invoke_verb_on_selection : Proc(IFolderView2*, Win32cr::Foundation::PSTR, Win32cr::Foundation::HRESULT),
    set_view_mode_and_icon_size : Proc(IFolderView2*, Win32cr::UI::Shell::FOLDERVIEWMODE, Int32, Win32cr::Foundation::HRESULT),
    get_view_mode_and_icon_size : Proc(IFolderView2*, Win32cr::UI::Shell::FOLDERVIEWMODE*, Int32*, Win32cr::Foundation::HRESULT),
    set_group_subset_count : Proc(IFolderView2*, UInt32, Win32cr::Foundation::HRESULT),
    get_group_subset_count : Proc(IFolderView2*, UInt32*, Win32cr::Foundation::HRESULT),
    set_redraw : Proc(IFolderView2*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    is_move_in_same_folder : Proc(IFolderView2*, Win32cr::Foundation::HRESULT),
    do_rename : Proc(IFolderView2*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFolderView2, lpVtbl : IFolderView2Vtbl* do
    GUID = LibC::GUID.new(0x1af3a467_u32, 0x214f_u16, 0x4298_u16, StaticArray[0x90_u8, 0x8e_u8, 0x6_u8, 0xb0_u8, 0x3e_u8, 0xb_u8, 0x39_u8, 0xf9_u8])
    def query_interface(this : IFolderView2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFolderView2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFolderView2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_current_view_mode(this : IFolderView2*, pViewMode : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_view_mode.call(this, pViewMode)
    end
    def set_current_view_mode(this : IFolderView2*, view_mode : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_current_view_mode.call(this, view_mode)
    end
    def get_folder(this : IFolderView2*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder.call(this, riid, ppv)
    end
    def item(this : IFolderView2*, iItemIndex : Int32, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item.call(this, iItemIndex, ppidl)
    end
    def item_count(this : IFolderView2*, uFlags : UInt32, pcItems : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item_count.call(this, uFlags, pcItems)
    end
    def items(this : IFolderView2*, uFlags : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.items.call(this, uFlags, riid, ppv)
    end
    def get_selection_marked_item(this : IFolderView2*, piItem : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_selection_marked_item.call(this, piItem)
    end
    def get_focused_item(this : IFolderView2*, piItem : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_focused_item.call(this, piItem)
    end
    def get_item_position(this : IFolderView2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_position.call(this, pidl, ppt)
    end
    def get_spacing(this : IFolderView2*, ppt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_spacing.call(this, ppt)
    end
    def get_default_spacing(this : IFolderView2*, ppt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_spacing.call(this, ppt)
    end
    def get_auto_arrange(this : IFolderView2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_auto_arrange.call(this)
    end
    def select_item(this : IFolderView2*, iItem : Int32, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_item.call(this, iItem, dwFlags)
    end
    def select_and_position_items(this : IFolderView2*, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, apt : Win32cr::Foundation::POINT*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_and_position_items.call(this, cidl, apidl, apt, dwFlags)
    end
    def set_group_by(this : IFolderView2*, key : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, fAscending : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_group_by.call(this, key, fAscending)
    end
    def get_group_by(this : IFolderView2*, pkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, pfAscending : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_group_by.call(this, pkey, pfAscending)
    end
    def set_view_property(this : IFolderView2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, propkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, propvar : Win32cr::System::Com::StructuredStorage::PROPVARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_view_property.call(this, pidl, propkey, propvar)
    end
    def get_view_property(this : IFolderView2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, propkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, ppropvar : Win32cr::System::Com::StructuredStorage::PROPVARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_view_property.call(this, pidl, propkey, ppropvar)
    end
    def set_tile_view_properties(this : IFolderView2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszPropList : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_tile_view_properties.call(this, pidl, pszPropList)
    end
    def set_extended_tile_view_properties(this : IFolderView2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszPropList : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_extended_tile_view_properties.call(this, pidl, pszPropList)
    end
    def set_text(this : IFolderView2*, iType : Win32cr::UI::Shell::FVTEXTTYPE, pwszText : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_text.call(this, iType, pwszText)
    end
    def set_current_folder_flags(this : IFolderView2*, dwMask : UInt32, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_current_folder_flags.call(this, dwMask, dwFlags)
    end
    def get_current_folder_flags(this : IFolderView2*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_folder_flags.call(this, pdwFlags)
    end
    def get_sort_column_count(this : IFolderView2*, pcColumns : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_sort_column_count.call(this, pcColumns)
    end
    def set_sort_columns(this : IFolderView2*, rgSortColumns : Win32cr::UI::Shell::SORTCOLUMN*, cColumns : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_sort_columns.call(this, rgSortColumns, cColumns)
    end
    def get_sort_columns(this : IFolderView2*, rgSortColumns : Win32cr::UI::Shell::SORTCOLUMN*, cColumns : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_sort_columns.call(this, rgSortColumns, cColumns)
    end
    def get_item(this : IFolderView2*, iItem : Int32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item.call(this, iItem, riid, ppv)
    end
    def get_visible_item(this : IFolderView2*, iStart : Int32, fPrevious : Win32cr::Foundation::BOOL, piItem : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_visible_item.call(this, iStart, fPrevious, piItem)
    end
    def get_selected_item(this : IFolderView2*, iStart : Int32, piItem : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_selected_item.call(this, iStart, piItem)
    end
    def get_selection(this : IFolderView2*, fNoneImpliesFolder : Win32cr::Foundation::BOOL, ppsia : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_selection.call(this, fNoneImpliesFolder, ppsia)
    end
    def get_selection_state(this : IFolderView2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_selection_state.call(this, pidl, pdwFlags)
    end
    def invoke_verb_on_selection(this : IFolderView2*, pszVerb : Win32cr::Foundation::PSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_verb_on_selection.call(this, pszVerb)
    end
    def set_view_mode_and_icon_size(this : IFolderView2*, uViewMode : Win32cr::UI::Shell::FOLDERVIEWMODE, iImageSize : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_view_mode_and_icon_size.call(this, uViewMode, iImageSize)
    end
    def get_view_mode_and_icon_size(this : IFolderView2*, puViewMode : Win32cr::UI::Shell::FOLDERVIEWMODE*, piImageSize : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_view_mode_and_icon_size.call(this, puViewMode, piImageSize)
    end
    def set_group_subset_count(this : IFolderView2*, cVisibleRows : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_group_subset_count.call(this, cVisibleRows)
    end
    def get_group_subset_count(this : IFolderView2*, pcVisibleRows : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_group_subset_count.call(this, pcVisibleRows)
    end
    def set_redraw(this : IFolderView2*, fRedrawOn : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_redraw.call(this, fRedrawOn)
    end
    def is_move_in_same_folder(this : IFolderView2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_move_in_same_folder.call(this)
    end
    def do_rename(this : IFolderView2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.do_rename.call(this)
    end

  end

  @[Extern]
  record IFolderViewSettingsVtbl,
    query_interface : Proc(IFolderViewSettings*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFolderViewSettings*, UInt32),
    release : Proc(IFolderViewSettings*, UInt32),
    get_column_property_list : Proc(IFolderViewSettings*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_group_by_property : Proc(IFolderViewSettings*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_view_mode : Proc(IFolderViewSettings*, Win32cr::UI::Shell::FOLDERLOGICALVIEWMODE*, Win32cr::Foundation::HRESULT),
    get_icon_size : Proc(IFolderViewSettings*, UInt32*, Win32cr::Foundation::HRESULT),
    get_folder_flags : Proc(IFolderViewSettings*, Win32cr::UI::Shell::FOLDERFLAGS*, Win32cr::UI::Shell::FOLDERFLAGS*, Win32cr::Foundation::HRESULT),
    get_sort_columns : Proc(IFolderViewSettings*, Win32cr::UI::Shell::SORTCOLUMN*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_group_subset_count : Proc(IFolderViewSettings*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFolderViewSettings, lpVtbl : IFolderViewSettingsVtbl* do
    GUID = LibC::GUID.new(0xae8c987d_u32, 0x8797_u16, 0x4ed3_u16, StaticArray[0xbe_u8, 0x72_u8, 0x2a_u8, 0x47_u8, 0xdd_u8, 0x93_u8, 0x8d_u8, 0xb0_u8])
    def query_interface(this : IFolderViewSettings*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFolderViewSettings*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFolderViewSettings*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_column_property_list(this : IFolderViewSettings*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_column_property_list.call(this, riid, ppv)
    end
    def get_group_by_property(this : IFolderViewSettings*, pkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, pfGroupAscending : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_group_by_property.call(this, pkey, pfGroupAscending)
    end
    def get_view_mode(this : IFolderViewSettings*, plvm : Win32cr::UI::Shell::FOLDERLOGICALVIEWMODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_view_mode.call(this, plvm)
    end
    def get_icon_size(this : IFolderViewSettings*, puIconSize : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_icon_size.call(this, puIconSize)
    end
    def get_folder_flags(this : IFolderViewSettings*, pfolderMask : Win32cr::UI::Shell::FOLDERFLAGS*, pfolderFlags : Win32cr::UI::Shell::FOLDERFLAGS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder_flags.call(this, pfolderMask, pfolderFlags)
    end
    def get_sort_columns(this : IFolderViewSettings*, rgSortColumns : Win32cr::UI::Shell::SORTCOLUMN*, cColumnsIn : UInt32, pcColumnsOut : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_sort_columns.call(this, rgSortColumns, cColumnsIn, pcColumnsOut)
    end
    def get_group_subset_count(this : IFolderViewSettings*, pcVisibleRows : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_group_subset_count.call(this, pcVisibleRows)
    end

  end

  @[Extern]
  record IInitializeNetworkFolderVtbl,
    query_interface : Proc(IInitializeNetworkFolder*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInitializeNetworkFolder*, UInt32),
    release : Proc(IInitializeNetworkFolder*, UInt32),
    initialize__ : Proc(IInitializeNetworkFolder*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInitializeNetworkFolder, lpVtbl : IInitializeNetworkFolderVtbl* do
    GUID = LibC::GUID.new(0x6e0f9881_u32, 0x42a8_u16, 0x4f2a_u16, StaticArray[0x97_u8, 0xf8_u8, 0x8a_u8, 0xf4_u8, 0xe0_u8, 0x26_u8, 0xd9_u8, 0x2d_u8])
    def query_interface(this : IInitializeNetworkFolder*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInitializeNetworkFolder*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInitializeNetworkFolder*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IInitializeNetworkFolder*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidlTarget : Win32cr::UI::Shell::Common::ITEMIDLIST*, uDisplayType : UInt32, pszResName : Win32cr::Foundation::PWSTR, pszProvider : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, pidl, pidlTarget, uDisplayType, pszResName, pszProvider)
    end

  end

  @[Extern]
  record INetworkFolderInternalVtbl,
    query_interface : Proc(INetworkFolderInternal*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INetworkFolderInternal*, UInt32),
    release : Proc(INetworkFolderInternal*, UInt32),
    get_resource_display_type : Proc(INetworkFolderInternal*, UInt32*, Win32cr::Foundation::HRESULT),
    get_id_list : Proc(INetworkFolderInternal*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    get_provider : Proc(INetworkFolderInternal*, UInt32, Win32cr::UI::Shell::Common::ITEMIDLIST**, UInt32, UInt16*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INetworkFolderInternal, lpVtbl : INetworkFolderInternalVtbl* do
    GUID = LibC::GUID.new(0xceb38218_u32, 0xc971_u16, 0x47bb_u16, StaticArray[0xa7_u8, 0x3_u8, 0xf0_u8, 0xbc_u8, 0x99_u8, 0xcc_u8, 0xdb_u8, 0x81_u8])
    def query_interface(this : INetworkFolderInternal*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INetworkFolderInternal*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INetworkFolderInternal*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_resource_display_type(this : INetworkFolderInternal*, displayType : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_resource_display_type.call(this, displayType)
    end
    def get_id_list(this : INetworkFolderInternal*, idList : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_id_list.call(this, idList)
    end
    def get_provider(this : INetworkFolderInternal*, itemIdCount : UInt32, itemIds : Win32cr::UI::Shell::Common::ITEMIDLIST**, providerMaxLength : UInt32, provider : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_provider.call(this, itemIdCount, itemIds, providerMaxLength, provider)
    end

  end

  @[Extern]
  record IPreviewHandlerVisualsVtbl,
    query_interface : Proc(IPreviewHandlerVisuals*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPreviewHandlerVisuals*, UInt32),
    release : Proc(IPreviewHandlerVisuals*, UInt32),
    set_background_color : Proc(IPreviewHandlerVisuals*, UInt32, Win32cr::Foundation::HRESULT),
    set_font : Proc(IPreviewHandlerVisuals*, Win32cr::Graphics::Gdi::LOGFONTW*, Win32cr::Foundation::HRESULT),
    set_text_color : Proc(IPreviewHandlerVisuals*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPreviewHandlerVisuals, lpVtbl : IPreviewHandlerVisualsVtbl* do
    GUID = LibC::GUID.new(0x196bf9a5_u32, 0xb346_u16, 0x4ef0_u16, StaticArray[0xaa_u8, 0x1e_u8, 0x5d_u8, 0xcd_u8, 0xb7_u8, 0x67_u8, 0x68_u8, 0xb1_u8])
    def query_interface(this : IPreviewHandlerVisuals*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPreviewHandlerVisuals*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPreviewHandlerVisuals*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_background_color(this : IPreviewHandlerVisuals*, color : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_background_color.call(this, color)
    end
    def set_font(this : IPreviewHandlerVisuals*, plf : Win32cr::Graphics::Gdi::LOGFONTW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font.call(this, plf)
    end
    def set_text_color(this : IPreviewHandlerVisuals*, color : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_text_color.call(this, color)
    end

  end

  @[Extern]
  record ICommDlgBrowserVtbl,
    query_interface : Proc(ICommDlgBrowser*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICommDlgBrowser*, UInt32),
    release : Proc(ICommDlgBrowser*, UInt32),
    on_default_command : Proc(ICommDlgBrowser*, Void*, Win32cr::Foundation::HRESULT),
    on_state_change : Proc(ICommDlgBrowser*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    include_object : Proc(ICommDlgBrowser*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICommDlgBrowser, lpVtbl : ICommDlgBrowserVtbl* do
    GUID = LibC::GUID.new(0x214f1_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : ICommDlgBrowser*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICommDlgBrowser*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICommDlgBrowser*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_default_command(this : ICommDlgBrowser*, ppshv : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_default_command.call(this, ppshv)
    end
    def on_state_change(this : ICommDlgBrowser*, ppshv : Void*, uChange : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_state_change.call(this, ppshv, uChange)
    end
    def include_object(this : ICommDlgBrowser*, ppshv : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.include_object.call(this, ppshv, pidl)
    end

  end

  @[Extern]
  record ICommDlgBrowser2Vtbl,
    query_interface : Proc(ICommDlgBrowser2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICommDlgBrowser2*, UInt32),
    release : Proc(ICommDlgBrowser2*, UInt32),
    on_default_command : Proc(ICommDlgBrowser2*, Void*, Win32cr::Foundation::HRESULT),
    on_state_change : Proc(ICommDlgBrowser2*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    include_object : Proc(ICommDlgBrowser2*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    notify : Proc(ICommDlgBrowser2*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_default_menu_text : Proc(ICommDlgBrowser2*, Void*, UInt16*, Int32, Win32cr::Foundation::HRESULT),
    get_view_flags : Proc(ICommDlgBrowser2*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICommDlgBrowser2, lpVtbl : ICommDlgBrowser2Vtbl* do
    GUID = LibC::GUID.new(0x10339516_u32, 0x2894_u16, 0x11d2_u16, StaticArray[0x90_u8, 0x39_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x8e_u8, 0xeb_u8, 0x3e_u8])
    def query_interface(this : ICommDlgBrowser2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICommDlgBrowser2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICommDlgBrowser2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_default_command(this : ICommDlgBrowser2*, ppshv : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_default_command.call(this, ppshv)
    end
    def on_state_change(this : ICommDlgBrowser2*, ppshv : Void*, uChange : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_state_change.call(this, ppshv, uChange)
    end
    def include_object(this : ICommDlgBrowser2*, ppshv : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.include_object.call(this, ppshv, pidl)
    end
    def notify(this : ICommDlgBrowser2*, ppshv : Void*, dwNotifyType : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.notify.call(this, ppshv, dwNotifyType)
    end
    def get_default_menu_text(this : ICommDlgBrowser2*, ppshv : Void*, pszText : UInt16*, cchMax : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_menu_text.call(this, ppshv, pszText, cchMax)
    end
    def get_view_flags(this : ICommDlgBrowser2*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_view_flags.call(this, pdwFlags)
    end

  end

  @[Extern]
  record IColumnManagerVtbl,
    query_interface : Proc(IColumnManager*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IColumnManager*, UInt32),
    release : Proc(IColumnManager*, UInt32),
    set_column_info : Proc(IColumnManager*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::UI::Shell::CM_COLUMNINFO*, Win32cr::Foundation::HRESULT),
    get_column_info : Proc(IColumnManager*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::UI::Shell::CM_COLUMNINFO*, Win32cr::Foundation::HRESULT),
    get_column_count : Proc(IColumnManager*, Win32cr::UI::Shell::CM_ENUM_FLAGS, UInt32*, Win32cr::Foundation::HRESULT),
    get_columns : Proc(IColumnManager*, Win32cr::UI::Shell::CM_ENUM_FLAGS, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, UInt32, Win32cr::Foundation::HRESULT),
    set_columns : Proc(IColumnManager*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IColumnManager, lpVtbl : IColumnManagerVtbl* do
    GUID = LibC::GUID.new(0xd8ec27bb_u32, 0x3f3b_u16, 0x4042_u16, StaticArray[0xb1_u8, 0xa_u8, 0x4a_u8, 0xcf_u8, 0xd9_u8, 0x24_u8, 0xd4_u8, 0x53_u8])
    def query_interface(this : IColumnManager*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IColumnManager*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IColumnManager*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_column_info(this : IColumnManager*, propkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, pcmci : Win32cr::UI::Shell::CM_COLUMNINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_column_info.call(this, propkey, pcmci)
    end
    def get_column_info(this : IColumnManager*, propkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, pcmci : Win32cr::UI::Shell::CM_COLUMNINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_column_info.call(this, propkey, pcmci)
    end
    def get_column_count(this : IColumnManager*, dwFlags : Win32cr::UI::Shell::CM_ENUM_FLAGS, puCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_column_count.call(this, dwFlags, puCount)
    end
    def get_columns(this : IColumnManager*, dwFlags : Win32cr::UI::Shell::CM_ENUM_FLAGS, rgkeyOrder : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, cColumns : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_columns.call(this, dwFlags, rgkeyOrder, cColumns)
    end
    def set_columns(this : IColumnManager*, rgkeyOrder : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, cVisible : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_columns.call(this, rgkeyOrder, cVisible)
    end

  end

  @[Extern]
  record IFolderFilterSiteVtbl,
    query_interface : Proc(IFolderFilterSite*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFolderFilterSite*, UInt32),
    release : Proc(IFolderFilterSite*, UInt32),
    set_filter : Proc(IFolderFilterSite*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFolderFilterSite, lpVtbl : IFolderFilterSiteVtbl* do
    GUID = LibC::GUID.new(0xc0a651f5_u32, 0xb48b_u16, 0x11d2_u16, StaticArray[0xb5_u8, 0xed_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0xc6_u8, 0x86_u8, 0xf6_u8])
    def query_interface(this : IFolderFilterSite*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFolderFilterSite*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFolderFilterSite*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_filter(this : IFolderFilterSite*, punk : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_filter.call(this, punk)
    end

  end

  @[Extern]
  record IFolderFilterVtbl,
    query_interface : Proc(IFolderFilter*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFolderFilter*, UInt32),
    release : Proc(IFolderFilter*, UInt32),
    should_show : Proc(IFolderFilter*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    get_enum_flags : Proc(IFolderFilter*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HWND*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFolderFilter, lpVtbl : IFolderFilterVtbl* do
    GUID = LibC::GUID.new(0x9cc22886_u32, 0xdc8e_u16, 0x11d2_u16, StaticArray[0xb1_u8, 0xd0_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x8e_u8, 0xeb_u8, 0x3e_u8])
    def query_interface(this : IFolderFilter*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFolderFilter*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFolderFilter*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def should_show(this : IFolderFilter*, psf : Void*, pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidlItem : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.should_show.call(this, psf, pidlFolder, pidlItem)
    end
    def get_enum_flags(this : IFolderFilter*, psf : Void*, pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, phwnd : Win32cr::Foundation::HWND*, pgrfFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_enum_flags.call(this, psf, pidlFolder, phwnd, pgrfFlags)
    end

  end

  @[Extern]
  record IInputObjectSiteVtbl,
    query_interface : Proc(IInputObjectSite*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInputObjectSite*, UInt32),
    release : Proc(IInputObjectSite*, UInt32),
    on_focus_change_is : Proc(IInputObjectSite*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInputObjectSite, lpVtbl : IInputObjectSiteVtbl* do
    GUID = LibC::GUID.new(0xf1db8392_u32, 0x7331_u16, 0x11d0_u16, StaticArray[0x8c_u8, 0x99_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x2d_u8, 0xbf_u8, 0xe8_u8])
    def query_interface(this : IInputObjectSite*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInputObjectSite*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInputObjectSite*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_focus_change_is(this : IInputObjectSite*, punkObj : Void*, fSetFocus : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_focus_change_is.call(this, punkObj, fSetFocus)
    end

  end

  @[Extern]
  record IInputObjectVtbl,
    query_interface : Proc(IInputObject*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInputObject*, UInt32),
    release : Proc(IInputObject*, UInt32),
    ui_activate_io : Proc(IInputObject*, Win32cr::Foundation::BOOL, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT),
    has_focus_io : Proc(IInputObject*, Win32cr::Foundation::HRESULT),
    translate_accelerator_io : Proc(IInputObject*, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInputObject, lpVtbl : IInputObjectVtbl* do
    GUID = LibC::GUID.new(0x68284faa_u32, 0x6a48_u16, 0x11d0_u16, StaticArray[0x8c_u8, 0x78_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xb4_u8])
    def query_interface(this : IInputObject*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInputObject*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInputObject*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def ui_activate_io(this : IInputObject*, fActivate : Win32cr::Foundation::BOOL, pMsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ui_activate_io.call(this, fActivate, pMsg)
    end
    def has_focus_io(this : IInputObject*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.has_focus_io.call(this)
    end
    def translate_accelerator_io(this : IInputObject*, pMsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_accelerator_io.call(this, pMsg)
    end

  end

  @[Extern]
  record IInputObject2Vtbl,
    query_interface : Proc(IInputObject2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInputObject2*, UInt32),
    release : Proc(IInputObject2*, UInt32),
    ui_activate_io : Proc(IInputObject2*, Win32cr::Foundation::BOOL, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT),
    has_focus_io : Proc(IInputObject2*, Win32cr::Foundation::HRESULT),
    translate_accelerator_io : Proc(IInputObject2*, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT),
    translate_accelerator_global : Proc(IInputObject2*, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInputObject2, lpVtbl : IInputObject2Vtbl* do
    GUID = LibC::GUID.new(0x6915c085_u32, 0x510b_u16, 0x44cd_u16, StaticArray[0x94_u8, 0xaf_u8, 0x28_u8, 0xdf_u8, 0xa5_u8, 0x6c_u8, 0xf9_u8, 0x2b_u8])
    def query_interface(this : IInputObject2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInputObject2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInputObject2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def ui_activate_io(this : IInputObject2*, fActivate : Win32cr::Foundation::BOOL, pMsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ui_activate_io.call(this, fActivate, pMsg)
    end
    def has_focus_io(this : IInputObject2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.has_focus_io.call(this)
    end
    def translate_accelerator_io(this : IInputObject2*, pMsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_accelerator_io.call(this, pMsg)
    end
    def translate_accelerator_global(this : IInputObject2*, pMsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_accelerator_global.call(this, pMsg)
    end

  end

  @[Extern]
  record IShellIconVtbl,
    query_interface : Proc(IShellIcon*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellIcon*, UInt32),
    release : Proc(IShellIcon*, UInt32),
    get_icon_of : Proc(IShellIcon*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Int32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellIcon, lpVtbl : IShellIconVtbl* do
    GUID = LibC::GUID.new(0x214e5_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IShellIcon*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellIcon*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellIcon*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_icon_of(this : IShellIcon*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, flags : UInt32, pIconIndex : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_icon_of.call(this, pidl, flags, pIconIndex)
    end

  end

  @[Extern]
  record IShellBrowserVtbl,
    query_interface : Proc(IShellBrowser*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellBrowser*, UInt32),
    release : Proc(IShellBrowser*, UInt32),
    get_window : Proc(IShellBrowser*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    context_sensitive_help : Proc(IShellBrowser*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    insert_menus_sb : Proc(IShellBrowser*, Win32cr::UI::WindowsAndMessaging::HMENU, Win32cr::System::Ole::OleMenuGroupWidths*, Win32cr::Foundation::HRESULT),
    set_menu_sb : Proc(IShellBrowser*, Win32cr::UI::WindowsAndMessaging::HMENU, LibC::IntPtrT, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    remove_menus_sb : Proc(IShellBrowser*, Win32cr::UI::WindowsAndMessaging::HMENU, Win32cr::Foundation::HRESULT),
    set_status_text_sb : Proc(IShellBrowser*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    enable_modeless_sb : Proc(IShellBrowser*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    translate_accelerator_sb : Proc(IShellBrowser*, Win32cr::UI::WindowsAndMessaging::MSG*, UInt16, Win32cr::Foundation::HRESULT),
    browse_object : Proc(IShellBrowser*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::Foundation::HRESULT),
    get_view_state_stream : Proc(IShellBrowser*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_control_window : Proc(IShellBrowser*, UInt32, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    send_control_msg : Proc(IShellBrowser*, UInt32, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LRESULT*, Win32cr::Foundation::HRESULT),
    query_active_shell_view : Proc(IShellBrowser*, Void**, Win32cr::Foundation::HRESULT),
    on_view_window_active : Proc(IShellBrowser*, Void*, Win32cr::Foundation::HRESULT),
    set_toolbar_items : Proc(IShellBrowser*, Win32cr::UI::Controls::TBBUTTON*, UInt32, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellBrowser, lpVtbl : IShellBrowserVtbl* do
    GUID = LibC::GUID.new(0x214e2_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IShellBrowser*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellBrowser*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellBrowser*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IShellBrowser*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, phwnd)
    end
    def context_sensitive_help(this : IShellBrowser*, fEnterMode : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.context_sensitive_help.call(this, fEnterMode)
    end
    def insert_menus_sb(this : IShellBrowser*, hmenuShared : Win32cr::UI::WindowsAndMessaging::HMENU, lpMenuWidths : Win32cr::System::Ole::OleMenuGroupWidths*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.insert_menus_sb.call(this, hmenuShared, lpMenuWidths)
    end
    def set_menu_sb(this : IShellBrowser*, hmenuShared : Win32cr::UI::WindowsAndMessaging::HMENU, holemenuRes : LibC::IntPtrT, hwndActiveObject : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_menu_sb.call(this, hmenuShared, holemenuRes, hwndActiveObject)
    end
    def remove_menus_sb(this : IShellBrowser*, hmenuShared : Win32cr::UI::WindowsAndMessaging::HMENU) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_menus_sb.call(this, hmenuShared)
    end
    def set_status_text_sb(this : IShellBrowser*, pszStatusText : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_status_text_sb.call(this, pszStatusText)
    end
    def enable_modeless_sb(this : IShellBrowser*, fEnable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_modeless_sb.call(this, fEnable)
    end
    def translate_accelerator_sb(this : IShellBrowser*, pmsg : Win32cr::UI::WindowsAndMessaging::MSG*, wID : UInt16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_accelerator_sb.call(this, pmsg, wID)
    end
    def browse_object(this : IShellBrowser*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, wFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.browse_object.call(this, pidl, wFlags)
    end
    def get_view_state_stream(this : IShellBrowser*, grfMode : UInt32, ppStrm : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_view_state_stream.call(this, grfMode, ppStrm)
    end
    def get_control_window(this : IShellBrowser*, id : UInt32, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_control_window.call(this, id, phwnd)
    end
    def send_control_msg(this : IShellBrowser*, id : UInt32, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM, pret : Win32cr::Foundation::LRESULT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_control_msg.call(this, id, uMsg, wParam, lParam, pret)
    end
    def query_active_shell_view(this : IShellBrowser*, ppshv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_active_shell_view.call(this, ppshv)
    end
    def on_view_window_active(this : IShellBrowser*, pshv : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_view_window_active.call(this, pshv)
    end
    def set_toolbar_items(this : IShellBrowser*, lpButtons : Win32cr::UI::Controls::TBBUTTON*, nButtons : UInt32, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_toolbar_items.call(this, lpButtons, nButtons, uFlags)
    end

  end

  @[Extern]
  record IProfferServiceVtbl,
    query_interface : Proc(IProfferService*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IProfferService*, UInt32),
    release : Proc(IProfferService*, UInt32),
    proffer_service : Proc(IProfferService*, LibC::GUID*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    revoke_service : Proc(IProfferService*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IProfferService, lpVtbl : IProfferServiceVtbl* do
    GUID = LibC::GUID.new(0xcb728b20_u32, 0xf786_u16, 0x11ce_u16, StaticArray[0x92_u8, 0xad_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xa7_u8, 0x4c_u8, 0xd0_u8])
    def query_interface(this : IProfferService*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IProfferService*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IProfferService*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def proffer_service(this : IProfferService*, serviceId : LibC::GUID*, serviceProvider : Void*, cookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.proffer_service.call(this, serviceId, serviceProvider, cookie)
    end
    def revoke_service(this : IProfferService*, cookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.revoke_service.call(this, cookie)
    end

  end

  @[Extern]
  record IGetServiceIdsVtbl,
    query_interface : Proc(IGetServiceIds*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IGetServiceIds*, UInt32),
    release : Proc(IGetServiceIds*, UInt32),
    get_service_ids : Proc(IGetServiceIds*, UInt32*, LibC::GUID**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IGetServiceIds, lpVtbl : IGetServiceIdsVtbl* do
    GUID = LibC::GUID.new(0x4a073526_u32, 0x6103_u16, 0x4e21_u16, StaticArray[0xb7_u8, 0xbc_u8, 0xf5_u8, 0x19_u8, 0xd1_u8, 0x52_u8, 0x4e_u8, 0x5d_u8])
    def query_interface(this : IGetServiceIds*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IGetServiceIds*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IGetServiceIds*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_service_ids(this : IGetServiceIds*, serviceIdCount : UInt32*, serviceIds : LibC::GUID**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_service_ids.call(this, serviceIdCount, serviceIds)
    end

  end

  @[Extern]
  record IShellItemVtbl,
    query_interface : Proc(IShellItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellItem*, UInt32),
    release : Proc(IShellItem*, UInt32),
    bind_to_handler : Proc(IShellItem*, Void*, LibC::GUID*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_parent : Proc(IShellItem*, Void**, Win32cr::Foundation::HRESULT),
    get_display_name : Proc(IShellItem*, Win32cr::UI::Shell::SIGDN, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_attributes : Proc(IShellItem*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    compare : Proc(IShellItem*, Void*, UInt32, Int32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellItem, lpVtbl : IShellItemVtbl* do
    GUID = LibC::GUID.new(0x43826d1e_u32, 0xe718_u16, 0x42ee_u16, StaticArray[0xbc_u8, 0x55_u8, 0xa1_u8, 0xe2_u8, 0x61_u8, 0xc3_u8, 0x7b_u8, 0xfe_u8])
    def query_interface(this : IShellItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def bind_to_handler(this : IShellItem*, pbc : Void*, bhid : LibC::GUID*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_to_handler.call(this, pbc, bhid, riid, ppv)
    end
    def get_parent(this : IShellItem*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_parent.call(this, ppsi)
    end
    def get_display_name(this : IShellItem*, sigdnName : Win32cr::UI::Shell::SIGDN, ppszName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_display_name.call(this, sigdnName, ppszName)
    end
    def get_attributes(this : IShellItem*, sfgaoMask : UInt32, psfgaoAttribs : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_attributes.call(this, sfgaoMask, psfgaoAttribs)
    end
    def compare(this : IShellItem*, psi : Void*, hint : UInt32, piOrder : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compare.call(this, psi, hint, piOrder)
    end

  end

  @[Extern]
  record IShellItem2Vtbl,
    query_interface : Proc(IShellItem2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellItem2*, UInt32),
    release : Proc(IShellItem2*, UInt32),
    bind_to_handler : Proc(IShellItem2*, Void*, LibC::GUID*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_parent : Proc(IShellItem2*, Void**, Win32cr::Foundation::HRESULT),
    get_display_name : Proc(IShellItem2*, Win32cr::UI::Shell::SIGDN, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_attributes : Proc(IShellItem2*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    compare : Proc(IShellItem2*, Void*, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    get_property_store : Proc(IShellItem2*, Win32cr::UI::Shell::PropertiesSystem::GETPROPERTYSTOREFLAGS, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_property_store_with_create_object : Proc(IShellItem2*, Win32cr::UI::Shell::PropertiesSystem::GETPROPERTYSTOREFLAGS, Void*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_property_store_for_keys : Proc(IShellItem2*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, UInt32, Win32cr::UI::Shell::PropertiesSystem::GETPROPERTYSTOREFLAGS, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_property_description_list : Proc(IShellItem2*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    update : Proc(IShellItem2*, Void*, Win32cr::Foundation::HRESULT),
    get_property : Proc(IShellItem2*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::System::Com::StructuredStorage::PROPVARIANT*, Win32cr::Foundation::HRESULT),
    get_clsid : Proc(IShellItem2*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_file_time : Proc(IShellItem2*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::HRESULT),
    get_int32 : Proc(IShellItem2*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Int32*, Win32cr::Foundation::HRESULT),
    get_string : Proc(IShellItem2*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_u_int32 : Proc(IShellItem2*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, UInt32*, Win32cr::Foundation::HRESULT),
    get_u_int64 : Proc(IShellItem2*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, UInt64*, Win32cr::Foundation::HRESULT),
    get_bool : Proc(IShellItem2*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellItem2, lpVtbl : IShellItem2Vtbl* do
    GUID = LibC::GUID.new(0x7e9fb0d3_u32, 0x919f_u16, 0x4307_u16, StaticArray[0xab_u8, 0x2e_u8, 0x9b_u8, 0x18_u8, 0x60_u8, 0x31_u8, 0xc_u8, 0x93_u8])
    def query_interface(this : IShellItem2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellItem2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellItem2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def bind_to_handler(this : IShellItem2*, pbc : Void*, bhid : LibC::GUID*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_to_handler.call(this, pbc, bhid, riid, ppv)
    end
    def get_parent(this : IShellItem2*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_parent.call(this, ppsi)
    end
    def get_display_name(this : IShellItem2*, sigdnName : Win32cr::UI::Shell::SIGDN, ppszName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_display_name.call(this, sigdnName, ppszName)
    end
    def get_attributes(this : IShellItem2*, sfgaoMask : UInt32, psfgaoAttribs : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_attributes.call(this, sfgaoMask, psfgaoAttribs)
    end
    def compare(this : IShellItem2*, psi : Void*, hint : UInt32, piOrder : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compare.call(this, psi, hint, piOrder)
    end
    def get_property_store(this : IShellItem2*, flags : Win32cr::UI::Shell::PropertiesSystem::GETPROPERTYSTOREFLAGS, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_store.call(this, flags, riid, ppv)
    end
    def get_property_store_with_create_object(this : IShellItem2*, flags : Win32cr::UI::Shell::PropertiesSystem::GETPROPERTYSTOREFLAGS, punkCreateObject : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_store_with_create_object.call(this, flags, punkCreateObject, riid, ppv)
    end
    def get_property_store_for_keys(this : IShellItem2*, rgKeys : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, cKeys : UInt32, flags : Win32cr::UI::Shell::PropertiesSystem::GETPROPERTYSTOREFLAGS, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_store_for_keys.call(this, rgKeys, cKeys, flags, riid, ppv)
    end
    def get_property_description_list(this : IShellItem2*, keyType : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_description_list.call(this, keyType, riid, ppv)
    end
    def update(this : IShellItem2*, pbc : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update.call(this, pbc)
    end
    def get_property(this : IShellItem2*, key : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, ppropvar : Win32cr::System::Com::StructuredStorage::PROPVARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property.call(this, key, ppropvar)
    end
    def get_clsid(this : IShellItem2*, key : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, pclsid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_clsid.call(this, key, pclsid)
    end
    def get_file_time(this : IShellItem2*, key : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, pft : Win32cr::Foundation::FILETIME*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_time.call(this, key, pft)
    end
    def get_int32(this : IShellItem2*, key : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, pi : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_int32.call(this, key, pi)
    end
    def get_string(this : IShellItem2*, key : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, ppsz : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_string.call(this, key, ppsz)
    end
    def get_u_int32(this : IShellItem2*, key : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, pui : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_u_int32.call(this, key, pui)
    end
    def get_u_int64(this : IShellItem2*, key : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, pull : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_u_int64.call(this, key, pull)
    end
    def get_bool(this : IShellItem2*, key : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, pf : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_bool.call(this, key, pf)
    end

  end

  @[Extern]
  record IShellItemImageFactoryVtbl,
    query_interface : Proc(IShellItemImageFactory*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellItemImageFactory*, UInt32),
    release : Proc(IShellItemImageFactory*, UInt32),
    get_image : Proc(IShellItemImageFactory*, Win32cr::Foundation::SIZE, Win32cr::UI::Shell::SIIGBF, Win32cr::Graphics::Gdi::HBITMAP*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellItemImageFactory, lpVtbl : IShellItemImageFactoryVtbl* do
    GUID = LibC::GUID.new(0xbcc18b79_u32, 0xba16_u16, 0x442f_u16, StaticArray[0x80_u8, 0xc4_u8, 0x8a_u8, 0x59_u8, 0xc3_u8, 0xc_u8, 0x46_u8, 0x3b_u8])
    def query_interface(this : IShellItemImageFactory*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellItemImageFactory*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellItemImageFactory*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_image(this : IShellItemImageFactory*, size : Win32cr::Foundation::SIZE, flags : Win32cr::UI::Shell::SIIGBF, phbm : Win32cr::Graphics::Gdi::HBITMAP*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_image.call(this, size, flags, phbm)
    end

  end

  @[Extern]
  record IEnumShellItemsVtbl,
    query_interface : Proc(IEnumShellItems*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumShellItems*, UInt32),
    release : Proc(IEnumShellItems*, UInt32),
    next__ : Proc(IEnumShellItems*, UInt32, Void**, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumShellItems*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumShellItems*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumShellItems*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumShellItems, lpVtbl : IEnumShellItemsVtbl* do
    GUID = LibC::GUID.new(0x70629033_u32, 0xe363_u16, 0x4a28_u16, StaticArray[0xa5_u8, 0x67_u8, 0xd_u8, 0xb7_u8, 0x80_u8, 0x6_u8, 0xe6_u8, 0xd7_u8])
    def query_interface(this : IEnumShellItems*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumShellItems*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumShellItems*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumShellItems*, celt : UInt32, rgelt : Void**, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, rgelt, pceltFetched)
    end
    def skip(this : IEnumShellItems*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumShellItems*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumShellItems*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppenum)
    end

  end

  @[Extern]
  record ITransferAdviseSinkVtbl,
    query_interface : Proc(ITransferAdviseSink*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITransferAdviseSink*, UInt32),
    release : Proc(ITransferAdviseSink*, UInt32),
    update_progress : Proc(ITransferAdviseSink*, UInt64, UInt64, Int32, Int32, Int32, Int32, Win32cr::Foundation::HRESULT),
    update_transfer_state : Proc(ITransferAdviseSink*, UInt32, Win32cr::Foundation::HRESULT),
    confirm_overwrite : Proc(ITransferAdviseSink*, Void*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    confirm_encryption_loss : Proc(ITransferAdviseSink*, Void*, Win32cr::Foundation::HRESULT),
    file_failure : Proc(ITransferAdviseSink*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    sub_stream_failure : Proc(ITransferAdviseSink*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT, Win32cr::Foundation::HRESULT),
    property_failure : Proc(ITransferAdviseSink*, Void*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITransferAdviseSink, lpVtbl : ITransferAdviseSinkVtbl* do
    GUID = LibC::GUID.new(0xd594d0d8_u32, 0x8da7_u16, 0x457b_u16, StaticArray[0xb3_u8, 0xb4_u8, 0xce_u8, 0x5d_u8, 0xba_u8, 0xac_u8, 0xb_u8, 0x88_u8])
    def query_interface(this : ITransferAdviseSink*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITransferAdviseSink*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITransferAdviseSink*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def update_progress(this : ITransferAdviseSink*, ullSizeCurrent : UInt64, ullSizeTotal : UInt64, nFilesCurrent : Int32, nFilesTotal : Int32, nFoldersCurrent : Int32, nFoldersTotal : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_progress.call(this, ullSizeCurrent, ullSizeTotal, nFilesCurrent, nFilesTotal, nFoldersCurrent, nFoldersTotal)
    end
    def update_transfer_state(this : ITransferAdviseSink*, ts : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_transfer_state.call(this, ts)
    end
    def confirm_overwrite(this : ITransferAdviseSink*, psiSource : Void*, psiDestParent : Void*, pszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.confirm_overwrite.call(this, psiSource, psiDestParent, pszName)
    end
    def confirm_encryption_loss(this : ITransferAdviseSink*, psiSource : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.confirm_encryption_loss.call(this, psiSource)
    end
    def file_failure(this : ITransferAdviseSink*, psi : Void*, pszItem : Win32cr::Foundation::PWSTR, hrError : Win32cr::Foundation::HRESULT, pszRename : UInt16*, cchRename : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.file_failure.call(this, psi, pszItem, hrError, pszRename, cchRename)
    end
    def sub_stream_failure(this : ITransferAdviseSink*, psi : Void*, pszStreamName : Win32cr::Foundation::PWSTR, hrError : Win32cr::Foundation::HRESULT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.sub_stream_failure.call(this, psi, pszStreamName, hrError)
    end
    def property_failure(this : ITransferAdviseSink*, psi : Void*, pkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, hrError : Win32cr::Foundation::HRESULT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.property_failure.call(this, psi, pkey, hrError)
    end

  end

  @[Extern]
  record ITransferSourceVtbl,
    query_interface : Proc(ITransferSource*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITransferSource*, UInt32),
    release : Proc(ITransferSource*, UInt32),
    advise : Proc(ITransferSource*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    unadvise : Proc(ITransferSource*, UInt32, Win32cr::Foundation::HRESULT),
    set_properties : Proc(ITransferSource*, Void*, Win32cr::Foundation::HRESULT),
    open_item : Proc(ITransferSource*, Void*, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    move_item : Proc(ITransferSource*, Void*, Void*, Win32cr::Foundation::PWSTR, UInt32, Void**, Win32cr::Foundation::HRESULT),
    recycle_item : Proc(ITransferSource*, Void*, Void*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    remove_item : Proc(ITransferSource*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    rename_item : Proc(ITransferSource*, Void*, Win32cr::Foundation::PWSTR, UInt32, Void**, Win32cr::Foundation::HRESULT),
    link_item : Proc(ITransferSource*, Void*, Void*, Win32cr::Foundation::PWSTR, UInt32, Void**, Win32cr::Foundation::HRESULT),
    apply_properties_to_item : Proc(ITransferSource*, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_default_destination_name : Proc(ITransferSource*, Void*, Void*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    enter_folder : Proc(ITransferSource*, Void*, Win32cr::Foundation::HRESULT),
    leave_folder : Proc(ITransferSource*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITransferSource, lpVtbl : ITransferSourceVtbl* do
    GUID = LibC::GUID.new(0xadb003_u32, 0xbde9_u16, 0x45c6_u16, StaticArray[0x8e_u8, 0x29_u8, 0xd0_u8, 0x9f_u8, 0x93_u8, 0x53_u8, 0xe1_u8, 0x8_u8])
    def query_interface(this : ITransferSource*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITransferSource*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITransferSource*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def advise(this : ITransferSource*, psink : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, psink, pdwCookie)
    end
    def unadvise(this : ITransferSource*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unadvise.call(this, dwCookie)
    end
    def set_properties(this : ITransferSource*, pproparray : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_properties.call(this, pproparray)
    end
    def open_item(this : ITransferSource*, psi : Void*, flags : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_item.call(this, psi, flags, riid, ppv)
    end
    def move_item(this : ITransferSource*, psi : Void*, psiParentDst : Void*, pszNameDst : Win32cr::Foundation::PWSTR, flags : UInt32, ppsiNew : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_item.call(this, psi, psiParentDst, pszNameDst, flags, ppsiNew)
    end
    def recycle_item(this : ITransferSource*, psiSource : Void*, psiParentDest : Void*, flags : UInt32, ppsiNewDest : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.recycle_item.call(this, psiSource, psiParentDest, flags, ppsiNewDest)
    end
    def remove_item(this : ITransferSource*, psiSource : Void*, flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_item.call(this, psiSource, flags)
    end
    def rename_item(this : ITransferSource*, psiSource : Void*, pszNewName : Win32cr::Foundation::PWSTR, flags : UInt32, ppsiNewDest : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.rename_item.call(this, psiSource, pszNewName, flags, ppsiNewDest)
    end
    def link_item(this : ITransferSource*, psiSource : Void*, psiParentDest : Void*, pszNewName : Win32cr::Foundation::PWSTR, flags : UInt32, ppsiNewDest : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.link_item.call(this, psiSource, psiParentDest, pszNewName, flags, ppsiNewDest)
    end
    def apply_properties_to_item(this : ITransferSource*, psiSource : Void*, ppsiNew : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.apply_properties_to_item.call(this, psiSource, ppsiNew)
    end
    def get_default_destination_name(this : ITransferSource*, psiSource : Void*, psiParentDest : Void*, ppszDestinationName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_destination_name.call(this, psiSource, psiParentDest, ppszDestinationName)
    end
    def enter_folder(this : ITransferSource*, psiChildFolderDest : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enter_folder.call(this, psiChildFolderDest)
    end
    def leave_folder(this : ITransferSource*, psiChildFolderDest : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.leave_folder.call(this, psiChildFolderDest)
    end

  end

  @[Extern]
  record IEnumResourcesVtbl,
    query_interface : Proc(IEnumResources*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumResources*, UInt32),
    release : Proc(IEnumResources*, UInt32),
    next__ : Proc(IEnumResources*, UInt32, Win32cr::UI::Shell::SHELL_ITEM_RESOURCE*, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumResources*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumResources*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumResources*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumResources, lpVtbl : IEnumResourcesVtbl* do
    GUID = LibC::GUID.new(0x2dd81fe3_u32, 0xa83c_u16, 0x4da9_u16, StaticArray[0xa3_u8, 0x30_u8, 0x47_u8, 0x24_u8, 0x9d_u8, 0x34_u8, 0x5b_u8, 0xa1_u8])
    def query_interface(this : IEnumResources*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumResources*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumResources*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumResources*, celt : UInt32, psir : Win32cr::UI::Shell::SHELL_ITEM_RESOURCE*, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, psir, pceltFetched)
    end
    def skip(this : IEnumResources*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumResources*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumResources*, ppenumr : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppenumr)
    end

  end

  @[Extern]
  record IShellItemResourcesVtbl,
    query_interface : Proc(IShellItemResources*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellItemResources*, UInt32),
    release : Proc(IShellItemResources*, UInt32),
    get_attributes : Proc(IShellItemResources*, UInt32*, Win32cr::Foundation::HRESULT),
    get_size : Proc(IShellItemResources*, UInt64*, Win32cr::Foundation::HRESULT),
    get_times : Proc(IShellItemResources*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::HRESULT),
    set_times : Proc(IShellItemResources*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::HRESULT),
    get_resource_description : Proc(IShellItemResources*, Win32cr::UI::Shell::SHELL_ITEM_RESOURCE*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    enum_resources : Proc(IShellItemResources*, Void**, Win32cr::Foundation::HRESULT),
    supports_resource : Proc(IShellItemResources*, Win32cr::UI::Shell::SHELL_ITEM_RESOURCE*, Win32cr::Foundation::HRESULT),
    open_resource : Proc(IShellItemResources*, Win32cr::UI::Shell::SHELL_ITEM_RESOURCE*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    create_resource : Proc(IShellItemResources*, Win32cr::UI::Shell::SHELL_ITEM_RESOURCE*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    mark_for_delete : Proc(IShellItemResources*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellItemResources, lpVtbl : IShellItemResourcesVtbl* do
    GUID = LibC::GUID.new(0xff5693be_u32, 0x2ce0_u16, 0x4d48_u16, StaticArray[0xb5_u8, 0xc5_u8, 0x40_u8, 0x81_u8, 0x7d_u8, 0x1a_u8, 0xcd_u8, 0xb9_u8])
    def query_interface(this : IShellItemResources*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellItemResources*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellItemResources*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_attributes(this : IShellItemResources*, pdwAttributes : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_attributes.call(this, pdwAttributes)
    end
    def get_size(this : IShellItemResources*, pullSize : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_size.call(this, pullSize)
    end
    def get_times(this : IShellItemResources*, pftCreation : Win32cr::Foundation::FILETIME*, pftWrite : Win32cr::Foundation::FILETIME*, pftAccess : Win32cr::Foundation::FILETIME*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_times.call(this, pftCreation, pftWrite, pftAccess)
    end
    def set_times(this : IShellItemResources*, pftCreation : Win32cr::Foundation::FILETIME*, pftWrite : Win32cr::Foundation::FILETIME*, pftAccess : Win32cr::Foundation::FILETIME*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_times.call(this, pftCreation, pftWrite, pftAccess)
    end
    def get_resource_description(this : IShellItemResources*, pcsir : Win32cr::UI::Shell::SHELL_ITEM_RESOURCE*, ppszDescription : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_resource_description.call(this, pcsir, ppszDescription)
    end
    def enum_resources(this : IShellItemResources*, ppenumr : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_resources.call(this, ppenumr)
    end
    def supports_resource(this : IShellItemResources*, pcsir : Win32cr::UI::Shell::SHELL_ITEM_RESOURCE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.supports_resource.call(this, pcsir)
    end
    def open_resource(this : IShellItemResources*, pcsir : Win32cr::UI::Shell::SHELL_ITEM_RESOURCE*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_resource.call(this, pcsir, riid, ppv)
    end
    def create_resource(this : IShellItemResources*, pcsir : Win32cr::UI::Shell::SHELL_ITEM_RESOURCE*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_resource.call(this, pcsir, riid, ppv)
    end
    def mark_for_delete(this : IShellItemResources*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.mark_for_delete.call(this)
    end

  end

  @[Extern]
  record ITransferDestinationVtbl,
    query_interface : Proc(ITransferDestination*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITransferDestination*, UInt32),
    release : Proc(ITransferDestination*, UInt32),
    advise : Proc(ITransferDestination*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    unadvise : Proc(ITransferDestination*, UInt32, Win32cr::Foundation::HRESULT),
    create_item : Proc(ITransferDestination*, Win32cr::Foundation::PWSTR, UInt32, UInt64, UInt32, LibC::GUID*, Void**, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITransferDestination, lpVtbl : ITransferDestinationVtbl* do
    GUID = LibC::GUID.new(0x48addd32_u32, 0x3ca5_u16, 0x4124_u16, StaticArray[0xab_u8, 0xe3_u8, 0xb5_u8, 0xa7_u8, 0x25_u8, 0x31_u8, 0xb2_u8, 0x7_u8])
    def query_interface(this : ITransferDestination*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITransferDestination*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITransferDestination*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def advise(this : ITransferDestination*, psink : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, psink, pdwCookie)
    end
    def unadvise(this : ITransferDestination*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unadvise.call(this, dwCookie)
    end
    def create_item(this : ITransferDestination*, pszName : Win32cr::Foundation::PWSTR, dwAttributes : UInt32, ullSize : UInt64, flags : UInt32, riidItem : LibC::GUID*, ppvItem : Void**, riidResources : LibC::GUID*, ppvResources : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_item.call(this, pszName, dwAttributes, ullSize, flags, riidItem, ppvItem, riidResources, ppvResources)
    end

  end

  @[Extern]
  record IFileOperationProgressSinkVtbl,
    query_interface : Proc(IFileOperationProgressSink*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFileOperationProgressSink*, UInt32),
    release : Proc(IFileOperationProgressSink*, UInt32),
    start_operations : Proc(IFileOperationProgressSink*, Win32cr::Foundation::HRESULT),
    finish_operations : Proc(IFileOperationProgressSink*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::HRESULT),
    pre_rename_item : Proc(IFileOperationProgressSink*, UInt32, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    post_rename_item : Proc(IFileOperationProgressSink*, UInt32, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT, Void*, Win32cr::Foundation::HRESULT),
    pre_move_item : Proc(IFileOperationProgressSink*, UInt32, Void*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    post_move_item : Proc(IFileOperationProgressSink*, UInt32, Void*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT, Void*, Win32cr::Foundation::HRESULT),
    pre_copy_item : Proc(IFileOperationProgressSink*, UInt32, Void*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    post_copy_item : Proc(IFileOperationProgressSink*, UInt32, Void*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT, Void*, Win32cr::Foundation::HRESULT),
    pre_delete_item : Proc(IFileOperationProgressSink*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    post_delete_item : Proc(IFileOperationProgressSink*, UInt32, Void*, Win32cr::Foundation::HRESULT, Void*, Win32cr::Foundation::HRESULT),
    pre_new_item : Proc(IFileOperationProgressSink*, UInt32, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    post_new_item : Proc(IFileOperationProgressSink*, UInt32, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT, Void*, Win32cr::Foundation::HRESULT),
    update_progress : Proc(IFileOperationProgressSink*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    reset_timer : Proc(IFileOperationProgressSink*, Win32cr::Foundation::HRESULT),
    pause_timer : Proc(IFileOperationProgressSink*, Win32cr::Foundation::HRESULT),
    resume_timer : Proc(IFileOperationProgressSink*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFileOperationProgressSink, lpVtbl : IFileOperationProgressSinkVtbl* do
    GUID = LibC::GUID.new(0x4b0f1a7_u32, 0x9490_u16, 0x44bc_u16, StaticArray[0x96_u8, 0xe1_u8, 0x42_u8, 0x96_u8, 0xa3_u8, 0x12_u8, 0x52_u8, 0xe2_u8])
    def query_interface(this : IFileOperationProgressSink*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFileOperationProgressSink*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFileOperationProgressSink*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def start_operations(this : IFileOperationProgressSink*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start_operations.call(this)
    end
    def finish_operations(this : IFileOperationProgressSink*, hrResult : Win32cr::Foundation::HRESULT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.finish_operations.call(this, hrResult)
    end
    def pre_rename_item(this : IFileOperationProgressSink*, dwFlags : UInt32, psiItem : Void*, pszNewName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.pre_rename_item.call(this, dwFlags, psiItem, pszNewName)
    end
    def post_rename_item(this : IFileOperationProgressSink*, dwFlags : UInt32, psiItem : Void*, pszNewName : Win32cr::Foundation::PWSTR, hrRename : Win32cr::Foundation::HRESULT, psiNewlyCreated : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.post_rename_item.call(this, dwFlags, psiItem, pszNewName, hrRename, psiNewlyCreated)
    end
    def pre_move_item(this : IFileOperationProgressSink*, dwFlags : UInt32, psiItem : Void*, psiDestinationFolder : Void*, pszNewName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.pre_move_item.call(this, dwFlags, psiItem, psiDestinationFolder, pszNewName)
    end
    def post_move_item(this : IFileOperationProgressSink*, dwFlags : UInt32, psiItem : Void*, psiDestinationFolder : Void*, pszNewName : Win32cr::Foundation::PWSTR, hrMove : Win32cr::Foundation::HRESULT, psiNewlyCreated : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.post_move_item.call(this, dwFlags, psiItem, psiDestinationFolder, pszNewName, hrMove, psiNewlyCreated)
    end
    def pre_copy_item(this : IFileOperationProgressSink*, dwFlags : UInt32, psiItem : Void*, psiDestinationFolder : Void*, pszNewName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.pre_copy_item.call(this, dwFlags, psiItem, psiDestinationFolder, pszNewName)
    end
    def post_copy_item(this : IFileOperationProgressSink*, dwFlags : UInt32, psiItem : Void*, psiDestinationFolder : Void*, pszNewName : Win32cr::Foundation::PWSTR, hrCopy : Win32cr::Foundation::HRESULT, psiNewlyCreated : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.post_copy_item.call(this, dwFlags, psiItem, psiDestinationFolder, pszNewName, hrCopy, psiNewlyCreated)
    end
    def pre_delete_item(this : IFileOperationProgressSink*, dwFlags : UInt32, psiItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.pre_delete_item.call(this, dwFlags, psiItem)
    end
    def post_delete_item(this : IFileOperationProgressSink*, dwFlags : UInt32, psiItem : Void*, hrDelete : Win32cr::Foundation::HRESULT, psiNewlyCreated : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.post_delete_item.call(this, dwFlags, psiItem, hrDelete, psiNewlyCreated)
    end
    def pre_new_item(this : IFileOperationProgressSink*, dwFlags : UInt32, psiDestinationFolder : Void*, pszNewName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.pre_new_item.call(this, dwFlags, psiDestinationFolder, pszNewName)
    end
    def post_new_item(this : IFileOperationProgressSink*, dwFlags : UInt32, psiDestinationFolder : Void*, pszNewName : Win32cr::Foundation::PWSTR, pszTemplateName : Win32cr::Foundation::PWSTR, dwFileAttributes : UInt32, hrNew : Win32cr::Foundation::HRESULT, psiNewItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.post_new_item.call(this, dwFlags, psiDestinationFolder, pszNewName, pszTemplateName, dwFileAttributes, hrNew, psiNewItem)
    end
    def update_progress(this : IFileOperationProgressSink*, iWorkTotal : UInt32, iWorkSoFar : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_progress.call(this, iWorkTotal, iWorkSoFar)
    end
    def reset_timer(this : IFileOperationProgressSink*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_timer.call(this)
    end
    def pause_timer(this : IFileOperationProgressSink*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.pause_timer.call(this)
    end
    def resume_timer(this : IFileOperationProgressSink*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resume_timer.call(this)
    end

  end

  @[Extern]
  record IShellItemArrayVtbl,
    query_interface : Proc(IShellItemArray*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellItemArray*, UInt32),
    release : Proc(IShellItemArray*, UInt32),
    bind_to_handler : Proc(IShellItemArray*, Void*, LibC::GUID*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_property_store : Proc(IShellItemArray*, Win32cr::UI::Shell::PropertiesSystem::GETPROPERTYSTOREFLAGS, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_property_description_list : Proc(IShellItemArray*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_attributes : Proc(IShellItemArray*, Win32cr::UI::Shell::SIATTRIBFLAGS, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_count : Proc(IShellItemArray*, UInt32*, Win32cr::Foundation::HRESULT),
    get_item_at : Proc(IShellItemArray*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    enum_items : Proc(IShellItemArray*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellItemArray, lpVtbl : IShellItemArrayVtbl* do
    GUID = LibC::GUID.new(0xb63ea76d_u32, 0x1f85_u16, 0x456f_u16, StaticArray[0xa1_u8, 0x9c_u8, 0x48_u8, 0x15_u8, 0x9e_u8, 0xfa_u8, 0x85_u8, 0x8b_u8])
    def query_interface(this : IShellItemArray*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellItemArray*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellItemArray*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def bind_to_handler(this : IShellItemArray*, pbc : Void*, bhid : LibC::GUID*, riid : LibC::GUID*, ppvOut : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_to_handler.call(this, pbc, bhid, riid, ppvOut)
    end
    def get_property_store(this : IShellItemArray*, flags : Win32cr::UI::Shell::PropertiesSystem::GETPROPERTYSTOREFLAGS, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_store.call(this, flags, riid, ppv)
    end
    def get_property_description_list(this : IShellItemArray*, keyType : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_description_list.call(this, keyType, riid, ppv)
    end
    def get_attributes(this : IShellItemArray*, attrib_flags : Win32cr::UI::Shell::SIATTRIBFLAGS, sfgaoMask : UInt32, psfgaoAttribs : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_attributes.call(this, attrib_flags, sfgaoMask, psfgaoAttribs)
    end
    def get_count(this : IShellItemArray*, pdwNumItems : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_count.call(this, pdwNumItems)
    end
    def get_item_at(this : IShellItemArray*, dwIndex : UInt32, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_at.call(this, dwIndex, ppsi)
    end
    def enum_items(this : IShellItemArray*, ppenumShellItems : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_items.call(this, ppenumShellItems)
    end

  end

  @[Extern]
  record IInitializeWithItemVtbl,
    query_interface : Proc(IInitializeWithItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInitializeWithItem*, UInt32),
    release : Proc(IInitializeWithItem*, UInt32),
    initialize__ : Proc(IInitializeWithItem*, Void*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInitializeWithItem, lpVtbl : IInitializeWithItemVtbl* do
    GUID = LibC::GUID.new(0x7f73be3f_u32, 0xfb79_u16, 0x493c_u16, StaticArray[0xa6_u8, 0xc7_u8, 0x7e_u8, 0xe1_u8, 0x4e_u8, 0x24_u8, 0x58_u8, 0x41_u8])
    def query_interface(this : IInitializeWithItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInitializeWithItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInitializeWithItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IInitializeWithItem*, psi : Void*, grfMode : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, psi, grfMode)
    end

  end

  @[Extern]
  record IObjectWithSelectionVtbl,
    query_interface : Proc(IObjectWithSelection*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IObjectWithSelection*, UInt32),
    release : Proc(IObjectWithSelection*, UInt32),
    set_selection : Proc(IObjectWithSelection*, Void*, Win32cr::Foundation::HRESULT),
    get_selection : Proc(IObjectWithSelection*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IObjectWithSelection, lpVtbl : IObjectWithSelectionVtbl* do
    GUID = LibC::GUID.new(0x1c9cd5bb_u32, 0x98e9_u16, 0x4491_u16, StaticArray[0xa6_u8, 0xf_u8, 0x31_u8, 0xaa_u8, 0xcc_u8, 0x72_u8, 0xb8_u8, 0x3c_u8])
    def query_interface(this : IObjectWithSelection*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IObjectWithSelection*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IObjectWithSelection*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_selection(this : IObjectWithSelection*, psia : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_selection.call(this, psia)
    end
    def get_selection(this : IObjectWithSelection*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_selection.call(this, riid, ppv)
    end

  end

  @[Extern]
  record IObjectWithBackReferencesVtbl,
    query_interface : Proc(IObjectWithBackReferences*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IObjectWithBackReferences*, UInt32),
    release : Proc(IObjectWithBackReferences*, UInt32),
    remove_back_references : Proc(IObjectWithBackReferences*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IObjectWithBackReferences, lpVtbl : IObjectWithBackReferencesVtbl* do
    GUID = LibC::GUID.new(0x321a6a6a_u32, 0xd61f_u16, 0x4bf3_u16, StaticArray[0x97_u8, 0xae_u8, 0x14_u8, 0xbe_u8, 0x29_u8, 0x86_u8, 0xbb_u8, 0x36_u8])
    def query_interface(this : IObjectWithBackReferences*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IObjectWithBackReferences*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IObjectWithBackReferences*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def remove_back_references(this : IObjectWithBackReferences*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_back_references.call(this)
    end

  end

  @[Extern]
  record ICategoryProviderVtbl,
    query_interface : Proc(ICategoryProvider*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICategoryProvider*, UInt32),
    release : Proc(ICategoryProvider*, UInt32),
    can_categorize_on_scid : Proc(ICategoryProvider*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::HRESULT),
    get_default_category : Proc(ICategoryProvider*, LibC::GUID*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::HRESULT),
    get_category_for_scid : Proc(ICategoryProvider*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    enum_categories : Proc(ICategoryProvider*, Void**, Win32cr::Foundation::HRESULT),
    get_category_name : Proc(ICategoryProvider*, LibC::GUID*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    create_category : Proc(ICategoryProvider*, LibC::GUID*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICategoryProvider, lpVtbl : ICategoryProviderVtbl* do
    GUID = LibC::GUID.new(0x9af64809_u32, 0x5864_u16, 0x4c26_u16, StaticArray[0xa7_u8, 0x20_u8, 0xc1_u8, 0xf7_u8, 0x8c_u8, 0x8_u8, 0x6e_u8, 0xe3_u8])
    def query_interface(this : ICategoryProvider*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICategoryProvider*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICategoryProvider*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def can_categorize_on_scid(this : ICategoryProvider*, pscid : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.can_categorize_on_scid.call(this, pscid)
    end
    def get_default_category(this : ICategoryProvider*, pguid : LibC::GUID*, pscid : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_category.call(this, pguid, pscid)
    end
    def get_category_for_scid(this : ICategoryProvider*, pscid : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, pguid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_category_for_scid.call(this, pscid, pguid)
    end
    def enum_categories(this : ICategoryProvider*, penum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_categories.call(this, penum)
    end
    def get_category_name(this : ICategoryProvider*, pguid : LibC::GUID*, pszName : UInt16*, cch : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_category_name.call(this, pguid, pszName, cch)
    end
    def create_category(this : ICategoryProvider*, pguid : LibC::GUID*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_category.call(this, pguid, riid, ppv)
    end

  end

  @[Extern]
  record ICategorizerVtbl,
    query_interface : Proc(ICategorizer*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICategorizer*, UInt32),
    release : Proc(ICategorizer*, UInt32),
    get_description : Proc(ICategorizer*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_category : Proc(ICategorizer*, UInt32, Win32cr::UI::Shell::Common::ITEMIDLIST**, UInt32*, Win32cr::Foundation::HRESULT),
    get_category_info : Proc(ICategorizer*, UInt32, Win32cr::UI::Shell::CATEGORY_INFO*, Win32cr::Foundation::HRESULT),
    compare_category : Proc(ICategorizer*, Win32cr::UI::Shell::CATSORT_FLAGS, UInt32, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICategorizer, lpVtbl : ICategorizerVtbl* do
    GUID = LibC::GUID.new(0xa3b14589_u32, 0x9174_u16, 0x49a8_u16, StaticArray[0x89_u8, 0xa3_u8, 0x6_u8, 0xa1_u8, 0xae_u8, 0x2b_u8, 0x9b_u8, 0xa7_u8])
    def query_interface(this : ICategorizer*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICategorizer*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICategorizer*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_description(this : ICategorizer*, pszDesc : UInt16*, cch : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_description.call(this, pszDesc, cch)
    end
    def get_category(this : ICategorizer*, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, rgCategoryIds : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_category.call(this, cidl, apidl, rgCategoryIds)
    end
    def get_category_info(this : ICategorizer*, dwCategoryId : UInt32, pci : Win32cr::UI::Shell::CATEGORY_INFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_category_info.call(this, dwCategoryId, pci)
    end
    def compare_category(this : ICategorizer*, csfFlags : Win32cr::UI::Shell::CATSORT_FLAGS, dwCategoryId1 : UInt32, dwCategoryId2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compare_category.call(this, csfFlags, dwCategoryId1, dwCategoryId2)
    end

  end

  @[Extern]
  record IDropTargetHelperVtbl,
    query_interface : Proc(IDropTargetHelper*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDropTargetHelper*, UInt32),
    release : Proc(IDropTargetHelper*, UInt32),
    drag_enter : Proc(IDropTargetHelper*, Win32cr::Foundation::HWND, Void*, Win32cr::Foundation::POINT*, UInt32, Win32cr::Foundation::HRESULT),
    drag_leave : Proc(IDropTargetHelper*, Win32cr::Foundation::HRESULT),
    drag_over : Proc(IDropTargetHelper*, Win32cr::Foundation::POINT*, UInt32, Win32cr::Foundation::HRESULT),
    drop : Proc(IDropTargetHelper*, Void*, Win32cr::Foundation::POINT*, UInt32, Win32cr::Foundation::HRESULT),
    show : Proc(IDropTargetHelper*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDropTargetHelper, lpVtbl : IDropTargetHelperVtbl* do
    GUID = LibC::GUID.new(0x4657278b_u32, 0x411b_u16, 0x11d2_u16, StaticArray[0x83_u8, 0x9a_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xd0_u8])
    def query_interface(this : IDropTargetHelper*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDropTargetHelper*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDropTargetHelper*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def drag_enter(this : IDropTargetHelper*, hwndTarget : Win32cr::Foundation::HWND, pDataObject : Void*, ppt : Win32cr::Foundation::POINT*, dwEffect : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drag_enter.call(this, hwndTarget, pDataObject, ppt, dwEffect)
    end
    def drag_leave(this : IDropTargetHelper*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drag_leave.call(this)
    end
    def drag_over(this : IDropTargetHelper*, ppt : Win32cr::Foundation::POINT*, dwEffect : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drag_over.call(this, ppt, dwEffect)
    end
    def drop(this : IDropTargetHelper*, pDataObject : Void*, ppt : Win32cr::Foundation::POINT*, dwEffect : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drop.call(this, pDataObject, ppt, dwEffect)
    end
    def show(this : IDropTargetHelper*, fShow : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show.call(this, fShow)
    end

  end

  @[Extern]
  record IDragSourceHelperVtbl,
    query_interface : Proc(IDragSourceHelper*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDragSourceHelper*, UInt32),
    release : Proc(IDragSourceHelper*, UInt32),
    initialize_from_bitmap : Proc(IDragSourceHelper*, Win32cr::UI::Shell::SHDRAGIMAGE*, Void*, Win32cr::Foundation::HRESULT),
    initialize_from_window : Proc(IDragSourceHelper*, Win32cr::Foundation::HWND, Win32cr::Foundation::POINT*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDragSourceHelper, lpVtbl : IDragSourceHelperVtbl* do
    GUID = LibC::GUID.new(0xde5bf786_u32, 0x477a_u16, 0x11d2_u16, StaticArray[0x83_u8, 0x9d_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xd0_u8])
    def query_interface(this : IDragSourceHelper*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDragSourceHelper*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDragSourceHelper*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize_from_bitmap(this : IDragSourceHelper*, pshdi : Win32cr::UI::Shell::SHDRAGIMAGE*, pDataObject : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_from_bitmap.call(this, pshdi, pDataObject)
    end
    def initialize_from_window(this : IDragSourceHelper*, hwnd : Win32cr::Foundation::HWND, ppt : Win32cr::Foundation::POINT*, pDataObject : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_from_window.call(this, hwnd, ppt, pDataObject)
    end

  end

  @[Extern]
  record IShellLinkAVtbl,
    query_interface : Proc(IShellLinkA*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellLinkA*, UInt32),
    release : Proc(IShellLinkA*, UInt32),
    get_path : Proc(IShellLinkA*, UInt8*, Int32, Win32cr::Storage::FileSystem::WIN32_FIND_DATAA*, UInt32, Win32cr::Foundation::HRESULT),
    get_id_list : Proc(IShellLinkA*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    set_id_list : Proc(IShellLinkA*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    get_description : Proc(IShellLinkA*, UInt8*, Int32, Win32cr::Foundation::HRESULT),
    set_description : Proc(IShellLinkA*, Win32cr::Foundation::PSTR, Win32cr::Foundation::HRESULT),
    get_working_directory : Proc(IShellLinkA*, UInt8*, Int32, Win32cr::Foundation::HRESULT),
    set_working_directory : Proc(IShellLinkA*, Win32cr::Foundation::PSTR, Win32cr::Foundation::HRESULT),
    get_arguments : Proc(IShellLinkA*, UInt8*, Int32, Win32cr::Foundation::HRESULT),
    set_arguments : Proc(IShellLinkA*, Win32cr::Foundation::PSTR, Win32cr::Foundation::HRESULT),
    get_hotkey : Proc(IShellLinkA*, UInt16*, Win32cr::Foundation::HRESULT),
    set_hotkey : Proc(IShellLinkA*, UInt16, Win32cr::Foundation::HRESULT),
    get_show_cmd : Proc(IShellLinkA*, Int32*, Win32cr::Foundation::HRESULT),
    set_show_cmd : Proc(IShellLinkA*, Int32, Win32cr::Foundation::HRESULT),
    get_icon_location : Proc(IShellLinkA*, UInt8*, Int32, Int32*, Win32cr::Foundation::HRESULT),
    set_icon_location : Proc(IShellLinkA*, Win32cr::Foundation::PSTR, Int32, Win32cr::Foundation::HRESULT),
    set_relative_path : Proc(IShellLinkA*, Win32cr::Foundation::PSTR, UInt32, Win32cr::Foundation::HRESULT),
    resolve : Proc(IShellLinkA*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    set_path : Proc(IShellLinkA*, Win32cr::Foundation::PSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellLinkA, lpVtbl : IShellLinkAVtbl* do
    GUID = LibC::GUID.new(0x214ee_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IShellLinkA*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellLinkA*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellLinkA*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_path(this : IShellLinkA*, pszFile : UInt8*, cch : Int32, pfd : Win32cr::Storage::FileSystem::WIN32_FIND_DATAA*, fFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_path.call(this, pszFile, cch, pfd, fFlags)
    end
    def get_id_list(this : IShellLinkA*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_id_list.call(this, ppidl)
    end
    def set_id_list(this : IShellLinkA*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_id_list.call(this, pidl)
    end
    def get_description(this : IShellLinkA*, pszName : UInt8*, cch : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_description.call(this, pszName, cch)
    end
    def set_description(this : IShellLinkA*, pszName : Win32cr::Foundation::PSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_description.call(this, pszName)
    end
    def get_working_directory(this : IShellLinkA*, pszDir : UInt8*, cch : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_working_directory.call(this, pszDir, cch)
    end
    def set_working_directory(this : IShellLinkA*, pszDir : Win32cr::Foundation::PSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_working_directory.call(this, pszDir)
    end
    def get_arguments(this : IShellLinkA*, pszArgs : UInt8*, cch : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_arguments.call(this, pszArgs, cch)
    end
    def set_arguments(this : IShellLinkA*, pszArgs : Win32cr::Foundation::PSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_arguments.call(this, pszArgs)
    end
    def get_hotkey(this : IShellLinkA*, pwHotkey : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_hotkey.call(this, pwHotkey)
    end
    def set_hotkey(this : IShellLinkA*, wHotkey : UInt16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_hotkey.call(this, wHotkey)
    end
    def get_show_cmd(this : IShellLinkA*, piShowCmd : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_show_cmd.call(this, piShowCmd)
    end
    def set_show_cmd(this : IShellLinkA*, iShowCmd : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_show_cmd.call(this, iShowCmd)
    end
    def get_icon_location(this : IShellLinkA*, pszIconPath : UInt8*, cch : Int32, piIcon : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_icon_location.call(this, pszIconPath, cch, piIcon)
    end
    def set_icon_location(this : IShellLinkA*, pszIconPath : Win32cr::Foundation::PSTR, iIcon : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_icon_location.call(this, pszIconPath, iIcon)
    end
    def set_relative_path(this : IShellLinkA*, pszPathRel : Win32cr::Foundation::PSTR, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_relative_path.call(this, pszPathRel, dwReserved)
    end
    def resolve(this : IShellLinkA*, hwnd : Win32cr::Foundation::HWND, fFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resolve.call(this, hwnd, fFlags)
    end
    def set_path(this : IShellLinkA*, pszFile : Win32cr::Foundation::PSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_path.call(this, pszFile)
    end

  end

  @[Extern]
  record IShellLinkWVtbl,
    query_interface : Proc(IShellLinkW*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellLinkW*, UInt32),
    release : Proc(IShellLinkW*, UInt32),
    get_path : Proc(IShellLinkW*, UInt16*, Int32, Win32cr::Storage::FileSystem::WIN32_FIND_DATAW*, UInt32, Win32cr::Foundation::HRESULT),
    get_id_list : Proc(IShellLinkW*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    set_id_list : Proc(IShellLinkW*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    get_description : Proc(IShellLinkW*, UInt16*, Int32, Win32cr::Foundation::HRESULT),
    set_description : Proc(IShellLinkW*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_working_directory : Proc(IShellLinkW*, UInt16*, Int32, Win32cr::Foundation::HRESULT),
    set_working_directory : Proc(IShellLinkW*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_arguments : Proc(IShellLinkW*, UInt16*, Int32, Win32cr::Foundation::HRESULT),
    set_arguments : Proc(IShellLinkW*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_hotkey : Proc(IShellLinkW*, UInt16*, Win32cr::Foundation::HRESULT),
    set_hotkey : Proc(IShellLinkW*, UInt16, Win32cr::Foundation::HRESULT),
    get_show_cmd : Proc(IShellLinkW*, Int32*, Win32cr::Foundation::HRESULT),
    set_show_cmd : Proc(IShellLinkW*, Int32, Win32cr::Foundation::HRESULT),
    get_icon_location : Proc(IShellLinkW*, UInt16*, Int32, Int32*, Win32cr::Foundation::HRESULT),
    set_icon_location : Proc(IShellLinkW*, Win32cr::Foundation::PWSTR, Int32, Win32cr::Foundation::HRESULT),
    set_relative_path : Proc(IShellLinkW*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    resolve : Proc(IShellLinkW*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    set_path : Proc(IShellLinkW*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellLinkW, lpVtbl : IShellLinkWVtbl* do
    GUID = LibC::GUID.new(0x214f9_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IShellLinkW*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellLinkW*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellLinkW*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_path(this : IShellLinkW*, pszFile : UInt16*, cch : Int32, pfd : Win32cr::Storage::FileSystem::WIN32_FIND_DATAW*, fFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_path.call(this, pszFile, cch, pfd, fFlags)
    end
    def get_id_list(this : IShellLinkW*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_id_list.call(this, ppidl)
    end
    def set_id_list(this : IShellLinkW*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_id_list.call(this, pidl)
    end
    def get_description(this : IShellLinkW*, pszName : UInt16*, cch : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_description.call(this, pszName, cch)
    end
    def set_description(this : IShellLinkW*, pszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_description.call(this, pszName)
    end
    def get_working_directory(this : IShellLinkW*, pszDir : UInt16*, cch : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_working_directory.call(this, pszDir, cch)
    end
    def set_working_directory(this : IShellLinkW*, pszDir : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_working_directory.call(this, pszDir)
    end
    def get_arguments(this : IShellLinkW*, pszArgs : UInt16*, cch : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_arguments.call(this, pszArgs, cch)
    end
    def set_arguments(this : IShellLinkW*, pszArgs : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_arguments.call(this, pszArgs)
    end
    def get_hotkey(this : IShellLinkW*, pwHotkey : UInt16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_hotkey.call(this, pwHotkey)
    end
    def set_hotkey(this : IShellLinkW*, wHotkey : UInt16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_hotkey.call(this, wHotkey)
    end
    def get_show_cmd(this : IShellLinkW*, piShowCmd : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_show_cmd.call(this, piShowCmd)
    end
    def set_show_cmd(this : IShellLinkW*, iShowCmd : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_show_cmd.call(this, iShowCmd)
    end
    def get_icon_location(this : IShellLinkW*, pszIconPath : UInt16*, cch : Int32, piIcon : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_icon_location.call(this, pszIconPath, cch, piIcon)
    end
    def set_icon_location(this : IShellLinkW*, pszIconPath : Win32cr::Foundation::PWSTR, iIcon : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_icon_location.call(this, pszIconPath, iIcon)
    end
    def set_relative_path(this : IShellLinkW*, pszPathRel : Win32cr::Foundation::PWSTR, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_relative_path.call(this, pszPathRel, dwReserved)
    end
    def resolve(this : IShellLinkW*, hwnd : Win32cr::Foundation::HWND, fFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resolve.call(this, hwnd, fFlags)
    end
    def set_path(this : IShellLinkW*, pszFile : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_path.call(this, pszFile)
    end

  end

  @[Extern]
  record IShellLinkDataListVtbl,
    query_interface : Proc(IShellLinkDataList*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellLinkDataList*, UInt32),
    release : Proc(IShellLinkDataList*, UInt32),
    add_data_block : Proc(IShellLinkDataList*, Void*, Win32cr::Foundation::HRESULT),
    copy_data_block : Proc(IShellLinkDataList*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    remove_data_block : Proc(IShellLinkDataList*, UInt32, Win32cr::Foundation::HRESULT),
    get_flags : Proc(IShellLinkDataList*, UInt32*, Win32cr::Foundation::HRESULT),
    set_flags : Proc(IShellLinkDataList*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellLinkDataList, lpVtbl : IShellLinkDataListVtbl* do
    GUID = LibC::GUID.new(0x45e2b4ae_u32, 0xb1c3_u16, 0x11d0_u16, StaticArray[0xb9_u8, 0x2f_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x3_u8, 0x12_u8, 0xe1_u8])
    def query_interface(this : IShellLinkDataList*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellLinkDataList*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellLinkDataList*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_data_block(this : IShellLinkDataList*, pDataBlock : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_data_block.call(this, pDataBlock)
    end
    def copy_data_block(this : IShellLinkDataList*, dwSig : UInt32, ppDataBlock : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_data_block.call(this, dwSig, ppDataBlock)
    end
    def remove_data_block(this : IShellLinkDataList*, dwSig : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_data_block.call(this, dwSig)
    end
    def get_flags(this : IShellLinkDataList*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_flags.call(this, pdwFlags)
    end
    def set_flags(this : IShellLinkDataList*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flags.call(this, dwFlags)
    end

  end

  @[Extern]
  record IResolveShellLinkVtbl,
    query_interface : Proc(IResolveShellLink*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IResolveShellLink*, UInt32),
    release : Proc(IResolveShellLink*, UInt32),
    resolve_shell_link : Proc(IResolveShellLink*, Void*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IResolveShellLink, lpVtbl : IResolveShellLinkVtbl* do
    GUID = LibC::GUID.new(0x5cd52983_u32, 0x9449_u16, 0x11d2_u16, StaticArray[0x96_u8, 0x3a_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x79_u8, 0xad_u8, 0xf0_u8])
    def query_interface(this : IResolveShellLink*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IResolveShellLink*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IResolveShellLink*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def resolve_shell_link(this : IResolveShellLink*, punkLink : Void*, hwnd : Win32cr::Foundation::HWND, fFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resolve_shell_link.call(this, punkLink, hwnd, fFlags)
    end

  end

  @[Extern]
  record IActionProgressDialogVtbl,
    query_interface : Proc(IActionProgressDialog*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IActionProgressDialog*, UInt32),
    release : Proc(IActionProgressDialog*, UInt32),
    initialize__ : Proc(IActionProgressDialog*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    stop : Proc(IActionProgressDialog*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IActionProgressDialog, lpVtbl : IActionProgressDialogVtbl* do
    GUID = LibC::GUID.new(0x49ff1172_u32, 0xeadc_u16, 0x446d_u16, StaticArray[0x92_u8, 0x85_u8, 0x15_u8, 0x64_u8, 0x53_u8, 0xa6_u8, 0x43_u8, 0x1c_u8])
    def query_interface(this : IActionProgressDialog*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IActionProgressDialog*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IActionProgressDialog*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IActionProgressDialog*, flags : UInt32, pszTitle : Win32cr::Foundation::PWSTR, pszCancel : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, flags, pszTitle, pszCancel)
    end
    def stop(this : IActionProgressDialog*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop.call(this)
    end

  end

  @[Extern]
  record IActionProgressVtbl,
    query_interface : Proc(IActionProgress*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IActionProgress*, UInt32),
    release : Proc(IActionProgress*, UInt32),
    begin__ : Proc(IActionProgress*, Win32cr::UI::Shell::SPACTION, UInt32, Win32cr::Foundation::HRESULT),
    update_progress : Proc(IActionProgress*, UInt64, UInt64, Win32cr::Foundation::HRESULT),
    update_text : Proc(IActionProgress*, Win32cr::UI::Shell::SPTEXT, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    query_cancel : Proc(IActionProgress*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    reset_cancel : Proc(IActionProgress*, Win32cr::Foundation::HRESULT),
    end__ : Proc(IActionProgress*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IActionProgress, lpVtbl : IActionProgressVtbl* do
    GUID = LibC::GUID.new(0x49ff1173_u32, 0xeadc_u16, 0x446d_u16, StaticArray[0x92_u8, 0x85_u8, 0x15_u8, 0x64_u8, 0x53_u8, 0xa6_u8, 0x43_u8, 0x1c_u8])
    def query_interface(this : IActionProgress*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IActionProgress*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IActionProgress*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def begin__(this : IActionProgress*, action : Win32cr::UI::Shell::SPACTION, flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.begin__.call(this, action, flags)
    end
    def update_progress(this : IActionProgress*, ulCompleted : UInt64, ulTotal : UInt64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_progress.call(this, ulCompleted, ulTotal)
    end
    def update_text(this : IActionProgress*, sptext : Win32cr::UI::Shell::SPTEXT, pszText : Win32cr::Foundation::PWSTR, fMayCompact : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_text.call(this, sptext, pszText, fMayCompact)
    end
    def query_cancel(this : IActionProgress*, pfCancelled : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_cancel.call(this, pfCancelled)
    end
    def reset_cancel(this : IActionProgress*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_cancel.call(this)
    end
    def end__(this : IActionProgress*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.end__.call(this)
    end

  end

  @[Extern]
  record IShellExtInitVtbl,
    query_interface : Proc(IShellExtInit*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellExtInit*, UInt32),
    release : Proc(IShellExtInit*, UInt32),
    initialize__ : Proc(IShellExtInit*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Void*, Win32cr::System::Registry::HKEY, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellExtInit, lpVtbl : IShellExtInitVtbl* do
    GUID = LibC::GUID.new(0x214e8_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IShellExtInit*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellExtInit*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellExtInit*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IShellExtInit*, pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, pdtobj : Void*, hkeyProgID : Win32cr::System::Registry::HKEY) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, pidlFolder, pdtobj, hkeyProgID)
    end

  end

  @[Extern]
  record IShellPropSheetExtVtbl,
    query_interface : Proc(IShellPropSheetExt*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellPropSheetExt*, UInt32),
    release : Proc(IShellPropSheetExt*, UInt32),
    add_pages : Proc(IShellPropSheetExt*, Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT),
    replace_page : Proc(IShellPropSheetExt*, UInt32, Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellPropSheetExt, lpVtbl : IShellPropSheetExtVtbl* do
    GUID = LibC::GUID.new(0x214e9_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IShellPropSheetExt*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellPropSheetExt*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellPropSheetExt*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_pages(this : IShellPropSheetExt*, pfnAddPage : Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_pages.call(this, pfnAddPage, lParam)
    end
    def replace_page(this : IShellPropSheetExt*, uPageID : UInt32, pfnReplaceWith : Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.replace_page.call(this, uPageID, pfnReplaceWith, lParam)
    end

  end

  @[Extern]
  record IRemoteComputerVtbl,
    query_interface : Proc(IRemoteComputer*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IRemoteComputer*, UInt32),
    release : Proc(IRemoteComputer*, UInt32),
    initialize__ : Proc(IRemoteComputer*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IRemoteComputer, lpVtbl : IRemoteComputerVtbl* do
    GUID = LibC::GUID.new(0x214fe_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IRemoteComputer*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IRemoteComputer*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IRemoteComputer*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IRemoteComputer*, pszMachine : Win32cr::Foundation::PWSTR, bEnumerating : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, pszMachine, bEnumerating)
    end

  end

  @[Extern]
  record IQueryContinueVtbl,
    query_interface : Proc(IQueryContinue*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IQueryContinue*, UInt32),
    release : Proc(IQueryContinue*, UInt32),
    query_continue : Proc(IQueryContinue*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IQueryContinue, lpVtbl : IQueryContinueVtbl* do
    GUID = LibC::GUID.new(0x7307055c_u32, 0xb24a_u16, 0x486b_u16, StaticArray[0x9f_u8, 0x25_u8, 0x16_u8, 0x3e_u8, 0x59_u8, 0x7a_u8, 0x28_u8, 0xa9_u8])
    def query_interface(this : IQueryContinue*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IQueryContinue*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IQueryContinue*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def query_continue(this : IQueryContinue*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_continue.call(this)
    end

  end

  @[Extern]
  record IObjectWithCancelEventVtbl,
    query_interface : Proc(IObjectWithCancelEvent*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IObjectWithCancelEvent*, UInt32),
    release : Proc(IObjectWithCancelEvent*, UInt32),
    get_cancel_event : Proc(IObjectWithCancelEvent*, Win32cr::Foundation::HANDLE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IObjectWithCancelEvent, lpVtbl : IObjectWithCancelEventVtbl* do
    GUID = LibC::GUID.new(0xf279b885_u32, 0xae9_u16, 0x4b85_u16, StaticArray[0xac_u8, 0x6_u8, 0xdd_u8, 0xec_u8, 0xf9_u8, 0x40_u8, 0x89_u8, 0x41_u8])
    def query_interface(this : IObjectWithCancelEvent*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IObjectWithCancelEvent*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IObjectWithCancelEvent*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_cancel_event(this : IObjectWithCancelEvent*, phEvent : Win32cr::Foundation::HANDLE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cancel_event.call(this, phEvent)
    end

  end

  @[Extern]
  record IUserNotificationVtbl,
    query_interface : Proc(IUserNotification*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IUserNotification*, UInt32),
    release : Proc(IUserNotification*, UInt32),
    set_balloon_info : Proc(IUserNotification*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    set_balloon_retry : Proc(IUserNotification*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    set_icon_info : Proc(IUserNotification*, Win32cr::UI::WindowsAndMessaging::HICON, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    show : Proc(IUserNotification*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    play_sound : Proc(IUserNotification*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IUserNotification, lpVtbl : IUserNotificationVtbl* do
    GUID = LibC::GUID.new(0xba9711ba_u32, 0x5893_u16, 0x4787_u16, StaticArray[0xa7_u8, 0xe1_u8, 0x41_u8, 0x27_u8, 0x71_u8, 0x51_u8, 0x55_u8, 0xb_u8])
    def query_interface(this : IUserNotification*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IUserNotification*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IUserNotification*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_balloon_info(this : IUserNotification*, pszTitle : Win32cr::Foundation::PWSTR, pszText : Win32cr::Foundation::PWSTR, dwInfoFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_balloon_info.call(this, pszTitle, pszText, dwInfoFlags)
    end
    def set_balloon_retry(this : IUserNotification*, dwShowTime : UInt32, dwInterval : UInt32, cRetryCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_balloon_retry.call(this, dwShowTime, dwInterval, cRetryCount)
    end
    def set_icon_info(this : IUserNotification*, hIcon : Win32cr::UI::WindowsAndMessaging::HICON, pszToolTip : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_icon_info.call(this, hIcon, pszToolTip)
    end
    def show(this : IUserNotification*, pqc : Void*, dwContinuePollInterval : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show.call(this, pqc, dwContinuePollInterval)
    end
    def play_sound(this : IUserNotification*, pszSoundName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.play_sound.call(this, pszSoundName)
    end

  end

  @[Extern]
  record IItemNameLimitsVtbl,
    query_interface : Proc(IItemNameLimits*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IItemNameLimits*, UInt32),
    release : Proc(IItemNameLimits*, UInt32),
    get_valid_characters : Proc(IItemNameLimits*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_max_length : Proc(IItemNameLimits*, Win32cr::Foundation::PWSTR, Int32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IItemNameLimits, lpVtbl : IItemNameLimitsVtbl* do
    GUID = LibC::GUID.new(0x1df0d7f1_u32, 0xb267_u16, 0x4d28_u16, StaticArray[0x8b_u8, 0x10_u8, 0x12_u8, 0xe2_u8, 0x32_u8, 0x2_u8, 0xa5_u8, 0xc4_u8])
    def query_interface(this : IItemNameLimits*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IItemNameLimits*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IItemNameLimits*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_valid_characters(this : IItemNameLimits*, ppwszValidChars : Win32cr::Foundation::PWSTR*, ppwszInvalidChars : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_valid_characters.call(this, ppwszValidChars, ppwszInvalidChars)
    end
    def get_max_length(this : IItemNameLimits*, pszName : Win32cr::Foundation::PWSTR, piMaxNameLen : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_max_length.call(this, pszName, piMaxNameLen)
    end

  end

  @[Extern]
  record ISearchFolderItemFactoryVtbl,
    query_interface : Proc(ISearchFolderItemFactory*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISearchFolderItemFactory*, UInt32),
    release : Proc(ISearchFolderItemFactory*, UInt32),
    set_display_name : Proc(ISearchFolderItemFactory*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_folder_type_id : Proc(ISearchFolderItemFactory*, LibC::GUID, Win32cr::Foundation::HRESULT),
    set_folder_logical_view_mode : Proc(ISearchFolderItemFactory*, Win32cr::UI::Shell::FOLDERLOGICALVIEWMODE, Win32cr::Foundation::HRESULT),
    set_icon_size : Proc(ISearchFolderItemFactory*, Int32, Win32cr::Foundation::HRESULT),
    set_visible_columns : Proc(ISearchFolderItemFactory*, UInt32, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::HRESULT),
    set_sort_columns : Proc(ISearchFolderItemFactory*, UInt32, Win32cr::UI::Shell::SORTCOLUMN*, Win32cr::Foundation::HRESULT),
    set_group_column : Proc(ISearchFolderItemFactory*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::HRESULT),
    set_stacks : Proc(ISearchFolderItemFactory*, UInt32, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::HRESULT),
    set_scope : Proc(ISearchFolderItemFactory*, Void*, Win32cr::Foundation::HRESULT),
    set_condition : Proc(ISearchFolderItemFactory*, Void*, Win32cr::Foundation::HRESULT),
    get_shell_item : Proc(ISearchFolderItemFactory*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_id_list : Proc(ISearchFolderItemFactory*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISearchFolderItemFactory, lpVtbl : ISearchFolderItemFactoryVtbl* do
    GUID = LibC::GUID.new(0xa0ffbc28_u32, 0x5482_u16, 0x4366_u16, StaticArray[0xbe_u8, 0x27_u8, 0x3e_u8, 0x81_u8, 0xe7_u8, 0x8e_u8, 0x6_u8, 0xc2_u8])
    def query_interface(this : ISearchFolderItemFactory*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISearchFolderItemFactory*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISearchFolderItemFactory*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_display_name(this : ISearchFolderItemFactory*, pszDisplayName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_display_name.call(this, pszDisplayName)
    end
    def set_folder_type_id(this : ISearchFolderItemFactory*, ftid : LibC::GUID) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_folder_type_id.call(this, ftid)
    end
    def set_folder_logical_view_mode(this : ISearchFolderItemFactory*, flvm : Win32cr::UI::Shell::FOLDERLOGICALVIEWMODE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_folder_logical_view_mode.call(this, flvm)
    end
    def set_icon_size(this : ISearchFolderItemFactory*, iIconSize : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_icon_size.call(this, iIconSize)
    end
    def set_visible_columns(this : ISearchFolderItemFactory*, cVisibleColumns : UInt32, rgKey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_visible_columns.call(this, cVisibleColumns, rgKey)
    end
    def set_sort_columns(this : ISearchFolderItemFactory*, cSortColumns : UInt32, rgSortColumns : Win32cr::UI::Shell::SORTCOLUMN*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_sort_columns.call(this, cSortColumns, rgSortColumns)
    end
    def set_group_column(this : ISearchFolderItemFactory*, keyGroup : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_group_column.call(this, keyGroup)
    end
    def set_stacks(this : ISearchFolderItemFactory*, cStackKeys : UInt32, rgStackKeys : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_stacks.call(this, cStackKeys, rgStackKeys)
    end
    def set_scope(this : ISearchFolderItemFactory*, psiaScope : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_scope.call(this, psiaScope)
    end
    def set_condition(this : ISearchFolderItemFactory*, pCondition : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_condition.call(this, pCondition)
    end
    def get_shell_item(this : ISearchFolderItemFactory*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_shell_item.call(this, riid, ppv)
    end
    def get_id_list(this : ISearchFolderItemFactory*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_id_list.call(this, ppidl)
    end

  end

  @[Extern]
  record IExtractImageVtbl,
    query_interface : Proc(IExtractImage*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExtractImage*, UInt32),
    release : Proc(IExtractImage*, UInt32),
    get_location : Proc(IExtractImage*, UInt16*, UInt32, UInt32*, Win32cr::Foundation::SIZE*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    extract : Proc(IExtractImage*, Win32cr::Graphics::Gdi::HBITMAP*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExtractImage, lpVtbl : IExtractImageVtbl* do
    GUID = LibC::GUID.new(0xbb2e617c_u32, 0x920_u16, 0x11d1_u16, StaticArray[0x9a_u8, 0xb_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc2_u8, 0xd6_u8, 0xc1_u8])
    def query_interface(this : IExtractImage*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExtractImage*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExtractImage*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_location(this : IExtractImage*, pszPathBuffer : UInt16*, cch : UInt32, pdwPriority : UInt32*, prgSize : Win32cr::Foundation::SIZE*, dwRecClrDepth : UInt32, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_location.call(this, pszPathBuffer, cch, pdwPriority, prgSize, dwRecClrDepth, pdwFlags)
    end
    def extract(this : IExtractImage*, phBmpThumbnail : Win32cr::Graphics::Gdi::HBITMAP*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.extract.call(this, phBmpThumbnail)
    end

  end

  @[Extern]
  record IExtractImage2Vtbl,
    query_interface : Proc(IExtractImage2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExtractImage2*, UInt32),
    release : Proc(IExtractImage2*, UInt32),
    get_location : Proc(IExtractImage2*, UInt16*, UInt32, UInt32*, Win32cr::Foundation::SIZE*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    extract : Proc(IExtractImage2*, Win32cr::Graphics::Gdi::HBITMAP*, Win32cr::Foundation::HRESULT),
    get_date_stamp : Proc(IExtractImage2*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExtractImage2, lpVtbl : IExtractImage2Vtbl* do
    GUID = LibC::GUID.new(0x953bb1ee_u32, 0x93b4_u16, 0x11d1_u16, StaticArray[0x98_u8, 0xa3_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x87_u8, 0xda_u8])
    def query_interface(this : IExtractImage2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExtractImage2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExtractImage2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_location(this : IExtractImage2*, pszPathBuffer : UInt16*, cch : UInt32, pdwPriority : UInt32*, prgSize : Win32cr::Foundation::SIZE*, dwRecClrDepth : UInt32, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_location.call(this, pszPathBuffer, cch, pdwPriority, prgSize, dwRecClrDepth, pdwFlags)
    end
    def extract(this : IExtractImage2*, phBmpThumbnail : Win32cr::Graphics::Gdi::HBITMAP*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.extract.call(this, phBmpThumbnail)
    end
    def get_date_stamp(this : IExtractImage2*, pDateStamp : Win32cr::Foundation::FILETIME*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_date_stamp.call(this, pDateStamp)
    end

  end

  @[Extern]
  record IThumbnailHandlerFactoryVtbl,
    query_interface : Proc(IThumbnailHandlerFactory*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IThumbnailHandlerFactory*, UInt32),
    release : Proc(IThumbnailHandlerFactory*, UInt32),
    get_thumbnail_handler : Proc(IThumbnailHandlerFactory*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Void*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IThumbnailHandlerFactory, lpVtbl : IThumbnailHandlerFactoryVtbl* do
    GUID = LibC::GUID.new(0xe35b4b2e_u32, 0xda_u16, 0x4bc1_u16, StaticArray[0x9f_u8, 0x13_u8, 0x38_u8, 0xbc_u8, 0x11_u8, 0xf5_u8, 0xd4_u8, 0x17_u8])
    def query_interface(this : IThumbnailHandlerFactory*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IThumbnailHandlerFactory*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IThumbnailHandlerFactory*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_thumbnail_handler(this : IThumbnailHandlerFactory*, pidlChild : Win32cr::UI::Shell::Common::ITEMIDLIST*, pbc : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_thumbnail_handler.call(this, pidlChild, pbc, riid, ppv)
    end

  end

  @[Extern]
  record IParentAndItemVtbl,
    query_interface : Proc(IParentAndItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IParentAndItem*, UInt32),
    release : Proc(IParentAndItem*, UInt32),
    set_parent_and_item : Proc(IParentAndItem*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    get_parent_and_item : Proc(IParentAndItem*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Void**, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IParentAndItem, lpVtbl : IParentAndItemVtbl* do
    GUID = LibC::GUID.new(0xb3a4b685_u32, 0xb685_u16, 0x4805_u16, StaticArray[0x99_u8, 0xd9_u8, 0x5d_u8, 0xea_u8, 0xd2_u8, 0x87_u8, 0x32_u8, 0x36_u8])
    def query_interface(this : IParentAndItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IParentAndItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IParentAndItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_parent_and_item(this : IParentAndItem*, pidlParent : Win32cr::UI::Shell::Common::ITEMIDLIST*, psf : Void*, pidlChild : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_parent_and_item.call(this, pidlParent, psf, pidlChild)
    end
    def get_parent_and_item(this : IParentAndItem*, ppidlParent : Win32cr::UI::Shell::Common::ITEMIDLIST**, ppsf : Void**, ppidlChild : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_parent_and_item.call(this, ppidlParent, ppsf, ppidlChild)
    end

  end

  @[Extern]
  record IDockingWindowVtbl,
    query_interface : Proc(IDockingWindow*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDockingWindow*, UInt32),
    release : Proc(IDockingWindow*, UInt32),
    get_window : Proc(IDockingWindow*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    context_sensitive_help : Proc(IDockingWindow*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    show_dw : Proc(IDockingWindow*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    close_dw : Proc(IDockingWindow*, UInt32, Win32cr::Foundation::HRESULT),
    resize_border_dw : Proc(IDockingWindow*, Win32cr::Foundation::RECT*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDockingWindow, lpVtbl : IDockingWindowVtbl* do
    GUID = LibC::GUID.new(0x12dd920_u32, 0x7b26_u16, 0x11d0_u16, StaticArray[0x8c_u8, 0xa9_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x2d_u8, 0xbf_u8, 0xe8_u8])
    def query_interface(this : IDockingWindow*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDockingWindow*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDockingWindow*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IDockingWindow*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, phwnd)
    end
    def context_sensitive_help(this : IDockingWindow*, fEnterMode : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.context_sensitive_help.call(this, fEnterMode)
    end
    def show_dw(this : IDockingWindow*, fShow : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_dw.call(this, fShow)
    end
    def close_dw(this : IDockingWindow*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.close_dw.call(this, dwReserved)
    end
    def resize_border_dw(this : IDockingWindow*, prcBorder : Win32cr::Foundation::RECT*, punkToolbarSite : Void*, fReserved : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resize_border_dw.call(this, prcBorder, punkToolbarSite, fReserved)
    end

  end

  @[Extern]
  record IDeskBandVtbl,
    query_interface : Proc(IDeskBand*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDeskBand*, UInt32),
    release : Proc(IDeskBand*, UInt32),
    get_window : Proc(IDeskBand*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    context_sensitive_help : Proc(IDeskBand*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    show_dw : Proc(IDeskBand*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    close_dw : Proc(IDeskBand*, UInt32, Win32cr::Foundation::HRESULT),
    resize_border_dw : Proc(IDeskBand*, Win32cr::Foundation::RECT*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_band_info : Proc(IDeskBand*, UInt32, UInt32, Win32cr::UI::Shell::DESKBANDINFO*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDeskBand, lpVtbl : IDeskBandVtbl* do
    GUID = LibC::GUID.new(0xeb0fe172_u32, 0x1a3a_u16, 0x11d0_u16, StaticArray[0x89_u8, 0xb3_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x90_u8, 0xac_u8])
    def query_interface(this : IDeskBand*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDeskBand*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDeskBand*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IDeskBand*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, phwnd)
    end
    def context_sensitive_help(this : IDeskBand*, fEnterMode : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.context_sensitive_help.call(this, fEnterMode)
    end
    def show_dw(this : IDeskBand*, fShow : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_dw.call(this, fShow)
    end
    def close_dw(this : IDeskBand*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.close_dw.call(this, dwReserved)
    end
    def resize_border_dw(this : IDeskBand*, prcBorder : Win32cr::Foundation::RECT*, punkToolbarSite : Void*, fReserved : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resize_border_dw.call(this, prcBorder, punkToolbarSite, fReserved)
    end
    def get_band_info(this : IDeskBand*, dwBandID : UInt32, dwViewMode : UInt32, pdbi : Win32cr::UI::Shell::DESKBANDINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_band_info.call(this, dwBandID, dwViewMode, pdbi)
    end

  end

  @[Extern]
  record IDeskBandInfoVtbl,
    query_interface : Proc(IDeskBandInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDeskBandInfo*, UInt32),
    release : Proc(IDeskBandInfo*, UInt32),
    get_default_band_width : Proc(IDeskBandInfo*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDeskBandInfo, lpVtbl : IDeskBandInfoVtbl* do
    GUID = LibC::GUID.new(0x77e425fc_u32, 0xcbf9_u16, 0x4307_u16, StaticArray[0xba_u8, 0x6a_u8, 0xbb_u8, 0x57_u8, 0x27_u8, 0x74_u8, 0x56_u8, 0x61_u8])
    def query_interface(this : IDeskBandInfo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDeskBandInfo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDeskBandInfo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_default_band_width(this : IDeskBandInfo*, dwBandID : UInt32, dwViewMode : UInt32, pnWidth : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_band_width.call(this, dwBandID, dwViewMode, pnWidth)
    end

  end

  @[Extern]
  record ITaskbarListVtbl,
    query_interface : Proc(ITaskbarList*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITaskbarList*, UInt32),
    release : Proc(ITaskbarList*, UInt32),
    hr_init : Proc(ITaskbarList*, Win32cr::Foundation::HRESULT),
    add_tab : Proc(ITaskbarList*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    delete_tab : Proc(ITaskbarList*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    activate_tab : Proc(ITaskbarList*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    set_active_alt : Proc(ITaskbarList*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITaskbarList, lpVtbl : ITaskbarListVtbl* do
    GUID = LibC::GUID.new(0x56fdf342_u32, 0xfd6d_u16, 0x11d0_u16, StaticArray[0x95_u8, 0x8a_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0xc9_u8, 0xa0_u8, 0x90_u8])
    def query_interface(this : ITaskbarList*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITaskbarList*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITaskbarList*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def hr_init(this : ITaskbarList*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hr_init.call(this)
    end
    def add_tab(this : ITaskbarList*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_tab.call(this, hwnd)
    end
    def delete_tab(this : ITaskbarList*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_tab.call(this, hwnd)
    end
    def activate_tab(this : ITaskbarList*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.activate_tab.call(this, hwnd)
    end
    def set_active_alt(this : ITaskbarList*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_active_alt.call(this, hwnd)
    end

  end

  @[Extern]
  record ITaskbarList2Vtbl,
    query_interface : Proc(ITaskbarList2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITaskbarList2*, UInt32),
    release : Proc(ITaskbarList2*, UInt32),
    hr_init : Proc(ITaskbarList2*, Win32cr::Foundation::HRESULT),
    add_tab : Proc(ITaskbarList2*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    delete_tab : Proc(ITaskbarList2*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    activate_tab : Proc(ITaskbarList2*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    set_active_alt : Proc(ITaskbarList2*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    mark_fullscreen_window : Proc(ITaskbarList2*, Win32cr::Foundation::HWND, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITaskbarList2, lpVtbl : ITaskbarList2Vtbl* do
    GUID = LibC::GUID.new(0x602d4995_u32, 0xb13a_u16, 0x429b_u16, StaticArray[0xa6_u8, 0x6e_u8, 0x19_u8, 0x35_u8, 0xe4_u8, 0x4f_u8, 0x43_u8, 0x17_u8])
    def query_interface(this : ITaskbarList2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITaskbarList2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITaskbarList2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def hr_init(this : ITaskbarList2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hr_init.call(this)
    end
    def add_tab(this : ITaskbarList2*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_tab.call(this, hwnd)
    end
    def delete_tab(this : ITaskbarList2*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_tab.call(this, hwnd)
    end
    def activate_tab(this : ITaskbarList2*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.activate_tab.call(this, hwnd)
    end
    def set_active_alt(this : ITaskbarList2*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_active_alt.call(this, hwnd)
    end
    def mark_fullscreen_window(this : ITaskbarList2*, hwnd : Win32cr::Foundation::HWND, fFullscreen : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.mark_fullscreen_window.call(this, hwnd, fFullscreen)
    end

  end

  @[Extern]
  record ITaskbarList3Vtbl,
    query_interface : Proc(ITaskbarList3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITaskbarList3*, UInt32),
    release : Proc(ITaskbarList3*, UInt32),
    hr_init : Proc(ITaskbarList3*, Win32cr::Foundation::HRESULT),
    add_tab : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    delete_tab : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    activate_tab : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    set_active_alt : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    mark_fullscreen_window : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_progress_value : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, UInt64, UInt64, Win32cr::Foundation::HRESULT),
    set_progress_state : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, Win32cr::UI::Shell::TBPFLAG, Win32cr::Foundation::HRESULT),
    register_tab : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    unregister_tab : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    set_tab_order : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    set_tab_active : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    thumb_bar_add_buttons : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, UInt32, Win32cr::UI::Shell::THUMBBUTTON*, Win32cr::Foundation::HRESULT),
    thumb_bar_update_buttons : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, UInt32, Win32cr::UI::Shell::THUMBBUTTON*, Win32cr::Foundation::HRESULT),
    thumb_bar_set_image_list : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, Win32cr::UI::Controls::HIMAGELIST, Win32cr::Foundation::HRESULT),
    set_overlay_icon : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, Win32cr::UI::WindowsAndMessaging::HICON, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_thumbnail_tooltip : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_thumbnail_clip : Proc(ITaskbarList3*, Win32cr::Foundation::HWND, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITaskbarList3, lpVtbl : ITaskbarList3Vtbl* do
    GUID = LibC::GUID.new(0xea1afb91_u32, 0x9e28_u16, 0x4b86_u16, StaticArray[0x90_u8, 0xe9_u8, 0x9e_u8, 0x9f_u8, 0x8a_u8, 0x5e_u8, 0xef_u8, 0xaf_u8])
    def query_interface(this : ITaskbarList3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITaskbarList3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITaskbarList3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def hr_init(this : ITaskbarList3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hr_init.call(this)
    end
    def add_tab(this : ITaskbarList3*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_tab.call(this, hwnd)
    end
    def delete_tab(this : ITaskbarList3*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_tab.call(this, hwnd)
    end
    def activate_tab(this : ITaskbarList3*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.activate_tab.call(this, hwnd)
    end
    def set_active_alt(this : ITaskbarList3*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_active_alt.call(this, hwnd)
    end
    def mark_fullscreen_window(this : ITaskbarList3*, hwnd : Win32cr::Foundation::HWND, fFullscreen : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.mark_fullscreen_window.call(this, hwnd, fFullscreen)
    end
    def set_progress_value(this : ITaskbarList3*, hwnd : Win32cr::Foundation::HWND, ullCompleted : UInt64, ullTotal : UInt64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_progress_value.call(this, hwnd, ullCompleted, ullTotal)
    end
    def set_progress_state(this : ITaskbarList3*, hwnd : Win32cr::Foundation::HWND, tbpFlags : Win32cr::UI::Shell::TBPFLAG) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_progress_state.call(this, hwnd, tbpFlags)
    end
    def register_tab(this : ITaskbarList3*, hwndTab : Win32cr::Foundation::HWND, hwndMDI : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_tab.call(this, hwndTab, hwndMDI)
    end
    def unregister_tab(this : ITaskbarList3*, hwndTab : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_tab.call(this, hwndTab)
    end
    def set_tab_order(this : ITaskbarList3*, hwndTab : Win32cr::Foundation::HWND, hwndInsertBefore : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_tab_order.call(this, hwndTab, hwndInsertBefore)
    end
    def set_tab_active(this : ITaskbarList3*, hwndTab : Win32cr::Foundation::HWND, hwndMDI : Win32cr::Foundation::HWND, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_tab_active.call(this, hwndTab, hwndMDI, dwReserved)
    end
    def thumb_bar_add_buttons(this : ITaskbarList3*, hwnd : Win32cr::Foundation::HWND, cButtons : UInt32, pButton : Win32cr::UI::Shell::THUMBBUTTON*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.thumb_bar_add_buttons.call(this, hwnd, cButtons, pButton)
    end
    def thumb_bar_update_buttons(this : ITaskbarList3*, hwnd : Win32cr::Foundation::HWND, cButtons : UInt32, pButton : Win32cr::UI::Shell::THUMBBUTTON*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.thumb_bar_update_buttons.call(this, hwnd, cButtons, pButton)
    end
    def thumb_bar_set_image_list(this : ITaskbarList3*, hwnd : Win32cr::Foundation::HWND, himl : Win32cr::UI::Controls::HIMAGELIST) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.thumb_bar_set_image_list.call(this, hwnd, himl)
    end
    def set_overlay_icon(this : ITaskbarList3*, hwnd : Win32cr::Foundation::HWND, hIcon : Win32cr::UI::WindowsAndMessaging::HICON, pszDescription : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_overlay_icon.call(this, hwnd, hIcon, pszDescription)
    end
    def set_thumbnail_tooltip(this : ITaskbarList3*, hwnd : Win32cr::Foundation::HWND, pszTip : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_thumbnail_tooltip.call(this, hwnd, pszTip)
    end
    def set_thumbnail_clip(this : ITaskbarList3*, hwnd : Win32cr::Foundation::HWND, prcClip : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_thumbnail_clip.call(this, hwnd, prcClip)
    end

  end

  @[Extern]
  record ITaskbarList4Vtbl,
    query_interface : Proc(ITaskbarList4*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITaskbarList4*, UInt32),
    release : Proc(ITaskbarList4*, UInt32),
    hr_init : Proc(ITaskbarList4*, Win32cr::Foundation::HRESULT),
    add_tab : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    delete_tab : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    activate_tab : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    set_active_alt : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    mark_fullscreen_window : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_progress_value : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, UInt64, UInt64, Win32cr::Foundation::HRESULT),
    set_progress_state : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, Win32cr::UI::Shell::TBPFLAG, Win32cr::Foundation::HRESULT),
    register_tab : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    unregister_tab : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    set_tab_order : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    set_tab_active : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    thumb_bar_add_buttons : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, UInt32, Win32cr::UI::Shell::THUMBBUTTON*, Win32cr::Foundation::HRESULT),
    thumb_bar_update_buttons : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, UInt32, Win32cr::UI::Shell::THUMBBUTTON*, Win32cr::Foundation::HRESULT),
    thumb_bar_set_image_list : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, Win32cr::UI::Controls::HIMAGELIST, Win32cr::Foundation::HRESULT),
    set_overlay_icon : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, Win32cr::UI::WindowsAndMessaging::HICON, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_thumbnail_tooltip : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_thumbnail_clip : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    set_tab_properties : Proc(ITaskbarList4*, Win32cr::Foundation::HWND, Win32cr::UI::Shell::STPFLAG, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITaskbarList4, lpVtbl : ITaskbarList4Vtbl* do
    GUID = LibC::GUID.new(0xc43dc798_u32, 0x95d1_u16, 0x4bea_u16, StaticArray[0x90_u8, 0x30_u8, 0xbb_u8, 0x99_u8, 0xe2_u8, 0x98_u8, 0x3a_u8, 0x1a_u8])
    def query_interface(this : ITaskbarList4*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITaskbarList4*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITaskbarList4*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def hr_init(this : ITaskbarList4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hr_init.call(this)
    end
    def add_tab(this : ITaskbarList4*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_tab.call(this, hwnd)
    end
    def delete_tab(this : ITaskbarList4*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_tab.call(this, hwnd)
    end
    def activate_tab(this : ITaskbarList4*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.activate_tab.call(this, hwnd)
    end
    def set_active_alt(this : ITaskbarList4*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_active_alt.call(this, hwnd)
    end
    def mark_fullscreen_window(this : ITaskbarList4*, hwnd : Win32cr::Foundation::HWND, fFullscreen : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.mark_fullscreen_window.call(this, hwnd, fFullscreen)
    end
    def set_progress_value(this : ITaskbarList4*, hwnd : Win32cr::Foundation::HWND, ullCompleted : UInt64, ullTotal : UInt64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_progress_value.call(this, hwnd, ullCompleted, ullTotal)
    end
    def set_progress_state(this : ITaskbarList4*, hwnd : Win32cr::Foundation::HWND, tbpFlags : Win32cr::UI::Shell::TBPFLAG) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_progress_state.call(this, hwnd, tbpFlags)
    end
    def register_tab(this : ITaskbarList4*, hwndTab : Win32cr::Foundation::HWND, hwndMDI : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_tab.call(this, hwndTab, hwndMDI)
    end
    def unregister_tab(this : ITaskbarList4*, hwndTab : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_tab.call(this, hwndTab)
    end
    def set_tab_order(this : ITaskbarList4*, hwndTab : Win32cr::Foundation::HWND, hwndInsertBefore : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_tab_order.call(this, hwndTab, hwndInsertBefore)
    end
    def set_tab_active(this : ITaskbarList4*, hwndTab : Win32cr::Foundation::HWND, hwndMDI : Win32cr::Foundation::HWND, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_tab_active.call(this, hwndTab, hwndMDI, dwReserved)
    end
    def thumb_bar_add_buttons(this : ITaskbarList4*, hwnd : Win32cr::Foundation::HWND, cButtons : UInt32, pButton : Win32cr::UI::Shell::THUMBBUTTON*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.thumb_bar_add_buttons.call(this, hwnd, cButtons, pButton)
    end
    def thumb_bar_update_buttons(this : ITaskbarList4*, hwnd : Win32cr::Foundation::HWND, cButtons : UInt32, pButton : Win32cr::UI::Shell::THUMBBUTTON*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.thumb_bar_update_buttons.call(this, hwnd, cButtons, pButton)
    end
    def thumb_bar_set_image_list(this : ITaskbarList4*, hwnd : Win32cr::Foundation::HWND, himl : Win32cr::UI::Controls::HIMAGELIST) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.thumb_bar_set_image_list.call(this, hwnd, himl)
    end
    def set_overlay_icon(this : ITaskbarList4*, hwnd : Win32cr::Foundation::HWND, hIcon : Win32cr::UI::WindowsAndMessaging::HICON, pszDescription : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_overlay_icon.call(this, hwnd, hIcon, pszDescription)
    end
    def set_thumbnail_tooltip(this : ITaskbarList4*, hwnd : Win32cr::Foundation::HWND, pszTip : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_thumbnail_tooltip.call(this, hwnd, pszTip)
    end
    def set_thumbnail_clip(this : ITaskbarList4*, hwnd : Win32cr::Foundation::HWND, prcClip : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_thumbnail_clip.call(this, hwnd, prcClip)
    end
    def set_tab_properties(this : ITaskbarList4*, hwndTab : Win32cr::Foundation::HWND, stpFlags : Win32cr::UI::Shell::STPFLAG) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_tab_properties.call(this, hwndTab, stpFlags)
    end

  end

  @[Extern]
  record IExplorerBrowserEventsVtbl,
    query_interface : Proc(IExplorerBrowserEvents*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExplorerBrowserEvents*, UInt32),
    release : Proc(IExplorerBrowserEvents*, UInt32),
    on_navigation_pending : Proc(IExplorerBrowserEvents*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    on_view_created : Proc(IExplorerBrowserEvents*, Void*, Win32cr::Foundation::HRESULT),
    on_navigation_complete : Proc(IExplorerBrowserEvents*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    on_navigation_failed : Proc(IExplorerBrowserEvents*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExplorerBrowserEvents, lpVtbl : IExplorerBrowserEventsVtbl* do
    GUID = LibC::GUID.new(0x361bbdc7_u32, 0xe6ee_u16, 0x4e13_u16, StaticArray[0xbe_u8, 0x58_u8, 0x58_u8, 0xe2_u8, 0x24_u8, 0xc_u8, 0x81_u8, 0xf_u8])
    def query_interface(this : IExplorerBrowserEvents*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExplorerBrowserEvents*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExplorerBrowserEvents*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_navigation_pending(this : IExplorerBrowserEvents*, pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_navigation_pending.call(this, pidlFolder)
    end
    def on_view_created(this : IExplorerBrowserEvents*, psv : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_view_created.call(this, psv)
    end
    def on_navigation_complete(this : IExplorerBrowserEvents*, pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_navigation_complete.call(this, pidlFolder)
    end
    def on_navigation_failed(this : IExplorerBrowserEvents*, pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_navigation_failed.call(this, pidlFolder)
    end

  end

  @[Extern]
  record IExplorerBrowserVtbl,
    query_interface : Proc(IExplorerBrowser*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExplorerBrowser*, UInt32),
    release : Proc(IExplorerBrowser*, UInt32),
    initialize__ : Proc(IExplorerBrowser*, Win32cr::Foundation::HWND, Win32cr::Foundation::RECT*, Win32cr::UI::Shell::FOLDERSETTINGS*, Win32cr::Foundation::HRESULT),
    destroy : Proc(IExplorerBrowser*, Win32cr::Foundation::HRESULT),
    set_rect : Proc(IExplorerBrowser*, LibC::IntPtrT*, Win32cr::Foundation::RECT, Win32cr::Foundation::HRESULT),
    set_property_bag : Proc(IExplorerBrowser*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_empty_text : Proc(IExplorerBrowser*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_folder_settings : Proc(IExplorerBrowser*, Win32cr::UI::Shell::FOLDERSETTINGS*, Win32cr::Foundation::HRESULT),
    advise : Proc(IExplorerBrowser*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    unadvise : Proc(IExplorerBrowser*, UInt32, Win32cr::Foundation::HRESULT),
    set_options : Proc(IExplorerBrowser*, Win32cr::UI::Shell::EXPLORER_BROWSER_OPTIONS, Win32cr::Foundation::HRESULT),
    get_options : Proc(IExplorerBrowser*, Win32cr::UI::Shell::EXPLORER_BROWSER_OPTIONS*, Win32cr::Foundation::HRESULT),
    browse_to_id_list : Proc(IExplorerBrowser*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::Foundation::HRESULT),
    browse_to_object : Proc(IExplorerBrowser*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    fill_from_object : Proc(IExplorerBrowser*, Void*, Win32cr::UI::Shell::EXPLORER_BROWSER_FILL_FLAGS, Win32cr::Foundation::HRESULT),
    remove_all : Proc(IExplorerBrowser*, Win32cr::Foundation::HRESULT),
    get_current_view : Proc(IExplorerBrowser*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExplorerBrowser, lpVtbl : IExplorerBrowserVtbl* do
    GUID = LibC::GUID.new(0xdfd3b6b5_u32, 0xc10c_u16, 0x4be9_u16, StaticArray[0x85_u8, 0xf6_u8, 0xa6_u8, 0x69_u8, 0x69_u8, 0xf4_u8, 0x2_u8, 0xf6_u8])
    def query_interface(this : IExplorerBrowser*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExplorerBrowser*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExplorerBrowser*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IExplorerBrowser*, hwndParent : Win32cr::Foundation::HWND, prc : Win32cr::Foundation::RECT*, pfs : Win32cr::UI::Shell::FOLDERSETTINGS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, hwndParent, prc, pfs)
    end
    def destroy(this : IExplorerBrowser*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.destroy.call(this)
    end
    def set_rect(this : IExplorerBrowser*, phdwp : LibC::IntPtrT*, rcBrowser : Win32cr::Foundation::RECT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_rect.call(this, phdwp, rcBrowser)
    end
    def set_property_bag(this : IExplorerBrowser*, pszPropertyBag : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_property_bag.call(this, pszPropertyBag)
    end
    def set_empty_text(this : IExplorerBrowser*, pszEmptyText : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_empty_text.call(this, pszEmptyText)
    end
    def set_folder_settings(this : IExplorerBrowser*, pfs : Win32cr::UI::Shell::FOLDERSETTINGS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_folder_settings.call(this, pfs)
    end
    def advise(this : IExplorerBrowser*, psbe : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, psbe, pdwCookie)
    end
    def unadvise(this : IExplorerBrowser*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unadvise.call(this, dwCookie)
    end
    def set_options(this : IExplorerBrowser*, dwFlag : Win32cr::UI::Shell::EXPLORER_BROWSER_OPTIONS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_options.call(this, dwFlag)
    end
    def get_options(this : IExplorerBrowser*, pdwFlag : Win32cr::UI::Shell::EXPLORER_BROWSER_OPTIONS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_options.call(this, pdwFlag)
    end
    def browse_to_id_list(this : IExplorerBrowser*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.browse_to_id_list.call(this, pidl, uFlags)
    end
    def browse_to_object(this : IExplorerBrowser*, punk : Void*, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.browse_to_object.call(this, punk, uFlags)
    end
    def fill_from_object(this : IExplorerBrowser*, punk : Void*, dwFlags : Win32cr::UI::Shell::EXPLORER_BROWSER_FILL_FLAGS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.fill_from_object.call(this, punk, dwFlags)
    end
    def remove_all(this : IExplorerBrowser*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_all.call(this)
    end
    def get_current_view(this : IExplorerBrowser*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_view.call(this, riid, ppv)
    end

  end

  @[Extern]
  record IEnumObjectsVtbl,
    query_interface : Proc(IEnumObjects*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumObjects*, UInt32),
    release : Proc(IEnumObjects*, UInt32),
    next__ : Proc(IEnumObjects*, UInt32, LibC::GUID*, Void**, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumObjects*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumObjects*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumObjects*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumObjects, lpVtbl : IEnumObjectsVtbl* do
    GUID = LibC::GUID.new(0x2c1c7e2e_u32, 0x2d0e_u16, 0x4059_u16, StaticArray[0x83_u8, 0x1e_u8, 0x1e_u8, 0x6f_u8, 0x82_u8, 0x33_u8, 0x5c_u8, 0x2e_u8])
    def query_interface(this : IEnumObjects*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumObjects*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumObjects*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumObjects*, celt : UInt32, riid : LibC::GUID*, rgelt : Void**, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, riid, rgelt, pceltFetched)
    end
    def skip(this : IEnumObjects*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumObjects*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumObjects*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppenum)
    end

  end

  @[Extern]
  record IOperationsProgressDialogVtbl,
    query_interface : Proc(IOperationsProgressDialog*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IOperationsProgressDialog*, UInt32),
    release : Proc(IOperationsProgressDialog*, UInt32),
    start_progress_dialog : Proc(IOperationsProgressDialog*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    stop_progress_dialog : Proc(IOperationsProgressDialog*, Win32cr::Foundation::HRESULT),
    set_operation : Proc(IOperationsProgressDialog*, Win32cr::UI::Shell::SPACTION, Win32cr::Foundation::HRESULT),
    set_mode : Proc(IOperationsProgressDialog*, UInt32, Win32cr::Foundation::HRESULT),
    update_progress : Proc(IOperationsProgressDialog*, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, Win32cr::Foundation::HRESULT),
    update_locations : Proc(IOperationsProgressDialog*, Void*, Void*, Void*, Win32cr::Foundation::HRESULT),
    reset_timer : Proc(IOperationsProgressDialog*, Win32cr::Foundation::HRESULT),
    pause_timer : Proc(IOperationsProgressDialog*, Win32cr::Foundation::HRESULT),
    resume_timer : Proc(IOperationsProgressDialog*, Win32cr::Foundation::HRESULT),
    get_milliseconds : Proc(IOperationsProgressDialog*, UInt64*, UInt64*, Win32cr::Foundation::HRESULT),
    get_operation_status : Proc(IOperationsProgressDialog*, Win32cr::UI::Shell::PropertiesSystem::PDOPSTATUS*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IOperationsProgressDialog, lpVtbl : IOperationsProgressDialogVtbl* do
    GUID = LibC::GUID.new(0xc9fb851_u32, 0xe5c9_u16, 0x43eb_u16, StaticArray[0xa3_u8, 0x70_u8, 0xf0_u8, 0x67_u8, 0x7b_u8, 0x13_u8, 0x87_u8, 0x4c_u8])
    def query_interface(this : IOperationsProgressDialog*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IOperationsProgressDialog*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IOperationsProgressDialog*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def start_progress_dialog(this : IOperationsProgressDialog*, hwndOwner : Win32cr::Foundation::HWND, flags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start_progress_dialog.call(this, hwndOwner, flags)
    end
    def stop_progress_dialog(this : IOperationsProgressDialog*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop_progress_dialog.call(this)
    end
    def set_operation(this : IOperationsProgressDialog*, action : Win32cr::UI::Shell::SPACTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_operation.call(this, action)
    end
    def set_mode(this : IOperationsProgressDialog*, mode : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_mode.call(this, mode)
    end
    def update_progress(this : IOperationsProgressDialog*, ullPointsCurrent : UInt64, ullPointsTotal : UInt64, ullSizeCurrent : UInt64, ullSizeTotal : UInt64, ullItemsCurrent : UInt64, ullItemsTotal : UInt64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_progress.call(this, ullPointsCurrent, ullPointsTotal, ullSizeCurrent, ullSizeTotal, ullItemsCurrent, ullItemsTotal)
    end
    def update_locations(this : IOperationsProgressDialog*, psiSource : Void*, psiTarget : Void*, psiItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_locations.call(this, psiSource, psiTarget, psiItem)
    end
    def reset_timer(this : IOperationsProgressDialog*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_timer.call(this)
    end
    def pause_timer(this : IOperationsProgressDialog*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.pause_timer.call(this)
    end
    def resume_timer(this : IOperationsProgressDialog*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resume_timer.call(this)
    end
    def get_milliseconds(this : IOperationsProgressDialog*, pullElapsed : UInt64*, pullRemaining : UInt64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_milliseconds.call(this, pullElapsed, pullRemaining)
    end
    def get_operation_status(this : IOperationsProgressDialog*, popstatus : Win32cr::UI::Shell::PropertiesSystem::PDOPSTATUS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_operation_status.call(this, popstatus)
    end

  end

  @[Extern]
  record IIOCancelInformationVtbl,
    query_interface : Proc(IIOCancelInformation*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IIOCancelInformation*, UInt32),
    release : Proc(IIOCancelInformation*, UInt32),
    set_cancel_information : Proc(IIOCancelInformation*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_cancel_information : Proc(IIOCancelInformation*, UInt32*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IIOCancelInformation, lpVtbl : IIOCancelInformationVtbl* do
    GUID = LibC::GUID.new(0xf5b0bf81_u32, 0x8cb5_u16, 0x4b1b_u16, StaticArray[0x94_u8, 0x49_u8, 0x1a_u8, 0x15_u8, 0x9e_u8, 0xc_u8, 0x73_u8, 0x3c_u8])
    def query_interface(this : IIOCancelInformation*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IIOCancelInformation*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IIOCancelInformation*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_cancel_information(this : IIOCancelInformation*, dwThreadID : UInt32, uMsgCancel : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cancel_information.call(this, dwThreadID, uMsgCancel)
    end
    def get_cancel_information(this : IIOCancelInformation*, pdwThreadID : UInt32*, puMsgCancel : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cancel_information.call(this, pdwThreadID, puMsgCancel)
    end

  end

  @[Extern]
  record IFileOperationVtbl,
    query_interface : Proc(IFileOperation*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFileOperation*, UInt32),
    release : Proc(IFileOperation*, UInt32),
    advise : Proc(IFileOperation*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    unadvise : Proc(IFileOperation*, UInt32, Win32cr::Foundation::HRESULT),
    set_operation_flags : Proc(IFileOperation*, UInt32, Win32cr::Foundation::HRESULT),
    set_progress_message : Proc(IFileOperation*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_progress_dialog : Proc(IFileOperation*, Void*, Win32cr::Foundation::HRESULT),
    set_properties : Proc(IFileOperation*, Void*, Win32cr::Foundation::HRESULT),
    set_owner_window : Proc(IFileOperation*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    apply_properties_to_item : Proc(IFileOperation*, Void*, Win32cr::Foundation::HRESULT),
    apply_properties_to_items : Proc(IFileOperation*, Void*, Win32cr::Foundation::HRESULT),
    rename_item : Proc(IFileOperation*, Void*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT),
    rename_items : Proc(IFileOperation*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    move_item : Proc(IFileOperation*, Void*, Void*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT),
    move_items : Proc(IFileOperation*, Void*, Void*, Win32cr::Foundation::HRESULT),
    copy_item : Proc(IFileOperation*, Void*, Void*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT),
    copy_items : Proc(IFileOperation*, Void*, Void*, Win32cr::Foundation::HRESULT),
    delete_item : Proc(IFileOperation*, Void*, Void*, Win32cr::Foundation::HRESULT),
    delete_items : Proc(IFileOperation*, Void*, Win32cr::Foundation::HRESULT),
    new_item : Proc(IFileOperation*, Void*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT),
    perform_operations : Proc(IFileOperation*, Win32cr::Foundation::HRESULT),
    get_any_operations_aborted : Proc(IFileOperation*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFileOperation, lpVtbl : IFileOperationVtbl* do
    GUID = LibC::GUID.new(0x947aab5f_u32, 0xa5c_u16, 0x4c13_u16, StaticArray[0xb4_u8, 0xd6_u8, 0x4b_u8, 0xf7_u8, 0x83_u8, 0x6f_u8, 0xc9_u8, 0xf8_u8])
    def query_interface(this : IFileOperation*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFileOperation*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFileOperation*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def advise(this : IFileOperation*, pfops : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, pfops, pdwCookie)
    end
    def unadvise(this : IFileOperation*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unadvise.call(this, dwCookie)
    end
    def set_operation_flags(this : IFileOperation*, dwOperationFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_operation_flags.call(this, dwOperationFlags)
    end
    def set_progress_message(this : IFileOperation*, pszMessage : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_progress_message.call(this, pszMessage)
    end
    def set_progress_dialog(this : IFileOperation*, popd : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_progress_dialog.call(this, popd)
    end
    def set_properties(this : IFileOperation*, pproparray : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_properties.call(this, pproparray)
    end
    def set_owner_window(this : IFileOperation*, hwndOwner : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_owner_window.call(this, hwndOwner)
    end
    def apply_properties_to_item(this : IFileOperation*, psiItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.apply_properties_to_item.call(this, psiItem)
    end
    def apply_properties_to_items(this : IFileOperation*, punkItems : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.apply_properties_to_items.call(this, punkItems)
    end
    def rename_item(this : IFileOperation*, psiItem : Void*, pszNewName : Win32cr::Foundation::PWSTR, pfopsItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.rename_item.call(this, psiItem, pszNewName, pfopsItem)
    end
    def rename_items(this : IFileOperation*, pUnkItems : Void*, pszNewName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.rename_items.call(this, pUnkItems, pszNewName)
    end
    def move_item(this : IFileOperation*, psiItem : Void*, psiDestinationFolder : Void*, pszNewName : Win32cr::Foundation::PWSTR, pfopsItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_item.call(this, psiItem, psiDestinationFolder, pszNewName, pfopsItem)
    end
    def move_items(this : IFileOperation*, punkItems : Void*, psiDestinationFolder : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_items.call(this, punkItems, psiDestinationFolder)
    end
    def copy_item(this : IFileOperation*, psiItem : Void*, psiDestinationFolder : Void*, pszCopyName : Win32cr::Foundation::PWSTR, pfopsItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_item.call(this, psiItem, psiDestinationFolder, pszCopyName, pfopsItem)
    end
    def copy_items(this : IFileOperation*, punkItems : Void*, psiDestinationFolder : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_items.call(this, punkItems, psiDestinationFolder)
    end
    def delete_item(this : IFileOperation*, psiItem : Void*, pfopsItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_item.call(this, psiItem, pfopsItem)
    end
    def delete_items(this : IFileOperation*, punkItems : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_items.call(this, punkItems)
    end
    def new_item(this : IFileOperation*, psiDestinationFolder : Void*, dwFileAttributes : UInt32, pszName : Win32cr::Foundation::PWSTR, pszTemplateName : Win32cr::Foundation::PWSTR, pfopsItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.new_item.call(this, psiDestinationFolder, dwFileAttributes, pszName, pszTemplateName, pfopsItem)
    end
    def perform_operations(this : IFileOperation*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.perform_operations.call(this)
    end
    def get_any_operations_aborted(this : IFileOperation*, pfAnyOperationsAborted : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_any_operations_aborted.call(this, pfAnyOperationsAborted)
    end

  end

  @[Extern]
  record IFileOperation2Vtbl,
    query_interface : Proc(IFileOperation2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFileOperation2*, UInt32),
    release : Proc(IFileOperation2*, UInt32),
    advise : Proc(IFileOperation2*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    unadvise : Proc(IFileOperation2*, UInt32, Win32cr::Foundation::HRESULT),
    set_operation_flags : Proc(IFileOperation2*, UInt32, Win32cr::Foundation::HRESULT),
    set_progress_message : Proc(IFileOperation2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_progress_dialog : Proc(IFileOperation2*, Void*, Win32cr::Foundation::HRESULT),
    set_properties : Proc(IFileOperation2*, Void*, Win32cr::Foundation::HRESULT),
    set_owner_window : Proc(IFileOperation2*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    apply_properties_to_item : Proc(IFileOperation2*, Void*, Win32cr::Foundation::HRESULT),
    apply_properties_to_items : Proc(IFileOperation2*, Void*, Win32cr::Foundation::HRESULT),
    rename_item : Proc(IFileOperation2*, Void*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT),
    rename_items : Proc(IFileOperation2*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    move_item : Proc(IFileOperation2*, Void*, Void*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT),
    move_items : Proc(IFileOperation2*, Void*, Void*, Win32cr::Foundation::HRESULT),
    copy_item : Proc(IFileOperation2*, Void*, Void*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT),
    copy_items : Proc(IFileOperation2*, Void*, Void*, Win32cr::Foundation::HRESULT),
    delete_item : Proc(IFileOperation2*, Void*, Void*, Win32cr::Foundation::HRESULT),
    delete_items : Proc(IFileOperation2*, Void*, Win32cr::Foundation::HRESULT),
    new_item : Proc(IFileOperation2*, Void*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT),
    perform_operations : Proc(IFileOperation2*, Win32cr::Foundation::HRESULT),
    get_any_operations_aborted : Proc(IFileOperation2*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    set_operation_flags2 : Proc(IFileOperation2*, Win32cr::UI::Shell::FILE_OPERATION_FLAGS2, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFileOperation2, lpVtbl : IFileOperation2Vtbl* do
    GUID = LibC::GUID.new(0xcd8f23c1_u32, 0x8f61_u16, 0x4916_u16, StaticArray[0x90_u8, 0x9d_u8, 0x55_u8, 0xbd_u8, 0xd0_u8, 0x91_u8, 0x87_u8, 0x53_u8])
    def query_interface(this : IFileOperation2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFileOperation2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFileOperation2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def advise(this : IFileOperation2*, pfops : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, pfops, pdwCookie)
    end
    def unadvise(this : IFileOperation2*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unadvise.call(this, dwCookie)
    end
    def set_operation_flags(this : IFileOperation2*, dwOperationFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_operation_flags.call(this, dwOperationFlags)
    end
    def set_progress_message(this : IFileOperation2*, pszMessage : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_progress_message.call(this, pszMessage)
    end
    def set_progress_dialog(this : IFileOperation2*, popd : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_progress_dialog.call(this, popd)
    end
    def set_properties(this : IFileOperation2*, pproparray : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_properties.call(this, pproparray)
    end
    def set_owner_window(this : IFileOperation2*, hwndOwner : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_owner_window.call(this, hwndOwner)
    end
    def apply_properties_to_item(this : IFileOperation2*, psiItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.apply_properties_to_item.call(this, psiItem)
    end
    def apply_properties_to_items(this : IFileOperation2*, punkItems : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.apply_properties_to_items.call(this, punkItems)
    end
    def rename_item(this : IFileOperation2*, psiItem : Void*, pszNewName : Win32cr::Foundation::PWSTR, pfopsItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.rename_item.call(this, psiItem, pszNewName, pfopsItem)
    end
    def rename_items(this : IFileOperation2*, pUnkItems : Void*, pszNewName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.rename_items.call(this, pUnkItems, pszNewName)
    end
    def move_item(this : IFileOperation2*, psiItem : Void*, psiDestinationFolder : Void*, pszNewName : Win32cr::Foundation::PWSTR, pfopsItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_item.call(this, psiItem, psiDestinationFolder, pszNewName, pfopsItem)
    end
    def move_items(this : IFileOperation2*, punkItems : Void*, psiDestinationFolder : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_items.call(this, punkItems, psiDestinationFolder)
    end
    def copy_item(this : IFileOperation2*, psiItem : Void*, psiDestinationFolder : Void*, pszCopyName : Win32cr::Foundation::PWSTR, pfopsItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_item.call(this, psiItem, psiDestinationFolder, pszCopyName, pfopsItem)
    end
    def copy_items(this : IFileOperation2*, punkItems : Void*, psiDestinationFolder : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_items.call(this, punkItems, psiDestinationFolder)
    end
    def delete_item(this : IFileOperation2*, psiItem : Void*, pfopsItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_item.call(this, psiItem, pfopsItem)
    end
    def delete_items(this : IFileOperation2*, punkItems : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_items.call(this, punkItems)
    end
    def new_item(this : IFileOperation2*, psiDestinationFolder : Void*, dwFileAttributes : UInt32, pszName : Win32cr::Foundation::PWSTR, pszTemplateName : Win32cr::Foundation::PWSTR, pfopsItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.new_item.call(this, psiDestinationFolder, dwFileAttributes, pszName, pszTemplateName, pfopsItem)
    end
    def perform_operations(this : IFileOperation2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.perform_operations.call(this)
    end
    def get_any_operations_aborted(this : IFileOperation2*, pfAnyOperationsAborted : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_any_operations_aborted.call(this, pfAnyOperationsAborted)
    end
    def set_operation_flags2(this : IFileOperation2*, operationFlags2 : Win32cr::UI::Shell::FILE_OPERATION_FLAGS2) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_operation_flags2.call(this, operationFlags2)
    end

  end

  @[Extern]
  record IObjectProviderVtbl,
    query_interface : Proc(IObjectProvider*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IObjectProvider*, UInt32),
    release : Proc(IObjectProvider*, UInt32),
    query_object : Proc(IObjectProvider*, LibC::GUID*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IObjectProvider, lpVtbl : IObjectProviderVtbl* do
    GUID = LibC::GUID.new(0xa6087428_u32, 0x3be3_u16, 0x4d73_u16, StaticArray[0xb3_u8, 0x8_u8, 0x7c_u8, 0x4_u8, 0xa5_u8, 0x40_u8, 0xbf_u8, 0x1a_u8])
    def query_interface(this : IObjectProvider*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IObjectProvider*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IObjectProvider*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def query_object(this : IObjectProvider*, guidObject : LibC::GUID*, riid : LibC::GUID*, ppvOut : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_object.call(this, guidObject, riid, ppvOut)
    end

  end

  @[Extern]
  record INamespaceWalkCBVtbl,
    query_interface : Proc(INamespaceWalkCB*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INamespaceWalkCB*, UInt32),
    release : Proc(INamespaceWalkCB*, UInt32),
    found_item : Proc(INamespaceWalkCB*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    enter_folder : Proc(INamespaceWalkCB*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    leave_folder : Proc(INamespaceWalkCB*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    initialize_progress_dialog : Proc(INamespaceWalkCB*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INamespaceWalkCB, lpVtbl : INamespaceWalkCBVtbl* do
    GUID = LibC::GUID.new(0xd92995f8_u32, 0xcf5e_u16, 0x4a76_u16, StaticArray[0xbf_u8, 0x59_u8, 0xea_u8, 0xd3_u8, 0x9e_u8, 0xa2_u8, 0xb9_u8, 0x7e_u8])
    def query_interface(this : INamespaceWalkCB*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INamespaceWalkCB*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INamespaceWalkCB*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def found_item(this : INamespaceWalkCB*, psf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.found_item.call(this, psf, pidl)
    end
    def enter_folder(this : INamespaceWalkCB*, psf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enter_folder.call(this, psf, pidl)
    end
    def leave_folder(this : INamespaceWalkCB*, psf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.leave_folder.call(this, psf, pidl)
    end
    def initialize_progress_dialog(this : INamespaceWalkCB*, ppszTitle : Win32cr::Foundation::PWSTR*, ppszCancel : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_progress_dialog.call(this, ppszTitle, ppszCancel)
    end

  end

  @[Extern]
  record INamespaceWalkCB2Vtbl,
    query_interface : Proc(INamespaceWalkCB2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INamespaceWalkCB2*, UInt32),
    release : Proc(INamespaceWalkCB2*, UInt32),
    found_item : Proc(INamespaceWalkCB2*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    enter_folder : Proc(INamespaceWalkCB2*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    leave_folder : Proc(INamespaceWalkCB2*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    initialize_progress_dialog : Proc(INamespaceWalkCB2*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    walk_complete : Proc(INamespaceWalkCB2*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INamespaceWalkCB2, lpVtbl : INamespaceWalkCB2Vtbl* do
    GUID = LibC::GUID.new(0x7ac7492b_u32, 0xc38e_u16, 0x438a_u16, StaticArray[0x87_u8, 0xdb_u8, 0x68_u8, 0x73_u8, 0x78_u8, 0x44_u8, 0xff_u8, 0x70_u8])
    def query_interface(this : INamespaceWalkCB2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INamespaceWalkCB2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INamespaceWalkCB2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def found_item(this : INamespaceWalkCB2*, psf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.found_item.call(this, psf, pidl)
    end
    def enter_folder(this : INamespaceWalkCB2*, psf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enter_folder.call(this, psf, pidl)
    end
    def leave_folder(this : INamespaceWalkCB2*, psf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.leave_folder.call(this, psf, pidl)
    end
    def initialize_progress_dialog(this : INamespaceWalkCB2*, ppszTitle : Win32cr::Foundation::PWSTR*, ppszCancel : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_progress_dialog.call(this, ppszTitle, ppszCancel)
    end
    def walk_complete(this : INamespaceWalkCB2*, hr : Win32cr::Foundation::HRESULT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.walk_complete.call(this, hr)
    end

  end

  @[Extern]
  record INamespaceWalkVtbl,
    query_interface : Proc(INamespaceWalk*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INamespaceWalk*, UInt32),
    release : Proc(INamespaceWalk*, UInt32),
    walk : Proc(INamespaceWalk*, Void*, UInt32, Int32, Void*, Win32cr::Foundation::HRESULT),
    get_id_array_result : Proc(INamespaceWalk*, UInt32*, Win32cr::UI::Shell::Common::ITEMIDLIST***, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INamespaceWalk, lpVtbl : INamespaceWalkVtbl* do
    GUID = LibC::GUID.new(0x57ced8a7_u32, 0x3f4a_u16, 0x432c_u16, StaticArray[0x93_u8, 0x50_u8, 0x30_u8, 0xf2_u8, 0x44_u8, 0x83_u8, 0xf7_u8, 0x4f_u8])
    def query_interface(this : INamespaceWalk*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INamespaceWalk*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INamespaceWalk*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def walk(this : INamespaceWalk*, punkToWalk : Void*, dwFlags : UInt32, cDepth : Int32, pnswcb : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.walk.call(this, punkToWalk, dwFlags, cDepth, pnswcb)
    end
    def get_id_array_result(this : INamespaceWalk*, pcItems : UInt32*, prgpidl : Win32cr::UI::Shell::Common::ITEMIDLIST***) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_id_array_result.call(this, pcItems, prgpidl)
    end

  end

  @[Extern]
  record IBandSiteVtbl,
    query_interface : Proc(IBandSite*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IBandSite*, UInt32),
    release : Proc(IBandSite*, UInt32),
    add_band : Proc(IBandSite*, Void*, Win32cr::Foundation::HRESULT),
    enum_bands : Proc(IBandSite*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    query_band : Proc(IBandSite*, UInt32, Void**, UInt32*, UInt16*, Int32, Win32cr::Foundation::HRESULT),
    set_band_state : Proc(IBandSite*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    remove_band : Proc(IBandSite*, UInt32, Win32cr::Foundation::HRESULT),
    get_band_object : Proc(IBandSite*, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    set_band_site_info : Proc(IBandSite*, Win32cr::UI::Shell::BANDSITEINFO*, Win32cr::Foundation::HRESULT),
    get_band_site_info : Proc(IBandSite*, Win32cr::UI::Shell::BANDSITEINFO*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IBandSite, lpVtbl : IBandSiteVtbl* do
    GUID = LibC::GUID.new(0x4cf504b0_u32, 0xde96_u16, 0x11d0_u16, StaticArray[0x8b_u8, 0x3f_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x11_u8, 0xe8_u8, 0xe5_u8])
    def query_interface(this : IBandSite*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IBandSite*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IBandSite*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_band(this : IBandSite*, punk : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_band.call(this, punk)
    end
    def enum_bands(this : IBandSite*, uBand : UInt32, pdwBandID : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_bands.call(this, uBand, pdwBandID)
    end
    def query_band(this : IBandSite*, dwBandID : UInt32, ppstb : Void**, pdwState : UInt32*, pszName : UInt16*, cchName : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_band.call(this, dwBandID, ppstb, pdwState, pszName, cchName)
    end
    def set_band_state(this : IBandSite*, dwBandID : UInt32, dwMask : UInt32, dwState : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_band_state.call(this, dwBandID, dwMask, dwState)
    end
    def remove_band(this : IBandSite*, dwBandID : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_band.call(this, dwBandID)
    end
    def get_band_object(this : IBandSite*, dwBandID : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_band_object.call(this, dwBandID, riid, ppv)
    end
    def set_band_site_info(this : IBandSite*, pbsinfo : Win32cr::UI::Shell::BANDSITEINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_band_site_info.call(this, pbsinfo)
    end
    def get_band_site_info(this : IBandSite*, pbsinfo : Win32cr::UI::Shell::BANDSITEINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_band_site_info.call(this, pbsinfo)
    end

  end

  @[Extern]
  record IModalWindowVtbl,
    query_interface : Proc(IModalWindow*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IModalWindow*, UInt32),
    release : Proc(IModalWindow*, UInt32),
    show : Proc(IModalWindow*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IModalWindow, lpVtbl : IModalWindowVtbl* do
    GUID = LibC::GUID.new(0xb4db1657_u32, 0x70d7_u16, 0x485e_u16, StaticArray[0x8e_u8, 0x3e_u8, 0x6f_u8, 0xcb_u8, 0x5a_u8, 0x5c_u8, 0x18_u8, 0x2_u8])
    def query_interface(this : IModalWindow*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IModalWindow*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IModalWindow*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def show(this : IModalWindow*, hwndOwner : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show.call(this, hwndOwner)
    end

  end

  @[Extern]
  record IContextMenuSiteVtbl,
    query_interface : Proc(IContextMenuSite*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IContextMenuSite*, UInt32),
    release : Proc(IContextMenuSite*, UInt32),
    do_context_menu_popup : Proc(IContextMenuSite*, Void*, UInt32, Win32cr::Foundation::POINT, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IContextMenuSite, lpVtbl : IContextMenuSiteVtbl* do
    GUID = LibC::GUID.new(0x811aebe_u32, 0xb87_u16, 0x4c54_u16, StaticArray[0x9e_u8, 0x72_u8, 0x54_u8, 0x8c_u8, 0xf6_u8, 0x49_u8, 0x1_u8, 0x6b_u8])
    def query_interface(this : IContextMenuSite*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IContextMenuSite*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IContextMenuSite*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def do_context_menu_popup(this : IContextMenuSite*, punkContextMenu : Void*, fFlags : UInt32, pt : Win32cr::Foundation::POINT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.do_context_menu_popup.call(this, punkContextMenu, fFlags, pt)
    end

  end

  @[Extern]
  record IMenuBandVtbl,
    query_interface : Proc(IMenuBand*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IMenuBand*, UInt32),
    release : Proc(IMenuBand*, UInt32),
    is_menu_message : Proc(IMenuBand*, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT),
    translate_menu_message : Proc(IMenuBand*, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::LRESULT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IMenuBand, lpVtbl : IMenuBandVtbl* do
    GUID = LibC::GUID.new(0x568804cd_u32, 0xcbd7_u16, 0x11d0_u16, StaticArray[0x98_u8, 0x16_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x19_u8, 0x72_u8])
    def query_interface(this : IMenuBand*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IMenuBand*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IMenuBand*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def is_menu_message(this : IMenuBand*, pmsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_menu_message.call(this, pmsg)
    end
    def translate_menu_message(this : IMenuBand*, pmsg : Win32cr::UI::WindowsAndMessaging::MSG*, plRet : Win32cr::Foundation::LRESULT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_menu_message.call(this, pmsg, plRet)
    end

  end

  @[Extern]
  record IRegTreeItemVtbl,
    query_interface : Proc(IRegTreeItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IRegTreeItem*, UInt32),
    release : Proc(IRegTreeItem*, UInt32),
    get_check_state : Proc(IRegTreeItem*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    set_check_state : Proc(IRegTreeItem*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IRegTreeItem, lpVtbl : IRegTreeItemVtbl* do
    GUID = LibC::GUID.new(0xa9521922_u32, 0x812_u16, 0x4d44_u16, StaticArray[0x9e_u8, 0xc3_u8, 0x7f_u8, 0xd3_u8, 0x8c_u8, 0x72_u8, 0x6f_u8, 0x3d_u8])
    def query_interface(this : IRegTreeItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IRegTreeItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IRegTreeItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_check_state(this : IRegTreeItem*, pbCheck : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_check_state.call(this, pbCheck)
    end
    def set_check_state(this : IRegTreeItem*, bCheck : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_check_state.call(this, bCheck)
    end

  end

  @[Extern]
  record IDeskBarVtbl,
    query_interface : Proc(IDeskBar*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDeskBar*, UInt32),
    release : Proc(IDeskBar*, UInt32),
    get_window : Proc(IDeskBar*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    context_sensitive_help : Proc(IDeskBar*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_client : Proc(IDeskBar*, Void*, Win32cr::Foundation::HRESULT),
    get_client : Proc(IDeskBar*, Void**, Win32cr::Foundation::HRESULT),
    on_pos_rect_change_db : Proc(IDeskBar*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDeskBar, lpVtbl : IDeskBarVtbl* do
    GUID = LibC::GUID.new(0xeb0fe173_u32, 0x1a3a_u16, 0x11d0_u16, StaticArray[0x89_u8, 0xb3_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x90_u8, 0xac_u8])
    def query_interface(this : IDeskBar*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDeskBar*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDeskBar*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IDeskBar*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, phwnd)
    end
    def context_sensitive_help(this : IDeskBar*, fEnterMode : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.context_sensitive_help.call(this, fEnterMode)
    end
    def set_client(this : IDeskBar*, punkClient : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_client.call(this, punkClient)
    end
    def get_client(this : IDeskBar*, ppunkClient : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_client.call(this, ppunkClient)
    end
    def on_pos_rect_change_db(this : IDeskBar*, prc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_pos_rect_change_db.call(this, prc)
    end

  end

  @[Extern]
  record IMenuPopupVtbl,
    query_interface : Proc(IMenuPopup*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IMenuPopup*, UInt32),
    release : Proc(IMenuPopup*, UInt32),
    get_window : Proc(IMenuPopup*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    context_sensitive_help : Proc(IMenuPopup*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_client : Proc(IMenuPopup*, Void*, Win32cr::Foundation::HRESULT),
    get_client : Proc(IMenuPopup*, Void**, Win32cr::Foundation::HRESULT),
    on_pos_rect_change_db : Proc(IMenuPopup*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    popup : Proc(IMenuPopup*, Win32cr::Foundation::POINTL*, Win32cr::Foundation::RECTL*, Int32, Win32cr::Foundation::HRESULT),
    on_select : Proc(IMenuPopup*, UInt32, Win32cr::Foundation::HRESULT),
    set_sub_menu : Proc(IMenuPopup*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IMenuPopup, lpVtbl : IMenuPopupVtbl* do
    GUID = LibC::GUID.new(0xd1e7afeb_u32, 0x6a2e_u16, 0x11d0_u16, StaticArray[0x8c_u8, 0x78_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xb4_u8])
    def query_interface(this : IMenuPopup*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IMenuPopup*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IMenuPopup*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IMenuPopup*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, phwnd)
    end
    def context_sensitive_help(this : IMenuPopup*, fEnterMode : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.context_sensitive_help.call(this, fEnterMode)
    end
    def set_client(this : IMenuPopup*, punkClient : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_client.call(this, punkClient)
    end
    def get_client(this : IMenuPopup*, ppunkClient : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_client.call(this, ppunkClient)
    end
    def on_pos_rect_change_db(this : IMenuPopup*, prc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_pos_rect_change_db.call(this, prc)
    end
    def popup(this : IMenuPopup*, ppt : Win32cr::Foundation::POINTL*, prcExclude : Win32cr::Foundation::RECTL*, dwFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.popup.call(this, ppt, prcExclude, dwFlags)
    end
    def on_select(this : IMenuPopup*, dwSelectType : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_select.call(this, dwSelectType)
    end
    def set_sub_menu(this : IMenuPopup*, pmp : Void*, fSet : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_sub_menu.call(this, pmp, fSet)
    end

  end

  @[Extern]
  record IFileIsInUseVtbl,
    query_interface : Proc(IFileIsInUse*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFileIsInUse*, UInt32),
    release : Proc(IFileIsInUse*, UInt32),
    get_app_name : Proc(IFileIsInUse*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_usage : Proc(IFileIsInUse*, Win32cr::UI::Shell::FILE_USAGE_TYPE*, Win32cr::Foundation::HRESULT),
    get_capabilities : Proc(IFileIsInUse*, UInt32*, Win32cr::Foundation::HRESULT),
    get_switch_to_hwnd : Proc(IFileIsInUse*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    close_file : Proc(IFileIsInUse*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFileIsInUse, lpVtbl : IFileIsInUseVtbl* do
    GUID = LibC::GUID.new(0x64a1cbf0_u32, 0x3a1a_u16, 0x4461_u16, StaticArray[0x91_u8, 0x58_u8, 0x37_u8, 0x69_u8, 0x69_u8, 0x69_u8, 0x39_u8, 0x50_u8])
    def query_interface(this : IFileIsInUse*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFileIsInUse*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFileIsInUse*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_app_name(this : IFileIsInUse*, ppszName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_app_name.call(this, ppszName)
    end
    def get_usage(this : IFileIsInUse*, pfut : Win32cr::UI::Shell::FILE_USAGE_TYPE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_usage.call(this, pfut)
    end
    def get_capabilities(this : IFileIsInUse*, pdwCapFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_capabilities.call(this, pdwCapFlags)
    end
    def get_switch_to_hwnd(this : IFileIsInUse*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_switch_to_hwnd.call(this, phwnd)
    end
    def close_file(this : IFileIsInUse*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.close_file.call(this)
    end

  end

  @[Extern]
  record IFileDialogEventsVtbl,
    query_interface : Proc(IFileDialogEvents*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFileDialogEvents*, UInt32),
    release : Proc(IFileDialogEvents*, UInt32),
    on_file_ok : Proc(IFileDialogEvents*, Void*, Win32cr::Foundation::HRESULT),
    on_folder_changing : Proc(IFileDialogEvents*, Void*, Void*, Win32cr::Foundation::HRESULT),
    on_folder_change : Proc(IFileDialogEvents*, Void*, Win32cr::Foundation::HRESULT),
    on_selection_change : Proc(IFileDialogEvents*, Void*, Win32cr::Foundation::HRESULT),
    on_share_violation : Proc(IFileDialogEvents*, Void*, Void*, Win32cr::UI::Shell::FDE_SHAREVIOLATION_RESPONSE*, Win32cr::Foundation::HRESULT),
    on_type_change : Proc(IFileDialogEvents*, Void*, Win32cr::Foundation::HRESULT),
    on_overwrite : Proc(IFileDialogEvents*, Void*, Void*, Win32cr::UI::Shell::FDE_OVERWRITE_RESPONSE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFileDialogEvents, lpVtbl : IFileDialogEventsVtbl* do
    GUID = LibC::GUID.new(0x973510db_u32, 0x7d7f_u16, 0x452b_u16, StaticArray[0x89_u8, 0x75_u8, 0x74_u8, 0xa8_u8, 0x58_u8, 0x28_u8, 0xd3_u8, 0x54_u8])
    def query_interface(this : IFileDialogEvents*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFileDialogEvents*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFileDialogEvents*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_file_ok(this : IFileDialogEvents*, pfd : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_file_ok.call(this, pfd)
    end
    def on_folder_changing(this : IFileDialogEvents*, pfd : Void*, psiFolder : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_folder_changing.call(this, pfd, psiFolder)
    end
    def on_folder_change(this : IFileDialogEvents*, pfd : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_folder_change.call(this, pfd)
    end
    def on_selection_change(this : IFileDialogEvents*, pfd : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_selection_change.call(this, pfd)
    end
    def on_share_violation(this : IFileDialogEvents*, pfd : Void*, psi : Void*, pResponse : Win32cr::UI::Shell::FDE_SHAREVIOLATION_RESPONSE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_share_violation.call(this, pfd, psi, pResponse)
    end
    def on_type_change(this : IFileDialogEvents*, pfd : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_type_change.call(this, pfd)
    end
    def on_overwrite(this : IFileDialogEvents*, pfd : Void*, psi : Void*, pResponse : Win32cr::UI::Shell::FDE_OVERWRITE_RESPONSE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_overwrite.call(this, pfd, psi, pResponse)
    end

  end

  @[Extern]
  record IFileDialogVtbl,
    query_interface : Proc(IFileDialog*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFileDialog*, UInt32),
    release : Proc(IFileDialog*, UInt32),
    show : Proc(IFileDialog*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    set_file_types : Proc(IFileDialog*, UInt32, Win32cr::UI::Shell::Common::COMDLG_FILTERSPEC*, Win32cr::Foundation::HRESULT),
    set_file_type_index : Proc(IFileDialog*, UInt32, Win32cr::Foundation::HRESULT),
    get_file_type_index : Proc(IFileDialog*, UInt32*, Win32cr::Foundation::HRESULT),
    advise : Proc(IFileDialog*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    unadvise : Proc(IFileDialog*, UInt32, Win32cr::Foundation::HRESULT),
    set_options : Proc(IFileDialog*, Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS, Win32cr::Foundation::HRESULT),
    get_options : Proc(IFileDialog*, Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS*, Win32cr::Foundation::HRESULT),
    set_default_folder : Proc(IFileDialog*, Void*, Win32cr::Foundation::HRESULT),
    set_folder : Proc(IFileDialog*, Void*, Win32cr::Foundation::HRESULT),
    get_folder : Proc(IFileDialog*, Void**, Win32cr::Foundation::HRESULT),
    get_current_selection : Proc(IFileDialog*, Void**, Win32cr::Foundation::HRESULT),
    set_file_name : Proc(IFileDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_file_name : Proc(IFileDialog*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    set_title : Proc(IFileDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_ok_button_label : Proc(IFileDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_file_name_label : Proc(IFileDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_result : Proc(IFileDialog*, Void**, Win32cr::Foundation::HRESULT),
    add_place : Proc(IFileDialog*, Void*, Win32cr::UI::Shell::FDAP, Win32cr::Foundation::HRESULT),
    set_default_extension : Proc(IFileDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    close : Proc(IFileDialog*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::HRESULT),
    set_client_guid : Proc(IFileDialog*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    clear_client_data : Proc(IFileDialog*, Win32cr::Foundation::HRESULT),
    set_filter : Proc(IFileDialog*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFileDialog, lpVtbl : IFileDialogVtbl* do
    GUID = LibC::GUID.new(0x42f85136_u32, 0xdb7e_u16, 0x439c_u16, StaticArray[0x85_u8, 0xf1_u8, 0xe4_u8, 0x7_u8, 0x5d_u8, 0x13_u8, 0x5f_u8, 0xc8_u8])
    def query_interface(this : IFileDialog*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFileDialog*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFileDialog*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def show(this : IFileDialog*, hwndOwner : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show.call(this, hwndOwner)
    end
    def set_file_types(this : IFileDialog*, cFileTypes : UInt32, rgFilterSpec : Win32cr::UI::Shell::Common::COMDLG_FILTERSPEC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_types.call(this, cFileTypes, rgFilterSpec)
    end
    def set_file_type_index(this : IFileDialog*, iFileType : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_type_index.call(this, iFileType)
    end
    def get_file_type_index(this : IFileDialog*, piFileType : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_type_index.call(this, piFileType)
    end
    def advise(this : IFileDialog*, pfde : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, pfde, pdwCookie)
    end
    def unadvise(this : IFileDialog*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unadvise.call(this, dwCookie)
    end
    def set_options(this : IFileDialog*, fos : Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_options.call(this, fos)
    end
    def get_options(this : IFileDialog*, pfos : Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_options.call(this, pfos)
    end
    def set_default_folder(this : IFileDialog*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_default_folder.call(this, psi)
    end
    def set_folder(this : IFileDialog*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_folder.call(this, psi)
    end
    def get_folder(this : IFileDialog*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder.call(this, ppsi)
    end
    def get_current_selection(this : IFileDialog*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_selection.call(this, ppsi)
    end
    def set_file_name(this : IFileDialog*, pszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_name.call(this, pszName)
    end
    def get_file_name(this : IFileDialog*, pszName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_name.call(this, pszName)
    end
    def set_title(this : IFileDialog*, pszTitle : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_title.call(this, pszTitle)
    end
    def set_ok_button_label(this : IFileDialog*, pszText : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_ok_button_label.call(this, pszText)
    end
    def set_file_name_label(this : IFileDialog*, pszLabel : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_name_label.call(this, pszLabel)
    end
    def get_result(this : IFileDialog*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_result.call(this, ppsi)
    end
    def add_place(this : IFileDialog*, psi : Void*, fdap : Win32cr::UI::Shell::FDAP) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_place.call(this, psi, fdap)
    end
    def set_default_extension(this : IFileDialog*, pszDefaultExtension : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_default_extension.call(this, pszDefaultExtension)
    end
    def close(this : IFileDialog*, hr : Win32cr::Foundation::HRESULT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.close.call(this, hr)
    end
    def set_client_guid(this : IFileDialog*, guid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_client_guid.call(this, guid)
    end
    def clear_client_data(this : IFileDialog*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clear_client_data.call(this)
    end
    def set_filter(this : IFileDialog*, pFilter : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_filter.call(this, pFilter)
    end

  end

  @[Extern]
  record IFileSaveDialogVtbl,
    query_interface : Proc(IFileSaveDialog*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFileSaveDialog*, UInt32),
    release : Proc(IFileSaveDialog*, UInt32),
    show : Proc(IFileSaveDialog*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    set_file_types : Proc(IFileSaveDialog*, UInt32, Win32cr::UI::Shell::Common::COMDLG_FILTERSPEC*, Win32cr::Foundation::HRESULT),
    set_file_type_index : Proc(IFileSaveDialog*, UInt32, Win32cr::Foundation::HRESULT),
    get_file_type_index : Proc(IFileSaveDialog*, UInt32*, Win32cr::Foundation::HRESULT),
    advise : Proc(IFileSaveDialog*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    unadvise : Proc(IFileSaveDialog*, UInt32, Win32cr::Foundation::HRESULT),
    set_options : Proc(IFileSaveDialog*, Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS, Win32cr::Foundation::HRESULT),
    get_options : Proc(IFileSaveDialog*, Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS*, Win32cr::Foundation::HRESULT),
    set_default_folder : Proc(IFileSaveDialog*, Void*, Win32cr::Foundation::HRESULT),
    set_folder : Proc(IFileSaveDialog*, Void*, Win32cr::Foundation::HRESULT),
    get_folder : Proc(IFileSaveDialog*, Void**, Win32cr::Foundation::HRESULT),
    get_current_selection : Proc(IFileSaveDialog*, Void**, Win32cr::Foundation::HRESULT),
    set_file_name : Proc(IFileSaveDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_file_name : Proc(IFileSaveDialog*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    set_title : Proc(IFileSaveDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_ok_button_label : Proc(IFileSaveDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_file_name_label : Proc(IFileSaveDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_result : Proc(IFileSaveDialog*, Void**, Win32cr::Foundation::HRESULT),
    add_place : Proc(IFileSaveDialog*, Void*, Win32cr::UI::Shell::FDAP, Win32cr::Foundation::HRESULT),
    set_default_extension : Proc(IFileSaveDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    close : Proc(IFileSaveDialog*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::HRESULT),
    set_client_guid : Proc(IFileSaveDialog*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    clear_client_data : Proc(IFileSaveDialog*, Win32cr::Foundation::HRESULT),
    set_filter : Proc(IFileSaveDialog*, Void*, Win32cr::Foundation::HRESULT),
    set_save_as_item : Proc(IFileSaveDialog*, Void*, Win32cr::Foundation::HRESULT),
    set_properties : Proc(IFileSaveDialog*, Void*, Win32cr::Foundation::HRESULT),
    set_collected_properties : Proc(IFileSaveDialog*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_properties : Proc(IFileSaveDialog*, Void**, Win32cr::Foundation::HRESULT),
    apply_properties : Proc(IFileSaveDialog*, Void*, Void*, Win32cr::Foundation::HWND, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFileSaveDialog, lpVtbl : IFileSaveDialogVtbl* do
    GUID = LibC::GUID.new(0x84bccd23_u32, 0x5fde_u16, 0x4cdb_u16, StaticArray[0xae_u8, 0xa4_u8, 0xaf_u8, 0x64_u8, 0xb8_u8, 0x3d_u8, 0x78_u8, 0xab_u8])
    def query_interface(this : IFileSaveDialog*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFileSaveDialog*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFileSaveDialog*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def show(this : IFileSaveDialog*, hwndOwner : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show.call(this, hwndOwner)
    end
    def set_file_types(this : IFileSaveDialog*, cFileTypes : UInt32, rgFilterSpec : Win32cr::UI::Shell::Common::COMDLG_FILTERSPEC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_types.call(this, cFileTypes, rgFilterSpec)
    end
    def set_file_type_index(this : IFileSaveDialog*, iFileType : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_type_index.call(this, iFileType)
    end
    def get_file_type_index(this : IFileSaveDialog*, piFileType : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_type_index.call(this, piFileType)
    end
    def advise(this : IFileSaveDialog*, pfde : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, pfde, pdwCookie)
    end
    def unadvise(this : IFileSaveDialog*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unadvise.call(this, dwCookie)
    end
    def set_options(this : IFileSaveDialog*, fos : Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_options.call(this, fos)
    end
    def get_options(this : IFileSaveDialog*, pfos : Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_options.call(this, pfos)
    end
    def set_default_folder(this : IFileSaveDialog*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_default_folder.call(this, psi)
    end
    def set_folder(this : IFileSaveDialog*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_folder.call(this, psi)
    end
    def get_folder(this : IFileSaveDialog*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder.call(this, ppsi)
    end
    def get_current_selection(this : IFileSaveDialog*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_selection.call(this, ppsi)
    end
    def set_file_name(this : IFileSaveDialog*, pszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_name.call(this, pszName)
    end
    def get_file_name(this : IFileSaveDialog*, pszName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_name.call(this, pszName)
    end
    def set_title(this : IFileSaveDialog*, pszTitle : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_title.call(this, pszTitle)
    end
    def set_ok_button_label(this : IFileSaveDialog*, pszText : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_ok_button_label.call(this, pszText)
    end
    def set_file_name_label(this : IFileSaveDialog*, pszLabel : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_name_label.call(this, pszLabel)
    end
    def get_result(this : IFileSaveDialog*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_result.call(this, ppsi)
    end
    def add_place(this : IFileSaveDialog*, psi : Void*, fdap : Win32cr::UI::Shell::FDAP) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_place.call(this, psi, fdap)
    end
    def set_default_extension(this : IFileSaveDialog*, pszDefaultExtension : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_default_extension.call(this, pszDefaultExtension)
    end
    def close(this : IFileSaveDialog*, hr : Win32cr::Foundation::HRESULT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.close.call(this, hr)
    end
    def set_client_guid(this : IFileSaveDialog*, guid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_client_guid.call(this, guid)
    end
    def clear_client_data(this : IFileSaveDialog*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clear_client_data.call(this)
    end
    def set_filter(this : IFileSaveDialog*, pFilter : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_filter.call(this, pFilter)
    end
    def set_save_as_item(this : IFileSaveDialog*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_save_as_item.call(this, psi)
    end
    def set_properties(this : IFileSaveDialog*, pStore : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_properties.call(this, pStore)
    end
    def set_collected_properties(this : IFileSaveDialog*, pList : Void*, fAppendDefault : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_collected_properties.call(this, pList, fAppendDefault)
    end
    def get_properties(this : IFileSaveDialog*, ppStore : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_properties.call(this, ppStore)
    end
    def apply_properties(this : IFileSaveDialog*, psi : Void*, pStore : Void*, hwnd : Win32cr::Foundation::HWND, pSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.apply_properties.call(this, psi, pStore, hwnd, pSink)
    end

  end

  @[Extern]
  record IFileOpenDialogVtbl,
    query_interface : Proc(IFileOpenDialog*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFileOpenDialog*, UInt32),
    release : Proc(IFileOpenDialog*, UInt32),
    show : Proc(IFileOpenDialog*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    set_file_types : Proc(IFileOpenDialog*, UInt32, Win32cr::UI::Shell::Common::COMDLG_FILTERSPEC*, Win32cr::Foundation::HRESULT),
    set_file_type_index : Proc(IFileOpenDialog*, UInt32, Win32cr::Foundation::HRESULT),
    get_file_type_index : Proc(IFileOpenDialog*, UInt32*, Win32cr::Foundation::HRESULT),
    advise : Proc(IFileOpenDialog*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    unadvise : Proc(IFileOpenDialog*, UInt32, Win32cr::Foundation::HRESULT),
    set_options : Proc(IFileOpenDialog*, Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS, Win32cr::Foundation::HRESULT),
    get_options : Proc(IFileOpenDialog*, Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS*, Win32cr::Foundation::HRESULT),
    set_default_folder : Proc(IFileOpenDialog*, Void*, Win32cr::Foundation::HRESULT),
    set_folder : Proc(IFileOpenDialog*, Void*, Win32cr::Foundation::HRESULT),
    get_folder : Proc(IFileOpenDialog*, Void**, Win32cr::Foundation::HRESULT),
    get_current_selection : Proc(IFileOpenDialog*, Void**, Win32cr::Foundation::HRESULT),
    set_file_name : Proc(IFileOpenDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_file_name : Proc(IFileOpenDialog*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    set_title : Proc(IFileOpenDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_ok_button_label : Proc(IFileOpenDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_file_name_label : Proc(IFileOpenDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_result : Proc(IFileOpenDialog*, Void**, Win32cr::Foundation::HRESULT),
    add_place : Proc(IFileOpenDialog*, Void*, Win32cr::UI::Shell::FDAP, Win32cr::Foundation::HRESULT),
    set_default_extension : Proc(IFileOpenDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    close : Proc(IFileOpenDialog*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::HRESULT),
    set_client_guid : Proc(IFileOpenDialog*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    clear_client_data : Proc(IFileOpenDialog*, Win32cr::Foundation::HRESULT),
    set_filter : Proc(IFileOpenDialog*, Void*, Win32cr::Foundation::HRESULT),
    get_results : Proc(IFileOpenDialog*, Void**, Win32cr::Foundation::HRESULT),
    get_selected_items : Proc(IFileOpenDialog*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFileOpenDialog, lpVtbl : IFileOpenDialogVtbl* do
    GUID = LibC::GUID.new(0xd57c7288_u32, 0xd4ad_u16, 0x4768_u16, StaticArray[0xbe_u8, 0x2_u8, 0x9d_u8, 0x96_u8, 0x95_u8, 0x32_u8, 0xd9_u8, 0x60_u8])
    def query_interface(this : IFileOpenDialog*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFileOpenDialog*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFileOpenDialog*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def show(this : IFileOpenDialog*, hwndOwner : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show.call(this, hwndOwner)
    end
    def set_file_types(this : IFileOpenDialog*, cFileTypes : UInt32, rgFilterSpec : Win32cr::UI::Shell::Common::COMDLG_FILTERSPEC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_types.call(this, cFileTypes, rgFilterSpec)
    end
    def set_file_type_index(this : IFileOpenDialog*, iFileType : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_type_index.call(this, iFileType)
    end
    def get_file_type_index(this : IFileOpenDialog*, piFileType : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_type_index.call(this, piFileType)
    end
    def advise(this : IFileOpenDialog*, pfde : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, pfde, pdwCookie)
    end
    def unadvise(this : IFileOpenDialog*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unadvise.call(this, dwCookie)
    end
    def set_options(this : IFileOpenDialog*, fos : Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_options.call(this, fos)
    end
    def get_options(this : IFileOpenDialog*, pfos : Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_options.call(this, pfos)
    end
    def set_default_folder(this : IFileOpenDialog*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_default_folder.call(this, psi)
    end
    def set_folder(this : IFileOpenDialog*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_folder.call(this, psi)
    end
    def get_folder(this : IFileOpenDialog*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder.call(this, ppsi)
    end
    def get_current_selection(this : IFileOpenDialog*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_selection.call(this, ppsi)
    end
    def set_file_name(this : IFileOpenDialog*, pszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_name.call(this, pszName)
    end
    def get_file_name(this : IFileOpenDialog*, pszName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_name.call(this, pszName)
    end
    def set_title(this : IFileOpenDialog*, pszTitle : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_title.call(this, pszTitle)
    end
    def set_ok_button_label(this : IFileOpenDialog*, pszText : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_ok_button_label.call(this, pszText)
    end
    def set_file_name_label(this : IFileOpenDialog*, pszLabel : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_name_label.call(this, pszLabel)
    end
    def get_result(this : IFileOpenDialog*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_result.call(this, ppsi)
    end
    def add_place(this : IFileOpenDialog*, psi : Void*, fdap : Win32cr::UI::Shell::FDAP) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_place.call(this, psi, fdap)
    end
    def set_default_extension(this : IFileOpenDialog*, pszDefaultExtension : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_default_extension.call(this, pszDefaultExtension)
    end
    def close(this : IFileOpenDialog*, hr : Win32cr::Foundation::HRESULT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.close.call(this, hr)
    end
    def set_client_guid(this : IFileOpenDialog*, guid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_client_guid.call(this, guid)
    end
    def clear_client_data(this : IFileOpenDialog*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clear_client_data.call(this)
    end
    def set_filter(this : IFileOpenDialog*, pFilter : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_filter.call(this, pFilter)
    end
    def get_results(this : IFileOpenDialog*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_results.call(this, ppenum)
    end
    def get_selected_items(this : IFileOpenDialog*, ppsai : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_selected_items.call(this, ppsai)
    end

  end

  @[Extern]
  record IFileDialogCustomizeVtbl,
    query_interface : Proc(IFileDialogCustomize*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFileDialogCustomize*, UInt32),
    release : Proc(IFileDialogCustomize*, UInt32),
    enable_open_drop_down : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::HRESULT),
    add_menu : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    add_push_button : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    add_combo_box : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::HRESULT),
    add_radio_button_list : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::HRESULT),
    add_check_button : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    add_edit_box : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    add_separator : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::HRESULT),
    add_text : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_control_label : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_control_state : Proc(IFileDialogCustomize*, UInt32, Win32cr::UI::Shell::CDCONTROLSTATEF*, Win32cr::Foundation::HRESULT),
    set_control_state : Proc(IFileDialogCustomize*, UInt32, Win32cr::UI::Shell::CDCONTROLSTATEF, Win32cr::Foundation::HRESULT),
    get_edit_box_text : Proc(IFileDialogCustomize*, UInt32, UInt16**, Win32cr::Foundation::HRESULT),
    set_edit_box_text : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_check_button_state : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    set_check_button_state : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    add_control_item : Proc(IFileDialogCustomize*, UInt32, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    remove_control_item : Proc(IFileDialogCustomize*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    remove_all_control_items : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::HRESULT),
    get_control_item_state : Proc(IFileDialogCustomize*, UInt32, UInt32, Win32cr::UI::Shell::CDCONTROLSTATEF*, Win32cr::Foundation::HRESULT),
    set_control_item_state : Proc(IFileDialogCustomize*, UInt32, UInt32, Win32cr::UI::Shell::CDCONTROLSTATEF, Win32cr::Foundation::HRESULT),
    get_selected_control_item : Proc(IFileDialogCustomize*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    set_selected_control_item : Proc(IFileDialogCustomize*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    start_visual_group : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    end_visual_group : Proc(IFileDialogCustomize*, Win32cr::Foundation::HRESULT),
    make_prominent : Proc(IFileDialogCustomize*, UInt32, Win32cr::Foundation::HRESULT),
    set_control_item_text : Proc(IFileDialogCustomize*, UInt32, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFileDialogCustomize, lpVtbl : IFileDialogCustomizeVtbl* do
    GUID = LibC::GUID.new(0xe6fdd21a_u32, 0x163f_u16, 0x4975_u16, StaticArray[0x9c_u8, 0x8c_u8, 0xa6_u8, 0x9f_u8, 0x1b_u8, 0xa3_u8, 0x70_u8, 0x34_u8])
    def query_interface(this : IFileDialogCustomize*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFileDialogCustomize*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFileDialogCustomize*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def enable_open_drop_down(this : IFileDialogCustomize*, dwIDCtl : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_open_drop_down.call(this, dwIDCtl)
    end
    def add_menu(this : IFileDialogCustomize*, dwIDCtl : UInt32, pszLabel : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_menu.call(this, dwIDCtl, pszLabel)
    end
    def add_push_button(this : IFileDialogCustomize*, dwIDCtl : UInt32, pszLabel : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_push_button.call(this, dwIDCtl, pszLabel)
    end
    def add_combo_box(this : IFileDialogCustomize*, dwIDCtl : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_combo_box.call(this, dwIDCtl)
    end
    def add_radio_button_list(this : IFileDialogCustomize*, dwIDCtl : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_radio_button_list.call(this, dwIDCtl)
    end
    def add_check_button(this : IFileDialogCustomize*, dwIDCtl : UInt32, pszLabel : Win32cr::Foundation::PWSTR, bChecked : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_check_button.call(this, dwIDCtl, pszLabel, bChecked)
    end
    def add_edit_box(this : IFileDialogCustomize*, dwIDCtl : UInt32, pszText : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_edit_box.call(this, dwIDCtl, pszText)
    end
    def add_separator(this : IFileDialogCustomize*, dwIDCtl : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_separator.call(this, dwIDCtl)
    end
    def add_text(this : IFileDialogCustomize*, dwIDCtl : UInt32, pszText : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_text.call(this, dwIDCtl, pszText)
    end
    def set_control_label(this : IFileDialogCustomize*, dwIDCtl : UInt32, pszLabel : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_control_label.call(this, dwIDCtl, pszLabel)
    end
    def get_control_state(this : IFileDialogCustomize*, dwIDCtl : UInt32, pdwState : Win32cr::UI::Shell::CDCONTROLSTATEF*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_control_state.call(this, dwIDCtl, pdwState)
    end
    def set_control_state(this : IFileDialogCustomize*, dwIDCtl : UInt32, dwState : Win32cr::UI::Shell::CDCONTROLSTATEF) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_control_state.call(this, dwIDCtl, dwState)
    end
    def get_edit_box_text(this : IFileDialogCustomize*, dwIDCtl : UInt32, ppszText : UInt16**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_edit_box_text.call(this, dwIDCtl, ppszText)
    end
    def set_edit_box_text(this : IFileDialogCustomize*, dwIDCtl : UInt32, pszText : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_edit_box_text.call(this, dwIDCtl, pszText)
    end
    def get_check_button_state(this : IFileDialogCustomize*, dwIDCtl : UInt32, pbChecked : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_check_button_state.call(this, dwIDCtl, pbChecked)
    end
    def set_check_button_state(this : IFileDialogCustomize*, dwIDCtl : UInt32, bChecked : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_check_button_state.call(this, dwIDCtl, bChecked)
    end
    def add_control_item(this : IFileDialogCustomize*, dwIDCtl : UInt32, dwIDItem : UInt32, pszLabel : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_control_item.call(this, dwIDCtl, dwIDItem, pszLabel)
    end
    def remove_control_item(this : IFileDialogCustomize*, dwIDCtl : UInt32, dwIDItem : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_control_item.call(this, dwIDCtl, dwIDItem)
    end
    def remove_all_control_items(this : IFileDialogCustomize*, dwIDCtl : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_all_control_items.call(this, dwIDCtl)
    end
    def get_control_item_state(this : IFileDialogCustomize*, dwIDCtl : UInt32, dwIDItem : UInt32, pdwState : Win32cr::UI::Shell::CDCONTROLSTATEF*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_control_item_state.call(this, dwIDCtl, dwIDItem, pdwState)
    end
    def set_control_item_state(this : IFileDialogCustomize*, dwIDCtl : UInt32, dwIDItem : UInt32, dwState : Win32cr::UI::Shell::CDCONTROLSTATEF) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_control_item_state.call(this, dwIDCtl, dwIDItem, dwState)
    end
    def get_selected_control_item(this : IFileDialogCustomize*, dwIDCtl : UInt32, pdwIDItem : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_selected_control_item.call(this, dwIDCtl, pdwIDItem)
    end
    def set_selected_control_item(this : IFileDialogCustomize*, dwIDCtl : UInt32, dwIDItem : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_selected_control_item.call(this, dwIDCtl, dwIDItem)
    end
    def start_visual_group(this : IFileDialogCustomize*, dwIDCtl : UInt32, pszLabel : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start_visual_group.call(this, dwIDCtl, pszLabel)
    end
    def end_visual_group(this : IFileDialogCustomize*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.end_visual_group.call(this)
    end
    def make_prominent(this : IFileDialogCustomize*, dwIDCtl : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.make_prominent.call(this, dwIDCtl)
    end
    def set_control_item_text(this : IFileDialogCustomize*, dwIDCtl : UInt32, dwIDItem : UInt32, pszLabel : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_control_item_text.call(this, dwIDCtl, dwIDItem, pszLabel)
    end

  end

  @[Extern]
  record IApplicationAssociationRegistrationVtbl,
    query_interface : Proc(IApplicationAssociationRegistration*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IApplicationAssociationRegistration*, UInt32),
    release : Proc(IApplicationAssociationRegistration*, UInt32),
    query_current_default : Proc(IApplicationAssociationRegistration*, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::ASSOCIATIONTYPE, Win32cr::UI::Shell::ASSOCIATIONLEVEL, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    query_app_is_default : Proc(IApplicationAssociationRegistration*, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::ASSOCIATIONTYPE, Win32cr::UI::Shell::ASSOCIATIONLEVEL, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    query_app_is_default_all : Proc(IApplicationAssociationRegistration*, Win32cr::UI::Shell::ASSOCIATIONLEVEL, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    set_app_as_default : Proc(IApplicationAssociationRegistration*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::ASSOCIATIONTYPE, Win32cr::Foundation::HRESULT),
    set_app_as_default_all : Proc(IApplicationAssociationRegistration*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    clear_user_associations : Proc(IApplicationAssociationRegistration*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IApplicationAssociationRegistration, lpVtbl : IApplicationAssociationRegistrationVtbl* do
    GUID = LibC::GUID.new(0x4e530b0a_u32, 0xe611_u16, 0x4c77_u16, StaticArray[0xa3_u8, 0xac_u8, 0x90_u8, 0x31_u8, 0xd0_u8, 0x22_u8, 0x28_u8, 0x1b_u8])
    def query_interface(this : IApplicationAssociationRegistration*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IApplicationAssociationRegistration*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IApplicationAssociationRegistration*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def query_current_default(this : IApplicationAssociationRegistration*, pszQuery : Win32cr::Foundation::PWSTR, atQueryType : Win32cr::UI::Shell::ASSOCIATIONTYPE, alQueryLevel : Win32cr::UI::Shell::ASSOCIATIONLEVEL, ppszAssociation : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_current_default.call(this, pszQuery, atQueryType, alQueryLevel, ppszAssociation)
    end
    def query_app_is_default(this : IApplicationAssociationRegistration*, pszQuery : Win32cr::Foundation::PWSTR, atQueryType : Win32cr::UI::Shell::ASSOCIATIONTYPE, alQueryLevel : Win32cr::UI::Shell::ASSOCIATIONLEVEL, pszAppRegistryName : Win32cr::Foundation::PWSTR, pfDefault : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_app_is_default.call(this, pszQuery, atQueryType, alQueryLevel, pszAppRegistryName, pfDefault)
    end
    def query_app_is_default_all(this : IApplicationAssociationRegistration*, alQueryLevel : Win32cr::UI::Shell::ASSOCIATIONLEVEL, pszAppRegistryName : Win32cr::Foundation::PWSTR, pfDefault : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_app_is_default_all.call(this, alQueryLevel, pszAppRegistryName, pfDefault)
    end
    def set_app_as_default(this : IApplicationAssociationRegistration*, pszAppRegistryName : Win32cr::Foundation::PWSTR, pszSet : Win32cr::Foundation::PWSTR, atSetType : Win32cr::UI::Shell::ASSOCIATIONTYPE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_app_as_default.call(this, pszAppRegistryName, pszSet, atSetType)
    end
    def set_app_as_default_all(this : IApplicationAssociationRegistration*, pszAppRegistryName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_app_as_default_all.call(this, pszAppRegistryName)
    end
    def clear_user_associations(this : IApplicationAssociationRegistration*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clear_user_associations.call(this)
    end

  end

  @[Extern]
  record IDelegateFolderVtbl,
    query_interface : Proc(IDelegateFolder*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDelegateFolder*, UInt32),
    release : Proc(IDelegateFolder*, UInt32),
    set_item_alloc : Proc(IDelegateFolder*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDelegateFolder, lpVtbl : IDelegateFolderVtbl* do
    GUID = LibC::GUID.new(0xadd8ba80_u32, 0x2b_u16, 0x11d0_u16, StaticArray[0x8f_u8, 0xf_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0xd0_u8, 0x62_u8])
    def query_interface(this : IDelegateFolder*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDelegateFolder*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDelegateFolder*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_item_alloc(this : IDelegateFolder*, pmalloc : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_item_alloc.call(this, pmalloc)
    end

  end

  @[Extern]
  record IBrowserFrameOptionsVtbl,
    query_interface : Proc(IBrowserFrameOptions*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IBrowserFrameOptions*, UInt32),
    release : Proc(IBrowserFrameOptions*, UInt32),
    get_frame_options : Proc(IBrowserFrameOptions*, UInt32, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IBrowserFrameOptions, lpVtbl : IBrowserFrameOptionsVtbl* do
    GUID = LibC::GUID.new(0x10df43c8_u32, 0x1dbe_u16, 0x11d3_u16, StaticArray[0x8b_u8, 0x34_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0xdf_u8, 0x5b_u8, 0xd4_u8])
    def query_interface(this : IBrowserFrameOptions*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IBrowserFrameOptions*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IBrowserFrameOptions*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_frame_options(this : IBrowserFrameOptions*, dwMask : UInt32, pdwOptions : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_frame_options.call(this, dwMask, pdwOptions)
    end

  end

  @[Extern]
  record INewWindowManagerVtbl,
    query_interface : Proc(INewWindowManager*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INewWindowManager*, UInt32),
    release : Proc(INewWindowManager*, UInt32),
    evaluate_new_window : Proc(INewWindowManager*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, UInt32, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INewWindowManager, lpVtbl : INewWindowManagerVtbl* do
    GUID = LibC::GUID.new(0xd2bc4c84_u32, 0x3f72_u16, 0x4a52_u16, StaticArray[0xa6_u8, 0x4_u8, 0x7b_u8, 0xcb_u8, 0xf3_u8, 0x98_u8, 0x2c_u8, 0xbb_u8])
    def query_interface(this : INewWindowManager*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INewWindowManager*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INewWindowManager*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def evaluate_new_window(this : INewWindowManager*, pszUrl : Win32cr::Foundation::PWSTR, pszName : Win32cr::Foundation::PWSTR, pszUrlContext : Win32cr::Foundation::PWSTR, pszFeatures : Win32cr::Foundation::PWSTR, fReplace : Win32cr::Foundation::BOOL, dwFlags : UInt32, dwUserActionTime : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.evaluate_new_window.call(this, pszUrl, pszName, pszUrlContext, pszFeatures, fReplace, dwFlags, dwUserActionTime)
    end

  end

  @[Extern]
  record IAttachmentExecuteVtbl,
    query_interface : Proc(IAttachmentExecute*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAttachmentExecute*, UInt32),
    release : Proc(IAttachmentExecute*, UInt32),
    set_client_title : Proc(IAttachmentExecute*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_client_guid : Proc(IAttachmentExecute*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    set_local_path : Proc(IAttachmentExecute*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_file_name : Proc(IAttachmentExecute*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_source : Proc(IAttachmentExecute*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_referrer : Proc(IAttachmentExecute*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    check_policy : Proc(IAttachmentExecute*, Win32cr::Foundation::HRESULT),
    prompt : Proc(IAttachmentExecute*, Win32cr::Foundation::HWND, Win32cr::UI::Shell::ATTACHMENT_PROMPT, Win32cr::UI::Shell::ATTACHMENT_ACTION*, Win32cr::Foundation::HRESULT),
    save : Proc(IAttachmentExecute*, Win32cr::Foundation::HRESULT),
    execute : Proc(IAttachmentExecute*, Win32cr::Foundation::HWND, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HANDLE*, Win32cr::Foundation::HRESULT),
    save_with_ui : Proc(IAttachmentExecute*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    clear_client_state : Proc(IAttachmentExecute*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAttachmentExecute, lpVtbl : IAttachmentExecuteVtbl* do
    GUID = LibC::GUID.new(0x73db1241_u32, 0x1e85_u16, 0x4581_u16, StaticArray[0x8e_u8, 0x4f_u8, 0xa8_u8, 0x1e_u8, 0x1d_u8, 0xf_u8, 0x8c_u8, 0x57_u8])
    def query_interface(this : IAttachmentExecute*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAttachmentExecute*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAttachmentExecute*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_client_title(this : IAttachmentExecute*, pszTitle : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_client_title.call(this, pszTitle)
    end
    def set_client_guid(this : IAttachmentExecute*, guid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_client_guid.call(this, guid)
    end
    def set_local_path(this : IAttachmentExecute*, pszLocalPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_local_path.call(this, pszLocalPath)
    end
    def set_file_name(this : IAttachmentExecute*, pszFileName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_name.call(this, pszFileName)
    end
    def set_source(this : IAttachmentExecute*, pszSource : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_source.call(this, pszSource)
    end
    def set_referrer(this : IAttachmentExecute*, pszReferrer : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_referrer.call(this, pszReferrer)
    end
    def check_policy(this : IAttachmentExecute*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_policy.call(this)
    end
    def prompt(this : IAttachmentExecute*, hwnd : Win32cr::Foundation::HWND, prompt : Win32cr::UI::Shell::ATTACHMENT_PROMPT, paction : Win32cr::UI::Shell::ATTACHMENT_ACTION*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.prompt.call(this, hwnd, prompt, paction)
    end
    def save(this : IAttachmentExecute*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.save.call(this)
    end
    def execute(this : IAttachmentExecute*, hwnd : Win32cr::Foundation::HWND, pszVerb : Win32cr::Foundation::PWSTR, phProcess : Win32cr::Foundation::HANDLE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.execute.call(this, hwnd, pszVerb, phProcess)
    end
    def save_with_ui(this : IAttachmentExecute*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.save_with_ui.call(this, hwnd)
    end
    def clear_client_state(this : IAttachmentExecute*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clear_client_state.call(this)
    end

  end

  @[Extern]
  record IShellMenuCallbackVtbl,
    query_interface : Proc(IShellMenuCallback*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellMenuCallback*, UInt32),
    release : Proc(IShellMenuCallback*, UInt32),
    callback_sm : Proc(IShellMenuCallback*, Win32cr::UI::Shell::SMDATA*, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellMenuCallback, lpVtbl : IShellMenuCallbackVtbl* do
    GUID = LibC::GUID.new(0x4ca300a1_u32, 0x9b8d_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x22_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xd0_u8])
    def query_interface(this : IShellMenuCallback*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellMenuCallback*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellMenuCallback*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def callback_sm(this : IShellMenuCallback*, psmd : Win32cr::UI::Shell::SMDATA*, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.callback_sm.call(this, psmd, uMsg, wParam, lParam)
    end

  end

  @[Extern]
  record IShellMenuVtbl,
    query_interface : Proc(IShellMenu*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellMenu*, UInt32),
    release : Proc(IShellMenu*, UInt32),
    initialize__ : Proc(IShellMenu*, Void*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_menu_info : Proc(IShellMenu*, Void**, UInt32*, UInt32*, UInt32*, Win32cr::Foundation::HRESULT),
    set_shell_folder : Proc(IShellMenu*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::System::Registry::HKEY, UInt32, Win32cr::Foundation::HRESULT),
    get_shell_folder : Proc(IShellMenu*, UInt32*, Win32cr::UI::Shell::Common::ITEMIDLIST**, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    set_menu : Proc(IShellMenu*, Win32cr::UI::WindowsAndMessaging::HMENU, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    get_menu : Proc(IShellMenu*, Win32cr::UI::WindowsAndMessaging::HMENU*, Win32cr::Foundation::HWND*, UInt32*, Win32cr::Foundation::HRESULT),
    invalidate_item : Proc(IShellMenu*, Win32cr::UI::Shell::SMDATA*, UInt32, Win32cr::Foundation::HRESULT),
    get_state : Proc(IShellMenu*, Win32cr::UI::Shell::SMDATA*, Win32cr::Foundation::HRESULT),
    set_menu_toolbar : Proc(IShellMenu*, Void*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellMenu, lpVtbl : IShellMenuVtbl* do
    GUID = LibC::GUID.new(0xee1f7637_u32, 0xe138_u16, 0x11d1_u16, StaticArray[0x83_u8, 0x79_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xd0_u8])
    def query_interface(this : IShellMenu*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellMenu*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellMenu*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IShellMenu*, psmc : Void*, uId : UInt32, uIdAncestor : UInt32, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, psmc, uId, uIdAncestor, dwFlags)
    end
    def get_menu_info(this : IShellMenu*, ppsmc : Void**, puId : UInt32*, puIdAncestor : UInt32*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_menu_info.call(this, ppsmc, puId, puIdAncestor, pdwFlags)
    end
    def set_shell_folder(this : IShellMenu*, psf : Void*, pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, hKey : Win32cr::System::Registry::HKEY, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_shell_folder.call(this, psf, pidlFolder, hKey, dwFlags)
    end
    def get_shell_folder(this : IShellMenu*, pdwFlags : UInt32*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_shell_folder.call(this, pdwFlags, ppidl, riid, ppv)
    end
    def set_menu(this : IShellMenu*, hmenu : Win32cr::UI::WindowsAndMessaging::HMENU, hwnd : Win32cr::Foundation::HWND, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_menu.call(this, hmenu, hwnd, dwFlags)
    end
    def get_menu(this : IShellMenu*, phmenu : Win32cr::UI::WindowsAndMessaging::HMENU*, phwnd : Win32cr::Foundation::HWND*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_menu.call(this, phmenu, phwnd, pdwFlags)
    end
    def invalidate_item(this : IShellMenu*, psmd : Win32cr::UI::Shell::SMDATA*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invalidate_item.call(this, psmd, dwFlags)
    end
    def get_state(this : IShellMenu*, psmd : Win32cr::UI::Shell::SMDATA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_state.call(this, psmd)
    end
    def set_menu_toolbar(this : IShellMenu*, punk : Void*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_menu_toolbar.call(this, punk, dwFlags)
    end

  end

  @[Extern]
  record IKnownFolderVtbl,
    query_interface : Proc(IKnownFolder*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IKnownFolder*, UInt32),
    release : Proc(IKnownFolder*, UInt32),
    get_id : Proc(IKnownFolder*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_category : Proc(IKnownFolder*, Win32cr::UI::Shell::KF_CATEGORY*, Win32cr::Foundation::HRESULT),
    get_shell_item : Proc(IKnownFolder*, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_path : Proc(IKnownFolder*, UInt32, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    set_path : Proc(IKnownFolder*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_id_list : Proc(IKnownFolder*, UInt32, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    get_folder_type : Proc(IKnownFolder*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_redirection_capabilities : Proc(IKnownFolder*, UInt32*, Win32cr::Foundation::HRESULT),
    get_folder_definition : Proc(IKnownFolder*, Win32cr::UI::Shell::KNOWNFOLDER_DEFINITION*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IKnownFolder, lpVtbl : IKnownFolderVtbl* do
    GUID = LibC::GUID.new(0x3aa7af7e_u32, 0x9b36_u16, 0x420c_u16, StaticArray[0xa8_u8, 0xe3_u8, 0xf7_u8, 0x7d_u8, 0x46_u8, 0x74_u8, 0xa4_u8, 0x88_u8])
    def query_interface(this : IKnownFolder*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IKnownFolder*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IKnownFolder*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_id(this : IKnownFolder*, pkfid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_id.call(this, pkfid)
    end
    def get_category(this : IKnownFolder*, pCategory : Win32cr::UI::Shell::KF_CATEGORY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_category.call(this, pCategory)
    end
    def get_shell_item(this : IKnownFolder*, dwFlags : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_shell_item.call(this, dwFlags, riid, ppv)
    end
    def get_path(this : IKnownFolder*, dwFlags : UInt32, ppszPath : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_path.call(this, dwFlags, ppszPath)
    end
    def set_path(this : IKnownFolder*, dwFlags : UInt32, pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_path.call(this, dwFlags, pszPath)
    end
    def get_id_list(this : IKnownFolder*, dwFlags : UInt32, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_id_list.call(this, dwFlags, ppidl)
    end
    def get_folder_type(this : IKnownFolder*, pftid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder_type.call(this, pftid)
    end
    def get_redirection_capabilities(this : IKnownFolder*, pCapabilities : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_redirection_capabilities.call(this, pCapabilities)
    end
    def get_folder_definition(this : IKnownFolder*, pKFD : Win32cr::UI::Shell::KNOWNFOLDER_DEFINITION*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder_definition.call(this, pKFD)
    end

  end

  @[Extern]
  record IKnownFolderManagerVtbl,
    query_interface : Proc(IKnownFolderManager*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IKnownFolderManager*, UInt32),
    release : Proc(IKnownFolderManager*, UInt32),
    folder_id_from_csidl : Proc(IKnownFolderManager*, Int32, LibC::GUID*, Win32cr::Foundation::HRESULT),
    folder_id_to_csidl : Proc(IKnownFolderManager*, LibC::GUID*, Int32*, Win32cr::Foundation::HRESULT),
    get_folder_ids : Proc(IKnownFolderManager*, LibC::GUID**, UInt32*, Win32cr::Foundation::HRESULT),
    get_folder : Proc(IKnownFolderManager*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_folder_by_name : Proc(IKnownFolderManager*, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    register_folder : Proc(IKnownFolderManager*, LibC::GUID*, Win32cr::UI::Shell::KNOWNFOLDER_DEFINITION*, Win32cr::Foundation::HRESULT),
    unregister_folder : Proc(IKnownFolderManager*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    find_folder_from_path : Proc(IKnownFolderManager*, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::FFFP_MODE, Void**, Win32cr::Foundation::HRESULT),
    find_folder_from_id_list : Proc(IKnownFolderManager*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Void**, Win32cr::Foundation::HRESULT),
    redirect : Proc(IKnownFolderManager*, LibC::GUID*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::PWSTR, UInt32, LibC::GUID*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IKnownFolderManager, lpVtbl : IKnownFolderManagerVtbl* do
    GUID = LibC::GUID.new(0x8be2d872_u32, 0x86aa_u16, 0x4d47_u16, StaticArray[0xb7_u8, 0x76_u8, 0x32_u8, 0xcc_u8, 0xa4_u8, 0xc_u8, 0x70_u8, 0x18_u8])
    def query_interface(this : IKnownFolderManager*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IKnownFolderManager*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IKnownFolderManager*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def folder_id_from_csidl(this : IKnownFolderManager*, nCsidl : Int32, pfid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.folder_id_from_csidl.call(this, nCsidl, pfid)
    end
    def folder_id_to_csidl(this : IKnownFolderManager*, rfid : LibC::GUID*, pnCsidl : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.folder_id_to_csidl.call(this, rfid, pnCsidl)
    end
    def get_folder_ids(this : IKnownFolderManager*, ppKFId : LibC::GUID**, pCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder_ids.call(this, ppKFId, pCount)
    end
    def get_folder(this : IKnownFolderManager*, rfid : LibC::GUID*, ppkf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder.call(this, rfid, ppkf)
    end
    def get_folder_by_name(this : IKnownFolderManager*, pszCanonicalName : Win32cr::Foundation::PWSTR, ppkf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder_by_name.call(this, pszCanonicalName, ppkf)
    end
    def register_folder(this : IKnownFolderManager*, rfid : LibC::GUID*, pKFD : Win32cr::UI::Shell::KNOWNFOLDER_DEFINITION*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_folder.call(this, rfid, pKFD)
    end
    def unregister_folder(this : IKnownFolderManager*, rfid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_folder.call(this, rfid)
    end
    def find_folder_from_path(this : IKnownFolderManager*, pszPath : Win32cr::Foundation::PWSTR, mode : Win32cr::UI::Shell::FFFP_MODE, ppkf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_folder_from_path.call(this, pszPath, mode, ppkf)
    end
    def find_folder_from_id_list(this : IKnownFolderManager*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppkf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_folder_from_id_list.call(this, pidl, ppkf)
    end
    def redirect(this : IKnownFolderManager*, rfid : LibC::GUID*, hwnd : Win32cr::Foundation::HWND, flags : UInt32, pszTargetPath : Win32cr::Foundation::PWSTR, cFolders : UInt32, pExclusion : LibC::GUID*, ppszError : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.redirect.call(this, rfid, hwnd, flags, pszTargetPath, cFolders, pExclusion, ppszError)
    end

  end

  @[Extern]
  record ISharingConfigurationManagerVtbl,
    query_interface : Proc(ISharingConfigurationManager*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISharingConfigurationManager*, UInt32),
    release : Proc(ISharingConfigurationManager*, UInt32),
    create_share : Proc(ISharingConfigurationManager*, Win32cr::UI::Shell::DEF_SHARE_ID, Win32cr::UI::Shell::SHARE_ROLE, Win32cr::Foundation::HRESULT),
    delete_share : Proc(ISharingConfigurationManager*, Win32cr::UI::Shell::DEF_SHARE_ID, Win32cr::Foundation::HRESULT),
    share_exists : Proc(ISharingConfigurationManager*, Win32cr::UI::Shell::DEF_SHARE_ID, Win32cr::Foundation::HRESULT),
    get_share_permissions : Proc(ISharingConfigurationManager*, Win32cr::UI::Shell::DEF_SHARE_ID, Win32cr::UI::Shell::SHARE_ROLE*, Win32cr::Foundation::HRESULT),
    share_printers : Proc(ISharingConfigurationManager*, Win32cr::Foundation::HRESULT),
    stop_sharing_printers : Proc(ISharingConfigurationManager*, Win32cr::Foundation::HRESULT),
    are_printers_shared : Proc(ISharingConfigurationManager*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISharingConfigurationManager, lpVtbl : ISharingConfigurationManagerVtbl* do
    GUID = LibC::GUID.new(0xb4cd448a_u32, 0x9c86_u16, 0x4466_u16, StaticArray[0x92_u8, 0x1_u8, 0x2e_u8, 0x62_u8, 0x10_u8, 0x5b_u8, 0x87_u8, 0xae_u8])
    def query_interface(this : ISharingConfigurationManager*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISharingConfigurationManager*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISharingConfigurationManager*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_share(this : ISharingConfigurationManager*, dsid : Win32cr::UI::Shell::DEF_SHARE_ID, role : Win32cr::UI::Shell::SHARE_ROLE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_share.call(this, dsid, role)
    end
    def delete_share(this : ISharingConfigurationManager*, dsid : Win32cr::UI::Shell::DEF_SHARE_ID) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_share.call(this, dsid)
    end
    def share_exists(this : ISharingConfigurationManager*, dsid : Win32cr::UI::Shell::DEF_SHARE_ID) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.share_exists.call(this, dsid)
    end
    def get_share_permissions(this : ISharingConfigurationManager*, dsid : Win32cr::UI::Shell::DEF_SHARE_ID, pRole : Win32cr::UI::Shell::SHARE_ROLE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_share_permissions.call(this, dsid, pRole)
    end
    def share_printers(this : ISharingConfigurationManager*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.share_printers.call(this)
    end
    def stop_sharing_printers(this : ISharingConfigurationManager*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop_sharing_printers.call(this)
    end
    def are_printers_shared(this : ISharingConfigurationManager*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.are_printers_shared.call(this)
    end

  end

  @[Extern]
  record IRelatedItemVtbl,
    query_interface : Proc(IRelatedItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IRelatedItem*, UInt32),
    release : Proc(IRelatedItem*, UInt32),
    get_item_id_list : Proc(IRelatedItem*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    get_item : Proc(IRelatedItem*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IRelatedItem, lpVtbl : IRelatedItemVtbl* do
    GUID = LibC::GUID.new(0xa73ce67a_u32, 0x8ab1_u16, 0x44f1_u16, StaticArray[0x8d_u8, 0x43_u8, 0xd2_u8, 0xfc_u8, 0xbf_u8, 0x6b_u8, 0x1c_u8, 0xd0_u8])
    def query_interface(this : IRelatedItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IRelatedItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IRelatedItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_item_id_list(this : IRelatedItem*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_id_list.call(this, ppidl)
    end
    def get_item(this : IRelatedItem*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item.call(this, ppsi)
    end

  end

  @[Extern]
  record IIdentityNameVtbl,
    query_interface : Proc(IIdentityName*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IIdentityName*, UInt32),
    release : Proc(IIdentityName*, UInt32),
    get_item_id_list : Proc(IIdentityName*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    get_item : Proc(IIdentityName*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IIdentityName, lpVtbl : IIdentityNameVtbl* do
    GUID = LibC::GUID.new(0x7d903fca_u32, 0xd6f9_u16, 0x4810_u16, StaticArray[0x83_u8, 0x32_u8, 0x94_u8, 0x6c_u8, 0x1_u8, 0x77_u8, 0xe2_u8, 0x47_u8])
    def query_interface(this : IIdentityName*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IIdentityName*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IIdentityName*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_item_id_list(this : IIdentityName*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_id_list.call(this, ppidl)
    end
    def get_item(this : IIdentityName*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item.call(this, ppsi)
    end

  end

  @[Extern]
  record IDelegateItemVtbl,
    query_interface : Proc(IDelegateItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDelegateItem*, UInt32),
    release : Proc(IDelegateItem*, UInt32),
    get_item_id_list : Proc(IDelegateItem*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    get_item : Proc(IDelegateItem*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDelegateItem, lpVtbl : IDelegateItemVtbl* do
    GUID = LibC::GUID.new(0x3c5a1c94_u32, 0xc951_u16, 0x4cb7_u16, StaticArray[0xbb_u8, 0x6d_u8, 0x3b_u8, 0x93_u8, 0xf3_u8, 0xc_u8, 0xce_u8, 0x93_u8])
    def query_interface(this : IDelegateItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDelegateItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDelegateItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_item_id_list(this : IDelegateItem*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_id_list.call(this, ppidl)
    end
    def get_item(this : IDelegateItem*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item.call(this, ppsi)
    end

  end

  @[Extern]
  record ICurrentItemVtbl,
    query_interface : Proc(ICurrentItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICurrentItem*, UInt32),
    release : Proc(ICurrentItem*, UInt32),
    get_item_id_list : Proc(ICurrentItem*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    get_item : Proc(ICurrentItem*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICurrentItem, lpVtbl : ICurrentItemVtbl* do
    GUID = LibC::GUID.new(0x240a7174_u32, 0xd653_u16, 0x4a1d_u16, StaticArray[0xa6_u8, 0xd3_u8, 0xd4_u8, 0x94_u8, 0x3c_u8, 0xfb_u8, 0xfe_u8, 0x3d_u8])
    def query_interface(this : ICurrentItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICurrentItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICurrentItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_item_id_list(this : ICurrentItem*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_id_list.call(this, ppidl)
    end
    def get_item(this : ICurrentItem*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item.call(this, ppsi)
    end

  end

  @[Extern]
  record ITransferMediumItemVtbl,
    query_interface : Proc(ITransferMediumItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITransferMediumItem*, UInt32),
    release : Proc(ITransferMediumItem*, UInt32),
    get_item_id_list : Proc(ITransferMediumItem*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    get_item : Proc(ITransferMediumItem*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITransferMediumItem, lpVtbl : ITransferMediumItemVtbl* do
    GUID = LibC::GUID.new(0x77f295d5_u32, 0x2d6f_u16, 0x4e19_u16, StaticArray[0xb8_u8, 0xae_u8, 0x32_u8, 0x2f_u8, 0x3e_u8, 0x72_u8, 0x1a_u8, 0xb5_u8])
    def query_interface(this : ITransferMediumItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITransferMediumItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITransferMediumItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_item_id_list(this : ITransferMediumItem*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_id_list.call(this, ppidl)
    end
    def get_item(this : ITransferMediumItem*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item.call(this, ppsi)
    end

  end

  @[Extern]
  record IDisplayItemVtbl,
    query_interface : Proc(IDisplayItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDisplayItem*, UInt32),
    release : Proc(IDisplayItem*, UInt32),
    get_item_id_list : Proc(IDisplayItem*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    get_item : Proc(IDisplayItem*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDisplayItem, lpVtbl : IDisplayItemVtbl* do
    GUID = LibC::GUID.new(0xc6fd5997_u32, 0x9f6b_u16, 0x4888_u16, StaticArray[0x87_u8, 0x3_u8, 0x94_u8, 0xe8_u8, 0xe_u8, 0x8c_u8, 0xde_u8, 0x3f_u8])
    def query_interface(this : IDisplayItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDisplayItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDisplayItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_item_id_list(this : IDisplayItem*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_id_list.call(this, ppidl)
    end
    def get_item(this : IDisplayItem*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item.call(this, ppsi)
    end

  end

  @[Extern]
  record IViewStateIdentityItemVtbl,
    query_interface : Proc(IViewStateIdentityItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IViewStateIdentityItem*, UInt32),
    release : Proc(IViewStateIdentityItem*, UInt32),
    get_item_id_list : Proc(IViewStateIdentityItem*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    get_item : Proc(IViewStateIdentityItem*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IViewStateIdentityItem, lpVtbl : IViewStateIdentityItemVtbl* do
    GUID = LibC::GUID.new(0x9d264146_u32, 0xa94f_u16, 0x4195_u16, StaticArray[0x9f_u8, 0x9f_u8, 0x3b_u8, 0xb1_u8, 0x2c_u8, 0xe0_u8, 0xc9_u8, 0x55_u8])
    def query_interface(this : IViewStateIdentityItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IViewStateIdentityItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IViewStateIdentityItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_item_id_list(this : IViewStateIdentityItem*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_id_list.call(this, ppidl)
    end
    def get_item(this : IViewStateIdentityItem*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item.call(this, ppsi)
    end

  end

  @[Extern]
  record IPreviewItemVtbl,
    query_interface : Proc(IPreviewItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPreviewItem*, UInt32),
    release : Proc(IPreviewItem*, UInt32),
    get_item_id_list : Proc(IPreviewItem*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    get_item : Proc(IPreviewItem*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPreviewItem, lpVtbl : IPreviewItemVtbl* do
    GUID = LibC::GUID.new(0x36149969_u32, 0xa8f_u16, 0x49c8_u16, StaticArray[0x8b_u8, 0x0_u8, 0x4a_u8, 0xec_u8, 0xb2_u8, 0x2_u8, 0x22_u8, 0xfb_u8])
    def query_interface(this : IPreviewItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPreviewItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPreviewItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_item_id_list(this : IPreviewItem*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_id_list.call(this, ppidl)
    end
    def get_item(this : IPreviewItem*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item.call(this, ppsi)
    end

  end

  @[Extern]
  record IDestinationStreamFactoryVtbl,
    query_interface : Proc(IDestinationStreamFactory*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDestinationStreamFactory*, UInt32),
    release : Proc(IDestinationStreamFactory*, UInt32),
    get_destination_stream : Proc(IDestinationStreamFactory*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDestinationStreamFactory, lpVtbl : IDestinationStreamFactoryVtbl* do
    GUID = LibC::GUID.new(0x8a87781b_u32, 0x39a7_u16, 0x4a1f_u16, StaticArray[0xaa_u8, 0xb3_u8, 0xa3_u8, 0x9b_u8, 0x9c_u8, 0x34_u8, 0xa7_u8, 0xd9_u8])
    def query_interface(this : IDestinationStreamFactory*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDestinationStreamFactory*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDestinationStreamFactory*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_destination_stream(this : IDestinationStreamFactory*, ppstm : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_destination_stream.call(this, ppstm)
    end

  end

  @[Extern]
  record ICreateProcessInputsVtbl,
    query_interface : Proc(ICreateProcessInputs*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICreateProcessInputs*, UInt32),
    release : Proc(ICreateProcessInputs*, UInt32),
    get_create_flags : Proc(ICreateProcessInputs*, UInt32*, Win32cr::Foundation::HRESULT),
    set_create_flags : Proc(ICreateProcessInputs*, UInt32, Win32cr::Foundation::HRESULT),
    add_create_flags : Proc(ICreateProcessInputs*, UInt32, Win32cr::Foundation::HRESULT),
    set_hot_key : Proc(ICreateProcessInputs*, UInt16, Win32cr::Foundation::HRESULT),
    add_startup_flags : Proc(ICreateProcessInputs*, UInt32, Win32cr::Foundation::HRESULT),
    set_title : Proc(ICreateProcessInputs*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_environment_variable : Proc(ICreateProcessInputs*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICreateProcessInputs, lpVtbl : ICreateProcessInputsVtbl* do
    GUID = LibC::GUID.new(0xf6ef6140_u32, 0xe26f_u16, 0x4d82_u16, StaticArray[0xba_u8, 0xc4_u8, 0xe9_u8, 0xba_u8, 0x5f_u8, 0xd2_u8, 0x39_u8, 0xa8_u8])
    def query_interface(this : ICreateProcessInputs*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICreateProcessInputs*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICreateProcessInputs*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_create_flags(this : ICreateProcessInputs*, pdwCreationFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_create_flags.call(this, pdwCreationFlags)
    end
    def set_create_flags(this : ICreateProcessInputs*, dwCreationFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_create_flags.call(this, dwCreationFlags)
    end
    def add_create_flags(this : ICreateProcessInputs*, dwCreationFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_create_flags.call(this, dwCreationFlags)
    end
    def set_hot_key(this : ICreateProcessInputs*, wHotKey : UInt16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_hot_key.call(this, wHotKey)
    end
    def add_startup_flags(this : ICreateProcessInputs*, dwStartupInfoFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_startup_flags.call(this, dwStartupInfoFlags)
    end
    def set_title(this : ICreateProcessInputs*, pszTitle : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_title.call(this, pszTitle)
    end
    def set_environment_variable(this : ICreateProcessInputs*, pszName : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_environment_variable.call(this, pszName, pszValue)
    end

  end

  @[Extern]
  record ICreatingProcessVtbl,
    query_interface : Proc(ICreatingProcess*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICreatingProcess*, UInt32),
    release : Proc(ICreatingProcess*, UInt32),
    on_creating : Proc(ICreatingProcess*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICreatingProcess, lpVtbl : ICreatingProcessVtbl* do
    GUID = LibC::GUID.new(0xc2b937a9_u32, 0x3110_u16, 0x4398_u16, StaticArray[0x8a_u8, 0x56_u8, 0xf3_u8, 0x4c_u8, 0x63_u8, 0x42_u8, 0xd2_u8, 0x44_u8])
    def query_interface(this : ICreatingProcess*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICreatingProcess*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICreatingProcess*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_creating(this : ICreatingProcess*, pcpi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_creating.call(this, pcpi)
    end

  end

  @[Extern]
  record ILaunchUIContextVtbl,
    query_interface : Proc(ILaunchUIContext*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ILaunchUIContext*, UInt32),
    release : Proc(ILaunchUIContext*, UInt32),
    set_associated_window : Proc(ILaunchUIContext*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    set_tab_grouping_preference : Proc(ILaunchUIContext*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ILaunchUIContext, lpVtbl : ILaunchUIContextVtbl* do
    GUID = LibC::GUID.new(0x1791e8f6_u32, 0x21c7_u16, 0x4340_u16, StaticArray[0x88_u8, 0x2a_u8, 0xa6_u8, 0xa9_u8, 0x3e_u8, 0x3f_u8, 0xd7_u8, 0x3b_u8])
    def query_interface(this : ILaunchUIContext*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ILaunchUIContext*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ILaunchUIContext*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_associated_window(this : ILaunchUIContext*, value : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_associated_window.call(this, value)
    end
    def set_tab_grouping_preference(this : ILaunchUIContext*, value : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_tab_grouping_preference.call(this, value)
    end

  end

  @[Extern]
  record ILaunchUIContextProviderVtbl,
    query_interface : Proc(ILaunchUIContextProvider*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ILaunchUIContextProvider*, UInt32),
    release : Proc(ILaunchUIContextProvider*, UInt32),
    update_context : Proc(ILaunchUIContextProvider*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ILaunchUIContextProvider, lpVtbl : ILaunchUIContextProviderVtbl* do
    GUID = LibC::GUID.new(0xd12c4c8_u32, 0xa3d9_u16, 0x4e24_u16, StaticArray[0x94_u8, 0xc1_u8, 0xe_u8, 0x20_u8, 0xc5_u8, 0xa9_u8, 0x56_u8, 0xc4_u8])
    def query_interface(this : ILaunchUIContextProvider*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ILaunchUIContextProvider*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ILaunchUIContextProvider*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def update_context(this : ILaunchUIContextProvider*, context : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_context.call(this, context)
    end

  end

  @[Extern]
  record INewMenuClientVtbl,
    query_interface : Proc(INewMenuClient*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INewMenuClient*, UInt32),
    release : Proc(INewMenuClient*, UInt32),
    include_items : Proc(INewMenuClient*, Int32*, Win32cr::Foundation::HRESULT),
    select_and_edit_item : Proc(INewMenuClient*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INewMenuClient, lpVtbl : INewMenuClientVtbl* do
    GUID = LibC::GUID.new(0xdcb07fdc_u32, 0x3bb5_u16, 0x451c_u16, StaticArray[0x90_u8, 0xbe_u8, 0x96_u8, 0x66_u8, 0x44_u8, 0xfe_u8, 0xd7_u8, 0xb0_u8])
    def query_interface(this : INewMenuClient*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INewMenuClient*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INewMenuClient*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def include_items(this : INewMenuClient*, pflags : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.include_items.call(this, pflags)
    end
    def select_and_edit_item(this : INewMenuClient*, pidlItem : Win32cr::UI::Shell::Common::ITEMIDLIST*, flags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_and_edit_item.call(this, pidlItem, flags)
    end

  end

  @[Extern]
  record IInitializeWithBindCtxVtbl,
    query_interface : Proc(IInitializeWithBindCtx*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInitializeWithBindCtx*, UInt32),
    release : Proc(IInitializeWithBindCtx*, UInt32),
    initialize__ : Proc(IInitializeWithBindCtx*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInitializeWithBindCtx, lpVtbl : IInitializeWithBindCtxVtbl* do
    GUID = LibC::GUID.new(0x71c0d2bc_u32, 0x726d_u16, 0x45cc_u16, StaticArray[0xa6_u8, 0xc0_u8, 0x2e_u8, 0x31_u8, 0xc1_u8, 0xdb_u8, 0x21_u8, 0x59_u8])
    def query_interface(this : IInitializeWithBindCtx*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInitializeWithBindCtx*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInitializeWithBindCtx*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IInitializeWithBindCtx*, pbc : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, pbc)
    end

  end

  @[Extern]
  record IShellItemFilterVtbl,
    query_interface : Proc(IShellItemFilter*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellItemFilter*, UInt32),
    release : Proc(IShellItemFilter*, UInt32),
    include_item : Proc(IShellItemFilter*, Void*, Win32cr::Foundation::HRESULT),
    get_enum_flags_for_item : Proc(IShellItemFilter*, Void*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellItemFilter, lpVtbl : IShellItemFilterVtbl* do
    GUID = LibC::GUID.new(0x2659b475_u32, 0xeeb8_u16, 0x48b7_u16, StaticArray[0x8f_u8, 0x7_u8, 0xb3_u8, 0x78_u8, 0x81_u8, 0xf_u8, 0x48_u8, 0xcf_u8])
    def query_interface(this : IShellItemFilter*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellItemFilter*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellItemFilter*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def include_item(this : IShellItemFilter*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.include_item.call(this, psi)
    end
    def get_enum_flags_for_item(this : IShellItemFilter*, psi : Void*, pgrfFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_enum_flags_for_item.call(this, psi, pgrfFlags)
    end

  end

  @[Extern]
  record INameSpaceTreeControlVtbl,
    query_interface : Proc(INameSpaceTreeControl*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INameSpaceTreeControl*, UInt32),
    release : Proc(INameSpaceTreeControl*, UInt32),
    initialize__ : Proc(INameSpaceTreeControl*, Win32cr::Foundation::HWND, Win32cr::Foundation::RECT*, UInt32, Win32cr::Foundation::HRESULT),
    tree_advise : Proc(INameSpaceTreeControl*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    tree_unadvise : Proc(INameSpaceTreeControl*, UInt32, Win32cr::Foundation::HRESULT),
    append_root : Proc(INameSpaceTreeControl*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    insert_root : Proc(INameSpaceTreeControl*, Int32, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    remove_root : Proc(INameSpaceTreeControl*, Void*, Win32cr::Foundation::HRESULT),
    remove_all_roots : Proc(INameSpaceTreeControl*, Win32cr::Foundation::HRESULT),
    get_root_items : Proc(INameSpaceTreeControl*, Void**, Win32cr::Foundation::HRESULT),
    set_item_state : Proc(INameSpaceTreeControl*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_item_state : Proc(INameSpaceTreeControl*, Void*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_selected_items : Proc(INameSpaceTreeControl*, Void**, Win32cr::Foundation::HRESULT),
    get_item_custom_state : Proc(INameSpaceTreeControl*, Void*, Int32*, Win32cr::Foundation::HRESULT),
    set_item_custom_state : Proc(INameSpaceTreeControl*, Void*, Int32, Win32cr::Foundation::HRESULT),
    ensure_item_visible : Proc(INameSpaceTreeControl*, Void*, Win32cr::Foundation::HRESULT),
    set_theme : Proc(INameSpaceTreeControl*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_next_item : Proc(INameSpaceTreeControl*, Void*, Win32cr::UI::Shell::NSTCGNI, Void**, Win32cr::Foundation::HRESULT),
    hit_test : Proc(INameSpaceTreeControl*, Win32cr::Foundation::POINT*, Void**, Win32cr::Foundation::HRESULT),
    get_item_rect : Proc(INameSpaceTreeControl*, Void*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    collapse_all : Proc(INameSpaceTreeControl*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INameSpaceTreeControl, lpVtbl : INameSpaceTreeControlVtbl* do
    GUID = LibC::GUID.new(0x28212a3_u32, 0xb627_u16, 0x47e9_u16, StaticArray[0x88_u8, 0x56_u8, 0xc1_u8, 0x42_u8, 0x65_u8, 0x55_u8, 0x4e_u8, 0x4f_u8])
    def query_interface(this : INameSpaceTreeControl*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INameSpaceTreeControl*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INameSpaceTreeControl*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : INameSpaceTreeControl*, hwndParent : Win32cr::Foundation::HWND, prc : Win32cr::Foundation::RECT*, nsctsFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, hwndParent, prc, nsctsFlags)
    end
    def tree_advise(this : INameSpaceTreeControl*, punk : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tree_advise.call(this, punk, pdwCookie)
    end
    def tree_unadvise(this : INameSpaceTreeControl*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tree_unadvise.call(this, dwCookie)
    end
    def append_root(this : INameSpaceTreeControl*, psiRoot : Void*, grfEnumFlags : UInt32, grfRootStyle : UInt32, pif : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.append_root.call(this, psiRoot, grfEnumFlags, grfRootStyle, pif)
    end
    def insert_root(this : INameSpaceTreeControl*, iIndex : Int32, psiRoot : Void*, grfEnumFlags : UInt32, grfRootStyle : UInt32, pif : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.insert_root.call(this, iIndex, psiRoot, grfEnumFlags, grfRootStyle, pif)
    end
    def remove_root(this : INameSpaceTreeControl*, psiRoot : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_root.call(this, psiRoot)
    end
    def remove_all_roots(this : INameSpaceTreeControl*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_all_roots.call(this)
    end
    def get_root_items(this : INameSpaceTreeControl*, ppsiaRootItems : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_root_items.call(this, ppsiaRootItems)
    end
    def set_item_state(this : INameSpaceTreeControl*, psi : Void*, nstcisMask : UInt32, nstcisFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_item_state.call(this, psi, nstcisMask, nstcisFlags)
    end
    def get_item_state(this : INameSpaceTreeControl*, psi : Void*, nstcisMask : UInt32, pnstcisFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_state.call(this, psi, nstcisMask, pnstcisFlags)
    end
    def get_selected_items(this : INameSpaceTreeControl*, psiaItems : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_selected_items.call(this, psiaItems)
    end
    def get_item_custom_state(this : INameSpaceTreeControl*, psi : Void*, piStateNumber : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_custom_state.call(this, psi, piStateNumber)
    end
    def set_item_custom_state(this : INameSpaceTreeControl*, psi : Void*, iStateNumber : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_item_custom_state.call(this, psi, iStateNumber)
    end
    def ensure_item_visible(this : INameSpaceTreeControl*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ensure_item_visible.call(this, psi)
    end
    def set_theme(this : INameSpaceTreeControl*, pszTheme : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_theme.call(this, pszTheme)
    end
    def get_next_item(this : INameSpaceTreeControl*, psi : Void*, nstcgi : Win32cr::UI::Shell::NSTCGNI, ppsiNext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_next_item.call(this, psi, nstcgi, ppsiNext)
    end
    def hit_test(this : INameSpaceTreeControl*, ppt : Win32cr::Foundation::POINT*, ppsiOut : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test.call(this, ppt, ppsiOut)
    end
    def get_item_rect(this : INameSpaceTreeControl*, psi : Void*, prect : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_rect.call(this, psi, prect)
    end
    def collapse_all(this : INameSpaceTreeControl*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.collapse_all.call(this)
    end

  end

  @[Extern]
  record INameSpaceTreeControlFolderCapabilitiesVtbl,
    query_interface : Proc(INameSpaceTreeControlFolderCapabilities*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INameSpaceTreeControlFolderCapabilities*, UInt32),
    release : Proc(INameSpaceTreeControlFolderCapabilities*, UInt32),
    get_folder_capabilities : Proc(INameSpaceTreeControlFolderCapabilities*, Win32cr::UI::Shell::NSTCFOLDERCAPABILITIES, Win32cr::UI::Shell::NSTCFOLDERCAPABILITIES*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INameSpaceTreeControlFolderCapabilities, lpVtbl : INameSpaceTreeControlFolderCapabilitiesVtbl* do
    GUID = LibC::GUID.new(0xe9701183_u32, 0xe6b3_u16, 0x4ff2_u16, StaticArray[0x85_u8, 0x68_u8, 0x81_u8, 0x36_u8, 0x15_u8, 0xfe_u8, 0xc7_u8, 0xbe_u8])
    def query_interface(this : INameSpaceTreeControlFolderCapabilities*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INameSpaceTreeControlFolderCapabilities*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INameSpaceTreeControlFolderCapabilities*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_folder_capabilities(this : INameSpaceTreeControlFolderCapabilities*, nfcMask : Win32cr::UI::Shell::NSTCFOLDERCAPABILITIES, pnfcValue : Win32cr::UI::Shell::NSTCFOLDERCAPABILITIES*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder_capabilities.call(this, nfcMask, pnfcValue)
    end

  end

  @[Extern]
  record IPreviewHandlerVtbl,
    query_interface : Proc(IPreviewHandler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPreviewHandler*, UInt32),
    release : Proc(IPreviewHandler*, UInt32),
    set_window : Proc(IPreviewHandler*, Win32cr::Foundation::HWND, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    set_rect : Proc(IPreviewHandler*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    do_preview : Proc(IPreviewHandler*, Win32cr::Foundation::HRESULT),
    unload : Proc(IPreviewHandler*, Win32cr::Foundation::HRESULT),
    set_focus : Proc(IPreviewHandler*, Win32cr::Foundation::HRESULT),
    query_focus : Proc(IPreviewHandler*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    translate_accelerator : Proc(IPreviewHandler*, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPreviewHandler, lpVtbl : IPreviewHandlerVtbl* do
    GUID = LibC::GUID.new(0x8895b1c6_u32, 0xb41f_u16, 0x4c1c_u16, StaticArray[0xa5_u8, 0x62_u8, 0xd_u8, 0x56_u8, 0x42_u8, 0x50_u8, 0x83_u8, 0x6f_u8])
    def query_interface(this : IPreviewHandler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPreviewHandler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPreviewHandler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_window(this : IPreviewHandler*, hwnd : Win32cr::Foundation::HWND, prc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_window.call(this, hwnd, prc)
    end
    def set_rect(this : IPreviewHandler*, prc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_rect.call(this, prc)
    end
    def do_preview(this : IPreviewHandler*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.do_preview.call(this)
    end
    def unload(this : IPreviewHandler*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unload.call(this)
    end
    def set_focus(this : IPreviewHandler*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_focus.call(this)
    end
    def query_focus(this : IPreviewHandler*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_focus.call(this, phwnd)
    end
    def translate_accelerator(this : IPreviewHandler*, pmsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_accelerator.call(this, pmsg)
    end

  end

  @[Extern]
  record IPreviewHandlerFrameVtbl,
    query_interface : Proc(IPreviewHandlerFrame*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPreviewHandlerFrame*, UInt32),
    release : Proc(IPreviewHandlerFrame*, UInt32),
    get_window_context : Proc(IPreviewHandlerFrame*, Win32cr::UI::Shell::PREVIEWHANDLERFRAMEINFO*, Win32cr::Foundation::HRESULT),
    translate_accelerator : Proc(IPreviewHandlerFrame*, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPreviewHandlerFrame, lpVtbl : IPreviewHandlerFrameVtbl* do
    GUID = LibC::GUID.new(0xfec87aaf_u32, 0x35f9_u16, 0x447a_u16, StaticArray[0xad_u8, 0xb7_u8, 0x20_u8, 0x23_u8, 0x44_u8, 0x91_u8, 0x40_u8, 0x1a_u8])
    def query_interface(this : IPreviewHandlerFrame*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPreviewHandlerFrame*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPreviewHandlerFrame*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window_context(this : IPreviewHandlerFrame*, pinfo : Win32cr::UI::Shell::PREVIEWHANDLERFRAMEINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window_context.call(this, pinfo)
    end
    def translate_accelerator(this : IPreviewHandlerFrame*, pmsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_accelerator.call(this, pmsg)
    end

  end

  @[Extern]
  record IExplorerPaneVisibilityVtbl,
    query_interface : Proc(IExplorerPaneVisibility*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExplorerPaneVisibility*, UInt32),
    release : Proc(IExplorerPaneVisibility*, UInt32),
    get_pane_state : Proc(IExplorerPaneVisibility*, LibC::GUID*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExplorerPaneVisibility, lpVtbl : IExplorerPaneVisibilityVtbl* do
    GUID = LibC::GUID.new(0xe07010ec_u32, 0xbc17_u16, 0x44c0_u16, StaticArray[0x97_u8, 0xb0_u8, 0x46_u8, 0xc7_u8, 0xc9_u8, 0x5b_u8, 0x9e_u8, 0xdc_u8])
    def query_interface(this : IExplorerPaneVisibility*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExplorerPaneVisibility*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExplorerPaneVisibility*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_pane_state(this : IExplorerPaneVisibility*, ep : LibC::GUID*, peps : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_pane_state.call(this, ep, peps)
    end

  end

  @[Extern]
  record IContextMenuCBVtbl,
    query_interface : Proc(IContextMenuCB*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IContextMenuCB*, UInt32),
    release : Proc(IContextMenuCB*, UInt32),
    call_back : Proc(IContextMenuCB*, Void*, Win32cr::Foundation::HWND, Void*, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IContextMenuCB, lpVtbl : IContextMenuCBVtbl* do
    GUID = LibC::GUID.new(0x3409e930_u32, 0x5a39_u16, 0x11d1_u16, StaticArray[0x83_u8, 0xfa_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xd_u8, 0xc8_u8, 0x49_u8])
    def query_interface(this : IContextMenuCB*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IContextMenuCB*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IContextMenuCB*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def call_back(this : IContextMenuCB*, psf : Void*, hwndOwner : Win32cr::Foundation::HWND, pdtobj : Void*, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.call_back.call(this, psf, hwndOwner, pdtobj, uMsg, wParam, lParam)
    end

  end

  @[Extern]
  record IDefaultExtractIconInitVtbl,
    query_interface : Proc(IDefaultExtractIconInit*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDefaultExtractIconInit*, UInt32),
    release : Proc(IDefaultExtractIconInit*, UInt32),
    set_flags : Proc(IDefaultExtractIconInit*, UInt32, Win32cr::Foundation::HRESULT),
    set_key : Proc(IDefaultExtractIconInit*, Win32cr::System::Registry::HKEY, Win32cr::Foundation::HRESULT),
    set_normal_icon : Proc(IDefaultExtractIconInit*, Win32cr::Foundation::PWSTR, Int32, Win32cr::Foundation::HRESULT),
    set_open_icon : Proc(IDefaultExtractIconInit*, Win32cr::Foundation::PWSTR, Int32, Win32cr::Foundation::HRESULT),
    set_shortcut_icon : Proc(IDefaultExtractIconInit*, Win32cr::Foundation::PWSTR, Int32, Win32cr::Foundation::HRESULT),
    set_default_icon : Proc(IDefaultExtractIconInit*, Win32cr::Foundation::PWSTR, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDefaultExtractIconInit, lpVtbl : IDefaultExtractIconInitVtbl* do
    GUID = LibC::GUID.new(0x41ded17d_u32, 0xd6b3_u16, 0x4261_u16, StaticArray[0x99_u8, 0x7d_u8, 0x88_u8, 0xc6_u8, 0xe_u8, 0x4b_u8, 0x1d_u8, 0x58_u8])
    def query_interface(this : IDefaultExtractIconInit*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDefaultExtractIconInit*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDefaultExtractIconInit*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_flags(this : IDefaultExtractIconInit*, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flags.call(this, uFlags)
    end
    def set_key(this : IDefaultExtractIconInit*, hkey : Win32cr::System::Registry::HKEY) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_key.call(this, hkey)
    end
    def set_normal_icon(this : IDefaultExtractIconInit*, pszFile : Win32cr::Foundation::PWSTR, iIcon : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_normal_icon.call(this, pszFile, iIcon)
    end
    def set_open_icon(this : IDefaultExtractIconInit*, pszFile : Win32cr::Foundation::PWSTR, iIcon : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_open_icon.call(this, pszFile, iIcon)
    end
    def set_shortcut_icon(this : IDefaultExtractIconInit*, pszFile : Win32cr::Foundation::PWSTR, iIcon : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_shortcut_icon.call(this, pszFile, iIcon)
    end
    def set_default_icon(this : IDefaultExtractIconInit*, pszFile : Win32cr::Foundation::PWSTR, iIcon : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_default_icon.call(this, pszFile, iIcon)
    end

  end

  @[Extern]
  record IExplorerCommandVtbl,
    query_interface : Proc(IExplorerCommand*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExplorerCommand*, UInt32),
    release : Proc(IExplorerCommand*, UInt32),
    get_title : Proc(IExplorerCommand*, Void*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_icon : Proc(IExplorerCommand*, Void*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_tool_tip : Proc(IExplorerCommand*, Void*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_canonical_name : Proc(IExplorerCommand*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_state : Proc(IExplorerCommand*, Void*, Win32cr::Foundation::BOOL, UInt32*, Win32cr::Foundation::HRESULT),
    invoke : Proc(IExplorerCommand*, Void*, Void*, Win32cr::Foundation::HRESULT),
    get_flags : Proc(IExplorerCommand*, UInt32*, Win32cr::Foundation::HRESULT),
    enum_sub_commands : Proc(IExplorerCommand*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExplorerCommand, lpVtbl : IExplorerCommandVtbl* do
    GUID = LibC::GUID.new(0xa08ce4d0_u32, 0xfa25_u16, 0x44ab_u16, StaticArray[0xb5_u8, 0x7c_u8, 0xc7_u8, 0xb1_u8, 0xc3_u8, 0x23_u8, 0xe0_u8, 0xb9_u8])
    def query_interface(this : IExplorerCommand*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExplorerCommand*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExplorerCommand*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_title(this : IExplorerCommand*, psiItemArray : Void*, ppszName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_title.call(this, psiItemArray, ppszName)
    end
    def get_icon(this : IExplorerCommand*, psiItemArray : Void*, ppszIcon : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_icon.call(this, psiItemArray, ppszIcon)
    end
    def get_tool_tip(this : IExplorerCommand*, psiItemArray : Void*, ppszInfotip : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_tool_tip.call(this, psiItemArray, ppszInfotip)
    end
    def get_canonical_name(this : IExplorerCommand*, pguidCommandName : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_canonical_name.call(this, pguidCommandName)
    end
    def get_state(this : IExplorerCommand*, psiItemArray : Void*, fOkToBeSlow : Win32cr::Foundation::BOOL, pCmdState : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_state.call(this, psiItemArray, fOkToBeSlow, pCmdState)
    end
    def invoke(this : IExplorerCommand*, psiItemArray : Void*, pbc : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke.call(this, psiItemArray, pbc)
    end
    def get_flags(this : IExplorerCommand*, pFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_flags.call(this, pFlags)
    end
    def enum_sub_commands(this : IExplorerCommand*, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_sub_commands.call(this, ppEnum)
    end

  end

  @[Extern]
  record IExplorerCommandStateVtbl,
    query_interface : Proc(IExplorerCommandState*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExplorerCommandState*, UInt32),
    release : Proc(IExplorerCommandState*, UInt32),
    get_state : Proc(IExplorerCommandState*, Void*, Win32cr::Foundation::BOOL, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExplorerCommandState, lpVtbl : IExplorerCommandStateVtbl* do
    GUID = LibC::GUID.new(0xbddacb60_u32, 0x7657_u16, 0x47ae_u16, StaticArray[0x84_u8, 0x45_u8, 0xd2_u8, 0x3e_u8, 0x1a_u8, 0xcf_u8, 0x82_u8, 0xae_u8])
    def query_interface(this : IExplorerCommandState*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExplorerCommandState*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExplorerCommandState*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_state(this : IExplorerCommandState*, psiItemArray : Void*, fOkToBeSlow : Win32cr::Foundation::BOOL, pCmdState : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_state.call(this, psiItemArray, fOkToBeSlow, pCmdState)
    end

  end

  @[Extern]
  record IInitializeCommandVtbl,
    query_interface : Proc(IInitializeCommand*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInitializeCommand*, UInt32),
    release : Proc(IInitializeCommand*, UInt32),
    initialize__ : Proc(IInitializeCommand*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInitializeCommand, lpVtbl : IInitializeCommandVtbl* do
    GUID = LibC::GUID.new(0x85075acf_u32, 0x231f_u16, 0x40ea_u16, StaticArray[0x96_u8, 0x10_u8, 0xd2_u8, 0x6b_u8, 0x7b_u8, 0x58_u8, 0xf6_u8, 0x38_u8])
    def query_interface(this : IInitializeCommand*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInitializeCommand*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInitializeCommand*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IInitializeCommand*, pszCommandName : Win32cr::Foundation::PWSTR, ppb : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, pszCommandName, ppb)
    end

  end

  @[Extern]
  record IEnumExplorerCommandVtbl,
    query_interface : Proc(IEnumExplorerCommand*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumExplorerCommand*, UInt32),
    release : Proc(IEnumExplorerCommand*, UInt32),
    next__ : Proc(IEnumExplorerCommand*, UInt32, Void**, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumExplorerCommand*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumExplorerCommand*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumExplorerCommand*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumExplorerCommand, lpVtbl : IEnumExplorerCommandVtbl* do
    GUID = LibC::GUID.new(0xa88826f8_u32, 0x186f_u16, 0x4987_u16, StaticArray[0xaa_u8, 0xde_u8, 0xea_u8, 0xc_u8, 0xef_u8, 0x8f_u8, 0xbf_u8, 0xe8_u8])
    def query_interface(this : IEnumExplorerCommand*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumExplorerCommand*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumExplorerCommand*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumExplorerCommand*, celt : UInt32, pUICommand : Void**, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, pUICommand, pceltFetched)
    end
    def skip(this : IEnumExplorerCommand*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumExplorerCommand*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumExplorerCommand*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppenum)
    end

  end

  @[Extern]
  record IExplorerCommandProviderVtbl,
    query_interface : Proc(IExplorerCommandProvider*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExplorerCommandProvider*, UInt32),
    release : Proc(IExplorerCommandProvider*, UInt32),
    get_commands : Proc(IExplorerCommandProvider*, Void*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_command : Proc(IExplorerCommandProvider*, LibC::GUID*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExplorerCommandProvider, lpVtbl : IExplorerCommandProviderVtbl* do
    GUID = LibC::GUID.new(0x64961751_u32, 0x835_u16, 0x43c0_u16, StaticArray[0x8f_u8, 0xfe_u8, 0xd5_u8, 0x76_u8, 0x86_u8, 0x53_u8, 0xe_u8, 0x64_u8])
    def query_interface(this : IExplorerCommandProvider*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExplorerCommandProvider*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExplorerCommandProvider*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_commands(this : IExplorerCommandProvider*, punkSite : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_commands.call(this, punkSite, riid, ppv)
    end
    def get_command(this : IExplorerCommandProvider*, rguidCommandId : LibC::GUID*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_command.call(this, rguidCommandId, riid, ppv)
    end

  end

  @[Extern]
  record IOpenControlPanelVtbl,
    query_interface : Proc(IOpenControlPanel*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IOpenControlPanel*, UInt32),
    release : Proc(IOpenControlPanel*, UInt32),
    open : Proc(IOpenControlPanel*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT),
    get_path : Proc(IOpenControlPanel*, Win32cr::Foundation::PWSTR, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_current_view : Proc(IOpenControlPanel*, Win32cr::UI::Shell::CPVIEW*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IOpenControlPanel, lpVtbl : IOpenControlPanelVtbl* do
    GUID = LibC::GUID.new(0xd11ad862_u32, 0x66de_u16, 0x4df4_u16, StaticArray[0xbf_u8, 0x6c_u8, 0x1f_u8, 0x56_u8, 0x21_u8, 0x99_u8, 0x6a_u8, 0xf1_u8])
    def query_interface(this : IOpenControlPanel*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IOpenControlPanel*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IOpenControlPanel*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def open(this : IOpenControlPanel*, pszName : Win32cr::Foundation::PWSTR, pszPage : Win32cr::Foundation::PWSTR, punkSite : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open.call(this, pszName, pszPage, punkSite)
    end
    def get_path(this : IOpenControlPanel*, pszName : Win32cr::Foundation::PWSTR, pszPath : UInt16*, cchPath : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_path.call(this, pszName, pszPath, cchPath)
    end
    def get_current_view(this : IOpenControlPanel*, pView : Win32cr::UI::Shell::CPVIEW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_view.call(this, pView)
    end

  end

  @[Extern]
  record IFileSystemBindDataVtbl,
    query_interface : Proc(IFileSystemBindData*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFileSystemBindData*, UInt32),
    release : Proc(IFileSystemBindData*, UInt32),
    set_find_data : Proc(IFileSystemBindData*, Win32cr::Storage::FileSystem::WIN32_FIND_DATAW*, Win32cr::Foundation::HRESULT),
    get_find_data : Proc(IFileSystemBindData*, Win32cr::Storage::FileSystem::WIN32_FIND_DATAW*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFileSystemBindData, lpVtbl : IFileSystemBindDataVtbl* do
    GUID = LibC::GUID.new(0x1e18d10_u32, 0x4d8b_u16, 0x11d2_u16, StaticArray[0x85_u8, 0x5d_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x5_u8, 0x93_u8, 0x67_u8])
    def query_interface(this : IFileSystemBindData*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFileSystemBindData*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFileSystemBindData*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_find_data(this : IFileSystemBindData*, pfd : Win32cr::Storage::FileSystem::WIN32_FIND_DATAW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_find_data.call(this, pfd)
    end
    def get_find_data(this : IFileSystemBindData*, pfd : Win32cr::Storage::FileSystem::WIN32_FIND_DATAW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_find_data.call(this, pfd)
    end

  end

  @[Extern]
  record IFileSystemBindData2Vtbl,
    query_interface : Proc(IFileSystemBindData2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFileSystemBindData2*, UInt32),
    release : Proc(IFileSystemBindData2*, UInt32),
    set_find_data : Proc(IFileSystemBindData2*, Win32cr::Storage::FileSystem::WIN32_FIND_DATAW*, Win32cr::Foundation::HRESULT),
    get_find_data : Proc(IFileSystemBindData2*, Win32cr::Storage::FileSystem::WIN32_FIND_DATAW*, Win32cr::Foundation::HRESULT),
    set_file_id : Proc(IFileSystemBindData2*, Win32cr::Foundation::LARGE_INTEGER, Win32cr::Foundation::HRESULT),
    get_file_id : Proc(IFileSystemBindData2*, Win32cr::Foundation::LARGE_INTEGER*, Win32cr::Foundation::HRESULT),
    set_junction_clsid : Proc(IFileSystemBindData2*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_junction_clsid : Proc(IFileSystemBindData2*, LibC::GUID*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFileSystemBindData2, lpVtbl : IFileSystemBindData2Vtbl* do
    GUID = LibC::GUID.new(0x3acf075f_u32, 0x71db_u16, 0x4afa_u16, StaticArray[0x81_u8, 0xf0_u8, 0x3f_u8, 0xc4_u8, 0xfd_u8, 0xf2_u8, 0xa5_u8, 0xb8_u8])
    def query_interface(this : IFileSystemBindData2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFileSystemBindData2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFileSystemBindData2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_find_data(this : IFileSystemBindData2*, pfd : Win32cr::Storage::FileSystem::WIN32_FIND_DATAW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_find_data.call(this, pfd)
    end
    def get_find_data(this : IFileSystemBindData2*, pfd : Win32cr::Storage::FileSystem::WIN32_FIND_DATAW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_find_data.call(this, pfd)
    end
    def set_file_id(this : IFileSystemBindData2*, liFileID : Win32cr::Foundation::LARGE_INTEGER) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_id.call(this, liFileID)
    end
    def get_file_id(this : IFileSystemBindData2*, pliFileID : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_id.call(this, pliFileID)
    end
    def set_junction_clsid(this : IFileSystemBindData2*, clsid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_junction_clsid.call(this, clsid)
    end
    def get_junction_clsid(this : IFileSystemBindData2*, pclsid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_junction_clsid.call(this, pclsid)
    end

  end

  @[Extern]
  record ICustomDestinationListVtbl,
    query_interface : Proc(ICustomDestinationList*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICustomDestinationList*, UInt32),
    release : Proc(ICustomDestinationList*, UInt32),
    set_app_id : Proc(ICustomDestinationList*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    begin_list : Proc(ICustomDestinationList*, UInt32*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    append_category : Proc(ICustomDestinationList*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT),
    append_known_category : Proc(ICustomDestinationList*, Win32cr::UI::Shell::KNOWNDESTCATEGORY, Win32cr::Foundation::HRESULT),
    add_user_tasks : Proc(ICustomDestinationList*, Void*, Win32cr::Foundation::HRESULT),
    commit_list : Proc(ICustomDestinationList*, Win32cr::Foundation::HRESULT),
    get_removed_destinations : Proc(ICustomDestinationList*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    delete_list : Proc(ICustomDestinationList*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    abort_list : Proc(ICustomDestinationList*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICustomDestinationList, lpVtbl : ICustomDestinationListVtbl* do
    GUID = LibC::GUID.new(0x6332debf_u32, 0x87b5_u16, 0x4670_u16, StaticArray[0x90_u8, 0xc0_u8, 0x5e_u8, 0x57_u8, 0xb4_u8, 0x8_u8, 0xa4_u8, 0x9e_u8])
    def query_interface(this : ICustomDestinationList*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICustomDestinationList*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICustomDestinationList*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_app_id(this : ICustomDestinationList*, pszAppID : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_app_id.call(this, pszAppID)
    end
    def begin_list(this : ICustomDestinationList*, pcMinSlots : UInt32*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.begin_list.call(this, pcMinSlots, riid, ppv)
    end
    def append_category(this : ICustomDestinationList*, pszCategory : Win32cr::Foundation::PWSTR, poa : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.append_category.call(this, pszCategory, poa)
    end
    def append_known_category(this : ICustomDestinationList*, category : Win32cr::UI::Shell::KNOWNDESTCATEGORY) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.append_known_category.call(this, category)
    end
    def add_user_tasks(this : ICustomDestinationList*, poa : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_user_tasks.call(this, poa)
    end
    def commit_list(this : ICustomDestinationList*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.commit_list.call(this)
    end
    def get_removed_destinations(this : ICustomDestinationList*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_removed_destinations.call(this, riid, ppv)
    end
    def delete_list(this : ICustomDestinationList*, pszAppID : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_list.call(this, pszAppID)
    end
    def abort_list(this : ICustomDestinationList*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.abort_list.call(this)
    end

  end

  @[Extern]
  record IApplicationDestinationsVtbl,
    query_interface : Proc(IApplicationDestinations*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IApplicationDestinations*, UInt32),
    release : Proc(IApplicationDestinations*, UInt32),
    set_app_id : Proc(IApplicationDestinations*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    remove_destination : Proc(IApplicationDestinations*, Void*, Win32cr::Foundation::HRESULT),
    remove_all_destinations : Proc(IApplicationDestinations*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IApplicationDestinations, lpVtbl : IApplicationDestinationsVtbl* do
    GUID = LibC::GUID.new(0x12337d35_u32, 0x94c6_u16, 0x48a0_u16, StaticArray[0xbc_u8, 0xe7_u8, 0x6a_u8, 0x9c_u8, 0x69_u8, 0xd4_u8, 0xd6_u8, 0x0_u8])
    def query_interface(this : IApplicationDestinations*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IApplicationDestinations*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IApplicationDestinations*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_app_id(this : IApplicationDestinations*, pszAppID : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_app_id.call(this, pszAppID)
    end
    def remove_destination(this : IApplicationDestinations*, punk : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_destination.call(this, punk)
    end
    def remove_all_destinations(this : IApplicationDestinations*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_all_destinations.call(this)
    end

  end

  @[Extern]
  record IApplicationDocumentListsVtbl,
    query_interface : Proc(IApplicationDocumentLists*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IApplicationDocumentLists*, UInt32),
    release : Proc(IApplicationDocumentLists*, UInt32),
    set_app_id : Proc(IApplicationDocumentLists*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_list : Proc(IApplicationDocumentLists*, Win32cr::UI::Shell::APPDOCLISTTYPE, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IApplicationDocumentLists, lpVtbl : IApplicationDocumentListsVtbl* do
    GUID = LibC::GUID.new(0x3c594f9f_u32, 0x9f30_u16, 0x47a1_u16, StaticArray[0x97_u8, 0x9a_u8, 0xc9_u8, 0xe8_u8, 0x3d_u8, 0x3d_u8, 0xa_u8, 0x6_u8])
    def query_interface(this : IApplicationDocumentLists*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IApplicationDocumentLists*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IApplicationDocumentLists*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_app_id(this : IApplicationDocumentLists*, pszAppID : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_app_id.call(this, pszAppID)
    end
    def get_list(this : IApplicationDocumentLists*, listtype : Win32cr::UI::Shell::APPDOCLISTTYPE, cItemsDesired : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_list.call(this, listtype, cItemsDesired, riid, ppv)
    end

  end

  @[Extern]
  record IObjectWithAppUserModelIDVtbl,
    query_interface : Proc(IObjectWithAppUserModelID*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IObjectWithAppUserModelID*, UInt32),
    release : Proc(IObjectWithAppUserModelID*, UInt32),
    set_app_id : Proc(IObjectWithAppUserModelID*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_app_id : Proc(IObjectWithAppUserModelID*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IObjectWithAppUserModelID, lpVtbl : IObjectWithAppUserModelIDVtbl* do
    GUID = LibC::GUID.new(0x36db0196_u32, 0x9665_u16, 0x46d1_u16, StaticArray[0x9b_u8, 0xa7_u8, 0xd3_u8, 0x70_u8, 0x9e_u8, 0xec_u8, 0xf9_u8, 0xed_u8])
    def query_interface(this : IObjectWithAppUserModelID*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IObjectWithAppUserModelID*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IObjectWithAppUserModelID*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_app_id(this : IObjectWithAppUserModelID*, pszAppID : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_app_id.call(this, pszAppID)
    end
    def get_app_id(this : IObjectWithAppUserModelID*, ppszAppID : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_app_id.call(this, ppszAppID)
    end

  end

  @[Extern]
  record IObjectWithProgIDVtbl,
    query_interface : Proc(IObjectWithProgID*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IObjectWithProgID*, UInt32),
    release : Proc(IObjectWithProgID*, UInt32),
    set_prog_id : Proc(IObjectWithProgID*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_prog_id : Proc(IObjectWithProgID*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IObjectWithProgID, lpVtbl : IObjectWithProgIDVtbl* do
    GUID = LibC::GUID.new(0x71e806fb_u32, 0x8dee_u16, 0x46fc_u16, StaticArray[0xbf_u8, 0x8c_u8, 0x77_u8, 0x48_u8, 0xa8_u8, 0xa1_u8, 0xae_u8, 0x13_u8])
    def query_interface(this : IObjectWithProgID*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IObjectWithProgID*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IObjectWithProgID*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_prog_id(this : IObjectWithProgID*, pszProgID : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_prog_id.call(this, pszProgID)
    end
    def get_prog_id(this : IObjectWithProgID*, ppszProgID : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_prog_id.call(this, ppszProgID)
    end

  end

  @[Extern]
  record IUpdateIDListVtbl,
    query_interface : Proc(IUpdateIDList*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IUpdateIDList*, UInt32),
    release : Proc(IUpdateIDList*, UInt32),
    update : Proc(IUpdateIDList*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IUpdateIDList, lpVtbl : IUpdateIDListVtbl* do
    GUID = LibC::GUID.new(0x6589b6d2_u32, 0x5f8d_u16, 0x4b9e_u16, StaticArray[0xb7_u8, 0xe0_u8, 0x23_u8, 0xcd_u8, 0xd9_u8, 0x71_u8, 0x7d_u8, 0x8c_u8])
    def query_interface(this : IUpdateIDList*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IUpdateIDList*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IUpdateIDList*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def update(this : IUpdateIDList*, pbc : Void*, pidlIn : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppidlOut : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update.call(this, pbc, pidlIn, ppidlOut)
    end

  end

  @[Extern]
  record IDesktopWallpaperVtbl,
    query_interface : Proc(IDesktopWallpaper*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDesktopWallpaper*, UInt32),
    release : Proc(IDesktopWallpaper*, UInt32),
    set_wallpaper : Proc(IDesktopWallpaper*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_wallpaper : Proc(IDesktopWallpaper*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_monitor_device_path_at : Proc(IDesktopWallpaper*, UInt32, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_monitor_device_path_count : Proc(IDesktopWallpaper*, UInt32*, Win32cr::Foundation::HRESULT),
    get_monitor_rect : Proc(IDesktopWallpaper*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    set_background_color : Proc(IDesktopWallpaper*, UInt32, Win32cr::Foundation::HRESULT),
    get_background_color : Proc(IDesktopWallpaper*, UInt32*, Win32cr::Foundation::HRESULT),
    set_position : Proc(IDesktopWallpaper*, Win32cr::UI::Shell::DESKTOP_WALLPAPER_POSITION, Win32cr::Foundation::HRESULT),
    get_position : Proc(IDesktopWallpaper*, Win32cr::UI::Shell::DESKTOP_WALLPAPER_POSITION*, Win32cr::Foundation::HRESULT),
    set_slideshow : Proc(IDesktopWallpaper*, Void*, Win32cr::Foundation::HRESULT),
    get_slideshow : Proc(IDesktopWallpaper*, Void**, Win32cr::Foundation::HRESULT),
    set_slideshow_options : Proc(IDesktopWallpaper*, Win32cr::UI::Shell::DESKTOP_SLIDESHOW_OPTIONS, UInt32, Win32cr::Foundation::HRESULT),
    get_slideshow_options : Proc(IDesktopWallpaper*, Win32cr::UI::Shell::DESKTOP_SLIDESHOW_OPTIONS*, UInt32*, Win32cr::Foundation::HRESULT),
    advance_slideshow : Proc(IDesktopWallpaper*, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::DESKTOP_SLIDESHOW_DIRECTION, Win32cr::Foundation::HRESULT),
    get_status : Proc(IDesktopWallpaper*, Win32cr::UI::Shell::DESKTOP_SLIDESHOW_STATE*, Win32cr::Foundation::HRESULT),
    enable : Proc(IDesktopWallpaper*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDesktopWallpaper, lpVtbl : IDesktopWallpaperVtbl* do
    GUID = LibC::GUID.new(0xb92b56a9_u32, 0x8b55_u16, 0x4e14_u16, StaticArray[0x9a_u8, 0x89_u8, 0x1_u8, 0x99_u8, 0xbb_u8, 0xb6_u8, 0xf9_u8, 0x3b_u8])
    def query_interface(this : IDesktopWallpaper*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDesktopWallpaper*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDesktopWallpaper*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_wallpaper(this : IDesktopWallpaper*, monitorID : Win32cr::Foundation::PWSTR, wallpaper : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_wallpaper.call(this, monitorID, wallpaper)
    end
    def get_wallpaper(this : IDesktopWallpaper*, monitorID : Win32cr::Foundation::PWSTR, wallpaper : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_wallpaper.call(this, monitorID, wallpaper)
    end
    def get_monitor_device_path_at(this : IDesktopWallpaper*, monitorIndex : UInt32, monitorID : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_monitor_device_path_at.call(this, monitorIndex, monitorID)
    end
    def get_monitor_device_path_count(this : IDesktopWallpaper*, count : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_monitor_device_path_count.call(this, count)
    end
    def get_monitor_rect(this : IDesktopWallpaper*, monitorID : Win32cr::Foundation::PWSTR, displayRect : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_monitor_rect.call(this, monitorID, displayRect)
    end
    def set_background_color(this : IDesktopWallpaper*, color : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_background_color.call(this, color)
    end
    def get_background_color(this : IDesktopWallpaper*, color : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_background_color.call(this, color)
    end
    def set_position(this : IDesktopWallpaper*, position : Win32cr::UI::Shell::DESKTOP_WALLPAPER_POSITION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_position.call(this, position)
    end
    def get_position(this : IDesktopWallpaper*, position : Win32cr::UI::Shell::DESKTOP_WALLPAPER_POSITION*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_position.call(this, position)
    end
    def set_slideshow(this : IDesktopWallpaper*, items : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_slideshow.call(this, items)
    end
    def get_slideshow(this : IDesktopWallpaper*, items : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_slideshow.call(this, items)
    end
    def set_slideshow_options(this : IDesktopWallpaper*, options : Win32cr::UI::Shell::DESKTOP_SLIDESHOW_OPTIONS, slideshowTick : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_slideshow_options.call(this, options, slideshowTick)
    end
    def get_slideshow_options(this : IDesktopWallpaper*, options : Win32cr::UI::Shell::DESKTOP_SLIDESHOW_OPTIONS*, slideshowTick : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_slideshow_options.call(this, options, slideshowTick)
    end
    def advance_slideshow(this : IDesktopWallpaper*, monitorID : Win32cr::Foundation::PWSTR, direction : Win32cr::UI::Shell::DESKTOP_SLIDESHOW_DIRECTION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advance_slideshow.call(this, monitorID, direction)
    end
    def get_status(this : IDesktopWallpaper*, state : Win32cr::UI::Shell::DESKTOP_SLIDESHOW_STATE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_status.call(this, state)
    end
    def enable(this : IDesktopWallpaper*, enable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable.call(this, enable)
    end

  end

  @[Extern]
  record IHomeGroupVtbl,
    query_interface : Proc(IHomeGroup*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IHomeGroup*, UInt32),
    release : Proc(IHomeGroup*, UInt32),
    is_member : Proc(IHomeGroup*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    show_sharing_wizard : Proc(IHomeGroup*, Win32cr::Foundation::HWND, Win32cr::UI::Shell::HOMEGROUPSHARINGCHOICES*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IHomeGroup, lpVtbl : IHomeGroupVtbl* do
    GUID = LibC::GUID.new(0x7a3bd1d9_u32, 0x35a9_u16, 0x4fb3_u16, StaticArray[0xa4_u8, 0x67_u8, 0xf4_u8, 0x8c_u8, 0xac_u8, 0x35_u8, 0xe2_u8, 0xd0_u8])
    def query_interface(this : IHomeGroup*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IHomeGroup*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IHomeGroup*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def is_member(this : IHomeGroup*, member : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_member.call(this, member)
    end
    def show_sharing_wizard(this : IHomeGroup*, owner : Win32cr::Foundation::HWND, sharingchoices : Win32cr::UI::Shell::HOMEGROUPSHARINGCHOICES*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_sharing_wizard.call(this, owner, sharingchoices)
    end

  end

  @[Extern]
  record IInitializeWithPropertyStoreVtbl,
    query_interface : Proc(IInitializeWithPropertyStore*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInitializeWithPropertyStore*, UInt32),
    release : Proc(IInitializeWithPropertyStore*, UInt32),
    initialize__ : Proc(IInitializeWithPropertyStore*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInitializeWithPropertyStore, lpVtbl : IInitializeWithPropertyStoreVtbl* do
    GUID = LibC::GUID.new(0xc3e12eb5_u32, 0x7d8d_u16, 0x44f8_u16, StaticArray[0xb6_u8, 0xdd_u8, 0xe_u8, 0x77_u8, 0xb3_u8, 0x4d_u8, 0x6d_u8, 0xe4_u8])
    def query_interface(this : IInitializeWithPropertyStore*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInitializeWithPropertyStore*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInitializeWithPropertyStore*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IInitializeWithPropertyStore*, pps : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, pps)
    end

  end

  @[Extern]
  record IOpenSearchSourceVtbl,
    query_interface : Proc(IOpenSearchSource*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IOpenSearchSource*, UInt32),
    release : Proc(IOpenSearchSource*, UInt32),
    get_results : Proc(IOpenSearchSource*, Win32cr::Foundation::HWND, Win32cr::Foundation::PWSTR, UInt32, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IOpenSearchSource, lpVtbl : IOpenSearchSourceVtbl* do
    GUID = LibC::GUID.new(0xf0ee7333_u32, 0xe6fc_u16, 0x479b_u16, StaticArray[0x9f_u8, 0x25_u8, 0xa8_u8, 0x60_u8, 0xc2_u8, 0x34_u8, 0xa3_u8, 0x8e_u8])
    def query_interface(this : IOpenSearchSource*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IOpenSearchSource*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IOpenSearchSource*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_results(this : IOpenSearchSource*, hwnd : Win32cr::Foundation::HWND, pszQuery : Win32cr::Foundation::PWSTR, dwStartIndex : UInt32, dwCount : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_results.call(this, hwnd, pszQuery, dwStartIndex, dwCount, riid, ppv)
    end

  end

  @[Extern]
  record IShellLibraryVtbl,
    query_interface : Proc(IShellLibrary*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellLibrary*, UInt32),
    release : Proc(IShellLibrary*, UInt32),
    load_library_from_item : Proc(IShellLibrary*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    load_library_from_known_folder : Proc(IShellLibrary*, LibC::GUID*, UInt32, Win32cr::Foundation::HRESULT),
    add_folder : Proc(IShellLibrary*, Void*, Win32cr::Foundation::HRESULT),
    remove_folder : Proc(IShellLibrary*, Void*, Win32cr::Foundation::HRESULT),
    get_folders : Proc(IShellLibrary*, Win32cr::UI::Shell::LIBRARYFOLDERFILTER, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    resolve_folder : Proc(IShellLibrary*, Void*, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_default_save_folder : Proc(IShellLibrary*, Win32cr::UI::Shell::DEFAULTSAVEFOLDERTYPE, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    set_default_save_folder : Proc(IShellLibrary*, Win32cr::UI::Shell::DEFAULTSAVEFOLDERTYPE, Void*, Win32cr::Foundation::HRESULT),
    get_options : Proc(IShellLibrary*, Win32cr::UI::Shell::LIBRARYOPTIONFLAGS*, Win32cr::Foundation::HRESULT),
    set_options : Proc(IShellLibrary*, Win32cr::UI::Shell::LIBRARYOPTIONFLAGS, Win32cr::UI::Shell::LIBRARYOPTIONFLAGS, Win32cr::Foundation::HRESULT),
    get_folder_type : Proc(IShellLibrary*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    set_folder_type : Proc(IShellLibrary*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_icon : Proc(IShellLibrary*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    set_icon : Proc(IShellLibrary*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    commit : Proc(IShellLibrary*, Win32cr::Foundation::HRESULT),
    save : Proc(IShellLibrary*, Void*, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::LIBRARYSAVEFLAGS, Void**, Win32cr::Foundation::HRESULT),
    save_in_known_folder : Proc(IShellLibrary*, LibC::GUID*, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::LIBRARYSAVEFLAGS, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellLibrary, lpVtbl : IShellLibraryVtbl* do
    GUID = LibC::GUID.new(0x11a66efa_u32, 0x382e_u16, 0x451a_u16, StaticArray[0x92_u8, 0x34_u8, 0x1e_u8, 0xe_u8, 0x12_u8, 0xef_u8, 0x30_u8, 0x85_u8])
    def query_interface(this : IShellLibrary*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellLibrary*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellLibrary*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def load_library_from_item(this : IShellLibrary*, psiLibrary : Void*, grfMode : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.load_library_from_item.call(this, psiLibrary, grfMode)
    end
    def load_library_from_known_folder(this : IShellLibrary*, kfidLibrary : LibC::GUID*, grfMode : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.load_library_from_known_folder.call(this, kfidLibrary, grfMode)
    end
    def add_folder(this : IShellLibrary*, psiLocation : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_folder.call(this, psiLocation)
    end
    def remove_folder(this : IShellLibrary*, psiLocation : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_folder.call(this, psiLocation)
    end
    def get_folders(this : IShellLibrary*, lff : Win32cr::UI::Shell::LIBRARYFOLDERFILTER, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folders.call(this, lff, riid, ppv)
    end
    def resolve_folder(this : IShellLibrary*, psiFolderToResolve : Void*, dwTimeout : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resolve_folder.call(this, psiFolderToResolve, dwTimeout, riid, ppv)
    end
    def get_default_save_folder(this : IShellLibrary*, dsft : Win32cr::UI::Shell::DEFAULTSAVEFOLDERTYPE, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_save_folder.call(this, dsft, riid, ppv)
    end
    def set_default_save_folder(this : IShellLibrary*, dsft : Win32cr::UI::Shell::DEFAULTSAVEFOLDERTYPE, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_default_save_folder.call(this, dsft, psi)
    end
    def get_options(this : IShellLibrary*, plofOptions : Win32cr::UI::Shell::LIBRARYOPTIONFLAGS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_options.call(this, plofOptions)
    end
    def set_options(this : IShellLibrary*, lofMask : Win32cr::UI::Shell::LIBRARYOPTIONFLAGS, lofOptions : Win32cr::UI::Shell::LIBRARYOPTIONFLAGS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_options.call(this, lofMask, lofOptions)
    end
    def get_folder_type(this : IShellLibrary*, pftid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder_type.call(this, pftid)
    end
    def set_folder_type(this : IShellLibrary*, ftid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_folder_type.call(this, ftid)
    end
    def get_icon(this : IShellLibrary*, ppszIcon : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_icon.call(this, ppszIcon)
    end
    def set_icon(this : IShellLibrary*, pszIcon : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_icon.call(this, pszIcon)
    end
    def commit(this : IShellLibrary*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.commit.call(this)
    end
    def save(this : IShellLibrary*, psiFolderToSaveIn : Void*, pszLibraryName : Win32cr::Foundation::PWSTR, lsf : Win32cr::UI::Shell::LIBRARYSAVEFLAGS, ppsiSavedTo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.save.call(this, psiFolderToSaveIn, pszLibraryName, lsf, ppsiSavedTo)
    end
    def save_in_known_folder(this : IShellLibrary*, kfidToSaveIn : LibC::GUID*, pszLibraryName : Win32cr::Foundation::PWSTR, lsf : Win32cr::UI::Shell::LIBRARYSAVEFLAGS, ppsiSavedTo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.save_in_known_folder.call(this, kfidToSaveIn, pszLibraryName, lsf, ppsiSavedTo)
    end

  end

  @[Extern]
  record IDefaultFolderMenuInitializeVtbl,
    query_interface : Proc(IDefaultFolderMenuInitialize*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDefaultFolderMenuInitialize*, UInt32),
    release : Proc(IDefaultFolderMenuInitialize*, UInt32),
    initialize__ : Proc(IDefaultFolderMenuInitialize*, Win32cr::Foundation::HWND, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Void*, UInt32, Win32cr::UI::Shell::Common::ITEMIDLIST**, Void*, UInt32, Win32cr::System::Registry::HKEY*, Win32cr::Foundation::HRESULT),
    set_menu_restrictions : Proc(IDefaultFolderMenuInitialize*, Win32cr::UI::Shell::DEFAULT_FOLDER_MENU_RESTRICTIONS, Win32cr::Foundation::HRESULT),
    get_menu_restrictions : Proc(IDefaultFolderMenuInitialize*, Win32cr::UI::Shell::DEFAULT_FOLDER_MENU_RESTRICTIONS, Win32cr::UI::Shell::DEFAULT_FOLDER_MENU_RESTRICTIONS*, Win32cr::Foundation::HRESULT),
    set_handler_clsid : Proc(IDefaultFolderMenuInitialize*, LibC::GUID*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDefaultFolderMenuInitialize, lpVtbl : IDefaultFolderMenuInitializeVtbl* do
    GUID = LibC::GUID.new(0x7690aa79_u32, 0xf8fc_u16, 0x4615_u16, StaticArray[0xa3_u8, 0x27_u8, 0x36_u8, 0xf7_u8, 0xd1_u8, 0x8f_u8, 0x5d_u8, 0x91_u8])
    def query_interface(this : IDefaultFolderMenuInitialize*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDefaultFolderMenuInitialize*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDefaultFolderMenuInitialize*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IDefaultFolderMenuInitialize*, hwnd : Win32cr::Foundation::HWND, pcmcb : Void*, pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, psf : Void*, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, punkAssociation : Void*, cKeys : UInt32, aKeys : Win32cr::System::Registry::HKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, hwnd, pcmcb, pidlFolder, psf, cidl, apidl, punkAssociation, cKeys, aKeys)
    end
    def set_menu_restrictions(this : IDefaultFolderMenuInitialize*, dfmrValues : Win32cr::UI::Shell::DEFAULT_FOLDER_MENU_RESTRICTIONS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_menu_restrictions.call(this, dfmrValues)
    end
    def get_menu_restrictions(this : IDefaultFolderMenuInitialize*, dfmrMask : Win32cr::UI::Shell::DEFAULT_FOLDER_MENU_RESTRICTIONS, pdfmrValues : Win32cr::UI::Shell::DEFAULT_FOLDER_MENU_RESTRICTIONS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_menu_restrictions.call(this, dfmrMask, pdfmrValues)
    end
    def set_handler_clsid(this : IDefaultFolderMenuInitialize*, rclsid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_handler_clsid.call(this, rclsid)
    end

  end

  @[Extern]
  record IApplicationActivationManagerVtbl,
    query_interface : Proc(IApplicationActivationManager*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IApplicationActivationManager*, UInt32),
    release : Proc(IApplicationActivationManager*, UInt32),
    activate_application : Proc(IApplicationActivationManager*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::ACTIVATEOPTIONS, UInt32*, Win32cr::Foundation::HRESULT),
    activate_for_file : Proc(IApplicationActivationManager*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::PWSTR, UInt32*, Win32cr::Foundation::HRESULT),
    activate_for_protocol : Proc(IApplicationActivationManager*, Win32cr::Foundation::PWSTR, Void*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IApplicationActivationManager, lpVtbl : IApplicationActivationManagerVtbl* do
    GUID = LibC::GUID.new(0x2e941141_u32, 0x7f97_u16, 0x4756_u16, StaticArray[0xba_u8, 0x1d_u8, 0x9d_u8, 0xec_u8, 0xde_u8, 0x89_u8, 0x4a_u8, 0x3d_u8])
    def query_interface(this : IApplicationActivationManager*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IApplicationActivationManager*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IApplicationActivationManager*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def activate_application(this : IApplicationActivationManager*, appUserModelId : Win32cr::Foundation::PWSTR, arguments : Win32cr::Foundation::PWSTR, options : Win32cr::UI::Shell::ACTIVATEOPTIONS, processId : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.activate_application.call(this, appUserModelId, arguments, options, processId)
    end
    def activate_for_file(this : IApplicationActivationManager*, appUserModelId : Win32cr::Foundation::PWSTR, itemArray : Void*, verb : Win32cr::Foundation::PWSTR, processId : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.activate_for_file.call(this, appUserModelId, itemArray, verb, processId)
    end
    def activate_for_protocol(this : IApplicationActivationManager*, appUserModelId : Win32cr::Foundation::PWSTR, itemArray : Void*, processId : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.activate_for_protocol.call(this, appUserModelId, itemArray, processId)
    end

  end

  @[Extern]
  record IVirtualDesktopManagerVtbl,
    query_interface : Proc(IVirtualDesktopManager*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IVirtualDesktopManager*, UInt32),
    release : Proc(IVirtualDesktopManager*, UInt32),
    is_window_on_current_virtual_desktop : Proc(IVirtualDesktopManager*, Win32cr::Foundation::HWND, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_window_desktop_id : Proc(IVirtualDesktopManager*, Win32cr::Foundation::HWND, LibC::GUID*, Win32cr::Foundation::HRESULT),
    move_window_to_desktop : Proc(IVirtualDesktopManager*, Win32cr::Foundation::HWND, LibC::GUID*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IVirtualDesktopManager, lpVtbl : IVirtualDesktopManagerVtbl* do
    GUID = LibC::GUID.new(0xa5cd92ff_u32, 0x29be_u16, 0x454c_u16, StaticArray[0x8d_u8, 0x4_u8, 0xd8_u8, 0x28_u8, 0x79_u8, 0xfb_u8, 0x3f_u8, 0x1b_u8])
    def query_interface(this : IVirtualDesktopManager*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IVirtualDesktopManager*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IVirtualDesktopManager*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def is_window_on_current_virtual_desktop(this : IVirtualDesktopManager*, topLevelWindow : Win32cr::Foundation::HWND, onCurrentDesktop : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_window_on_current_virtual_desktop.call(this, topLevelWindow, onCurrentDesktop)
    end
    def get_window_desktop_id(this : IVirtualDesktopManager*, topLevelWindow : Win32cr::Foundation::HWND, desktopId : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window_desktop_id.call(this, topLevelWindow, desktopId)
    end
    def move_window_to_desktop(this : IVirtualDesktopManager*, topLevelWindow : Win32cr::Foundation::HWND, desktopId : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_window_to_desktop.call(this, topLevelWindow, desktopId)
    end

  end

  @[Extern]
  record IAssocHandlerInvokerVtbl,
    query_interface : Proc(IAssocHandlerInvoker*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAssocHandlerInvoker*, UInt32),
    release : Proc(IAssocHandlerInvoker*, UInt32),
    supports_selection : Proc(IAssocHandlerInvoker*, Win32cr::Foundation::HRESULT),
    invoke : Proc(IAssocHandlerInvoker*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAssocHandlerInvoker, lpVtbl : IAssocHandlerInvokerVtbl* do
    GUID = LibC::GUID.new(0x92218cab_u32, 0xecaa_u16, 0x4335_u16, StaticArray[0x81_u8, 0x33_u8, 0x80_u8, 0x7f_u8, 0xd2_u8, 0x34_u8, 0xc2_u8, 0xee_u8])
    def query_interface(this : IAssocHandlerInvoker*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAssocHandlerInvoker*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAssocHandlerInvoker*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def supports_selection(this : IAssocHandlerInvoker*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.supports_selection.call(this)
    end
    def invoke(this : IAssocHandlerInvoker*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke.call(this)
    end

  end

  @[Extern]
  record IAssocHandlerVtbl,
    query_interface : Proc(IAssocHandler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAssocHandler*, UInt32),
    release : Proc(IAssocHandler*, UInt32),
    get_name : Proc(IAssocHandler*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_ui_name : Proc(IAssocHandler*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_icon_location : Proc(IAssocHandler*, Win32cr::Foundation::PWSTR*, Int32*, Win32cr::Foundation::HRESULT),
    is_recommended : Proc(IAssocHandler*, Win32cr::Foundation::HRESULT),
    make_default : Proc(IAssocHandler*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    invoke : Proc(IAssocHandler*, Void*, Win32cr::Foundation::HRESULT),
    create_invoker : Proc(IAssocHandler*, Void*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAssocHandler, lpVtbl : IAssocHandlerVtbl* do
    GUID = LibC::GUID.new(0xf04061ac_u32, 0x1659_u16, 0x4a3f_u16, StaticArray[0xa9_u8, 0x54_u8, 0x77_u8, 0x5a_u8, 0xa5_u8, 0x7f_u8, 0xc0_u8, 0x83_u8])
    def query_interface(this : IAssocHandler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAssocHandler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAssocHandler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_name(this : IAssocHandler*, ppsz : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_name.call(this, ppsz)
    end
    def get_ui_name(this : IAssocHandler*, ppsz : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ui_name.call(this, ppsz)
    end
    def get_icon_location(this : IAssocHandler*, ppszPath : Win32cr::Foundation::PWSTR*, pIndex : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_icon_location.call(this, ppszPath, pIndex)
    end
    def is_recommended(this : IAssocHandler*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_recommended.call(this)
    end
    def make_default(this : IAssocHandler*, pszDescription : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.make_default.call(this, pszDescription)
    end
    def invoke(this : IAssocHandler*, pdo : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke.call(this, pdo)
    end
    def create_invoker(this : IAssocHandler*, pdo : Void*, ppInvoker : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_invoker.call(this, pdo, ppInvoker)
    end

  end

  @[Extern]
  record IEnumAssocHandlersVtbl,
    query_interface : Proc(IEnumAssocHandlers*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumAssocHandlers*, UInt32),
    release : Proc(IEnumAssocHandlers*, UInt32),
    next__ : Proc(IEnumAssocHandlers*, UInt32, Void**, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumAssocHandlers, lpVtbl : IEnumAssocHandlersVtbl* do
    GUID = LibC::GUID.new(0x973810ae_u32, 0x9599_u16, 0x4b88_u16, StaticArray[0x9e_u8, 0x4d_u8, 0x6e_u8, 0xe9_u8, 0x8c_u8, 0x95_u8, 0x52_u8, 0xda_u8])
    def query_interface(this : IEnumAssocHandlers*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumAssocHandlers*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumAssocHandlers*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumAssocHandlers*, celt : UInt32, rgelt : Void**, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, rgelt, pceltFetched)
    end

  end

  @[Extern]
  record IDataObjectProviderVtbl,
    query_interface : Proc(IDataObjectProvider*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDataObjectProvider*, UInt32),
    release : Proc(IDataObjectProvider*, UInt32),
    get_data_object : Proc(IDataObjectProvider*, Void**, Win32cr::Foundation::HRESULT),
    set_data_object : Proc(IDataObjectProvider*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDataObjectProvider, lpVtbl : IDataObjectProviderVtbl* do
    GUID = LibC::GUID.new(0x3d25f6d6_u32, 0x4b2a_u16, 0x433c_u16, StaticArray[0x91_u8, 0x84_u8, 0x7c_u8, 0x33_u8, 0xad_u8, 0x35_u8, 0xd0_u8, 0x1_u8])
    def query_interface(this : IDataObjectProvider*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDataObjectProvider*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDataObjectProvider*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_data_object(this : IDataObjectProvider*, dataObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_data_object.call(this, dataObject)
    end
    def set_data_object(this : IDataObjectProvider*, dataObject : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_data_object.call(this, dataObject)
    end

  end

  @[Extern]
  record IDataTransferManagerInteropVtbl,
    query_interface : Proc(IDataTransferManagerInterop*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDataTransferManagerInterop*, UInt32),
    release : Proc(IDataTransferManagerInterop*, UInt32),
    get_for_window : Proc(IDataTransferManagerInterop*, Win32cr::Foundation::HWND, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    show_share_ui_for_window : Proc(IDataTransferManagerInterop*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDataTransferManagerInterop, lpVtbl : IDataTransferManagerInteropVtbl* do
    GUID = LibC::GUID.new(0x3a3dcd6c_u32, 0x3eab_u16, 0x43dc_u16, StaticArray[0xbc_u8, 0xde_u8, 0x45_u8, 0x67_u8, 0x1c_u8, 0xe8_u8, 0x0_u8, 0xc8_u8])
    def query_interface(this : IDataTransferManagerInterop*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDataTransferManagerInterop*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDataTransferManagerInterop*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_for_window(this : IDataTransferManagerInterop*, appWindow : Win32cr::Foundation::HWND, riid : LibC::GUID*, dataTransferManager : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_for_window.call(this, appWindow, riid, dataTransferManager)
    end
    def show_share_ui_for_window(this : IDataTransferManagerInterop*, appWindow : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_share_ui_for_window.call(this, appWindow)
    end

  end

  @[Extern]
  record IFrameworkInputPaneHandlerVtbl,
    query_interface : Proc(IFrameworkInputPaneHandler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFrameworkInputPaneHandler*, UInt32),
    release : Proc(IFrameworkInputPaneHandler*, UInt32),
    showing : Proc(IFrameworkInputPaneHandler*, Win32cr::Foundation::RECT*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    hiding : Proc(IFrameworkInputPaneHandler*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFrameworkInputPaneHandler, lpVtbl : IFrameworkInputPaneHandlerVtbl* do
    GUID = LibC::GUID.new(0x226c537b_u32, 0x1e76_u16, 0x4d9e_u16, StaticArray[0xa7_u8, 0x60_u8, 0x33_u8, 0xdb_u8, 0x29_u8, 0x92_u8, 0x2f_u8, 0x18_u8])
    def query_interface(this : IFrameworkInputPaneHandler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFrameworkInputPaneHandler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFrameworkInputPaneHandler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def showing(this : IFrameworkInputPaneHandler*, prcInputPaneScreenLocation : Win32cr::Foundation::RECT*, fEnsureFocusedElementInView : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.showing.call(this, prcInputPaneScreenLocation, fEnsureFocusedElementInView)
    end
    def hiding(this : IFrameworkInputPaneHandler*, fEnsureFocusedElementInView : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hiding.call(this, fEnsureFocusedElementInView)
    end

  end

  @[Extern]
  record IFrameworkInputPaneVtbl,
    query_interface : Proc(IFrameworkInputPane*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFrameworkInputPane*, UInt32),
    release : Proc(IFrameworkInputPane*, UInt32),
    advise : Proc(IFrameworkInputPane*, Void*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    advise_with_hwnd : Proc(IFrameworkInputPane*, Win32cr::Foundation::HWND, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    unadvise : Proc(IFrameworkInputPane*, UInt32, Win32cr::Foundation::HRESULT),
    location : Proc(IFrameworkInputPane*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFrameworkInputPane, lpVtbl : IFrameworkInputPaneVtbl* do
    GUID = LibC::GUID.new(0x5752238b_u32, 0x24f0_u16, 0x495a_u16, StaticArray[0x82_u8, 0xf1_u8, 0x2f_u8, 0xd5_u8, 0x93_u8, 0x5_u8, 0x67_u8, 0x96_u8])
    def query_interface(this : IFrameworkInputPane*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFrameworkInputPane*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFrameworkInputPane*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def advise(this : IFrameworkInputPane*, pWindow : Void*, pHandler : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, pWindow, pHandler, pdwCookie)
    end
    def advise_with_hwnd(this : IFrameworkInputPane*, hwnd : Win32cr::Foundation::HWND, pHandler : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise_with_hwnd.call(this, hwnd, pHandler, pdwCookie)
    end
    def unadvise(this : IFrameworkInputPane*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unadvise.call(this, dwCookie)
    end
    def location(this : IFrameworkInputPane*, prcInputPaneScreenLocation : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.location.call(this, prcInputPaneScreenLocation)
    end

  end

  @[Extern]
  record IAppVisibilityEventsVtbl,
    query_interface : Proc(IAppVisibilityEvents*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAppVisibilityEvents*, UInt32),
    release : Proc(IAppVisibilityEvents*, UInt32),
    app_visibility_on_monitor_changed : Proc(IAppVisibilityEvents*, Win32cr::Graphics::Gdi::HMONITOR, Win32cr::UI::Shell::MONITOR_APP_VISIBILITY, Win32cr::UI::Shell::MONITOR_APP_VISIBILITY, Win32cr::Foundation::HRESULT),
    launcher_visibility_change : Proc(IAppVisibilityEvents*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAppVisibilityEvents, lpVtbl : IAppVisibilityEventsVtbl* do
    GUID = LibC::GUID.new(0x6584ce6b_u32, 0x7d82_u16, 0x49c2_u16, StaticArray[0x89_u8, 0xc9_u8, 0xc6_u8, 0xbc_u8, 0x2_u8, 0xba_u8, 0x8c_u8, 0x38_u8])
    def query_interface(this : IAppVisibilityEvents*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAppVisibilityEvents*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAppVisibilityEvents*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def app_visibility_on_monitor_changed(this : IAppVisibilityEvents*, hMonitor : Win32cr::Graphics::Gdi::HMONITOR, previousMode : Win32cr::UI::Shell::MONITOR_APP_VISIBILITY, currentMode : Win32cr::UI::Shell::MONITOR_APP_VISIBILITY) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.app_visibility_on_monitor_changed.call(this, hMonitor, previousMode, currentMode)
    end
    def launcher_visibility_change(this : IAppVisibilityEvents*, currentVisibleState : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.launcher_visibility_change.call(this, currentVisibleState)
    end

  end

  @[Extern]
  record IAppVisibilityVtbl,
    query_interface : Proc(IAppVisibility*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAppVisibility*, UInt32),
    release : Proc(IAppVisibility*, UInt32),
    get_app_visibility_on_monitor : Proc(IAppVisibility*, Win32cr::Graphics::Gdi::HMONITOR, Win32cr::UI::Shell::MONITOR_APP_VISIBILITY*, Win32cr::Foundation::HRESULT),
    is_launcher_visible : Proc(IAppVisibility*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    advise : Proc(IAppVisibility*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    unadvise : Proc(IAppVisibility*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAppVisibility, lpVtbl : IAppVisibilityVtbl* do
    GUID = LibC::GUID.new(0x2246ea2d_u32, 0xcaea_u16, 0x4444_u16, StaticArray[0xa3_u8, 0xc4_u8, 0x6d_u8, 0xe8_u8, 0x27_u8, 0xe4_u8, 0x43_u8, 0x13_u8])
    def query_interface(this : IAppVisibility*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAppVisibility*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAppVisibility*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_app_visibility_on_monitor(this : IAppVisibility*, hMonitor : Win32cr::Graphics::Gdi::HMONITOR, pMode : Win32cr::UI::Shell::MONITOR_APP_VISIBILITY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_app_visibility_on_monitor.call(this, hMonitor, pMode)
    end
    def is_launcher_visible(this : IAppVisibility*, pfVisible : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_launcher_visible.call(this, pfVisible)
    end
    def advise(this : IAppVisibility*, pCallback : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, pCallback, pdwCookie)
    end
    def unadvise(this : IAppVisibility*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unadvise.call(this, dwCookie)
    end

  end

  @[Extern]
  record IPackageExecutionStateChangeNotificationVtbl,
    query_interface : Proc(IPackageExecutionStateChangeNotification*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPackageExecutionStateChangeNotification*, UInt32),
    release : Proc(IPackageExecutionStateChangeNotification*, UInt32),
    on_state_changed : Proc(IPackageExecutionStateChangeNotification*, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::PACKAGE_EXECUTION_STATE, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPackageExecutionStateChangeNotification, lpVtbl : IPackageExecutionStateChangeNotificationVtbl* do
    GUID = LibC::GUID.new(0x1bb12a62_u32, 0x2ad8_u16, 0x432b_u16, StaticArray[0x8c_u8, 0xcf_u8, 0xc_u8, 0x2c_u8, 0x52_u8, 0xaf_u8, 0xcd_u8, 0x5b_u8])
    def query_interface(this : IPackageExecutionStateChangeNotification*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPackageExecutionStateChangeNotification*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPackageExecutionStateChangeNotification*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_state_changed(this : IPackageExecutionStateChangeNotification*, pszPackageFullName : Win32cr::Foundation::PWSTR, pesNewState : Win32cr::UI::Shell::PACKAGE_EXECUTION_STATE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_state_changed.call(this, pszPackageFullName, pesNewState)
    end

  end

  @[Extern]
  record IPackageDebugSettingsVtbl,
    query_interface : Proc(IPackageDebugSettings*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPackageDebugSettings*, UInt32),
    release : Proc(IPackageDebugSettings*, UInt32),
    enable_debugging : Proc(IPackageDebugSettings*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    disable_debugging : Proc(IPackageDebugSettings*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    suspend : Proc(IPackageDebugSettings*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    resume : Proc(IPackageDebugSettings*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    terminate_all_processes : Proc(IPackageDebugSettings*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_target_session_id : Proc(IPackageDebugSettings*, UInt32, Win32cr::Foundation::HRESULT),
    enumerate_background_tasks : Proc(IPackageDebugSettings*, Win32cr::Foundation::PWSTR, UInt32*, LibC::GUID**, Win32cr::Foundation::PWSTR**, Win32cr::Foundation::HRESULT),
    activate_background_task : Proc(IPackageDebugSettings*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    start_servicing : Proc(IPackageDebugSettings*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    stop_servicing : Proc(IPackageDebugSettings*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    start_session_redirection : Proc(IPackageDebugSettings*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    stop_session_redirection : Proc(IPackageDebugSettings*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_package_execution_state : Proc(IPackageDebugSettings*, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::PACKAGE_EXECUTION_STATE*, Win32cr::Foundation::HRESULT),
    register_for_package_state_changes : Proc(IPackageDebugSettings*, Win32cr::Foundation::PWSTR, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    unregister_for_package_state_changes : Proc(IPackageDebugSettings*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPackageDebugSettings, lpVtbl : IPackageDebugSettingsVtbl* do
    GUID = LibC::GUID.new(0xf27c3930_u32, 0x8029_u16, 0x4ad1_u16, StaticArray[0x94_u8, 0xe3_u8, 0x3d_u8, 0xba_u8, 0x41_u8, 0x78_u8, 0x10_u8, 0xc1_u8])
    def query_interface(this : IPackageDebugSettings*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPackageDebugSettings*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPackageDebugSettings*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def enable_debugging(this : IPackageDebugSettings*, packageFullName : Win32cr::Foundation::PWSTR, debuggerCommandLine : Win32cr::Foundation::PWSTR, environment : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_debugging.call(this, packageFullName, debuggerCommandLine, environment)
    end
    def disable_debugging(this : IPackageDebugSettings*, packageFullName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.disable_debugging.call(this, packageFullName)
    end
    def suspend(this : IPackageDebugSettings*, packageFullName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.suspend.call(this, packageFullName)
    end
    def resume(this : IPackageDebugSettings*, packageFullName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resume.call(this, packageFullName)
    end
    def terminate_all_processes(this : IPackageDebugSettings*, packageFullName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.terminate_all_processes.call(this, packageFullName)
    end
    def set_target_session_id(this : IPackageDebugSettings*, sessionId : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_target_session_id.call(this, sessionId)
    end
    def enumerate_background_tasks(this : IPackageDebugSettings*, packageFullName : Win32cr::Foundation::PWSTR, taskCount : UInt32*, taskIds : LibC::GUID**, taskNames : Win32cr::Foundation::PWSTR**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enumerate_background_tasks.call(this, packageFullName, taskCount, taskIds, taskNames)
    end
    def activate_background_task(this : IPackageDebugSettings*, taskId : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.activate_background_task.call(this, taskId)
    end
    def start_servicing(this : IPackageDebugSettings*, packageFullName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start_servicing.call(this, packageFullName)
    end
    def stop_servicing(this : IPackageDebugSettings*, packageFullName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop_servicing.call(this, packageFullName)
    end
    def start_session_redirection(this : IPackageDebugSettings*, packageFullName : Win32cr::Foundation::PWSTR, sessionId : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start_session_redirection.call(this, packageFullName, sessionId)
    end
    def stop_session_redirection(this : IPackageDebugSettings*, packageFullName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop_session_redirection.call(this, packageFullName)
    end
    def get_package_execution_state(this : IPackageDebugSettings*, packageFullName : Win32cr::Foundation::PWSTR, packageExecutionState : Win32cr::UI::Shell::PACKAGE_EXECUTION_STATE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_package_execution_state.call(this, packageFullName, packageExecutionState)
    end
    def register_for_package_state_changes(this : IPackageDebugSettings*, packageFullName : Win32cr::Foundation::PWSTR, pPackageExecutionStateChangeNotification : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_for_package_state_changes.call(this, packageFullName, pPackageExecutionStateChangeNotification, pdwCookie)
    end
    def unregister_for_package_state_changes(this : IPackageDebugSettings*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_for_package_state_changes.call(this, dwCookie)
    end

  end

  @[Extern]
  record IPackageDebugSettings2Vtbl,
    query_interface : Proc(IPackageDebugSettings2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPackageDebugSettings2*, UInt32),
    release : Proc(IPackageDebugSettings2*, UInt32),
    enable_debugging : Proc(IPackageDebugSettings2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    disable_debugging : Proc(IPackageDebugSettings2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    suspend : Proc(IPackageDebugSettings2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    resume : Proc(IPackageDebugSettings2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    terminate_all_processes : Proc(IPackageDebugSettings2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_target_session_id : Proc(IPackageDebugSettings2*, UInt32, Win32cr::Foundation::HRESULT),
    enumerate_background_tasks : Proc(IPackageDebugSettings2*, Win32cr::Foundation::PWSTR, UInt32*, LibC::GUID**, Win32cr::Foundation::PWSTR**, Win32cr::Foundation::HRESULT),
    activate_background_task : Proc(IPackageDebugSettings2*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    start_servicing : Proc(IPackageDebugSettings2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    stop_servicing : Proc(IPackageDebugSettings2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    start_session_redirection : Proc(IPackageDebugSettings2*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    stop_session_redirection : Proc(IPackageDebugSettings2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_package_execution_state : Proc(IPackageDebugSettings2*, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::PACKAGE_EXECUTION_STATE*, Win32cr::Foundation::HRESULT),
    register_for_package_state_changes : Proc(IPackageDebugSettings2*, Win32cr::Foundation::PWSTR, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    unregister_for_package_state_changes : Proc(IPackageDebugSettings2*, UInt32, Win32cr::Foundation::HRESULT),
    enumerate_apps : Proc(IPackageDebugSettings2*, Win32cr::Foundation::PWSTR, UInt32*, Win32cr::Foundation::PWSTR**, Win32cr::Foundation::PWSTR**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPackageDebugSettings2, lpVtbl : IPackageDebugSettings2Vtbl* do
    GUID = LibC::GUID.new(0x6e3194bb_u32, 0xab82_u16, 0x4d22_u16, StaticArray[0x93_u8, 0xf5_u8, 0xfa_u8, 0xbd_u8, 0xa4_u8, 0xe_u8, 0x7b_u8, 0x16_u8])
    def query_interface(this : IPackageDebugSettings2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPackageDebugSettings2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPackageDebugSettings2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def enable_debugging(this : IPackageDebugSettings2*, packageFullName : Win32cr::Foundation::PWSTR, debuggerCommandLine : Win32cr::Foundation::PWSTR, environment : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_debugging.call(this, packageFullName, debuggerCommandLine, environment)
    end
    def disable_debugging(this : IPackageDebugSettings2*, packageFullName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.disable_debugging.call(this, packageFullName)
    end
    def suspend(this : IPackageDebugSettings2*, packageFullName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.suspend.call(this, packageFullName)
    end
    def resume(this : IPackageDebugSettings2*, packageFullName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resume.call(this, packageFullName)
    end
    def terminate_all_processes(this : IPackageDebugSettings2*, packageFullName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.terminate_all_processes.call(this, packageFullName)
    end
    def set_target_session_id(this : IPackageDebugSettings2*, sessionId : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_target_session_id.call(this, sessionId)
    end
    def enumerate_background_tasks(this : IPackageDebugSettings2*, packageFullName : Win32cr::Foundation::PWSTR, taskCount : UInt32*, taskIds : LibC::GUID**, taskNames : Win32cr::Foundation::PWSTR**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enumerate_background_tasks.call(this, packageFullName, taskCount, taskIds, taskNames)
    end
    def activate_background_task(this : IPackageDebugSettings2*, taskId : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.activate_background_task.call(this, taskId)
    end
    def start_servicing(this : IPackageDebugSettings2*, packageFullName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start_servicing.call(this, packageFullName)
    end
    def stop_servicing(this : IPackageDebugSettings2*, packageFullName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop_servicing.call(this, packageFullName)
    end
    def start_session_redirection(this : IPackageDebugSettings2*, packageFullName : Win32cr::Foundation::PWSTR, sessionId : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start_session_redirection.call(this, packageFullName, sessionId)
    end
    def stop_session_redirection(this : IPackageDebugSettings2*, packageFullName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop_session_redirection.call(this, packageFullName)
    end
    def get_package_execution_state(this : IPackageDebugSettings2*, packageFullName : Win32cr::Foundation::PWSTR, packageExecutionState : Win32cr::UI::Shell::PACKAGE_EXECUTION_STATE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_package_execution_state.call(this, packageFullName, packageExecutionState)
    end
    def register_for_package_state_changes(this : IPackageDebugSettings2*, packageFullName : Win32cr::Foundation::PWSTR, pPackageExecutionStateChangeNotification : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_for_package_state_changes.call(this, packageFullName, pPackageExecutionStateChangeNotification, pdwCookie)
    end
    def unregister_for_package_state_changes(this : IPackageDebugSettings2*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_for_package_state_changes.call(this, dwCookie)
    end
    def enumerate_apps(this : IPackageDebugSettings2*, packageFullName : Win32cr::Foundation::PWSTR, appCount : UInt32*, appUserModelIds : Win32cr::Foundation::PWSTR**, appDisplayNames : Win32cr::Foundation::PWSTR**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enumerate_apps.call(this, packageFullName, appCount, appUserModelIds, appDisplayNames)
    end

  end

  @[Extern]
  record ISuspensionDependencyManagerVtbl,
    query_interface : Proc(ISuspensionDependencyManager*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISuspensionDependencyManager*, UInt32),
    release : Proc(ISuspensionDependencyManager*, UInt32),
    register_as_child : Proc(ISuspensionDependencyManager*, Win32cr::Foundation::HANDLE, Win32cr::Foundation::HRESULT),
    group_child_with_parent : Proc(ISuspensionDependencyManager*, Win32cr::Foundation::HANDLE, Win32cr::Foundation::HRESULT),
    ungroup_child_from_parent : Proc(ISuspensionDependencyManager*, Win32cr::Foundation::HANDLE, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISuspensionDependencyManager, lpVtbl : ISuspensionDependencyManagerVtbl* do
    GUID = LibC::GUID.new(0x52b83a42_u32, 0x2543_u16, 0x416a_u16, StaticArray[0x81_u8, 0xd9_u8, 0xc0_u8, 0xde_u8, 0x79_u8, 0x69_u8, 0xc8_u8, 0xb3_u8])
    def query_interface(this : ISuspensionDependencyManager*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISuspensionDependencyManager*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISuspensionDependencyManager*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def register_as_child(this : ISuspensionDependencyManager*, processHandle : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_as_child.call(this, processHandle)
    end
    def group_child_with_parent(this : ISuspensionDependencyManager*, childProcessHandle : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.group_child_with_parent.call(this, childProcessHandle)
    end
    def ungroup_child_from_parent(this : ISuspensionDependencyManager*, childProcessHandle : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ungroup_child_from_parent.call(this, childProcessHandle)
    end

  end

  @[Extern]
  record IExecuteCommandApplicationHostEnvironmentVtbl,
    query_interface : Proc(IExecuteCommandApplicationHostEnvironment*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExecuteCommandApplicationHostEnvironment*, UInt32),
    release : Proc(IExecuteCommandApplicationHostEnvironment*, UInt32),
    get_value : Proc(IExecuteCommandApplicationHostEnvironment*, Win32cr::UI::Shell::AHE_TYPE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExecuteCommandApplicationHostEnvironment, lpVtbl : IExecuteCommandApplicationHostEnvironmentVtbl* do
    GUID = LibC::GUID.new(0x18b21aa9_u32, 0xe184_u16, 0x4ff0_u16, StaticArray[0x9f_u8, 0x5e_u8, 0xf8_u8, 0x82_u8, 0xd0_u8, 0x37_u8, 0x71_u8, 0xb3_u8])
    def query_interface(this : IExecuteCommandApplicationHostEnvironment*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExecuteCommandApplicationHostEnvironment*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExecuteCommandApplicationHostEnvironment*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_value(this : IExecuteCommandApplicationHostEnvironment*, pahe : Win32cr::UI::Shell::AHE_TYPE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_value.call(this, pahe)
    end

  end

  @[Extern]
  record IExecuteCommandHostVtbl,
    query_interface : Proc(IExecuteCommandHost*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExecuteCommandHost*, UInt32),
    release : Proc(IExecuteCommandHost*, UInt32),
    get_ui_mode : Proc(IExecuteCommandHost*, Win32cr::UI::Shell::EC_HOST_UI_MODE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExecuteCommandHost, lpVtbl : IExecuteCommandHostVtbl* do
    GUID = LibC::GUID.new(0x4b6832a2_u32, 0x5f04_u16, 0x4c9d_u16, StaticArray[0xb8_u8, 0x9d_u8, 0x72_u8, 0x7a_u8, 0x15_u8, 0xd1_u8, 0x3_u8, 0xe7_u8])
    def query_interface(this : IExecuteCommandHost*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExecuteCommandHost*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExecuteCommandHost*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_ui_mode(this : IExecuteCommandHost*, pUIMode : Win32cr::UI::Shell::EC_HOST_UI_MODE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ui_mode.call(this, pUIMode)
    end

  end

  @[Extern]
  record IApplicationDesignModeSettingsVtbl,
    query_interface : Proc(IApplicationDesignModeSettings*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IApplicationDesignModeSettings*, UInt32),
    release : Proc(IApplicationDesignModeSettings*, UInt32),
    set_native_display_size : Proc(IApplicationDesignModeSettings*, Win32cr::Foundation::SIZE, Win32cr::Foundation::HRESULT),
    set_scale_factor : Proc(IApplicationDesignModeSettings*, Win32cr::UI::Shell::Common::DEVICE_SCALE_FACTOR, Win32cr::Foundation::HRESULT),
    set_application_view_state : Proc(IApplicationDesignModeSettings*, Win32cr::UI::Shell::APPLICATION_VIEW_STATE, Win32cr::Foundation::HRESULT),
    compute_application_size : Proc(IApplicationDesignModeSettings*, Win32cr::Foundation::SIZE*, Win32cr::Foundation::HRESULT),
    is_application_view_state_supported : Proc(IApplicationDesignModeSettings*, Win32cr::UI::Shell::APPLICATION_VIEW_STATE, Win32cr::Foundation::SIZE, Win32cr::UI::Shell::Common::DEVICE_SCALE_FACTOR, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    trigger_edge_gesture : Proc(IApplicationDesignModeSettings*, Win32cr::UI::Shell::EDGE_GESTURE_KIND, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IApplicationDesignModeSettings, lpVtbl : IApplicationDesignModeSettingsVtbl* do
    GUID = LibC::GUID.new(0x2a3dee9a_u32, 0xe31d_u16, 0x46d6_u16, StaticArray[0x85_u8, 0x8_u8, 0xbc_u8, 0xc5_u8, 0x97_u8, 0xdb_u8, 0x35_u8, 0x57_u8])
    def query_interface(this : IApplicationDesignModeSettings*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IApplicationDesignModeSettings*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IApplicationDesignModeSettings*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_native_display_size(this : IApplicationDesignModeSettings*, nativeDisplaySizePixels : Win32cr::Foundation::SIZE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_native_display_size.call(this, nativeDisplaySizePixels)
    end
    def set_scale_factor(this : IApplicationDesignModeSettings*, scaleFactor : Win32cr::UI::Shell::Common::DEVICE_SCALE_FACTOR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_scale_factor.call(this, scaleFactor)
    end
    def set_application_view_state(this : IApplicationDesignModeSettings*, viewState : Win32cr::UI::Shell::APPLICATION_VIEW_STATE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_application_view_state.call(this, viewState)
    end
    def compute_application_size(this : IApplicationDesignModeSettings*, applicationSizePixels : Win32cr::Foundation::SIZE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compute_application_size.call(this, applicationSizePixels)
    end
    def is_application_view_state_supported(this : IApplicationDesignModeSettings*, viewState : Win32cr::UI::Shell::APPLICATION_VIEW_STATE, nativeDisplaySizePixels : Win32cr::Foundation::SIZE, scaleFactor : Win32cr::UI::Shell::Common::DEVICE_SCALE_FACTOR, supported : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_application_view_state_supported.call(this, viewState, nativeDisplaySizePixels, scaleFactor, supported)
    end
    def trigger_edge_gesture(this : IApplicationDesignModeSettings*, edgeGestureKind : Win32cr::UI::Shell::EDGE_GESTURE_KIND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.trigger_edge_gesture.call(this, edgeGestureKind)
    end

  end

  @[Extern]
  record IApplicationDesignModeSettings2Vtbl,
    query_interface : Proc(IApplicationDesignModeSettings2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IApplicationDesignModeSettings2*, UInt32),
    release : Proc(IApplicationDesignModeSettings2*, UInt32),
    set_native_display_size : Proc(IApplicationDesignModeSettings2*, Win32cr::Foundation::SIZE, Win32cr::Foundation::HRESULT),
    set_scale_factor : Proc(IApplicationDesignModeSettings2*, Win32cr::UI::Shell::Common::DEVICE_SCALE_FACTOR, Win32cr::Foundation::HRESULT),
    set_application_view_state : Proc(IApplicationDesignModeSettings2*, Win32cr::UI::Shell::APPLICATION_VIEW_STATE, Win32cr::Foundation::HRESULT),
    compute_application_size : Proc(IApplicationDesignModeSettings2*, Win32cr::Foundation::SIZE*, Win32cr::Foundation::HRESULT),
    is_application_view_state_supported : Proc(IApplicationDesignModeSettings2*, Win32cr::UI::Shell::APPLICATION_VIEW_STATE, Win32cr::Foundation::SIZE, Win32cr::UI::Shell::Common::DEVICE_SCALE_FACTOR, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    trigger_edge_gesture : Proc(IApplicationDesignModeSettings2*, Win32cr::UI::Shell::EDGE_GESTURE_KIND, Win32cr::Foundation::HRESULT),
    set_native_display_orientation : Proc(IApplicationDesignModeSettings2*, Win32cr::UI::Shell::NATIVE_DISPLAY_ORIENTATION, Win32cr::Foundation::HRESULT),
    set_application_view_orientation : Proc(IApplicationDesignModeSettings2*, Win32cr::UI::Shell::APPLICATION_VIEW_ORIENTATION, Win32cr::Foundation::HRESULT),
    set_adjacent_display_edges : Proc(IApplicationDesignModeSettings2*, Win32cr::UI::Shell::ADJACENT_DISPLAY_EDGES, Win32cr::Foundation::HRESULT),
    set_is_on_lock_screen : Proc(IApplicationDesignModeSettings2*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_application_view_min_width : Proc(IApplicationDesignModeSettings2*, Win32cr::UI::Shell::APPLICATION_VIEW_MIN_WIDTH, Win32cr::Foundation::HRESULT),
    get_application_size_bounds : Proc(IApplicationDesignModeSettings2*, Win32cr::Foundation::SIZE*, Win32cr::Foundation::SIZE*, Win32cr::Foundation::HRESULT),
    get_application_view_orientation : Proc(IApplicationDesignModeSettings2*, Win32cr::Foundation::SIZE, Win32cr::UI::Shell::APPLICATION_VIEW_ORIENTATION*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IApplicationDesignModeSettings2, lpVtbl : IApplicationDesignModeSettings2Vtbl* do
    GUID = LibC::GUID.new(0x490514e1_u32, 0x675a_u16, 0x4d6e_u16, StaticArray[0xa5_u8, 0x8d_u8, 0xe5_u8, 0x49_u8, 0x1_u8, 0xb4_u8, 0xca_u8, 0x2f_u8])
    def query_interface(this : IApplicationDesignModeSettings2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IApplicationDesignModeSettings2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IApplicationDesignModeSettings2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_native_display_size(this : IApplicationDesignModeSettings2*, nativeDisplaySizePixels : Win32cr::Foundation::SIZE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_native_display_size.call(this, nativeDisplaySizePixels)
    end
    def set_scale_factor(this : IApplicationDesignModeSettings2*, scaleFactor : Win32cr::UI::Shell::Common::DEVICE_SCALE_FACTOR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_scale_factor.call(this, scaleFactor)
    end
    def set_application_view_state(this : IApplicationDesignModeSettings2*, viewState : Win32cr::UI::Shell::APPLICATION_VIEW_STATE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_application_view_state.call(this, viewState)
    end
    def compute_application_size(this : IApplicationDesignModeSettings2*, applicationSizePixels : Win32cr::Foundation::SIZE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.compute_application_size.call(this, applicationSizePixels)
    end
    def is_application_view_state_supported(this : IApplicationDesignModeSettings2*, viewState : Win32cr::UI::Shell::APPLICATION_VIEW_STATE, nativeDisplaySizePixels : Win32cr::Foundation::SIZE, scaleFactor : Win32cr::UI::Shell::Common::DEVICE_SCALE_FACTOR, supported : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_application_view_state_supported.call(this, viewState, nativeDisplaySizePixels, scaleFactor, supported)
    end
    def trigger_edge_gesture(this : IApplicationDesignModeSettings2*, edgeGestureKind : Win32cr::UI::Shell::EDGE_GESTURE_KIND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.trigger_edge_gesture.call(this, edgeGestureKind)
    end
    def set_native_display_orientation(this : IApplicationDesignModeSettings2*, nativeDisplayOrientation : Win32cr::UI::Shell::NATIVE_DISPLAY_ORIENTATION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_native_display_orientation.call(this, nativeDisplayOrientation)
    end
    def set_application_view_orientation(this : IApplicationDesignModeSettings2*, viewOrientation : Win32cr::UI::Shell::APPLICATION_VIEW_ORIENTATION) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_application_view_orientation.call(this, viewOrientation)
    end
    def set_adjacent_display_edges(this : IApplicationDesignModeSettings2*, adjacentDisplayEdges : Win32cr::UI::Shell::ADJACENT_DISPLAY_EDGES) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_adjacent_display_edges.call(this, adjacentDisplayEdges)
    end
    def set_is_on_lock_screen(this : IApplicationDesignModeSettings2*, isOnLockScreen : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_is_on_lock_screen.call(this, isOnLockScreen)
    end
    def set_application_view_min_width(this : IApplicationDesignModeSettings2*, viewMinWidth : Win32cr::UI::Shell::APPLICATION_VIEW_MIN_WIDTH) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_application_view_min_width.call(this, viewMinWidth)
    end
    def get_application_size_bounds(this : IApplicationDesignModeSettings2*, minApplicationSizePixels : Win32cr::Foundation::SIZE*, maxApplicationSizePixels : Win32cr::Foundation::SIZE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_application_size_bounds.call(this, minApplicationSizePixels, maxApplicationSizePixels)
    end
    def get_application_view_orientation(this : IApplicationDesignModeSettings2*, applicationSizePixels : Win32cr::Foundation::SIZE, viewOrientation : Win32cr::UI::Shell::APPLICATION_VIEW_ORIENTATION*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_application_view_orientation.call(this, applicationSizePixels, viewOrientation)
    end

  end

  @[Extern]
  record ILaunchTargetMonitorVtbl,
    query_interface : Proc(ILaunchTargetMonitor*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ILaunchTargetMonitor*, UInt32),
    release : Proc(ILaunchTargetMonitor*, UInt32),
    get_monitor : Proc(ILaunchTargetMonitor*, Win32cr::Graphics::Gdi::HMONITOR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ILaunchTargetMonitor, lpVtbl : ILaunchTargetMonitorVtbl* do
    GUID = LibC::GUID.new(0x266fbc7e_u32, 0x490d_u16, 0x46ed_u16, StaticArray[0xa9_u8, 0x6b_u8, 0x22_u8, 0x74_u8, 0xdb_u8, 0x25_u8, 0x20_u8, 0x3_u8])
    def query_interface(this : ILaunchTargetMonitor*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ILaunchTargetMonitor*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ILaunchTargetMonitor*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_monitor(this : ILaunchTargetMonitor*, monitor : Win32cr::Graphics::Gdi::HMONITOR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_monitor.call(this, monitor)
    end

  end

  @[Extern]
  record ILaunchSourceViewSizePreferenceVtbl,
    query_interface : Proc(ILaunchSourceViewSizePreference*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ILaunchSourceViewSizePreference*, UInt32),
    release : Proc(ILaunchSourceViewSizePreference*, UInt32),
    get_source_view_to_position : Proc(ILaunchSourceViewSizePreference*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    get_source_view_size_preference : Proc(ILaunchSourceViewSizePreference*, Win32cr::UI::Shell::APPLICATION_VIEW_SIZE_PREFERENCE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ILaunchSourceViewSizePreference, lpVtbl : ILaunchSourceViewSizePreferenceVtbl* do
    GUID = LibC::GUID.new(0xe5aa01f7_u32, 0x1fb8_u16, 0x4830_u16, StaticArray[0x87_u8, 0x20_u8, 0x4e_u8, 0x67_u8, 0x34_u8, 0xcb_u8, 0xd5_u8, 0xf3_u8])
    def query_interface(this : ILaunchSourceViewSizePreference*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ILaunchSourceViewSizePreference*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ILaunchSourceViewSizePreference*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_source_view_to_position(this : ILaunchSourceViewSizePreference*, hwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_source_view_to_position.call(this, hwnd)
    end
    def get_source_view_size_preference(this : ILaunchSourceViewSizePreference*, sourceSizeAfterLaunch : Win32cr::UI::Shell::APPLICATION_VIEW_SIZE_PREFERENCE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_source_view_size_preference.call(this, sourceSizeAfterLaunch)
    end

  end

  @[Extern]
  record ILaunchTargetViewSizePreferenceVtbl,
    query_interface : Proc(ILaunchTargetViewSizePreference*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ILaunchTargetViewSizePreference*, UInt32),
    release : Proc(ILaunchTargetViewSizePreference*, UInt32),
    get_target_view_size_preference : Proc(ILaunchTargetViewSizePreference*, Win32cr::UI::Shell::APPLICATION_VIEW_SIZE_PREFERENCE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ILaunchTargetViewSizePreference, lpVtbl : ILaunchTargetViewSizePreferenceVtbl* do
    GUID = LibC::GUID.new(0x2f0666c6_u32, 0x12f7_u16, 0x4360_u16, StaticArray[0xb5_u8, 0x11_u8, 0xa3_u8, 0x94_u8, 0xa0_u8, 0x55_u8, 0x37_u8, 0x25_u8])
    def query_interface(this : ILaunchTargetViewSizePreference*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ILaunchTargetViewSizePreference*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ILaunchTargetViewSizePreference*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_target_view_size_preference(this : ILaunchTargetViewSizePreference*, targetSizeOnLaunch : Win32cr::UI::Shell::APPLICATION_VIEW_SIZE_PREFERENCE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_target_view_size_preference.call(this, targetSizeOnLaunch)
    end

  end

  @[Extern]
  record ILaunchSourceAppUserModelIdVtbl,
    query_interface : Proc(ILaunchSourceAppUserModelId*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ILaunchSourceAppUserModelId*, UInt32),
    release : Proc(ILaunchSourceAppUserModelId*, UInt32),
    get_app_user_model_id : Proc(ILaunchSourceAppUserModelId*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ILaunchSourceAppUserModelId, lpVtbl : ILaunchSourceAppUserModelIdVtbl* do
    GUID = LibC::GUID.new(0x989191ac_u32, 0x28ff_u16, 0x4cf0_u16, StaticArray[0x95_u8, 0x84_u8, 0xe0_u8, 0xd0_u8, 0x78_u8, 0xbc_u8, 0x23_u8, 0x96_u8])
    def query_interface(this : ILaunchSourceAppUserModelId*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ILaunchSourceAppUserModelId*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ILaunchSourceAppUserModelId*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_app_user_model_id(this : ILaunchSourceAppUserModelId*, launchingApp : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_app_user_model_id.call(this, launchingApp)
    end

  end

  @[Extern]
  record IInitializeWithWindowVtbl,
    query_interface : Proc(IInitializeWithWindow*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInitializeWithWindow*, UInt32),
    release : Proc(IInitializeWithWindow*, UInt32),
    initialize__ : Proc(IInitializeWithWindow*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInitializeWithWindow, lpVtbl : IInitializeWithWindowVtbl* do
    GUID = LibC::GUID.new(0x3e68d4bd_u32, 0x7135_u16, 0x4d10_u16, StaticArray[0x80_u8, 0x18_u8, 0x9f_u8, 0xb6_u8, 0xd9_u8, 0xf3_u8, 0x3f_u8, 0xa1_u8])
    def query_interface(this : IInitializeWithWindow*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInitializeWithWindow*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInitializeWithWindow*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IInitializeWithWindow*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, hwnd)
    end

  end

  @[Extern]
  record IHandlerInfoVtbl,
    query_interface : Proc(IHandlerInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IHandlerInfo*, UInt32),
    release : Proc(IHandlerInfo*, UInt32),
    get_application_display_name : Proc(IHandlerInfo*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_application_publisher : Proc(IHandlerInfo*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_application_icon_reference : Proc(IHandlerInfo*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IHandlerInfo, lpVtbl : IHandlerInfoVtbl* do
    GUID = LibC::GUID.new(0x997706ef_u32, 0xf880_u16, 0x453b_u16, StaticArray[0x81_u8, 0x18_u8, 0x39_u8, 0xe1_u8, 0xa2_u8, 0xd2_u8, 0x65_u8, 0x5a_u8])
    def query_interface(this : IHandlerInfo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IHandlerInfo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IHandlerInfo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_application_display_name(this : IHandlerInfo*, value : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_application_display_name.call(this, value)
    end
    def get_application_publisher(this : IHandlerInfo*, value : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_application_publisher.call(this, value)
    end
    def get_application_icon_reference(this : IHandlerInfo*, value : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_application_icon_reference.call(this, value)
    end

  end

  @[Extern]
  record IHandlerInfo2Vtbl,
    query_interface : Proc(IHandlerInfo2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IHandlerInfo2*, UInt32),
    release : Proc(IHandlerInfo2*, UInt32),
    get_application_display_name : Proc(IHandlerInfo2*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_application_publisher : Proc(IHandlerInfo2*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_application_icon_reference : Proc(IHandlerInfo2*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_application_id : Proc(IHandlerInfo2*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IHandlerInfo2, lpVtbl : IHandlerInfo2Vtbl* do
    GUID = LibC::GUID.new(0x31cca04c_u32, 0x4d3_u16, 0x4ea9_u16, StaticArray[0x90_u8, 0xde_u8, 0x97_u8, 0xb1_u8, 0x5e_u8, 0x87_u8, 0xa5_u8, 0x32_u8])
    def query_interface(this : IHandlerInfo2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IHandlerInfo2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IHandlerInfo2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_application_display_name(this : IHandlerInfo2*, value : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_application_display_name.call(this, value)
    end
    def get_application_publisher(this : IHandlerInfo2*, value : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_application_publisher.call(this, value)
    end
    def get_application_icon_reference(this : IHandlerInfo2*, value : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_application_icon_reference.call(this, value)
    end
    def get_application_id(this : IHandlerInfo2*, value : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_application_id.call(this, value)
    end

  end

  @[Extern]
  record IHandlerActivationHostVtbl,
    query_interface : Proc(IHandlerActivationHost*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IHandlerActivationHost*, UInt32),
    release : Proc(IHandlerActivationHost*, UInt32),
    before_co_create_instance : Proc(IHandlerActivationHost*, LibC::GUID*, Void*, Void*, Win32cr::Foundation::HRESULT),
    before_create_process : Proc(IHandlerActivationHost*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IHandlerActivationHost, lpVtbl : IHandlerActivationHostVtbl* do
    GUID = LibC::GUID.new(0x35094a87_u32, 0x8bb1_u16, 0x4237_u16, StaticArray[0x96_u8, 0xc6_u8, 0xc4_u8, 0x17_u8, 0xee_u8, 0xbd_u8, 0xb0_u8, 0x78_u8])
    def query_interface(this : IHandlerActivationHost*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IHandlerActivationHost*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IHandlerActivationHost*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def before_co_create_instance(this : IHandlerActivationHost*, clsidHandler : LibC::GUID*, itemsBeingActivated : Void*, handlerInfo : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.before_co_create_instance.call(this, clsidHandler, itemsBeingActivated, handlerInfo)
    end
    def before_create_process(this : IHandlerActivationHost*, applicationPath : Win32cr::Foundation::PWSTR, commandLine : Win32cr::Foundation::PWSTR, handlerInfo : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.before_create_process.call(this, applicationPath, commandLine, handlerInfo)
    end

  end

  @[Extern]
  record IAppActivationUIInfoVtbl,
    query_interface : Proc(IAppActivationUIInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAppActivationUIInfo*, UInt32),
    release : Proc(IAppActivationUIInfo*, UInt32),
    get_monitor : Proc(IAppActivationUIInfo*, Win32cr::Graphics::Gdi::HMONITOR*, Win32cr::Foundation::HRESULT),
    get_invoke_point : Proc(IAppActivationUIInfo*, Win32cr::Foundation::POINT*, Win32cr::Foundation::HRESULT),
    get_show_command : Proc(IAppActivationUIInfo*, Int32*, Win32cr::Foundation::HRESULT),
    get_show_ui : Proc(IAppActivationUIInfo*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_key_state : Proc(IAppActivationUIInfo*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAppActivationUIInfo, lpVtbl : IAppActivationUIInfoVtbl* do
    GUID = LibC::GUID.new(0xabad189d_u32, 0x9fa3_u16, 0x4278_u16, StaticArray[0xb3_u8, 0xca_u8, 0x8c_u8, 0xa4_u8, 0x48_u8, 0xa8_u8, 0x8d_u8, 0xcb_u8])
    def query_interface(this : IAppActivationUIInfo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAppActivationUIInfo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAppActivationUIInfo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_monitor(this : IAppActivationUIInfo*, value : Win32cr::Graphics::Gdi::HMONITOR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_monitor.call(this, value)
    end
    def get_invoke_point(this : IAppActivationUIInfo*, value : Win32cr::Foundation::POINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_invoke_point.call(this, value)
    end
    def get_show_command(this : IAppActivationUIInfo*, value : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_show_command.call(this, value)
    end
    def get_show_ui(this : IAppActivationUIInfo*, value : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_show_ui.call(this, value)
    end
    def get_key_state(this : IAppActivationUIInfo*, value : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_key_state.call(this, value)
    end

  end

  @[Extern]
  record IContactManagerInteropVtbl,
    query_interface : Proc(IContactManagerInterop*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IContactManagerInterop*, UInt32),
    release : Proc(IContactManagerInterop*, UInt32),
    show_contact_card_for_window : Proc(IContactManagerInterop*, Win32cr::Foundation::HWND, Void*, Win32cr::Foundation::RECT*, Win32cr::UI::Shell::FLYOUT_PLACEMENT, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IContactManagerInterop, lpVtbl : IContactManagerInteropVtbl* do
    GUID = LibC::GUID.new(0x99eacba7_u32, 0xe073_u16, 0x43b6_u16, StaticArray[0xa8_u8, 0x96_u8, 0x55_u8, 0xaf_u8, 0xe4_u8, 0x8a_u8, 0x8_u8, 0x33_u8])
    def query_interface(this : IContactManagerInterop*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IContactManagerInterop*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IContactManagerInterop*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def show_contact_card_for_window(this : IContactManagerInterop*, appWindow : Win32cr::Foundation::HWND, contact : Void*, selection : Win32cr::Foundation::RECT*, preferredPlacement : Win32cr::UI::Shell::FLYOUT_PLACEMENT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_contact_card_for_window.call(this, appWindow, contact, selection, preferredPlacement)
    end

  end

  @[Extern]
  record IShellIconOverlayIdentifierVtbl,
    query_interface : Proc(IShellIconOverlayIdentifier*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellIconOverlayIdentifier*, UInt32),
    release : Proc(IShellIconOverlayIdentifier*, UInt32),
    is_member_of : Proc(IShellIconOverlayIdentifier*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_overlay_info : Proc(IShellIconOverlayIdentifier*, UInt16*, Int32, Int32*, UInt32*, Win32cr::Foundation::HRESULT),
    get_priority : Proc(IShellIconOverlayIdentifier*, Int32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellIconOverlayIdentifier, lpVtbl : IShellIconOverlayIdentifierVtbl* do
    GUID = LibC::GUID.new(0xc6c4200_u32, 0xc589_u16, 0x11d0_u16, StaticArray[0x99_u8, 0x9a_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd6_u8, 0x55_u8, 0xe1_u8])
    def query_interface(this : IShellIconOverlayIdentifier*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellIconOverlayIdentifier*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellIconOverlayIdentifier*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def is_member_of(this : IShellIconOverlayIdentifier*, pwszPath : Win32cr::Foundation::PWSTR, dwAttrib : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_member_of.call(this, pwszPath, dwAttrib)
    end
    def get_overlay_info(this : IShellIconOverlayIdentifier*, pwszIconFile : UInt16*, cchMax : Int32, pIndex : Int32*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_overlay_info.call(this, pwszIconFile, cchMax, pIndex, pdwFlags)
    end
    def get_priority(this : IShellIconOverlayIdentifier*, pPriority : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_priority.call(this, pPriority)
    end

  end

  @[Extern]
  record IBannerNotificationHandlerVtbl,
    query_interface : Proc(IBannerNotificationHandler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IBannerNotificationHandler*, UInt32),
    release : Proc(IBannerNotificationHandler*, UInt32),
    on_banner_event : Proc(IBannerNotificationHandler*, Win32cr::UI::Shell::BANNER_NOTIFICATION*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IBannerNotificationHandler, lpVtbl : IBannerNotificationHandlerVtbl* do
    GUID = LibC::GUID.new(0x8d7b2ba7_u32, 0xdb05_u16, 0x46a8_u16, StaticArray[0x82_u8, 0x3c_u8, 0xd2_u8, 0xb6_u8, 0xde_u8, 0x8_u8, 0xee_u8, 0x91_u8])
    def query_interface(this : IBannerNotificationHandler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IBannerNotificationHandler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IBannerNotificationHandler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_banner_event(this : IBannerNotificationHandler*, notification : Win32cr::UI::Shell::BANNER_NOTIFICATION*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_banner_event.call(this, notification)
    end

  end

  @[Extern]
  record ISortColumnArrayVtbl,
    query_interface : Proc(ISortColumnArray*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISortColumnArray*, UInt32),
    release : Proc(ISortColumnArray*, UInt32),
    get_count : Proc(ISortColumnArray*, UInt32*, Win32cr::Foundation::HRESULT),
    get_at : Proc(ISortColumnArray*, UInt32, Win32cr::UI::Shell::SORTCOLUMN*, Win32cr::Foundation::HRESULT),
    get_sort_type : Proc(ISortColumnArray*, Win32cr::UI::Shell::SORT_ORDER_TYPE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISortColumnArray, lpVtbl : ISortColumnArrayVtbl* do
    GUID = LibC::GUID.new(0x6dfc60fb_u32, 0xf2e9_u16, 0x459b_u16, StaticArray[0xbe_u8, 0xb5_u8, 0x28_u8, 0x8f_u8, 0x1a_u8, 0x7c_u8, 0x7d_u8, 0x54_u8])
    def query_interface(this : ISortColumnArray*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISortColumnArray*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISortColumnArray*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_count(this : ISortColumnArray*, columnCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_count.call(this, columnCount)
    end
    def get_at(this : ISortColumnArray*, index : UInt32, sortcolumn : Win32cr::UI::Shell::SORTCOLUMN*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_at.call(this, index, sortcolumn)
    end
    def get_sort_type(this : ISortColumnArray*, type__ : Win32cr::UI::Shell::SORT_ORDER_TYPE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_sort_type.call(this, type__)
    end

  end

  @[Extern]
  record IPropertyKeyStoreVtbl,
    query_interface : Proc(IPropertyKeyStore*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPropertyKeyStore*, UInt32),
    release : Proc(IPropertyKeyStore*, UInt32),
    get_key_count : Proc(IPropertyKeyStore*, Int32*, Win32cr::Foundation::HRESULT),
    get_key_at : Proc(IPropertyKeyStore*, Int32, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::HRESULT),
    append_key : Proc(IPropertyKeyStore*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::HRESULT),
    delete_key : Proc(IPropertyKeyStore*, Int32, Win32cr::Foundation::HRESULT),
    is_key_in_store : Proc(IPropertyKeyStore*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::HRESULT),
    remove_key : Proc(IPropertyKeyStore*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPropertyKeyStore, lpVtbl : IPropertyKeyStoreVtbl* do
    GUID = LibC::GUID.new(0x75bd59aa_u32, 0xf23b_u16, 0x4963_u16, StaticArray[0xab_u8, 0xa4_u8, 0xb_u8, 0x35_u8, 0x57_u8, 0x52_u8, 0xa9_u8, 0x1b_u8])
    def query_interface(this : IPropertyKeyStore*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPropertyKeyStore*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPropertyKeyStore*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_key_count(this : IPropertyKeyStore*, keyCount : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_key_count.call(this, keyCount)
    end
    def get_key_at(this : IPropertyKeyStore*, index : Int32, pkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_key_at.call(this, index, pkey)
    end
    def append_key(this : IPropertyKeyStore*, key : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.append_key.call(this, key)
    end
    def delete_key(this : IPropertyKeyStore*, index : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_key.call(this, index)
    end
    def is_key_in_store(this : IPropertyKeyStore*, key : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_key_in_store.call(this, key)
    end
    def remove_key(this : IPropertyKeyStore*, key : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_key.call(this, key)
    end

  end

  @[Extern]
  record IQueryCodePageVtbl,
    query_interface : Proc(IQueryCodePage*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IQueryCodePage*, UInt32),
    release : Proc(IQueryCodePage*, UInt32),
    get_code_page : Proc(IQueryCodePage*, UInt32*, Win32cr::Foundation::HRESULT),
    set_code_page : Proc(IQueryCodePage*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IQueryCodePage, lpVtbl : IQueryCodePageVtbl* do
    GUID = LibC::GUID.new(0xc7b236ce_u32, 0xee80_u16, 0x11d0_u16, StaticArray[0x98_u8, 0x5f_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x5_u8, 0x93_u8, 0x82_u8])
    def query_interface(this : IQueryCodePage*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IQueryCodePage*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IQueryCodePage*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_code_page(this : IQueryCodePage*, puiCodePage : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_code_page.call(this, puiCodePage)
    end
    def set_code_page(this : IQueryCodePage*, uiCodePage : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_code_page.call(this, uiCodePage)
    end

  end

  @[Extern]
  record IFolderViewOptionsVtbl,
    query_interface : Proc(IFolderViewOptions*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFolderViewOptions*, UInt32),
    release : Proc(IFolderViewOptions*, UInt32),
    set_folder_view_options : Proc(IFolderViewOptions*, Win32cr::UI::Shell::FOLDERVIEWOPTIONS, Win32cr::UI::Shell::FOLDERVIEWOPTIONS, Win32cr::Foundation::HRESULT),
    get_folder_view_options : Proc(IFolderViewOptions*, Win32cr::UI::Shell::FOLDERVIEWOPTIONS*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFolderViewOptions, lpVtbl : IFolderViewOptionsVtbl* do
    GUID = LibC::GUID.new(0x3cc974d2_u32, 0xb302_u16, 0x4d36_u16, StaticArray[0xad_u8, 0x3e_u8, 0x6_u8, 0xd9_u8, 0x3f_u8, 0x69_u8, 0x5d_u8, 0x3f_u8])
    def query_interface(this : IFolderViewOptions*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFolderViewOptions*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFolderViewOptions*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_folder_view_options(this : IFolderViewOptions*, fvoMask : Win32cr::UI::Shell::FOLDERVIEWOPTIONS, fvoFlags : Win32cr::UI::Shell::FOLDERVIEWOPTIONS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_folder_view_options.call(this, fvoMask, fvoFlags)
    end
    def get_folder_view_options(this : IFolderViewOptions*, pfvoFlags : Win32cr::UI::Shell::FOLDERVIEWOPTIONS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder_view_options.call(this, pfvoFlags)
    end

  end

  @[Extern]
  record IShellView3Vtbl,
    query_interface : Proc(IShellView3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellView3*, UInt32),
    release : Proc(IShellView3*, UInt32),
    get_window : Proc(IShellView3*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    context_sensitive_help : Proc(IShellView3*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    translate_accelerator : Proc(IShellView3*, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT),
    enable_modeless : Proc(IShellView3*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    ui_activate : Proc(IShellView3*, UInt32, Win32cr::Foundation::HRESULT),
    refresh : Proc(IShellView3*, Win32cr::Foundation::HRESULT),
    create_view_window : Proc(IShellView3*, Void*, Win32cr::UI::Shell::FOLDERSETTINGS*, Void*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    destroy_view_window : Proc(IShellView3*, Win32cr::Foundation::HRESULT),
    get_current_info : Proc(IShellView3*, Win32cr::UI::Shell::FOLDERSETTINGS*, Win32cr::Foundation::HRESULT),
    add_property_sheet_pages : Proc(IShellView3*, UInt32, Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT),
    save_view_state : Proc(IShellView3*, Win32cr::Foundation::HRESULT),
    select_item : Proc(IShellView3*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::Foundation::HRESULT),
    get_item_object : Proc(IShellView3*, UInt32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_view : Proc(IShellView3*, LibC::GUID*, UInt32, Win32cr::Foundation::HRESULT),
    create_view_window2 : Proc(IShellView3*, Win32cr::UI::Shell::SV2CVW2_PARAMS*, Win32cr::Foundation::HRESULT),
    handle_rename : Proc(IShellView3*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    select_and_position_item : Proc(IShellView3*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::Foundation::POINT*, Win32cr::Foundation::HRESULT),
    create_view_window3 : Proc(IShellView3*, Void*, Void*, UInt32, Win32cr::UI::Shell::FOLDERFLAGS, Win32cr::UI::Shell::FOLDERFLAGS, Win32cr::UI::Shell::FOLDERVIEWMODE, LibC::GUID*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellView3, lpVtbl : IShellView3Vtbl* do
    GUID = LibC::GUID.new(0xec39fa88_u32, 0xf8af_u16, 0x41c5_u16, StaticArray[0x84_u8, 0x21_u8, 0x38_u8, 0xbe_u8, 0xd2_u8, 0x8f_u8, 0x46_u8, 0x73_u8])
    def query_interface(this : IShellView3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellView3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellView3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IShellView3*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, phwnd)
    end
    def context_sensitive_help(this : IShellView3*, fEnterMode : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.context_sensitive_help.call(this, fEnterMode)
    end
    def translate_accelerator(this : IShellView3*, pmsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_accelerator.call(this, pmsg)
    end
    def enable_modeless(this : IShellView3*, fEnable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_modeless.call(this, fEnable)
    end
    def ui_activate(this : IShellView3*, uState : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ui_activate.call(this, uState)
    end
    def refresh(this : IShellView3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh.call(this)
    end
    def create_view_window(this : IShellView3*, psvPrevious : Void*, pfs : Win32cr::UI::Shell::FOLDERSETTINGS*, psb : Void*, prcView : Win32cr::Foundation::RECT*, phWnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_view_window.call(this, psvPrevious, pfs, psb, prcView, phWnd)
    end
    def destroy_view_window(this : IShellView3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.destroy_view_window.call(this)
    end
    def get_current_info(this : IShellView3*, pfs : Win32cr::UI::Shell::FOLDERSETTINGS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_info.call(this, pfs)
    end
    def add_property_sheet_pages(this : IShellView3*, dwReserved : UInt32, pfn : Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, lparam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_property_sheet_pages.call(this, dwReserved, pfn, lparam)
    end
    def save_view_state(this : IShellView3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.save_view_state.call(this)
    end
    def select_item(this : IShellView3*, pidlItem : Win32cr::UI::Shell::Common::ITEMIDLIST*, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_item.call(this, pidlItem, uFlags)
    end
    def get_item_object(this : IShellView3*, uItem : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_object.call(this, uItem, riid, ppv)
    end
    def get_view(this : IShellView3*, pvid : LibC::GUID*, uView : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_view.call(this, pvid, uView)
    end
    def create_view_window2(this : IShellView3*, lpParams : Win32cr::UI::Shell::SV2CVW2_PARAMS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_view_window2.call(this, lpParams)
    end
    def handle_rename(this : IShellView3*, pidlNew : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.handle_rename.call(this, pidlNew)
    end
    def select_and_position_item(this : IShellView3*, pidlItem : Win32cr::UI::Shell::Common::ITEMIDLIST*, uFlags : UInt32, ppt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_and_position_item.call(this, pidlItem, uFlags, ppt)
    end
    def create_view_window3(this : IShellView3*, psbOwner : Void*, psvPrev : Void*, dwViewFlags : UInt32, dwMask : Win32cr::UI::Shell::FOLDERFLAGS, dwFlags : Win32cr::UI::Shell::FOLDERFLAGS, fvMode : Win32cr::UI::Shell::FOLDERVIEWMODE, pvid : LibC::GUID*, prcView : Win32cr::Foundation::RECT*, phwndView : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_view_window3.call(this, psbOwner, psvPrev, dwViewFlags, dwMask, dwFlags, fvMode, pvid, prcView, phwndView)
    end

  end

  @[Extern]
  record ISearchBoxInfoVtbl,
    query_interface : Proc(ISearchBoxInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISearchBoxInfo*, UInt32),
    release : Proc(ISearchBoxInfo*, UInt32),
    get_condition : Proc(ISearchBoxInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_text : Proc(ISearchBoxInfo*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISearchBoxInfo, lpVtbl : ISearchBoxInfoVtbl* do
    GUID = LibC::GUID.new(0x6af6e03f_u32, 0xd664_u16, 0x4ef4_u16, StaticArray[0x96_u8, 0x26_u8, 0xf7_u8, 0xe0_u8, 0xed_u8, 0x36_u8, 0x75_u8, 0x5e_u8])
    def query_interface(this : ISearchBoxInfo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISearchBoxInfo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISearchBoxInfo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_condition(this : ISearchBoxInfo*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_condition.call(this, riid, ppv)
    end
    def get_text(this : ISearchBoxInfo*, ppsz : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_text.call(this, ppsz)
    end

  end

  @[Extern]
  record IVisualPropertiesVtbl,
    query_interface : Proc(IVisualProperties*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IVisualProperties*, UInt32),
    release : Proc(IVisualProperties*, UInt32),
    set_watermark : Proc(IVisualProperties*, Win32cr::Graphics::Gdi::HBITMAP, Win32cr::UI::Shell::VPWATERMARKFLAGS, Win32cr::Foundation::HRESULT),
    set_color : Proc(IVisualProperties*, Win32cr::UI::Shell::VPCOLORFLAGS, UInt32, Win32cr::Foundation::HRESULT),
    get_color : Proc(IVisualProperties*, Win32cr::UI::Shell::VPCOLORFLAGS, UInt32*, Win32cr::Foundation::HRESULT),
    set_item_height : Proc(IVisualProperties*, Int32, Win32cr::Foundation::HRESULT),
    get_item_height : Proc(IVisualProperties*, Int32*, Win32cr::Foundation::HRESULT),
    set_font : Proc(IVisualProperties*, Win32cr::Graphics::Gdi::LOGFONTW*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_font : Proc(IVisualProperties*, Win32cr::Graphics::Gdi::LOGFONTW*, Win32cr::Foundation::HRESULT),
    set_theme : Proc(IVisualProperties*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IVisualProperties, lpVtbl : IVisualPropertiesVtbl* do
    GUID = LibC::GUID.new(0xe693cf68_u32, 0xd967_u16, 0x4112_u16, StaticArray[0x87_u8, 0x63_u8, 0x99_u8, 0x17_u8, 0x2a_u8, 0xee_u8, 0x5e_u8, 0x5a_u8])
    def query_interface(this : IVisualProperties*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IVisualProperties*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IVisualProperties*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_watermark(this : IVisualProperties*, hbmp : Win32cr::Graphics::Gdi::HBITMAP, vpwf : Win32cr::UI::Shell::VPWATERMARKFLAGS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_watermark.call(this, hbmp, vpwf)
    end
    def set_color(this : IVisualProperties*, vpcf : Win32cr::UI::Shell::VPCOLORFLAGS, cr : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_color.call(this, vpcf, cr)
    end
    def get_color(this : IVisualProperties*, vpcf : Win32cr::UI::Shell::VPCOLORFLAGS, pcr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_color.call(this, vpcf, pcr)
    end
    def set_item_height(this : IVisualProperties*, cyItemInPixels : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_item_height.call(this, cyItemInPixels)
    end
    def get_item_height(this : IVisualProperties*, cyItemInPixels : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_height.call(this, cyItemInPixels)
    end
    def set_font(this : IVisualProperties*, plf : Win32cr::Graphics::Gdi::LOGFONTW*, bRedraw : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_font.call(this, plf, bRedraw)
    end
    def get_font(this : IVisualProperties*, plf : Win32cr::Graphics::Gdi::LOGFONTW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_font.call(this, plf)
    end
    def set_theme(this : IVisualProperties*, pszSubAppName : Win32cr::Foundation::PWSTR, pszSubIdList : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_theme.call(this, pszSubAppName, pszSubIdList)
    end

  end

  @[Extern]
  record ICommDlgBrowser3Vtbl,
    query_interface : Proc(ICommDlgBrowser3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICommDlgBrowser3*, UInt32),
    release : Proc(ICommDlgBrowser3*, UInt32),
    on_default_command : Proc(ICommDlgBrowser3*, Void*, Win32cr::Foundation::HRESULT),
    on_state_change : Proc(ICommDlgBrowser3*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    include_object : Proc(ICommDlgBrowser3*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    notify : Proc(ICommDlgBrowser3*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_default_menu_text : Proc(ICommDlgBrowser3*, Void*, UInt16*, Int32, Win32cr::Foundation::HRESULT),
    get_view_flags : Proc(ICommDlgBrowser3*, UInt32*, Win32cr::Foundation::HRESULT),
    on_column_clicked : Proc(ICommDlgBrowser3*, Void*, Int32, Win32cr::Foundation::HRESULT),
    get_current_filter : Proc(ICommDlgBrowser3*, UInt16*, Int32, Win32cr::Foundation::HRESULT),
    on_pre_view_created : Proc(ICommDlgBrowser3*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICommDlgBrowser3, lpVtbl : ICommDlgBrowser3Vtbl* do
    GUID = LibC::GUID.new(0xc8ad25a1_u32, 0x3294_u16, 0x41ee_u16, StaticArray[0x81_u8, 0x65_u8, 0x71_u8, 0x17_u8, 0x4b_u8, 0xd0_u8, 0x1c_u8, 0x57_u8])
    def query_interface(this : ICommDlgBrowser3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICommDlgBrowser3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICommDlgBrowser3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_default_command(this : ICommDlgBrowser3*, ppshv : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_default_command.call(this, ppshv)
    end
    def on_state_change(this : ICommDlgBrowser3*, ppshv : Void*, uChange : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_state_change.call(this, ppshv, uChange)
    end
    def include_object(this : ICommDlgBrowser3*, ppshv : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.include_object.call(this, ppshv, pidl)
    end
    def notify(this : ICommDlgBrowser3*, ppshv : Void*, dwNotifyType : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.notify.call(this, ppshv, dwNotifyType)
    end
    def get_default_menu_text(this : ICommDlgBrowser3*, ppshv : Void*, pszText : UInt16*, cchMax : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_menu_text.call(this, ppshv, pszText, cchMax)
    end
    def get_view_flags(this : ICommDlgBrowser3*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_view_flags.call(this, pdwFlags)
    end
    def on_column_clicked(this : ICommDlgBrowser3*, ppshv : Void*, iColumn : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_column_clicked.call(this, ppshv, iColumn)
    end
    def get_current_filter(this : ICommDlgBrowser3*, pszFileSpec : UInt16*, cchFileSpec : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_filter.call(this, pszFileSpec, cchFileSpec)
    end
    def on_pre_view_created(this : ICommDlgBrowser3*, ppshv : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_pre_view_created.call(this, ppshv)
    end

  end

  @[Extern]
  record IUserAccountChangeCallbackVtbl,
    query_interface : Proc(IUserAccountChangeCallback*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IUserAccountChangeCallback*, UInt32),
    release : Proc(IUserAccountChangeCallback*, UInt32),
    on_picture_change : Proc(IUserAccountChangeCallback*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IUserAccountChangeCallback, lpVtbl : IUserAccountChangeCallbackVtbl* do
    GUID = LibC::GUID.new(0xa561e69a_u32, 0xb4b8_u16, 0x4113_u16, StaticArray[0x91_u8, 0xa5_u8, 0x64_u8, 0xc6_u8, 0xbc_u8, 0xca_u8, 0x34_u8, 0x30_u8])
    def query_interface(this : IUserAccountChangeCallback*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IUserAccountChangeCallback*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IUserAccountChangeCallback*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_picture_change(this : IUserAccountChangeCallback*, pszUserName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_picture_change.call(this, pszUserName)
    end

  end

  @[Extern]
  record IStreamAsyncVtbl,
    query_interface : Proc(IStreamAsync*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IStreamAsync*, UInt32),
    release : Proc(IStreamAsync*, UInt32),
    read : Proc(IStreamAsync*, Void*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    write : Proc(IStreamAsync*, Void*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    seek : Proc(IStreamAsync*, Win32cr::Foundation::LARGE_INTEGER, Win32cr::System::Com::STREAM_SEEK, Win32cr::Foundation::ULARGE_INTEGER*, Win32cr::Foundation::HRESULT),
    set_size : Proc(IStreamAsync*, Win32cr::Foundation::ULARGE_INTEGER, Win32cr::Foundation::HRESULT),
    copy_to : Proc(IStreamAsync*, Void*, Win32cr::Foundation::ULARGE_INTEGER, Win32cr::Foundation::ULARGE_INTEGER*, Win32cr::Foundation::ULARGE_INTEGER*, Win32cr::Foundation::HRESULT),
    commit : Proc(IStreamAsync*, Win32cr::System::Com::STGC, Win32cr::Foundation::HRESULT),
    revert : Proc(IStreamAsync*, Win32cr::Foundation::HRESULT),
    lock_region : Proc(IStreamAsync*, Win32cr::Foundation::ULARGE_INTEGER, Win32cr::Foundation::ULARGE_INTEGER, UInt32, Win32cr::Foundation::HRESULT),
    unlock_region : Proc(IStreamAsync*, Win32cr::Foundation::ULARGE_INTEGER, Win32cr::Foundation::ULARGE_INTEGER, UInt32, Win32cr::Foundation::HRESULT),
    stat : Proc(IStreamAsync*, Win32cr::System::Com::STATSTG*, UInt32, Win32cr::Foundation::HRESULT),
    clone : Proc(IStreamAsync*, Void**, Win32cr::Foundation::HRESULT),
    read_async : Proc(IStreamAsync*, Void*, UInt32, UInt32*, Win32cr::System::IO::OVERLAPPED*, Win32cr::Foundation::HRESULT),
    write_async : Proc(IStreamAsync*, Void*, UInt32, UInt32*, Win32cr::System::IO::OVERLAPPED*, Win32cr::Foundation::HRESULT),
    overlapped_result : Proc(IStreamAsync*, Win32cr::System::IO::OVERLAPPED*, UInt32*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    cancel_io : Proc(IStreamAsync*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IStreamAsync, lpVtbl : IStreamAsyncVtbl* do
    GUID = LibC::GUID.new(0xfe0b6665_u32, 0xe0ca_u16, 0x49b9_u16, StaticArray[0xa1_u8, 0x78_u8, 0x2b_u8, 0x5c_u8, 0xb4_u8, 0x8d_u8, 0x92_u8, 0xa5_u8])
    def query_interface(this : IStreamAsync*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IStreamAsync*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IStreamAsync*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def read(this : IStreamAsync*, pv : Void*, cb : UInt32, pcbRead : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read.call(this, pv, cb, pcbRead)
    end
    def write(this : IStreamAsync*, pv : Void*, cb : UInt32, pcbWritten : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write.call(this, pv, cb, pcbWritten)
    end
    def seek(this : IStreamAsync*, dlibMove : Win32cr::Foundation::LARGE_INTEGER, dwOrigin : Win32cr::System::Com::STREAM_SEEK, plibNewPosition : Win32cr::Foundation::ULARGE_INTEGER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.seek.call(this, dlibMove, dwOrigin, plibNewPosition)
    end
    def set_size(this : IStreamAsync*, libNewSize : Win32cr::Foundation::ULARGE_INTEGER) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_size.call(this, libNewSize)
    end
    def copy_to(this : IStreamAsync*, pstm : Void*, cb : Win32cr::Foundation::ULARGE_INTEGER, pcbRead : Win32cr::Foundation::ULARGE_INTEGER*, pcbWritten : Win32cr::Foundation::ULARGE_INTEGER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_to.call(this, pstm, cb, pcbRead, pcbWritten)
    end
    def commit(this : IStreamAsync*, grfCommitFlags : Win32cr::System::Com::STGC) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.commit.call(this, grfCommitFlags)
    end
    def revert(this : IStreamAsync*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.revert.call(this)
    end
    def lock_region(this : IStreamAsync*, libOffset : Win32cr::Foundation::ULARGE_INTEGER, cb : Win32cr::Foundation::ULARGE_INTEGER, dwLockType : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.lock_region.call(this, libOffset, cb, dwLockType)
    end
    def unlock_region(this : IStreamAsync*, libOffset : Win32cr::Foundation::ULARGE_INTEGER, cb : Win32cr::Foundation::ULARGE_INTEGER, dwLockType : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unlock_region.call(this, libOffset, cb, dwLockType)
    end
    def stat(this : IStreamAsync*, pstatstg : Win32cr::System::Com::STATSTG*, grfStatFlag : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stat.call(this, pstatstg, grfStatFlag)
    end
    def clone(this : IStreamAsync*, ppstm : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppstm)
    end
    def read_async(this : IStreamAsync*, pv : Void*, cb : UInt32, pcbRead : UInt32*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read_async.call(this, pv, cb, pcbRead, lpOverlapped)
    end
    def write_async(this : IStreamAsync*, lpBuffer : Void*, cb : UInt32, pcbWritten : UInt32*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_async.call(this, lpBuffer, cb, pcbWritten, lpOverlapped)
    end
    def overlapped_result(this : IStreamAsync*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpNumberOfBytesTransferred : UInt32*, bWait : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.overlapped_result.call(this, lpOverlapped, lpNumberOfBytesTransferred, bWait)
    end
    def cancel_io(this : IStreamAsync*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cancel_io.call(this)
    end

  end

  @[Extern]
  record IStreamUnbufferedInfoVtbl,
    query_interface : Proc(IStreamUnbufferedInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IStreamUnbufferedInfo*, UInt32),
    release : Proc(IStreamUnbufferedInfo*, UInt32),
    get_sector_size : Proc(IStreamUnbufferedInfo*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IStreamUnbufferedInfo, lpVtbl : IStreamUnbufferedInfoVtbl* do
    GUID = LibC::GUID.new(0x8a68fdda_u32, 0x1fdc_u16, 0x4c20_u16, StaticArray[0x8c_u8, 0xeb_u8, 0x41_u8, 0x66_u8, 0x43_u8, 0xb5_u8, 0xa6_u8, 0x25_u8])
    def query_interface(this : IStreamUnbufferedInfo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IStreamUnbufferedInfo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IStreamUnbufferedInfo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_sector_size(this : IStreamUnbufferedInfo*, pcbSectorSize : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_sector_size.call(this, pcbSectorSize)
    end

  end

  @[Extern]
  record IDragSourceHelper2Vtbl,
    query_interface : Proc(IDragSourceHelper2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDragSourceHelper2*, UInt32),
    release : Proc(IDragSourceHelper2*, UInt32),
    initialize_from_bitmap : Proc(IDragSourceHelper2*, Win32cr::UI::Shell::SHDRAGIMAGE*, Void*, Win32cr::Foundation::HRESULT),
    initialize_from_window : Proc(IDragSourceHelper2*, Win32cr::Foundation::HWND, Win32cr::Foundation::POINT*, Void*, Win32cr::Foundation::HRESULT),
    set_flags : Proc(IDragSourceHelper2*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDragSourceHelper2, lpVtbl : IDragSourceHelper2Vtbl* do
    GUID = LibC::GUID.new(0x83e07d0d_u32, 0xc5f_u16, 0x4163_u16, StaticArray[0xbf_u8, 0x1a_u8, 0x60_u8, 0xb2_u8, 0x74_u8, 0x5_u8, 0x1e_u8, 0x40_u8])
    def query_interface(this : IDragSourceHelper2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDragSourceHelper2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDragSourceHelper2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize_from_bitmap(this : IDragSourceHelper2*, pshdi : Win32cr::UI::Shell::SHDRAGIMAGE*, pDataObject : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_from_bitmap.call(this, pshdi, pDataObject)
    end
    def initialize_from_window(this : IDragSourceHelper2*, hwnd : Win32cr::Foundation::HWND, ppt : Win32cr::Foundation::POINT*, pDataObject : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_from_window.call(this, hwnd, ppt, pDataObject)
    end
    def set_flags(this : IDragSourceHelper2*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flags.call(this, dwFlags)
    end

  end

  @[Extern]
  record IHWEventHandlerVtbl,
    query_interface : Proc(IHWEventHandler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IHWEventHandler*, UInt32),
    release : Proc(IHWEventHandler*, UInt32),
    initialize__ : Proc(IHWEventHandler*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    handle_event : Proc(IHWEventHandler*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    handle_event_with_content : Proc(IHWEventHandler*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IHWEventHandler, lpVtbl : IHWEventHandlerVtbl* do
    GUID = LibC::GUID.new(0xc1fb73d0_u32, 0xec3a_u16, 0x4ba2_u16, StaticArray[0xb5_u8, 0x12_u8, 0x8c_u8, 0xdb_u8, 0x91_u8, 0x87_u8, 0xb6_u8, 0xd1_u8])
    def query_interface(this : IHWEventHandler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IHWEventHandler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IHWEventHandler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IHWEventHandler*, pszParams : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, pszParams)
    end
    def handle_event(this : IHWEventHandler*, pszDeviceID : Win32cr::Foundation::PWSTR, pszAltDeviceID : Win32cr::Foundation::PWSTR, pszEventType : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.handle_event.call(this, pszDeviceID, pszAltDeviceID, pszEventType)
    end
    def handle_event_with_content(this : IHWEventHandler*, pszDeviceID : Win32cr::Foundation::PWSTR, pszAltDeviceID : Win32cr::Foundation::PWSTR, pszEventType : Win32cr::Foundation::PWSTR, pszContentTypeHandler : Win32cr::Foundation::PWSTR, pdataobject : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.handle_event_with_content.call(this, pszDeviceID, pszAltDeviceID, pszEventType, pszContentTypeHandler, pdataobject)
    end

  end

  @[Extern]
  record IHWEventHandler2Vtbl,
    query_interface : Proc(IHWEventHandler2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IHWEventHandler2*, UInt32),
    release : Proc(IHWEventHandler2*, UInt32),
    initialize__ : Proc(IHWEventHandler2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    handle_event : Proc(IHWEventHandler2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    handle_event_with_content : Proc(IHWEventHandler2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT),
    handle_event_with_hwnd : Proc(IHWEventHandler2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IHWEventHandler2, lpVtbl : IHWEventHandler2Vtbl* do
    GUID = LibC::GUID.new(0xcfcc809f_u32, 0x295d_u16, 0x42e8_u16, StaticArray[0x9f_u8, 0xfc_u8, 0x42_u8, 0x4b_u8, 0x33_u8, 0xc4_u8, 0x87_u8, 0xe6_u8])
    def query_interface(this : IHWEventHandler2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IHWEventHandler2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IHWEventHandler2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IHWEventHandler2*, pszParams : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, pszParams)
    end
    def handle_event(this : IHWEventHandler2*, pszDeviceID : Win32cr::Foundation::PWSTR, pszAltDeviceID : Win32cr::Foundation::PWSTR, pszEventType : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.handle_event.call(this, pszDeviceID, pszAltDeviceID, pszEventType)
    end
    def handle_event_with_content(this : IHWEventHandler2*, pszDeviceID : Win32cr::Foundation::PWSTR, pszAltDeviceID : Win32cr::Foundation::PWSTR, pszEventType : Win32cr::Foundation::PWSTR, pszContentTypeHandler : Win32cr::Foundation::PWSTR, pdataobject : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.handle_event_with_content.call(this, pszDeviceID, pszAltDeviceID, pszEventType, pszContentTypeHandler, pdataobject)
    end
    def handle_event_with_hwnd(this : IHWEventHandler2*, pszDeviceID : Win32cr::Foundation::PWSTR, pszAltDeviceID : Win32cr::Foundation::PWSTR, pszEventType : Win32cr::Foundation::PWSTR, hwndOwner : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.handle_event_with_hwnd.call(this, pszDeviceID, pszAltDeviceID, pszEventType, hwndOwner)
    end

  end

  @[Extern]
  record IQueryCancelAutoPlayVtbl,
    query_interface : Proc(IQueryCancelAutoPlay*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IQueryCancelAutoPlay*, UInt32),
    release : Proc(IQueryCancelAutoPlay*, UInt32),
    allow_auto_play : Proc(IQueryCancelAutoPlay*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IQueryCancelAutoPlay, lpVtbl : IQueryCancelAutoPlayVtbl* do
    GUID = LibC::GUID.new(0xddefe873_u32, 0x6997_u16, 0x4e68_u16, StaticArray[0xbe_u8, 0x26_u8, 0x39_u8, 0xb6_u8, 0x33_u8, 0xad_u8, 0xbe_u8, 0x12_u8])
    def query_interface(this : IQueryCancelAutoPlay*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IQueryCancelAutoPlay*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IQueryCancelAutoPlay*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def allow_auto_play(this : IQueryCancelAutoPlay*, pszPath : Win32cr::Foundation::PWSTR, dwContentType : UInt32, pszLabel : Win32cr::Foundation::PWSTR, dwSerialNumber : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.allow_auto_play.call(this, pszPath, dwContentType, pszLabel, dwSerialNumber)
    end

  end

  @[Extern]
  record IDynamicHWHandlerVtbl,
    query_interface : Proc(IDynamicHWHandler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDynamicHWHandler*, UInt32),
    release : Proc(IDynamicHWHandler*, UInt32),
    get_dynamic_info : Proc(IDynamicHWHandler*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDynamicHWHandler, lpVtbl : IDynamicHWHandlerVtbl* do
    GUID = LibC::GUID.new(0xdc2601d7_u32, 0x59e_u16, 0x42fc_u16, StaticArray[0xa0_u8, 0x9d_u8, 0x2a_u8, 0xfd_u8, 0x21_u8, 0xb6_u8, 0xd5_u8, 0xf7_u8])
    def query_interface(this : IDynamicHWHandler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDynamicHWHandler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDynamicHWHandler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_dynamic_info(this : IDynamicHWHandler*, pszDeviceID : Win32cr::Foundation::PWSTR, dwContentType : UInt32, ppszAction : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_dynamic_info.call(this, pszDeviceID, dwContentType, ppszAction)
    end

  end

  @[Extern]
  record IUserNotificationCallbackVtbl,
    query_interface : Proc(IUserNotificationCallback*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IUserNotificationCallback*, UInt32),
    release : Proc(IUserNotificationCallback*, UInt32),
    on_balloon_user_click : Proc(IUserNotificationCallback*, Win32cr::Foundation::POINT*, Win32cr::Foundation::HRESULT),
    on_left_click : Proc(IUserNotificationCallback*, Win32cr::Foundation::POINT*, Win32cr::Foundation::HRESULT),
    on_context_menu : Proc(IUserNotificationCallback*, Win32cr::Foundation::POINT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IUserNotificationCallback, lpVtbl : IUserNotificationCallbackVtbl* do
    GUID = LibC::GUID.new(0x19108294_u32, 0x441_u16, 0x4aff_u16, StaticArray[0x80_u8, 0x13_u8, 0xfa_u8, 0xa_u8, 0x73_u8, 0xb_u8, 0xb_u8, 0xea_u8])
    def query_interface(this : IUserNotificationCallback*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IUserNotificationCallback*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IUserNotificationCallback*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_balloon_user_click(this : IUserNotificationCallback*, pt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_balloon_user_click.call(this, pt)
    end
    def on_left_click(this : IUserNotificationCallback*, pt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_left_click.call(this, pt)
    end
    def on_context_menu(this : IUserNotificationCallback*, pt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_context_menu.call(this, pt)
    end

  end

  @[Extern]
  record IUserNotification2Vtbl,
    query_interface : Proc(IUserNotification2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IUserNotification2*, UInt32),
    release : Proc(IUserNotification2*, UInt32),
    set_balloon_info : Proc(IUserNotification2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    set_balloon_retry : Proc(IUserNotification2*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    set_icon_info : Proc(IUserNotification2*, Win32cr::UI::WindowsAndMessaging::HICON, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    show : Proc(IUserNotification2*, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    play_sound : Proc(IUserNotification2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IUserNotification2, lpVtbl : IUserNotification2Vtbl* do
    GUID = LibC::GUID.new(0x215913cc_u32, 0x57eb_u16, 0x4fab_u16, StaticArray[0xab_u8, 0x5a_u8, 0xe5_u8, 0xfa_u8, 0x7b_u8, 0xea_u8, 0x2a_u8, 0x6c_u8])
    def query_interface(this : IUserNotification2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IUserNotification2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IUserNotification2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_balloon_info(this : IUserNotification2*, pszTitle : Win32cr::Foundation::PWSTR, pszText : Win32cr::Foundation::PWSTR, dwInfoFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_balloon_info.call(this, pszTitle, pszText, dwInfoFlags)
    end
    def set_balloon_retry(this : IUserNotification2*, dwShowTime : UInt32, dwInterval : UInt32, cRetryCount : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_balloon_retry.call(this, dwShowTime, dwInterval, cRetryCount)
    end
    def set_icon_info(this : IUserNotification2*, hIcon : Win32cr::UI::WindowsAndMessaging::HICON, pszToolTip : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_icon_info.call(this, hIcon, pszToolTip)
    end
    def show(this : IUserNotification2*, pqc : Void*, dwContinuePollInterval : UInt32, pSink : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show.call(this, pqc, dwContinuePollInterval, pSink)
    end
    def play_sound(this : IUserNotification2*, pszSoundName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.play_sound.call(this, pszSoundName)
    end

  end

  @[Extern]
  record IDeskBand2Vtbl,
    query_interface : Proc(IDeskBand2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDeskBand2*, UInt32),
    release : Proc(IDeskBand2*, UInt32),
    get_window : Proc(IDeskBand2*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    context_sensitive_help : Proc(IDeskBand2*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    show_dw : Proc(IDeskBand2*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    close_dw : Proc(IDeskBand2*, UInt32, Win32cr::Foundation::HRESULT),
    resize_border_dw : Proc(IDeskBand2*, Win32cr::Foundation::RECT*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_band_info : Proc(IDeskBand2*, UInt32, UInt32, Win32cr::UI::Shell::DESKBANDINFO*, Win32cr::Foundation::HRESULT),
    can_render_composited : Proc(IDeskBand2*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    set_composition_state : Proc(IDeskBand2*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_composition_state : Proc(IDeskBand2*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDeskBand2, lpVtbl : IDeskBand2Vtbl* do
    GUID = LibC::GUID.new(0x79d16de4_u32, 0xabee_u16, 0x4021_u16, StaticArray[0x8d_u8, 0x9d_u8, 0x91_u8, 0x69_u8, 0xb2_u8, 0x61_u8, 0xd6_u8, 0x57_u8])
    def query_interface(this : IDeskBand2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDeskBand2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDeskBand2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IDeskBand2*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, phwnd)
    end
    def context_sensitive_help(this : IDeskBand2*, fEnterMode : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.context_sensitive_help.call(this, fEnterMode)
    end
    def show_dw(this : IDeskBand2*, fShow : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_dw.call(this, fShow)
    end
    def close_dw(this : IDeskBand2*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.close_dw.call(this, dwReserved)
    end
    def resize_border_dw(this : IDeskBand2*, prcBorder : Win32cr::Foundation::RECT*, punkToolbarSite : Void*, fReserved : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resize_border_dw.call(this, prcBorder, punkToolbarSite, fReserved)
    end
    def get_band_info(this : IDeskBand2*, dwBandID : UInt32, dwViewMode : UInt32, pdbi : Win32cr::UI::Shell::DESKBANDINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_band_info.call(this, dwBandID, dwViewMode, pdbi)
    end
    def can_render_composited(this : IDeskBand2*, pfCanRenderComposited : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.can_render_composited.call(this, pfCanRenderComposited)
    end
    def set_composition_state(this : IDeskBand2*, fCompositionEnabled : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_composition_state.call(this, fCompositionEnabled)
    end
    def get_composition_state(this : IDeskBand2*, pfCompositionEnabled : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_composition_state.call(this, pfCompositionEnabled)
    end

  end

  @[Extern]
  record IStartMenuPinnedListVtbl,
    query_interface : Proc(IStartMenuPinnedList*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IStartMenuPinnedList*, UInt32),
    release : Proc(IStartMenuPinnedList*, UInt32),
    remove_from_list : Proc(IStartMenuPinnedList*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IStartMenuPinnedList, lpVtbl : IStartMenuPinnedListVtbl* do
    GUID = LibC::GUID.new(0x4cd19ada_u32, 0x25a5_u16, 0x4a32_u16, StaticArray[0xb3_u8, 0xb7_u8, 0x34_u8, 0x7b_u8, 0xee_u8, 0x5b_u8, 0xe3_u8, 0x6b_u8])
    def query_interface(this : IStartMenuPinnedList*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IStartMenuPinnedList*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IStartMenuPinnedList*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def remove_from_list(this : IStartMenuPinnedList*, pitem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_from_list.call(this, pitem)
    end

  end

  @[Extern]
  record ICDBurnVtbl,
    query_interface : Proc(ICDBurn*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICDBurn*, UInt32),
    release : Proc(ICDBurn*, UInt32),
    get_recorder_drive_letter : Proc(ICDBurn*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    burn : Proc(ICDBurn*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    has_recordable_drive : Proc(ICDBurn*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICDBurn, lpVtbl : ICDBurnVtbl* do
    GUID = LibC::GUID.new(0x3d73a659_u32, 0xe5d0_u16, 0x4d42_u16, StaticArray[0xaf_u8, 0xc0_u8, 0x51_u8, 0x21_u8, 0xba_u8, 0x42_u8, 0x5c_u8, 0x8d_u8])
    def query_interface(this : ICDBurn*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICDBurn*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICDBurn*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_recorder_drive_letter(this : ICDBurn*, pszDrive : UInt16*, cch : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_recorder_drive_letter.call(this, pszDrive, cch)
    end
    def burn(this : ICDBurn*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.burn.call(this, hwnd)
    end
    def has_recordable_drive(this : ICDBurn*, pfHasRecorder : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.has_recordable_drive.call(this, pfHasRecorder)
    end

  end

  @[Extern]
  record IWizardSiteVtbl,
    query_interface : Proc(IWizardSite*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWizardSite*, UInt32),
    release : Proc(IWizardSite*, UInt32),
    get_previous_page : Proc(IWizardSite*, Win32cr::UI::Controls::HPROPSHEETPAGE*, Win32cr::Foundation::HRESULT),
    get_next_page : Proc(IWizardSite*, Win32cr::UI::Controls::HPROPSHEETPAGE*, Win32cr::Foundation::HRESULT),
    get_cancelled_page : Proc(IWizardSite*, Win32cr::UI::Controls::HPROPSHEETPAGE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWizardSite, lpVtbl : IWizardSiteVtbl* do
    GUID = LibC::GUID.new(0x88960f5b_u32, 0x422f_u16, 0x4e7b_u16, StaticArray[0x80_u8, 0x13_u8, 0x73_u8, 0x41_u8, 0x53_u8, 0x81_u8, 0xc3_u8, 0xc3_u8])
    def query_interface(this : IWizardSite*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWizardSite*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWizardSite*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_previous_page(this : IWizardSite*, phpage : Win32cr::UI::Controls::HPROPSHEETPAGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_previous_page.call(this, phpage)
    end
    def get_next_page(this : IWizardSite*, phpage : Win32cr::UI::Controls::HPROPSHEETPAGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_next_page.call(this, phpage)
    end
    def get_cancelled_page(this : IWizardSite*, phpage : Win32cr::UI::Controls::HPROPSHEETPAGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cancelled_page.call(this, phpage)
    end

  end

  @[Extern]
  record IWizardExtensionVtbl,
    query_interface : Proc(IWizardExtension*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWizardExtension*, UInt32),
    release : Proc(IWizardExtension*, UInt32),
    add_pages : Proc(IWizardExtension*, Win32cr::UI::Controls::HPROPSHEETPAGE*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_first_page : Proc(IWizardExtension*, Win32cr::UI::Controls::HPROPSHEETPAGE*, Win32cr::Foundation::HRESULT),
    get_last_page : Proc(IWizardExtension*, Win32cr::UI::Controls::HPROPSHEETPAGE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWizardExtension, lpVtbl : IWizardExtensionVtbl* do
    GUID = LibC::GUID.new(0xc02ea696_u32, 0x86cc_u16, 0x491e_u16, StaticArray[0x9b_u8, 0x23_u8, 0x74_u8, 0x39_u8, 0x4a_u8, 0x4_u8, 0x44_u8, 0xa8_u8])
    def query_interface(this : IWizardExtension*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWizardExtension*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWizardExtension*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_pages(this : IWizardExtension*, aPages : Win32cr::UI::Controls::HPROPSHEETPAGE*, cPages : UInt32, pnPagesAdded : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_pages.call(this, aPages, cPages, pnPagesAdded)
    end
    def get_first_page(this : IWizardExtension*, phpage : Win32cr::UI::Controls::HPROPSHEETPAGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_first_page.call(this, phpage)
    end
    def get_last_page(this : IWizardExtension*, phpage : Win32cr::UI::Controls::HPROPSHEETPAGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_last_page.call(this, phpage)
    end

  end

  @[Extern]
  record IWebWizardExtensionVtbl,
    query_interface : Proc(IWebWizardExtension*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWebWizardExtension*, UInt32),
    release : Proc(IWebWizardExtension*, UInt32),
    add_pages : Proc(IWebWizardExtension*, Win32cr::UI::Controls::HPROPSHEETPAGE*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_first_page : Proc(IWebWizardExtension*, Win32cr::UI::Controls::HPROPSHEETPAGE*, Win32cr::Foundation::HRESULT),
    get_last_page : Proc(IWebWizardExtension*, Win32cr::UI::Controls::HPROPSHEETPAGE*, Win32cr::Foundation::HRESULT),
    set_initial_url : Proc(IWebWizardExtension*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_error_url : Proc(IWebWizardExtension*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWebWizardExtension, lpVtbl : IWebWizardExtensionVtbl* do
    GUID = LibC::GUID.new(0xe6b3f66_u32, 0x98d1_u16, 0x48c0_u16, StaticArray[0xa2_u8, 0x22_u8, 0xfb_u8, 0xde_u8, 0x74_u8, 0xe2_u8, 0xfb_u8, 0xc5_u8])
    def query_interface(this : IWebWizardExtension*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWebWizardExtension*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWebWizardExtension*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_pages(this : IWebWizardExtension*, aPages : Win32cr::UI::Controls::HPROPSHEETPAGE*, cPages : UInt32, pnPagesAdded : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_pages.call(this, aPages, cPages, pnPagesAdded)
    end
    def get_first_page(this : IWebWizardExtension*, phpage : Win32cr::UI::Controls::HPROPSHEETPAGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_first_page.call(this, phpage)
    end
    def get_last_page(this : IWebWizardExtension*, phpage : Win32cr::UI::Controls::HPROPSHEETPAGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_last_page.call(this, phpage)
    end
    def set_initial_url(this : IWebWizardExtension*, pszURL : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_initial_url.call(this, pszURL)
    end
    def set_error_url(this : IWebWizardExtension*, pszErrorURL : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_error_url.call(this, pszErrorURL)
    end

  end

  @[Extern]
  record IPublishingWizardVtbl,
    query_interface : Proc(IPublishingWizard*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPublishingWizard*, UInt32),
    release : Proc(IPublishingWizard*, UInt32),
    add_pages : Proc(IPublishingWizard*, Win32cr::UI::Controls::HPROPSHEETPAGE*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_first_page : Proc(IPublishingWizard*, Win32cr::UI::Controls::HPROPSHEETPAGE*, Win32cr::Foundation::HRESULT),
    get_last_page : Proc(IPublishingWizard*, Win32cr::UI::Controls::HPROPSHEETPAGE*, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IPublishingWizard*, Void*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_transfer_manifest : Proc(IPublishingWizard*, Win32cr::Foundation::HRESULT*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPublishingWizard, lpVtbl : IPublishingWizardVtbl* do
    GUID = LibC::GUID.new(0xaa9198bb_u32, 0xccec_u16, 0x472d_u16, StaticArray[0xbe_u8, 0xed_u8, 0x19_u8, 0xa4_u8, 0xf6_u8, 0x73_u8, 0x3f_u8, 0x7a_u8])
    def query_interface(this : IPublishingWizard*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPublishingWizard*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPublishingWizard*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_pages(this : IPublishingWizard*, aPages : Win32cr::UI::Controls::HPROPSHEETPAGE*, cPages : UInt32, pnPagesAdded : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_pages.call(this, aPages, cPages, pnPagesAdded)
    end
    def get_first_page(this : IPublishingWizard*, phpage : Win32cr::UI::Controls::HPROPSHEETPAGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_first_page.call(this, phpage)
    end
    def get_last_page(this : IPublishingWizard*, phpage : Win32cr::UI::Controls::HPROPSHEETPAGE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_last_page.call(this, phpage)
    end
    def initialize__(this : IPublishingWizard*, pdo : Void*, dwOptions : UInt32, pszServiceScope : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, pdo, dwOptions, pszServiceScope)
    end
    def get_transfer_manifest(this : IPublishingWizard*, phrFromTransfer : Win32cr::Foundation::HRESULT*, pdocManifest : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_transfer_manifest.call(this, phrFromTransfer, pdocManifest)
    end

  end

  @[Extern]
  record IFolderViewHostVtbl,
    query_interface : Proc(IFolderViewHost*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFolderViewHost*, UInt32),
    release : Proc(IFolderViewHost*, UInt32),
    initialize__ : Proc(IFolderViewHost*, Win32cr::Foundation::HWND, Void*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFolderViewHost, lpVtbl : IFolderViewHostVtbl* do
    GUID = LibC::GUID.new(0x1ea58f02_u32, 0xd55a_u16, 0x411d_u16, StaticArray[0xb0_u8, 0x9e_u8, 0x9e_u8, 0x65_u8, 0xac_u8, 0x21_u8, 0x60_u8, 0x5b_u8])
    def query_interface(this : IFolderViewHost*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFolderViewHost*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFolderViewHost*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IFolderViewHost*, hwndParent : Win32cr::Foundation::HWND, pdo : Void*, prc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, hwndParent, pdo, prc)
    end

  end

  @[Extern]
  record IAccessibleObjectVtbl,
    query_interface : Proc(IAccessibleObject*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAccessibleObject*, UInt32),
    release : Proc(IAccessibleObject*, UInt32),
    set_accessible_name : Proc(IAccessibleObject*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAccessibleObject, lpVtbl : IAccessibleObjectVtbl* do
    GUID = LibC::GUID.new(0x95a391c5_u32, 0x9ed4_u16, 0x4c28_u16, StaticArray[0x84_u8, 0x1_u8, 0xab_u8, 0x9e_u8, 0x6_u8, 0x71_u8, 0x9e_u8, 0x11_u8])
    def query_interface(this : IAccessibleObject*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAccessibleObject*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAccessibleObject*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_accessible_name(this : IAccessibleObject*, pszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_accessible_name.call(this, pszName)
    end

  end

  @[Extern]
  record IResultsFolderVtbl,
    query_interface : Proc(IResultsFolder*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IResultsFolder*, UInt32),
    release : Proc(IResultsFolder*, UInt32),
    add_item : Proc(IResultsFolder*, Void*, Win32cr::Foundation::HRESULT),
    add_id_list : Proc(IResultsFolder*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    remove_item : Proc(IResultsFolder*, Void*, Win32cr::Foundation::HRESULT),
    remove_id_list : Proc(IResultsFolder*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    remove_all : Proc(IResultsFolder*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IResultsFolder, lpVtbl : IResultsFolderVtbl* do
    GUID = LibC::GUID.new(0x96e5ae6d_u32, 0x6ae1_u16, 0x4b1c_u16, StaticArray[0x90_u8, 0xc_u8, 0xc6_u8, 0x48_u8, 0xe_u8, 0xaa_u8, 0x88_u8, 0x28_u8])
    def query_interface(this : IResultsFolder*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IResultsFolder*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IResultsFolder*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_item(this : IResultsFolder*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_item.call(this, psi)
    end
    def add_id_list(this : IResultsFolder*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppidlAdded : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_id_list.call(this, pidl, ppidlAdded)
    end
    def remove_item(this : IResultsFolder*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_item.call(this, psi)
    end
    def remove_id_list(this : IResultsFolder*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_id_list.call(this, pidl)
    end
    def remove_all(this : IResultsFolder*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_all.call(this)
    end

  end

  @[Extern]
  record IAutoCompleteDropDownVtbl,
    query_interface : Proc(IAutoCompleteDropDown*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAutoCompleteDropDown*, UInt32),
    release : Proc(IAutoCompleteDropDown*, UInt32),
    get_drop_down_status : Proc(IAutoCompleteDropDown*, UInt32*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    reset_enumerator : Proc(IAutoCompleteDropDown*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAutoCompleteDropDown, lpVtbl : IAutoCompleteDropDownVtbl* do
    GUID = LibC::GUID.new(0x3cd141f4_u32, 0x3c6a_u16, 0x11d2_u16, StaticArray[0xbc_u8, 0xaa_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x29_u8, 0xdb_u8])
    def query_interface(this : IAutoCompleteDropDown*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAutoCompleteDropDown*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAutoCompleteDropDown*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_drop_down_status(this : IAutoCompleteDropDown*, pdwFlags : UInt32*, ppwszString : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_drop_down_status.call(this, pdwFlags, ppwszString)
    end
    def reset_enumerator(this : IAutoCompleteDropDown*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_enumerator.call(this)
    end

  end

  @[Extern]
  record ICDBurnExtVtbl,
    query_interface : Proc(ICDBurnExt*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICDBurnExt*, UInt32),
    release : Proc(ICDBurnExt*, UInt32),
    get_supported_action_types : Proc(ICDBurnExt*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICDBurnExt, lpVtbl : ICDBurnExtVtbl* do
    GUID = LibC::GUID.new(0x2271dcca_u32, 0x74fc_u16, 0x4414_u16, StaticArray[0x8f_u8, 0xb7_u8, 0xc5_u8, 0x6b_u8, 0x5_u8, 0xac_u8, 0xe2_u8, 0xd7_u8])
    def query_interface(this : ICDBurnExt*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICDBurnExt*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICDBurnExt*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_supported_action_types(this : ICDBurnExt*, pdwActions : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_supported_action_types.call(this, pdwActions)
    end

  end

  @[Extern]
  record IEnumReadyCallbackVtbl,
    query_interface : Proc(IEnumReadyCallback*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumReadyCallback*, UInt32),
    release : Proc(IEnumReadyCallback*, UInt32),
    enum_ready : Proc(IEnumReadyCallback*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumReadyCallback, lpVtbl : IEnumReadyCallbackVtbl* do
    GUID = LibC::GUID.new(0x61e00d45_u32, 0x8fff_u16, 0x4e60_u16, StaticArray[0x92_u8, 0x4e_u8, 0x65_u8, 0x37_u8, 0xb6_u8, 0x16_u8, 0x12_u8, 0xdd_u8])
    def query_interface(this : IEnumReadyCallback*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumReadyCallback*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumReadyCallback*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def enum_ready(this : IEnumReadyCallback*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_ready.call(this)
    end

  end

  @[Extern]
  record IEnumerableViewVtbl,
    query_interface : Proc(IEnumerableView*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumerableView*, UInt32),
    release : Proc(IEnumerableView*, UInt32),
    set_enum_ready_callback : Proc(IEnumerableView*, Void*, Win32cr::Foundation::HRESULT),
    create_enum_id_list_from_contents : Proc(IEnumerableView*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumerableView, lpVtbl : IEnumerableViewVtbl* do
    GUID = LibC::GUID.new(0x8c8bf236_u32, 0x1aec_u16, 0x495f_u16, StaticArray[0x98_u8, 0x94_u8, 0x91_u8, 0xd5_u8, 0x7c_u8, 0x3c_u8, 0x68_u8, 0x6f_u8])
    def query_interface(this : IEnumerableView*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumerableView*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumerableView*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_enum_ready_callback(this : IEnumerableView*, percb : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_enum_ready_callback.call(this, percb)
    end
    def create_enum_id_list_from_contents(this : IEnumerableView*, pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, dwEnumFlags : UInt32, ppEnumIDList : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_enum_id_list_from_contents.call(this, pidlFolder, dwEnumFlags, ppEnumIDList)
    end

  end

  @[Extern]
  record IInsertItemVtbl,
    query_interface : Proc(IInsertItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInsertItem*, UInt32),
    release : Proc(IInsertItem*, UInt32),
    insert_item : Proc(IInsertItem*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInsertItem, lpVtbl : IInsertItemVtbl* do
    GUID = LibC::GUID.new(0xd2b57227_u32, 0x3d23_u16, 0x4b95_u16, StaticArray[0x93_u8, 0xc0_u8, 0x49_u8, 0x2b_u8, 0xd4_u8, 0x54_u8, 0xc3_u8, 0x56_u8])
    def query_interface(this : IInsertItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInsertItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInsertItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def insert_item(this : IInsertItem*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.insert_item.call(this, pidl)
    end

  end

  @[Extern]
  record IFolderBandPrivVtbl,
    query_interface : Proc(IFolderBandPriv*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFolderBandPriv*, UInt32),
    release : Proc(IFolderBandPriv*, UInt32),
    set_cascade : Proc(IFolderBandPriv*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_accelerators : Proc(IFolderBandPriv*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_no_icons : Proc(IFolderBandPriv*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_no_text : Proc(IFolderBandPriv*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFolderBandPriv, lpVtbl : IFolderBandPrivVtbl* do
    GUID = LibC::GUID.new(0x47c01f95_u32, 0xe185_u16, 0x412c_u16, StaticArray[0xb5_u8, 0xc5_u8, 0x4f_u8, 0x27_u8, 0xdf_u8, 0x96_u8, 0x5a_u8, 0xea_u8])
    def query_interface(this : IFolderBandPriv*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFolderBandPriv*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFolderBandPriv*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_cascade(this : IFolderBandPriv*, fCascade : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cascade.call(this, fCascade)
    end
    def set_accelerators(this : IFolderBandPriv*, fAccelerators : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_accelerators.call(this, fAccelerators)
    end
    def set_no_icons(this : IFolderBandPriv*, fNoIcons : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_no_icons.call(this, fNoIcons)
    end
    def set_no_text(this : IFolderBandPriv*, fNoText : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_no_text.call(this, fNoText)
    end

  end

  @[Extern]
  record IImageRecompressVtbl,
    query_interface : Proc(IImageRecompress*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IImageRecompress*, UInt32),
    release : Proc(IImageRecompress*, UInt32),
    recompress_image : Proc(IImageRecompress*, Void*, Int32, Int32, Int32, Void*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IImageRecompress, lpVtbl : IImageRecompressVtbl* do
    GUID = LibC::GUID.new(0x505f1513_u32, 0x6b3e_u16, 0x4892_u16, StaticArray[0xa2_u8, 0x72_u8, 0x59_u8, 0xf8_u8, 0x88_u8, 0x9a_u8, 0x4d_u8, 0x3e_u8])
    def query_interface(this : IImageRecompress*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IImageRecompress*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IImageRecompress*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def recompress_image(this : IImageRecompress*, psi : Void*, cx : Int32, cy : Int32, iQuality : Int32, pstg : Void*, ppstrmOut : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.recompress_image.call(this, psi, cx, cy, iQuality, pstg, ppstrmOut)
    end

  end

  @[Extern]
  record IFileDialogControlEventsVtbl,
    query_interface : Proc(IFileDialogControlEvents*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFileDialogControlEvents*, UInt32),
    release : Proc(IFileDialogControlEvents*, UInt32),
    on_item_selected : Proc(IFileDialogControlEvents*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    on_button_clicked : Proc(IFileDialogControlEvents*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    on_check_button_toggled : Proc(IFileDialogControlEvents*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    on_control_activating : Proc(IFileDialogControlEvents*, Void*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFileDialogControlEvents, lpVtbl : IFileDialogControlEventsVtbl* do
    GUID = LibC::GUID.new(0x36116642_u32, 0xd713_u16, 0x4b97_u16, StaticArray[0x9b_u8, 0x83_u8, 0x74_u8, 0x84_u8, 0xa9_u8, 0xd0_u8, 0x4_u8, 0x33_u8])
    def query_interface(this : IFileDialogControlEvents*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFileDialogControlEvents*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFileDialogControlEvents*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_item_selected(this : IFileDialogControlEvents*, pfdc : Void*, dwIDCtl : UInt32, dwIDItem : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_item_selected.call(this, pfdc, dwIDCtl, dwIDItem)
    end
    def on_button_clicked(this : IFileDialogControlEvents*, pfdc : Void*, dwIDCtl : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_button_clicked.call(this, pfdc, dwIDCtl)
    end
    def on_check_button_toggled(this : IFileDialogControlEvents*, pfdc : Void*, dwIDCtl : UInt32, bChecked : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_check_button_toggled.call(this, pfdc, dwIDCtl, bChecked)
    end
    def on_control_activating(this : IFileDialogControlEvents*, pfdc : Void*, dwIDCtl : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_control_activating.call(this, pfdc, dwIDCtl)
    end

  end

  @[Extern]
  record IFileDialog2Vtbl,
    query_interface : Proc(IFileDialog2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFileDialog2*, UInt32),
    release : Proc(IFileDialog2*, UInt32),
    show : Proc(IFileDialog2*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    set_file_types : Proc(IFileDialog2*, UInt32, Win32cr::UI::Shell::Common::COMDLG_FILTERSPEC*, Win32cr::Foundation::HRESULT),
    set_file_type_index : Proc(IFileDialog2*, UInt32, Win32cr::Foundation::HRESULT),
    get_file_type_index : Proc(IFileDialog2*, UInt32*, Win32cr::Foundation::HRESULT),
    advise : Proc(IFileDialog2*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    unadvise : Proc(IFileDialog2*, UInt32, Win32cr::Foundation::HRESULT),
    set_options : Proc(IFileDialog2*, Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS, Win32cr::Foundation::HRESULT),
    get_options : Proc(IFileDialog2*, Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS*, Win32cr::Foundation::HRESULT),
    set_default_folder : Proc(IFileDialog2*, Void*, Win32cr::Foundation::HRESULT),
    set_folder : Proc(IFileDialog2*, Void*, Win32cr::Foundation::HRESULT),
    get_folder : Proc(IFileDialog2*, Void**, Win32cr::Foundation::HRESULT),
    get_current_selection : Proc(IFileDialog2*, Void**, Win32cr::Foundation::HRESULT),
    set_file_name : Proc(IFileDialog2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_file_name : Proc(IFileDialog2*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    set_title : Proc(IFileDialog2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_ok_button_label : Proc(IFileDialog2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_file_name_label : Proc(IFileDialog2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_result : Proc(IFileDialog2*, Void**, Win32cr::Foundation::HRESULT),
    add_place : Proc(IFileDialog2*, Void*, Win32cr::UI::Shell::FDAP, Win32cr::Foundation::HRESULT),
    set_default_extension : Proc(IFileDialog2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    close : Proc(IFileDialog2*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::HRESULT),
    set_client_guid : Proc(IFileDialog2*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    clear_client_data : Proc(IFileDialog2*, Win32cr::Foundation::HRESULT),
    set_filter : Proc(IFileDialog2*, Void*, Win32cr::Foundation::HRESULT),
    set_cancel_button_label : Proc(IFileDialog2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_navigation_root : Proc(IFileDialog2*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFileDialog2, lpVtbl : IFileDialog2Vtbl* do
    GUID = LibC::GUID.new(0x61744fc7_u32, 0x85b5_u16, 0x4791_u16, StaticArray[0xa9_u8, 0xb0_u8, 0x27_u8, 0x22_u8, 0x76_u8, 0x30_u8, 0x9b_u8, 0x13_u8])
    def query_interface(this : IFileDialog2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFileDialog2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFileDialog2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def show(this : IFileDialog2*, hwndOwner : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show.call(this, hwndOwner)
    end
    def set_file_types(this : IFileDialog2*, cFileTypes : UInt32, rgFilterSpec : Win32cr::UI::Shell::Common::COMDLG_FILTERSPEC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_types.call(this, cFileTypes, rgFilterSpec)
    end
    def set_file_type_index(this : IFileDialog2*, iFileType : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_type_index.call(this, iFileType)
    end
    def get_file_type_index(this : IFileDialog2*, piFileType : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_type_index.call(this, piFileType)
    end
    def advise(this : IFileDialog2*, pfde : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, pfde, pdwCookie)
    end
    def unadvise(this : IFileDialog2*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unadvise.call(this, dwCookie)
    end
    def set_options(this : IFileDialog2*, fos : Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_options.call(this, fos)
    end
    def get_options(this : IFileDialog2*, pfos : Win32cr::UI::Shell::FILEOPENDIALOGOPTIONS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_options.call(this, pfos)
    end
    def set_default_folder(this : IFileDialog2*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_default_folder.call(this, psi)
    end
    def set_folder(this : IFileDialog2*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_folder.call(this, psi)
    end
    def get_folder(this : IFileDialog2*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder.call(this, ppsi)
    end
    def get_current_selection(this : IFileDialog2*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_selection.call(this, ppsi)
    end
    def set_file_name(this : IFileDialog2*, pszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_name.call(this, pszName)
    end
    def get_file_name(this : IFileDialog2*, pszName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_name.call(this, pszName)
    end
    def set_title(this : IFileDialog2*, pszTitle : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_title.call(this, pszTitle)
    end
    def set_ok_button_label(this : IFileDialog2*, pszText : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_ok_button_label.call(this, pszText)
    end
    def set_file_name_label(this : IFileDialog2*, pszLabel : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_file_name_label.call(this, pszLabel)
    end
    def get_result(this : IFileDialog2*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_result.call(this, ppsi)
    end
    def add_place(this : IFileDialog2*, psi : Void*, fdap : Win32cr::UI::Shell::FDAP) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_place.call(this, psi, fdap)
    end
    def set_default_extension(this : IFileDialog2*, pszDefaultExtension : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_default_extension.call(this, pszDefaultExtension)
    end
    def close(this : IFileDialog2*, hr : Win32cr::Foundation::HRESULT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.close.call(this, hr)
    end
    def set_client_guid(this : IFileDialog2*, guid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_client_guid.call(this, guid)
    end
    def clear_client_data(this : IFileDialog2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clear_client_data.call(this)
    end
    def set_filter(this : IFileDialog2*, pFilter : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_filter.call(this, pFilter)
    end
    def set_cancel_button_label(this : IFileDialog2*, pszLabel : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cancel_button_label.call(this, pszLabel)
    end
    def set_navigation_root(this : IFileDialog2*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_navigation_root.call(this, psi)
    end

  end

  @[Extern]
  record IApplicationAssociationRegistrationUIVtbl,
    query_interface : Proc(IApplicationAssociationRegistrationUI*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IApplicationAssociationRegistrationUI*, UInt32),
    release : Proc(IApplicationAssociationRegistrationUI*, UInt32),
    launch_advanced_association_ui : Proc(IApplicationAssociationRegistrationUI*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IApplicationAssociationRegistrationUI, lpVtbl : IApplicationAssociationRegistrationUIVtbl* do
    GUID = LibC::GUID.new(0x1f76a169_u32, 0xf994_u16, 0x40ac_u16, StaticArray[0x8f_u8, 0xc8_u8, 0x9_u8, 0x59_u8, 0xe8_u8, 0x87_u8, 0x47_u8, 0x10_u8])
    def query_interface(this : IApplicationAssociationRegistrationUI*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IApplicationAssociationRegistrationUI*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IApplicationAssociationRegistrationUI*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def launch_advanced_association_ui(this : IApplicationAssociationRegistrationUI*, pszAppRegistryName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.launch_advanced_association_ui.call(this, pszAppRegistryName)
    end

  end

  @[Extern]
  record IShellRunDllVtbl,
    query_interface : Proc(IShellRunDll*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellRunDll*, UInt32),
    release : Proc(IShellRunDll*, UInt32),
    run : Proc(IShellRunDll*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellRunDll, lpVtbl : IShellRunDllVtbl* do
    GUID = LibC::GUID.new(0xfce4bde0_u32, 0x4b68_u16, 0x4b80_u16, StaticArray[0x8e_u8, 0x9c_u8, 0x74_u8, 0x26_u8, 0x31_u8, 0x5a_u8, 0x73_u8, 0x88_u8])
    def query_interface(this : IShellRunDll*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellRunDll*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellRunDll*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def run(this : IShellRunDll*, pszArgs : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run.call(this, pszArgs)
    end

  end

  @[Extern]
  record IPreviousVersionsInfoVtbl,
    query_interface : Proc(IPreviousVersionsInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPreviousVersionsInfo*, UInt32),
    release : Proc(IPreviousVersionsInfo*, UInt32),
    are_snapshots_available : Proc(IPreviousVersionsInfo*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPreviousVersionsInfo, lpVtbl : IPreviousVersionsInfoVtbl* do
    GUID = LibC::GUID.new(0x76e54780_u32, 0xad74_u16, 0x48e3_u16, StaticArray[0xa6_u8, 0x95_u8, 0x3b_u8, 0xa9_u8, 0xa0_u8, 0xaf_u8, 0xf1_u8, 0xd_u8])
    def query_interface(this : IPreviousVersionsInfo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPreviousVersionsInfo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPreviousVersionsInfo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def are_snapshots_available(this : IPreviousVersionsInfo*, pszPath : Win32cr::Foundation::PWSTR, fOkToBeSlow : Win32cr::Foundation::BOOL, pfAvailable : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.are_snapshots_available.call(this, pszPath, fOkToBeSlow, pfAvailable)
    end

  end

  @[Extern]
  record IUseToBrowseItemVtbl,
    query_interface : Proc(IUseToBrowseItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IUseToBrowseItem*, UInt32),
    release : Proc(IUseToBrowseItem*, UInt32),
    get_item_id_list : Proc(IUseToBrowseItem*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    get_item : Proc(IUseToBrowseItem*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IUseToBrowseItem, lpVtbl : IUseToBrowseItemVtbl* do
    GUID = LibC::GUID.new(0x5edda5c_u32, 0x98a3_u16, 0x4717_u16, StaticArray[0x8a_u8, 0xdb_u8, 0xc5_u8, 0xe7_u8, 0xda_u8, 0x99_u8, 0x1e_u8, 0xb1_u8])
    def query_interface(this : IUseToBrowseItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IUseToBrowseItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IUseToBrowseItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_item_id_list(this : IUseToBrowseItem*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_id_list.call(this, ppidl)
    end
    def get_item(this : IUseToBrowseItem*, ppsi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item.call(this, ppsi)
    end

  end

  @[Extern]
  record INameSpaceTreeControl2Vtbl,
    query_interface : Proc(INameSpaceTreeControl2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INameSpaceTreeControl2*, UInt32),
    release : Proc(INameSpaceTreeControl2*, UInt32),
    initialize__ : Proc(INameSpaceTreeControl2*, Win32cr::Foundation::HWND, Win32cr::Foundation::RECT*, UInt32, Win32cr::Foundation::HRESULT),
    tree_advise : Proc(INameSpaceTreeControl2*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    tree_unadvise : Proc(INameSpaceTreeControl2*, UInt32, Win32cr::Foundation::HRESULT),
    append_root : Proc(INameSpaceTreeControl2*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    insert_root : Proc(INameSpaceTreeControl2*, Int32, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    remove_root : Proc(INameSpaceTreeControl2*, Void*, Win32cr::Foundation::HRESULT),
    remove_all_roots : Proc(INameSpaceTreeControl2*, Win32cr::Foundation::HRESULT),
    get_root_items : Proc(INameSpaceTreeControl2*, Void**, Win32cr::Foundation::HRESULT),
    set_item_state : Proc(INameSpaceTreeControl2*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_item_state : Proc(INameSpaceTreeControl2*, Void*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_selected_items : Proc(INameSpaceTreeControl2*, Void**, Win32cr::Foundation::HRESULT),
    get_item_custom_state : Proc(INameSpaceTreeControl2*, Void*, Int32*, Win32cr::Foundation::HRESULT),
    set_item_custom_state : Proc(INameSpaceTreeControl2*, Void*, Int32, Win32cr::Foundation::HRESULT),
    ensure_item_visible : Proc(INameSpaceTreeControl2*, Void*, Win32cr::Foundation::HRESULT),
    set_theme : Proc(INameSpaceTreeControl2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_next_item : Proc(INameSpaceTreeControl2*, Void*, Win32cr::UI::Shell::NSTCGNI, Void**, Win32cr::Foundation::HRESULT),
    hit_test : Proc(INameSpaceTreeControl2*, Win32cr::Foundation::POINT*, Void**, Win32cr::Foundation::HRESULT),
    get_item_rect : Proc(INameSpaceTreeControl2*, Void*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    collapse_all : Proc(INameSpaceTreeControl2*, Win32cr::Foundation::HRESULT),
    set_control_style : Proc(INameSpaceTreeControl2*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_control_style : Proc(INameSpaceTreeControl2*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    set_control_style2 : Proc(INameSpaceTreeControl2*, Win32cr::UI::Shell::NSTCSTYLE2, Win32cr::UI::Shell::NSTCSTYLE2, Win32cr::Foundation::HRESULT),
    get_control_style2 : Proc(INameSpaceTreeControl2*, Win32cr::UI::Shell::NSTCSTYLE2, Win32cr::UI::Shell::NSTCSTYLE2*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INameSpaceTreeControl2, lpVtbl : INameSpaceTreeControl2Vtbl* do
    GUID = LibC::GUID.new(0x7cc7aed8_u32, 0x290e_u16, 0x49bc_u16, StaticArray[0x89_u8, 0x45_u8, 0xc1_u8, 0x40_u8, 0x1c_u8, 0xc9_u8, 0x30_u8, 0x6c_u8])
    def query_interface(this : INameSpaceTreeControl2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INameSpaceTreeControl2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INameSpaceTreeControl2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : INameSpaceTreeControl2*, hwndParent : Win32cr::Foundation::HWND, prc : Win32cr::Foundation::RECT*, nsctsFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, hwndParent, prc, nsctsFlags)
    end
    def tree_advise(this : INameSpaceTreeControl2*, punk : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tree_advise.call(this, punk, pdwCookie)
    end
    def tree_unadvise(this : INameSpaceTreeControl2*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tree_unadvise.call(this, dwCookie)
    end
    def append_root(this : INameSpaceTreeControl2*, psiRoot : Void*, grfEnumFlags : UInt32, grfRootStyle : UInt32, pif : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.append_root.call(this, psiRoot, grfEnumFlags, grfRootStyle, pif)
    end
    def insert_root(this : INameSpaceTreeControl2*, iIndex : Int32, psiRoot : Void*, grfEnumFlags : UInt32, grfRootStyle : UInt32, pif : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.insert_root.call(this, iIndex, psiRoot, grfEnumFlags, grfRootStyle, pif)
    end
    def remove_root(this : INameSpaceTreeControl2*, psiRoot : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_root.call(this, psiRoot)
    end
    def remove_all_roots(this : INameSpaceTreeControl2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_all_roots.call(this)
    end
    def get_root_items(this : INameSpaceTreeControl2*, ppsiaRootItems : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_root_items.call(this, ppsiaRootItems)
    end
    def set_item_state(this : INameSpaceTreeControl2*, psi : Void*, nstcisMask : UInt32, nstcisFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_item_state.call(this, psi, nstcisMask, nstcisFlags)
    end
    def get_item_state(this : INameSpaceTreeControl2*, psi : Void*, nstcisMask : UInt32, pnstcisFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_state.call(this, psi, nstcisMask, pnstcisFlags)
    end
    def get_selected_items(this : INameSpaceTreeControl2*, psiaItems : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_selected_items.call(this, psiaItems)
    end
    def get_item_custom_state(this : INameSpaceTreeControl2*, psi : Void*, piStateNumber : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_custom_state.call(this, psi, piStateNumber)
    end
    def set_item_custom_state(this : INameSpaceTreeControl2*, psi : Void*, iStateNumber : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_item_custom_state.call(this, psi, iStateNumber)
    end
    def ensure_item_visible(this : INameSpaceTreeControl2*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ensure_item_visible.call(this, psi)
    end
    def set_theme(this : INameSpaceTreeControl2*, pszTheme : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_theme.call(this, pszTheme)
    end
    def get_next_item(this : INameSpaceTreeControl2*, psi : Void*, nstcgi : Win32cr::UI::Shell::NSTCGNI, ppsiNext : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_next_item.call(this, psi, nstcgi, ppsiNext)
    end
    def hit_test(this : INameSpaceTreeControl2*, ppt : Win32cr::Foundation::POINT*, ppsiOut : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hit_test.call(this, ppt, ppsiOut)
    end
    def get_item_rect(this : INameSpaceTreeControl2*, psi : Void*, prect : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_rect.call(this, psi, prect)
    end
    def collapse_all(this : INameSpaceTreeControl2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.collapse_all.call(this)
    end
    def set_control_style(this : INameSpaceTreeControl2*, nstcsMask : UInt32, nstcsStyle : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_control_style.call(this, nstcsMask, nstcsStyle)
    end
    def get_control_style(this : INameSpaceTreeControl2*, nstcsMask : UInt32, pnstcsStyle : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_control_style.call(this, nstcsMask, pnstcsStyle)
    end
    def set_control_style2(this : INameSpaceTreeControl2*, nstcsMask : Win32cr::UI::Shell::NSTCSTYLE2, nstcsStyle : Win32cr::UI::Shell::NSTCSTYLE2) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_control_style2.call(this, nstcsMask, nstcsStyle)
    end
    def get_control_style2(this : INameSpaceTreeControl2*, nstcsMask : Win32cr::UI::Shell::NSTCSTYLE2, pnstcsStyle : Win32cr::UI::Shell::NSTCSTYLE2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_control_style2.call(this, nstcsMask, pnstcsStyle)
    end

  end

  @[Extern]
  record INameSpaceTreeControlEventsVtbl,
    query_interface : Proc(INameSpaceTreeControlEvents*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INameSpaceTreeControlEvents*, UInt32),
    release : Proc(INameSpaceTreeControlEvents*, UInt32),
    on_item_click : Proc(INameSpaceTreeControlEvents*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    on_property_item_commit : Proc(INameSpaceTreeControlEvents*, Void*, Win32cr::Foundation::HRESULT),
    on_item_state_changing : Proc(INameSpaceTreeControlEvents*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    on_item_state_changed : Proc(INameSpaceTreeControlEvents*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    on_selection_changed : Proc(INameSpaceTreeControlEvents*, Void*, Win32cr::Foundation::HRESULT),
    on_keyboard_input : Proc(INameSpaceTreeControlEvents*, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT),
    on_before_expand : Proc(INameSpaceTreeControlEvents*, Void*, Win32cr::Foundation::HRESULT),
    on_after_expand : Proc(INameSpaceTreeControlEvents*, Void*, Win32cr::Foundation::HRESULT),
    on_begin_label_edit : Proc(INameSpaceTreeControlEvents*, Void*, Win32cr::Foundation::HRESULT),
    on_end_label_edit : Proc(INameSpaceTreeControlEvents*, Void*, Win32cr::Foundation::HRESULT),
    on_get_tool_tip : Proc(INameSpaceTreeControlEvents*, Void*, UInt16*, Int32, Win32cr::Foundation::HRESULT),
    on_before_item_delete : Proc(INameSpaceTreeControlEvents*, Void*, Win32cr::Foundation::HRESULT),
    on_item_added : Proc(INameSpaceTreeControlEvents*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    on_item_deleted : Proc(INameSpaceTreeControlEvents*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    on_before_context_menu : Proc(INameSpaceTreeControlEvents*, Void*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    on_after_context_menu : Proc(INameSpaceTreeControlEvents*, Void*, Void*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    on_before_state_image_change : Proc(INameSpaceTreeControlEvents*, Void*, Win32cr::Foundation::HRESULT),
    on_get_default_icon_index : Proc(INameSpaceTreeControlEvents*, Void*, Int32*, Int32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INameSpaceTreeControlEvents, lpVtbl : INameSpaceTreeControlEventsVtbl* do
    GUID = LibC::GUID.new(0x93d77985_u32, 0xb3d8_u16, 0x4484_u16, StaticArray[0x83_u8, 0x18_u8, 0x67_u8, 0x2c_u8, 0xdd_u8, 0xa0_u8, 0x2_u8, 0xce_u8])
    def query_interface(this : INameSpaceTreeControlEvents*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INameSpaceTreeControlEvents*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INameSpaceTreeControlEvents*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_item_click(this : INameSpaceTreeControlEvents*, psi : Void*, nstceHitTest : UInt32, nstceClickType : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_item_click.call(this, psi, nstceHitTest, nstceClickType)
    end
    def on_property_item_commit(this : INameSpaceTreeControlEvents*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_property_item_commit.call(this, psi)
    end
    def on_item_state_changing(this : INameSpaceTreeControlEvents*, psi : Void*, nstcisMask : UInt32, nstcisState : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_item_state_changing.call(this, psi, nstcisMask, nstcisState)
    end
    def on_item_state_changed(this : INameSpaceTreeControlEvents*, psi : Void*, nstcisMask : UInt32, nstcisState : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_item_state_changed.call(this, psi, nstcisMask, nstcisState)
    end
    def on_selection_changed(this : INameSpaceTreeControlEvents*, psiaSelection : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_selection_changed.call(this, psiaSelection)
    end
    def on_keyboard_input(this : INameSpaceTreeControlEvents*, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_keyboard_input.call(this, uMsg, wParam, lParam)
    end
    def on_before_expand(this : INameSpaceTreeControlEvents*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_before_expand.call(this, psi)
    end
    def on_after_expand(this : INameSpaceTreeControlEvents*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_after_expand.call(this, psi)
    end
    def on_begin_label_edit(this : INameSpaceTreeControlEvents*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_begin_label_edit.call(this, psi)
    end
    def on_end_label_edit(this : INameSpaceTreeControlEvents*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_end_label_edit.call(this, psi)
    end
    def on_get_tool_tip(this : INameSpaceTreeControlEvents*, psi : Void*, pszTip : UInt16*, cchTip : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_get_tool_tip.call(this, psi, pszTip, cchTip)
    end
    def on_before_item_delete(this : INameSpaceTreeControlEvents*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_before_item_delete.call(this, psi)
    end
    def on_item_added(this : INameSpaceTreeControlEvents*, psi : Void*, fIsRoot : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_item_added.call(this, psi, fIsRoot)
    end
    def on_item_deleted(this : INameSpaceTreeControlEvents*, psi : Void*, fIsRoot : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_item_deleted.call(this, psi, fIsRoot)
    end
    def on_before_context_menu(this : INameSpaceTreeControlEvents*, psi : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_before_context_menu.call(this, psi, riid, ppv)
    end
    def on_after_context_menu(this : INameSpaceTreeControlEvents*, psi : Void*, pcmIn : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_after_context_menu.call(this, psi, pcmIn, riid, ppv)
    end
    def on_before_state_image_change(this : INameSpaceTreeControlEvents*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_before_state_image_change.call(this, psi)
    end
    def on_get_default_icon_index(this : INameSpaceTreeControlEvents*, psi : Void*, piDefaultIcon : Int32*, piOpenIcon : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_get_default_icon_index.call(this, psi, piDefaultIcon, piOpenIcon)
    end

  end

  @[Extern]
  record INameSpaceTreeControlDropHandlerVtbl,
    query_interface : Proc(INameSpaceTreeControlDropHandler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INameSpaceTreeControlDropHandler*, UInt32),
    release : Proc(INameSpaceTreeControlDropHandler*, UInt32),
    on_drag_enter : Proc(INameSpaceTreeControlDropHandler*, Void*, Void*, Win32cr::Foundation::BOOL, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    on_drag_over : Proc(INameSpaceTreeControlDropHandler*, Void*, Void*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    on_drag_position : Proc(INameSpaceTreeControlDropHandler*, Void*, Void*, Int32, Int32, Win32cr::Foundation::HRESULT),
    on_drop : Proc(INameSpaceTreeControlDropHandler*, Void*, Void*, Int32, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    on_drop_position : Proc(INameSpaceTreeControlDropHandler*, Void*, Void*, Int32, Int32, Win32cr::Foundation::HRESULT),
    on_drag_leave : Proc(INameSpaceTreeControlDropHandler*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INameSpaceTreeControlDropHandler, lpVtbl : INameSpaceTreeControlDropHandlerVtbl* do
    GUID = LibC::GUID.new(0xf9c665d6_u32, 0xc2f2_u16, 0x4c19_u16, StaticArray[0xbf_u8, 0x33_u8, 0x83_u8, 0x22_u8, 0xd7_u8, 0x35_u8, 0x2f_u8, 0x51_u8])
    def query_interface(this : INameSpaceTreeControlDropHandler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INameSpaceTreeControlDropHandler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INameSpaceTreeControlDropHandler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_drag_enter(this : INameSpaceTreeControlDropHandler*, psiOver : Void*, psiaData : Void*, fOutsideSource : Win32cr::Foundation::BOOL, grfKeyState : UInt32, pdwEffect : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_drag_enter.call(this, psiOver, psiaData, fOutsideSource, grfKeyState, pdwEffect)
    end
    def on_drag_over(this : INameSpaceTreeControlDropHandler*, psiOver : Void*, psiaData : Void*, grfKeyState : UInt32, pdwEffect : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_drag_over.call(this, psiOver, psiaData, grfKeyState, pdwEffect)
    end
    def on_drag_position(this : INameSpaceTreeControlDropHandler*, psiOver : Void*, psiaData : Void*, iNewPosition : Int32, iOldPosition : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_drag_position.call(this, psiOver, psiaData, iNewPosition, iOldPosition)
    end
    def on_drop(this : INameSpaceTreeControlDropHandler*, psiOver : Void*, psiaData : Void*, iPosition : Int32, grfKeyState : UInt32, pdwEffect : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_drop.call(this, psiOver, psiaData, iPosition, grfKeyState, pdwEffect)
    end
    def on_drop_position(this : INameSpaceTreeControlDropHandler*, psiOver : Void*, psiaData : Void*, iNewPosition : Int32, iOldPosition : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_drop_position.call(this, psiOver, psiaData, iNewPosition, iOldPosition)
    end
    def on_drag_leave(this : INameSpaceTreeControlDropHandler*, psiOver : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_drag_leave.call(this, psiOver)
    end

  end

  @[Extern]
  record INameSpaceTreeAccessibleVtbl,
    query_interface : Proc(INameSpaceTreeAccessible*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INameSpaceTreeAccessible*, UInt32),
    release : Proc(INameSpaceTreeAccessible*, UInt32),
    on_get_default_accessibility_action : Proc(INameSpaceTreeAccessible*, Void*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    on_do_default_accessibility_action : Proc(INameSpaceTreeAccessible*, Void*, Win32cr::Foundation::HRESULT),
    on_get_accessibility_role : Proc(INameSpaceTreeAccessible*, Void*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INameSpaceTreeAccessible, lpVtbl : INameSpaceTreeAccessibleVtbl* do
    GUID = LibC::GUID.new(0x71f312de_u32, 0x43ed_u16, 0x4190_u16, StaticArray[0x84_u8, 0x77_u8, 0xe9_u8, 0x53_u8, 0x6b_u8, 0x82_u8, 0x35_u8, 0xb_u8])
    def query_interface(this : INameSpaceTreeAccessible*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INameSpaceTreeAccessible*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INameSpaceTreeAccessible*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_get_default_accessibility_action(this : INameSpaceTreeAccessible*, psi : Void*, pbstrDefaultAction : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_get_default_accessibility_action.call(this, psi, pbstrDefaultAction)
    end
    def on_do_default_accessibility_action(this : INameSpaceTreeAccessible*, psi : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_do_default_accessibility_action.call(this, psi)
    end
    def on_get_accessibility_role(this : INameSpaceTreeAccessible*, psi : Void*, pvarRole : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_get_accessibility_role.call(this, psi, pvarRole)
    end

  end

  @[Extern]
  record INameSpaceTreeControlCustomDrawVtbl,
    query_interface : Proc(INameSpaceTreeControlCustomDraw*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INameSpaceTreeControlCustomDraw*, UInt32),
    release : Proc(INameSpaceTreeControlCustomDraw*, UInt32),
    pre_paint : Proc(INameSpaceTreeControlCustomDraw*, Win32cr::Graphics::Gdi::HDC, Win32cr::Foundation::RECT*, Win32cr::Foundation::LRESULT*, Win32cr::Foundation::HRESULT),
    post_paint : Proc(INameSpaceTreeControlCustomDraw*, Win32cr::Graphics::Gdi::HDC, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    item_pre_paint : Proc(INameSpaceTreeControlCustomDraw*, Win32cr::Graphics::Gdi::HDC, Win32cr::Foundation::RECT*, Win32cr::UI::Shell::NSTCCUSTOMDRAW*, UInt32*, UInt32*, Win32cr::Foundation::LRESULT*, Win32cr::Foundation::HRESULT),
    item_post_paint : Proc(INameSpaceTreeControlCustomDraw*, Win32cr::Graphics::Gdi::HDC, Win32cr::Foundation::RECT*, Win32cr::UI::Shell::NSTCCUSTOMDRAW*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INameSpaceTreeControlCustomDraw, lpVtbl : INameSpaceTreeControlCustomDrawVtbl* do
    GUID = LibC::GUID.new(0x2d3ba758_u32, 0x33ee_u16, 0x42d5_u16, StaticArray[0xbb_u8, 0x7b_u8, 0x5f_u8, 0x34_u8, 0x31_u8, 0xd8_u8, 0x6c_u8, 0x78_u8])
    def query_interface(this : INameSpaceTreeControlCustomDraw*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INameSpaceTreeControlCustomDraw*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INameSpaceTreeControlCustomDraw*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def pre_paint(this : INameSpaceTreeControlCustomDraw*, hdc : Win32cr::Graphics::Gdi::HDC, prc : Win32cr::Foundation::RECT*, plres : Win32cr::Foundation::LRESULT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.pre_paint.call(this, hdc, prc, plres)
    end
    def post_paint(this : INameSpaceTreeControlCustomDraw*, hdc : Win32cr::Graphics::Gdi::HDC, prc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.post_paint.call(this, hdc, prc)
    end
    def item_pre_paint(this : INameSpaceTreeControlCustomDraw*, hdc : Win32cr::Graphics::Gdi::HDC, prc : Win32cr::Foundation::RECT*, pnstccdItem : Win32cr::UI::Shell::NSTCCUSTOMDRAW*, pclrText : UInt32*, pclrTextBk : UInt32*, plres : Win32cr::Foundation::LRESULT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item_pre_paint.call(this, hdc, prc, pnstccdItem, pclrText, pclrTextBk, plres)
    end
    def item_post_paint(this : INameSpaceTreeControlCustomDraw*, hdc : Win32cr::Graphics::Gdi::HDC, prc : Win32cr::Foundation::RECT*, pnstccdItem : Win32cr::UI::Shell::NSTCCUSTOMDRAW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item_post_paint.call(this, hdc, prc, pnstccdItem)
    end

  end

  @[Extern]
  record ITrayDeskBandVtbl,
    query_interface : Proc(ITrayDeskBand*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITrayDeskBand*, UInt32),
    release : Proc(ITrayDeskBand*, UInt32),
    show_desk_band : Proc(ITrayDeskBand*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    hide_desk_band : Proc(ITrayDeskBand*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    is_desk_band_shown : Proc(ITrayDeskBand*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    desk_band_registration_changed : Proc(ITrayDeskBand*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITrayDeskBand, lpVtbl : ITrayDeskBandVtbl* do
    GUID = LibC::GUID.new(0x6d67e846_u32, 0x5b9c_u16, 0x4db8_u16, StaticArray[0x9c_u8, 0xbc_u8, 0xdd_u8, 0xe1_u8, 0x2f_u8, 0x42_u8, 0x54_u8, 0xf1_u8])
    def query_interface(this : ITrayDeskBand*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITrayDeskBand*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITrayDeskBand*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def show_desk_band(this : ITrayDeskBand*, clsid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_desk_band.call(this, clsid)
    end
    def hide_desk_band(this : ITrayDeskBand*, clsid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hide_desk_band.call(this, clsid)
    end
    def is_desk_band_shown(this : ITrayDeskBand*, clsid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_desk_band_shown.call(this, clsid)
    end
    def desk_band_registration_changed(this : ITrayDeskBand*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.desk_band_registration_changed.call(this)
    end

  end

  @[Extern]
  record IBandHostVtbl,
    query_interface : Proc(IBandHost*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IBandHost*, UInt32),
    release : Proc(IBandHost*, UInt32),
    create_band : Proc(IBandHost*, LibC::GUID*, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    set_band_availability : Proc(IBandHost*, LibC::GUID*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    destroy_band : Proc(IBandHost*, LibC::GUID*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IBandHost, lpVtbl : IBandHostVtbl* do
    GUID = LibC::GUID.new(0xb9075c7c_u32, 0xd48e_u16, 0x403f_u16, StaticArray[0xab_u8, 0x99_u8, 0xd6_u8, 0xc7_u8, 0x7a_u8, 0x10_u8, 0x84_u8, 0xac_u8])
    def query_interface(this : IBandHost*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IBandHost*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IBandHost*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_band(this : IBandHost*, rclsidBand : LibC::GUID*, fAvailable : Win32cr::Foundation::BOOL, fVisible : Win32cr::Foundation::BOOL, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_band.call(this, rclsidBand, fAvailable, fVisible, riid, ppv)
    end
    def set_band_availability(this : IBandHost*, rclsidBand : LibC::GUID*, fAvailable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_band_availability.call(this, rclsidBand, fAvailable)
    end
    def destroy_band(this : IBandHost*, rclsidBand : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.destroy_band.call(this, rclsidBand)
    end

  end

  @[Extern]
  record IComputerInfoChangeNotifyVtbl,
    query_interface : Proc(IComputerInfoChangeNotify*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IComputerInfoChangeNotify*, UInt32),
    release : Proc(IComputerInfoChangeNotify*, UInt32),
    computer_info_changed : Proc(IComputerInfoChangeNotify*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IComputerInfoChangeNotify, lpVtbl : IComputerInfoChangeNotifyVtbl* do
    GUID = LibC::GUID.new(0xdf60d92_u32, 0x6818_u16, 0x46d6_u16, StaticArray[0xb3_u8, 0x58_u8, 0xd6_u8, 0x61_u8, 0x70_u8, 0xdd_u8, 0xe4_u8, 0x66_u8])
    def query_interface(this : IComputerInfoChangeNotify*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IComputerInfoChangeNotify*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IComputerInfoChangeNotify*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def computer_info_changed(this : IComputerInfoChangeNotify*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.computer_info_changed.call(this)
    end

  end

  @[Extern]
  record IDesktopGadgetVtbl,
    query_interface : Proc(IDesktopGadget*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDesktopGadget*, UInt32),
    release : Proc(IDesktopGadget*, UInt32),
    run_gadget : Proc(IDesktopGadget*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDesktopGadget, lpVtbl : IDesktopGadgetVtbl* do
    GUID = LibC::GUID.new(0xc1646bc4_u32, 0xf298_u16, 0x4f91_u16, StaticArray[0xa2_u8, 0x4_u8, 0xeb_u8, 0x2d_u8, 0xd1_u8, 0x70_u8, 0x9d_u8, 0x1a_u8])
    def query_interface(this : IDesktopGadget*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDesktopGadget*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDesktopGadget*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def run_gadget(this : IDesktopGadget*, gadgetPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_gadget.call(this, gadgetPath)
    end

  end

  @[Extern]
  record IAccessibilityDockingServiceCallbackVtbl,
    query_interface : Proc(IAccessibilityDockingServiceCallback*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAccessibilityDockingServiceCallback*, UInt32),
    release : Proc(IAccessibilityDockingServiceCallback*, UInt32),
    undocked : Proc(IAccessibilityDockingServiceCallback*, Win32cr::UI::Shell::UNDOCK_REASON, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAccessibilityDockingServiceCallback, lpVtbl : IAccessibilityDockingServiceCallbackVtbl* do
    GUID = LibC::GUID.new(0x157733fd_u32, 0xa592_u16, 0x42e5_u16, StaticArray[0xb5_u8, 0x94_u8, 0x24_u8, 0x84_u8, 0x68_u8, 0xc5_u8, 0xa8_u8, 0x1b_u8])
    def query_interface(this : IAccessibilityDockingServiceCallback*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAccessibilityDockingServiceCallback*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAccessibilityDockingServiceCallback*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def undocked(this : IAccessibilityDockingServiceCallback*, undockReason : Win32cr::UI::Shell::UNDOCK_REASON) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.undocked.call(this, undockReason)
    end

  end

  @[Extern]
  record IAccessibilityDockingServiceVtbl,
    query_interface : Proc(IAccessibilityDockingService*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAccessibilityDockingService*, UInt32),
    release : Proc(IAccessibilityDockingService*, UInt32),
    get_available_size : Proc(IAccessibilityDockingService*, Win32cr::Graphics::Gdi::HMONITOR, UInt32*, UInt32*, Win32cr::Foundation::HRESULT),
    dock_window : Proc(IAccessibilityDockingService*, Win32cr::Foundation::HWND, Win32cr::Graphics::Gdi::HMONITOR, UInt32, Void*, Win32cr::Foundation::HRESULT),
    undock_window : Proc(IAccessibilityDockingService*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAccessibilityDockingService, lpVtbl : IAccessibilityDockingServiceVtbl* do
    GUID = LibC::GUID.new(0x8849dc22_u32, 0xcedf_u16, 0x4c95_u16, StaticArray[0x99_u8, 0x8d_u8, 0x5_u8, 0x14_u8, 0x19_u8, 0xdd_u8, 0x3f_u8, 0x76_u8])
    def query_interface(this : IAccessibilityDockingService*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAccessibilityDockingService*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAccessibilityDockingService*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_available_size(this : IAccessibilityDockingService*, hMonitor : Win32cr::Graphics::Gdi::HMONITOR, pcxFixed : UInt32*, pcyMax : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_available_size.call(this, hMonitor, pcxFixed, pcyMax)
    end
    def dock_window(this : IAccessibilityDockingService*, hwnd : Win32cr::Foundation::HWND, hMonitor : Win32cr::Graphics::Gdi::HMONITOR, cyRequested : UInt32, pCallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.dock_window.call(this, hwnd, hMonitor, cyRequested, pCallback)
    end
    def undock_window(this : IAccessibilityDockingService*, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.undock_window.call(this, hwnd)
    end

  end

  @[Extern]
  record IStorageProviderBannersVtbl,
    query_interface : Proc(IStorageProviderBanners*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IStorageProviderBanners*, UInt32),
    release : Proc(IStorageProviderBanners*, UInt32),
    set_banner : Proc(IStorageProviderBanners*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    clear_banner : Proc(IStorageProviderBanners*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    clear_all_banners : Proc(IStorageProviderBanners*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_banner : Proc(IStorageProviderBanners*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IStorageProviderBanners, lpVtbl : IStorageProviderBannersVtbl* do
    GUID = LibC::GUID.new(0x5efb46d7_u32, 0x47c0_u16, 0x4b68_u16, StaticArray[0xac_u8, 0xda_u8, 0xde_u8, 0xd4_u8, 0x7c_u8, 0x90_u8, 0xec_u8, 0x91_u8])
    def query_interface(this : IStorageProviderBanners*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IStorageProviderBanners*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IStorageProviderBanners*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_banner(this : IStorageProviderBanners*, providerIdentity : Win32cr::Foundation::PWSTR, subscriptionId : Win32cr::Foundation::PWSTR, contentId : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_banner.call(this, providerIdentity, subscriptionId, contentId)
    end
    def clear_banner(this : IStorageProviderBanners*, providerIdentity : Win32cr::Foundation::PWSTR, subscriptionId : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clear_banner.call(this, providerIdentity, subscriptionId)
    end
    def clear_all_banners(this : IStorageProviderBanners*, providerIdentity : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clear_all_banners.call(this, providerIdentity)
    end
    def get_banner(this : IStorageProviderBanners*, providerIdentity : Win32cr::Foundation::PWSTR, subscriptionId : Win32cr::Foundation::PWSTR, contentId : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_banner.call(this, providerIdentity, subscriptionId, contentId)
    end

  end

  @[Extern]
  record IStorageProviderCopyHookVtbl,
    query_interface : Proc(IStorageProviderCopyHook*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IStorageProviderCopyHook*, UInt32),
    release : Proc(IStorageProviderCopyHook*, UInt32),
    copy_callback : Proc(IStorageProviderCopyHook*, Win32cr::Foundation::HWND, UInt32, UInt32, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::PWSTR, UInt32, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IStorageProviderCopyHook, lpVtbl : IStorageProviderCopyHookVtbl* do
    GUID = LibC::GUID.new(0x7bf992a9_u32, 0xaf7a_u16, 0x4dba_u16, StaticArray[0xb2_u8, 0xe5_u8, 0x4d_u8, 0x8_u8, 0xb_u8, 0x1e_u8, 0xcb_u8, 0xc6_u8])
    def query_interface(this : IStorageProviderCopyHook*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IStorageProviderCopyHook*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IStorageProviderCopyHook*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def copy_callback(this : IStorageProviderCopyHook*, hwnd : Win32cr::Foundation::HWND, operation : UInt32, flags : UInt32, srcFile : Win32cr::Foundation::PWSTR, srcAttribs : UInt32, destFile : Win32cr::Foundation::PWSTR, destAttribs : UInt32, result : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_callback.call(this, hwnd, operation, flags, srcFile, srcAttribs, destFile, destAttribs, result)
    end

  end

  @[Extern]
  record IWebBrowserVtbl,
    query_interface : Proc(IWebBrowser*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWebBrowser*, UInt32),
    release : Proc(IWebBrowser*, UInt32),
    get_type_info_count : Proc(IWebBrowser*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IWebBrowser*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IWebBrowser*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IWebBrowser*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    go_back : Proc(IWebBrowser*, Win32cr::Foundation::HRESULT),
    go_forward : Proc(IWebBrowser*, Win32cr::Foundation::HRESULT),
    go_home : Proc(IWebBrowser*, Win32cr::Foundation::HRESULT),
    go_search : Proc(IWebBrowser*, Win32cr::Foundation::HRESULT),
    navigate : Proc(IWebBrowser*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    refresh : Proc(IWebBrowser*, Win32cr::Foundation::HRESULT),
    refresh2 : Proc(IWebBrowser*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    stop : Proc(IWebBrowser*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(IWebBrowser*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(IWebBrowser*, Void**, Win32cr::Foundation::HRESULT),
    get_Container : Proc(IWebBrowser*, Void**, Win32cr::Foundation::HRESULT),
    get_Document : Proc(IWebBrowser*, Void**, Win32cr::Foundation::HRESULT),
    get_TopLevelContainer : Proc(IWebBrowser*, Int16*, Win32cr::Foundation::HRESULT),
    get_Type : Proc(IWebBrowser*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Left : Proc(IWebBrowser*, Int32*, Win32cr::Foundation::HRESULT),
    put_Left : Proc(IWebBrowser*, Int32, Win32cr::Foundation::HRESULT),
    get_Top : Proc(IWebBrowser*, Int32*, Win32cr::Foundation::HRESULT),
    put_Top : Proc(IWebBrowser*, Int32, Win32cr::Foundation::HRESULT),
    get_Width : Proc(IWebBrowser*, Int32*, Win32cr::Foundation::HRESULT),
    put_Width : Proc(IWebBrowser*, Int32, Win32cr::Foundation::HRESULT),
    get_Height : Proc(IWebBrowser*, Int32*, Win32cr::Foundation::HRESULT),
    put_Height : Proc(IWebBrowser*, Int32, Win32cr::Foundation::HRESULT),
    get_LocationName : Proc(IWebBrowser*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_LocationURL : Proc(IWebBrowser*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Busy : Proc(IWebBrowser*, Int16*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWebBrowser, lpVtbl : IWebBrowserVtbl* do
    GUID = LibC::GUID.new(0xeab22ac1_u32, 0x30c1_u16, 0x11cf_u16, StaticArray[0xa7_u8, 0xeb_u8, 0x0_u8, 0x0_u8, 0xc0_u8, 0x5b_u8, 0xae_u8, 0xb_u8])
    def query_interface(this : IWebBrowser*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWebBrowser*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWebBrowser*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IWebBrowser*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IWebBrowser*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IWebBrowser*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IWebBrowser*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def go_back(this : IWebBrowser*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.go_back.call(this)
    end
    def go_forward(this : IWebBrowser*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.go_forward.call(this)
    end
    def go_home(this : IWebBrowser*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.go_home.call(this)
    end
    def go_search(this : IWebBrowser*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.go_search.call(this)
    end
    def navigate(this : IWebBrowser*, url : Win32cr::Foundation::BSTR, flags : Win32cr::System::Com::VARIANT*, target_frame_name : Win32cr::System::Com::VARIANT*, post_data : Win32cr::System::Com::VARIANT*, headers : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate.call(this, url, flags, target_frame_name, post_data, headers)
    end
    def refresh(this : IWebBrowser*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh.call(this)
    end
    def refresh2(this : IWebBrowser*, level : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh2.call(this, level)
    end
    def stop(this : IWebBrowser*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop.call(this)
    end
    def get_Application(this : IWebBrowser*, ppDisp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppDisp)
    end
    def get_Parent(this : IWebBrowser*, ppDisp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppDisp)
    end
    def get_Container(this : IWebBrowser*, ppDisp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Container.call(this, ppDisp)
    end
    def get_Document(this : IWebBrowser*, ppDisp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Document.call(this, ppDisp)
    end
    def get_TopLevelContainer(this : IWebBrowser*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_TopLevelContainer.call(this, pBool)
    end
    def get_Type(this : IWebBrowser*, type__ : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Type.call(this, type__)
    end
    def get_Left(this : IWebBrowser*, pl : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Left.call(this, pl)
    end
    def put_Left(this : IWebBrowser*, left : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Left.call(this, left)
    end
    def get_Top(this : IWebBrowser*, pl : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Top.call(this, pl)
    end
    def put_Top(this : IWebBrowser*, top : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Top.call(this, top)
    end
    def get_Width(this : IWebBrowser*, pl : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Width.call(this, pl)
    end
    def put_Width(this : IWebBrowser*, width : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Width.call(this, width)
    end
    def get_Height(this : IWebBrowser*, pl : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Height.call(this, pl)
    end
    def put_Height(this : IWebBrowser*, height : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Height.call(this, height)
    end
    def get_LocationName(this : IWebBrowser*, location_name : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_LocationName.call(this, location_name)
    end
    def get_LocationURL(this : IWebBrowser*, location_url : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_LocationURL.call(this, location_url)
    end
    def get_Busy(this : IWebBrowser*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Busy.call(this, pBool)
    end

  end

  @[Extern]
  record DWebBrowserEventsVtbl,
    query_interface : Proc(DWebBrowserEvents*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(DWebBrowserEvents*, UInt32),
    release : Proc(DWebBrowserEvents*, UInt32),
    get_type_info_count : Proc(DWebBrowserEvents*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(DWebBrowserEvents*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(DWebBrowserEvents*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(DWebBrowserEvents*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record DWebBrowserEvents, lpVtbl : DWebBrowserEventsVtbl* do
    GUID = LibC::GUID.new(0xeab22ac2_u32, 0x30c1_u16, 0x11cf_u16, StaticArray[0xa7_u8, 0xeb_u8, 0x0_u8, 0x0_u8, 0xc0_u8, 0x5b_u8, 0xae_u8, 0xb_u8])
    def query_interface(this : DWebBrowserEvents*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : DWebBrowserEvents*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : DWebBrowserEvents*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : DWebBrowserEvents*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : DWebBrowserEvents*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : DWebBrowserEvents*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : DWebBrowserEvents*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end

  end

  @[Extern]
  record IWebBrowserAppVtbl,
    query_interface : Proc(IWebBrowserApp*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWebBrowserApp*, UInt32),
    release : Proc(IWebBrowserApp*, UInt32),
    get_type_info_count : Proc(IWebBrowserApp*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IWebBrowserApp*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IWebBrowserApp*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IWebBrowserApp*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    go_back : Proc(IWebBrowserApp*, Win32cr::Foundation::HRESULT),
    go_forward : Proc(IWebBrowserApp*, Win32cr::Foundation::HRESULT),
    go_home : Proc(IWebBrowserApp*, Win32cr::Foundation::HRESULT),
    go_search : Proc(IWebBrowserApp*, Win32cr::Foundation::HRESULT),
    navigate : Proc(IWebBrowserApp*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    refresh : Proc(IWebBrowserApp*, Win32cr::Foundation::HRESULT),
    refresh2 : Proc(IWebBrowserApp*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    stop : Proc(IWebBrowserApp*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(IWebBrowserApp*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(IWebBrowserApp*, Void**, Win32cr::Foundation::HRESULT),
    get_Container : Proc(IWebBrowserApp*, Void**, Win32cr::Foundation::HRESULT),
    get_Document : Proc(IWebBrowserApp*, Void**, Win32cr::Foundation::HRESULT),
    get_TopLevelContainer : Proc(IWebBrowserApp*, Int16*, Win32cr::Foundation::HRESULT),
    get_Type : Proc(IWebBrowserApp*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Left : Proc(IWebBrowserApp*, Int32*, Win32cr::Foundation::HRESULT),
    put_Left : Proc(IWebBrowserApp*, Int32, Win32cr::Foundation::HRESULT),
    get_Top : Proc(IWebBrowserApp*, Int32*, Win32cr::Foundation::HRESULT),
    put_Top : Proc(IWebBrowserApp*, Int32, Win32cr::Foundation::HRESULT),
    get_Width : Proc(IWebBrowserApp*, Int32*, Win32cr::Foundation::HRESULT),
    put_Width : Proc(IWebBrowserApp*, Int32, Win32cr::Foundation::HRESULT),
    get_Height : Proc(IWebBrowserApp*, Int32*, Win32cr::Foundation::HRESULT),
    put_Height : Proc(IWebBrowserApp*, Int32, Win32cr::Foundation::HRESULT),
    get_LocationName : Proc(IWebBrowserApp*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_LocationURL : Proc(IWebBrowserApp*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Busy : Proc(IWebBrowserApp*, Int16*, Win32cr::Foundation::HRESULT),
    quit : Proc(IWebBrowserApp*, Win32cr::Foundation::HRESULT),
    client_to_window : Proc(IWebBrowserApp*, Int32*, Int32*, Win32cr::Foundation::HRESULT),
    put_property : Proc(IWebBrowserApp*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    get_property : Proc(IWebBrowserApp*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_Name : Proc(IWebBrowserApp*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_HWND : Proc(IWebBrowserApp*, Win32cr::Foundation::SHANDLE_PTR*, Win32cr::Foundation::HRESULT),
    get_FullName : Proc(IWebBrowserApp*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Path : Proc(IWebBrowserApp*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Visible : Proc(IWebBrowserApp*, Int16*, Win32cr::Foundation::HRESULT),
    put_Visible : Proc(IWebBrowserApp*, Int16, Win32cr::Foundation::HRESULT),
    get_StatusBar : Proc(IWebBrowserApp*, Int16*, Win32cr::Foundation::HRESULT),
    put_StatusBar : Proc(IWebBrowserApp*, Int16, Win32cr::Foundation::HRESULT),
    get_StatusText : Proc(IWebBrowserApp*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_StatusText : Proc(IWebBrowserApp*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_ToolBar : Proc(IWebBrowserApp*, Int32*, Win32cr::Foundation::HRESULT),
    put_ToolBar : Proc(IWebBrowserApp*, Int32, Win32cr::Foundation::HRESULT),
    get_MenuBar : Proc(IWebBrowserApp*, Int16*, Win32cr::Foundation::HRESULT),
    put_MenuBar : Proc(IWebBrowserApp*, Int16, Win32cr::Foundation::HRESULT),
    get_FullScreen : Proc(IWebBrowserApp*, Int16*, Win32cr::Foundation::HRESULT),
    put_FullScreen : Proc(IWebBrowserApp*, Int16, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWebBrowserApp, lpVtbl : IWebBrowserAppVtbl* do
    GUID = LibC::GUID.new(0x2df05_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IWebBrowserApp*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWebBrowserApp*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWebBrowserApp*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IWebBrowserApp*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IWebBrowserApp*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IWebBrowserApp*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IWebBrowserApp*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def go_back(this : IWebBrowserApp*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.go_back.call(this)
    end
    def go_forward(this : IWebBrowserApp*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.go_forward.call(this)
    end
    def go_home(this : IWebBrowserApp*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.go_home.call(this)
    end
    def go_search(this : IWebBrowserApp*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.go_search.call(this)
    end
    def navigate(this : IWebBrowserApp*, url : Win32cr::Foundation::BSTR, flags : Win32cr::System::Com::VARIANT*, target_frame_name : Win32cr::System::Com::VARIANT*, post_data : Win32cr::System::Com::VARIANT*, headers : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate.call(this, url, flags, target_frame_name, post_data, headers)
    end
    def refresh(this : IWebBrowserApp*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh.call(this)
    end
    def refresh2(this : IWebBrowserApp*, level : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh2.call(this, level)
    end
    def stop(this : IWebBrowserApp*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop.call(this)
    end
    def get_Application(this : IWebBrowserApp*, ppDisp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppDisp)
    end
    def get_Parent(this : IWebBrowserApp*, ppDisp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppDisp)
    end
    def get_Container(this : IWebBrowserApp*, ppDisp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Container.call(this, ppDisp)
    end
    def get_Document(this : IWebBrowserApp*, ppDisp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Document.call(this, ppDisp)
    end
    def get_TopLevelContainer(this : IWebBrowserApp*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_TopLevelContainer.call(this, pBool)
    end
    def get_Type(this : IWebBrowserApp*, type__ : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Type.call(this, type__)
    end
    def get_Left(this : IWebBrowserApp*, pl : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Left.call(this, pl)
    end
    def put_Left(this : IWebBrowserApp*, left : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Left.call(this, left)
    end
    def get_Top(this : IWebBrowserApp*, pl : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Top.call(this, pl)
    end
    def put_Top(this : IWebBrowserApp*, top : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Top.call(this, top)
    end
    def get_Width(this : IWebBrowserApp*, pl : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Width.call(this, pl)
    end
    def put_Width(this : IWebBrowserApp*, width : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Width.call(this, width)
    end
    def get_Height(this : IWebBrowserApp*, pl : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Height.call(this, pl)
    end
    def put_Height(this : IWebBrowserApp*, height : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Height.call(this, height)
    end
    def get_LocationName(this : IWebBrowserApp*, location_name : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_LocationName.call(this, location_name)
    end
    def get_LocationURL(this : IWebBrowserApp*, location_url : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_LocationURL.call(this, location_url)
    end
    def get_Busy(this : IWebBrowserApp*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Busy.call(this, pBool)
    end
    def quit(this : IWebBrowserApp*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.quit.call(this)
    end
    def client_to_window(this : IWebBrowserApp*, pcx : Int32*, pcy : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.client_to_window.call(this, pcx, pcy)
    end
    def put_property(this : IWebBrowserApp*, property : Win32cr::Foundation::BSTR, vtValue : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_property.call(this, property, vtValue)
    end
    def get_property(this : IWebBrowserApp*, property : Win32cr::Foundation::BSTR, pvtValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property.call(this, property, pvtValue)
    end
    def get_Name(this : IWebBrowserApp*, name : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Name.call(this, name)
    end
    def get_HWND(this : IWebBrowserApp*, pHWND : Win32cr::Foundation::SHANDLE_PTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_HWND.call(this, pHWND)
    end
    def get_FullName(this : IWebBrowserApp*, full_name : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_FullName.call(this, full_name)
    end
    def get_Path(this : IWebBrowserApp*, path : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Path.call(this, path)
    end
    def get_Visible(this : IWebBrowserApp*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Visible.call(this, pBool)
    end
    def put_Visible(this : IWebBrowserApp*, value : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Visible.call(this, value)
    end
    def get_StatusBar(this : IWebBrowserApp*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_StatusBar.call(this, pBool)
    end
    def put_StatusBar(this : IWebBrowserApp*, value : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_StatusBar.call(this, value)
    end
    def get_StatusText(this : IWebBrowserApp*, status_text : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_StatusText.call(this, status_text)
    end
    def put_StatusText(this : IWebBrowserApp*, status_text : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_StatusText.call(this, status_text)
    end
    def get_ToolBar(this : IWebBrowserApp*, value : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ToolBar.call(this, value)
    end
    def put_ToolBar(this : IWebBrowserApp*, value : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_ToolBar.call(this, value)
    end
    def get_MenuBar(this : IWebBrowserApp*, value : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_MenuBar.call(this, value)
    end
    def put_MenuBar(this : IWebBrowserApp*, value : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_MenuBar.call(this, value)
    end
    def get_FullScreen(this : IWebBrowserApp*, pbFullScreen : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_FullScreen.call(this, pbFullScreen)
    end
    def put_FullScreen(this : IWebBrowserApp*, bFullScreen : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_FullScreen.call(this, bFullScreen)
    end

  end

  @[Extern]
  record IWebBrowser2Vtbl,
    query_interface : Proc(IWebBrowser2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWebBrowser2*, UInt32),
    release : Proc(IWebBrowser2*, UInt32),
    get_type_info_count : Proc(IWebBrowser2*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IWebBrowser2*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IWebBrowser2*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IWebBrowser2*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    go_back : Proc(IWebBrowser2*, Win32cr::Foundation::HRESULT),
    go_forward : Proc(IWebBrowser2*, Win32cr::Foundation::HRESULT),
    go_home : Proc(IWebBrowser2*, Win32cr::Foundation::HRESULT),
    go_search : Proc(IWebBrowser2*, Win32cr::Foundation::HRESULT),
    navigate : Proc(IWebBrowser2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    refresh : Proc(IWebBrowser2*, Win32cr::Foundation::HRESULT),
    refresh2 : Proc(IWebBrowser2*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    stop : Proc(IWebBrowser2*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(IWebBrowser2*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(IWebBrowser2*, Void**, Win32cr::Foundation::HRESULT),
    get_Container : Proc(IWebBrowser2*, Void**, Win32cr::Foundation::HRESULT),
    get_Document : Proc(IWebBrowser2*, Void**, Win32cr::Foundation::HRESULT),
    get_TopLevelContainer : Proc(IWebBrowser2*, Int16*, Win32cr::Foundation::HRESULT),
    get_Type : Proc(IWebBrowser2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Left : Proc(IWebBrowser2*, Int32*, Win32cr::Foundation::HRESULT),
    put_Left : Proc(IWebBrowser2*, Int32, Win32cr::Foundation::HRESULT),
    get_Top : Proc(IWebBrowser2*, Int32*, Win32cr::Foundation::HRESULT),
    put_Top : Proc(IWebBrowser2*, Int32, Win32cr::Foundation::HRESULT),
    get_Width : Proc(IWebBrowser2*, Int32*, Win32cr::Foundation::HRESULT),
    put_Width : Proc(IWebBrowser2*, Int32, Win32cr::Foundation::HRESULT),
    get_Height : Proc(IWebBrowser2*, Int32*, Win32cr::Foundation::HRESULT),
    put_Height : Proc(IWebBrowser2*, Int32, Win32cr::Foundation::HRESULT),
    get_LocationName : Proc(IWebBrowser2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_LocationURL : Proc(IWebBrowser2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Busy : Proc(IWebBrowser2*, Int16*, Win32cr::Foundation::HRESULT),
    quit : Proc(IWebBrowser2*, Win32cr::Foundation::HRESULT),
    client_to_window : Proc(IWebBrowser2*, Int32*, Int32*, Win32cr::Foundation::HRESULT),
    put_property : Proc(IWebBrowser2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    get_property : Proc(IWebBrowser2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_Name : Proc(IWebBrowser2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_HWND : Proc(IWebBrowser2*, Win32cr::Foundation::SHANDLE_PTR*, Win32cr::Foundation::HRESULT),
    get_FullName : Proc(IWebBrowser2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Path : Proc(IWebBrowser2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Visible : Proc(IWebBrowser2*, Int16*, Win32cr::Foundation::HRESULT),
    put_Visible : Proc(IWebBrowser2*, Int16, Win32cr::Foundation::HRESULT),
    get_StatusBar : Proc(IWebBrowser2*, Int16*, Win32cr::Foundation::HRESULT),
    put_StatusBar : Proc(IWebBrowser2*, Int16, Win32cr::Foundation::HRESULT),
    get_StatusText : Proc(IWebBrowser2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_StatusText : Proc(IWebBrowser2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_ToolBar : Proc(IWebBrowser2*, Int32*, Win32cr::Foundation::HRESULT),
    put_ToolBar : Proc(IWebBrowser2*, Int32, Win32cr::Foundation::HRESULT),
    get_MenuBar : Proc(IWebBrowser2*, Int16*, Win32cr::Foundation::HRESULT),
    put_MenuBar : Proc(IWebBrowser2*, Int16, Win32cr::Foundation::HRESULT),
    get_FullScreen : Proc(IWebBrowser2*, Int16*, Win32cr::Foundation::HRESULT),
    put_FullScreen : Proc(IWebBrowser2*, Int16, Win32cr::Foundation::HRESULT),
    navigate2 : Proc(IWebBrowser2*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    query_status_wb : Proc(IWebBrowser2*, Win32cr::System::Ole::OLECMDID, Win32cr::System::Ole::OLECMDF*, Win32cr::Foundation::HRESULT),
    exec_wb : Proc(IWebBrowser2*, Win32cr::System::Ole::OLECMDID, Win32cr::System::Ole::OLECMDEXECOPT, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    show_browser_bar : Proc(IWebBrowser2*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_ReadyState : Proc(IWebBrowser2*, Win32cr::System::Ole::READYSTATE*, Win32cr::Foundation::HRESULT),
    get_Offline : Proc(IWebBrowser2*, Int16*, Win32cr::Foundation::HRESULT),
    put_Offline : Proc(IWebBrowser2*, Int16, Win32cr::Foundation::HRESULT),
    get_Silent : Proc(IWebBrowser2*, Int16*, Win32cr::Foundation::HRESULT),
    put_Silent : Proc(IWebBrowser2*, Int16, Win32cr::Foundation::HRESULT),
    get_RegisterAsBrowser : Proc(IWebBrowser2*, Int16*, Win32cr::Foundation::HRESULT),
    put_RegisterAsBrowser : Proc(IWebBrowser2*, Int16, Win32cr::Foundation::HRESULT),
    get_RegisterAsDropTarget : Proc(IWebBrowser2*, Int16*, Win32cr::Foundation::HRESULT),
    put_RegisterAsDropTarget : Proc(IWebBrowser2*, Int16, Win32cr::Foundation::HRESULT),
    get_TheaterMode : Proc(IWebBrowser2*, Int16*, Win32cr::Foundation::HRESULT),
    put_TheaterMode : Proc(IWebBrowser2*, Int16, Win32cr::Foundation::HRESULT),
    get_AddressBar : Proc(IWebBrowser2*, Int16*, Win32cr::Foundation::HRESULT),
    put_AddressBar : Proc(IWebBrowser2*, Int16, Win32cr::Foundation::HRESULT),
    get_Resizable : Proc(IWebBrowser2*, Int16*, Win32cr::Foundation::HRESULT),
    put_Resizable : Proc(IWebBrowser2*, Int16, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWebBrowser2, lpVtbl : IWebBrowser2Vtbl* do
    GUID = LibC::GUID.new(0xd30c1661_u32, 0xcdaf_u16, 0x11d0_u16, StaticArray[0x8a_u8, 0x3e_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc9_u8, 0xe2_u8, 0x6e_u8])
    def query_interface(this : IWebBrowser2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWebBrowser2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWebBrowser2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IWebBrowser2*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IWebBrowser2*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IWebBrowser2*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IWebBrowser2*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def go_back(this : IWebBrowser2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.go_back.call(this)
    end
    def go_forward(this : IWebBrowser2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.go_forward.call(this)
    end
    def go_home(this : IWebBrowser2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.go_home.call(this)
    end
    def go_search(this : IWebBrowser2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.go_search.call(this)
    end
    def navigate(this : IWebBrowser2*, url : Win32cr::Foundation::BSTR, flags : Win32cr::System::Com::VARIANT*, target_frame_name : Win32cr::System::Com::VARIANT*, post_data : Win32cr::System::Com::VARIANT*, headers : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate.call(this, url, flags, target_frame_name, post_data, headers)
    end
    def refresh(this : IWebBrowser2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh.call(this)
    end
    def refresh2(this : IWebBrowser2*, level : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh2.call(this, level)
    end
    def stop(this : IWebBrowser2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop.call(this)
    end
    def get_Application(this : IWebBrowser2*, ppDisp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppDisp)
    end
    def get_Parent(this : IWebBrowser2*, ppDisp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppDisp)
    end
    def get_Container(this : IWebBrowser2*, ppDisp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Container.call(this, ppDisp)
    end
    def get_Document(this : IWebBrowser2*, ppDisp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Document.call(this, ppDisp)
    end
    def get_TopLevelContainer(this : IWebBrowser2*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_TopLevelContainer.call(this, pBool)
    end
    def get_Type(this : IWebBrowser2*, type__ : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Type.call(this, type__)
    end
    def get_Left(this : IWebBrowser2*, pl : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Left.call(this, pl)
    end
    def put_Left(this : IWebBrowser2*, left : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Left.call(this, left)
    end
    def get_Top(this : IWebBrowser2*, pl : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Top.call(this, pl)
    end
    def put_Top(this : IWebBrowser2*, top : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Top.call(this, top)
    end
    def get_Width(this : IWebBrowser2*, pl : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Width.call(this, pl)
    end
    def put_Width(this : IWebBrowser2*, width : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Width.call(this, width)
    end
    def get_Height(this : IWebBrowser2*, pl : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Height.call(this, pl)
    end
    def put_Height(this : IWebBrowser2*, height : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Height.call(this, height)
    end
    def get_LocationName(this : IWebBrowser2*, location_name : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_LocationName.call(this, location_name)
    end
    def get_LocationURL(this : IWebBrowser2*, location_url : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_LocationURL.call(this, location_url)
    end
    def get_Busy(this : IWebBrowser2*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Busy.call(this, pBool)
    end
    def quit(this : IWebBrowser2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.quit.call(this)
    end
    def client_to_window(this : IWebBrowser2*, pcx : Int32*, pcy : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.client_to_window.call(this, pcx, pcy)
    end
    def put_property(this : IWebBrowser2*, property : Win32cr::Foundation::BSTR, vtValue : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_property.call(this, property, vtValue)
    end
    def get_property(this : IWebBrowser2*, property : Win32cr::Foundation::BSTR, pvtValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property.call(this, property, pvtValue)
    end
    def get_Name(this : IWebBrowser2*, name : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Name.call(this, name)
    end
    def get_HWND(this : IWebBrowser2*, pHWND : Win32cr::Foundation::SHANDLE_PTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_HWND.call(this, pHWND)
    end
    def get_FullName(this : IWebBrowser2*, full_name : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_FullName.call(this, full_name)
    end
    def get_Path(this : IWebBrowser2*, path : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Path.call(this, path)
    end
    def get_Visible(this : IWebBrowser2*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Visible.call(this, pBool)
    end
    def put_Visible(this : IWebBrowser2*, value : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Visible.call(this, value)
    end
    def get_StatusBar(this : IWebBrowser2*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_StatusBar.call(this, pBool)
    end
    def put_StatusBar(this : IWebBrowser2*, value : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_StatusBar.call(this, value)
    end
    def get_StatusText(this : IWebBrowser2*, status_text : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_StatusText.call(this, status_text)
    end
    def put_StatusText(this : IWebBrowser2*, status_text : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_StatusText.call(this, status_text)
    end
    def get_ToolBar(this : IWebBrowser2*, value : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ToolBar.call(this, value)
    end
    def put_ToolBar(this : IWebBrowser2*, value : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_ToolBar.call(this, value)
    end
    def get_MenuBar(this : IWebBrowser2*, value : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_MenuBar.call(this, value)
    end
    def put_MenuBar(this : IWebBrowser2*, value : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_MenuBar.call(this, value)
    end
    def get_FullScreen(this : IWebBrowser2*, pbFullScreen : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_FullScreen.call(this, pbFullScreen)
    end
    def put_FullScreen(this : IWebBrowser2*, bFullScreen : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_FullScreen.call(this, bFullScreen)
    end
    def navigate2(this : IWebBrowser2*, url : Win32cr::System::Com::VARIANT*, flags : Win32cr::System::Com::VARIANT*, target_frame_name : Win32cr::System::Com::VARIANT*, post_data : Win32cr::System::Com::VARIANT*, headers : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate2.call(this, url, flags, target_frame_name, post_data, headers)
    end
    def query_status_wb(this : IWebBrowser2*, cmdID : Win32cr::System::Ole::OLECMDID, pcmdf : Win32cr::System::Ole::OLECMDF*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_status_wb.call(this, cmdID, pcmdf)
    end
    def exec_wb(this : IWebBrowser2*, cmdID : Win32cr::System::Ole::OLECMDID, cmdexecopt : Win32cr::System::Ole::OLECMDEXECOPT, pvaIn : Win32cr::System::Com::VARIANT*, pvaOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.exec_wb.call(this, cmdID, cmdexecopt, pvaIn, pvaOut)
    end
    def show_browser_bar(this : IWebBrowser2*, pvaClsid : Win32cr::System::Com::VARIANT*, pvarShow : Win32cr::System::Com::VARIANT*, pvarSize : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_browser_bar.call(this, pvaClsid, pvarShow, pvarSize)
    end
    def get_ReadyState(this : IWebBrowser2*, plReadyState : Win32cr::System::Ole::READYSTATE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ReadyState.call(this, plReadyState)
    end
    def get_Offline(this : IWebBrowser2*, pbOffline : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Offline.call(this, pbOffline)
    end
    def put_Offline(this : IWebBrowser2*, bOffline : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Offline.call(this, bOffline)
    end
    def get_Silent(this : IWebBrowser2*, pbSilent : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Silent.call(this, pbSilent)
    end
    def put_Silent(this : IWebBrowser2*, bSilent : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Silent.call(this, bSilent)
    end
    def get_RegisterAsBrowser(this : IWebBrowser2*, pbRegister : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_RegisterAsBrowser.call(this, pbRegister)
    end
    def put_RegisterAsBrowser(this : IWebBrowser2*, bRegister : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_RegisterAsBrowser.call(this, bRegister)
    end
    def get_RegisterAsDropTarget(this : IWebBrowser2*, pbRegister : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_RegisterAsDropTarget.call(this, pbRegister)
    end
    def put_RegisterAsDropTarget(this : IWebBrowser2*, bRegister : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_RegisterAsDropTarget.call(this, bRegister)
    end
    def get_TheaterMode(this : IWebBrowser2*, pbRegister : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_TheaterMode.call(this, pbRegister)
    end
    def put_TheaterMode(this : IWebBrowser2*, bRegister : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_TheaterMode.call(this, bRegister)
    end
    def get_AddressBar(this : IWebBrowser2*, value : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_AddressBar.call(this, value)
    end
    def put_AddressBar(this : IWebBrowser2*, value : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_AddressBar.call(this, value)
    end
    def get_Resizable(this : IWebBrowser2*, value : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Resizable.call(this, value)
    end
    def put_Resizable(this : IWebBrowser2*, value : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Resizable.call(this, value)
    end

  end

  @[Extern]
  record DWebBrowserEvents2Vtbl,
    query_interface : Proc(DWebBrowserEvents2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(DWebBrowserEvents2*, UInt32),
    release : Proc(DWebBrowserEvents2*, UInt32),
    get_type_info_count : Proc(DWebBrowserEvents2*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(DWebBrowserEvents2*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(DWebBrowserEvents2*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(DWebBrowserEvents2*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record DWebBrowserEvents2, lpVtbl : DWebBrowserEvents2Vtbl* do
    GUID = LibC::GUID.new(0x34a715a0_u32, 0x6587_u16, 0x11d0_u16, StaticArray[0x92_u8, 0x4a_u8, 0x0_u8, 0x20_u8, 0xaf_u8, 0xc7_u8, 0xac_u8, 0x4d_u8])
    def query_interface(this : DWebBrowserEvents2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : DWebBrowserEvents2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : DWebBrowserEvents2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : DWebBrowserEvents2*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : DWebBrowserEvents2*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : DWebBrowserEvents2*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : DWebBrowserEvents2*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end

  end

  @[Extern]
  record DShellWindowsEventsVtbl,
    query_interface : Proc(DShellWindowsEvents*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(DShellWindowsEvents*, UInt32),
    release : Proc(DShellWindowsEvents*, UInt32),
    get_type_info_count : Proc(DShellWindowsEvents*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(DShellWindowsEvents*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(DShellWindowsEvents*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(DShellWindowsEvents*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record DShellWindowsEvents, lpVtbl : DShellWindowsEventsVtbl* do
    GUID = LibC::GUID.new(0xfe4106e0_u32, 0x399a_u16, 0x11d0_u16, StaticArray[0xa4_u8, 0x8c_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x8f_u8, 0x39_u8])
    def query_interface(this : DShellWindowsEvents*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : DShellWindowsEvents*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : DShellWindowsEvents*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : DShellWindowsEvents*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : DShellWindowsEvents*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : DShellWindowsEvents*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : DShellWindowsEvents*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end

  end

  @[Extern]
  record IShellWindowsVtbl,
    query_interface : Proc(IShellWindows*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellWindows*, UInt32),
    release : Proc(IShellWindows*, UInt32),
    get_type_info_count : Proc(IShellWindows*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellWindows*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellWindows*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellWindows*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Count : Proc(IShellWindows*, Int32*, Win32cr::Foundation::HRESULT),
    item : Proc(IShellWindows*, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    _new_enum : Proc(IShellWindows*, Void**, Win32cr::Foundation::HRESULT),
    register : Proc(IShellWindows*, Void*, Int32, Int32, Int32*, Win32cr::Foundation::HRESULT),
    register_pending : Proc(IShellWindows*, Int32, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Int32, Int32*, Win32cr::Foundation::HRESULT),
    revoke : Proc(IShellWindows*, Int32, Win32cr::Foundation::HRESULT),
    on_navigate : Proc(IShellWindows*, Int32, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    on_activated : Proc(IShellWindows*, Int32, Int16, Win32cr::Foundation::HRESULT),
    find_window_sw : Proc(IShellWindows*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Int32, Int32*, Int32, Void**, Win32cr::Foundation::HRESULT),
    on_created : Proc(IShellWindows*, Int32, Void*, Win32cr::Foundation::HRESULT),
    process_attach_detach : Proc(IShellWindows*, Int16, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellWindows, lpVtbl : IShellWindowsVtbl* do
    GUID = LibC::GUID.new(0x85cb6900_u32, 0x4d95_u16, 0x11cf_u16, StaticArray[0x96_u8, 0xc_u8, 0x0_u8, 0x80_u8, 0xc7_u8, 0xf4_u8, 0xee_u8, 0x85_u8])
    def query_interface(this : IShellWindows*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellWindows*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellWindows*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellWindows*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellWindows*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellWindows*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellWindows*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Count(this : IShellWindows*, count : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Count.call(this, count)
    end
    def item(this : IShellWindows*, index : Win32cr::System::Com::VARIANT, folder : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item.call(this, index, folder)
    end
    def _new_enum(this : IShellWindows*, ppunk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._new_enum.call(this, ppunk)
    end
    def register(this : IShellWindows*, pid : Void*, hwnd : Int32, swClass : Int32, plCookie : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register.call(this, pid, hwnd, swClass, plCookie)
    end
    def register_pending(this : IShellWindows*, lThreadId : Int32, pvarloc : Win32cr::System::Com::VARIANT*, pvarlocRoot : Win32cr::System::Com::VARIANT*, swClass : Int32, plCookie : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_pending.call(this, lThreadId, pvarloc, pvarlocRoot, swClass, plCookie)
    end
    def revoke(this : IShellWindows*, lCookie : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.revoke.call(this, lCookie)
    end
    def on_navigate(this : IShellWindows*, lCookie : Int32, pvarLoc : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_navigate.call(this, lCookie, pvarLoc)
    end
    def on_activated(this : IShellWindows*, lCookie : Int32, fActive : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_activated.call(this, lCookie, fActive)
    end
    def find_window_sw(this : IShellWindows*, pvarLoc : Win32cr::System::Com::VARIANT*, pvarLocRoot : Win32cr::System::Com::VARIANT*, swClass : Int32, phwnd : Int32*, swfwOptions : Int32, ppdispOut : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_window_sw.call(this, pvarLoc, pvarLocRoot, swClass, phwnd, swfwOptions, ppdispOut)
    end
    def on_created(this : IShellWindows*, lCookie : Int32, punk : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_created.call(this, lCookie, punk)
    end
    def process_attach_detach(this : IShellWindows*, fAttach : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.process_attach_detach.call(this, fAttach)
    end

  end

  @[Extern]
  record IShellUIHelperVtbl,
    query_interface : Proc(IShellUIHelper*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellUIHelper*, UInt32),
    release : Proc(IShellUIHelper*, UInt32),
    get_type_info_count : Proc(IShellUIHelper*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellUIHelper*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellUIHelper*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellUIHelper*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    reset_first_boot_mode : Proc(IShellUIHelper*, Win32cr::Foundation::HRESULT),
    reset_safe_mode : Proc(IShellUIHelper*, Win32cr::Foundation::HRESULT),
    refresh_offline_desktop : Proc(IShellUIHelper*, Win32cr::Foundation::HRESULT),
    add_favorite : Proc(IShellUIHelper*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_channel : Proc(IShellUIHelper*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    add_desktop_component : Proc(IShellUIHelper*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    is_subscribed : Proc(IShellUIHelper*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    navigate_and_find : Proc(IShellUIHelper*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    import_export_favorites : Proc(IShellUIHelper*, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    auto_complete_save_form : Proc(IShellUIHelper*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_scan : Proc(IShellUIHelper*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_complete_attach : Proc(IShellUIHelper*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    show_browser_ui : Proc(IShellUIHelper*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellUIHelper, lpVtbl : IShellUIHelperVtbl* do
    GUID = LibC::GUID.new(0x729fe2f8_u32, 0x1ea8_u16, 0x11d1_u16, StaticArray[0x8f_u8, 0x85_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc2_u8, 0xfb_u8, 0xe1_u8])
    def query_interface(this : IShellUIHelper*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellUIHelper*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellUIHelper*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellUIHelper*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellUIHelper*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellUIHelper*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellUIHelper*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def reset_first_boot_mode(this : IShellUIHelper*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_first_boot_mode.call(this)
    end
    def reset_safe_mode(this : IShellUIHelper*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_safe_mode.call(this)
    end
    def refresh_offline_desktop(this : IShellUIHelper*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_offline_desktop.call(this)
    end
    def add_favorite(this : IShellUIHelper*, url : Win32cr::Foundation::BSTR, title : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_favorite.call(this, url, title)
    end
    def add_channel(this : IShellUIHelper*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_channel.call(this, url)
    end
    def add_desktop_component(this : IShellUIHelper*, url : Win32cr::Foundation::BSTR, type__ : Win32cr::Foundation::BSTR, left : Win32cr::System::Com::VARIANT*, top : Win32cr::System::Com::VARIANT*, width : Win32cr::System::Com::VARIANT*, height : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_desktop_component.call(this, url, type__, left, top, width, height)
    end
    def is_subscribed(this : IShellUIHelper*, url : Win32cr::Foundation::BSTR, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_subscribed.call(this, url, pBool)
    end
    def navigate_and_find(this : IShellUIHelper*, url : Win32cr::Foundation::BSTR, strQuery : Win32cr::Foundation::BSTR, varTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_and_find.call(this, url, strQuery, varTargetFrame)
    end
    def import_export_favorites(this : IShellUIHelper*, fImport : Int16, strImpExpPath : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.import_export_favorites.call(this, fImport, strImpExpPath)
    end
    def auto_complete_save_form(this : IShellUIHelper*, form : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_save_form.call(this, form)
    end
    def auto_scan(this : IShellUIHelper*, strSearch : Win32cr::Foundation::BSTR, strFailureUrl : Win32cr::Foundation::BSTR, pvarTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_scan.call(this, strSearch, strFailureUrl, pvarTargetFrame)
    end
    def auto_complete_attach(this : IShellUIHelper*, reserved : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_attach.call(this, reserved)
    end
    def show_browser_ui(this : IShellUIHelper*, bstrName : Win32cr::Foundation::BSTR, pvarIn : Win32cr::System::Com::VARIANT*, pvarOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_browser_ui.call(this, bstrName, pvarIn, pvarOut)
    end

  end

  @[Extern]
  record IShellUIHelper2Vtbl,
    query_interface : Proc(IShellUIHelper2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellUIHelper2*, UInt32),
    release : Proc(IShellUIHelper2*, UInt32),
    get_type_info_count : Proc(IShellUIHelper2*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellUIHelper2*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellUIHelper2*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellUIHelper2*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    reset_first_boot_mode : Proc(IShellUIHelper2*, Win32cr::Foundation::HRESULT),
    reset_safe_mode : Proc(IShellUIHelper2*, Win32cr::Foundation::HRESULT),
    refresh_offline_desktop : Proc(IShellUIHelper2*, Win32cr::Foundation::HRESULT),
    add_favorite : Proc(IShellUIHelper2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_channel : Proc(IShellUIHelper2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    add_desktop_component : Proc(IShellUIHelper2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    is_subscribed : Proc(IShellUIHelper2*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    navigate_and_find : Proc(IShellUIHelper2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    import_export_favorites : Proc(IShellUIHelper2*, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    auto_complete_save_form : Proc(IShellUIHelper2*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_scan : Proc(IShellUIHelper2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_complete_attach : Proc(IShellUIHelper2*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    show_browser_ui : Proc(IShellUIHelper2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_search_provider : Proc(IShellUIHelper2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    run_once_shown : Proc(IShellUIHelper2*, Win32cr::Foundation::HRESULT),
    skip_run_once : Proc(IShellUIHelper2*, Win32cr::Foundation::HRESULT),
    customize_settings : Proc(IShellUIHelper2*, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    sqm_enabled : Proc(IShellUIHelper2*, Int16*, Win32cr::Foundation::HRESULT),
    phishing_enabled : Proc(IShellUIHelper2*, Int16*, Win32cr::Foundation::HRESULT),
    brand_image_uri : Proc(IShellUIHelper2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    skip_tabs_welcome : Proc(IShellUIHelper2*, Win32cr::Foundation::HRESULT),
    diagnose_connection : Proc(IShellUIHelper2*, Win32cr::Foundation::HRESULT),
    customize_clear_type : Proc(IShellUIHelper2*, Int16, Win32cr::Foundation::HRESULT),
    is_search_provider_installed : Proc(IShellUIHelper2*, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    is_search_migrated : Proc(IShellUIHelper2*, Int16*, Win32cr::Foundation::HRESULT),
    default_search_provider : Proc(IShellUIHelper2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    run_once_required_settings_complete : Proc(IShellUIHelper2*, Int16, Win32cr::Foundation::HRESULT),
    run_once_has_shown : Proc(IShellUIHelper2*, Int16*, Win32cr::Foundation::HRESULT),
    search_guide_url : Proc(IShellUIHelper2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellUIHelper2, lpVtbl : IShellUIHelper2Vtbl* do
    GUID = LibC::GUID.new(0xa7fe6eda_u32, 0x1932_u16, 0x4281_u16, StaticArray[0xb8_u8, 0x81_u8, 0x87_u8, 0xb3_u8, 0x1b_u8, 0x8b_u8, 0xc5_u8, 0x2c_u8])
    def query_interface(this : IShellUIHelper2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellUIHelper2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellUIHelper2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellUIHelper2*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellUIHelper2*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellUIHelper2*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellUIHelper2*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def reset_first_boot_mode(this : IShellUIHelper2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_first_boot_mode.call(this)
    end
    def reset_safe_mode(this : IShellUIHelper2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_safe_mode.call(this)
    end
    def refresh_offline_desktop(this : IShellUIHelper2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_offline_desktop.call(this)
    end
    def add_favorite(this : IShellUIHelper2*, url : Win32cr::Foundation::BSTR, title : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_favorite.call(this, url, title)
    end
    def add_channel(this : IShellUIHelper2*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_channel.call(this, url)
    end
    def add_desktop_component(this : IShellUIHelper2*, url : Win32cr::Foundation::BSTR, type__ : Win32cr::Foundation::BSTR, left : Win32cr::System::Com::VARIANT*, top : Win32cr::System::Com::VARIANT*, width : Win32cr::System::Com::VARIANT*, height : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_desktop_component.call(this, url, type__, left, top, width, height)
    end
    def is_subscribed(this : IShellUIHelper2*, url : Win32cr::Foundation::BSTR, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_subscribed.call(this, url, pBool)
    end
    def navigate_and_find(this : IShellUIHelper2*, url : Win32cr::Foundation::BSTR, strQuery : Win32cr::Foundation::BSTR, varTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_and_find.call(this, url, strQuery, varTargetFrame)
    end
    def import_export_favorites(this : IShellUIHelper2*, fImport : Int16, strImpExpPath : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.import_export_favorites.call(this, fImport, strImpExpPath)
    end
    def auto_complete_save_form(this : IShellUIHelper2*, form : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_save_form.call(this, form)
    end
    def auto_scan(this : IShellUIHelper2*, strSearch : Win32cr::Foundation::BSTR, strFailureUrl : Win32cr::Foundation::BSTR, pvarTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_scan.call(this, strSearch, strFailureUrl, pvarTargetFrame)
    end
    def auto_complete_attach(this : IShellUIHelper2*, reserved : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_attach.call(this, reserved)
    end
    def show_browser_ui(this : IShellUIHelper2*, bstrName : Win32cr::Foundation::BSTR, pvarIn : Win32cr::System::Com::VARIANT*, pvarOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_browser_ui.call(this, bstrName, pvarIn, pvarOut)
    end
    def add_search_provider(this : IShellUIHelper2*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_search_provider.call(this, url)
    end
    def run_once_shown(this : IShellUIHelper2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_shown.call(this)
    end
    def skip_run_once(this : IShellUIHelper2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_run_once.call(this)
    end
    def customize_settings(this : IShellUIHelper2*, fSQM : Int16, fPhishing : Int16, bstrLocale : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_settings.call(this, fSQM, fPhishing, bstrLocale)
    end
    def sqm_enabled(this : IShellUIHelper2*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.sqm_enabled.call(this, pfEnabled)
    end
    def phishing_enabled(this : IShellUIHelper2*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.phishing_enabled.call(this, pfEnabled)
    end
    def brand_image_uri(this : IShellUIHelper2*, pbstrUri : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.brand_image_uri.call(this, pbstrUri)
    end
    def skip_tabs_welcome(this : IShellUIHelper2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_tabs_welcome.call(this)
    end
    def diagnose_connection(this : IShellUIHelper2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.diagnose_connection.call(this)
    end
    def customize_clear_type(this : IShellUIHelper2*, fSet : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_clear_type.call(this, fSet)
    end
    def is_search_provider_installed(this : IShellUIHelper2*, url : Win32cr::Foundation::BSTR, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_provider_installed.call(this, url, pdwResult)
    end
    def is_search_migrated(this : IShellUIHelper2*, pfMigrated : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_migrated.call(this, pfMigrated)
    end
    def default_search_provider(this : IShellUIHelper2*, pbstrName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.default_search_provider.call(this, pbstrName)
    end
    def run_once_required_settings_complete(this : IShellUIHelper2*, fComplete : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_required_settings_complete.call(this, fComplete)
    end
    def run_once_has_shown(this : IShellUIHelper2*, pfShown : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_has_shown.call(this, pfShown)
    end
    def search_guide_url(this : IShellUIHelper2*, pbstrUrl : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.search_guide_url.call(this, pbstrUrl)
    end

  end

  @[Extern]
  record IShellUIHelper3Vtbl,
    query_interface : Proc(IShellUIHelper3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellUIHelper3*, UInt32),
    release : Proc(IShellUIHelper3*, UInt32),
    get_type_info_count : Proc(IShellUIHelper3*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellUIHelper3*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellUIHelper3*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellUIHelper3*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    reset_first_boot_mode : Proc(IShellUIHelper3*, Win32cr::Foundation::HRESULT),
    reset_safe_mode : Proc(IShellUIHelper3*, Win32cr::Foundation::HRESULT),
    refresh_offline_desktop : Proc(IShellUIHelper3*, Win32cr::Foundation::HRESULT),
    add_favorite : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_channel : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    add_desktop_component : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    is_subscribed : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    navigate_and_find : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    import_export_favorites : Proc(IShellUIHelper3*, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    auto_complete_save_form : Proc(IShellUIHelper3*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_scan : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_complete_attach : Proc(IShellUIHelper3*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    show_browser_ui : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_search_provider : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    run_once_shown : Proc(IShellUIHelper3*, Win32cr::Foundation::HRESULT),
    skip_run_once : Proc(IShellUIHelper3*, Win32cr::Foundation::HRESULT),
    customize_settings : Proc(IShellUIHelper3*, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    sqm_enabled : Proc(IShellUIHelper3*, Int16*, Win32cr::Foundation::HRESULT),
    phishing_enabled : Proc(IShellUIHelper3*, Int16*, Win32cr::Foundation::HRESULT),
    brand_image_uri : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    skip_tabs_welcome : Proc(IShellUIHelper3*, Win32cr::Foundation::HRESULT),
    diagnose_connection : Proc(IShellUIHelper3*, Win32cr::Foundation::HRESULT),
    customize_clear_type : Proc(IShellUIHelper3*, Int16, Win32cr::Foundation::HRESULT),
    is_search_provider_installed : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    is_search_migrated : Proc(IShellUIHelper3*, Int16*, Win32cr::Foundation::HRESULT),
    default_search_provider : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    run_once_required_settings_complete : Proc(IShellUIHelper3*, Int16, Win32cr::Foundation::HRESULT),
    run_once_has_shown : Proc(IShellUIHelper3*, Int16*, Win32cr::Foundation::HRESULT),
    search_guide_url : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    add_service : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    is_service_installed : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    in_private_filtering_enabled : Proc(IShellUIHelper3*, Int16*, Win32cr::Foundation::HRESULT),
    add_to_favorites_bar : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    build_new_tab_page : Proc(IShellUIHelper3*, Win32cr::Foundation::HRESULT),
    set_recently_closed_visible : Proc(IShellUIHelper3*, Int16, Win32cr::Foundation::HRESULT),
    set_activities_visible : Proc(IShellUIHelper3*, Int16, Win32cr::Foundation::HRESULT),
    content_discovery_reset : Proc(IShellUIHelper3*, Win32cr::Foundation::HRESULT),
    is_suggested_sites_enabled : Proc(IShellUIHelper3*, Int16*, Win32cr::Foundation::HRESULT),
    enable_suggested_sites : Proc(IShellUIHelper3*, Int16, Win32cr::Foundation::HRESULT),
    navigate_to_suggested_sites : Proc(IShellUIHelper3*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    show_tabs_help : Proc(IShellUIHelper3*, Win32cr::Foundation::HRESULT),
    show_in_private_help : Proc(IShellUIHelper3*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellUIHelper3, lpVtbl : IShellUIHelper3Vtbl* do
    GUID = LibC::GUID.new(0x528df2ec_u32, 0xd419_u16, 0x40bc_u16, StaticArray[0x9b_u8, 0x6d_u8, 0xdc_u8, 0xdb_u8, 0xf9_u8, 0xc1_u8, 0xb2_u8, 0x5d_u8])
    def query_interface(this : IShellUIHelper3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellUIHelper3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellUIHelper3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellUIHelper3*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellUIHelper3*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellUIHelper3*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellUIHelper3*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def reset_first_boot_mode(this : IShellUIHelper3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_first_boot_mode.call(this)
    end
    def reset_safe_mode(this : IShellUIHelper3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_safe_mode.call(this)
    end
    def refresh_offline_desktop(this : IShellUIHelper3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_offline_desktop.call(this)
    end
    def add_favorite(this : IShellUIHelper3*, url : Win32cr::Foundation::BSTR, title : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_favorite.call(this, url, title)
    end
    def add_channel(this : IShellUIHelper3*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_channel.call(this, url)
    end
    def add_desktop_component(this : IShellUIHelper3*, url : Win32cr::Foundation::BSTR, type__ : Win32cr::Foundation::BSTR, left : Win32cr::System::Com::VARIANT*, top : Win32cr::System::Com::VARIANT*, width : Win32cr::System::Com::VARIANT*, height : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_desktop_component.call(this, url, type__, left, top, width, height)
    end
    def is_subscribed(this : IShellUIHelper3*, url : Win32cr::Foundation::BSTR, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_subscribed.call(this, url, pBool)
    end
    def navigate_and_find(this : IShellUIHelper3*, url : Win32cr::Foundation::BSTR, strQuery : Win32cr::Foundation::BSTR, varTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_and_find.call(this, url, strQuery, varTargetFrame)
    end
    def import_export_favorites(this : IShellUIHelper3*, fImport : Int16, strImpExpPath : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.import_export_favorites.call(this, fImport, strImpExpPath)
    end
    def auto_complete_save_form(this : IShellUIHelper3*, form : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_save_form.call(this, form)
    end
    def auto_scan(this : IShellUIHelper3*, strSearch : Win32cr::Foundation::BSTR, strFailureUrl : Win32cr::Foundation::BSTR, pvarTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_scan.call(this, strSearch, strFailureUrl, pvarTargetFrame)
    end
    def auto_complete_attach(this : IShellUIHelper3*, reserved : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_attach.call(this, reserved)
    end
    def show_browser_ui(this : IShellUIHelper3*, bstrName : Win32cr::Foundation::BSTR, pvarIn : Win32cr::System::Com::VARIANT*, pvarOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_browser_ui.call(this, bstrName, pvarIn, pvarOut)
    end
    def add_search_provider(this : IShellUIHelper3*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_search_provider.call(this, url)
    end
    def run_once_shown(this : IShellUIHelper3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_shown.call(this)
    end
    def skip_run_once(this : IShellUIHelper3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_run_once.call(this)
    end
    def customize_settings(this : IShellUIHelper3*, fSQM : Int16, fPhishing : Int16, bstrLocale : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_settings.call(this, fSQM, fPhishing, bstrLocale)
    end
    def sqm_enabled(this : IShellUIHelper3*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.sqm_enabled.call(this, pfEnabled)
    end
    def phishing_enabled(this : IShellUIHelper3*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.phishing_enabled.call(this, pfEnabled)
    end
    def brand_image_uri(this : IShellUIHelper3*, pbstrUri : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.brand_image_uri.call(this, pbstrUri)
    end
    def skip_tabs_welcome(this : IShellUIHelper3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_tabs_welcome.call(this)
    end
    def diagnose_connection(this : IShellUIHelper3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.diagnose_connection.call(this)
    end
    def customize_clear_type(this : IShellUIHelper3*, fSet : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_clear_type.call(this, fSet)
    end
    def is_search_provider_installed(this : IShellUIHelper3*, url : Win32cr::Foundation::BSTR, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_provider_installed.call(this, url, pdwResult)
    end
    def is_search_migrated(this : IShellUIHelper3*, pfMigrated : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_migrated.call(this, pfMigrated)
    end
    def default_search_provider(this : IShellUIHelper3*, pbstrName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.default_search_provider.call(this, pbstrName)
    end
    def run_once_required_settings_complete(this : IShellUIHelper3*, fComplete : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_required_settings_complete.call(this, fComplete)
    end
    def run_once_has_shown(this : IShellUIHelper3*, pfShown : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_has_shown.call(this, pfShown)
    end
    def search_guide_url(this : IShellUIHelper3*, pbstrUrl : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.search_guide_url.call(this, pbstrUrl)
    end
    def add_service(this : IShellUIHelper3*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_service.call(this, url)
    end
    def is_service_installed(this : IShellUIHelper3*, url : Win32cr::Foundation::BSTR, verb : Win32cr::Foundation::BSTR, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_service_installed.call(this, url, verb, pdwResult)
    end
    def in_private_filtering_enabled(this : IShellUIHelper3*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.in_private_filtering_enabled.call(this, pfEnabled)
    end
    def add_to_favorites_bar(this : IShellUIHelper3*, url : Win32cr::Foundation::BSTR, title : Win32cr::Foundation::BSTR, type__ : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_to_favorites_bar.call(this, url, title, type__)
    end
    def build_new_tab_page(this : IShellUIHelper3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.build_new_tab_page.call(this)
    end
    def set_recently_closed_visible(this : IShellUIHelper3*, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_recently_closed_visible.call(this, fVisible)
    end
    def set_activities_visible(this : IShellUIHelper3*, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_activities_visible.call(this, fVisible)
    end
    def content_discovery_reset(this : IShellUIHelper3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.content_discovery_reset.call(this)
    end
    def is_suggested_sites_enabled(this : IShellUIHelper3*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_suggested_sites_enabled.call(this, pfEnabled)
    end
    def enable_suggested_sites(this : IShellUIHelper3*, fEnable : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_suggested_sites.call(this, fEnable)
    end
    def navigate_to_suggested_sites(this : IShellUIHelper3*, bstrRelativeUrl : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_to_suggested_sites.call(this, bstrRelativeUrl)
    end
    def show_tabs_help(this : IShellUIHelper3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_tabs_help.call(this)
    end
    def show_in_private_help(this : IShellUIHelper3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_in_private_help.call(this)
    end

  end

  @[Extern]
  record IShellUIHelper4Vtbl,
    query_interface : Proc(IShellUIHelper4*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellUIHelper4*, UInt32),
    release : Proc(IShellUIHelper4*, UInt32),
    get_type_info_count : Proc(IShellUIHelper4*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellUIHelper4*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellUIHelper4*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellUIHelper4*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    reset_first_boot_mode : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    reset_safe_mode : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    refresh_offline_desktop : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    add_favorite : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_channel : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    add_desktop_component : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    is_subscribed : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    navigate_and_find : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    import_export_favorites : Proc(IShellUIHelper4*, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    auto_complete_save_form : Proc(IShellUIHelper4*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_scan : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_complete_attach : Proc(IShellUIHelper4*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    show_browser_ui : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_search_provider : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    run_once_shown : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    skip_run_once : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    customize_settings : Proc(IShellUIHelper4*, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    sqm_enabled : Proc(IShellUIHelper4*, Int16*, Win32cr::Foundation::HRESULT),
    phishing_enabled : Proc(IShellUIHelper4*, Int16*, Win32cr::Foundation::HRESULT),
    brand_image_uri : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    skip_tabs_welcome : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    diagnose_connection : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    customize_clear_type : Proc(IShellUIHelper4*, Int16, Win32cr::Foundation::HRESULT),
    is_search_provider_installed : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    is_search_migrated : Proc(IShellUIHelper4*, Int16*, Win32cr::Foundation::HRESULT),
    default_search_provider : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    run_once_required_settings_complete : Proc(IShellUIHelper4*, Int16, Win32cr::Foundation::HRESULT),
    run_once_has_shown : Proc(IShellUIHelper4*, Int16*, Win32cr::Foundation::HRESULT),
    search_guide_url : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    add_service : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    is_service_installed : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    in_private_filtering_enabled : Proc(IShellUIHelper4*, Int16*, Win32cr::Foundation::HRESULT),
    add_to_favorites_bar : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    build_new_tab_page : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    set_recently_closed_visible : Proc(IShellUIHelper4*, Int16, Win32cr::Foundation::HRESULT),
    set_activities_visible : Proc(IShellUIHelper4*, Int16, Win32cr::Foundation::HRESULT),
    content_discovery_reset : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    is_suggested_sites_enabled : Proc(IShellUIHelper4*, Int16*, Win32cr::Foundation::HRESULT),
    enable_suggested_sites : Proc(IShellUIHelper4*, Int16, Win32cr::Foundation::HRESULT),
    navigate_to_suggested_sites : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    show_tabs_help : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    show_in_private_help : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    msIsSiteMode : Proc(IShellUIHelper4*, Int16*, Win32cr::Foundation::HRESULT),
    msSiteModeShowThumbBar : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    msSiteModeAddThumbBarButton : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeUpdateThumbBarButton : Proc(IShellUIHelper4*, Win32cr::System::Com::VARIANT, Int16, Int16, Win32cr::Foundation::HRESULT),
    msSiteModeSetIconOverlay : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeClearIconOverlay : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    msAddSiteMode : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    msSiteModeCreateJumpList : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msSiteModeAddJumpListItem : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeClearJumpList : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    msSiteModeShowJumpList : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    msSiteModeAddButtonStyle : Proc(IShellUIHelper4*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeShowButtonStyle : Proc(IShellUIHelper4*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msSiteModeActivate : Proc(IShellUIHelper4*, Win32cr::Foundation::HRESULT),
    msIsSiteModeFirstRun : Proc(IShellUIHelper4*, Int16, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msAddTrackingProtectionList : Proc(IShellUIHelper4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msTrackingProtectionEnabled : Proc(IShellUIHelper4*, Int16*, Win32cr::Foundation::HRESULT),
    msActiveXFilteringEnabled : Proc(IShellUIHelper4*, Int16*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellUIHelper4, lpVtbl : IShellUIHelper4Vtbl* do
    GUID = LibC::GUID.new(0xb36e6a53_u32, 0x8073_u16, 0x499e_u16, StaticArray[0x82_u8, 0x4c_u8, 0xd7_u8, 0x76_u8, 0x33_u8, 0xa_u8, 0x33_u8, 0x3e_u8])
    def query_interface(this : IShellUIHelper4*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellUIHelper4*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellUIHelper4*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellUIHelper4*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellUIHelper4*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellUIHelper4*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellUIHelper4*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def reset_first_boot_mode(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_first_boot_mode.call(this)
    end
    def reset_safe_mode(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_safe_mode.call(this)
    end
    def refresh_offline_desktop(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_offline_desktop.call(this)
    end
    def add_favorite(this : IShellUIHelper4*, url : Win32cr::Foundation::BSTR, title : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_favorite.call(this, url, title)
    end
    def add_channel(this : IShellUIHelper4*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_channel.call(this, url)
    end
    def add_desktop_component(this : IShellUIHelper4*, url : Win32cr::Foundation::BSTR, type__ : Win32cr::Foundation::BSTR, left : Win32cr::System::Com::VARIANT*, top : Win32cr::System::Com::VARIANT*, width : Win32cr::System::Com::VARIANT*, height : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_desktop_component.call(this, url, type__, left, top, width, height)
    end
    def is_subscribed(this : IShellUIHelper4*, url : Win32cr::Foundation::BSTR, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_subscribed.call(this, url, pBool)
    end
    def navigate_and_find(this : IShellUIHelper4*, url : Win32cr::Foundation::BSTR, strQuery : Win32cr::Foundation::BSTR, varTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_and_find.call(this, url, strQuery, varTargetFrame)
    end
    def import_export_favorites(this : IShellUIHelper4*, fImport : Int16, strImpExpPath : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.import_export_favorites.call(this, fImport, strImpExpPath)
    end
    def auto_complete_save_form(this : IShellUIHelper4*, form : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_save_form.call(this, form)
    end
    def auto_scan(this : IShellUIHelper4*, strSearch : Win32cr::Foundation::BSTR, strFailureUrl : Win32cr::Foundation::BSTR, pvarTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_scan.call(this, strSearch, strFailureUrl, pvarTargetFrame)
    end
    def auto_complete_attach(this : IShellUIHelper4*, reserved : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_attach.call(this, reserved)
    end
    def show_browser_ui(this : IShellUIHelper4*, bstrName : Win32cr::Foundation::BSTR, pvarIn : Win32cr::System::Com::VARIANT*, pvarOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_browser_ui.call(this, bstrName, pvarIn, pvarOut)
    end
    def add_search_provider(this : IShellUIHelper4*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_search_provider.call(this, url)
    end
    def run_once_shown(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_shown.call(this)
    end
    def skip_run_once(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_run_once.call(this)
    end
    def customize_settings(this : IShellUIHelper4*, fSQM : Int16, fPhishing : Int16, bstrLocale : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_settings.call(this, fSQM, fPhishing, bstrLocale)
    end
    def sqm_enabled(this : IShellUIHelper4*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.sqm_enabled.call(this, pfEnabled)
    end
    def phishing_enabled(this : IShellUIHelper4*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.phishing_enabled.call(this, pfEnabled)
    end
    def brand_image_uri(this : IShellUIHelper4*, pbstrUri : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.brand_image_uri.call(this, pbstrUri)
    end
    def skip_tabs_welcome(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_tabs_welcome.call(this)
    end
    def diagnose_connection(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.diagnose_connection.call(this)
    end
    def customize_clear_type(this : IShellUIHelper4*, fSet : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_clear_type.call(this, fSet)
    end
    def is_search_provider_installed(this : IShellUIHelper4*, url : Win32cr::Foundation::BSTR, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_provider_installed.call(this, url, pdwResult)
    end
    def is_search_migrated(this : IShellUIHelper4*, pfMigrated : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_migrated.call(this, pfMigrated)
    end
    def default_search_provider(this : IShellUIHelper4*, pbstrName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.default_search_provider.call(this, pbstrName)
    end
    def run_once_required_settings_complete(this : IShellUIHelper4*, fComplete : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_required_settings_complete.call(this, fComplete)
    end
    def run_once_has_shown(this : IShellUIHelper4*, pfShown : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_has_shown.call(this, pfShown)
    end
    def search_guide_url(this : IShellUIHelper4*, pbstrUrl : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.search_guide_url.call(this, pbstrUrl)
    end
    def add_service(this : IShellUIHelper4*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_service.call(this, url)
    end
    def is_service_installed(this : IShellUIHelper4*, url : Win32cr::Foundation::BSTR, verb : Win32cr::Foundation::BSTR, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_service_installed.call(this, url, verb, pdwResult)
    end
    def in_private_filtering_enabled(this : IShellUIHelper4*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.in_private_filtering_enabled.call(this, pfEnabled)
    end
    def add_to_favorites_bar(this : IShellUIHelper4*, url : Win32cr::Foundation::BSTR, title : Win32cr::Foundation::BSTR, type__ : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_to_favorites_bar.call(this, url, title, type__)
    end
    def build_new_tab_page(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.build_new_tab_page.call(this)
    end
    def set_recently_closed_visible(this : IShellUIHelper4*, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_recently_closed_visible.call(this, fVisible)
    end
    def set_activities_visible(this : IShellUIHelper4*, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_activities_visible.call(this, fVisible)
    end
    def content_discovery_reset(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.content_discovery_reset.call(this)
    end
    def is_suggested_sites_enabled(this : IShellUIHelper4*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_suggested_sites_enabled.call(this, pfEnabled)
    end
    def enable_suggested_sites(this : IShellUIHelper4*, fEnable : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_suggested_sites.call(this, fEnable)
    end
    def navigate_to_suggested_sites(this : IShellUIHelper4*, bstrRelativeUrl : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_to_suggested_sites.call(this, bstrRelativeUrl)
    end
    def show_tabs_help(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_tabs_help.call(this)
    end
    def show_in_private_help(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_in_private_help.call(this)
    end
    def msIsSiteMode(this : IShellUIHelper4*, pfSiteMode : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msIsSiteMode.call(this, pfSiteMode)
    end
    def msSiteModeShowThumbBar(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowThumbBar.call(this)
    end
    def msSiteModeAddThumbBarButton(this : IShellUIHelper4*, bstrIconURL : Win32cr::Foundation::BSTR, bstrTooltip : Win32cr::Foundation::BSTR, pvarButtonID : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddThumbBarButton.call(this, bstrIconURL, bstrTooltip, pvarButtonID)
    end
    def msSiteModeUpdateThumbBarButton(this : IShellUIHelper4*, button_id : Win32cr::System::Com::VARIANT, fEnabled : Int16, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeUpdateThumbBarButton.call(this, button_id, fEnabled, fVisible)
    end
    def msSiteModeSetIconOverlay(this : IShellUIHelper4*, icon_url : Win32cr::Foundation::BSTR, pvarDescription : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeSetIconOverlay.call(this, icon_url, pvarDescription)
    end
    def msSiteModeClearIconOverlay(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearIconOverlay.call(this)
    end
    def msAddSiteMode(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msAddSiteMode.call(this)
    end
    def msSiteModeCreateJumpList(this : IShellUIHelper4*, bstrHeader : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeCreateJumpList.call(this, bstrHeader)
    end
    def msSiteModeAddJumpListItem(this : IShellUIHelper4*, bstrName : Win32cr::Foundation::BSTR, bstrActionUri : Win32cr::Foundation::BSTR, bstrIconUri : Win32cr::Foundation::BSTR, pvarWindowType : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddJumpListItem.call(this, bstrName, bstrActionUri, bstrIconUri, pvarWindowType)
    end
    def msSiteModeClearJumpList(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearJumpList.call(this)
    end
    def msSiteModeShowJumpList(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowJumpList.call(this)
    end
    def msSiteModeAddButtonStyle(this : IShellUIHelper4*, uiButtonID : Win32cr::System::Com::VARIANT, bstrIconUrl : Win32cr::Foundation::BSTR, bstrTooltip : Win32cr::Foundation::BSTR, pvarStyleID : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddButtonStyle.call(this, uiButtonID, bstrIconUrl, bstrTooltip, pvarStyleID)
    end
    def msSiteModeShowButtonStyle(this : IShellUIHelper4*, uiButtonID : Win32cr::System::Com::VARIANT, uiStyleID : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowButtonStyle.call(this, uiButtonID, uiStyleID)
    end
    def msSiteModeActivate(this : IShellUIHelper4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeActivate.call(this)
    end
    def msIsSiteModeFirstRun(this : IShellUIHelper4*, fPreserveState : Int16, puiFirstRun : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msIsSiteModeFirstRun.call(this, fPreserveState, puiFirstRun)
    end
    def msAddTrackingProtectionList(this : IShellUIHelper4*, url : Win32cr::Foundation::BSTR, bstrFilterName : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msAddTrackingProtectionList.call(this, url, bstrFilterName)
    end
    def msTrackingProtectionEnabled(this : IShellUIHelper4*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msTrackingProtectionEnabled.call(this, pfEnabled)
    end
    def msActiveXFilteringEnabled(this : IShellUIHelper4*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msActiveXFilteringEnabled.call(this, pfEnabled)
    end

  end

  @[Extern]
  record IShellUIHelper5Vtbl,
    query_interface : Proc(IShellUIHelper5*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellUIHelper5*, UInt32),
    release : Proc(IShellUIHelper5*, UInt32),
    get_type_info_count : Proc(IShellUIHelper5*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellUIHelper5*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellUIHelper5*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellUIHelper5*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    reset_first_boot_mode : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    reset_safe_mode : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    refresh_offline_desktop : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    add_favorite : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_channel : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    add_desktop_component : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    is_subscribed : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    navigate_and_find : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    import_export_favorites : Proc(IShellUIHelper5*, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    auto_complete_save_form : Proc(IShellUIHelper5*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_scan : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_complete_attach : Proc(IShellUIHelper5*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    show_browser_ui : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_search_provider : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    run_once_shown : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    skip_run_once : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    customize_settings : Proc(IShellUIHelper5*, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    sqm_enabled : Proc(IShellUIHelper5*, Int16*, Win32cr::Foundation::HRESULT),
    phishing_enabled : Proc(IShellUIHelper5*, Int16*, Win32cr::Foundation::HRESULT),
    brand_image_uri : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    skip_tabs_welcome : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    diagnose_connection : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    customize_clear_type : Proc(IShellUIHelper5*, Int16, Win32cr::Foundation::HRESULT),
    is_search_provider_installed : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    is_search_migrated : Proc(IShellUIHelper5*, Int16*, Win32cr::Foundation::HRESULT),
    default_search_provider : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    run_once_required_settings_complete : Proc(IShellUIHelper5*, Int16, Win32cr::Foundation::HRESULT),
    run_once_has_shown : Proc(IShellUIHelper5*, Int16*, Win32cr::Foundation::HRESULT),
    search_guide_url : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    add_service : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    is_service_installed : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    in_private_filtering_enabled : Proc(IShellUIHelper5*, Int16*, Win32cr::Foundation::HRESULT),
    add_to_favorites_bar : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    build_new_tab_page : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    set_recently_closed_visible : Proc(IShellUIHelper5*, Int16, Win32cr::Foundation::HRESULT),
    set_activities_visible : Proc(IShellUIHelper5*, Int16, Win32cr::Foundation::HRESULT),
    content_discovery_reset : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    is_suggested_sites_enabled : Proc(IShellUIHelper5*, Int16*, Win32cr::Foundation::HRESULT),
    enable_suggested_sites : Proc(IShellUIHelper5*, Int16, Win32cr::Foundation::HRESULT),
    navigate_to_suggested_sites : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    show_tabs_help : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    show_in_private_help : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    msIsSiteMode : Proc(IShellUIHelper5*, Int16*, Win32cr::Foundation::HRESULT),
    msSiteModeShowThumbBar : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    msSiteModeAddThumbBarButton : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeUpdateThumbBarButton : Proc(IShellUIHelper5*, Win32cr::System::Com::VARIANT, Int16, Int16, Win32cr::Foundation::HRESULT),
    msSiteModeSetIconOverlay : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeClearIconOverlay : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    msAddSiteMode : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    msSiteModeCreateJumpList : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msSiteModeAddJumpListItem : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeClearJumpList : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    msSiteModeShowJumpList : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    msSiteModeAddButtonStyle : Proc(IShellUIHelper5*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeShowButtonStyle : Proc(IShellUIHelper5*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msSiteModeActivate : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    msIsSiteModeFirstRun : Proc(IShellUIHelper5*, Int16, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msAddTrackingProtectionList : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msTrackingProtectionEnabled : Proc(IShellUIHelper5*, Int16*, Win32cr::Foundation::HRESULT),
    msActiveXFilteringEnabled : Proc(IShellUIHelper5*, Int16*, Win32cr::Foundation::HRESULT),
    msProvisionNetworks : Proc(IShellUIHelper5*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msReportSafeUrl : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    msSiteModeRefreshBadge : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    msSiteModeClearBadge : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    msDiagnoseConnectionUILess : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    msLaunchNetworkClientHelp : Proc(IShellUIHelper5*, Win32cr::Foundation::HRESULT),
    msChangeDefaultBrowser : Proc(IShellUIHelper5*, Int16, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellUIHelper5, lpVtbl : IShellUIHelper5Vtbl* do
    GUID = LibC::GUID.new(0xa2a08b09_u32, 0x103d_u16, 0x4d3f_u16, StaticArray[0xb9_u8, 0x1c_u8, 0xea_u8, 0x45_u8, 0x5c_u8, 0xa8_u8, 0x2e_u8, 0xfa_u8])
    def query_interface(this : IShellUIHelper5*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellUIHelper5*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellUIHelper5*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellUIHelper5*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellUIHelper5*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellUIHelper5*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellUIHelper5*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def reset_first_boot_mode(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_first_boot_mode.call(this)
    end
    def reset_safe_mode(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_safe_mode.call(this)
    end
    def refresh_offline_desktop(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_offline_desktop.call(this)
    end
    def add_favorite(this : IShellUIHelper5*, url : Win32cr::Foundation::BSTR, title : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_favorite.call(this, url, title)
    end
    def add_channel(this : IShellUIHelper5*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_channel.call(this, url)
    end
    def add_desktop_component(this : IShellUIHelper5*, url : Win32cr::Foundation::BSTR, type__ : Win32cr::Foundation::BSTR, left : Win32cr::System::Com::VARIANT*, top : Win32cr::System::Com::VARIANT*, width : Win32cr::System::Com::VARIANT*, height : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_desktop_component.call(this, url, type__, left, top, width, height)
    end
    def is_subscribed(this : IShellUIHelper5*, url : Win32cr::Foundation::BSTR, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_subscribed.call(this, url, pBool)
    end
    def navigate_and_find(this : IShellUIHelper5*, url : Win32cr::Foundation::BSTR, strQuery : Win32cr::Foundation::BSTR, varTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_and_find.call(this, url, strQuery, varTargetFrame)
    end
    def import_export_favorites(this : IShellUIHelper5*, fImport : Int16, strImpExpPath : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.import_export_favorites.call(this, fImport, strImpExpPath)
    end
    def auto_complete_save_form(this : IShellUIHelper5*, form : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_save_form.call(this, form)
    end
    def auto_scan(this : IShellUIHelper5*, strSearch : Win32cr::Foundation::BSTR, strFailureUrl : Win32cr::Foundation::BSTR, pvarTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_scan.call(this, strSearch, strFailureUrl, pvarTargetFrame)
    end
    def auto_complete_attach(this : IShellUIHelper5*, reserved : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_attach.call(this, reserved)
    end
    def show_browser_ui(this : IShellUIHelper5*, bstrName : Win32cr::Foundation::BSTR, pvarIn : Win32cr::System::Com::VARIANT*, pvarOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_browser_ui.call(this, bstrName, pvarIn, pvarOut)
    end
    def add_search_provider(this : IShellUIHelper5*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_search_provider.call(this, url)
    end
    def run_once_shown(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_shown.call(this)
    end
    def skip_run_once(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_run_once.call(this)
    end
    def customize_settings(this : IShellUIHelper5*, fSQM : Int16, fPhishing : Int16, bstrLocale : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_settings.call(this, fSQM, fPhishing, bstrLocale)
    end
    def sqm_enabled(this : IShellUIHelper5*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.sqm_enabled.call(this, pfEnabled)
    end
    def phishing_enabled(this : IShellUIHelper5*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.phishing_enabled.call(this, pfEnabled)
    end
    def brand_image_uri(this : IShellUIHelper5*, pbstrUri : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.brand_image_uri.call(this, pbstrUri)
    end
    def skip_tabs_welcome(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_tabs_welcome.call(this)
    end
    def diagnose_connection(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.diagnose_connection.call(this)
    end
    def customize_clear_type(this : IShellUIHelper5*, fSet : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_clear_type.call(this, fSet)
    end
    def is_search_provider_installed(this : IShellUIHelper5*, url : Win32cr::Foundation::BSTR, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_provider_installed.call(this, url, pdwResult)
    end
    def is_search_migrated(this : IShellUIHelper5*, pfMigrated : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_migrated.call(this, pfMigrated)
    end
    def default_search_provider(this : IShellUIHelper5*, pbstrName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.default_search_provider.call(this, pbstrName)
    end
    def run_once_required_settings_complete(this : IShellUIHelper5*, fComplete : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_required_settings_complete.call(this, fComplete)
    end
    def run_once_has_shown(this : IShellUIHelper5*, pfShown : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_has_shown.call(this, pfShown)
    end
    def search_guide_url(this : IShellUIHelper5*, pbstrUrl : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.search_guide_url.call(this, pbstrUrl)
    end
    def add_service(this : IShellUIHelper5*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_service.call(this, url)
    end
    def is_service_installed(this : IShellUIHelper5*, url : Win32cr::Foundation::BSTR, verb : Win32cr::Foundation::BSTR, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_service_installed.call(this, url, verb, pdwResult)
    end
    def in_private_filtering_enabled(this : IShellUIHelper5*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.in_private_filtering_enabled.call(this, pfEnabled)
    end
    def add_to_favorites_bar(this : IShellUIHelper5*, url : Win32cr::Foundation::BSTR, title : Win32cr::Foundation::BSTR, type__ : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_to_favorites_bar.call(this, url, title, type__)
    end
    def build_new_tab_page(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.build_new_tab_page.call(this)
    end
    def set_recently_closed_visible(this : IShellUIHelper5*, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_recently_closed_visible.call(this, fVisible)
    end
    def set_activities_visible(this : IShellUIHelper5*, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_activities_visible.call(this, fVisible)
    end
    def content_discovery_reset(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.content_discovery_reset.call(this)
    end
    def is_suggested_sites_enabled(this : IShellUIHelper5*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_suggested_sites_enabled.call(this, pfEnabled)
    end
    def enable_suggested_sites(this : IShellUIHelper5*, fEnable : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_suggested_sites.call(this, fEnable)
    end
    def navigate_to_suggested_sites(this : IShellUIHelper5*, bstrRelativeUrl : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_to_suggested_sites.call(this, bstrRelativeUrl)
    end
    def show_tabs_help(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_tabs_help.call(this)
    end
    def show_in_private_help(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_in_private_help.call(this)
    end
    def msIsSiteMode(this : IShellUIHelper5*, pfSiteMode : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msIsSiteMode.call(this, pfSiteMode)
    end
    def msSiteModeShowThumbBar(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowThumbBar.call(this)
    end
    def msSiteModeAddThumbBarButton(this : IShellUIHelper5*, bstrIconURL : Win32cr::Foundation::BSTR, bstrTooltip : Win32cr::Foundation::BSTR, pvarButtonID : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddThumbBarButton.call(this, bstrIconURL, bstrTooltip, pvarButtonID)
    end
    def msSiteModeUpdateThumbBarButton(this : IShellUIHelper5*, button_id : Win32cr::System::Com::VARIANT, fEnabled : Int16, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeUpdateThumbBarButton.call(this, button_id, fEnabled, fVisible)
    end
    def msSiteModeSetIconOverlay(this : IShellUIHelper5*, icon_url : Win32cr::Foundation::BSTR, pvarDescription : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeSetIconOverlay.call(this, icon_url, pvarDescription)
    end
    def msSiteModeClearIconOverlay(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearIconOverlay.call(this)
    end
    def msAddSiteMode(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msAddSiteMode.call(this)
    end
    def msSiteModeCreateJumpList(this : IShellUIHelper5*, bstrHeader : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeCreateJumpList.call(this, bstrHeader)
    end
    def msSiteModeAddJumpListItem(this : IShellUIHelper5*, bstrName : Win32cr::Foundation::BSTR, bstrActionUri : Win32cr::Foundation::BSTR, bstrIconUri : Win32cr::Foundation::BSTR, pvarWindowType : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddJumpListItem.call(this, bstrName, bstrActionUri, bstrIconUri, pvarWindowType)
    end
    def msSiteModeClearJumpList(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearJumpList.call(this)
    end
    def msSiteModeShowJumpList(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowJumpList.call(this)
    end
    def msSiteModeAddButtonStyle(this : IShellUIHelper5*, uiButtonID : Win32cr::System::Com::VARIANT, bstrIconUrl : Win32cr::Foundation::BSTR, bstrTooltip : Win32cr::Foundation::BSTR, pvarStyleID : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddButtonStyle.call(this, uiButtonID, bstrIconUrl, bstrTooltip, pvarStyleID)
    end
    def msSiteModeShowButtonStyle(this : IShellUIHelper5*, uiButtonID : Win32cr::System::Com::VARIANT, uiStyleID : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowButtonStyle.call(this, uiButtonID, uiStyleID)
    end
    def msSiteModeActivate(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeActivate.call(this)
    end
    def msIsSiteModeFirstRun(this : IShellUIHelper5*, fPreserveState : Int16, puiFirstRun : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msIsSiteModeFirstRun.call(this, fPreserveState, puiFirstRun)
    end
    def msAddTrackingProtectionList(this : IShellUIHelper5*, url : Win32cr::Foundation::BSTR, bstrFilterName : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msAddTrackingProtectionList.call(this, url, bstrFilterName)
    end
    def msTrackingProtectionEnabled(this : IShellUIHelper5*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msTrackingProtectionEnabled.call(this, pfEnabled)
    end
    def msActiveXFilteringEnabled(this : IShellUIHelper5*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msActiveXFilteringEnabled.call(this, pfEnabled)
    end
    def msProvisionNetworks(this : IShellUIHelper5*, bstrProvisioningXml : Win32cr::Foundation::BSTR, puiResult : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msProvisionNetworks.call(this, bstrProvisioningXml, puiResult)
    end
    def msReportSafeUrl(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msReportSafeUrl.call(this)
    end
    def msSiteModeRefreshBadge(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeRefreshBadge.call(this)
    end
    def msSiteModeClearBadge(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearBadge.call(this)
    end
    def msDiagnoseConnectionUILess(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msDiagnoseConnectionUILess.call(this)
    end
    def msLaunchNetworkClientHelp(this : IShellUIHelper5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msLaunchNetworkClientHelp.call(this)
    end
    def msChangeDefaultBrowser(this : IShellUIHelper5*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msChangeDefaultBrowser.call(this, fChange)
    end

  end

  @[Extern]
  record IShellUIHelper6Vtbl,
    query_interface : Proc(IShellUIHelper6*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellUIHelper6*, UInt32),
    release : Proc(IShellUIHelper6*, UInt32),
    get_type_info_count : Proc(IShellUIHelper6*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellUIHelper6*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellUIHelper6*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellUIHelper6*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    reset_first_boot_mode : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    reset_safe_mode : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    refresh_offline_desktop : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    add_favorite : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_channel : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    add_desktop_component : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    is_subscribed : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    navigate_and_find : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    import_export_favorites : Proc(IShellUIHelper6*, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    auto_complete_save_form : Proc(IShellUIHelper6*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_scan : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_complete_attach : Proc(IShellUIHelper6*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    show_browser_ui : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_search_provider : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    run_once_shown : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    skip_run_once : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    customize_settings : Proc(IShellUIHelper6*, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    sqm_enabled : Proc(IShellUIHelper6*, Int16*, Win32cr::Foundation::HRESULT),
    phishing_enabled : Proc(IShellUIHelper6*, Int16*, Win32cr::Foundation::HRESULT),
    brand_image_uri : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    skip_tabs_welcome : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    diagnose_connection : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    customize_clear_type : Proc(IShellUIHelper6*, Int16, Win32cr::Foundation::HRESULT),
    is_search_provider_installed : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    is_search_migrated : Proc(IShellUIHelper6*, Int16*, Win32cr::Foundation::HRESULT),
    default_search_provider : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    run_once_required_settings_complete : Proc(IShellUIHelper6*, Int16, Win32cr::Foundation::HRESULT),
    run_once_has_shown : Proc(IShellUIHelper6*, Int16*, Win32cr::Foundation::HRESULT),
    search_guide_url : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    add_service : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    is_service_installed : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    in_private_filtering_enabled : Proc(IShellUIHelper6*, Int16*, Win32cr::Foundation::HRESULT),
    add_to_favorites_bar : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    build_new_tab_page : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    set_recently_closed_visible : Proc(IShellUIHelper6*, Int16, Win32cr::Foundation::HRESULT),
    set_activities_visible : Proc(IShellUIHelper6*, Int16, Win32cr::Foundation::HRESULT),
    content_discovery_reset : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    is_suggested_sites_enabled : Proc(IShellUIHelper6*, Int16*, Win32cr::Foundation::HRESULT),
    enable_suggested_sites : Proc(IShellUIHelper6*, Int16, Win32cr::Foundation::HRESULT),
    navigate_to_suggested_sites : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    show_tabs_help : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    show_in_private_help : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    msIsSiteMode : Proc(IShellUIHelper6*, Int16*, Win32cr::Foundation::HRESULT),
    msSiteModeShowThumbBar : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    msSiteModeAddThumbBarButton : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeUpdateThumbBarButton : Proc(IShellUIHelper6*, Win32cr::System::Com::VARIANT, Int16, Int16, Win32cr::Foundation::HRESULT),
    msSiteModeSetIconOverlay : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeClearIconOverlay : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    msAddSiteMode : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    msSiteModeCreateJumpList : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msSiteModeAddJumpListItem : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeClearJumpList : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    msSiteModeShowJumpList : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    msSiteModeAddButtonStyle : Proc(IShellUIHelper6*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeShowButtonStyle : Proc(IShellUIHelper6*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msSiteModeActivate : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    msIsSiteModeFirstRun : Proc(IShellUIHelper6*, Int16, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msAddTrackingProtectionList : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msTrackingProtectionEnabled : Proc(IShellUIHelper6*, Int16*, Win32cr::Foundation::HRESULT),
    msActiveXFilteringEnabled : Proc(IShellUIHelper6*, Int16*, Win32cr::Foundation::HRESULT),
    msProvisionNetworks : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msReportSafeUrl : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    msSiteModeRefreshBadge : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    msSiteModeClearBadge : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    msDiagnoseConnectionUILess : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    msLaunchNetworkClientHelp : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    msChangeDefaultBrowser : Proc(IShellUIHelper6*, Int16, Win32cr::Foundation::HRESULT),
    msStopPeriodicTileUpdate : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    msStartPeriodicTileUpdate : Proc(IShellUIHelper6*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msStartPeriodicTileUpdateBatch : Proc(IShellUIHelper6*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msClearTile : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueue : Proc(IShellUIHelper6*, Int16, Win32cr::Foundation::HRESULT),
    msPinnedSiteState : Proc(IShellUIHelper6*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueueForSquare150x150 : Proc(IShellUIHelper6*, Int16, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueueForWide310x150 : Proc(IShellUIHelper6*, Int16, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueueForSquare310x310 : Proc(IShellUIHelper6*, Int16, Win32cr::Foundation::HRESULT),
    msScheduledTileNotification : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msRemoveScheduledTileNotification : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msStartPeriodicBadgeUpdate : Proc(IShellUIHelper6*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msStopPeriodicBadgeUpdate : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT),
    msLaunchInternetOptions : Proc(IShellUIHelper6*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellUIHelper6, lpVtbl : IShellUIHelper6Vtbl* do
    GUID = LibC::GUID.new(0x987a573e_u32, 0x46ee_u16, 0x4e89_u16, StaticArray[0x96_u8, 0xab_u8, 0xdd_u8, 0xf7_u8, 0xf8_u8, 0xfd_u8, 0xc9_u8, 0x8c_u8])
    def query_interface(this : IShellUIHelper6*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellUIHelper6*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellUIHelper6*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellUIHelper6*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellUIHelper6*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellUIHelper6*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellUIHelper6*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def reset_first_boot_mode(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_first_boot_mode.call(this)
    end
    def reset_safe_mode(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_safe_mode.call(this)
    end
    def refresh_offline_desktop(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_offline_desktop.call(this)
    end
    def add_favorite(this : IShellUIHelper6*, url : Win32cr::Foundation::BSTR, title : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_favorite.call(this, url, title)
    end
    def add_channel(this : IShellUIHelper6*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_channel.call(this, url)
    end
    def add_desktop_component(this : IShellUIHelper6*, url : Win32cr::Foundation::BSTR, type__ : Win32cr::Foundation::BSTR, left : Win32cr::System::Com::VARIANT*, top : Win32cr::System::Com::VARIANT*, width : Win32cr::System::Com::VARIANT*, height : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_desktop_component.call(this, url, type__, left, top, width, height)
    end
    def is_subscribed(this : IShellUIHelper6*, url : Win32cr::Foundation::BSTR, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_subscribed.call(this, url, pBool)
    end
    def navigate_and_find(this : IShellUIHelper6*, url : Win32cr::Foundation::BSTR, strQuery : Win32cr::Foundation::BSTR, varTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_and_find.call(this, url, strQuery, varTargetFrame)
    end
    def import_export_favorites(this : IShellUIHelper6*, fImport : Int16, strImpExpPath : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.import_export_favorites.call(this, fImport, strImpExpPath)
    end
    def auto_complete_save_form(this : IShellUIHelper6*, form : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_save_form.call(this, form)
    end
    def auto_scan(this : IShellUIHelper6*, strSearch : Win32cr::Foundation::BSTR, strFailureUrl : Win32cr::Foundation::BSTR, pvarTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_scan.call(this, strSearch, strFailureUrl, pvarTargetFrame)
    end
    def auto_complete_attach(this : IShellUIHelper6*, reserved : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_attach.call(this, reserved)
    end
    def show_browser_ui(this : IShellUIHelper6*, bstrName : Win32cr::Foundation::BSTR, pvarIn : Win32cr::System::Com::VARIANT*, pvarOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_browser_ui.call(this, bstrName, pvarIn, pvarOut)
    end
    def add_search_provider(this : IShellUIHelper6*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_search_provider.call(this, url)
    end
    def run_once_shown(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_shown.call(this)
    end
    def skip_run_once(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_run_once.call(this)
    end
    def customize_settings(this : IShellUIHelper6*, fSQM : Int16, fPhishing : Int16, bstrLocale : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_settings.call(this, fSQM, fPhishing, bstrLocale)
    end
    def sqm_enabled(this : IShellUIHelper6*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.sqm_enabled.call(this, pfEnabled)
    end
    def phishing_enabled(this : IShellUIHelper6*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.phishing_enabled.call(this, pfEnabled)
    end
    def brand_image_uri(this : IShellUIHelper6*, pbstrUri : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.brand_image_uri.call(this, pbstrUri)
    end
    def skip_tabs_welcome(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_tabs_welcome.call(this)
    end
    def diagnose_connection(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.diagnose_connection.call(this)
    end
    def customize_clear_type(this : IShellUIHelper6*, fSet : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_clear_type.call(this, fSet)
    end
    def is_search_provider_installed(this : IShellUIHelper6*, url : Win32cr::Foundation::BSTR, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_provider_installed.call(this, url, pdwResult)
    end
    def is_search_migrated(this : IShellUIHelper6*, pfMigrated : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_migrated.call(this, pfMigrated)
    end
    def default_search_provider(this : IShellUIHelper6*, pbstrName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.default_search_provider.call(this, pbstrName)
    end
    def run_once_required_settings_complete(this : IShellUIHelper6*, fComplete : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_required_settings_complete.call(this, fComplete)
    end
    def run_once_has_shown(this : IShellUIHelper6*, pfShown : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_has_shown.call(this, pfShown)
    end
    def search_guide_url(this : IShellUIHelper6*, pbstrUrl : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.search_guide_url.call(this, pbstrUrl)
    end
    def add_service(this : IShellUIHelper6*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_service.call(this, url)
    end
    def is_service_installed(this : IShellUIHelper6*, url : Win32cr::Foundation::BSTR, verb : Win32cr::Foundation::BSTR, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_service_installed.call(this, url, verb, pdwResult)
    end
    def in_private_filtering_enabled(this : IShellUIHelper6*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.in_private_filtering_enabled.call(this, pfEnabled)
    end
    def add_to_favorites_bar(this : IShellUIHelper6*, url : Win32cr::Foundation::BSTR, title : Win32cr::Foundation::BSTR, type__ : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_to_favorites_bar.call(this, url, title, type__)
    end
    def build_new_tab_page(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.build_new_tab_page.call(this)
    end
    def set_recently_closed_visible(this : IShellUIHelper6*, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_recently_closed_visible.call(this, fVisible)
    end
    def set_activities_visible(this : IShellUIHelper6*, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_activities_visible.call(this, fVisible)
    end
    def content_discovery_reset(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.content_discovery_reset.call(this)
    end
    def is_suggested_sites_enabled(this : IShellUIHelper6*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_suggested_sites_enabled.call(this, pfEnabled)
    end
    def enable_suggested_sites(this : IShellUIHelper6*, fEnable : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_suggested_sites.call(this, fEnable)
    end
    def navigate_to_suggested_sites(this : IShellUIHelper6*, bstrRelativeUrl : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_to_suggested_sites.call(this, bstrRelativeUrl)
    end
    def show_tabs_help(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_tabs_help.call(this)
    end
    def show_in_private_help(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_in_private_help.call(this)
    end
    def msIsSiteMode(this : IShellUIHelper6*, pfSiteMode : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msIsSiteMode.call(this, pfSiteMode)
    end
    def msSiteModeShowThumbBar(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowThumbBar.call(this)
    end
    def msSiteModeAddThumbBarButton(this : IShellUIHelper6*, bstrIconURL : Win32cr::Foundation::BSTR, bstrTooltip : Win32cr::Foundation::BSTR, pvarButtonID : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddThumbBarButton.call(this, bstrIconURL, bstrTooltip, pvarButtonID)
    end
    def msSiteModeUpdateThumbBarButton(this : IShellUIHelper6*, button_id : Win32cr::System::Com::VARIANT, fEnabled : Int16, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeUpdateThumbBarButton.call(this, button_id, fEnabled, fVisible)
    end
    def msSiteModeSetIconOverlay(this : IShellUIHelper6*, icon_url : Win32cr::Foundation::BSTR, pvarDescription : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeSetIconOverlay.call(this, icon_url, pvarDescription)
    end
    def msSiteModeClearIconOverlay(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearIconOverlay.call(this)
    end
    def msAddSiteMode(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msAddSiteMode.call(this)
    end
    def msSiteModeCreateJumpList(this : IShellUIHelper6*, bstrHeader : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeCreateJumpList.call(this, bstrHeader)
    end
    def msSiteModeAddJumpListItem(this : IShellUIHelper6*, bstrName : Win32cr::Foundation::BSTR, bstrActionUri : Win32cr::Foundation::BSTR, bstrIconUri : Win32cr::Foundation::BSTR, pvarWindowType : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddJumpListItem.call(this, bstrName, bstrActionUri, bstrIconUri, pvarWindowType)
    end
    def msSiteModeClearJumpList(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearJumpList.call(this)
    end
    def msSiteModeShowJumpList(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowJumpList.call(this)
    end
    def msSiteModeAddButtonStyle(this : IShellUIHelper6*, uiButtonID : Win32cr::System::Com::VARIANT, bstrIconUrl : Win32cr::Foundation::BSTR, bstrTooltip : Win32cr::Foundation::BSTR, pvarStyleID : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddButtonStyle.call(this, uiButtonID, bstrIconUrl, bstrTooltip, pvarStyleID)
    end
    def msSiteModeShowButtonStyle(this : IShellUIHelper6*, uiButtonID : Win32cr::System::Com::VARIANT, uiStyleID : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowButtonStyle.call(this, uiButtonID, uiStyleID)
    end
    def msSiteModeActivate(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeActivate.call(this)
    end
    def msIsSiteModeFirstRun(this : IShellUIHelper6*, fPreserveState : Int16, puiFirstRun : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msIsSiteModeFirstRun.call(this, fPreserveState, puiFirstRun)
    end
    def msAddTrackingProtectionList(this : IShellUIHelper6*, url : Win32cr::Foundation::BSTR, bstrFilterName : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msAddTrackingProtectionList.call(this, url, bstrFilterName)
    end
    def msTrackingProtectionEnabled(this : IShellUIHelper6*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msTrackingProtectionEnabled.call(this, pfEnabled)
    end
    def msActiveXFilteringEnabled(this : IShellUIHelper6*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msActiveXFilteringEnabled.call(this, pfEnabled)
    end
    def msProvisionNetworks(this : IShellUIHelper6*, bstrProvisioningXml : Win32cr::Foundation::BSTR, puiResult : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msProvisionNetworks.call(this, bstrProvisioningXml, puiResult)
    end
    def msReportSafeUrl(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msReportSafeUrl.call(this)
    end
    def msSiteModeRefreshBadge(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeRefreshBadge.call(this)
    end
    def msSiteModeClearBadge(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearBadge.call(this)
    end
    def msDiagnoseConnectionUILess(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msDiagnoseConnectionUILess.call(this)
    end
    def msLaunchNetworkClientHelp(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msLaunchNetworkClientHelp.call(this)
    end
    def msChangeDefaultBrowser(this : IShellUIHelper6*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msChangeDefaultBrowser.call(this, fChange)
    end
    def msStopPeriodicTileUpdate(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStopPeriodicTileUpdate.call(this)
    end
    def msStartPeriodicTileUpdate(this : IShellUIHelper6*, pollingUris : Win32cr::System::Com::VARIANT, startTime : Win32cr::System::Com::VARIANT, uiUpdateRecurrence : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStartPeriodicTileUpdate.call(this, pollingUris, startTime, uiUpdateRecurrence)
    end
    def msStartPeriodicTileUpdateBatch(this : IShellUIHelper6*, pollingUris : Win32cr::System::Com::VARIANT, startTime : Win32cr::System::Com::VARIANT, uiUpdateRecurrence : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStartPeriodicTileUpdateBatch.call(this, pollingUris, startTime, uiUpdateRecurrence)
    end
    def msClearTile(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msClearTile.call(this)
    end
    def msEnableTileNotificationQueue(this : IShellUIHelper6*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueue.call(this, fChange)
    end
    def msPinnedSiteState(this : IShellUIHelper6*, pvarSiteState : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msPinnedSiteState.call(this, pvarSiteState)
    end
    def msEnableTileNotificationQueueForSquare150x150(this : IShellUIHelper6*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueueForSquare150x150.call(this, fChange)
    end
    def msEnableTileNotificationQueueForWide310x150(this : IShellUIHelper6*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueueForWide310x150.call(this, fChange)
    end
    def msEnableTileNotificationQueueForSquare310x310(this : IShellUIHelper6*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueueForSquare310x310.call(this, fChange)
    end
    def msScheduledTileNotification(this : IShellUIHelper6*, bstrNotificationXml : Win32cr::Foundation::BSTR, bstrNotificationId : Win32cr::Foundation::BSTR, bstrNotificationTag : Win32cr::Foundation::BSTR, startTime : Win32cr::System::Com::VARIANT, expirationTime : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msScheduledTileNotification.call(this, bstrNotificationXml, bstrNotificationId, bstrNotificationTag, startTime, expirationTime)
    end
    def msRemoveScheduledTileNotification(this : IShellUIHelper6*, bstrNotificationId : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msRemoveScheduledTileNotification.call(this, bstrNotificationId)
    end
    def msStartPeriodicBadgeUpdate(this : IShellUIHelper6*, pollingUri : Win32cr::Foundation::BSTR, startTime : Win32cr::System::Com::VARIANT, uiUpdateRecurrence : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStartPeriodicBadgeUpdate.call(this, pollingUri, startTime, uiUpdateRecurrence)
    end
    def msStopPeriodicBadgeUpdate(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStopPeriodicBadgeUpdate.call(this)
    end
    def msLaunchInternetOptions(this : IShellUIHelper6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msLaunchInternetOptions.call(this)
    end

  end

  @[Extern]
  record IShellUIHelper7Vtbl,
    query_interface : Proc(IShellUIHelper7*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellUIHelper7*, UInt32),
    release : Proc(IShellUIHelper7*, UInt32),
    get_type_info_count : Proc(IShellUIHelper7*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellUIHelper7*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellUIHelper7*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellUIHelper7*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    reset_first_boot_mode : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    reset_safe_mode : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    refresh_offline_desktop : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    add_favorite : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_channel : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    add_desktop_component : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    is_subscribed : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    navigate_and_find : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    import_export_favorites : Proc(IShellUIHelper7*, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    auto_complete_save_form : Proc(IShellUIHelper7*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_scan : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_complete_attach : Proc(IShellUIHelper7*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    show_browser_ui : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_search_provider : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    run_once_shown : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    skip_run_once : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    customize_settings : Proc(IShellUIHelper7*, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    sqm_enabled : Proc(IShellUIHelper7*, Int16*, Win32cr::Foundation::HRESULT),
    phishing_enabled : Proc(IShellUIHelper7*, Int16*, Win32cr::Foundation::HRESULT),
    brand_image_uri : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    skip_tabs_welcome : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    diagnose_connection : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    customize_clear_type : Proc(IShellUIHelper7*, Int16, Win32cr::Foundation::HRESULT),
    is_search_provider_installed : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    is_search_migrated : Proc(IShellUIHelper7*, Int16*, Win32cr::Foundation::HRESULT),
    default_search_provider : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    run_once_required_settings_complete : Proc(IShellUIHelper7*, Int16, Win32cr::Foundation::HRESULT),
    run_once_has_shown : Proc(IShellUIHelper7*, Int16*, Win32cr::Foundation::HRESULT),
    search_guide_url : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    add_service : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    is_service_installed : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    in_private_filtering_enabled : Proc(IShellUIHelper7*, Int16*, Win32cr::Foundation::HRESULT),
    add_to_favorites_bar : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    build_new_tab_page : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    set_recently_closed_visible : Proc(IShellUIHelper7*, Int16, Win32cr::Foundation::HRESULT),
    set_activities_visible : Proc(IShellUIHelper7*, Int16, Win32cr::Foundation::HRESULT),
    content_discovery_reset : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    is_suggested_sites_enabled : Proc(IShellUIHelper7*, Int16*, Win32cr::Foundation::HRESULT),
    enable_suggested_sites : Proc(IShellUIHelper7*, Int16, Win32cr::Foundation::HRESULT),
    navigate_to_suggested_sites : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    show_tabs_help : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    show_in_private_help : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    msIsSiteMode : Proc(IShellUIHelper7*, Int16*, Win32cr::Foundation::HRESULT),
    msSiteModeShowThumbBar : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    msSiteModeAddThumbBarButton : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeUpdateThumbBarButton : Proc(IShellUIHelper7*, Win32cr::System::Com::VARIANT, Int16, Int16, Win32cr::Foundation::HRESULT),
    msSiteModeSetIconOverlay : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeClearIconOverlay : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    msAddSiteMode : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    msSiteModeCreateJumpList : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msSiteModeAddJumpListItem : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeClearJumpList : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    msSiteModeShowJumpList : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    msSiteModeAddButtonStyle : Proc(IShellUIHelper7*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeShowButtonStyle : Proc(IShellUIHelper7*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msSiteModeActivate : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    msIsSiteModeFirstRun : Proc(IShellUIHelper7*, Int16, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msAddTrackingProtectionList : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msTrackingProtectionEnabled : Proc(IShellUIHelper7*, Int16*, Win32cr::Foundation::HRESULT),
    msActiveXFilteringEnabled : Proc(IShellUIHelper7*, Int16*, Win32cr::Foundation::HRESULT),
    msProvisionNetworks : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msReportSafeUrl : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    msSiteModeRefreshBadge : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    msSiteModeClearBadge : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    msDiagnoseConnectionUILess : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    msLaunchNetworkClientHelp : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    msChangeDefaultBrowser : Proc(IShellUIHelper7*, Int16, Win32cr::Foundation::HRESULT),
    msStopPeriodicTileUpdate : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    msStartPeriodicTileUpdate : Proc(IShellUIHelper7*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msStartPeriodicTileUpdateBatch : Proc(IShellUIHelper7*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msClearTile : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueue : Proc(IShellUIHelper7*, Int16, Win32cr::Foundation::HRESULT),
    msPinnedSiteState : Proc(IShellUIHelper7*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueueForSquare150x150 : Proc(IShellUIHelper7*, Int16, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueueForWide310x150 : Proc(IShellUIHelper7*, Int16, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueueForSquare310x310 : Proc(IShellUIHelper7*, Int16, Win32cr::Foundation::HRESULT),
    msScheduledTileNotification : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msRemoveScheduledTileNotification : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msStartPeriodicBadgeUpdate : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msStopPeriodicBadgeUpdate : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    msLaunchInternetOptions : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    set_experimental_flag : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Int16, Win32cr::Foundation::HRESULT),
    get_experimental_flag : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    set_experimental_value : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_experimental_value : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    reset_all_experimental_flags_and_values : Proc(IShellUIHelper7*, Win32cr::Foundation::HRESULT),
    get_need_ie_auto_launch_flag : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    set_need_ie_auto_launch_flag : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Int16, Win32cr::Foundation::HRESULT),
    has_need_ie_auto_launch_flag : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    launch_ie : Proc(IShellUIHelper7*, Win32cr::Foundation::BSTR, Int16, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellUIHelper7, lpVtbl : IShellUIHelper7Vtbl* do
    GUID = LibC::GUID.new(0x60e567c8_u32, 0x9573_u16, 0x4ab2_u16, StaticArray[0xa2_u8, 0x64_u8, 0x63_u8, 0x7c_u8, 0x6c_u8, 0x16_u8, 0x1c_u8, 0xb1_u8])
    def query_interface(this : IShellUIHelper7*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellUIHelper7*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellUIHelper7*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellUIHelper7*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellUIHelper7*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellUIHelper7*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellUIHelper7*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def reset_first_boot_mode(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_first_boot_mode.call(this)
    end
    def reset_safe_mode(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_safe_mode.call(this)
    end
    def refresh_offline_desktop(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_offline_desktop.call(this)
    end
    def add_favorite(this : IShellUIHelper7*, url : Win32cr::Foundation::BSTR, title : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_favorite.call(this, url, title)
    end
    def add_channel(this : IShellUIHelper7*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_channel.call(this, url)
    end
    def add_desktop_component(this : IShellUIHelper7*, url : Win32cr::Foundation::BSTR, type__ : Win32cr::Foundation::BSTR, left : Win32cr::System::Com::VARIANT*, top : Win32cr::System::Com::VARIANT*, width : Win32cr::System::Com::VARIANT*, height : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_desktop_component.call(this, url, type__, left, top, width, height)
    end
    def is_subscribed(this : IShellUIHelper7*, url : Win32cr::Foundation::BSTR, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_subscribed.call(this, url, pBool)
    end
    def navigate_and_find(this : IShellUIHelper7*, url : Win32cr::Foundation::BSTR, strQuery : Win32cr::Foundation::BSTR, varTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_and_find.call(this, url, strQuery, varTargetFrame)
    end
    def import_export_favorites(this : IShellUIHelper7*, fImport : Int16, strImpExpPath : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.import_export_favorites.call(this, fImport, strImpExpPath)
    end
    def auto_complete_save_form(this : IShellUIHelper7*, form : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_save_form.call(this, form)
    end
    def auto_scan(this : IShellUIHelper7*, strSearch : Win32cr::Foundation::BSTR, strFailureUrl : Win32cr::Foundation::BSTR, pvarTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_scan.call(this, strSearch, strFailureUrl, pvarTargetFrame)
    end
    def auto_complete_attach(this : IShellUIHelper7*, reserved : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_attach.call(this, reserved)
    end
    def show_browser_ui(this : IShellUIHelper7*, bstrName : Win32cr::Foundation::BSTR, pvarIn : Win32cr::System::Com::VARIANT*, pvarOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_browser_ui.call(this, bstrName, pvarIn, pvarOut)
    end
    def add_search_provider(this : IShellUIHelper7*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_search_provider.call(this, url)
    end
    def run_once_shown(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_shown.call(this)
    end
    def skip_run_once(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_run_once.call(this)
    end
    def customize_settings(this : IShellUIHelper7*, fSQM : Int16, fPhishing : Int16, bstrLocale : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_settings.call(this, fSQM, fPhishing, bstrLocale)
    end
    def sqm_enabled(this : IShellUIHelper7*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.sqm_enabled.call(this, pfEnabled)
    end
    def phishing_enabled(this : IShellUIHelper7*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.phishing_enabled.call(this, pfEnabled)
    end
    def brand_image_uri(this : IShellUIHelper7*, pbstrUri : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.brand_image_uri.call(this, pbstrUri)
    end
    def skip_tabs_welcome(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_tabs_welcome.call(this)
    end
    def diagnose_connection(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.diagnose_connection.call(this)
    end
    def customize_clear_type(this : IShellUIHelper7*, fSet : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_clear_type.call(this, fSet)
    end
    def is_search_provider_installed(this : IShellUIHelper7*, url : Win32cr::Foundation::BSTR, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_provider_installed.call(this, url, pdwResult)
    end
    def is_search_migrated(this : IShellUIHelper7*, pfMigrated : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_migrated.call(this, pfMigrated)
    end
    def default_search_provider(this : IShellUIHelper7*, pbstrName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.default_search_provider.call(this, pbstrName)
    end
    def run_once_required_settings_complete(this : IShellUIHelper7*, fComplete : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_required_settings_complete.call(this, fComplete)
    end
    def run_once_has_shown(this : IShellUIHelper7*, pfShown : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_has_shown.call(this, pfShown)
    end
    def search_guide_url(this : IShellUIHelper7*, pbstrUrl : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.search_guide_url.call(this, pbstrUrl)
    end
    def add_service(this : IShellUIHelper7*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_service.call(this, url)
    end
    def is_service_installed(this : IShellUIHelper7*, url : Win32cr::Foundation::BSTR, verb : Win32cr::Foundation::BSTR, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_service_installed.call(this, url, verb, pdwResult)
    end
    def in_private_filtering_enabled(this : IShellUIHelper7*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.in_private_filtering_enabled.call(this, pfEnabled)
    end
    def add_to_favorites_bar(this : IShellUIHelper7*, url : Win32cr::Foundation::BSTR, title : Win32cr::Foundation::BSTR, type__ : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_to_favorites_bar.call(this, url, title, type__)
    end
    def build_new_tab_page(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.build_new_tab_page.call(this)
    end
    def set_recently_closed_visible(this : IShellUIHelper7*, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_recently_closed_visible.call(this, fVisible)
    end
    def set_activities_visible(this : IShellUIHelper7*, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_activities_visible.call(this, fVisible)
    end
    def content_discovery_reset(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.content_discovery_reset.call(this)
    end
    def is_suggested_sites_enabled(this : IShellUIHelper7*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_suggested_sites_enabled.call(this, pfEnabled)
    end
    def enable_suggested_sites(this : IShellUIHelper7*, fEnable : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_suggested_sites.call(this, fEnable)
    end
    def navigate_to_suggested_sites(this : IShellUIHelper7*, bstrRelativeUrl : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_to_suggested_sites.call(this, bstrRelativeUrl)
    end
    def show_tabs_help(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_tabs_help.call(this)
    end
    def show_in_private_help(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_in_private_help.call(this)
    end
    def msIsSiteMode(this : IShellUIHelper7*, pfSiteMode : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msIsSiteMode.call(this, pfSiteMode)
    end
    def msSiteModeShowThumbBar(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowThumbBar.call(this)
    end
    def msSiteModeAddThumbBarButton(this : IShellUIHelper7*, bstrIconURL : Win32cr::Foundation::BSTR, bstrTooltip : Win32cr::Foundation::BSTR, pvarButtonID : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddThumbBarButton.call(this, bstrIconURL, bstrTooltip, pvarButtonID)
    end
    def msSiteModeUpdateThumbBarButton(this : IShellUIHelper7*, button_id : Win32cr::System::Com::VARIANT, fEnabled : Int16, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeUpdateThumbBarButton.call(this, button_id, fEnabled, fVisible)
    end
    def msSiteModeSetIconOverlay(this : IShellUIHelper7*, icon_url : Win32cr::Foundation::BSTR, pvarDescription : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeSetIconOverlay.call(this, icon_url, pvarDescription)
    end
    def msSiteModeClearIconOverlay(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearIconOverlay.call(this)
    end
    def msAddSiteMode(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msAddSiteMode.call(this)
    end
    def msSiteModeCreateJumpList(this : IShellUIHelper7*, bstrHeader : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeCreateJumpList.call(this, bstrHeader)
    end
    def msSiteModeAddJumpListItem(this : IShellUIHelper7*, bstrName : Win32cr::Foundation::BSTR, bstrActionUri : Win32cr::Foundation::BSTR, bstrIconUri : Win32cr::Foundation::BSTR, pvarWindowType : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddJumpListItem.call(this, bstrName, bstrActionUri, bstrIconUri, pvarWindowType)
    end
    def msSiteModeClearJumpList(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearJumpList.call(this)
    end
    def msSiteModeShowJumpList(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowJumpList.call(this)
    end
    def msSiteModeAddButtonStyle(this : IShellUIHelper7*, uiButtonID : Win32cr::System::Com::VARIANT, bstrIconUrl : Win32cr::Foundation::BSTR, bstrTooltip : Win32cr::Foundation::BSTR, pvarStyleID : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddButtonStyle.call(this, uiButtonID, bstrIconUrl, bstrTooltip, pvarStyleID)
    end
    def msSiteModeShowButtonStyle(this : IShellUIHelper7*, uiButtonID : Win32cr::System::Com::VARIANT, uiStyleID : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowButtonStyle.call(this, uiButtonID, uiStyleID)
    end
    def msSiteModeActivate(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeActivate.call(this)
    end
    def msIsSiteModeFirstRun(this : IShellUIHelper7*, fPreserveState : Int16, puiFirstRun : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msIsSiteModeFirstRun.call(this, fPreserveState, puiFirstRun)
    end
    def msAddTrackingProtectionList(this : IShellUIHelper7*, url : Win32cr::Foundation::BSTR, bstrFilterName : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msAddTrackingProtectionList.call(this, url, bstrFilterName)
    end
    def msTrackingProtectionEnabled(this : IShellUIHelper7*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msTrackingProtectionEnabled.call(this, pfEnabled)
    end
    def msActiveXFilteringEnabled(this : IShellUIHelper7*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msActiveXFilteringEnabled.call(this, pfEnabled)
    end
    def msProvisionNetworks(this : IShellUIHelper7*, bstrProvisioningXml : Win32cr::Foundation::BSTR, puiResult : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msProvisionNetworks.call(this, bstrProvisioningXml, puiResult)
    end
    def msReportSafeUrl(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msReportSafeUrl.call(this)
    end
    def msSiteModeRefreshBadge(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeRefreshBadge.call(this)
    end
    def msSiteModeClearBadge(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearBadge.call(this)
    end
    def msDiagnoseConnectionUILess(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msDiagnoseConnectionUILess.call(this)
    end
    def msLaunchNetworkClientHelp(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msLaunchNetworkClientHelp.call(this)
    end
    def msChangeDefaultBrowser(this : IShellUIHelper7*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msChangeDefaultBrowser.call(this, fChange)
    end
    def msStopPeriodicTileUpdate(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStopPeriodicTileUpdate.call(this)
    end
    def msStartPeriodicTileUpdate(this : IShellUIHelper7*, pollingUris : Win32cr::System::Com::VARIANT, startTime : Win32cr::System::Com::VARIANT, uiUpdateRecurrence : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStartPeriodicTileUpdate.call(this, pollingUris, startTime, uiUpdateRecurrence)
    end
    def msStartPeriodicTileUpdateBatch(this : IShellUIHelper7*, pollingUris : Win32cr::System::Com::VARIANT, startTime : Win32cr::System::Com::VARIANT, uiUpdateRecurrence : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStartPeriodicTileUpdateBatch.call(this, pollingUris, startTime, uiUpdateRecurrence)
    end
    def msClearTile(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msClearTile.call(this)
    end
    def msEnableTileNotificationQueue(this : IShellUIHelper7*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueue.call(this, fChange)
    end
    def msPinnedSiteState(this : IShellUIHelper7*, pvarSiteState : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msPinnedSiteState.call(this, pvarSiteState)
    end
    def msEnableTileNotificationQueueForSquare150x150(this : IShellUIHelper7*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueueForSquare150x150.call(this, fChange)
    end
    def msEnableTileNotificationQueueForWide310x150(this : IShellUIHelper7*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueueForWide310x150.call(this, fChange)
    end
    def msEnableTileNotificationQueueForSquare310x310(this : IShellUIHelper7*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueueForSquare310x310.call(this, fChange)
    end
    def msScheduledTileNotification(this : IShellUIHelper7*, bstrNotificationXml : Win32cr::Foundation::BSTR, bstrNotificationId : Win32cr::Foundation::BSTR, bstrNotificationTag : Win32cr::Foundation::BSTR, startTime : Win32cr::System::Com::VARIANT, expirationTime : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msScheduledTileNotification.call(this, bstrNotificationXml, bstrNotificationId, bstrNotificationTag, startTime, expirationTime)
    end
    def msRemoveScheduledTileNotification(this : IShellUIHelper7*, bstrNotificationId : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msRemoveScheduledTileNotification.call(this, bstrNotificationId)
    end
    def msStartPeriodicBadgeUpdate(this : IShellUIHelper7*, pollingUri : Win32cr::Foundation::BSTR, startTime : Win32cr::System::Com::VARIANT, uiUpdateRecurrence : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStartPeriodicBadgeUpdate.call(this, pollingUri, startTime, uiUpdateRecurrence)
    end
    def msStopPeriodicBadgeUpdate(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStopPeriodicBadgeUpdate.call(this)
    end
    def msLaunchInternetOptions(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msLaunchInternetOptions.call(this)
    end
    def set_experimental_flag(this : IShellUIHelper7*, bstrFlagString : Win32cr::Foundation::BSTR, vfFlag : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_experimental_flag.call(this, bstrFlagString, vfFlag)
    end
    def get_experimental_flag(this : IShellUIHelper7*, bstrFlagString : Win32cr::Foundation::BSTR, vfFlag : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_experimental_flag.call(this, bstrFlagString, vfFlag)
    end
    def set_experimental_value(this : IShellUIHelper7*, bstrValueString : Win32cr::Foundation::BSTR, dwValue : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_experimental_value.call(this, bstrValueString, dwValue)
    end
    def get_experimental_value(this : IShellUIHelper7*, bstrValueString : Win32cr::Foundation::BSTR, pdwValue : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_experimental_value.call(this, bstrValueString, pdwValue)
    end
    def reset_all_experimental_flags_and_values(this : IShellUIHelper7*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_all_experimental_flags_and_values.call(this)
    end
    def get_need_ie_auto_launch_flag(this : IShellUIHelper7*, bstrUrl : Win32cr::Foundation::BSTR, flag : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_need_ie_auto_launch_flag.call(this, bstrUrl, flag)
    end
    def set_need_ie_auto_launch_flag(this : IShellUIHelper7*, bstrUrl : Win32cr::Foundation::BSTR, flag : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_need_ie_auto_launch_flag.call(this, bstrUrl, flag)
    end
    def has_need_ie_auto_launch_flag(this : IShellUIHelper7*, bstrUrl : Win32cr::Foundation::BSTR, exists : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.has_need_ie_auto_launch_flag.call(this, bstrUrl, exists)
    end
    def launch_ie(this : IShellUIHelper7*, bstrUrl : Win32cr::Foundation::BSTR, automated : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.launch_ie.call(this, bstrUrl, automated)
    end

  end

  @[Extern]
  record IShellUIHelper8Vtbl,
    query_interface : Proc(IShellUIHelper8*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellUIHelper8*, UInt32),
    release : Proc(IShellUIHelper8*, UInt32),
    get_type_info_count : Proc(IShellUIHelper8*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellUIHelper8*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellUIHelper8*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellUIHelper8*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    reset_first_boot_mode : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    reset_safe_mode : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    refresh_offline_desktop : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    add_favorite : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_channel : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    add_desktop_component : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    is_subscribed : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    navigate_and_find : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    import_export_favorites : Proc(IShellUIHelper8*, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    auto_complete_save_form : Proc(IShellUIHelper8*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_scan : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_complete_attach : Proc(IShellUIHelper8*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    show_browser_ui : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_search_provider : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    run_once_shown : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    skip_run_once : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    customize_settings : Proc(IShellUIHelper8*, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    sqm_enabled : Proc(IShellUIHelper8*, Int16*, Win32cr::Foundation::HRESULT),
    phishing_enabled : Proc(IShellUIHelper8*, Int16*, Win32cr::Foundation::HRESULT),
    brand_image_uri : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    skip_tabs_welcome : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    diagnose_connection : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    customize_clear_type : Proc(IShellUIHelper8*, Int16, Win32cr::Foundation::HRESULT),
    is_search_provider_installed : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    is_search_migrated : Proc(IShellUIHelper8*, Int16*, Win32cr::Foundation::HRESULT),
    default_search_provider : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    run_once_required_settings_complete : Proc(IShellUIHelper8*, Int16, Win32cr::Foundation::HRESULT),
    run_once_has_shown : Proc(IShellUIHelper8*, Int16*, Win32cr::Foundation::HRESULT),
    search_guide_url : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    add_service : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    is_service_installed : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    in_private_filtering_enabled : Proc(IShellUIHelper8*, Int16*, Win32cr::Foundation::HRESULT),
    add_to_favorites_bar : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    build_new_tab_page : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    set_recently_closed_visible : Proc(IShellUIHelper8*, Int16, Win32cr::Foundation::HRESULT),
    set_activities_visible : Proc(IShellUIHelper8*, Int16, Win32cr::Foundation::HRESULT),
    content_discovery_reset : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    is_suggested_sites_enabled : Proc(IShellUIHelper8*, Int16*, Win32cr::Foundation::HRESULT),
    enable_suggested_sites : Proc(IShellUIHelper8*, Int16, Win32cr::Foundation::HRESULT),
    navigate_to_suggested_sites : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    show_tabs_help : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    show_in_private_help : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    msIsSiteMode : Proc(IShellUIHelper8*, Int16*, Win32cr::Foundation::HRESULT),
    msSiteModeShowThumbBar : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    msSiteModeAddThumbBarButton : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeUpdateThumbBarButton : Proc(IShellUIHelper8*, Win32cr::System::Com::VARIANT, Int16, Int16, Win32cr::Foundation::HRESULT),
    msSiteModeSetIconOverlay : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeClearIconOverlay : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    msAddSiteMode : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    msSiteModeCreateJumpList : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msSiteModeAddJumpListItem : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeClearJumpList : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    msSiteModeShowJumpList : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    msSiteModeAddButtonStyle : Proc(IShellUIHelper8*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeShowButtonStyle : Proc(IShellUIHelper8*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msSiteModeActivate : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    msIsSiteModeFirstRun : Proc(IShellUIHelper8*, Int16, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msAddTrackingProtectionList : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msTrackingProtectionEnabled : Proc(IShellUIHelper8*, Int16*, Win32cr::Foundation::HRESULT),
    msActiveXFilteringEnabled : Proc(IShellUIHelper8*, Int16*, Win32cr::Foundation::HRESULT),
    msProvisionNetworks : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msReportSafeUrl : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    msSiteModeRefreshBadge : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    msSiteModeClearBadge : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    msDiagnoseConnectionUILess : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    msLaunchNetworkClientHelp : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    msChangeDefaultBrowser : Proc(IShellUIHelper8*, Int16, Win32cr::Foundation::HRESULT),
    msStopPeriodicTileUpdate : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    msStartPeriodicTileUpdate : Proc(IShellUIHelper8*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msStartPeriodicTileUpdateBatch : Proc(IShellUIHelper8*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msClearTile : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueue : Proc(IShellUIHelper8*, Int16, Win32cr::Foundation::HRESULT),
    msPinnedSiteState : Proc(IShellUIHelper8*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueueForSquare150x150 : Proc(IShellUIHelper8*, Int16, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueueForWide310x150 : Proc(IShellUIHelper8*, Int16, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueueForSquare310x310 : Proc(IShellUIHelper8*, Int16, Win32cr::Foundation::HRESULT),
    msScheduledTileNotification : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msRemoveScheduledTileNotification : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msStartPeriodicBadgeUpdate : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msStopPeriodicBadgeUpdate : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    msLaunchInternetOptions : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    set_experimental_flag : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Int16, Win32cr::Foundation::HRESULT),
    get_experimental_flag : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    set_experimental_value : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_experimental_value : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    reset_all_experimental_flags_and_values : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    get_need_ie_auto_launch_flag : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    set_need_ie_auto_launch_flag : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Int16, Win32cr::Foundation::HRESULT),
    has_need_ie_auto_launch_flag : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    launch_ie : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Int16, Win32cr::Foundation::HRESULT),
    get_cv_list_data : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_cv_list_local_data : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_emie_list_data : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_emie_list_local_data : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    open_favorites_pane : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    open_favorites_settings : Proc(IShellUIHelper8*, Win32cr::Foundation::HRESULT),
    launch_in_hvsi : Proc(IShellUIHelper8*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellUIHelper8, lpVtbl : IShellUIHelper8Vtbl* do
    GUID = LibC::GUID.new(0x66debcf2_u32, 0x5b0_u16, 0x4f07_u16, StaticArray[0xb4_u8, 0x9b_u8, 0xb9_u8, 0x62_u8, 0x41_u8, 0xa6_u8, 0x5d_u8, 0xb2_u8])
    def query_interface(this : IShellUIHelper8*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellUIHelper8*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellUIHelper8*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellUIHelper8*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellUIHelper8*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellUIHelper8*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellUIHelper8*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def reset_first_boot_mode(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_first_boot_mode.call(this)
    end
    def reset_safe_mode(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_safe_mode.call(this)
    end
    def refresh_offline_desktop(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_offline_desktop.call(this)
    end
    def add_favorite(this : IShellUIHelper8*, url : Win32cr::Foundation::BSTR, title : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_favorite.call(this, url, title)
    end
    def add_channel(this : IShellUIHelper8*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_channel.call(this, url)
    end
    def add_desktop_component(this : IShellUIHelper8*, url : Win32cr::Foundation::BSTR, type__ : Win32cr::Foundation::BSTR, left : Win32cr::System::Com::VARIANT*, top : Win32cr::System::Com::VARIANT*, width : Win32cr::System::Com::VARIANT*, height : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_desktop_component.call(this, url, type__, left, top, width, height)
    end
    def is_subscribed(this : IShellUIHelper8*, url : Win32cr::Foundation::BSTR, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_subscribed.call(this, url, pBool)
    end
    def navigate_and_find(this : IShellUIHelper8*, url : Win32cr::Foundation::BSTR, strQuery : Win32cr::Foundation::BSTR, varTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_and_find.call(this, url, strQuery, varTargetFrame)
    end
    def import_export_favorites(this : IShellUIHelper8*, fImport : Int16, strImpExpPath : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.import_export_favorites.call(this, fImport, strImpExpPath)
    end
    def auto_complete_save_form(this : IShellUIHelper8*, form : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_save_form.call(this, form)
    end
    def auto_scan(this : IShellUIHelper8*, strSearch : Win32cr::Foundation::BSTR, strFailureUrl : Win32cr::Foundation::BSTR, pvarTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_scan.call(this, strSearch, strFailureUrl, pvarTargetFrame)
    end
    def auto_complete_attach(this : IShellUIHelper8*, reserved : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_attach.call(this, reserved)
    end
    def show_browser_ui(this : IShellUIHelper8*, bstrName : Win32cr::Foundation::BSTR, pvarIn : Win32cr::System::Com::VARIANT*, pvarOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_browser_ui.call(this, bstrName, pvarIn, pvarOut)
    end
    def add_search_provider(this : IShellUIHelper8*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_search_provider.call(this, url)
    end
    def run_once_shown(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_shown.call(this)
    end
    def skip_run_once(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_run_once.call(this)
    end
    def customize_settings(this : IShellUIHelper8*, fSQM : Int16, fPhishing : Int16, bstrLocale : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_settings.call(this, fSQM, fPhishing, bstrLocale)
    end
    def sqm_enabled(this : IShellUIHelper8*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.sqm_enabled.call(this, pfEnabled)
    end
    def phishing_enabled(this : IShellUIHelper8*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.phishing_enabled.call(this, pfEnabled)
    end
    def brand_image_uri(this : IShellUIHelper8*, pbstrUri : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.brand_image_uri.call(this, pbstrUri)
    end
    def skip_tabs_welcome(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_tabs_welcome.call(this)
    end
    def diagnose_connection(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.diagnose_connection.call(this)
    end
    def customize_clear_type(this : IShellUIHelper8*, fSet : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_clear_type.call(this, fSet)
    end
    def is_search_provider_installed(this : IShellUIHelper8*, url : Win32cr::Foundation::BSTR, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_provider_installed.call(this, url, pdwResult)
    end
    def is_search_migrated(this : IShellUIHelper8*, pfMigrated : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_migrated.call(this, pfMigrated)
    end
    def default_search_provider(this : IShellUIHelper8*, pbstrName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.default_search_provider.call(this, pbstrName)
    end
    def run_once_required_settings_complete(this : IShellUIHelper8*, fComplete : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_required_settings_complete.call(this, fComplete)
    end
    def run_once_has_shown(this : IShellUIHelper8*, pfShown : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_has_shown.call(this, pfShown)
    end
    def search_guide_url(this : IShellUIHelper8*, pbstrUrl : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.search_guide_url.call(this, pbstrUrl)
    end
    def add_service(this : IShellUIHelper8*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_service.call(this, url)
    end
    def is_service_installed(this : IShellUIHelper8*, url : Win32cr::Foundation::BSTR, verb : Win32cr::Foundation::BSTR, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_service_installed.call(this, url, verb, pdwResult)
    end
    def in_private_filtering_enabled(this : IShellUIHelper8*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.in_private_filtering_enabled.call(this, pfEnabled)
    end
    def add_to_favorites_bar(this : IShellUIHelper8*, url : Win32cr::Foundation::BSTR, title : Win32cr::Foundation::BSTR, type__ : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_to_favorites_bar.call(this, url, title, type__)
    end
    def build_new_tab_page(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.build_new_tab_page.call(this)
    end
    def set_recently_closed_visible(this : IShellUIHelper8*, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_recently_closed_visible.call(this, fVisible)
    end
    def set_activities_visible(this : IShellUIHelper8*, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_activities_visible.call(this, fVisible)
    end
    def content_discovery_reset(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.content_discovery_reset.call(this)
    end
    def is_suggested_sites_enabled(this : IShellUIHelper8*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_suggested_sites_enabled.call(this, pfEnabled)
    end
    def enable_suggested_sites(this : IShellUIHelper8*, fEnable : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_suggested_sites.call(this, fEnable)
    end
    def navigate_to_suggested_sites(this : IShellUIHelper8*, bstrRelativeUrl : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_to_suggested_sites.call(this, bstrRelativeUrl)
    end
    def show_tabs_help(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_tabs_help.call(this)
    end
    def show_in_private_help(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_in_private_help.call(this)
    end
    def msIsSiteMode(this : IShellUIHelper8*, pfSiteMode : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msIsSiteMode.call(this, pfSiteMode)
    end
    def msSiteModeShowThumbBar(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowThumbBar.call(this)
    end
    def msSiteModeAddThumbBarButton(this : IShellUIHelper8*, bstrIconURL : Win32cr::Foundation::BSTR, bstrTooltip : Win32cr::Foundation::BSTR, pvarButtonID : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddThumbBarButton.call(this, bstrIconURL, bstrTooltip, pvarButtonID)
    end
    def msSiteModeUpdateThumbBarButton(this : IShellUIHelper8*, button_id : Win32cr::System::Com::VARIANT, fEnabled : Int16, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeUpdateThumbBarButton.call(this, button_id, fEnabled, fVisible)
    end
    def msSiteModeSetIconOverlay(this : IShellUIHelper8*, icon_url : Win32cr::Foundation::BSTR, pvarDescription : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeSetIconOverlay.call(this, icon_url, pvarDescription)
    end
    def msSiteModeClearIconOverlay(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearIconOverlay.call(this)
    end
    def msAddSiteMode(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msAddSiteMode.call(this)
    end
    def msSiteModeCreateJumpList(this : IShellUIHelper8*, bstrHeader : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeCreateJumpList.call(this, bstrHeader)
    end
    def msSiteModeAddJumpListItem(this : IShellUIHelper8*, bstrName : Win32cr::Foundation::BSTR, bstrActionUri : Win32cr::Foundation::BSTR, bstrIconUri : Win32cr::Foundation::BSTR, pvarWindowType : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddJumpListItem.call(this, bstrName, bstrActionUri, bstrIconUri, pvarWindowType)
    end
    def msSiteModeClearJumpList(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearJumpList.call(this)
    end
    def msSiteModeShowJumpList(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowJumpList.call(this)
    end
    def msSiteModeAddButtonStyle(this : IShellUIHelper8*, uiButtonID : Win32cr::System::Com::VARIANT, bstrIconUrl : Win32cr::Foundation::BSTR, bstrTooltip : Win32cr::Foundation::BSTR, pvarStyleID : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddButtonStyle.call(this, uiButtonID, bstrIconUrl, bstrTooltip, pvarStyleID)
    end
    def msSiteModeShowButtonStyle(this : IShellUIHelper8*, uiButtonID : Win32cr::System::Com::VARIANT, uiStyleID : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowButtonStyle.call(this, uiButtonID, uiStyleID)
    end
    def msSiteModeActivate(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeActivate.call(this)
    end
    def msIsSiteModeFirstRun(this : IShellUIHelper8*, fPreserveState : Int16, puiFirstRun : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msIsSiteModeFirstRun.call(this, fPreserveState, puiFirstRun)
    end
    def msAddTrackingProtectionList(this : IShellUIHelper8*, url : Win32cr::Foundation::BSTR, bstrFilterName : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msAddTrackingProtectionList.call(this, url, bstrFilterName)
    end
    def msTrackingProtectionEnabled(this : IShellUIHelper8*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msTrackingProtectionEnabled.call(this, pfEnabled)
    end
    def msActiveXFilteringEnabled(this : IShellUIHelper8*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msActiveXFilteringEnabled.call(this, pfEnabled)
    end
    def msProvisionNetworks(this : IShellUIHelper8*, bstrProvisioningXml : Win32cr::Foundation::BSTR, puiResult : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msProvisionNetworks.call(this, bstrProvisioningXml, puiResult)
    end
    def msReportSafeUrl(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msReportSafeUrl.call(this)
    end
    def msSiteModeRefreshBadge(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeRefreshBadge.call(this)
    end
    def msSiteModeClearBadge(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearBadge.call(this)
    end
    def msDiagnoseConnectionUILess(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msDiagnoseConnectionUILess.call(this)
    end
    def msLaunchNetworkClientHelp(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msLaunchNetworkClientHelp.call(this)
    end
    def msChangeDefaultBrowser(this : IShellUIHelper8*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msChangeDefaultBrowser.call(this, fChange)
    end
    def msStopPeriodicTileUpdate(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStopPeriodicTileUpdate.call(this)
    end
    def msStartPeriodicTileUpdate(this : IShellUIHelper8*, pollingUris : Win32cr::System::Com::VARIANT, startTime : Win32cr::System::Com::VARIANT, uiUpdateRecurrence : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStartPeriodicTileUpdate.call(this, pollingUris, startTime, uiUpdateRecurrence)
    end
    def msStartPeriodicTileUpdateBatch(this : IShellUIHelper8*, pollingUris : Win32cr::System::Com::VARIANT, startTime : Win32cr::System::Com::VARIANT, uiUpdateRecurrence : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStartPeriodicTileUpdateBatch.call(this, pollingUris, startTime, uiUpdateRecurrence)
    end
    def msClearTile(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msClearTile.call(this)
    end
    def msEnableTileNotificationQueue(this : IShellUIHelper8*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueue.call(this, fChange)
    end
    def msPinnedSiteState(this : IShellUIHelper8*, pvarSiteState : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msPinnedSiteState.call(this, pvarSiteState)
    end
    def msEnableTileNotificationQueueForSquare150x150(this : IShellUIHelper8*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueueForSquare150x150.call(this, fChange)
    end
    def msEnableTileNotificationQueueForWide310x150(this : IShellUIHelper8*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueueForWide310x150.call(this, fChange)
    end
    def msEnableTileNotificationQueueForSquare310x310(this : IShellUIHelper8*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueueForSquare310x310.call(this, fChange)
    end
    def msScheduledTileNotification(this : IShellUIHelper8*, bstrNotificationXml : Win32cr::Foundation::BSTR, bstrNotificationId : Win32cr::Foundation::BSTR, bstrNotificationTag : Win32cr::Foundation::BSTR, startTime : Win32cr::System::Com::VARIANT, expirationTime : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msScheduledTileNotification.call(this, bstrNotificationXml, bstrNotificationId, bstrNotificationTag, startTime, expirationTime)
    end
    def msRemoveScheduledTileNotification(this : IShellUIHelper8*, bstrNotificationId : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msRemoveScheduledTileNotification.call(this, bstrNotificationId)
    end
    def msStartPeriodicBadgeUpdate(this : IShellUIHelper8*, pollingUri : Win32cr::Foundation::BSTR, startTime : Win32cr::System::Com::VARIANT, uiUpdateRecurrence : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStartPeriodicBadgeUpdate.call(this, pollingUri, startTime, uiUpdateRecurrence)
    end
    def msStopPeriodicBadgeUpdate(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStopPeriodicBadgeUpdate.call(this)
    end
    def msLaunchInternetOptions(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msLaunchInternetOptions.call(this)
    end
    def set_experimental_flag(this : IShellUIHelper8*, bstrFlagString : Win32cr::Foundation::BSTR, vfFlag : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_experimental_flag.call(this, bstrFlagString, vfFlag)
    end
    def get_experimental_flag(this : IShellUIHelper8*, bstrFlagString : Win32cr::Foundation::BSTR, vfFlag : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_experimental_flag.call(this, bstrFlagString, vfFlag)
    end
    def set_experimental_value(this : IShellUIHelper8*, bstrValueString : Win32cr::Foundation::BSTR, dwValue : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_experimental_value.call(this, bstrValueString, dwValue)
    end
    def get_experimental_value(this : IShellUIHelper8*, bstrValueString : Win32cr::Foundation::BSTR, pdwValue : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_experimental_value.call(this, bstrValueString, pdwValue)
    end
    def reset_all_experimental_flags_and_values(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_all_experimental_flags_and_values.call(this)
    end
    def get_need_ie_auto_launch_flag(this : IShellUIHelper8*, bstrUrl : Win32cr::Foundation::BSTR, flag : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_need_ie_auto_launch_flag.call(this, bstrUrl, flag)
    end
    def set_need_ie_auto_launch_flag(this : IShellUIHelper8*, bstrUrl : Win32cr::Foundation::BSTR, flag : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_need_ie_auto_launch_flag.call(this, bstrUrl, flag)
    end
    def has_need_ie_auto_launch_flag(this : IShellUIHelper8*, bstrUrl : Win32cr::Foundation::BSTR, exists : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.has_need_ie_auto_launch_flag.call(this, bstrUrl, exists)
    end
    def launch_ie(this : IShellUIHelper8*, bstrUrl : Win32cr::Foundation::BSTR, automated : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.launch_ie.call(this, bstrUrl, automated)
    end
    def get_cv_list_data(this : IShellUIHelper8*, pbstrResult : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cv_list_data.call(this, pbstrResult)
    end
    def get_cv_list_local_data(this : IShellUIHelper8*, pbstrResult : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cv_list_local_data.call(this, pbstrResult)
    end
    def get_emie_list_data(this : IShellUIHelper8*, pbstrResult : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_emie_list_data.call(this, pbstrResult)
    end
    def get_emie_list_local_data(this : IShellUIHelper8*, pbstrResult : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_emie_list_local_data.call(this, pbstrResult)
    end
    def open_favorites_pane(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_favorites_pane.call(this)
    end
    def open_favorites_settings(this : IShellUIHelper8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_favorites_settings.call(this)
    end
    def launch_in_hvsi(this : IShellUIHelper8*, bstrUrl : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.launch_in_hvsi.call(this, bstrUrl)
    end

  end

  @[Extern]
  record IShellUIHelper9Vtbl,
    query_interface : Proc(IShellUIHelper9*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellUIHelper9*, UInt32),
    release : Proc(IShellUIHelper9*, UInt32),
    get_type_info_count : Proc(IShellUIHelper9*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellUIHelper9*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellUIHelper9*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellUIHelper9*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    reset_first_boot_mode : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    reset_safe_mode : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    refresh_offline_desktop : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    add_favorite : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_channel : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    add_desktop_component : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    is_subscribed : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    navigate_and_find : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    import_export_favorites : Proc(IShellUIHelper9*, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    auto_complete_save_form : Proc(IShellUIHelper9*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_scan : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    auto_complete_attach : Proc(IShellUIHelper9*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    show_browser_ui : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_search_provider : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    run_once_shown : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    skip_run_once : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    customize_settings : Proc(IShellUIHelper9*, Int16, Int16, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    sqm_enabled : Proc(IShellUIHelper9*, Int16*, Win32cr::Foundation::HRESULT),
    phishing_enabled : Proc(IShellUIHelper9*, Int16*, Win32cr::Foundation::HRESULT),
    brand_image_uri : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    skip_tabs_welcome : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    diagnose_connection : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    customize_clear_type : Proc(IShellUIHelper9*, Int16, Win32cr::Foundation::HRESULT),
    is_search_provider_installed : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    is_search_migrated : Proc(IShellUIHelper9*, Int16*, Win32cr::Foundation::HRESULT),
    default_search_provider : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    run_once_required_settings_complete : Proc(IShellUIHelper9*, Int16, Win32cr::Foundation::HRESULT),
    run_once_has_shown : Proc(IShellUIHelper9*, Int16*, Win32cr::Foundation::HRESULT),
    search_guide_url : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    add_service : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    is_service_installed : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    in_private_filtering_enabled : Proc(IShellUIHelper9*, Int16*, Win32cr::Foundation::HRESULT),
    add_to_favorites_bar : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    build_new_tab_page : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    set_recently_closed_visible : Proc(IShellUIHelper9*, Int16, Win32cr::Foundation::HRESULT),
    set_activities_visible : Proc(IShellUIHelper9*, Int16, Win32cr::Foundation::HRESULT),
    content_discovery_reset : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    is_suggested_sites_enabled : Proc(IShellUIHelper9*, Int16*, Win32cr::Foundation::HRESULT),
    enable_suggested_sites : Proc(IShellUIHelper9*, Int16, Win32cr::Foundation::HRESULT),
    navigate_to_suggested_sites : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    show_tabs_help : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    show_in_private_help : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    msIsSiteMode : Proc(IShellUIHelper9*, Int16*, Win32cr::Foundation::HRESULT),
    msSiteModeShowThumbBar : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    msSiteModeAddThumbBarButton : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeUpdateThumbBarButton : Proc(IShellUIHelper9*, Win32cr::System::Com::VARIANT, Int16, Int16, Win32cr::Foundation::HRESULT),
    msSiteModeSetIconOverlay : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeClearIconOverlay : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    msAddSiteMode : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    msSiteModeCreateJumpList : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msSiteModeAddJumpListItem : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeClearJumpList : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    msSiteModeShowJumpList : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    msSiteModeAddButtonStyle : Proc(IShellUIHelper9*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msSiteModeShowButtonStyle : Proc(IShellUIHelper9*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msSiteModeActivate : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    msIsSiteModeFirstRun : Proc(IShellUIHelper9*, Int16, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msAddTrackingProtectionList : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msTrackingProtectionEnabled : Proc(IShellUIHelper9*, Int16*, Win32cr::Foundation::HRESULT),
    msActiveXFilteringEnabled : Proc(IShellUIHelper9*, Int16*, Win32cr::Foundation::HRESULT),
    msProvisionNetworks : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msReportSafeUrl : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    msSiteModeRefreshBadge : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    msSiteModeClearBadge : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    msDiagnoseConnectionUILess : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    msLaunchNetworkClientHelp : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    msChangeDefaultBrowser : Proc(IShellUIHelper9*, Int16, Win32cr::Foundation::HRESULT),
    msStopPeriodicTileUpdate : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    msStartPeriodicTileUpdate : Proc(IShellUIHelper9*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msStartPeriodicTileUpdateBatch : Proc(IShellUIHelper9*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msClearTile : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueue : Proc(IShellUIHelper9*, Int16, Win32cr::Foundation::HRESULT),
    msPinnedSiteState : Proc(IShellUIHelper9*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueueForSquare150x150 : Proc(IShellUIHelper9*, Int16, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueueForWide310x150 : Proc(IShellUIHelper9*, Int16, Win32cr::Foundation::HRESULT),
    msEnableTileNotificationQueueForSquare310x310 : Proc(IShellUIHelper9*, Int16, Win32cr::Foundation::HRESULT),
    msScheduledTileNotification : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msRemoveScheduledTileNotification : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    msStartPeriodicBadgeUpdate : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    msStopPeriodicBadgeUpdate : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    msLaunchInternetOptions : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    set_experimental_flag : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Int16, Win32cr::Foundation::HRESULT),
    get_experimental_flag : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    set_experimental_value : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_experimental_value : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, UInt32*, Win32cr::Foundation::HRESULT),
    reset_all_experimental_flags_and_values : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    get_need_ie_auto_launch_flag : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    set_need_ie_auto_launch_flag : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Int16, Win32cr::Foundation::HRESULT),
    has_need_ie_auto_launch_flag : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT),
    launch_ie : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Int16, Win32cr::Foundation::HRESULT),
    get_cv_list_data : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_cv_list_local_data : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_emie_list_data : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_emie_list_local_data : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    open_favorites_pane : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    open_favorites_settings : Proc(IShellUIHelper9*, Win32cr::Foundation::HRESULT),
    launch_in_hvsi : Proc(IShellUIHelper9*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_os_sku : Proc(IShellUIHelper9*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellUIHelper9, lpVtbl : IShellUIHelper9Vtbl* do
    GUID = LibC::GUID.new(0x6cdf73b0_u32, 0x7f2f_u16, 0x451f_u16, StaticArray[0xbc_u8, 0xf_u8, 0x63_u8, 0xe0_u8, 0xf3_u8, 0x28_u8, 0x4e_u8, 0x54_u8])
    def query_interface(this : IShellUIHelper9*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellUIHelper9*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellUIHelper9*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellUIHelper9*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellUIHelper9*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellUIHelper9*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellUIHelper9*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def reset_first_boot_mode(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_first_boot_mode.call(this)
    end
    def reset_safe_mode(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_safe_mode.call(this)
    end
    def refresh_offline_desktop(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_offline_desktop.call(this)
    end
    def add_favorite(this : IShellUIHelper9*, url : Win32cr::Foundation::BSTR, title : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_favorite.call(this, url, title)
    end
    def add_channel(this : IShellUIHelper9*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_channel.call(this, url)
    end
    def add_desktop_component(this : IShellUIHelper9*, url : Win32cr::Foundation::BSTR, type__ : Win32cr::Foundation::BSTR, left : Win32cr::System::Com::VARIANT*, top : Win32cr::System::Com::VARIANT*, width : Win32cr::System::Com::VARIANT*, height : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_desktop_component.call(this, url, type__, left, top, width, height)
    end
    def is_subscribed(this : IShellUIHelper9*, url : Win32cr::Foundation::BSTR, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_subscribed.call(this, url, pBool)
    end
    def navigate_and_find(this : IShellUIHelper9*, url : Win32cr::Foundation::BSTR, strQuery : Win32cr::Foundation::BSTR, varTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_and_find.call(this, url, strQuery, varTargetFrame)
    end
    def import_export_favorites(this : IShellUIHelper9*, fImport : Int16, strImpExpPath : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.import_export_favorites.call(this, fImport, strImpExpPath)
    end
    def auto_complete_save_form(this : IShellUIHelper9*, form : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_save_form.call(this, form)
    end
    def auto_scan(this : IShellUIHelper9*, strSearch : Win32cr::Foundation::BSTR, strFailureUrl : Win32cr::Foundation::BSTR, pvarTargetFrame : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_scan.call(this, strSearch, strFailureUrl, pvarTargetFrame)
    end
    def auto_complete_attach(this : IShellUIHelper9*, reserved : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_complete_attach.call(this, reserved)
    end
    def show_browser_ui(this : IShellUIHelper9*, bstrName : Win32cr::Foundation::BSTR, pvarIn : Win32cr::System::Com::VARIANT*, pvarOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_browser_ui.call(this, bstrName, pvarIn, pvarOut)
    end
    def add_search_provider(this : IShellUIHelper9*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_search_provider.call(this, url)
    end
    def run_once_shown(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_shown.call(this)
    end
    def skip_run_once(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_run_once.call(this)
    end
    def customize_settings(this : IShellUIHelper9*, fSQM : Int16, fPhishing : Int16, bstrLocale : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_settings.call(this, fSQM, fPhishing, bstrLocale)
    end
    def sqm_enabled(this : IShellUIHelper9*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.sqm_enabled.call(this, pfEnabled)
    end
    def phishing_enabled(this : IShellUIHelper9*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.phishing_enabled.call(this, pfEnabled)
    end
    def brand_image_uri(this : IShellUIHelper9*, pbstrUri : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.brand_image_uri.call(this, pbstrUri)
    end
    def skip_tabs_welcome(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip_tabs_welcome.call(this)
    end
    def diagnose_connection(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.diagnose_connection.call(this)
    end
    def customize_clear_type(this : IShellUIHelper9*, fSet : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.customize_clear_type.call(this, fSet)
    end
    def is_search_provider_installed(this : IShellUIHelper9*, url : Win32cr::Foundation::BSTR, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_provider_installed.call(this, url, pdwResult)
    end
    def is_search_migrated(this : IShellUIHelper9*, pfMigrated : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_search_migrated.call(this, pfMigrated)
    end
    def default_search_provider(this : IShellUIHelper9*, pbstrName : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.default_search_provider.call(this, pbstrName)
    end
    def run_once_required_settings_complete(this : IShellUIHelper9*, fComplete : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_required_settings_complete.call(this, fComplete)
    end
    def run_once_has_shown(this : IShellUIHelper9*, pfShown : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_once_has_shown.call(this, pfShown)
    end
    def search_guide_url(this : IShellUIHelper9*, pbstrUrl : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.search_guide_url.call(this, pbstrUrl)
    end
    def add_service(this : IShellUIHelper9*, url : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_service.call(this, url)
    end
    def is_service_installed(this : IShellUIHelper9*, url : Win32cr::Foundation::BSTR, verb : Win32cr::Foundation::BSTR, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_service_installed.call(this, url, verb, pdwResult)
    end
    def in_private_filtering_enabled(this : IShellUIHelper9*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.in_private_filtering_enabled.call(this, pfEnabled)
    end
    def add_to_favorites_bar(this : IShellUIHelper9*, url : Win32cr::Foundation::BSTR, title : Win32cr::Foundation::BSTR, type__ : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_to_favorites_bar.call(this, url, title, type__)
    end
    def build_new_tab_page(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.build_new_tab_page.call(this)
    end
    def set_recently_closed_visible(this : IShellUIHelper9*, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_recently_closed_visible.call(this, fVisible)
    end
    def set_activities_visible(this : IShellUIHelper9*, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_activities_visible.call(this, fVisible)
    end
    def content_discovery_reset(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.content_discovery_reset.call(this)
    end
    def is_suggested_sites_enabled(this : IShellUIHelper9*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_suggested_sites_enabled.call(this, pfEnabled)
    end
    def enable_suggested_sites(this : IShellUIHelper9*, fEnable : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_suggested_sites.call(this, fEnable)
    end
    def navigate_to_suggested_sites(this : IShellUIHelper9*, bstrRelativeUrl : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_to_suggested_sites.call(this, bstrRelativeUrl)
    end
    def show_tabs_help(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_tabs_help.call(this)
    end
    def show_in_private_help(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_in_private_help.call(this)
    end
    def msIsSiteMode(this : IShellUIHelper9*, pfSiteMode : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msIsSiteMode.call(this, pfSiteMode)
    end
    def msSiteModeShowThumbBar(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowThumbBar.call(this)
    end
    def msSiteModeAddThumbBarButton(this : IShellUIHelper9*, bstrIconURL : Win32cr::Foundation::BSTR, bstrTooltip : Win32cr::Foundation::BSTR, pvarButtonID : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddThumbBarButton.call(this, bstrIconURL, bstrTooltip, pvarButtonID)
    end
    def msSiteModeUpdateThumbBarButton(this : IShellUIHelper9*, button_id : Win32cr::System::Com::VARIANT, fEnabled : Int16, fVisible : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeUpdateThumbBarButton.call(this, button_id, fEnabled, fVisible)
    end
    def msSiteModeSetIconOverlay(this : IShellUIHelper9*, icon_url : Win32cr::Foundation::BSTR, pvarDescription : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeSetIconOverlay.call(this, icon_url, pvarDescription)
    end
    def msSiteModeClearIconOverlay(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearIconOverlay.call(this)
    end
    def msAddSiteMode(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msAddSiteMode.call(this)
    end
    def msSiteModeCreateJumpList(this : IShellUIHelper9*, bstrHeader : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeCreateJumpList.call(this, bstrHeader)
    end
    def msSiteModeAddJumpListItem(this : IShellUIHelper9*, bstrName : Win32cr::Foundation::BSTR, bstrActionUri : Win32cr::Foundation::BSTR, bstrIconUri : Win32cr::Foundation::BSTR, pvarWindowType : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddJumpListItem.call(this, bstrName, bstrActionUri, bstrIconUri, pvarWindowType)
    end
    def msSiteModeClearJumpList(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearJumpList.call(this)
    end
    def msSiteModeShowJumpList(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowJumpList.call(this)
    end
    def msSiteModeAddButtonStyle(this : IShellUIHelper9*, uiButtonID : Win32cr::System::Com::VARIANT, bstrIconUrl : Win32cr::Foundation::BSTR, bstrTooltip : Win32cr::Foundation::BSTR, pvarStyleID : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeAddButtonStyle.call(this, uiButtonID, bstrIconUrl, bstrTooltip, pvarStyleID)
    end
    def msSiteModeShowButtonStyle(this : IShellUIHelper9*, uiButtonID : Win32cr::System::Com::VARIANT, uiStyleID : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeShowButtonStyle.call(this, uiButtonID, uiStyleID)
    end
    def msSiteModeActivate(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeActivate.call(this)
    end
    def msIsSiteModeFirstRun(this : IShellUIHelper9*, fPreserveState : Int16, puiFirstRun : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msIsSiteModeFirstRun.call(this, fPreserveState, puiFirstRun)
    end
    def msAddTrackingProtectionList(this : IShellUIHelper9*, url : Win32cr::Foundation::BSTR, bstrFilterName : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msAddTrackingProtectionList.call(this, url, bstrFilterName)
    end
    def msTrackingProtectionEnabled(this : IShellUIHelper9*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msTrackingProtectionEnabled.call(this, pfEnabled)
    end
    def msActiveXFilteringEnabled(this : IShellUIHelper9*, pfEnabled : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msActiveXFilteringEnabled.call(this, pfEnabled)
    end
    def msProvisionNetworks(this : IShellUIHelper9*, bstrProvisioningXml : Win32cr::Foundation::BSTR, puiResult : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msProvisionNetworks.call(this, bstrProvisioningXml, puiResult)
    end
    def msReportSafeUrl(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msReportSafeUrl.call(this)
    end
    def msSiteModeRefreshBadge(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeRefreshBadge.call(this)
    end
    def msSiteModeClearBadge(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msSiteModeClearBadge.call(this)
    end
    def msDiagnoseConnectionUILess(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msDiagnoseConnectionUILess.call(this)
    end
    def msLaunchNetworkClientHelp(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msLaunchNetworkClientHelp.call(this)
    end
    def msChangeDefaultBrowser(this : IShellUIHelper9*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msChangeDefaultBrowser.call(this, fChange)
    end
    def msStopPeriodicTileUpdate(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStopPeriodicTileUpdate.call(this)
    end
    def msStartPeriodicTileUpdate(this : IShellUIHelper9*, pollingUris : Win32cr::System::Com::VARIANT, startTime : Win32cr::System::Com::VARIANT, uiUpdateRecurrence : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStartPeriodicTileUpdate.call(this, pollingUris, startTime, uiUpdateRecurrence)
    end
    def msStartPeriodicTileUpdateBatch(this : IShellUIHelper9*, pollingUris : Win32cr::System::Com::VARIANT, startTime : Win32cr::System::Com::VARIANT, uiUpdateRecurrence : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStartPeriodicTileUpdateBatch.call(this, pollingUris, startTime, uiUpdateRecurrence)
    end
    def msClearTile(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msClearTile.call(this)
    end
    def msEnableTileNotificationQueue(this : IShellUIHelper9*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueue.call(this, fChange)
    end
    def msPinnedSiteState(this : IShellUIHelper9*, pvarSiteState : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msPinnedSiteState.call(this, pvarSiteState)
    end
    def msEnableTileNotificationQueueForSquare150x150(this : IShellUIHelper9*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueueForSquare150x150.call(this, fChange)
    end
    def msEnableTileNotificationQueueForWide310x150(this : IShellUIHelper9*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueueForWide310x150.call(this, fChange)
    end
    def msEnableTileNotificationQueueForSquare310x310(this : IShellUIHelper9*, fChange : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msEnableTileNotificationQueueForSquare310x310.call(this, fChange)
    end
    def msScheduledTileNotification(this : IShellUIHelper9*, bstrNotificationXml : Win32cr::Foundation::BSTR, bstrNotificationId : Win32cr::Foundation::BSTR, bstrNotificationTag : Win32cr::Foundation::BSTR, startTime : Win32cr::System::Com::VARIANT, expirationTime : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msScheduledTileNotification.call(this, bstrNotificationXml, bstrNotificationId, bstrNotificationTag, startTime, expirationTime)
    end
    def msRemoveScheduledTileNotification(this : IShellUIHelper9*, bstrNotificationId : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msRemoveScheduledTileNotification.call(this, bstrNotificationId)
    end
    def msStartPeriodicBadgeUpdate(this : IShellUIHelper9*, pollingUri : Win32cr::Foundation::BSTR, startTime : Win32cr::System::Com::VARIANT, uiUpdateRecurrence : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStartPeriodicBadgeUpdate.call(this, pollingUri, startTime, uiUpdateRecurrence)
    end
    def msStopPeriodicBadgeUpdate(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msStopPeriodicBadgeUpdate.call(this)
    end
    def msLaunchInternetOptions(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.msLaunchInternetOptions.call(this)
    end
    def set_experimental_flag(this : IShellUIHelper9*, bstrFlagString : Win32cr::Foundation::BSTR, vfFlag : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_experimental_flag.call(this, bstrFlagString, vfFlag)
    end
    def get_experimental_flag(this : IShellUIHelper9*, bstrFlagString : Win32cr::Foundation::BSTR, vfFlag : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_experimental_flag.call(this, bstrFlagString, vfFlag)
    end
    def set_experimental_value(this : IShellUIHelper9*, bstrValueString : Win32cr::Foundation::BSTR, dwValue : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_experimental_value.call(this, bstrValueString, dwValue)
    end
    def get_experimental_value(this : IShellUIHelper9*, bstrValueString : Win32cr::Foundation::BSTR, pdwValue : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_experimental_value.call(this, bstrValueString, pdwValue)
    end
    def reset_all_experimental_flags_and_values(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_all_experimental_flags_and_values.call(this)
    end
    def get_need_ie_auto_launch_flag(this : IShellUIHelper9*, bstrUrl : Win32cr::Foundation::BSTR, flag : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_need_ie_auto_launch_flag.call(this, bstrUrl, flag)
    end
    def set_need_ie_auto_launch_flag(this : IShellUIHelper9*, bstrUrl : Win32cr::Foundation::BSTR, flag : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_need_ie_auto_launch_flag.call(this, bstrUrl, flag)
    end
    def has_need_ie_auto_launch_flag(this : IShellUIHelper9*, bstrUrl : Win32cr::Foundation::BSTR, exists : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.has_need_ie_auto_launch_flag.call(this, bstrUrl, exists)
    end
    def launch_ie(this : IShellUIHelper9*, bstrUrl : Win32cr::Foundation::BSTR, automated : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.launch_ie.call(this, bstrUrl, automated)
    end
    def get_cv_list_data(this : IShellUIHelper9*, pbstrResult : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cv_list_data.call(this, pbstrResult)
    end
    def get_cv_list_local_data(this : IShellUIHelper9*, pbstrResult : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cv_list_local_data.call(this, pbstrResult)
    end
    def get_emie_list_data(this : IShellUIHelper9*, pbstrResult : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_emie_list_data.call(this, pbstrResult)
    end
    def get_emie_list_local_data(this : IShellUIHelper9*, pbstrResult : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_emie_list_local_data.call(this, pbstrResult)
    end
    def open_favorites_pane(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_favorites_pane.call(this)
    end
    def open_favorites_settings(this : IShellUIHelper9*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_favorites_settings.call(this)
    end
    def launch_in_hvsi(this : IShellUIHelper9*, bstrUrl : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.launch_in_hvsi.call(this, bstrUrl)
    end
    def get_os_sku(this : IShellUIHelper9*, pdwResult : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_os_sku.call(this, pdwResult)
    end

  end

  @[Extern]
  record DShellNameSpaceEventsVtbl,
    query_interface : Proc(DShellNameSpaceEvents*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(DShellNameSpaceEvents*, UInt32),
    release : Proc(DShellNameSpaceEvents*, UInt32),
    get_type_info_count : Proc(DShellNameSpaceEvents*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(DShellNameSpaceEvents*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(DShellNameSpaceEvents*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(DShellNameSpaceEvents*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record DShellNameSpaceEvents, lpVtbl : DShellNameSpaceEventsVtbl* do
    GUID = LibC::GUID.new(0x55136806_u32, 0xb2de_u16, 0x11d1_u16, StaticArray[0xb9_u8, 0xf2_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x8b_u8, 0xc5_u8, 0x47_u8])
    def query_interface(this : DShellNameSpaceEvents*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : DShellNameSpaceEvents*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : DShellNameSpaceEvents*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : DShellNameSpaceEvents*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : DShellNameSpaceEvents*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : DShellNameSpaceEvents*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : DShellNameSpaceEvents*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end

  end

  @[Extern]
  record IShellFavoritesNameSpaceVtbl,
    query_interface : Proc(IShellFavoritesNameSpace*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellFavoritesNameSpace*, UInt32),
    release : Proc(IShellFavoritesNameSpace*, UInt32),
    get_type_info_count : Proc(IShellFavoritesNameSpace*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellFavoritesNameSpace*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellFavoritesNameSpace*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellFavoritesNameSpace*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    move_selection_up : Proc(IShellFavoritesNameSpace*, Win32cr::Foundation::HRESULT),
    move_selection_down : Proc(IShellFavoritesNameSpace*, Win32cr::Foundation::HRESULT),
    reset_sort : Proc(IShellFavoritesNameSpace*, Win32cr::Foundation::HRESULT),
    new_folder : Proc(IShellFavoritesNameSpace*, Win32cr::Foundation::HRESULT),
    synchronize : Proc(IShellFavoritesNameSpace*, Win32cr::Foundation::HRESULT),
    import : Proc(IShellFavoritesNameSpace*, Win32cr::Foundation::HRESULT),
    export : Proc(IShellFavoritesNameSpace*, Win32cr::Foundation::HRESULT),
    invoke_context_menu_command : Proc(IShellFavoritesNameSpace*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    move_selection_to : Proc(IShellFavoritesNameSpace*, Win32cr::Foundation::HRESULT),
    get_SubscriptionsEnabled : Proc(IShellFavoritesNameSpace*, Int16*, Win32cr::Foundation::HRESULT),
    create_subscription_for_selection : Proc(IShellFavoritesNameSpace*, Int16*, Win32cr::Foundation::HRESULT),
    delete_subscription_for_selection : Proc(IShellFavoritesNameSpace*, Int16*, Win32cr::Foundation::HRESULT),
    set_root : Proc(IShellFavoritesNameSpace*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellFavoritesNameSpace, lpVtbl : IShellFavoritesNameSpaceVtbl* do
    GUID = LibC::GUID.new(0x55136804_u32, 0xb2de_u16, 0x11d1_u16, StaticArray[0xb9_u8, 0xf2_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x8b_u8, 0xc5_u8, 0x47_u8])
    def query_interface(this : IShellFavoritesNameSpace*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellFavoritesNameSpace*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellFavoritesNameSpace*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellFavoritesNameSpace*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellFavoritesNameSpace*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellFavoritesNameSpace*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellFavoritesNameSpace*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def move_selection_up(this : IShellFavoritesNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_selection_up.call(this)
    end
    def move_selection_down(this : IShellFavoritesNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_selection_down.call(this)
    end
    def reset_sort(this : IShellFavoritesNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_sort.call(this)
    end
    def new_folder(this : IShellFavoritesNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.new_folder.call(this)
    end
    def synchronize(this : IShellFavoritesNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.synchronize.call(this)
    end
    def import(this : IShellFavoritesNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.import.call(this)
    end
    def export(this : IShellFavoritesNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.export.call(this)
    end
    def invoke_context_menu_command(this : IShellFavoritesNameSpace*, strCommand : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_context_menu_command.call(this, strCommand)
    end
    def move_selection_to(this : IShellFavoritesNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_selection_to.call(this)
    end
    def get_SubscriptionsEnabled(this : IShellFavoritesNameSpace*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_SubscriptionsEnabled.call(this, pBool)
    end
    def create_subscription_for_selection(this : IShellFavoritesNameSpace*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_subscription_for_selection.call(this, pBool)
    end
    def delete_subscription_for_selection(this : IShellFavoritesNameSpace*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_subscription_for_selection.call(this, pBool)
    end
    def set_root(this : IShellFavoritesNameSpace*, bstrFullPath : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_root.call(this, bstrFullPath)
    end

  end

  @[Extern]
  record IShellNameSpaceVtbl,
    query_interface : Proc(IShellNameSpace*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellNameSpace*, UInt32),
    release : Proc(IShellNameSpace*, UInt32),
    get_type_info_count : Proc(IShellNameSpace*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellNameSpace*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellNameSpace*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellNameSpace*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    move_selection_up : Proc(IShellNameSpace*, Win32cr::Foundation::HRESULT),
    move_selection_down : Proc(IShellNameSpace*, Win32cr::Foundation::HRESULT),
    reset_sort : Proc(IShellNameSpace*, Win32cr::Foundation::HRESULT),
    new_folder : Proc(IShellNameSpace*, Win32cr::Foundation::HRESULT),
    synchronize : Proc(IShellNameSpace*, Win32cr::Foundation::HRESULT),
    import : Proc(IShellNameSpace*, Win32cr::Foundation::HRESULT),
    export : Proc(IShellNameSpace*, Win32cr::Foundation::HRESULT),
    invoke_context_menu_command : Proc(IShellNameSpace*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    move_selection_to : Proc(IShellNameSpace*, Win32cr::Foundation::HRESULT),
    get_SubscriptionsEnabled : Proc(IShellNameSpace*, Int16*, Win32cr::Foundation::HRESULT),
    create_subscription_for_selection : Proc(IShellNameSpace*, Int16*, Win32cr::Foundation::HRESULT),
    delete_subscription_for_selection : Proc(IShellNameSpace*, Int16*, Win32cr::Foundation::HRESULT),
    set_root : Proc(IShellNameSpace*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_EnumOptions : Proc(IShellNameSpace*, Int32*, Win32cr::Foundation::HRESULT),
    put_EnumOptions : Proc(IShellNameSpace*, Int32, Win32cr::Foundation::HRESULT),
    get_SelectedItem : Proc(IShellNameSpace*, Void**, Win32cr::Foundation::HRESULT),
    put_SelectedItem : Proc(IShellNameSpace*, Void*, Win32cr::Foundation::HRESULT),
    get_Root : Proc(IShellNameSpace*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    put_Root : Proc(IShellNameSpace*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    get_Depth : Proc(IShellNameSpace*, Int32*, Win32cr::Foundation::HRESULT),
    put_Depth : Proc(IShellNameSpace*, Int32, Win32cr::Foundation::HRESULT),
    get_Mode : Proc(IShellNameSpace*, UInt32*, Win32cr::Foundation::HRESULT),
    put_Mode : Proc(IShellNameSpace*, UInt32, Win32cr::Foundation::HRESULT),
    get_Flags : Proc(IShellNameSpace*, UInt32*, Win32cr::Foundation::HRESULT),
    put_Flags : Proc(IShellNameSpace*, UInt32, Win32cr::Foundation::HRESULT),
    put_TVFlags : Proc(IShellNameSpace*, UInt32, Win32cr::Foundation::HRESULT),
    get_TVFlags : Proc(IShellNameSpace*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Columns : Proc(IShellNameSpace*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Columns : Proc(IShellNameSpace*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_CountViewTypes : Proc(IShellNameSpace*, Int32*, Win32cr::Foundation::HRESULT),
    set_view_type : Proc(IShellNameSpace*, Int32, Win32cr::Foundation::HRESULT),
    selected_items : Proc(IShellNameSpace*, Void**, Win32cr::Foundation::HRESULT),
    expand : Proc(IShellNameSpace*, Win32cr::System::Com::VARIANT, Int32, Win32cr::Foundation::HRESULT),
    unselect_all : Proc(IShellNameSpace*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellNameSpace, lpVtbl : IShellNameSpaceVtbl* do
    GUID = LibC::GUID.new(0xe572d3c9_u32, 0x37be_u16, 0x4ae2_u16, StaticArray[0x82_u8, 0x5d_u8, 0xd5_u8, 0x21_u8, 0x76_u8, 0x3e_u8, 0x31_u8, 0x8_u8])
    def query_interface(this : IShellNameSpace*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellNameSpace*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellNameSpace*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellNameSpace*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellNameSpace*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellNameSpace*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellNameSpace*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def move_selection_up(this : IShellNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_selection_up.call(this)
    end
    def move_selection_down(this : IShellNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_selection_down.call(this)
    end
    def reset_sort(this : IShellNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset_sort.call(this)
    end
    def new_folder(this : IShellNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.new_folder.call(this)
    end
    def synchronize(this : IShellNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.synchronize.call(this)
    end
    def import(this : IShellNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.import.call(this)
    end
    def export(this : IShellNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.export.call(this)
    end
    def invoke_context_menu_command(this : IShellNameSpace*, strCommand : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_context_menu_command.call(this, strCommand)
    end
    def move_selection_to(this : IShellNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_selection_to.call(this)
    end
    def get_SubscriptionsEnabled(this : IShellNameSpace*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_SubscriptionsEnabled.call(this, pBool)
    end
    def create_subscription_for_selection(this : IShellNameSpace*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_subscription_for_selection.call(this, pBool)
    end
    def delete_subscription_for_selection(this : IShellNameSpace*, pBool : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_subscription_for_selection.call(this, pBool)
    end
    def set_root(this : IShellNameSpace*, bstrFullPath : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_root.call(this, bstrFullPath)
    end
    def get_EnumOptions(this : IShellNameSpace*, pgrfEnumFlags : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_EnumOptions.call(this, pgrfEnumFlags)
    end
    def put_EnumOptions(this : IShellNameSpace*, lVal : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_EnumOptions.call(this, lVal)
    end
    def get_SelectedItem(this : IShellNameSpace*, pItem : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_SelectedItem.call(this, pItem)
    end
    def put_SelectedItem(this : IShellNameSpace*, pItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_SelectedItem.call(this, pItem)
    end
    def get_Root(this : IShellNameSpace*, pvar : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Root.call(this, pvar)
    end
    def put_Root(this : IShellNameSpace*, var : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Root.call(this, var)
    end
    def get_Depth(this : IShellNameSpace*, piDepth : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Depth.call(this, piDepth)
    end
    def put_Depth(this : IShellNameSpace*, iDepth : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Depth.call(this, iDepth)
    end
    def get_Mode(this : IShellNameSpace*, puMode : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Mode.call(this, puMode)
    end
    def put_Mode(this : IShellNameSpace*, uMode : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Mode.call(this, uMode)
    end
    def get_Flags(this : IShellNameSpace*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Flags.call(this, pdwFlags)
    end
    def put_Flags(this : IShellNameSpace*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Flags.call(this, dwFlags)
    end
    def put_TVFlags(this : IShellNameSpace*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_TVFlags.call(this, dwFlags)
    end
    def get_TVFlags(this : IShellNameSpace*, dwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_TVFlags.call(this, dwFlags)
    end
    def get_Columns(this : IShellNameSpace*, bstrColumns : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Columns.call(this, bstrColumns)
    end
    def put_Columns(this : IShellNameSpace*, bstrColumns : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Columns.call(this, bstrColumns)
    end
    def get_CountViewTypes(this : IShellNameSpace*, piTypes : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_CountViewTypes.call(this, piTypes)
    end
    def set_view_type(this : IShellNameSpace*, iType : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_view_type.call(this, iType)
    end
    def selected_items(this : IShellNameSpace*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.selected_items.call(this, ppid)
    end
    def expand(this : IShellNameSpace*, var : Win32cr::System::Com::VARIANT, iDepth : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.expand.call(this, var, iDepth)
    end
    def unselect_all(this : IShellNameSpace*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unselect_all.call(this)
    end

  end

  @[Extern]
  record IScriptErrorListVtbl,
    query_interface : Proc(IScriptErrorList*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IScriptErrorList*, UInt32),
    release : Proc(IScriptErrorList*, UInt32),
    get_type_info_count : Proc(IScriptErrorList*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IScriptErrorList*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IScriptErrorList*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IScriptErrorList*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    advanceError : Proc(IScriptErrorList*, Win32cr::Foundation::HRESULT),
    retreatError : Proc(IScriptErrorList*, Win32cr::Foundation::HRESULT),
    canAdvanceError : Proc(IScriptErrorList*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    canRetreatError : Proc(IScriptErrorList*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    getErrorLine : Proc(IScriptErrorList*, Int32*, Win32cr::Foundation::HRESULT),
    getErrorChar : Proc(IScriptErrorList*, Int32*, Win32cr::Foundation::HRESULT),
    getErrorCode : Proc(IScriptErrorList*, Int32*, Win32cr::Foundation::HRESULT),
    getErrorMsg : Proc(IScriptErrorList*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    getErrorUrl : Proc(IScriptErrorList*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    getAlwaysShowLockState : Proc(IScriptErrorList*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    getDetailsPaneOpen : Proc(IScriptErrorList*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    setDetailsPaneOpen : Proc(IScriptErrorList*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    getPerErrorDisplay : Proc(IScriptErrorList*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    setPerErrorDisplay : Proc(IScriptErrorList*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IScriptErrorList, lpVtbl : IScriptErrorListVtbl* do
    GUID = LibC::GUID.new(0xf3470f24_u32, 0x15fd_u16, 0x11d2_u16, StaticArray[0xbb_u8, 0x2e_u8, 0x0_u8, 0x80_u8, 0x5f_u8, 0xf7_u8, 0xef_u8, 0xca_u8])
    def query_interface(this : IScriptErrorList*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IScriptErrorList*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IScriptErrorList*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IScriptErrorList*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IScriptErrorList*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IScriptErrorList*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IScriptErrorList*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def advanceError(this : IScriptErrorList*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advanceError.call(this)
    end
    def retreatError(this : IScriptErrorList*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.retreatError.call(this)
    end
    def canAdvanceError(this : IScriptErrorList*, pfCanAdvance : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.canAdvanceError.call(this, pfCanAdvance)
    end
    def canRetreatError(this : IScriptErrorList*, pfCanRetreat : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.canRetreatError.call(this, pfCanRetreat)
    end
    def getErrorLine(this : IScriptErrorList*, plLine : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.getErrorLine.call(this, plLine)
    end
    def getErrorChar(this : IScriptErrorList*, plChar : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.getErrorChar.call(this, plChar)
    end
    def getErrorCode(this : IScriptErrorList*, plCode : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.getErrorCode.call(this, plCode)
    end
    def getErrorMsg(this : IScriptErrorList*, pstr : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.getErrorMsg.call(this, pstr)
    end
    def getErrorUrl(this : IScriptErrorList*, pstr : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.getErrorUrl.call(this, pstr)
    end
    def getAlwaysShowLockState(this : IScriptErrorList*, pfAlwaysShowLocked : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.getAlwaysShowLockState.call(this, pfAlwaysShowLocked)
    end
    def getDetailsPaneOpen(this : IScriptErrorList*, pfDetailsPaneOpen : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.getDetailsPaneOpen.call(this, pfDetailsPaneOpen)
    end
    def setDetailsPaneOpen(this : IScriptErrorList*, fDetailsPaneOpen : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.setDetailsPaneOpen.call(this, fDetailsPaneOpen)
    end
    def getPerErrorDisplay(this : IScriptErrorList*, pfPerErrorDisplay : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.getPerErrorDisplay.call(this, pfPerErrorDisplay)
    end
    def setPerErrorDisplay(this : IScriptErrorList*, fPerErrorDisplay : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.setPerErrorDisplay.call(this, fPerErrorDisplay)
    end

  end

  @[Extern]
  record IFolderViewOCVtbl,
    query_interface : Proc(IFolderViewOC*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFolderViewOC*, UInt32),
    release : Proc(IFolderViewOC*, UInt32),
    get_type_info_count : Proc(IFolderViewOC*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IFolderViewOC*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IFolderViewOC*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IFolderViewOC*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    set_folder_view : Proc(IFolderViewOC*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFolderViewOC, lpVtbl : IFolderViewOCVtbl* do
    GUID = LibC::GUID.new(0x9ba05970_u32, 0xf6a8_u16, 0x11cf_u16, StaticArray[0xa4_u8, 0x42_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x8f_u8, 0x39_u8])
    def query_interface(this : IFolderViewOC*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFolderViewOC*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFolderViewOC*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IFolderViewOC*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IFolderViewOC*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IFolderViewOC*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IFolderViewOC*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def set_folder_view(this : IFolderViewOC*, pdisp : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_folder_view.call(this, pdisp)
    end

  end

  @[Extern]
  record DShellFolderViewEventsVtbl,
    query_interface : Proc(DShellFolderViewEvents*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(DShellFolderViewEvents*, UInt32),
    release : Proc(DShellFolderViewEvents*, UInt32),
    get_type_info_count : Proc(DShellFolderViewEvents*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(DShellFolderViewEvents*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(DShellFolderViewEvents*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(DShellFolderViewEvents*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record DShellFolderViewEvents, lpVtbl : DShellFolderViewEventsVtbl* do
    GUID = LibC::GUID.new(0x62112aa2_u32, 0xebe4_u16, 0x11cf_u16, StaticArray[0xa5_u8, 0xfb_u8, 0x0_u8, 0x20_u8, 0xaf_u8, 0xe7_u8, 0x29_u8, 0x2d_u8])
    def query_interface(this : DShellFolderViewEvents*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : DShellFolderViewEvents*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : DShellFolderViewEvents*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : DShellFolderViewEvents*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : DShellFolderViewEvents*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : DShellFolderViewEvents*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : DShellFolderViewEvents*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end

  end

  @[Extern]
  record DFConstraintVtbl,
    query_interface : Proc(DFConstraint*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(DFConstraint*, UInt32),
    release : Proc(DFConstraint*, UInt32),
    get_type_info_count : Proc(DFConstraint*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(DFConstraint*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(DFConstraint*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(DFConstraint*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Name : Proc(DFConstraint*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Value : Proc(DFConstraint*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record DFConstraint, lpVtbl : DFConstraintVtbl* do
    GUID = LibC::GUID.new(0x4a3df050_u32, 0x23bd_u16, 0x11d2_u16, StaticArray[0x93_u8, 0x9f_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x1e_u8, 0xed_u8, 0xba_u8])
    def query_interface(this : DFConstraint*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : DFConstraint*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : DFConstraint*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : DFConstraint*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : DFConstraint*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : DFConstraint*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : DFConstraint*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Name(this : DFConstraint*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Name.call(this, pbs)
    end
    def get_Value(this : DFConstraint*, pv : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Value.call(this, pv)
    end

  end

  @[Extern]
  record FolderItemVtbl,
    query_interface : Proc(FolderItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(FolderItem*, UInt32),
    release : Proc(FolderItem*, UInt32),
    get_type_info_count : Proc(FolderItem*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(FolderItem*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(FolderItem*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(FolderItem*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(FolderItem*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(FolderItem*, Void**, Win32cr::Foundation::HRESULT),
    get_Name : Proc(FolderItem*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Name : Proc(FolderItem*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Path : Proc(FolderItem*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_GetLink : Proc(FolderItem*, Void**, Win32cr::Foundation::HRESULT),
    get_GetFolder : Proc(FolderItem*, Void**, Win32cr::Foundation::HRESULT),
    get_IsLink : Proc(FolderItem*, Int16*, Win32cr::Foundation::HRESULT),
    get_IsFolder : Proc(FolderItem*, Int16*, Win32cr::Foundation::HRESULT),
    get_IsFileSystem : Proc(FolderItem*, Int16*, Win32cr::Foundation::HRESULT),
    get_IsBrowsable : Proc(FolderItem*, Int16*, Win32cr::Foundation::HRESULT),
    get_ModifyDate : Proc(FolderItem*, Float64*, Win32cr::Foundation::HRESULT),
    put_ModifyDate : Proc(FolderItem*, Float64, Win32cr::Foundation::HRESULT),
    get_Size : Proc(FolderItem*, Int32*, Win32cr::Foundation::HRESULT),
    get_Type : Proc(FolderItem*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    verbs : Proc(FolderItem*, Void**, Win32cr::Foundation::HRESULT),
    invoke_verb : Proc(FolderItem*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT)


  @[Extern]
  record FolderItem, lpVtbl : FolderItemVtbl* do
    GUID = LibC::GUID.new(0xfac32c80_u32, 0xcbe4_u16, 0x11ce_u16, StaticArray[0x83_u8, 0x50_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : FolderItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : FolderItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : FolderItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : FolderItem*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : FolderItem*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : FolderItem*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : FolderItem*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Application(this : FolderItem*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : FolderItem*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def get_Name(this : FolderItem*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Name.call(this, pbs)
    end
    def put_Name(this : FolderItem*, bs : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Name.call(this, bs)
    end
    def get_Path(this : FolderItem*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Path.call(this, pbs)
    end
    def get_GetLink(this : FolderItem*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_GetLink.call(this, ppid)
    end
    def get_GetFolder(this : FolderItem*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_GetFolder.call(this, ppid)
    end
    def get_IsLink(this : FolderItem*, pb : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsLink.call(this, pb)
    end
    def get_IsFolder(this : FolderItem*, pb : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsFolder.call(this, pb)
    end
    def get_IsFileSystem(this : FolderItem*, pb : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsFileSystem.call(this, pb)
    end
    def get_IsBrowsable(this : FolderItem*, pb : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsBrowsable.call(this, pb)
    end
    def get_ModifyDate(this : FolderItem*, pdt : Float64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ModifyDate.call(this, pdt)
    end
    def put_ModifyDate(this : FolderItem*, dt : Float64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_ModifyDate.call(this, dt)
    end
    def get_Size(this : FolderItem*, pul : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Size.call(this, pul)
    end
    def get_Type(this : FolderItem*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Type.call(this, pbs)
    end
    def verbs(this : FolderItem*, ppfic : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.verbs.call(this, ppfic)
    end
    def invoke_verb(this : FolderItem*, vVerb : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_verb.call(this, vVerb)
    end

  end

  @[Extern]
  record FolderItemsVtbl,
    query_interface : Proc(FolderItems*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(FolderItems*, UInt32),
    release : Proc(FolderItems*, UInt32),
    get_type_info_count : Proc(FolderItems*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(FolderItems*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(FolderItems*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(FolderItems*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Count : Proc(FolderItems*, Int32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(FolderItems*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(FolderItems*, Void**, Win32cr::Foundation::HRESULT),
    item : Proc(FolderItems*, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    _new_enum : Proc(FolderItems*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record FolderItems, lpVtbl : FolderItemsVtbl* do
    GUID = LibC::GUID.new(0x744129e0_u32, 0xcbe5_u16, 0x11ce_u16, StaticArray[0x83_u8, 0x50_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : FolderItems*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : FolderItems*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : FolderItems*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : FolderItems*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : FolderItems*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : FolderItems*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : FolderItems*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Count(this : FolderItems*, plCount : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Count.call(this, plCount)
    end
    def get_Application(this : FolderItems*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : FolderItems*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def item(this : FolderItems*, index : Win32cr::System::Com::VARIANT, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item.call(this, index, ppid)
    end
    def _new_enum(this : FolderItems*, ppunk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._new_enum.call(this, ppunk)
    end

  end

  @[Extern]
  record FolderItemVerbVtbl,
    query_interface : Proc(FolderItemVerb*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(FolderItemVerb*, UInt32),
    release : Proc(FolderItemVerb*, UInt32),
    get_type_info_count : Proc(FolderItemVerb*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(FolderItemVerb*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(FolderItemVerb*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(FolderItemVerb*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(FolderItemVerb*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(FolderItemVerb*, Void**, Win32cr::Foundation::HRESULT),
    get_Name : Proc(FolderItemVerb*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    do_it : Proc(FolderItemVerb*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record FolderItemVerb, lpVtbl : FolderItemVerbVtbl* do
    GUID = LibC::GUID.new(0x8ec3e00_u32, 0x50b0_u16, 0x11cf_u16, StaticArray[0x96_u8, 0xc_u8, 0x0_u8, 0x80_u8, 0xc7_u8, 0xf4_u8, 0xee_u8, 0x85_u8])
    def query_interface(this : FolderItemVerb*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : FolderItemVerb*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : FolderItemVerb*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : FolderItemVerb*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : FolderItemVerb*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : FolderItemVerb*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : FolderItemVerb*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Application(this : FolderItemVerb*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : FolderItemVerb*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def get_Name(this : FolderItemVerb*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Name.call(this, pbs)
    end
    def do_it(this : FolderItemVerb*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.do_it.call(this)
    end

  end

  @[Extern]
  record FolderItemVerbsVtbl,
    query_interface : Proc(FolderItemVerbs*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(FolderItemVerbs*, UInt32),
    release : Proc(FolderItemVerbs*, UInt32),
    get_type_info_count : Proc(FolderItemVerbs*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(FolderItemVerbs*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(FolderItemVerbs*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(FolderItemVerbs*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Count : Proc(FolderItemVerbs*, Int32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(FolderItemVerbs*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(FolderItemVerbs*, Void**, Win32cr::Foundation::HRESULT),
    item : Proc(FolderItemVerbs*, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    _new_enum : Proc(FolderItemVerbs*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record FolderItemVerbs, lpVtbl : FolderItemVerbsVtbl* do
    GUID = LibC::GUID.new(0x1f8352c0_u32, 0x50b0_u16, 0x11cf_u16, StaticArray[0x96_u8, 0xc_u8, 0x0_u8, 0x80_u8, 0xc7_u8, 0xf4_u8, 0xee_u8, 0x85_u8])
    def query_interface(this : FolderItemVerbs*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : FolderItemVerbs*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : FolderItemVerbs*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : FolderItemVerbs*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : FolderItemVerbs*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : FolderItemVerbs*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : FolderItemVerbs*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Count(this : FolderItemVerbs*, plCount : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Count.call(this, plCount)
    end
    def get_Application(this : FolderItemVerbs*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : FolderItemVerbs*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def item(this : FolderItemVerbs*, index : Win32cr::System::Com::VARIANT, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item.call(this, index, ppid)
    end
    def _new_enum(this : FolderItemVerbs*, ppunk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._new_enum.call(this, ppunk)
    end

  end

  @[Extern]
  record FolderVtbl,
    query_interface : Proc(Folder*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(Folder*, UInt32),
    release : Proc(Folder*, UInt32),
    get_type_info_count : Proc(Folder*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(Folder*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(Folder*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(Folder*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Title : Proc(Folder*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(Folder*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(Folder*, Void**, Win32cr::Foundation::HRESULT),
    get_ParentFolder : Proc(Folder*, Void**, Win32cr::Foundation::HRESULT),
    items : Proc(Folder*, Void**, Win32cr::Foundation::HRESULT),
    parse_name : Proc(Folder*, Win32cr::Foundation::BSTR, Void**, Win32cr::Foundation::HRESULT),
    new_folder : Proc(Folder*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    move_here : Proc(Folder*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    copy_here : Proc(Folder*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    get_details_of : Proc(Folder*, Win32cr::System::Com::VARIANT, Int32, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record Folder, lpVtbl : FolderVtbl* do
    GUID = LibC::GUID.new(0xbbcbde60_u32, 0xc3ff_u16, 0x11ce_u16, StaticArray[0x83_u8, 0x50_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : Folder*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : Folder*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : Folder*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : Folder*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : Folder*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : Folder*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : Folder*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Title(this : Folder*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Title.call(this, pbs)
    end
    def get_Application(this : Folder*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : Folder*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def get_ParentFolder(this : Folder*, ppsf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ParentFolder.call(this, ppsf)
    end
    def items(this : Folder*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.items.call(this, ppid)
    end
    def parse_name(this : Folder*, bName : Win32cr::Foundation::BSTR, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.parse_name.call(this, bName, ppid)
    end
    def new_folder(this : Folder*, bName : Win32cr::Foundation::BSTR, vOptions : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.new_folder.call(this, bName, vOptions)
    end
    def move_here(this : Folder*, vItem : Win32cr::System::Com::VARIANT, vOptions : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_here.call(this, vItem, vOptions)
    end
    def copy_here(this : Folder*, vItem : Win32cr::System::Com::VARIANT, vOptions : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_here.call(this, vItem, vOptions)
    end
    def get_details_of(this : Folder*, vItem : Win32cr::System::Com::VARIANT, iColumn : Int32, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_details_of.call(this, vItem, iColumn, pbs)
    end

  end

  @[Extern]
  record Folder2Vtbl,
    query_interface : Proc(Folder2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(Folder2*, UInt32),
    release : Proc(Folder2*, UInt32),
    get_type_info_count : Proc(Folder2*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(Folder2*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(Folder2*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(Folder2*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Title : Proc(Folder2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(Folder2*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(Folder2*, Void**, Win32cr::Foundation::HRESULT),
    get_ParentFolder : Proc(Folder2*, Void**, Win32cr::Foundation::HRESULT),
    items : Proc(Folder2*, Void**, Win32cr::Foundation::HRESULT),
    parse_name : Proc(Folder2*, Win32cr::Foundation::BSTR, Void**, Win32cr::Foundation::HRESULT),
    new_folder : Proc(Folder2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    move_here : Proc(Folder2*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    copy_here : Proc(Folder2*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    get_details_of : Proc(Folder2*, Win32cr::System::Com::VARIANT, Int32, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Self : Proc(Folder2*, Void**, Win32cr::Foundation::HRESULT),
    get_OfflineStatus : Proc(Folder2*, Int32*, Win32cr::Foundation::HRESULT),
    synchronize : Proc(Folder2*, Win32cr::Foundation::HRESULT),
    get_HaveToShowWebViewBarricade : Proc(Folder2*, Int16*, Win32cr::Foundation::HRESULT),
    dismissed_web_view_barricade : Proc(Folder2*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record Folder2, lpVtbl : Folder2Vtbl* do
    GUID = LibC::GUID.new(0xf0d2d8ef_u32, 0x3890_u16, 0x11d2_u16, StaticArray[0xbf_u8, 0x8b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb9_u8, 0x36_u8, 0x61_u8])
    def query_interface(this : Folder2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : Folder2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : Folder2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : Folder2*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : Folder2*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : Folder2*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : Folder2*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Title(this : Folder2*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Title.call(this, pbs)
    end
    def get_Application(this : Folder2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : Folder2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def get_ParentFolder(this : Folder2*, ppsf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ParentFolder.call(this, ppsf)
    end
    def items(this : Folder2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.items.call(this, ppid)
    end
    def parse_name(this : Folder2*, bName : Win32cr::Foundation::BSTR, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.parse_name.call(this, bName, ppid)
    end
    def new_folder(this : Folder2*, bName : Win32cr::Foundation::BSTR, vOptions : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.new_folder.call(this, bName, vOptions)
    end
    def move_here(this : Folder2*, vItem : Win32cr::System::Com::VARIANT, vOptions : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_here.call(this, vItem, vOptions)
    end
    def copy_here(this : Folder2*, vItem : Win32cr::System::Com::VARIANT, vOptions : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_here.call(this, vItem, vOptions)
    end
    def get_details_of(this : Folder2*, vItem : Win32cr::System::Com::VARIANT, iColumn : Int32, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_details_of.call(this, vItem, iColumn, pbs)
    end
    def get_Self(this : Folder2*, ppfi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Self.call(this, ppfi)
    end
    def get_OfflineStatus(this : Folder2*, pul : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_OfflineStatus.call(this, pul)
    end
    def synchronize(this : Folder2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.synchronize.call(this)
    end
    def get_HaveToShowWebViewBarricade(this : Folder2*, pbHaveToShowWebViewBarricade : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_HaveToShowWebViewBarricade.call(this, pbHaveToShowWebViewBarricade)
    end
    def dismissed_web_view_barricade(this : Folder2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.dismissed_web_view_barricade.call(this)
    end

  end

  @[Extern]
  record Folder3Vtbl,
    query_interface : Proc(Folder3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(Folder3*, UInt32),
    release : Proc(Folder3*, UInt32),
    get_type_info_count : Proc(Folder3*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(Folder3*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(Folder3*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(Folder3*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Title : Proc(Folder3*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(Folder3*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(Folder3*, Void**, Win32cr::Foundation::HRESULT),
    get_ParentFolder : Proc(Folder3*, Void**, Win32cr::Foundation::HRESULT),
    items : Proc(Folder3*, Void**, Win32cr::Foundation::HRESULT),
    parse_name : Proc(Folder3*, Win32cr::Foundation::BSTR, Void**, Win32cr::Foundation::HRESULT),
    new_folder : Proc(Folder3*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    move_here : Proc(Folder3*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    copy_here : Proc(Folder3*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    get_details_of : Proc(Folder3*, Win32cr::System::Com::VARIANT, Int32, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Self : Proc(Folder3*, Void**, Win32cr::Foundation::HRESULT),
    get_OfflineStatus : Proc(Folder3*, Int32*, Win32cr::Foundation::HRESULT),
    synchronize : Proc(Folder3*, Win32cr::Foundation::HRESULT),
    get_HaveToShowWebViewBarricade : Proc(Folder3*, Int16*, Win32cr::Foundation::HRESULT),
    dismissed_web_view_barricade : Proc(Folder3*, Win32cr::Foundation::HRESULT),
    get_ShowWebViewBarricade : Proc(Folder3*, Int16*, Win32cr::Foundation::HRESULT),
    put_ShowWebViewBarricade : Proc(Folder3*, Int16, Win32cr::Foundation::HRESULT)


  @[Extern]
  record Folder3, lpVtbl : Folder3Vtbl* do
    GUID = LibC::GUID.new(0xa7ae5f64_u32, 0xc4d7_u16, 0x4d7f_u16, StaticArray[0x93_u8, 0x7_u8, 0x4d_u8, 0x24_u8, 0xee_u8, 0x54_u8, 0xb8_u8, 0x41_u8])
    def query_interface(this : Folder3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : Folder3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : Folder3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : Folder3*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : Folder3*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : Folder3*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : Folder3*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Title(this : Folder3*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Title.call(this, pbs)
    end
    def get_Application(this : Folder3*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : Folder3*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def get_ParentFolder(this : Folder3*, ppsf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ParentFolder.call(this, ppsf)
    end
    def items(this : Folder3*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.items.call(this, ppid)
    end
    def parse_name(this : Folder3*, bName : Win32cr::Foundation::BSTR, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.parse_name.call(this, bName, ppid)
    end
    def new_folder(this : Folder3*, bName : Win32cr::Foundation::BSTR, vOptions : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.new_folder.call(this, bName, vOptions)
    end
    def move_here(this : Folder3*, vItem : Win32cr::System::Com::VARIANT, vOptions : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_here.call(this, vItem, vOptions)
    end
    def copy_here(this : Folder3*, vItem : Win32cr::System::Com::VARIANT, vOptions : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.copy_here.call(this, vItem, vOptions)
    end
    def get_details_of(this : Folder3*, vItem : Win32cr::System::Com::VARIANT, iColumn : Int32, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_details_of.call(this, vItem, iColumn, pbs)
    end
    def get_Self(this : Folder3*, ppfi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Self.call(this, ppfi)
    end
    def get_OfflineStatus(this : Folder3*, pul : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_OfflineStatus.call(this, pul)
    end
    def synchronize(this : Folder3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.synchronize.call(this)
    end
    def get_HaveToShowWebViewBarricade(this : Folder3*, pbHaveToShowWebViewBarricade : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_HaveToShowWebViewBarricade.call(this, pbHaveToShowWebViewBarricade)
    end
    def dismissed_web_view_barricade(this : Folder3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.dismissed_web_view_barricade.call(this)
    end
    def get_ShowWebViewBarricade(this : Folder3*, pbShowWebViewBarricade : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ShowWebViewBarricade.call(this, pbShowWebViewBarricade)
    end
    def put_ShowWebViewBarricade(this : Folder3*, bShowWebViewBarricade : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_ShowWebViewBarricade.call(this, bShowWebViewBarricade)
    end

  end

  @[Extern]
  record FolderItem2Vtbl,
    query_interface : Proc(FolderItem2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(FolderItem2*, UInt32),
    release : Proc(FolderItem2*, UInt32),
    get_type_info_count : Proc(FolderItem2*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(FolderItem2*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(FolderItem2*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(FolderItem2*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(FolderItem2*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(FolderItem2*, Void**, Win32cr::Foundation::HRESULT),
    get_Name : Proc(FolderItem2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Name : Proc(FolderItem2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Path : Proc(FolderItem2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_GetLink : Proc(FolderItem2*, Void**, Win32cr::Foundation::HRESULT),
    get_GetFolder : Proc(FolderItem2*, Void**, Win32cr::Foundation::HRESULT),
    get_IsLink : Proc(FolderItem2*, Int16*, Win32cr::Foundation::HRESULT),
    get_IsFolder : Proc(FolderItem2*, Int16*, Win32cr::Foundation::HRESULT),
    get_IsFileSystem : Proc(FolderItem2*, Int16*, Win32cr::Foundation::HRESULT),
    get_IsBrowsable : Proc(FolderItem2*, Int16*, Win32cr::Foundation::HRESULT),
    get_ModifyDate : Proc(FolderItem2*, Float64*, Win32cr::Foundation::HRESULT),
    put_ModifyDate : Proc(FolderItem2*, Float64, Win32cr::Foundation::HRESULT),
    get_Size : Proc(FolderItem2*, Int32*, Win32cr::Foundation::HRESULT),
    get_Type : Proc(FolderItem2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    verbs : Proc(FolderItem2*, Void**, Win32cr::Foundation::HRESULT),
    invoke_verb : Proc(FolderItem2*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    invoke_verb_ex : Proc(FolderItem2*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    extended_property : Proc(FolderItem2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record FolderItem2, lpVtbl : FolderItem2Vtbl* do
    GUID = LibC::GUID.new(0xedc817aa_u32, 0x92b8_u16, 0x11d1_u16, StaticArray[0xb0_u8, 0x75_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc3_u8, 0x3a_u8, 0xa5_u8])
    def query_interface(this : FolderItem2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : FolderItem2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : FolderItem2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : FolderItem2*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : FolderItem2*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : FolderItem2*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : FolderItem2*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Application(this : FolderItem2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : FolderItem2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def get_Name(this : FolderItem2*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Name.call(this, pbs)
    end
    def put_Name(this : FolderItem2*, bs : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Name.call(this, bs)
    end
    def get_Path(this : FolderItem2*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Path.call(this, pbs)
    end
    def get_GetLink(this : FolderItem2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_GetLink.call(this, ppid)
    end
    def get_GetFolder(this : FolderItem2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_GetFolder.call(this, ppid)
    end
    def get_IsLink(this : FolderItem2*, pb : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsLink.call(this, pb)
    end
    def get_IsFolder(this : FolderItem2*, pb : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsFolder.call(this, pb)
    end
    def get_IsFileSystem(this : FolderItem2*, pb : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsFileSystem.call(this, pb)
    end
    def get_IsBrowsable(this : FolderItem2*, pb : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IsBrowsable.call(this, pb)
    end
    def get_ModifyDate(this : FolderItem2*, pdt : Float64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ModifyDate.call(this, pdt)
    end
    def put_ModifyDate(this : FolderItem2*, dt : Float64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_ModifyDate.call(this, dt)
    end
    def get_Size(this : FolderItem2*, pul : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Size.call(this, pul)
    end
    def get_Type(this : FolderItem2*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Type.call(this, pbs)
    end
    def verbs(this : FolderItem2*, ppfic : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.verbs.call(this, ppfic)
    end
    def invoke_verb(this : FolderItem2*, vVerb : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_verb.call(this, vVerb)
    end
    def invoke_verb_ex(this : FolderItem2*, vVerb : Win32cr::System::Com::VARIANT, vArgs : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_verb_ex.call(this, vVerb, vArgs)
    end
    def extended_property(this : FolderItem2*, bstrPropName : Win32cr::Foundation::BSTR, pvRet : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.extended_property.call(this, bstrPropName, pvRet)
    end

  end

  @[Extern]
  record FolderItems2Vtbl,
    query_interface : Proc(FolderItems2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(FolderItems2*, UInt32),
    release : Proc(FolderItems2*, UInt32),
    get_type_info_count : Proc(FolderItems2*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(FolderItems2*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(FolderItems2*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(FolderItems2*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Count : Proc(FolderItems2*, Int32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(FolderItems2*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(FolderItems2*, Void**, Win32cr::Foundation::HRESULT),
    item : Proc(FolderItems2*, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    _new_enum : Proc(FolderItems2*, Void**, Win32cr::Foundation::HRESULT),
    invoke_verb_ex : Proc(FolderItems2*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT)


  @[Extern]
  record FolderItems2, lpVtbl : FolderItems2Vtbl* do
    GUID = LibC::GUID.new(0xc94f0ad0_u32, 0xf363_u16, 0x11d2_u16, StaticArray[0xa3_u8, 0x27_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x8e_u8, 0xec_u8, 0x7f_u8])
    def query_interface(this : FolderItems2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : FolderItems2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : FolderItems2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : FolderItems2*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : FolderItems2*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : FolderItems2*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : FolderItems2*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Count(this : FolderItems2*, plCount : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Count.call(this, plCount)
    end
    def get_Application(this : FolderItems2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : FolderItems2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def item(this : FolderItems2*, index : Win32cr::System::Com::VARIANT, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item.call(this, index, ppid)
    end
    def _new_enum(this : FolderItems2*, ppunk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._new_enum.call(this, ppunk)
    end
    def invoke_verb_ex(this : FolderItems2*, vVerb : Win32cr::System::Com::VARIANT, vArgs : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_verb_ex.call(this, vVerb, vArgs)
    end

  end

  @[Extern]
  record FolderItems3Vtbl,
    query_interface : Proc(FolderItems3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(FolderItems3*, UInt32),
    release : Proc(FolderItems3*, UInt32),
    get_type_info_count : Proc(FolderItems3*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(FolderItems3*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(FolderItems3*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(FolderItems3*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Count : Proc(FolderItems3*, Int32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(FolderItems3*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(FolderItems3*, Void**, Win32cr::Foundation::HRESULT),
    item : Proc(FolderItems3*, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    _new_enum : Proc(FolderItems3*, Void**, Win32cr::Foundation::HRESULT),
    invoke_verb_ex : Proc(FolderItems3*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    filter : Proc(FolderItems3*, Int32, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Verbs : Proc(FolderItems3*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record FolderItems3, lpVtbl : FolderItems3Vtbl* do
    GUID = LibC::GUID.new(0xeaa7c309_u32, 0xbbec_u16, 0x49d5_u16, StaticArray[0x82_u8, 0x1d_u8, 0x64_u8, 0xd9_u8, 0x66_u8, 0xcb_u8, 0x66_u8, 0x7f_u8])
    def query_interface(this : FolderItems3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : FolderItems3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : FolderItems3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : FolderItems3*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : FolderItems3*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : FolderItems3*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : FolderItems3*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Count(this : FolderItems3*, plCount : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Count.call(this, plCount)
    end
    def get_Application(this : FolderItems3*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : FolderItems3*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def item(this : FolderItems3*, index : Win32cr::System::Com::VARIANT, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.item.call(this, index, ppid)
    end
    def _new_enum(this : FolderItems3*, ppunk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._new_enum.call(this, ppunk)
    end
    def invoke_verb_ex(this : FolderItems3*, vVerb : Win32cr::System::Com::VARIANT, vArgs : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_verb_ex.call(this, vVerb, vArgs)
    end
    def filter(this : FolderItems3*, grfFlags : Int32, bstrFileSpec : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.filter.call(this, grfFlags, bstrFileSpec)
    end
    def get_Verbs(this : FolderItems3*, ppfic : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Verbs.call(this, ppfic)
    end

  end

  @[Extern]
  record IShellLinkDualVtbl,
    query_interface : Proc(IShellLinkDual*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellLinkDual*, UInt32),
    release : Proc(IShellLinkDual*, UInt32),
    get_type_info_count : Proc(IShellLinkDual*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellLinkDual*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellLinkDual*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellLinkDual*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Path : Proc(IShellLinkDual*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Path : Proc(IShellLinkDual*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Description : Proc(IShellLinkDual*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Description : Proc(IShellLinkDual*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_WorkingDirectory : Proc(IShellLinkDual*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_WorkingDirectory : Proc(IShellLinkDual*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Arguments : Proc(IShellLinkDual*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Arguments : Proc(IShellLinkDual*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Hotkey : Proc(IShellLinkDual*, Int32*, Win32cr::Foundation::HRESULT),
    put_Hotkey : Proc(IShellLinkDual*, Int32, Win32cr::Foundation::HRESULT),
    get_ShowCommand : Proc(IShellLinkDual*, Int32*, Win32cr::Foundation::HRESULT),
    put_ShowCommand : Proc(IShellLinkDual*, Int32, Win32cr::Foundation::HRESULT),
    resolve : Proc(IShellLinkDual*, Int32, Win32cr::Foundation::HRESULT),
    get_icon_location : Proc(IShellLinkDual*, Win32cr::Foundation::BSTR*, Int32*, Win32cr::Foundation::HRESULT),
    set_icon_location : Proc(IShellLinkDual*, Win32cr::Foundation::BSTR, Int32, Win32cr::Foundation::HRESULT),
    save : Proc(IShellLinkDual*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellLinkDual, lpVtbl : IShellLinkDualVtbl* do
    GUID = LibC::GUID.new(0x88a05c00_u32, 0xf000_u16, 0x11ce_u16, StaticArray[0x83_u8, 0x50_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : IShellLinkDual*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellLinkDual*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellLinkDual*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellLinkDual*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellLinkDual*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellLinkDual*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellLinkDual*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Path(this : IShellLinkDual*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Path.call(this, pbs)
    end
    def put_Path(this : IShellLinkDual*, bs : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Path.call(this, bs)
    end
    def get_Description(this : IShellLinkDual*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Description.call(this, pbs)
    end
    def put_Description(this : IShellLinkDual*, bs : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Description.call(this, bs)
    end
    def get_WorkingDirectory(this : IShellLinkDual*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_WorkingDirectory.call(this, pbs)
    end
    def put_WorkingDirectory(this : IShellLinkDual*, bs : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_WorkingDirectory.call(this, bs)
    end
    def get_Arguments(this : IShellLinkDual*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Arguments.call(this, pbs)
    end
    def put_Arguments(this : IShellLinkDual*, bs : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Arguments.call(this, bs)
    end
    def get_Hotkey(this : IShellLinkDual*, piHK : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Hotkey.call(this, piHK)
    end
    def put_Hotkey(this : IShellLinkDual*, iHK : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Hotkey.call(this, iHK)
    end
    def get_ShowCommand(this : IShellLinkDual*, piShowCommand : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ShowCommand.call(this, piShowCommand)
    end
    def put_ShowCommand(this : IShellLinkDual*, iShowCommand : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_ShowCommand.call(this, iShowCommand)
    end
    def resolve(this : IShellLinkDual*, fFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resolve.call(this, fFlags)
    end
    def get_icon_location(this : IShellLinkDual*, pbs : Win32cr::Foundation::BSTR*, piIcon : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_icon_location.call(this, pbs, piIcon)
    end
    def set_icon_location(this : IShellLinkDual*, bs : Win32cr::Foundation::BSTR, iIcon : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_icon_location.call(this, bs, iIcon)
    end
    def save(this : IShellLinkDual*, vWhere : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.save.call(this, vWhere)
    end

  end

  @[Extern]
  record IShellLinkDual2Vtbl,
    query_interface : Proc(IShellLinkDual2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellLinkDual2*, UInt32),
    release : Proc(IShellLinkDual2*, UInt32),
    get_type_info_count : Proc(IShellLinkDual2*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellLinkDual2*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellLinkDual2*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellLinkDual2*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Path : Proc(IShellLinkDual2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Path : Proc(IShellLinkDual2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Description : Proc(IShellLinkDual2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Description : Proc(IShellLinkDual2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_WorkingDirectory : Proc(IShellLinkDual2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_WorkingDirectory : Proc(IShellLinkDual2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Arguments : Proc(IShellLinkDual2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Arguments : Proc(IShellLinkDual2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Hotkey : Proc(IShellLinkDual2*, Int32*, Win32cr::Foundation::HRESULT),
    put_Hotkey : Proc(IShellLinkDual2*, Int32, Win32cr::Foundation::HRESULT),
    get_ShowCommand : Proc(IShellLinkDual2*, Int32*, Win32cr::Foundation::HRESULT),
    put_ShowCommand : Proc(IShellLinkDual2*, Int32, Win32cr::Foundation::HRESULT),
    resolve : Proc(IShellLinkDual2*, Int32, Win32cr::Foundation::HRESULT),
    get_icon_location : Proc(IShellLinkDual2*, Win32cr::Foundation::BSTR*, Int32*, Win32cr::Foundation::HRESULT),
    set_icon_location : Proc(IShellLinkDual2*, Win32cr::Foundation::BSTR, Int32, Win32cr::Foundation::HRESULT),
    save : Proc(IShellLinkDual2*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    get_Target : Proc(IShellLinkDual2*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellLinkDual2, lpVtbl : IShellLinkDual2Vtbl* do
    GUID = LibC::GUID.new(0x317ee249_u32, 0xf12e_u16, 0x11d2_u16, StaticArray[0xb1_u8, 0xe4_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x8e_u8, 0xeb_u8, 0x3e_u8])
    def query_interface(this : IShellLinkDual2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellLinkDual2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellLinkDual2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellLinkDual2*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellLinkDual2*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellLinkDual2*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellLinkDual2*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Path(this : IShellLinkDual2*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Path.call(this, pbs)
    end
    def put_Path(this : IShellLinkDual2*, bs : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Path.call(this, bs)
    end
    def get_Description(this : IShellLinkDual2*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Description.call(this, pbs)
    end
    def put_Description(this : IShellLinkDual2*, bs : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Description.call(this, bs)
    end
    def get_WorkingDirectory(this : IShellLinkDual2*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_WorkingDirectory.call(this, pbs)
    end
    def put_WorkingDirectory(this : IShellLinkDual2*, bs : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_WorkingDirectory.call(this, bs)
    end
    def get_Arguments(this : IShellLinkDual2*, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Arguments.call(this, pbs)
    end
    def put_Arguments(this : IShellLinkDual2*, bs : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Arguments.call(this, bs)
    end
    def get_Hotkey(this : IShellLinkDual2*, piHK : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Hotkey.call(this, piHK)
    end
    def put_Hotkey(this : IShellLinkDual2*, iHK : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Hotkey.call(this, iHK)
    end
    def get_ShowCommand(this : IShellLinkDual2*, piShowCommand : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ShowCommand.call(this, piShowCommand)
    end
    def put_ShowCommand(this : IShellLinkDual2*, iShowCommand : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_ShowCommand.call(this, iShowCommand)
    end
    def resolve(this : IShellLinkDual2*, fFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resolve.call(this, fFlags)
    end
    def get_icon_location(this : IShellLinkDual2*, pbs : Win32cr::Foundation::BSTR*, piIcon : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_icon_location.call(this, pbs, piIcon)
    end
    def set_icon_location(this : IShellLinkDual2*, bs : Win32cr::Foundation::BSTR, iIcon : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_icon_location.call(this, bs, iIcon)
    end
    def save(this : IShellLinkDual2*, vWhere : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.save.call(this, vWhere)
    end
    def get_Target(this : IShellLinkDual2*, ppfi : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Target.call(this, ppfi)
    end

  end

  @[Extern]
  record IShellFolderViewDualVtbl,
    query_interface : Proc(IShellFolderViewDual*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellFolderViewDual*, UInt32),
    release : Proc(IShellFolderViewDual*, UInt32),
    get_type_info_count : Proc(IShellFolderViewDual*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellFolderViewDual*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellFolderViewDual*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellFolderViewDual*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(IShellFolderViewDual*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(IShellFolderViewDual*, Void**, Win32cr::Foundation::HRESULT),
    get_Folder : Proc(IShellFolderViewDual*, Void**, Win32cr::Foundation::HRESULT),
    selected_items : Proc(IShellFolderViewDual*, Void**, Win32cr::Foundation::HRESULT),
    get_FocusedItem : Proc(IShellFolderViewDual*, Void**, Win32cr::Foundation::HRESULT),
    select_item : Proc(IShellFolderViewDual*, Win32cr::System::Com::VARIANT*, Int32, Win32cr::Foundation::HRESULT),
    popup_item_menu : Proc(IShellFolderViewDual*, Void*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Script : Proc(IShellFolderViewDual*, Void**, Win32cr::Foundation::HRESULT),
    get_ViewOptions : Proc(IShellFolderViewDual*, Int32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellFolderViewDual, lpVtbl : IShellFolderViewDualVtbl* do
    GUID = LibC::GUID.new(0xe7a1af80_u32, 0x4d96_u16, 0x11cf_u16, StaticArray[0x96_u8, 0xc_u8, 0x0_u8, 0x80_u8, 0xc7_u8, 0xf4_u8, 0xee_u8, 0x85_u8])
    def query_interface(this : IShellFolderViewDual*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellFolderViewDual*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellFolderViewDual*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellFolderViewDual*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellFolderViewDual*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellFolderViewDual*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellFolderViewDual*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Application(this : IShellFolderViewDual*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : IShellFolderViewDual*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def get_Folder(this : IShellFolderViewDual*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Folder.call(this, ppid)
    end
    def selected_items(this : IShellFolderViewDual*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.selected_items.call(this, ppid)
    end
    def get_FocusedItem(this : IShellFolderViewDual*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_FocusedItem.call(this, ppid)
    end
    def select_item(this : IShellFolderViewDual*, pvfi : Win32cr::System::Com::VARIANT*, dwFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_item.call(this, pvfi, dwFlags)
    end
    def popup_item_menu(this : IShellFolderViewDual*, pfi : Void*, vx : Win32cr::System::Com::VARIANT, vy : Win32cr::System::Com::VARIANT, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.popup_item_menu.call(this, pfi, vx, vy, pbs)
    end
    def get_Script(this : IShellFolderViewDual*, ppDisp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Script.call(this, ppDisp)
    end
    def get_ViewOptions(this : IShellFolderViewDual*, plViewOptions : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ViewOptions.call(this, plViewOptions)
    end

  end

  @[Extern]
  record IShellFolderViewDual2Vtbl,
    query_interface : Proc(IShellFolderViewDual2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellFolderViewDual2*, UInt32),
    release : Proc(IShellFolderViewDual2*, UInt32),
    get_type_info_count : Proc(IShellFolderViewDual2*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellFolderViewDual2*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellFolderViewDual2*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellFolderViewDual2*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(IShellFolderViewDual2*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(IShellFolderViewDual2*, Void**, Win32cr::Foundation::HRESULT),
    get_Folder : Proc(IShellFolderViewDual2*, Void**, Win32cr::Foundation::HRESULT),
    selected_items : Proc(IShellFolderViewDual2*, Void**, Win32cr::Foundation::HRESULT),
    get_FocusedItem : Proc(IShellFolderViewDual2*, Void**, Win32cr::Foundation::HRESULT),
    select_item : Proc(IShellFolderViewDual2*, Win32cr::System::Com::VARIANT*, Int32, Win32cr::Foundation::HRESULT),
    popup_item_menu : Proc(IShellFolderViewDual2*, Void*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Script : Proc(IShellFolderViewDual2*, Void**, Win32cr::Foundation::HRESULT),
    get_ViewOptions : Proc(IShellFolderViewDual2*, Int32*, Win32cr::Foundation::HRESULT),
    get_CurrentViewMode : Proc(IShellFolderViewDual2*, UInt32*, Win32cr::Foundation::HRESULT),
    put_CurrentViewMode : Proc(IShellFolderViewDual2*, UInt32, Win32cr::Foundation::HRESULT),
    select_item_relative : Proc(IShellFolderViewDual2*, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellFolderViewDual2, lpVtbl : IShellFolderViewDual2Vtbl* do
    GUID = LibC::GUID.new(0x31c147b6_u32, 0xade_u16, 0x4a3c_u16, StaticArray[0xb5_u8, 0x14_u8, 0xdd_u8, 0xf9_u8, 0x32_u8, 0xef_u8, 0x6d_u8, 0x17_u8])
    def query_interface(this : IShellFolderViewDual2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellFolderViewDual2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellFolderViewDual2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellFolderViewDual2*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellFolderViewDual2*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellFolderViewDual2*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellFolderViewDual2*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Application(this : IShellFolderViewDual2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : IShellFolderViewDual2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def get_Folder(this : IShellFolderViewDual2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Folder.call(this, ppid)
    end
    def selected_items(this : IShellFolderViewDual2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.selected_items.call(this, ppid)
    end
    def get_FocusedItem(this : IShellFolderViewDual2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_FocusedItem.call(this, ppid)
    end
    def select_item(this : IShellFolderViewDual2*, pvfi : Win32cr::System::Com::VARIANT*, dwFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_item.call(this, pvfi, dwFlags)
    end
    def popup_item_menu(this : IShellFolderViewDual2*, pfi : Void*, vx : Win32cr::System::Com::VARIANT, vy : Win32cr::System::Com::VARIANT, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.popup_item_menu.call(this, pfi, vx, vy, pbs)
    end
    def get_Script(this : IShellFolderViewDual2*, ppDisp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Script.call(this, ppDisp)
    end
    def get_ViewOptions(this : IShellFolderViewDual2*, plViewOptions : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ViewOptions.call(this, plViewOptions)
    end
    def get_CurrentViewMode(this : IShellFolderViewDual2*, pViewMode : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_CurrentViewMode.call(this, pViewMode)
    end
    def put_CurrentViewMode(this : IShellFolderViewDual2*, view_mode : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_CurrentViewMode.call(this, view_mode)
    end
    def select_item_relative(this : IShellFolderViewDual2*, iRelative : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_item_relative.call(this, iRelative)
    end

  end

  @[Extern]
  record IShellFolderViewDual3Vtbl,
    query_interface : Proc(IShellFolderViewDual3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellFolderViewDual3*, UInt32),
    release : Proc(IShellFolderViewDual3*, UInt32),
    get_type_info_count : Proc(IShellFolderViewDual3*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellFolderViewDual3*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellFolderViewDual3*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellFolderViewDual3*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(IShellFolderViewDual3*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(IShellFolderViewDual3*, Void**, Win32cr::Foundation::HRESULT),
    get_Folder : Proc(IShellFolderViewDual3*, Void**, Win32cr::Foundation::HRESULT),
    selected_items : Proc(IShellFolderViewDual3*, Void**, Win32cr::Foundation::HRESULT),
    get_FocusedItem : Proc(IShellFolderViewDual3*, Void**, Win32cr::Foundation::HRESULT),
    select_item : Proc(IShellFolderViewDual3*, Win32cr::System::Com::VARIANT*, Int32, Win32cr::Foundation::HRESULT),
    popup_item_menu : Proc(IShellFolderViewDual3*, Void*, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Script : Proc(IShellFolderViewDual3*, Void**, Win32cr::Foundation::HRESULT),
    get_ViewOptions : Proc(IShellFolderViewDual3*, Int32*, Win32cr::Foundation::HRESULT),
    get_CurrentViewMode : Proc(IShellFolderViewDual3*, UInt32*, Win32cr::Foundation::HRESULT),
    put_CurrentViewMode : Proc(IShellFolderViewDual3*, UInt32, Win32cr::Foundation::HRESULT),
    select_item_relative : Proc(IShellFolderViewDual3*, Int32, Win32cr::Foundation::HRESULT),
    get_GroupBy : Proc(IShellFolderViewDual3*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_GroupBy : Proc(IShellFolderViewDual3*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_FolderFlags : Proc(IShellFolderViewDual3*, UInt32*, Win32cr::Foundation::HRESULT),
    put_FolderFlags : Proc(IShellFolderViewDual3*, UInt32, Win32cr::Foundation::HRESULT),
    get_SortColumns : Proc(IShellFolderViewDual3*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_SortColumns : Proc(IShellFolderViewDual3*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    put_IconSize : Proc(IShellFolderViewDual3*, Int32, Win32cr::Foundation::HRESULT),
    get_IconSize : Proc(IShellFolderViewDual3*, Int32*, Win32cr::Foundation::HRESULT),
    filter_view : Proc(IShellFolderViewDual3*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellFolderViewDual3, lpVtbl : IShellFolderViewDual3Vtbl* do
    GUID = LibC::GUID.new(0x29ec8e6c_u32, 0x46d3_u16, 0x411f_u16, StaticArray[0xba_u8, 0xaa_u8, 0x61_u8, 0x1a_u8, 0x6c_u8, 0x9c_u8, 0xac_u8, 0x66_u8])
    def query_interface(this : IShellFolderViewDual3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellFolderViewDual3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellFolderViewDual3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellFolderViewDual3*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellFolderViewDual3*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellFolderViewDual3*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellFolderViewDual3*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Application(this : IShellFolderViewDual3*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : IShellFolderViewDual3*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def get_Folder(this : IShellFolderViewDual3*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Folder.call(this, ppid)
    end
    def selected_items(this : IShellFolderViewDual3*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.selected_items.call(this, ppid)
    end
    def get_FocusedItem(this : IShellFolderViewDual3*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_FocusedItem.call(this, ppid)
    end
    def select_item(this : IShellFolderViewDual3*, pvfi : Win32cr::System::Com::VARIANT*, dwFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_item.call(this, pvfi, dwFlags)
    end
    def popup_item_menu(this : IShellFolderViewDual3*, pfi : Void*, vx : Win32cr::System::Com::VARIANT, vy : Win32cr::System::Com::VARIANT, pbs : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.popup_item_menu.call(this, pfi, vx, vy, pbs)
    end
    def get_Script(this : IShellFolderViewDual3*, ppDisp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Script.call(this, ppDisp)
    end
    def get_ViewOptions(this : IShellFolderViewDual3*, plViewOptions : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ViewOptions.call(this, plViewOptions)
    end
    def get_CurrentViewMode(this : IShellFolderViewDual3*, pViewMode : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_CurrentViewMode.call(this, pViewMode)
    end
    def put_CurrentViewMode(this : IShellFolderViewDual3*, view_mode : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_CurrentViewMode.call(this, view_mode)
    end
    def select_item_relative(this : IShellFolderViewDual3*, iRelative : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_item_relative.call(this, iRelative)
    end
    def get_GroupBy(this : IShellFolderViewDual3*, pbstrGroupBy : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_GroupBy.call(this, pbstrGroupBy)
    end
    def put_GroupBy(this : IShellFolderViewDual3*, bstrGroupBy : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_GroupBy.call(this, bstrGroupBy)
    end
    def get_FolderFlags(this : IShellFolderViewDual3*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_FolderFlags.call(this, pdwFlags)
    end
    def put_FolderFlags(this : IShellFolderViewDual3*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_FolderFlags.call(this, dwFlags)
    end
    def get_SortColumns(this : IShellFolderViewDual3*, pbstrSortColumns : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_SortColumns.call(this, pbstrSortColumns)
    end
    def put_SortColumns(this : IShellFolderViewDual3*, bstrSortColumns : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_SortColumns.call(this, bstrSortColumns)
    end
    def put_IconSize(this : IShellFolderViewDual3*, iIconSize : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_IconSize.call(this, iIconSize)
    end
    def get_IconSize(this : IShellFolderViewDual3*, piIconSize : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_IconSize.call(this, piIconSize)
    end
    def filter_view(this : IShellFolderViewDual3*, bstrFilterText : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.filter_view.call(this, bstrFilterText)
    end

  end

  @[Extern]
  record IShellDispatchVtbl,
    query_interface : Proc(IShellDispatch*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellDispatch*, UInt32),
    release : Proc(IShellDispatch*, UInt32),
    get_type_info_count : Proc(IShellDispatch*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellDispatch*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellDispatch*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellDispatch*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(IShellDispatch*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(IShellDispatch*, Void**, Win32cr::Foundation::HRESULT),
    name_space : Proc(IShellDispatch*, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    browse_for_folder : Proc(IShellDispatch*, Int32, Win32cr::Foundation::BSTR, Int32, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    windows : Proc(IShellDispatch*, Void**, Win32cr::Foundation::HRESULT),
    open : Proc(IShellDispatch*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    explore : Proc(IShellDispatch*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    minimize_all : Proc(IShellDispatch*, Win32cr::Foundation::HRESULT),
    undo_minimize_all : Proc(IShellDispatch*, Win32cr::Foundation::HRESULT),
    file_run : Proc(IShellDispatch*, Win32cr::Foundation::HRESULT),
    cascade_windows : Proc(IShellDispatch*, Win32cr::Foundation::HRESULT),
    tile_vertically : Proc(IShellDispatch*, Win32cr::Foundation::HRESULT),
    tile_horizontally : Proc(IShellDispatch*, Win32cr::Foundation::HRESULT),
    shutdown_windows : Proc(IShellDispatch*, Win32cr::Foundation::HRESULT),
    suspend : Proc(IShellDispatch*, Win32cr::Foundation::HRESULT),
    eject_pc : Proc(IShellDispatch*, Win32cr::Foundation::HRESULT),
    set_time : Proc(IShellDispatch*, Win32cr::Foundation::HRESULT),
    tray_properties : Proc(IShellDispatch*, Win32cr::Foundation::HRESULT),
    help : Proc(IShellDispatch*, Win32cr::Foundation::HRESULT),
    find_files : Proc(IShellDispatch*, Win32cr::Foundation::HRESULT),
    find_computer : Proc(IShellDispatch*, Win32cr::Foundation::HRESULT),
    refresh_menu : Proc(IShellDispatch*, Win32cr::Foundation::HRESULT),
    control_panel_item : Proc(IShellDispatch*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellDispatch, lpVtbl : IShellDispatchVtbl* do
    GUID = LibC::GUID.new(0xd8f015c0_u32, 0xc278_u16, 0x11ce_u16, StaticArray[0xa4_u8, 0x9e_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : IShellDispatch*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellDispatch*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellDispatch*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellDispatch*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellDispatch*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellDispatch*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellDispatch*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Application(this : IShellDispatch*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : IShellDispatch*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def name_space(this : IShellDispatch*, vDir : Win32cr::System::Com::VARIANT, ppsdf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.name_space.call(this, vDir, ppsdf)
    end
    def browse_for_folder(this : IShellDispatch*, hwnd : Int32, title : Win32cr::Foundation::BSTR, options : Int32, root_folder : Win32cr::System::Com::VARIANT, ppsdf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.browse_for_folder.call(this, hwnd, title, options, root_folder, ppsdf)
    end
    def windows(this : IShellDispatch*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.windows.call(this, ppid)
    end
    def open(this : IShellDispatch*, vDir : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open.call(this, vDir)
    end
    def explore(this : IShellDispatch*, vDir : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.explore.call(this, vDir)
    end
    def minimize_all(this : IShellDispatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.minimize_all.call(this)
    end
    def undo_minimize_all(this : IShellDispatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.undo_minimize_all.call(this)
    end
    def file_run(this : IShellDispatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.file_run.call(this)
    end
    def cascade_windows(this : IShellDispatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cascade_windows.call(this)
    end
    def tile_vertically(this : IShellDispatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tile_vertically.call(this)
    end
    def tile_horizontally(this : IShellDispatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tile_horizontally.call(this)
    end
    def shutdown_windows(this : IShellDispatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.shutdown_windows.call(this)
    end
    def suspend(this : IShellDispatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.suspend.call(this)
    end
    def eject_pc(this : IShellDispatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.eject_pc.call(this)
    end
    def set_time(this : IShellDispatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_time.call(this)
    end
    def tray_properties(this : IShellDispatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tray_properties.call(this)
    end
    def help(this : IShellDispatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.help.call(this)
    end
    def find_files(this : IShellDispatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_files.call(this)
    end
    def find_computer(this : IShellDispatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_computer.call(this)
    end
    def refresh_menu(this : IShellDispatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_menu.call(this)
    end
    def control_panel_item(this : IShellDispatch*, bstrDir : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.control_panel_item.call(this, bstrDir)
    end

  end

  @[Extern]
  record IShellDispatch2Vtbl,
    query_interface : Proc(IShellDispatch2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellDispatch2*, UInt32),
    release : Proc(IShellDispatch2*, UInt32),
    get_type_info_count : Proc(IShellDispatch2*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellDispatch2*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellDispatch2*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellDispatch2*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(IShellDispatch2*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(IShellDispatch2*, Void**, Win32cr::Foundation::HRESULT),
    name_space : Proc(IShellDispatch2*, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    browse_for_folder : Proc(IShellDispatch2*, Int32, Win32cr::Foundation::BSTR, Int32, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    windows : Proc(IShellDispatch2*, Void**, Win32cr::Foundation::HRESULT),
    open : Proc(IShellDispatch2*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    explore : Proc(IShellDispatch2*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    minimize_all : Proc(IShellDispatch2*, Win32cr::Foundation::HRESULT),
    undo_minimize_all : Proc(IShellDispatch2*, Win32cr::Foundation::HRESULT),
    file_run : Proc(IShellDispatch2*, Win32cr::Foundation::HRESULT),
    cascade_windows : Proc(IShellDispatch2*, Win32cr::Foundation::HRESULT),
    tile_vertically : Proc(IShellDispatch2*, Win32cr::Foundation::HRESULT),
    tile_horizontally : Proc(IShellDispatch2*, Win32cr::Foundation::HRESULT),
    shutdown_windows : Proc(IShellDispatch2*, Win32cr::Foundation::HRESULT),
    suspend : Proc(IShellDispatch2*, Win32cr::Foundation::HRESULT),
    eject_pc : Proc(IShellDispatch2*, Win32cr::Foundation::HRESULT),
    set_time : Proc(IShellDispatch2*, Win32cr::Foundation::HRESULT),
    tray_properties : Proc(IShellDispatch2*, Win32cr::Foundation::HRESULT),
    help : Proc(IShellDispatch2*, Win32cr::Foundation::HRESULT),
    find_files : Proc(IShellDispatch2*, Win32cr::Foundation::HRESULT),
    find_computer : Proc(IShellDispatch2*, Win32cr::Foundation::HRESULT),
    refresh_menu : Proc(IShellDispatch2*, Win32cr::Foundation::HRESULT),
    control_panel_item : Proc(IShellDispatch2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    is_restricted : Proc(IShellDispatch2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32*, Win32cr::Foundation::HRESULT),
    shell_execute : Proc(IShellDispatch2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    find_printer : Proc(IShellDispatch2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_system_information : Proc(IShellDispatch2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    service_start : Proc(IShellDispatch2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    service_stop : Proc(IShellDispatch2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    is_service_running : Proc(IShellDispatch2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    can_start_stop_service : Proc(IShellDispatch2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    show_browser_bar : Proc(IShellDispatch2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellDispatch2, lpVtbl : IShellDispatch2Vtbl* do
    GUID = LibC::GUID.new(0xa4c6892c_u32, 0x3ba9_u16, 0x11d2_u16, StaticArray[0x9d_u8, 0xea_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb1_u8, 0x61_u8, 0x62_u8])
    def query_interface(this : IShellDispatch2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellDispatch2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellDispatch2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellDispatch2*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellDispatch2*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellDispatch2*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellDispatch2*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Application(this : IShellDispatch2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : IShellDispatch2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def name_space(this : IShellDispatch2*, vDir : Win32cr::System::Com::VARIANT, ppsdf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.name_space.call(this, vDir, ppsdf)
    end
    def browse_for_folder(this : IShellDispatch2*, hwnd : Int32, title : Win32cr::Foundation::BSTR, options : Int32, root_folder : Win32cr::System::Com::VARIANT, ppsdf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.browse_for_folder.call(this, hwnd, title, options, root_folder, ppsdf)
    end
    def windows(this : IShellDispatch2*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.windows.call(this, ppid)
    end
    def open(this : IShellDispatch2*, vDir : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open.call(this, vDir)
    end
    def explore(this : IShellDispatch2*, vDir : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.explore.call(this, vDir)
    end
    def minimize_all(this : IShellDispatch2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.minimize_all.call(this)
    end
    def undo_minimize_all(this : IShellDispatch2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.undo_minimize_all.call(this)
    end
    def file_run(this : IShellDispatch2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.file_run.call(this)
    end
    def cascade_windows(this : IShellDispatch2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cascade_windows.call(this)
    end
    def tile_vertically(this : IShellDispatch2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tile_vertically.call(this)
    end
    def tile_horizontally(this : IShellDispatch2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tile_horizontally.call(this)
    end
    def shutdown_windows(this : IShellDispatch2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.shutdown_windows.call(this)
    end
    def suspend(this : IShellDispatch2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.suspend.call(this)
    end
    def eject_pc(this : IShellDispatch2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.eject_pc.call(this)
    end
    def set_time(this : IShellDispatch2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_time.call(this)
    end
    def tray_properties(this : IShellDispatch2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tray_properties.call(this)
    end
    def help(this : IShellDispatch2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.help.call(this)
    end
    def find_files(this : IShellDispatch2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_files.call(this)
    end
    def find_computer(this : IShellDispatch2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_computer.call(this)
    end
    def refresh_menu(this : IShellDispatch2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_menu.call(this)
    end
    def control_panel_item(this : IShellDispatch2*, bstrDir : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.control_panel_item.call(this, bstrDir)
    end
    def is_restricted(this : IShellDispatch2*, group : Win32cr::Foundation::BSTR, restriction : Win32cr::Foundation::BSTR, plRestrictValue : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_restricted.call(this, group, restriction, plRestrictValue)
    end
    def shell_execute(this : IShellDispatch2*, file : Win32cr::Foundation::BSTR, vArgs : Win32cr::System::Com::VARIANT, vDir : Win32cr::System::Com::VARIANT, vOperation : Win32cr::System::Com::VARIANT, vShow : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.shell_execute.call(this, file, vArgs, vDir, vOperation, vShow)
    end
    def find_printer(this : IShellDispatch2*, name : Win32cr::Foundation::BSTR, location : Win32cr::Foundation::BSTR, model : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_printer.call(this, name, location, model)
    end
    def get_system_information(this : IShellDispatch2*, name : Win32cr::Foundation::BSTR, pv : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_information.call(this, name, pv)
    end
    def service_start(this : IShellDispatch2*, service_name : Win32cr::Foundation::BSTR, persistent : Win32cr::System::Com::VARIANT, pSuccess : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.service_start.call(this, service_name, persistent, pSuccess)
    end
    def service_stop(this : IShellDispatch2*, service_name : Win32cr::Foundation::BSTR, persistent : Win32cr::System::Com::VARIANT, pSuccess : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.service_stop.call(this, service_name, persistent, pSuccess)
    end
    def is_service_running(this : IShellDispatch2*, service_name : Win32cr::Foundation::BSTR, pRunning : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_service_running.call(this, service_name, pRunning)
    end
    def can_start_stop_service(this : IShellDispatch2*, service_name : Win32cr::Foundation::BSTR, pCanStartStop : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.can_start_stop_service.call(this, service_name, pCanStartStop)
    end
    def show_browser_bar(this : IShellDispatch2*, bstrClsid : Win32cr::Foundation::BSTR, bShow : Win32cr::System::Com::VARIANT, pSuccess : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_browser_bar.call(this, bstrClsid, bShow, pSuccess)
    end

  end

  @[Extern]
  record IShellDispatch3Vtbl,
    query_interface : Proc(IShellDispatch3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellDispatch3*, UInt32),
    release : Proc(IShellDispatch3*, UInt32),
    get_type_info_count : Proc(IShellDispatch3*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellDispatch3*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellDispatch3*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellDispatch3*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(IShellDispatch3*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(IShellDispatch3*, Void**, Win32cr::Foundation::HRESULT),
    name_space : Proc(IShellDispatch3*, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    browse_for_folder : Proc(IShellDispatch3*, Int32, Win32cr::Foundation::BSTR, Int32, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    windows : Proc(IShellDispatch3*, Void**, Win32cr::Foundation::HRESULT),
    open : Proc(IShellDispatch3*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    explore : Proc(IShellDispatch3*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    minimize_all : Proc(IShellDispatch3*, Win32cr::Foundation::HRESULT),
    undo_minimize_all : Proc(IShellDispatch3*, Win32cr::Foundation::HRESULT),
    file_run : Proc(IShellDispatch3*, Win32cr::Foundation::HRESULT),
    cascade_windows : Proc(IShellDispatch3*, Win32cr::Foundation::HRESULT),
    tile_vertically : Proc(IShellDispatch3*, Win32cr::Foundation::HRESULT),
    tile_horizontally : Proc(IShellDispatch3*, Win32cr::Foundation::HRESULT),
    shutdown_windows : Proc(IShellDispatch3*, Win32cr::Foundation::HRESULT),
    suspend : Proc(IShellDispatch3*, Win32cr::Foundation::HRESULT),
    eject_pc : Proc(IShellDispatch3*, Win32cr::Foundation::HRESULT),
    set_time : Proc(IShellDispatch3*, Win32cr::Foundation::HRESULT),
    tray_properties : Proc(IShellDispatch3*, Win32cr::Foundation::HRESULT),
    help : Proc(IShellDispatch3*, Win32cr::Foundation::HRESULT),
    find_files : Proc(IShellDispatch3*, Win32cr::Foundation::HRESULT),
    find_computer : Proc(IShellDispatch3*, Win32cr::Foundation::HRESULT),
    refresh_menu : Proc(IShellDispatch3*, Win32cr::Foundation::HRESULT),
    control_panel_item : Proc(IShellDispatch3*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    is_restricted : Proc(IShellDispatch3*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32*, Win32cr::Foundation::HRESULT),
    shell_execute : Proc(IShellDispatch3*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    find_printer : Proc(IShellDispatch3*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_system_information : Proc(IShellDispatch3*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    service_start : Proc(IShellDispatch3*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    service_stop : Proc(IShellDispatch3*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    is_service_running : Proc(IShellDispatch3*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    can_start_stop_service : Proc(IShellDispatch3*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    show_browser_bar : Proc(IShellDispatch3*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_to_recent : Proc(IShellDispatch3*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellDispatch3, lpVtbl : IShellDispatch3Vtbl* do
    GUID = LibC::GUID.new(0x177160ca_u32, 0xbb5a_u16, 0x411c_u16, StaticArray[0x84_u8, 0x1d_u8, 0xbd_u8, 0x38_u8, 0xfa_u8, 0xcd_u8, 0xea_u8, 0xa0_u8])
    def query_interface(this : IShellDispatch3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellDispatch3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellDispatch3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellDispatch3*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellDispatch3*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellDispatch3*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellDispatch3*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Application(this : IShellDispatch3*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : IShellDispatch3*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def name_space(this : IShellDispatch3*, vDir : Win32cr::System::Com::VARIANT, ppsdf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.name_space.call(this, vDir, ppsdf)
    end
    def browse_for_folder(this : IShellDispatch3*, hwnd : Int32, title : Win32cr::Foundation::BSTR, options : Int32, root_folder : Win32cr::System::Com::VARIANT, ppsdf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.browse_for_folder.call(this, hwnd, title, options, root_folder, ppsdf)
    end
    def windows(this : IShellDispatch3*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.windows.call(this, ppid)
    end
    def open(this : IShellDispatch3*, vDir : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open.call(this, vDir)
    end
    def explore(this : IShellDispatch3*, vDir : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.explore.call(this, vDir)
    end
    def minimize_all(this : IShellDispatch3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.minimize_all.call(this)
    end
    def undo_minimize_all(this : IShellDispatch3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.undo_minimize_all.call(this)
    end
    def file_run(this : IShellDispatch3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.file_run.call(this)
    end
    def cascade_windows(this : IShellDispatch3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cascade_windows.call(this)
    end
    def tile_vertically(this : IShellDispatch3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tile_vertically.call(this)
    end
    def tile_horizontally(this : IShellDispatch3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tile_horizontally.call(this)
    end
    def shutdown_windows(this : IShellDispatch3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.shutdown_windows.call(this)
    end
    def suspend(this : IShellDispatch3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.suspend.call(this)
    end
    def eject_pc(this : IShellDispatch3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.eject_pc.call(this)
    end
    def set_time(this : IShellDispatch3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_time.call(this)
    end
    def tray_properties(this : IShellDispatch3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tray_properties.call(this)
    end
    def help(this : IShellDispatch3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.help.call(this)
    end
    def find_files(this : IShellDispatch3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_files.call(this)
    end
    def find_computer(this : IShellDispatch3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_computer.call(this)
    end
    def refresh_menu(this : IShellDispatch3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_menu.call(this)
    end
    def control_panel_item(this : IShellDispatch3*, bstrDir : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.control_panel_item.call(this, bstrDir)
    end
    def is_restricted(this : IShellDispatch3*, group : Win32cr::Foundation::BSTR, restriction : Win32cr::Foundation::BSTR, plRestrictValue : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_restricted.call(this, group, restriction, plRestrictValue)
    end
    def shell_execute(this : IShellDispatch3*, file : Win32cr::Foundation::BSTR, vArgs : Win32cr::System::Com::VARIANT, vDir : Win32cr::System::Com::VARIANT, vOperation : Win32cr::System::Com::VARIANT, vShow : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.shell_execute.call(this, file, vArgs, vDir, vOperation, vShow)
    end
    def find_printer(this : IShellDispatch3*, name : Win32cr::Foundation::BSTR, location : Win32cr::Foundation::BSTR, model : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_printer.call(this, name, location, model)
    end
    def get_system_information(this : IShellDispatch3*, name : Win32cr::Foundation::BSTR, pv : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_information.call(this, name, pv)
    end
    def service_start(this : IShellDispatch3*, service_name : Win32cr::Foundation::BSTR, persistent : Win32cr::System::Com::VARIANT, pSuccess : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.service_start.call(this, service_name, persistent, pSuccess)
    end
    def service_stop(this : IShellDispatch3*, service_name : Win32cr::Foundation::BSTR, persistent : Win32cr::System::Com::VARIANT, pSuccess : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.service_stop.call(this, service_name, persistent, pSuccess)
    end
    def is_service_running(this : IShellDispatch3*, service_name : Win32cr::Foundation::BSTR, pRunning : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_service_running.call(this, service_name, pRunning)
    end
    def can_start_stop_service(this : IShellDispatch3*, service_name : Win32cr::Foundation::BSTR, pCanStartStop : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.can_start_stop_service.call(this, service_name, pCanStartStop)
    end
    def show_browser_bar(this : IShellDispatch3*, bstrClsid : Win32cr::Foundation::BSTR, bShow : Win32cr::System::Com::VARIANT, pSuccess : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_browser_bar.call(this, bstrClsid, bShow, pSuccess)
    end
    def add_to_recent(this : IShellDispatch3*, varFile : Win32cr::System::Com::VARIANT, bstrCategory : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_to_recent.call(this, varFile, bstrCategory)
    end

  end

  @[Extern]
  record IShellDispatch4Vtbl,
    query_interface : Proc(IShellDispatch4*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellDispatch4*, UInt32),
    release : Proc(IShellDispatch4*, UInt32),
    get_type_info_count : Proc(IShellDispatch4*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellDispatch4*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellDispatch4*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellDispatch4*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(IShellDispatch4*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(IShellDispatch4*, Void**, Win32cr::Foundation::HRESULT),
    name_space : Proc(IShellDispatch4*, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    browse_for_folder : Proc(IShellDispatch4*, Int32, Win32cr::Foundation::BSTR, Int32, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    windows : Proc(IShellDispatch4*, Void**, Win32cr::Foundation::HRESULT),
    open : Proc(IShellDispatch4*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    explore : Proc(IShellDispatch4*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    minimize_all : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    undo_minimize_all : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    file_run : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    cascade_windows : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    tile_vertically : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    tile_horizontally : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    shutdown_windows : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    suspend : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    eject_pc : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    set_time : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    tray_properties : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    help : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    find_files : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    find_computer : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    refresh_menu : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    control_panel_item : Proc(IShellDispatch4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    is_restricted : Proc(IShellDispatch4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32*, Win32cr::Foundation::HRESULT),
    shell_execute : Proc(IShellDispatch4*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    find_printer : Proc(IShellDispatch4*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_system_information : Proc(IShellDispatch4*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    service_start : Proc(IShellDispatch4*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    service_stop : Proc(IShellDispatch4*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    is_service_running : Proc(IShellDispatch4*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    can_start_stop_service : Proc(IShellDispatch4*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    show_browser_bar : Proc(IShellDispatch4*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_to_recent : Proc(IShellDispatch4*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    windows_security : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    toggle_desktop : Proc(IShellDispatch4*, Win32cr::Foundation::HRESULT),
    explorer_policy : Proc(IShellDispatch4*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_setting : Proc(IShellDispatch4*, Int32, Int16*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellDispatch4, lpVtbl : IShellDispatch4Vtbl* do
    GUID = LibC::GUID.new(0xefd84b2d_u32, 0x4bcf_u16, 0x4298_u16, StaticArray[0xbe_u8, 0x25_u8, 0xeb_u8, 0x54_u8, 0x2a_u8, 0x59_u8, 0xfb_u8, 0xda_u8])
    def query_interface(this : IShellDispatch4*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellDispatch4*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellDispatch4*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellDispatch4*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellDispatch4*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellDispatch4*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellDispatch4*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Application(this : IShellDispatch4*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : IShellDispatch4*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def name_space(this : IShellDispatch4*, vDir : Win32cr::System::Com::VARIANT, ppsdf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.name_space.call(this, vDir, ppsdf)
    end
    def browse_for_folder(this : IShellDispatch4*, hwnd : Int32, title : Win32cr::Foundation::BSTR, options : Int32, root_folder : Win32cr::System::Com::VARIANT, ppsdf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.browse_for_folder.call(this, hwnd, title, options, root_folder, ppsdf)
    end
    def windows(this : IShellDispatch4*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.windows.call(this, ppid)
    end
    def open(this : IShellDispatch4*, vDir : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open.call(this, vDir)
    end
    def explore(this : IShellDispatch4*, vDir : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.explore.call(this, vDir)
    end
    def minimize_all(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.minimize_all.call(this)
    end
    def undo_minimize_all(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.undo_minimize_all.call(this)
    end
    def file_run(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.file_run.call(this)
    end
    def cascade_windows(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cascade_windows.call(this)
    end
    def tile_vertically(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tile_vertically.call(this)
    end
    def tile_horizontally(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tile_horizontally.call(this)
    end
    def shutdown_windows(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.shutdown_windows.call(this)
    end
    def suspend(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.suspend.call(this)
    end
    def eject_pc(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.eject_pc.call(this)
    end
    def set_time(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_time.call(this)
    end
    def tray_properties(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tray_properties.call(this)
    end
    def help(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.help.call(this)
    end
    def find_files(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_files.call(this)
    end
    def find_computer(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_computer.call(this)
    end
    def refresh_menu(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_menu.call(this)
    end
    def control_panel_item(this : IShellDispatch4*, bstrDir : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.control_panel_item.call(this, bstrDir)
    end
    def is_restricted(this : IShellDispatch4*, group : Win32cr::Foundation::BSTR, restriction : Win32cr::Foundation::BSTR, plRestrictValue : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_restricted.call(this, group, restriction, plRestrictValue)
    end
    def shell_execute(this : IShellDispatch4*, file : Win32cr::Foundation::BSTR, vArgs : Win32cr::System::Com::VARIANT, vDir : Win32cr::System::Com::VARIANT, vOperation : Win32cr::System::Com::VARIANT, vShow : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.shell_execute.call(this, file, vArgs, vDir, vOperation, vShow)
    end
    def find_printer(this : IShellDispatch4*, name : Win32cr::Foundation::BSTR, location : Win32cr::Foundation::BSTR, model : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_printer.call(this, name, location, model)
    end
    def get_system_information(this : IShellDispatch4*, name : Win32cr::Foundation::BSTR, pv : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_information.call(this, name, pv)
    end
    def service_start(this : IShellDispatch4*, service_name : Win32cr::Foundation::BSTR, persistent : Win32cr::System::Com::VARIANT, pSuccess : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.service_start.call(this, service_name, persistent, pSuccess)
    end
    def service_stop(this : IShellDispatch4*, service_name : Win32cr::Foundation::BSTR, persistent : Win32cr::System::Com::VARIANT, pSuccess : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.service_stop.call(this, service_name, persistent, pSuccess)
    end
    def is_service_running(this : IShellDispatch4*, service_name : Win32cr::Foundation::BSTR, pRunning : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_service_running.call(this, service_name, pRunning)
    end
    def can_start_stop_service(this : IShellDispatch4*, service_name : Win32cr::Foundation::BSTR, pCanStartStop : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.can_start_stop_service.call(this, service_name, pCanStartStop)
    end
    def show_browser_bar(this : IShellDispatch4*, bstrClsid : Win32cr::Foundation::BSTR, bShow : Win32cr::System::Com::VARIANT, pSuccess : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_browser_bar.call(this, bstrClsid, bShow, pSuccess)
    end
    def add_to_recent(this : IShellDispatch4*, varFile : Win32cr::System::Com::VARIANT, bstrCategory : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_to_recent.call(this, varFile, bstrCategory)
    end
    def windows_security(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.windows_security.call(this)
    end
    def toggle_desktop(this : IShellDispatch4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.toggle_desktop.call(this)
    end
    def explorer_policy(this : IShellDispatch4*, bstrPolicyName : Win32cr::Foundation::BSTR, pValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.explorer_policy.call(this, bstrPolicyName, pValue)
    end
    def get_setting(this : IShellDispatch4*, lSetting : Int32, pResult : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_setting.call(this, lSetting, pResult)
    end

  end

  @[Extern]
  record IShellDispatch5Vtbl,
    query_interface : Proc(IShellDispatch5*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellDispatch5*, UInt32),
    release : Proc(IShellDispatch5*, UInt32),
    get_type_info_count : Proc(IShellDispatch5*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellDispatch5*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellDispatch5*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellDispatch5*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(IShellDispatch5*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(IShellDispatch5*, Void**, Win32cr::Foundation::HRESULT),
    name_space : Proc(IShellDispatch5*, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    browse_for_folder : Proc(IShellDispatch5*, Int32, Win32cr::Foundation::BSTR, Int32, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    windows : Proc(IShellDispatch5*, Void**, Win32cr::Foundation::HRESULT),
    open : Proc(IShellDispatch5*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    explore : Proc(IShellDispatch5*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    minimize_all : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    undo_minimize_all : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    file_run : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    cascade_windows : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    tile_vertically : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    tile_horizontally : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    shutdown_windows : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    suspend : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    eject_pc : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    set_time : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    tray_properties : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    help : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    find_files : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    find_computer : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    refresh_menu : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    control_panel_item : Proc(IShellDispatch5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    is_restricted : Proc(IShellDispatch5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32*, Win32cr::Foundation::HRESULT),
    shell_execute : Proc(IShellDispatch5*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    find_printer : Proc(IShellDispatch5*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_system_information : Proc(IShellDispatch5*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    service_start : Proc(IShellDispatch5*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    service_stop : Proc(IShellDispatch5*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    is_service_running : Proc(IShellDispatch5*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    can_start_stop_service : Proc(IShellDispatch5*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    show_browser_bar : Proc(IShellDispatch5*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_to_recent : Proc(IShellDispatch5*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    windows_security : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    toggle_desktop : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT),
    explorer_policy : Proc(IShellDispatch5*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_setting : Proc(IShellDispatch5*, Int32, Int16*, Win32cr::Foundation::HRESULT),
    window_switcher : Proc(IShellDispatch5*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellDispatch5, lpVtbl : IShellDispatch5Vtbl* do
    GUID = LibC::GUID.new(0x866738b9_u32, 0x6cf2_u16, 0x4de8_u16, StaticArray[0x87_u8, 0x67_u8, 0xf7_u8, 0x94_u8, 0xeb_u8, 0xe7_u8, 0x4f_u8, 0x4e_u8])
    def query_interface(this : IShellDispatch5*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellDispatch5*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellDispatch5*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellDispatch5*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellDispatch5*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellDispatch5*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellDispatch5*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Application(this : IShellDispatch5*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : IShellDispatch5*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def name_space(this : IShellDispatch5*, vDir : Win32cr::System::Com::VARIANT, ppsdf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.name_space.call(this, vDir, ppsdf)
    end
    def browse_for_folder(this : IShellDispatch5*, hwnd : Int32, title : Win32cr::Foundation::BSTR, options : Int32, root_folder : Win32cr::System::Com::VARIANT, ppsdf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.browse_for_folder.call(this, hwnd, title, options, root_folder, ppsdf)
    end
    def windows(this : IShellDispatch5*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.windows.call(this, ppid)
    end
    def open(this : IShellDispatch5*, vDir : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open.call(this, vDir)
    end
    def explore(this : IShellDispatch5*, vDir : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.explore.call(this, vDir)
    end
    def minimize_all(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.minimize_all.call(this)
    end
    def undo_minimize_all(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.undo_minimize_all.call(this)
    end
    def file_run(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.file_run.call(this)
    end
    def cascade_windows(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cascade_windows.call(this)
    end
    def tile_vertically(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tile_vertically.call(this)
    end
    def tile_horizontally(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tile_horizontally.call(this)
    end
    def shutdown_windows(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.shutdown_windows.call(this)
    end
    def suspend(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.suspend.call(this)
    end
    def eject_pc(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.eject_pc.call(this)
    end
    def set_time(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_time.call(this)
    end
    def tray_properties(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tray_properties.call(this)
    end
    def help(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.help.call(this)
    end
    def find_files(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_files.call(this)
    end
    def find_computer(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_computer.call(this)
    end
    def refresh_menu(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_menu.call(this)
    end
    def control_panel_item(this : IShellDispatch5*, bstrDir : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.control_panel_item.call(this, bstrDir)
    end
    def is_restricted(this : IShellDispatch5*, group : Win32cr::Foundation::BSTR, restriction : Win32cr::Foundation::BSTR, plRestrictValue : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_restricted.call(this, group, restriction, plRestrictValue)
    end
    def shell_execute(this : IShellDispatch5*, file : Win32cr::Foundation::BSTR, vArgs : Win32cr::System::Com::VARIANT, vDir : Win32cr::System::Com::VARIANT, vOperation : Win32cr::System::Com::VARIANT, vShow : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.shell_execute.call(this, file, vArgs, vDir, vOperation, vShow)
    end
    def find_printer(this : IShellDispatch5*, name : Win32cr::Foundation::BSTR, location : Win32cr::Foundation::BSTR, model : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_printer.call(this, name, location, model)
    end
    def get_system_information(this : IShellDispatch5*, name : Win32cr::Foundation::BSTR, pv : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_information.call(this, name, pv)
    end
    def service_start(this : IShellDispatch5*, service_name : Win32cr::Foundation::BSTR, persistent : Win32cr::System::Com::VARIANT, pSuccess : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.service_start.call(this, service_name, persistent, pSuccess)
    end
    def service_stop(this : IShellDispatch5*, service_name : Win32cr::Foundation::BSTR, persistent : Win32cr::System::Com::VARIANT, pSuccess : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.service_stop.call(this, service_name, persistent, pSuccess)
    end
    def is_service_running(this : IShellDispatch5*, service_name : Win32cr::Foundation::BSTR, pRunning : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_service_running.call(this, service_name, pRunning)
    end
    def can_start_stop_service(this : IShellDispatch5*, service_name : Win32cr::Foundation::BSTR, pCanStartStop : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.can_start_stop_service.call(this, service_name, pCanStartStop)
    end
    def show_browser_bar(this : IShellDispatch5*, bstrClsid : Win32cr::Foundation::BSTR, bShow : Win32cr::System::Com::VARIANT, pSuccess : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_browser_bar.call(this, bstrClsid, bShow, pSuccess)
    end
    def add_to_recent(this : IShellDispatch5*, varFile : Win32cr::System::Com::VARIANT, bstrCategory : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_to_recent.call(this, varFile, bstrCategory)
    end
    def windows_security(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.windows_security.call(this)
    end
    def toggle_desktop(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.toggle_desktop.call(this)
    end
    def explorer_policy(this : IShellDispatch5*, bstrPolicyName : Win32cr::Foundation::BSTR, pValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.explorer_policy.call(this, bstrPolicyName, pValue)
    end
    def get_setting(this : IShellDispatch5*, lSetting : Int32, pResult : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_setting.call(this, lSetting, pResult)
    end
    def window_switcher(this : IShellDispatch5*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.window_switcher.call(this)
    end

  end

  @[Extern]
  record IShellDispatch6Vtbl,
    query_interface : Proc(IShellDispatch6*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellDispatch6*, UInt32),
    release : Proc(IShellDispatch6*, UInt32),
    get_type_info_count : Proc(IShellDispatch6*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IShellDispatch6*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IShellDispatch6*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IShellDispatch6*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    get_Application : Proc(IShellDispatch6*, Void**, Win32cr::Foundation::HRESULT),
    get_Parent : Proc(IShellDispatch6*, Void**, Win32cr::Foundation::HRESULT),
    name_space : Proc(IShellDispatch6*, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    browse_for_folder : Proc(IShellDispatch6*, Int32, Win32cr::Foundation::BSTR, Int32, Win32cr::System::Com::VARIANT, Void**, Win32cr::Foundation::HRESULT),
    windows : Proc(IShellDispatch6*, Void**, Win32cr::Foundation::HRESULT),
    open : Proc(IShellDispatch6*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    explore : Proc(IShellDispatch6*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    minimize_all : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    undo_minimize_all : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    file_run : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    cascade_windows : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    tile_vertically : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    tile_horizontally : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    shutdown_windows : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    suspend : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    eject_pc : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    set_time : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    tray_properties : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    help : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    find_files : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    find_computer : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    refresh_menu : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    control_panel_item : Proc(IShellDispatch6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    is_restricted : Proc(IShellDispatch6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32*, Win32cr::Foundation::HRESULT),
    shell_execute : Proc(IShellDispatch6*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT, Win32cr::Foundation::HRESULT),
    find_printer : Proc(IShellDispatch6*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_system_information : Proc(IShellDispatch6*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    service_start : Proc(IShellDispatch6*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    service_stop : Proc(IShellDispatch6*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    is_service_running : Proc(IShellDispatch6*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    can_start_stop_service : Proc(IShellDispatch6*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    show_browser_bar : Proc(IShellDispatch6*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    add_to_recent : Proc(IShellDispatch6*, Win32cr::System::Com::VARIANT, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    windows_security : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    toggle_desktop : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    explorer_policy : Proc(IShellDispatch6*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_setting : Proc(IShellDispatch6*, Int32, Int16*, Win32cr::Foundation::HRESULT),
    window_switcher : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT),
    search_command : Proc(IShellDispatch6*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellDispatch6, lpVtbl : IShellDispatch6Vtbl* do
    GUID = LibC::GUID.new(0x286e6f1b_u32, 0x7113_u16, 0x4355_u16, StaticArray[0x95_u8, 0x62_u8, 0x96_u8, 0xb7_u8, 0xe9_u8, 0xd6_u8, 0x4c_u8, 0x54_u8])
    def query_interface(this : IShellDispatch6*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellDispatch6*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellDispatch6*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IShellDispatch6*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IShellDispatch6*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IShellDispatch6*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IShellDispatch6*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def get_Application(this : IShellDispatch6*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Application.call(this, ppid)
    end
    def get_Parent(this : IShellDispatch6*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Parent.call(this, ppid)
    end
    def name_space(this : IShellDispatch6*, vDir : Win32cr::System::Com::VARIANT, ppsdf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.name_space.call(this, vDir, ppsdf)
    end
    def browse_for_folder(this : IShellDispatch6*, hwnd : Int32, title : Win32cr::Foundation::BSTR, options : Int32, root_folder : Win32cr::System::Com::VARIANT, ppsdf : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.browse_for_folder.call(this, hwnd, title, options, root_folder, ppsdf)
    end
    def windows(this : IShellDispatch6*, ppid : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.windows.call(this, ppid)
    end
    def open(this : IShellDispatch6*, vDir : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open.call(this, vDir)
    end
    def explore(this : IShellDispatch6*, vDir : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.explore.call(this, vDir)
    end
    def minimize_all(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.minimize_all.call(this)
    end
    def undo_minimize_all(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.undo_minimize_all.call(this)
    end
    def file_run(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.file_run.call(this)
    end
    def cascade_windows(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cascade_windows.call(this)
    end
    def tile_vertically(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tile_vertically.call(this)
    end
    def tile_horizontally(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tile_horizontally.call(this)
    end
    def shutdown_windows(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.shutdown_windows.call(this)
    end
    def suspend(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.suspend.call(this)
    end
    def eject_pc(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.eject_pc.call(this)
    end
    def set_time(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_time.call(this)
    end
    def tray_properties(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.tray_properties.call(this)
    end
    def help(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.help.call(this)
    end
    def find_files(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_files.call(this)
    end
    def find_computer(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_computer.call(this)
    end
    def refresh_menu(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_menu.call(this)
    end
    def control_panel_item(this : IShellDispatch6*, bstrDir : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.control_panel_item.call(this, bstrDir)
    end
    def is_restricted(this : IShellDispatch6*, group : Win32cr::Foundation::BSTR, restriction : Win32cr::Foundation::BSTR, plRestrictValue : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_restricted.call(this, group, restriction, plRestrictValue)
    end
    def shell_execute(this : IShellDispatch6*, file : Win32cr::Foundation::BSTR, vArgs : Win32cr::System::Com::VARIANT, vDir : Win32cr::System::Com::VARIANT, vOperation : Win32cr::System::Com::VARIANT, vShow : Win32cr::System::Com::VARIANT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.shell_execute.call(this, file, vArgs, vDir, vOperation, vShow)
    end
    def find_printer(this : IShellDispatch6*, name : Win32cr::Foundation::BSTR, location : Win32cr::Foundation::BSTR, model : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_printer.call(this, name, location, model)
    end
    def get_system_information(this : IShellDispatch6*, name : Win32cr::Foundation::BSTR, pv : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_system_information.call(this, name, pv)
    end
    def service_start(this : IShellDispatch6*, service_name : Win32cr::Foundation::BSTR, persistent : Win32cr::System::Com::VARIANT, pSuccess : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.service_start.call(this, service_name, persistent, pSuccess)
    end
    def service_stop(this : IShellDispatch6*, service_name : Win32cr::Foundation::BSTR, persistent : Win32cr::System::Com::VARIANT, pSuccess : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.service_stop.call(this, service_name, persistent, pSuccess)
    end
    def is_service_running(this : IShellDispatch6*, service_name : Win32cr::Foundation::BSTR, pRunning : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_service_running.call(this, service_name, pRunning)
    end
    def can_start_stop_service(this : IShellDispatch6*, service_name : Win32cr::Foundation::BSTR, pCanStartStop : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.can_start_stop_service.call(this, service_name, pCanStartStop)
    end
    def show_browser_bar(this : IShellDispatch6*, bstrClsid : Win32cr::Foundation::BSTR, bShow : Win32cr::System::Com::VARIANT, pSuccess : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_browser_bar.call(this, bstrClsid, bShow, pSuccess)
    end
    def add_to_recent(this : IShellDispatch6*, varFile : Win32cr::System::Com::VARIANT, bstrCategory : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_to_recent.call(this, varFile, bstrCategory)
    end
    def windows_security(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.windows_security.call(this)
    end
    def toggle_desktop(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.toggle_desktop.call(this)
    end
    def explorer_policy(this : IShellDispatch6*, bstrPolicyName : Win32cr::Foundation::BSTR, pValue : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.explorer_policy.call(this, bstrPolicyName, pValue)
    end
    def get_setting(this : IShellDispatch6*, lSetting : Int32, pResult : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_setting.call(this, lSetting, pResult)
    end
    def window_switcher(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.window_switcher.call(this)
    end
    def search_command(this : IShellDispatch6*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.search_command.call(this)
    end

  end

  @[Extern]
  record IFileSearchBandVtbl,
    query_interface : Proc(IFileSearchBand*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IFileSearchBand*, UInt32),
    release : Proc(IFileSearchBand*, UInt32),
    get_type_info_count : Proc(IFileSearchBand*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IFileSearchBand*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IFileSearchBand*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IFileSearchBand*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    set_focus : Proc(IFileSearchBand*, Win32cr::Foundation::HRESULT),
    set_search_parameters : Proc(IFileSearchBand*, Win32cr::Foundation::BSTR*, Int16, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_SearchID : Proc(IFileSearchBand*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_Scope : Proc(IFileSearchBand*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_QueryFile : Proc(IFileSearchBand*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IFileSearchBand, lpVtbl : IFileSearchBandVtbl* do
    GUID = LibC::GUID.new(0x2d91eea1_u32, 0x9932_u16, 0x11d2_u16, StaticArray[0xbe_u8, 0x86_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa8_u8, 0x3d_u8, 0xa1_u8])
    def query_interface(this : IFileSearchBand*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IFileSearchBand*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IFileSearchBand*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IFileSearchBand*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IFileSearchBand*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IFileSearchBand*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IFileSearchBand*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def set_focus(this : IFileSearchBand*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_focus.call(this)
    end
    def set_search_parameters(this : IFileSearchBand*, pbstrSearchID : Win32cr::Foundation::BSTR*, bNavToResults : Int16, pvarScope : Win32cr::System::Com::VARIANT*, pvarQueryFile : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_search_parameters.call(this, pbstrSearchID, bNavToResults, pvarScope, pvarQueryFile)
    end
    def get_SearchID(this : IFileSearchBand*, pbstrSearchID : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_SearchID.call(this, pbstrSearchID)
    end
    def get_Scope(this : IFileSearchBand*, pvarScope : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Scope.call(this, pvarScope)
    end
    def get_QueryFile(this : IFileSearchBand*, pvarFile : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_QueryFile.call(this, pvarFile)
    end

  end

  @[Extern]
  record IWebWizardHostVtbl,
    query_interface : Proc(IWebWizardHost*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWebWizardHost*, UInt32),
    release : Proc(IWebWizardHost*, UInt32),
    get_type_info_count : Proc(IWebWizardHost*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IWebWizardHost*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IWebWizardHost*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IWebWizardHost*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    final_back : Proc(IWebWizardHost*, Win32cr::Foundation::HRESULT),
    final_next : Proc(IWebWizardHost*, Win32cr::Foundation::HRESULT),
    cancel : Proc(IWebWizardHost*, Win32cr::Foundation::HRESULT),
    put_Caption : Proc(IWebWizardHost*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Caption : Proc(IWebWizardHost*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Property : Proc(IWebWizardHost*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_Property : Proc(IWebWizardHost*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    set_wizard_buttons : Proc(IWebWizardHost*, Int16, Int16, Int16, Win32cr::Foundation::HRESULT),
    set_header_text : Proc(IWebWizardHost*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWebWizardHost, lpVtbl : IWebWizardHostVtbl* do
    GUID = LibC::GUID.new(0x18bcc359_u32, 0x4990_u16, 0x4bfb_u16, StaticArray[0xb9_u8, 0x51_u8, 0x3c_u8, 0x83_u8, 0x70_u8, 0x2b_u8, 0xe5_u8, 0xf9_u8])
    def query_interface(this : IWebWizardHost*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWebWizardHost*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWebWizardHost*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IWebWizardHost*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IWebWizardHost*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IWebWizardHost*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IWebWizardHost*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def final_back(this : IWebWizardHost*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.final_back.call(this)
    end
    def final_next(this : IWebWizardHost*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.final_next.call(this)
    end
    def cancel(this : IWebWizardHost*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cancel.call(this)
    end
    def put_Caption(this : IWebWizardHost*, bstrCaption : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Caption.call(this, bstrCaption)
    end
    def get_Caption(this : IWebWizardHost*, pbstrCaption : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Caption.call(this, pbstrCaption)
    end
    def put_Property(this : IWebWizardHost*, bstrPropertyName : Win32cr::Foundation::BSTR, pvProperty : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Property.call(this, bstrPropertyName, pvProperty)
    end
    def get_Property(this : IWebWizardHost*, bstrPropertyName : Win32cr::Foundation::BSTR, pvProperty : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Property.call(this, bstrPropertyName, pvProperty)
    end
    def set_wizard_buttons(this : IWebWizardHost*, vfEnableBack : Int16, vfEnableNext : Int16, vfLastPage : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_wizard_buttons.call(this, vfEnableBack, vfEnableNext, vfLastPage)
    end
    def set_header_text(this : IWebWizardHost*, bstrHeaderTitle : Win32cr::Foundation::BSTR, bstrHeaderSubtitle : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_header_text.call(this, bstrHeaderTitle, bstrHeaderSubtitle)
    end

  end

  @[Extern]
  record IWebWizardHost2Vtbl,
    query_interface : Proc(IWebWizardHost2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWebWizardHost2*, UInt32),
    release : Proc(IWebWizardHost2*, UInt32),
    get_type_info_count : Proc(IWebWizardHost2*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IWebWizardHost2*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(IWebWizardHost2*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(IWebWizardHost2*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    final_back : Proc(IWebWizardHost2*, Win32cr::Foundation::HRESULT),
    final_next : Proc(IWebWizardHost2*, Win32cr::Foundation::HRESULT),
    cancel : Proc(IWebWizardHost2*, Win32cr::Foundation::HRESULT),
    put_Caption : Proc(IWebWizardHost2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Caption : Proc(IWebWizardHost2*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Property : Proc(IWebWizardHost2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_Property : Proc(IWebWizardHost2*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    set_wizard_buttons : Proc(IWebWizardHost2*, Int16, Int16, Int16, Win32cr::Foundation::HRESULT),
    set_header_text : Proc(IWebWizardHost2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    sign_string : Proc(IWebWizardHost2*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWebWizardHost2, lpVtbl : IWebWizardHost2Vtbl* do
    GUID = LibC::GUID.new(0xf9c013dc_u32, 0x3c23_u16, 0x4041_u16, StaticArray[0x8e_u8, 0x39_u8, 0xcf_u8, 0xb4_u8, 0x2_u8, 0xf7_u8, 0xea_u8, 0x59_u8])
    def query_interface(this : IWebWizardHost2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWebWizardHost2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWebWizardHost2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : IWebWizardHost2*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : IWebWizardHost2*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : IWebWizardHost2*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : IWebWizardHost2*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def final_back(this : IWebWizardHost2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.final_back.call(this)
    end
    def final_next(this : IWebWizardHost2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.final_next.call(this)
    end
    def cancel(this : IWebWizardHost2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cancel.call(this)
    end
    def put_Caption(this : IWebWizardHost2*, bstrCaption : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Caption.call(this, bstrCaption)
    end
    def get_Caption(this : IWebWizardHost2*, pbstrCaption : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Caption.call(this, pbstrCaption)
    end
    def put_Property(this : IWebWizardHost2*, bstrPropertyName : Win32cr::Foundation::BSTR, pvProperty : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Property.call(this, bstrPropertyName, pvProperty)
    end
    def get_Property(this : IWebWizardHost2*, bstrPropertyName : Win32cr::Foundation::BSTR, pvProperty : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Property.call(this, bstrPropertyName, pvProperty)
    end
    def set_wizard_buttons(this : IWebWizardHost2*, vfEnableBack : Int16, vfEnableNext : Int16, vfLastPage : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_wizard_buttons.call(this, vfEnableBack, vfEnableNext, vfLastPage)
    end
    def set_header_text(this : IWebWizardHost2*, bstrHeaderTitle : Win32cr::Foundation::BSTR, bstrHeaderSubtitle : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_header_text.call(this, bstrHeaderTitle, bstrHeaderSubtitle)
    end
    def sign_string(this : IWebWizardHost2*, value : Win32cr::Foundation::BSTR, signedValue : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.sign_string.call(this, value, signedValue)
    end

  end

  @[Extern]
  record INewWDEventsVtbl,
    query_interface : Proc(INewWDEvents*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INewWDEvents*, UInt32),
    release : Proc(INewWDEvents*, UInt32),
    get_type_info_count : Proc(INewWDEvents*, UInt32*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(INewWDEvents*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_i_ds_of_names : Proc(INewWDEvents*, LibC::GUID*, Win32cr::Foundation::PWSTR*, UInt32, UInt32, Int32*, Win32cr::Foundation::HRESULT),
    invoke_1 : Proc(INewWDEvents*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT),
    final_back : Proc(INewWDEvents*, Win32cr::Foundation::HRESULT),
    final_next : Proc(INewWDEvents*, Win32cr::Foundation::HRESULT),
    cancel : Proc(INewWDEvents*, Win32cr::Foundation::HRESULT),
    put_Caption : Proc(INewWDEvents*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_Caption : Proc(INewWDEvents*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_Property : Proc(INewWDEvents*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_Property : Proc(INewWDEvents*, Win32cr::Foundation::BSTR, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    set_wizard_buttons : Proc(INewWDEvents*, Int16, Int16, Int16, Win32cr::Foundation::HRESULT),
    set_header_text : Proc(INewWDEvents*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    passport_authenticate : Proc(INewWDEvents*, Win32cr::Foundation::BSTR, Int16*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INewWDEvents, lpVtbl : INewWDEventsVtbl* do
    GUID = LibC::GUID.new(0x751c551_u32, 0x7568_u16, 0x41c9_u16, StaticArray[0x8e_u8, 0x5b_u8, 0xe2_u8, 0x2e_u8, 0x38_u8, 0x91_u8, 0x92_u8, 0x36_u8])
    def query_interface(this : INewWDEvents*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INewWDEvents*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INewWDEvents*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_info_count(this : INewWDEvents*, pctinfo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info_count.call(this, pctinfo)
    end
    def get_type_info(this : INewWDEvents*, iTInfo : UInt32, lcid : UInt32, ppTInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, iTInfo, lcid, ppTInfo)
    end
    def get_i_ds_of_names(this : INewWDEvents*, riid : LibC::GUID*, rgszNames : Win32cr::Foundation::PWSTR*, cNames : UInt32, lcid : UInt32, rgDispId : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_i_ds_of_names.call(this, riid, rgszNames, cNames, lcid, rgDispId)
    end
    def invoke_1(this : INewWDEvents*, dispIdMember : Int32, riid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pDispParams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pExcepInfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_1.call(this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
    end
    def final_back(this : INewWDEvents*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.final_back.call(this)
    end
    def final_next(this : INewWDEvents*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.final_next.call(this)
    end
    def cancel(this : INewWDEvents*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cancel.call(this)
    end
    def put_Caption(this : INewWDEvents*, bstrCaption : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Caption.call(this, bstrCaption)
    end
    def get_Caption(this : INewWDEvents*, pbstrCaption : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Caption.call(this, pbstrCaption)
    end
    def put_Property(this : INewWDEvents*, bstrPropertyName : Win32cr::Foundation::BSTR, pvProperty : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_Property.call(this, bstrPropertyName, pvProperty)
    end
    def get_Property(this : INewWDEvents*, bstrPropertyName : Win32cr::Foundation::BSTR, pvProperty : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_Property.call(this, bstrPropertyName, pvProperty)
    end
    def set_wizard_buttons(this : INewWDEvents*, vfEnableBack : Int16, vfEnableNext : Int16, vfLastPage : Int16) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_wizard_buttons.call(this, vfEnableBack, vfEnableNext, vfLastPage)
    end
    def set_header_text(this : INewWDEvents*, bstrHeaderTitle : Win32cr::Foundation::BSTR, bstrHeaderSubtitle : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_header_text.call(this, bstrHeaderTitle, bstrHeaderSubtitle)
    end
    def passport_authenticate(this : INewWDEvents*, bstrSignInUrl : Win32cr::Foundation::BSTR, pvfAuthenitcated : Int16*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.passport_authenticate.call(this, bstrSignInUrl, pvfAuthenitcated)
    end

  end

  @[Extern]
  record IAutoCompleteVtbl,
    query_interface : Proc(IAutoComplete*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAutoComplete*, UInt32),
    release : Proc(IAutoComplete*, UInt32),
    init : Proc(IAutoComplete*, Win32cr::Foundation::HWND, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    enable : Proc(IAutoComplete*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAutoComplete, lpVtbl : IAutoCompleteVtbl* do
    GUID = LibC::GUID.new(0xbb2762_u32, 0x6a77_u16, 0x11d0_u16, StaticArray[0xa5_u8, 0x35_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0xd0_u8, 0x62_u8])
    def query_interface(this : IAutoComplete*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAutoComplete*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAutoComplete*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def init(this : IAutoComplete*, hwndEdit : Win32cr::Foundation::HWND, punkACL : Void*, pwszRegKeyPath : Win32cr::Foundation::PWSTR, pwszQuickComplete : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.init.call(this, hwndEdit, punkACL, pwszRegKeyPath, pwszQuickComplete)
    end
    def enable(this : IAutoComplete*, fEnable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable.call(this, fEnable)
    end

  end

  @[Extern]
  record IAutoComplete2Vtbl,
    query_interface : Proc(IAutoComplete2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAutoComplete2*, UInt32),
    release : Proc(IAutoComplete2*, UInt32),
    init : Proc(IAutoComplete2*, Win32cr::Foundation::HWND, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    enable : Proc(IAutoComplete2*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_options : Proc(IAutoComplete2*, UInt32, Win32cr::Foundation::HRESULT),
    get_options : Proc(IAutoComplete2*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAutoComplete2, lpVtbl : IAutoComplete2Vtbl* do
    GUID = LibC::GUID.new(0xeac04bc0_u32, 0x3791_u16, 0x11d2_u16, StaticArray[0xbb_u8, 0x95_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0x7b_u8, 0x46_u8, 0x4c_u8])
    def query_interface(this : IAutoComplete2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAutoComplete2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAutoComplete2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def init(this : IAutoComplete2*, hwndEdit : Win32cr::Foundation::HWND, punkACL : Void*, pwszRegKeyPath : Win32cr::Foundation::PWSTR, pwszQuickComplete : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.init.call(this, hwndEdit, punkACL, pwszRegKeyPath, pwszQuickComplete)
    end
    def enable(this : IAutoComplete2*, fEnable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable.call(this, fEnable)
    end
    def set_options(this : IAutoComplete2*, dwFlag : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_options.call(this, dwFlag)
    end
    def get_options(this : IAutoComplete2*, pdwFlag : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_options.call(this, pdwFlag)
    end

  end

  @[Extern]
  record IEnumACStringVtbl,
    query_interface : Proc(IEnumACString*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumACString*, UInt32),
    release : Proc(IEnumACString*, UInt32),
    next__ : Proc(IEnumACString*, UInt32, Win32cr::Foundation::PWSTR*, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumACString*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumACString*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumACString*, Void**, Win32cr::Foundation::HRESULT),
    next_item : Proc(IEnumACString*, UInt16*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    set_enum_options : Proc(IEnumACString*, UInt32, Win32cr::Foundation::HRESULT),
    get_enum_options : Proc(IEnumACString*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumACString, lpVtbl : IEnumACStringVtbl* do
    GUID = LibC::GUID.new(0x8e74c210_u32, 0xcf9d_u16, 0x4eaf_u16, StaticArray[0xa4_u8, 0x3_u8, 0x73_u8, 0x56_u8, 0x42_u8, 0x8f_u8, 0xa_u8, 0x5a_u8])
    def query_interface(this : IEnumACString*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumACString*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumACString*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumACString*, celt : UInt32, rgelt : Win32cr::Foundation::PWSTR*, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, rgelt, pceltFetched)
    end
    def skip(this : IEnumACString*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumACString*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumACString*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppenum)
    end
    def next_item(this : IEnumACString*, pszUrl : UInt16*, cchMax : UInt32, pulSortIndex : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next_item.call(this, pszUrl, cchMax, pulSortIndex)
    end
    def set_enum_options(this : IEnumACString*, dwOptions : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_enum_options.call(this, dwOptions)
    end
    def get_enum_options(this : IEnumACString*, pdwOptions : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_enum_options.call(this, pdwOptions)
    end

  end

  @[Extern]
  record IDataObjectAsyncCapabilityVtbl,
    query_interface : Proc(IDataObjectAsyncCapability*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDataObjectAsyncCapability*, UInt32),
    release : Proc(IDataObjectAsyncCapability*, UInt32),
    set_async_mode : Proc(IDataObjectAsyncCapability*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_async_mode : Proc(IDataObjectAsyncCapability*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    start_operation : Proc(IDataObjectAsyncCapability*, Void*, Win32cr::Foundation::HRESULT),
    in_operation : Proc(IDataObjectAsyncCapability*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    end_operation : Proc(IDataObjectAsyncCapability*, Win32cr::Foundation::HRESULT, Void*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDataObjectAsyncCapability, lpVtbl : IDataObjectAsyncCapabilityVtbl* do
    GUID = LibC::GUID.new(0x3d8b0590_u32, 0xf691_u16, 0x11d2_u16, StaticArray[0x8e_u8, 0xa9_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0xdf_u8, 0x5b_u8, 0xd4_u8])
    def query_interface(this : IDataObjectAsyncCapability*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDataObjectAsyncCapability*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDataObjectAsyncCapability*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_async_mode(this : IDataObjectAsyncCapability*, fDoOpAsync : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_async_mode.call(this, fDoOpAsync)
    end
    def get_async_mode(this : IDataObjectAsyncCapability*, pfIsOpAsync : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_async_mode.call(this, pfIsOpAsync)
    end
    def start_operation(this : IDataObjectAsyncCapability*, pbcReserved : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start_operation.call(this, pbcReserved)
    end
    def in_operation(this : IDataObjectAsyncCapability*, pfInAsyncOp : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.in_operation.call(this, pfInAsyncOp)
    end
    def end_operation(this : IDataObjectAsyncCapability*, hResult : Win32cr::Foundation::HRESULT, pbcReserved : Void*, dwEffects : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.end_operation.call(this, hResult, pbcReserved, dwEffects)
    end

  end

  @[Extern]
  record IExtractIconAVtbl,
    query_interface : Proc(IExtractIconA*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExtractIconA*, UInt32),
    release : Proc(IExtractIconA*, UInt32),
    get_icon_location : Proc(IExtractIconA*, UInt32, UInt8*, UInt32, Int32*, UInt32*, Win32cr::Foundation::HRESULT),
    extract : Proc(IExtractIconA*, Win32cr::Foundation::PSTR, UInt32, Win32cr::UI::WindowsAndMessaging::HICON*, Win32cr::UI::WindowsAndMessaging::HICON*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExtractIconA, lpVtbl : IExtractIconAVtbl* do
    GUID = LibC::GUID.new(0x214eb_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IExtractIconA*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExtractIconA*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExtractIconA*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_icon_location(this : IExtractIconA*, uFlags : UInt32, pszIconFile : UInt8*, cchMax : UInt32, piIndex : Int32*, pwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_icon_location.call(this, uFlags, pszIconFile, cchMax, piIndex, pwFlags)
    end
    def extract(this : IExtractIconA*, pszFile : Win32cr::Foundation::PSTR, nIconIndex : UInt32, phiconLarge : Win32cr::UI::WindowsAndMessaging::HICON*, phiconSmall : Win32cr::UI::WindowsAndMessaging::HICON*, nIconSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.extract.call(this, pszFile, nIconIndex, phiconLarge, phiconSmall, nIconSize)
    end

  end

  @[Extern]
  record IExtractIconWVtbl,
    query_interface : Proc(IExtractIconW*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExtractIconW*, UInt32),
    release : Proc(IExtractIconW*, UInt32),
    get_icon_location : Proc(IExtractIconW*, UInt32, UInt16*, UInt32, Int32*, UInt32*, Win32cr::Foundation::HRESULT),
    extract : Proc(IExtractIconW*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::UI::WindowsAndMessaging::HICON*, Win32cr::UI::WindowsAndMessaging::HICON*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExtractIconW, lpVtbl : IExtractIconWVtbl* do
    GUID = LibC::GUID.new(0x214fa_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IExtractIconW*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExtractIconW*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExtractIconW*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_icon_location(this : IExtractIconW*, uFlags : UInt32, pszIconFile : UInt16*, cchMax : UInt32, piIndex : Int32*, pwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_icon_location.call(this, uFlags, pszIconFile, cchMax, piIndex, pwFlags)
    end
    def extract(this : IExtractIconW*, pszFile : Win32cr::Foundation::PWSTR, nIconIndex : UInt32, phiconLarge : Win32cr::UI::WindowsAndMessaging::HICON*, phiconSmall : Win32cr::UI::WindowsAndMessaging::HICON*, nIconSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.extract.call(this, pszFile, nIconIndex, phiconLarge, phiconSmall, nIconSize)
    end

  end

  @[Extern]
  record IShellIconOverlayManagerVtbl,
    query_interface : Proc(IShellIconOverlayManager*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellIconOverlayManager*, UInt32),
    release : Proc(IShellIconOverlayManager*, UInt32),
    get_file_overlay_info : Proc(IShellIconOverlayManager*, Win32cr::Foundation::PWSTR, UInt32, Int32*, UInt32, Win32cr::Foundation::HRESULT),
    get_reserved_overlay_info : Proc(IShellIconOverlayManager*, Win32cr::Foundation::PWSTR, UInt32, Int32*, UInt32, Int32, Win32cr::Foundation::HRESULT),
    refresh_overlay_images : Proc(IShellIconOverlayManager*, UInt32, Win32cr::Foundation::HRESULT),
    load_nonloaded_overlay_identifiers : Proc(IShellIconOverlayManager*, Win32cr::Foundation::HRESULT),
    overlay_index_from_image_index : Proc(IShellIconOverlayManager*, Int32, Int32*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellIconOverlayManager, lpVtbl : IShellIconOverlayManagerVtbl* do
    GUID = LibC::GUID.new(0xf10b5e34_u32, 0xdd3b_u16, 0x42a7_u16, StaticArray[0xaa_u8, 0x7d_u8, 0x2f_u8, 0x4e_u8, 0xc5_u8, 0x4b_u8, 0xb0_u8, 0x9b_u8])
    def query_interface(this : IShellIconOverlayManager*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellIconOverlayManager*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellIconOverlayManager*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_file_overlay_info(this : IShellIconOverlayManager*, pwszPath : Win32cr::Foundation::PWSTR, dwAttrib : UInt32, pIndex : Int32*, dwflags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_file_overlay_info.call(this, pwszPath, dwAttrib, pIndex, dwflags)
    end
    def get_reserved_overlay_info(this : IShellIconOverlayManager*, pwszPath : Win32cr::Foundation::PWSTR, dwAttrib : UInt32, pIndex : Int32*, dwflags : UInt32, iReservedID : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_reserved_overlay_info.call(this, pwszPath, dwAttrib, pIndex, dwflags, iReservedID)
    end
    def refresh_overlay_images(this : IShellIconOverlayManager*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_overlay_images.call(this, dwFlags)
    end
    def load_nonloaded_overlay_identifiers(this : IShellIconOverlayManager*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.load_nonloaded_overlay_identifiers.call(this)
    end
    def overlay_index_from_image_index(this : IShellIconOverlayManager*, iImage : Int32, piIndex : Int32*, fAdd : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.overlay_index_from_image_index.call(this, iImage, piIndex, fAdd)
    end

  end

  @[Extern]
  record IShellIconOverlayVtbl,
    query_interface : Proc(IShellIconOverlay*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellIconOverlay*, UInt32),
    release : Proc(IShellIconOverlay*, UInt32),
    get_overlay_index : Proc(IShellIconOverlay*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Int32*, Win32cr::Foundation::HRESULT),
    get_overlay_icon_index : Proc(IShellIconOverlay*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Int32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellIconOverlay, lpVtbl : IShellIconOverlayVtbl* do
    GUID = LibC::GUID.new(0x7d688a70_u32, 0xc613_u16, 0x11d0_u16, StaticArray[0x99_u8, 0x9b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd6_u8, 0x55_u8, 0xe1_u8])
    def query_interface(this : IShellIconOverlay*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellIconOverlay*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellIconOverlay*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_overlay_index(this : IShellIconOverlay*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pIndex : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_overlay_index.call(this, pidl, pIndex)
    end
    def get_overlay_icon_index(this : IShellIconOverlay*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pIconIndex : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_overlay_icon_index.call(this, pidl, pIconIndex)
    end

  end

  @[Extern]
  record IURLSearchHookVtbl,
    query_interface : Proc(IURLSearchHook*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IURLSearchHook*, UInt32),
    release : Proc(IURLSearchHook*, UInt32),
    translate : Proc(IURLSearchHook*, UInt16*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IURLSearchHook, lpVtbl : IURLSearchHookVtbl* do
    GUID = LibC::GUID.new(0xac60f6a0_u32, 0xfd9_u16, 0x11d0_u16, StaticArray[0x99_u8, 0xcb_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd6_u8, 0x44_u8, 0x97_u8])
    def query_interface(this : IURLSearchHook*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IURLSearchHook*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IURLSearchHook*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def translate(this : IURLSearchHook*, pwszSearchURL : UInt16*, cchBufferSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate.call(this, pwszSearchURL, cchBufferSize)
    end

  end

  @[Extern]
  record ISearchContextVtbl,
    query_interface : Proc(ISearchContext*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISearchContext*, UInt32),
    release : Proc(ISearchContext*, UInt32),
    get_search_url : Proc(ISearchContext*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_search_text : Proc(ISearchContext*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_search_style : Proc(ISearchContext*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISearchContext, lpVtbl : ISearchContextVtbl* do
    GUID = LibC::GUID.new(0x9f656a2_u32, 0x41af_u16, 0x480c_u16, StaticArray[0x88_u8, 0xf7_u8, 0x16_u8, 0xcc_u8, 0xd_u8, 0x16_u8, 0x46_u8, 0x15_u8])
    def query_interface(this : ISearchContext*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISearchContext*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISearchContext*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_search_url(this : ISearchContext*, pbstrSearchUrl : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_search_url.call(this, pbstrSearchUrl)
    end
    def get_search_text(this : ISearchContext*, pbstrSearchText : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_search_text.call(this, pbstrSearchText)
    end
    def get_search_style(this : ISearchContext*, pdwSearchStyle : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_search_style.call(this, pdwSearchStyle)
    end

  end

  @[Extern]
  record IURLSearchHook2Vtbl,
    query_interface : Proc(IURLSearchHook2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IURLSearchHook2*, UInt32),
    release : Proc(IURLSearchHook2*, UInt32),
    translate : Proc(IURLSearchHook2*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    translate_with_search_context : Proc(IURLSearchHook2*, UInt16*, UInt32, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IURLSearchHook2, lpVtbl : IURLSearchHook2Vtbl* do
    GUID = LibC::GUID.new(0x5ee44da4_u32, 0x6d32_u16, 0x46e3_u16, StaticArray[0x86_u8, 0xbc_u8, 0x7_u8, 0x54_u8, 0xd_u8, 0xed_u8, 0xd0_u8, 0xe0_u8])
    def query_interface(this : IURLSearchHook2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IURLSearchHook2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IURLSearchHook2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def translate(this : IURLSearchHook2*, pwszSearchURL : UInt16*, cchBufferSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate.call(this, pwszSearchURL, cchBufferSize)
    end
    def translate_with_search_context(this : IURLSearchHook2*, pwszSearchURL : UInt16*, cchBufferSize : UInt32, pSearchContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.translate_with_search_context.call(this, pwszSearchURL, cchBufferSize, pSearchContext)
    end

  end

  @[Extern]
  record IShellDetailsVtbl,
    query_interface : Proc(IShellDetails*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellDetails*, UInt32),
    release : Proc(IShellDetails*, UInt32),
    get_details_of : Proc(IShellDetails*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::UI::Shell::Common::SHELLDETAILS*, Win32cr::Foundation::HRESULT),
    column_click : Proc(IShellDetails*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellDetails, lpVtbl : IShellDetailsVtbl* do
    GUID = LibC::GUID.new(0x214ec_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IShellDetails*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellDetails*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellDetails*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_details_of(this : IShellDetails*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, iColumn : UInt32, pDetails : Win32cr::UI::Shell::Common::SHELLDETAILS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_details_of.call(this, pidl, iColumn, pDetails)
    end
    def column_click(this : IShellDetails*, iColumn : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.column_click.call(this, iColumn)
    end

  end

  @[Extern]
  record IObjMgrVtbl,
    query_interface : Proc(IObjMgr*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IObjMgr*, UInt32),
    release : Proc(IObjMgr*, UInt32),
    append : Proc(IObjMgr*, Void*, Win32cr::Foundation::HRESULT),
    remove : Proc(IObjMgr*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IObjMgr, lpVtbl : IObjMgrVtbl* do
    GUID = LibC::GUID.new(0xbb2761_u32, 0x6a77_u16, 0x11d0_u16, StaticArray[0xa5_u8, 0x35_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0xd0_u8, 0x62_u8])
    def query_interface(this : IObjMgr*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IObjMgr*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IObjMgr*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def append(this : IObjMgr*, punk : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.append.call(this, punk)
    end
    def remove(this : IObjMgr*, punk : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove.call(this, punk)
    end

  end

  @[Extern]
  record IACListVtbl,
    query_interface : Proc(IACList*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IACList*, UInt32),
    release : Proc(IACList*, UInt32),
    expand : Proc(IACList*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IACList, lpVtbl : IACListVtbl* do
    GUID = LibC::GUID.new(0x77a130b0_u32, 0x94fd_u16, 0x11d0_u16, StaticArray[0xa5_u8, 0x44_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0xd0_u8, 0x62_u8])
    def query_interface(this : IACList*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IACList*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IACList*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def expand(this : IACList*, pszExpand : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.expand.call(this, pszExpand)
    end

  end

  @[Extern]
  record IACList2Vtbl,
    query_interface : Proc(IACList2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IACList2*, UInt32),
    release : Proc(IACList2*, UInt32),
    expand : Proc(IACList2*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_options : Proc(IACList2*, UInt32, Win32cr::Foundation::HRESULT),
    get_options : Proc(IACList2*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IACList2, lpVtbl : IACList2Vtbl* do
    GUID = LibC::GUID.new(0x470141a0_u32, 0x5186_u16, 0x11d2_u16, StaticArray[0xbb_u8, 0xb6_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0x7b_u8, 0x46_u8, 0x4c_u8])
    def query_interface(this : IACList2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IACList2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IACList2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def expand(this : IACList2*, pszExpand : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.expand.call(this, pszExpand)
    end
    def set_options(this : IACList2*, dwFlag : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_options.call(this, dwFlag)
    end
    def get_options(this : IACList2*, pdwFlag : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_options.call(this, pdwFlag)
    end

  end

  @[Extern]
  record IProgressDialogVtbl,
    query_interface : Proc(IProgressDialog*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IProgressDialog*, UInt32),
    release : Proc(IProgressDialog*, UInt32),
    start_progress_dialog : Proc(IProgressDialog*, Win32cr::Foundation::HWND, Void*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    stop_progress_dialog : Proc(IProgressDialog*, Win32cr::Foundation::HRESULT),
    set_title : Proc(IProgressDialog*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_animation : Proc(IProgressDialog*, Win32cr::Foundation::HINSTANCE, UInt32, Win32cr::Foundation::HRESULT),
    has_user_cancelled : Proc(IProgressDialog*, Win32cr::Foundation::BOOL),
    set_progress : Proc(IProgressDialog*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    set_progress64 : Proc(IProgressDialog*, UInt64, UInt64, Win32cr::Foundation::HRESULT),
    set_line : Proc(IProgressDialog*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, Void*, Win32cr::Foundation::HRESULT),
    set_cancel_msg : Proc(IProgressDialog*, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::HRESULT),
    timer : Proc(IProgressDialog*, UInt32, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IProgressDialog, lpVtbl : IProgressDialogVtbl* do
    GUID = LibC::GUID.new(0xebbc7c04_u32, 0x315e_u16, 0x11d2_u16, StaticArray[0xb6_u8, 0x2f_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0xdf_u8, 0x5b_u8, 0xd4_u8])
    def query_interface(this : IProgressDialog*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IProgressDialog*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IProgressDialog*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def start_progress_dialog(this : IProgressDialog*, hwndParent : Win32cr::Foundation::HWND, punkEnableModless : Void*, dwFlags : UInt32, pvResevered : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start_progress_dialog.call(this, hwndParent, punkEnableModless, dwFlags, pvResevered)
    end
    def stop_progress_dialog(this : IProgressDialog*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop_progress_dialog.call(this)
    end
    def set_title(this : IProgressDialog*, pwzTitle : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_title.call(this, pwzTitle)
    end
    def set_animation(this : IProgressDialog*, hInstAnimation : Win32cr::Foundation::HINSTANCE, idAnimation : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_animation.call(this, hInstAnimation, idAnimation)
    end
    def has_user_cancelled(this : IProgressDialog*) : Win32cr::Foundation::BOOL
      @lpVtbl.try &.value.has_user_cancelled.call(this)
    end
    def set_progress(this : IProgressDialog*, dwCompleted : UInt32, dwTotal : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_progress.call(this, dwCompleted, dwTotal)
    end
    def set_progress64(this : IProgressDialog*, ullCompleted : UInt64, ullTotal : UInt64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_progress64.call(this, ullCompleted, ullTotal)
    end
    def set_line(this : IProgressDialog*, dwLineNum : UInt32, pwzString : Win32cr::Foundation::PWSTR, fCompactPath : Win32cr::Foundation::BOOL, pvResevered : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_line.call(this, dwLineNum, pwzString, fCompactPath, pvResevered)
    end
    def set_cancel_msg(this : IProgressDialog*, pwzCancelMsg : Win32cr::Foundation::PWSTR, pvResevered : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cancel_msg.call(this, pwzCancelMsg, pvResevered)
    end
    def timer(this : IProgressDialog*, dwTimerAction : UInt32, pvResevered : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.timer.call(this, dwTimerAction, pvResevered)
    end

  end

  @[Extern]
  record IDockingWindowSiteVtbl,
    query_interface : Proc(IDockingWindowSite*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDockingWindowSite*, UInt32),
    release : Proc(IDockingWindowSite*, UInt32),
    get_window : Proc(IDockingWindowSite*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    context_sensitive_help : Proc(IDockingWindowSite*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_border_dw : Proc(IDockingWindowSite*, Void*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    request_border_space_dw : Proc(IDockingWindowSite*, Void*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    set_border_space_dw : Proc(IDockingWindowSite*, Void*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDockingWindowSite, lpVtbl : IDockingWindowSiteVtbl* do
    GUID = LibC::GUID.new(0x2a342fc2_u32, 0x7b26_u16, 0x11d0_u16, StaticArray[0x8c_u8, 0xa9_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x2d_u8, 0xbf_u8, 0xe8_u8])
    def query_interface(this : IDockingWindowSite*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDockingWindowSite*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDockingWindowSite*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IDockingWindowSite*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, phwnd)
    end
    def context_sensitive_help(this : IDockingWindowSite*, fEnterMode : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.context_sensitive_help.call(this, fEnterMode)
    end
    def get_border_dw(this : IDockingWindowSite*, punkObj : Void*, prcBorder : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_border_dw.call(this, punkObj, prcBorder)
    end
    def request_border_space_dw(this : IDockingWindowSite*, punkObj : Void*, pbw : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.request_border_space_dw.call(this, punkObj, pbw)
    end
    def set_border_space_dw(this : IDockingWindowSite*, punkObj : Void*, pbw : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_border_space_dw.call(this, punkObj, pbw)
    end

  end

  @[Extern]
  record IShellChangeNotifyVtbl,
    query_interface : Proc(IShellChangeNotify*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellChangeNotify*, UInt32),
    release : Proc(IShellChangeNotify*, UInt32),
    on_change : Proc(IShellChangeNotify*, Int32, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellChangeNotify, lpVtbl : IShellChangeNotifyVtbl* do
    GUID = LibC::GUID.new(0xd82be2b1_u32, 0x5764_u16, 0x11d0_u16, StaticArray[0xa9_u8, 0x6e_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0x5_u8, 0xa2_u8])
    def query_interface(this : IShellChangeNotify*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellChangeNotify*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellChangeNotify*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_change(this : IShellChangeNotify*, lEvent : Int32, pidl1 : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidl2 : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_change.call(this, lEvent, pidl1, pidl2)
    end

  end

  @[Extern]
  record IQueryInfoVtbl,
    query_interface : Proc(IQueryInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IQueryInfo*, UInt32),
    release : Proc(IQueryInfo*, UInt32),
    get_info_tip : Proc(IQueryInfo*, Win32cr::UI::Shell::QITIPF_FLAGS, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_info_flags : Proc(IQueryInfo*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IQueryInfo, lpVtbl : IQueryInfoVtbl* do
    GUID = LibC::GUID.new(0x21500_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : IQueryInfo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IQueryInfo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IQueryInfo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_info_tip(this : IQueryInfo*, dwFlags : Win32cr::UI::Shell::QITIPF_FLAGS, ppwszTip : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_info_tip.call(this, dwFlags, ppwszTip)
    end
    def get_info_flags(this : IQueryInfo*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_info_flags.call(this, pdwFlags)
    end

  end

  @[Extern]
  record IShellFolderViewCBVtbl,
    query_interface : Proc(IShellFolderViewCB*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellFolderViewCB*, UInt32),
    release : Proc(IShellFolderViewCB*, UInt32),
    message_sfvcb : Proc(IShellFolderViewCB*, Win32cr::UI::Shell::SFVM_MESSAGE_ID, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellFolderViewCB, lpVtbl : IShellFolderViewCBVtbl* do
    GUID = LibC::GUID.new(0x2047e320_u32, 0xf2a9_u16, 0x11ce_u16, StaticArray[0xae_u8, 0x65_u8, 0x8_u8, 0x0_u8, 0x2b_u8, 0x2e_u8, 0x12_u8, 0x62_u8])
    def query_interface(this : IShellFolderViewCB*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellFolderViewCB*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellFolderViewCB*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def message_sfvcb(this : IShellFolderViewCB*, uMsg : Win32cr::UI::Shell::SFVM_MESSAGE_ID, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.message_sfvcb.call(this, uMsg, wParam, lParam)
    end

  end

  @[Extern]
  record IShellFolderViewVtbl,
    query_interface : Proc(IShellFolderView*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellFolderView*, UInt32),
    release : Proc(IShellFolderView*, UInt32),
    rearrange : Proc(IShellFolderView*, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT),
    get_arrange_param : Proc(IShellFolderView*, Win32cr::Foundation::LPARAM*, Win32cr::Foundation::HRESULT),
    arrange_grid : Proc(IShellFolderView*, Win32cr::Foundation::HRESULT),
    auto_arrange : Proc(IShellFolderView*, Win32cr::Foundation::HRESULT),
    get_auto_arrange : Proc(IShellFolderView*, Win32cr::Foundation::HRESULT),
    add_object : Proc(IShellFolderView*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32*, Win32cr::Foundation::HRESULT),
    get_object : Proc(IShellFolderView*, Win32cr::UI::Shell::Common::ITEMIDLIST**, UInt32, Win32cr::Foundation::HRESULT),
    remove_object : Proc(IShellFolderView*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32*, Win32cr::Foundation::HRESULT),
    get_object_count : Proc(IShellFolderView*, UInt32*, Win32cr::Foundation::HRESULT),
    set_object_count : Proc(IShellFolderView*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    update_object : Proc(IShellFolderView*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32*, Win32cr::Foundation::HRESULT),
    refresh_object : Proc(IShellFolderView*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32*, Win32cr::Foundation::HRESULT),
    set_redraw : Proc(IShellFolderView*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_selected_count : Proc(IShellFolderView*, UInt32*, Win32cr::Foundation::HRESULT),
    get_selected_objects : Proc(IShellFolderView*, Win32cr::UI::Shell::Common::ITEMIDLIST***, UInt32*, Win32cr::Foundation::HRESULT),
    is_drop_on_source : Proc(IShellFolderView*, Void*, Win32cr::Foundation::HRESULT),
    get_drag_point : Proc(IShellFolderView*, Win32cr::Foundation::POINT*, Win32cr::Foundation::HRESULT),
    get_drop_point : Proc(IShellFolderView*, Win32cr::Foundation::POINT*, Win32cr::Foundation::HRESULT),
    move_icons : Proc(IShellFolderView*, Void*, Win32cr::Foundation::HRESULT),
    set_item_pos : Proc(IShellFolderView*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::POINT*, Win32cr::Foundation::HRESULT),
    is_bk_drop_target : Proc(IShellFolderView*, Void*, Win32cr::Foundation::HRESULT),
    set_clipboard : Proc(IShellFolderView*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_points : Proc(IShellFolderView*, Void*, Win32cr::Foundation::HRESULT),
    get_item_spacing : Proc(IShellFolderView*, Win32cr::UI::Shell::ITEMSPACING*, Win32cr::Foundation::HRESULT),
    set_callback : Proc(IShellFolderView*, Void*, Void**, Win32cr::Foundation::HRESULT),
    select__ : Proc(IShellFolderView*, Win32cr::UI::Shell::SFVS_SELECT, Win32cr::Foundation::HRESULT),
    query_support : Proc(IShellFolderView*, UInt32*, Win32cr::Foundation::HRESULT),
    set_automation_object : Proc(IShellFolderView*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellFolderView, lpVtbl : IShellFolderViewVtbl* do
    GUID = LibC::GUID.new(0x37a378c0_u32, 0xf82d_u16, 0x11ce_u16, StaticArray[0xae_u8, 0x65_u8, 0x8_u8, 0x0_u8, 0x2b_u8, 0x2e_u8, 0x12_u8, 0x62_u8])
    def query_interface(this : IShellFolderView*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellFolderView*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellFolderView*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def rearrange(this : IShellFolderView*, lParamSort : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.rearrange.call(this, lParamSort)
    end
    def get_arrange_param(this : IShellFolderView*, plParamSort : Win32cr::Foundation::LPARAM*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_arrange_param.call(this, plParamSort)
    end
    def arrange_grid(this : IShellFolderView*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.arrange_grid.call(this)
    end
    def auto_arrange(this : IShellFolderView*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.auto_arrange.call(this)
    end
    def get_auto_arrange(this : IShellFolderView*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_auto_arrange.call(this)
    end
    def add_object(this : IShellFolderView*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, puItem : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_object.call(this, pidl, puItem)
    end
    def get_object(this : IShellFolderView*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, uItem : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object.call(this, ppidl, uItem)
    end
    def remove_object(this : IShellFolderView*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, puItem : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_object.call(this, pidl, puItem)
    end
    def get_object_count(this : IShellFolderView*, puCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object_count.call(this, puCount)
    end
    def set_object_count(this : IShellFolderView*, uCount : UInt32, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_object_count.call(this, uCount, dwFlags)
    end
    def update_object(this : IShellFolderView*, pidlOld : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidlNew : Win32cr::UI::Shell::Common::ITEMIDLIST*, puItem : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_object.call(this, pidlOld, pidlNew, puItem)
    end
    def refresh_object(this : IShellFolderView*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, puItem : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.refresh_object.call(this, pidl, puItem)
    end
    def set_redraw(this : IShellFolderView*, bRedraw : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_redraw.call(this, bRedraw)
    end
    def get_selected_count(this : IShellFolderView*, puSelected : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_selected_count.call(this, puSelected)
    end
    def get_selected_objects(this : IShellFolderView*, pppidl : Win32cr::UI::Shell::Common::ITEMIDLIST***, puItems : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_selected_objects.call(this, pppidl, puItems)
    end
    def is_drop_on_source(this : IShellFolderView*, pDropTarget : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_drop_on_source.call(this, pDropTarget)
    end
    def get_drag_point(this : IShellFolderView*, ppt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_drag_point.call(this, ppt)
    end
    def get_drop_point(this : IShellFolderView*, ppt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_drop_point.call(this, ppt)
    end
    def move_icons(this : IShellFolderView*, pDataObject : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.move_icons.call(this, pDataObject)
    end
    def set_item_pos(this : IShellFolderView*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_item_pos.call(this, pidl, ppt)
    end
    def is_bk_drop_target(this : IShellFolderView*, pDropTarget : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_bk_drop_target.call(this, pDropTarget)
    end
    def set_clipboard(this : IShellFolderView*, bMove : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_clipboard.call(this, bMove)
    end
    def set_points(this : IShellFolderView*, pDataObject : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_points.call(this, pDataObject)
    end
    def get_item_spacing(this : IShellFolderView*, pSpacing : Win32cr::UI::Shell::ITEMSPACING*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_spacing.call(this, pSpacing)
    end
    def set_callback(this : IShellFolderView*, pNewCB : Void*, ppOldCB : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_callback.call(this, pNewCB, ppOldCB)
    end
    def select__(this : IShellFolderView*, dwFlags : Win32cr::UI::Shell::SFVS_SELECT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select__.call(this, dwFlags)
    end
    def query_support(this : IShellFolderView*, pdwSupport : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_support.call(this, pdwSupport)
    end
    def set_automation_object(this : IShellFolderView*, pdisp : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_automation_object.call(this, pdisp)
    end

  end

  @[Extern]
  record INamedPropertyBagVtbl,
    query_interface : Proc(INamedPropertyBag*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INamedPropertyBag*, UInt32),
    release : Proc(INamedPropertyBag*, UInt32),
    read_property_npb : Proc(INamedPropertyBag*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::System::Com::StructuredStorage::PROPVARIANT*, Win32cr::Foundation::HRESULT),
    write_property_npb : Proc(INamedPropertyBag*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::System::Com::StructuredStorage::PROPVARIANT*, Win32cr::Foundation::HRESULT),
    remove_property_npb : Proc(INamedPropertyBag*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INamedPropertyBag, lpVtbl : INamedPropertyBagVtbl* do
    GUID = LibC::GUID.new(0xfb700430_u32, 0x952c_u16, 0x11d1_u16, StaticArray[0x94_u8, 0x6f_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : INamedPropertyBag*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INamedPropertyBag*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INamedPropertyBag*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def read_property_npb(this : INamedPropertyBag*, pszBagname : Win32cr::Foundation::PWSTR, pszPropName : Win32cr::Foundation::PWSTR, pVar : Win32cr::System::Com::StructuredStorage::PROPVARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read_property_npb.call(this, pszBagname, pszPropName, pVar)
    end
    def write_property_npb(this : INamedPropertyBag*, pszBagname : Win32cr::Foundation::PWSTR, pszPropName : Win32cr::Foundation::PWSTR, pVar : Win32cr::System::Com::StructuredStorage::PROPVARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_property_npb.call(this, pszBagname, pszPropName, pVar)
    end
    def remove_property_npb(this : INamedPropertyBag*, pszBagname : Win32cr::Foundation::PWSTR, pszPropName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_property_npb.call(this, pszBagname, pszPropName)
    end

  end

  @[Extern]
  record INewShortcutHookAVtbl,
    query_interface : Proc(INewShortcutHookA*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INewShortcutHookA*, UInt32),
    release : Proc(INewShortcutHookA*, UInt32),
    set_referent : Proc(INewShortcutHookA*, Win32cr::Foundation::PSTR, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    get_referent : Proc(INewShortcutHookA*, UInt8*, Int32, Win32cr::Foundation::HRESULT),
    set_folder : Proc(INewShortcutHookA*, Win32cr::Foundation::PSTR, Win32cr::Foundation::HRESULT),
    get_folder : Proc(INewShortcutHookA*, UInt8*, Int32, Win32cr::Foundation::HRESULT),
    get_name : Proc(INewShortcutHookA*, UInt8*, Int32, Win32cr::Foundation::HRESULT),
    get_extension : Proc(INewShortcutHookA*, UInt8*, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INewShortcutHookA, lpVtbl : INewShortcutHookAVtbl* do
    GUID = LibC::GUID.new(0x214e1_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : INewShortcutHookA*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INewShortcutHookA*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INewShortcutHookA*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_referent(this : INewShortcutHookA*, pcszReferent : Win32cr::Foundation::PSTR, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_referent.call(this, pcszReferent, hwnd)
    end
    def get_referent(this : INewShortcutHookA*, pszReferent : UInt8*, cchReferent : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_referent.call(this, pszReferent, cchReferent)
    end
    def set_folder(this : INewShortcutHookA*, pcszFolder : Win32cr::Foundation::PSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_folder.call(this, pcszFolder)
    end
    def get_folder(this : INewShortcutHookA*, pszFolder : UInt8*, cchFolder : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder.call(this, pszFolder, cchFolder)
    end
    def get_name(this : INewShortcutHookA*, pszName : UInt8*, cchName : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_name.call(this, pszName, cchName)
    end
    def get_extension(this : INewShortcutHookA*, pszExtension : UInt8*, cchExtension : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_extension.call(this, pszExtension, cchExtension)
    end

  end

  @[Extern]
  record INewShortcutHookWVtbl,
    query_interface : Proc(INewShortcutHookW*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(INewShortcutHookW*, UInt32),
    release : Proc(INewShortcutHookW*, UInt32),
    set_referent : Proc(INewShortcutHookW*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    get_referent : Proc(INewShortcutHookW*, UInt16*, Int32, Win32cr::Foundation::HRESULT),
    set_folder : Proc(INewShortcutHookW*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_folder : Proc(INewShortcutHookW*, UInt16*, Int32, Win32cr::Foundation::HRESULT),
    get_name : Proc(INewShortcutHookW*, UInt16*, Int32, Win32cr::Foundation::HRESULT),
    get_extension : Proc(INewShortcutHookW*, UInt16*, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record INewShortcutHookW, lpVtbl : INewShortcutHookWVtbl* do
    GUID = LibC::GUID.new(0x214f7_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : INewShortcutHookW*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : INewShortcutHookW*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : INewShortcutHookW*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_referent(this : INewShortcutHookW*, pcszReferent : Win32cr::Foundation::PWSTR, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_referent.call(this, pcszReferent, hwnd)
    end
    def get_referent(this : INewShortcutHookW*, pszReferent : UInt16*, cchReferent : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_referent.call(this, pszReferent, cchReferent)
    end
    def set_folder(this : INewShortcutHookW*, pcszFolder : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_folder.call(this, pcszFolder)
    end
    def get_folder(this : INewShortcutHookW*, pszFolder : UInt16*, cchFolder : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder.call(this, pszFolder, cchFolder)
    end
    def get_name(this : INewShortcutHookW*, pszName : UInt16*, cchName : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_name.call(this, pszName, cchName)
    end
    def get_extension(this : INewShortcutHookW*, pszExtension : UInt16*, cchExtension : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_extension.call(this, pszExtension, cchExtension)
    end

  end

  @[Extern]
  record ICopyHookAVtbl,
    query_interface : Proc(ICopyHookA*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICopyHookA*, UInt32),
    release : Proc(ICopyHookA*, UInt32),
    copy_callback : Proc(ICopyHookA*, Win32cr::Foundation::HWND, UInt32, UInt32, Win32cr::Foundation::PSTR, UInt32, Win32cr::Foundation::PSTR, UInt32, UInt32)


  @[Extern]
  record ICopyHookA, lpVtbl : ICopyHookAVtbl* do
    GUID = LibC::GUID.new(0x214ef_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : ICopyHookA*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICopyHookA*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICopyHookA*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def copy_callback(this : ICopyHookA*, hwnd : Win32cr::Foundation::HWND, wFunc : UInt32, wFlags : UInt32, pszSrcFile : Win32cr::Foundation::PSTR, dwSrcAttribs : UInt32, pszDestFile : Win32cr::Foundation::PSTR, dwDestAttribs : UInt32) : UInt32
      @lpVtbl.try &.value.copy_callback.call(this, hwnd, wFunc, wFlags, pszSrcFile, dwSrcAttribs, pszDestFile, dwDestAttribs)
    end

  end

  @[Extern]
  record ICopyHookWVtbl,
    query_interface : Proc(ICopyHookW*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICopyHookW*, UInt32),
    release : Proc(ICopyHookW*, UInt32),
    copy_callback : Proc(ICopyHookW*, Win32cr::Foundation::HWND, UInt32, UInt32, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::PWSTR, UInt32, UInt32)


  @[Extern]
  record ICopyHookW, lpVtbl : ICopyHookWVtbl* do
    GUID = LibC::GUID.new(0x214fc_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
    def query_interface(this : ICopyHookW*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICopyHookW*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICopyHookW*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def copy_callback(this : ICopyHookW*, hwnd : Win32cr::Foundation::HWND, wFunc : UInt32, wFlags : UInt32, pszSrcFile : Win32cr::Foundation::PWSTR, dwSrcAttribs : UInt32, pszDestFile : Win32cr::Foundation::PWSTR, dwDestAttribs : UInt32) : UInt32
      @lpVtbl.try &.value.copy_callback.call(this, hwnd, wFunc, wFlags, pszSrcFile, dwSrcAttribs, pszDestFile, dwDestAttribs)
    end

  end

  @[Extern]
  record ICurrentWorkingDirectoryVtbl,
    query_interface : Proc(ICurrentWorkingDirectory*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICurrentWorkingDirectory*, UInt32),
    release : Proc(ICurrentWorkingDirectory*, UInt32),
    get_directory : Proc(ICurrentWorkingDirectory*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    set_directory : Proc(ICurrentWorkingDirectory*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICurrentWorkingDirectory, lpVtbl : ICurrentWorkingDirectoryVtbl* do
    GUID = LibC::GUID.new(0x91956d21_u32, 0x9276_u16, 0x11d1_u16, StaticArray[0x92_u8, 0x1a_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0xdf_u8, 0x5b_u8, 0xd4_u8])
    def query_interface(this : ICurrentWorkingDirectory*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICurrentWorkingDirectory*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICurrentWorkingDirectory*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_directory(this : ICurrentWorkingDirectory*, pwzPath : UInt16*, cchSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_directory.call(this, pwzPath, cchSize)
    end
    def set_directory(this : ICurrentWorkingDirectory*, pwzPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_directory.call(this, pwzPath)
    end

  end

  @[Extern]
  record IDockingWindowFrameVtbl,
    query_interface : Proc(IDockingWindowFrame*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDockingWindowFrame*, UInt32),
    release : Proc(IDockingWindowFrame*, UInt32),
    get_window : Proc(IDockingWindowFrame*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    context_sensitive_help : Proc(IDockingWindowFrame*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    add_toolbar : Proc(IDockingWindowFrame*, Void*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    remove_toolbar : Proc(IDockingWindowFrame*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    find_toolbar : Proc(IDockingWindowFrame*, Win32cr::Foundation::PWSTR, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDockingWindowFrame, lpVtbl : IDockingWindowFrameVtbl* do
    GUID = LibC::GUID.new(0x47d2657a_u32, 0x7b27_u16, 0x11d0_u16, StaticArray[0x8c_u8, 0xa9_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x2d_u8, 0xbf_u8, 0xe8_u8])
    def query_interface(this : IDockingWindowFrame*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDockingWindowFrame*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDockingWindowFrame*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IDockingWindowFrame*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, phwnd)
    end
    def context_sensitive_help(this : IDockingWindowFrame*, fEnterMode : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.context_sensitive_help.call(this, fEnterMode)
    end
    def add_toolbar(this : IDockingWindowFrame*, punkSrc : Void*, pwszItem : Win32cr::Foundation::PWSTR, dwAddFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_toolbar.call(this, punkSrc, pwszItem, dwAddFlags)
    end
    def remove_toolbar(this : IDockingWindowFrame*, punkSrc : Void*, dwRemoveFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_toolbar.call(this, punkSrc, dwRemoveFlags)
    end
    def find_toolbar(this : IDockingWindowFrame*, pwszItem : Win32cr::Foundation::PWSTR, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_toolbar.call(this, pwszItem, riid, ppv)
    end

  end

  @[Extern]
  record IThumbnailCaptureVtbl,
    query_interface : Proc(IThumbnailCapture*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IThumbnailCapture*, UInt32),
    release : Proc(IThumbnailCapture*, UInt32),
    capture_thumbnail : Proc(IThumbnailCapture*, Win32cr::Foundation::SIZE*, Void*, Win32cr::Graphics::Gdi::HBITMAP*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IThumbnailCapture, lpVtbl : IThumbnailCaptureVtbl* do
    GUID = LibC::GUID.new(0x4ea39266_u32, 0x7211_u16, 0x409f_u16, StaticArray[0xb6_u8, 0x22_u8, 0xf6_u8, 0x3d_u8, 0xbd_u8, 0x16_u8, 0xc5_u8, 0x33_u8])
    def query_interface(this : IThumbnailCapture*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IThumbnailCapture*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IThumbnailCapture*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def capture_thumbnail(this : IThumbnailCapture*, pMaxSize : Win32cr::Foundation::SIZE*, pHTMLDoc2 : Void*, phbmThumbnail : Win32cr::Graphics::Gdi::HBITMAP*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.capture_thumbnail.call(this, pMaxSize, pHTMLDoc2, phbmThumbnail)
    end

  end

  @[Extern]
  record IShellFolderBandVtbl,
    query_interface : Proc(IShellFolderBand*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellFolderBand*, UInt32),
    release : Proc(IShellFolderBand*, UInt32),
    initialize_sfb : Proc(IShellFolderBand*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    set_band_info_sfb : Proc(IShellFolderBand*, Win32cr::UI::Shell::BANDINFOSFB*, Win32cr::Foundation::HRESULT),
    get_band_info_sfb : Proc(IShellFolderBand*, Win32cr::UI::Shell::BANDINFOSFB*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellFolderBand, lpVtbl : IShellFolderBandVtbl* do
    GUID = LibC::GUID.new(0x7fe80cc8_u32, 0xc247_u16, 0x11d0_u16, StaticArray[0xb9_u8, 0x3a_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x3_u8, 0x12_u8, 0xe1_u8])
    def query_interface(this : IShellFolderBand*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellFolderBand*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellFolderBand*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize_sfb(this : IShellFolderBand*, psf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_sfb.call(this, psf, pidl)
    end
    def set_band_info_sfb(this : IShellFolderBand*, pbi : Win32cr::UI::Shell::BANDINFOSFB*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_band_info_sfb.call(this, pbi)
    end
    def get_band_info_sfb(this : IShellFolderBand*, pbi : Win32cr::UI::Shell::BANDINFOSFB*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_band_info_sfb.call(this, pbi)
    end

  end

  @[Extern]
  record IDeskBarClientVtbl,
    query_interface : Proc(IDeskBarClient*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDeskBarClient*, UInt32),
    release : Proc(IDeskBarClient*, UInt32),
    get_window : Proc(IDeskBarClient*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    context_sensitive_help : Proc(IDeskBarClient*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_desk_bar_site : Proc(IDeskBarClient*, Void*, Win32cr::Foundation::HRESULT),
    set_mode_dbc : Proc(IDeskBarClient*, UInt32, Win32cr::Foundation::HRESULT),
    ui_activate_dbc : Proc(IDeskBarClient*, UInt32, Win32cr::Foundation::HRESULT),
    get_size : Proc(IDeskBarClient*, UInt32, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDeskBarClient, lpVtbl : IDeskBarClientVtbl* do
    GUID = LibC::GUID.new(0xeb0fe175_u32, 0x1a3a_u16, 0x11d0_u16, StaticArray[0x89_u8, 0xb3_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x90_u8, 0xac_u8])
    def query_interface(this : IDeskBarClient*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDeskBarClient*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDeskBarClient*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IDeskBarClient*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, phwnd)
    end
    def context_sensitive_help(this : IDeskBarClient*, fEnterMode : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.context_sensitive_help.call(this, fEnterMode)
    end
    def set_desk_bar_site(this : IDeskBarClient*, punkSite : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_desk_bar_site.call(this, punkSite)
    end
    def set_mode_dbc(this : IDeskBarClient*, dwMode : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_mode_dbc.call(this, dwMode)
    end
    def ui_activate_dbc(this : IDeskBarClient*, dwState : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ui_activate_dbc.call(this, dwState)
    end
    def get_size(this : IDeskBarClient*, dwWhich : UInt32, prc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_size.call(this, dwWhich, prc)
    end

  end

  @[Extern]
  record IColumnProviderVtbl,
    query_interface : Proc(IColumnProvider*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IColumnProvider*, UInt32),
    release : Proc(IColumnProvider*, UInt32),
    initialize__ : Proc(IColumnProvider*, Win32cr::UI::Shell::SHCOLUMNINIT*, Win32cr::Foundation::HRESULT),
    get_column_info : Proc(IColumnProvider*, UInt32, Win32cr::UI::Shell::SHCOLUMNINFO*, Win32cr::Foundation::HRESULT),
    get_item_data : Proc(IColumnProvider*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::UI::Shell::SHCOLUMNDATA*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IColumnProvider, lpVtbl : IColumnProviderVtbl* do
    GUID = LibC::GUID.new(0xe8025004_u32, 0x1c42_u16, 0x11d2_u16, StaticArray[0xbe_u8, 0x2c_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa8_u8, 0x3d_u8, 0xa1_u8])
    def query_interface(this : IColumnProvider*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IColumnProvider*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IColumnProvider*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IColumnProvider*, psci : Win32cr::UI::Shell::SHCOLUMNINIT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, psci)
    end
    def get_column_info(this : IColumnProvider*, dwIndex : UInt32, psci : Win32cr::UI::Shell::SHCOLUMNINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_column_info.call(this, dwIndex, psci)
    end
    def get_item_data(this : IColumnProvider*, pscid : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, pscd : Win32cr::UI::Shell::SHCOLUMNDATA*, pvarData : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_data.call(this, pscid, pscd, pvarData)
    end

  end

  @[Extern]
  record IDocViewSiteVtbl,
    query_interface : Proc(IDocViewSite*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDocViewSite*, UInt32),
    release : Proc(IDocViewSite*, UInt32),
    on_set_title : Proc(IDocViewSite*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IDocViewSite, lpVtbl : IDocViewSiteVtbl* do
    GUID = LibC::GUID.new(0x87d605e0_u32, 0xc511_u16, 0x11cf_u16, StaticArray[0x89_u8, 0xa9_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x5_u8, 0x41_u8, 0x29_u8])
    def query_interface(this : IDocViewSite*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDocViewSite*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDocViewSite*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_set_title(this : IDocViewSite*, pvTitle : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_set_title.call(this, pvTitle)
    end

  end

  @[Extern]
  record IInitializeObjectVtbl,
    query_interface : Proc(IInitializeObject*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInitializeObject*, UInt32),
    release : Proc(IInitializeObject*, UInt32),
    initialize__ : Proc(IInitializeObject*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInitializeObject, lpVtbl : IInitializeObjectVtbl* do
    GUID = LibC::GUID.new(0x4622ad16_u32, 0xff23_u16, 0x11d0_u16, StaticArray[0x8d_u8, 0x34_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xf_u8, 0x27_u8, 0x19_u8])
    def query_interface(this : IInitializeObject*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInitializeObject*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInitializeObject*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IInitializeObject*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this)
    end

  end

  @[Extern]
  record IBanneredBarVtbl,
    query_interface : Proc(IBanneredBar*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IBanneredBar*, UInt32),
    release : Proc(IBanneredBar*, UInt32),
    set_icon_size : Proc(IBanneredBar*, UInt32, Win32cr::Foundation::HRESULT),
    get_icon_size : Proc(IBanneredBar*, UInt32*, Win32cr::Foundation::HRESULT),
    set_bitmap : Proc(IBanneredBar*, Win32cr::Graphics::Gdi::HBITMAP, Win32cr::Foundation::HRESULT),
    get_bitmap : Proc(IBanneredBar*, Win32cr::Graphics::Gdi::HBITMAP*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IBanneredBar, lpVtbl : IBanneredBarVtbl* do
    GUID = LibC::GUID.new(0x596a9a94_u32, 0x13e_u16, 0x11d1_u16, StaticArray[0x8d_u8, 0x34_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xf_u8, 0x27_u8, 0x19_u8])
    def query_interface(this : IBanneredBar*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IBanneredBar*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IBanneredBar*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_icon_size(this : IBanneredBar*, iIcon : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_icon_size.call(this, iIcon)
    end
    def get_icon_size(this : IBanneredBar*, piIcon : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_icon_size.call(this, piIcon)
    end
    def set_bitmap(this : IBanneredBar*, hBitmap : Win32cr::Graphics::Gdi::HBITMAP) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_bitmap.call(this, hBitmap)
    end
    def get_bitmap(this : IBanneredBar*, phBitmap : Win32cr::Graphics::Gdi::HBITMAP*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_bitmap.call(this, phBitmap)
    end

  end

  @[Extern]
  record IQueryAssociationsVtbl,
    query_interface : Proc(IQueryAssociations*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IQueryAssociations*, UInt32),
    release : Proc(IQueryAssociations*, UInt32),
    init : Proc(IQueryAssociations*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::System::Registry::HKEY, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    get_string : Proc(IQueryAssociations*, UInt32, Win32cr::UI::Shell::ASSOCSTR, Win32cr::Foundation::PWSTR, UInt16*, UInt32*, Win32cr::Foundation::HRESULT),
    get_key : Proc(IQueryAssociations*, UInt32, Win32cr::UI::Shell::ASSOCKEY, Win32cr::Foundation::PWSTR, Win32cr::System::Registry::HKEY*, Win32cr::Foundation::HRESULT),
    get_data : Proc(IQueryAssociations*, UInt32, Win32cr::UI::Shell::ASSOCDATA, Win32cr::Foundation::PWSTR, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    get_enum : Proc(IQueryAssociations*, UInt32, Win32cr::UI::Shell::ASSOCENUM, Win32cr::Foundation::PWSTR, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IQueryAssociations, lpVtbl : IQueryAssociationsVtbl* do
    GUID = LibC::GUID.new(0xc46ca590_u32, 0x3c3f_u16, 0x11d2_u16, StaticArray[0xbe_u8, 0xe6_u8, 0x0_u8, 0x0_u8, 0xf8_u8, 0x5_u8, 0xca_u8, 0x57_u8])
    def query_interface(this : IQueryAssociations*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IQueryAssociations*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IQueryAssociations*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def init(this : IQueryAssociations*, flags : UInt32, pszAssoc : Win32cr::Foundation::PWSTR, hkProgid : Win32cr::System::Registry::HKEY, hwnd : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.init.call(this, flags, pszAssoc, hkProgid, hwnd)
    end
    def get_string(this : IQueryAssociations*, flags : UInt32, str : Win32cr::UI::Shell::ASSOCSTR, pszExtra : Win32cr::Foundation::PWSTR, pszOut : UInt16*, pcchOut : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_string.call(this, flags, str, pszExtra, pszOut, pcchOut)
    end
    def get_key(this : IQueryAssociations*, flags : UInt32, key : Win32cr::UI::Shell::ASSOCKEY, pszExtra : Win32cr::Foundation::PWSTR, phkeyOut : Win32cr::System::Registry::HKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_key.call(this, flags, key, pszExtra, phkeyOut)
    end
    def get_data(this : IQueryAssociations*, flags : UInt32, data : Win32cr::UI::Shell::ASSOCDATA, pszExtra : Win32cr::Foundation::PWSTR, pvOut : Void*, pcbOut : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_data.call(this, flags, data, pszExtra, pvOut, pcbOut)
    end
    def get_enum(this : IQueryAssociations*, flags : UInt32, assocenum : Win32cr::UI::Shell::ASSOCENUM, pszExtra : Win32cr::Foundation::PWSTR, riid : LibC::GUID*, ppvOut : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_enum.call(this, flags, assocenum, pszExtra, riid, ppvOut)
    end

  end

  @[Extern]
  record IShellAppVtbl,
    query_interface : Proc(IShellApp*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellApp*, UInt32),
    release : Proc(IShellApp*, UInt32),
    get_app_info : Proc(IShellApp*, Win32cr::UI::Shell::APPINFODATA*, Win32cr::Foundation::HRESULT),
    get_possible_actions : Proc(IShellApp*, UInt32*, Win32cr::Foundation::HRESULT),
    get_slow_app_info : Proc(IShellApp*, Win32cr::UI::Shell::SLOWAPPINFO*, Win32cr::Foundation::HRESULT),
    get_cached_slow_app_info : Proc(IShellApp*, Win32cr::UI::Shell::SLOWAPPINFO*, Win32cr::Foundation::HRESULT),
    is_installed : Proc(IShellApp*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellApp, lpVtbl : IShellAppVtbl* do
    GUID = LibC::GUID.new(0xa3e14960_u32, 0x935f_u16, 0x11d1_u16, StaticArray[0xb8_u8, 0xb8_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x5_u8, 0x93_u8, 0x82_u8])
    def query_interface(this : IShellApp*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellApp*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellApp*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_app_info(this : IShellApp*, pai : Win32cr::UI::Shell::APPINFODATA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_app_info.call(this, pai)
    end
    def get_possible_actions(this : IShellApp*, pdwActions : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_possible_actions.call(this, pdwActions)
    end
    def get_slow_app_info(this : IShellApp*, psaid : Win32cr::UI::Shell::SLOWAPPINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_slow_app_info.call(this, psaid)
    end
    def get_cached_slow_app_info(this : IShellApp*, psaid : Win32cr::UI::Shell::SLOWAPPINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cached_slow_app_info.call(this, psaid)
    end
    def is_installed(this : IShellApp*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_installed.call(this)
    end

  end

  @[Extern]
  record IPublishedAppVtbl,
    query_interface : Proc(IPublishedApp*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPublishedApp*, UInt32),
    release : Proc(IPublishedApp*, UInt32),
    get_app_info : Proc(IPublishedApp*, Win32cr::UI::Shell::APPINFODATA*, Win32cr::Foundation::HRESULT),
    get_possible_actions : Proc(IPublishedApp*, UInt32*, Win32cr::Foundation::HRESULT),
    get_slow_app_info : Proc(IPublishedApp*, Win32cr::UI::Shell::SLOWAPPINFO*, Win32cr::Foundation::HRESULT),
    get_cached_slow_app_info : Proc(IPublishedApp*, Win32cr::UI::Shell::SLOWAPPINFO*, Win32cr::Foundation::HRESULT),
    is_installed : Proc(IPublishedApp*, Win32cr::Foundation::HRESULT),
    install : Proc(IPublishedApp*, Win32cr::Foundation::SYSTEMTIME*, Win32cr::Foundation::HRESULT),
    get_published_app_info : Proc(IPublishedApp*, Win32cr::UI::Shell::PUBAPPINFO*, Win32cr::Foundation::HRESULT),
    unschedule : Proc(IPublishedApp*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPublishedApp, lpVtbl : IPublishedAppVtbl* do
    GUID = LibC::GUID.new(0x1bc752e0_u32, 0x9046_u16, 0x11d1_u16, StaticArray[0xb8_u8, 0xb3_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x5_u8, 0x93_u8, 0x82_u8])
    def query_interface(this : IPublishedApp*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPublishedApp*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPublishedApp*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_app_info(this : IPublishedApp*, pai : Win32cr::UI::Shell::APPINFODATA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_app_info.call(this, pai)
    end
    def get_possible_actions(this : IPublishedApp*, pdwActions : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_possible_actions.call(this, pdwActions)
    end
    def get_slow_app_info(this : IPublishedApp*, psaid : Win32cr::UI::Shell::SLOWAPPINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_slow_app_info.call(this, psaid)
    end
    def get_cached_slow_app_info(this : IPublishedApp*, psaid : Win32cr::UI::Shell::SLOWAPPINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cached_slow_app_info.call(this, psaid)
    end
    def is_installed(this : IPublishedApp*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_installed.call(this)
    end
    def install(this : IPublishedApp*, pstInstall : Win32cr::Foundation::SYSTEMTIME*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.install.call(this, pstInstall)
    end
    def get_published_app_info(this : IPublishedApp*, ppai : Win32cr::UI::Shell::PUBAPPINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_published_app_info.call(this, ppai)
    end
    def unschedule(this : IPublishedApp*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unschedule.call(this)
    end

  end

  @[Extern]
  record IPublishedApp2Vtbl,
    query_interface : Proc(IPublishedApp2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IPublishedApp2*, UInt32),
    release : Proc(IPublishedApp2*, UInt32),
    get_app_info : Proc(IPublishedApp2*, Win32cr::UI::Shell::APPINFODATA*, Win32cr::Foundation::HRESULT),
    get_possible_actions : Proc(IPublishedApp2*, UInt32*, Win32cr::Foundation::HRESULT),
    get_slow_app_info : Proc(IPublishedApp2*, Win32cr::UI::Shell::SLOWAPPINFO*, Win32cr::Foundation::HRESULT),
    get_cached_slow_app_info : Proc(IPublishedApp2*, Win32cr::UI::Shell::SLOWAPPINFO*, Win32cr::Foundation::HRESULT),
    is_installed : Proc(IPublishedApp2*, Win32cr::Foundation::HRESULT),
    install : Proc(IPublishedApp2*, Win32cr::Foundation::SYSTEMTIME*, Win32cr::Foundation::HRESULT),
    get_published_app_info : Proc(IPublishedApp2*, Win32cr::UI::Shell::PUBAPPINFO*, Win32cr::Foundation::HRESULT),
    unschedule : Proc(IPublishedApp2*, Win32cr::Foundation::HRESULT),
    install2 : Proc(IPublishedApp2*, Win32cr::Foundation::SYSTEMTIME*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IPublishedApp2, lpVtbl : IPublishedApp2Vtbl* do
    GUID = LibC::GUID.new(0x12b81347_u32, 0x1b3a_u16, 0x4a04_u16, StaticArray[0xaa_u8, 0x61_u8, 0x3f_u8, 0x76_u8, 0x8b_u8, 0x67_u8, 0xfd_u8, 0x7e_u8])
    def query_interface(this : IPublishedApp2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IPublishedApp2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IPublishedApp2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_app_info(this : IPublishedApp2*, pai : Win32cr::UI::Shell::APPINFODATA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_app_info.call(this, pai)
    end
    def get_possible_actions(this : IPublishedApp2*, pdwActions : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_possible_actions.call(this, pdwActions)
    end
    def get_slow_app_info(this : IPublishedApp2*, psaid : Win32cr::UI::Shell::SLOWAPPINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_slow_app_info.call(this, psaid)
    end
    def get_cached_slow_app_info(this : IPublishedApp2*, psaid : Win32cr::UI::Shell::SLOWAPPINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_cached_slow_app_info.call(this, psaid)
    end
    def is_installed(this : IPublishedApp2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_installed.call(this)
    end
    def install(this : IPublishedApp2*, pstInstall : Win32cr::Foundation::SYSTEMTIME*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.install.call(this, pstInstall)
    end
    def get_published_app_info(this : IPublishedApp2*, ppai : Win32cr::UI::Shell::PUBAPPINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_published_app_info.call(this, ppai)
    end
    def unschedule(this : IPublishedApp2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unschedule.call(this)
    end
    def install2(this : IPublishedApp2*, pstInstall : Win32cr::Foundation::SYSTEMTIME*, hwndParent : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.install2.call(this, pstInstall, hwndParent)
    end

  end

  @[Extern]
  record IEnumPublishedAppsVtbl,
    query_interface : Proc(IEnumPublishedApps*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumPublishedApps*, UInt32),
    release : Proc(IEnumPublishedApps*, UInt32),
    next__ : Proc(IEnumPublishedApps*, Void**, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumPublishedApps*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumPublishedApps, lpVtbl : IEnumPublishedAppsVtbl* do
    GUID = LibC::GUID.new(0xb124f8c_u32, 0x91f0_u16, 0x11d1_u16, StaticArray[0xb8_u8, 0xb5_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x5_u8, 0x93_u8, 0x82_u8])
    def query_interface(this : IEnumPublishedApps*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumPublishedApps*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumPublishedApps*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumPublishedApps*, pia : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, pia)
    end
    def reset(this : IEnumPublishedApps*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end

  end

  @[Extern]
  record IAppPublisherVtbl,
    query_interface : Proc(IAppPublisher*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IAppPublisher*, UInt32),
    release : Proc(IAppPublisher*, UInt32),
    get_number_of_categories : Proc(IAppPublisher*, UInt32*, Win32cr::Foundation::HRESULT),
    get_categories : Proc(IAppPublisher*, Win32cr::UI::Shell::APPCATEGORYINFOLIST*, Win32cr::Foundation::HRESULT),
    get_number_of_apps : Proc(IAppPublisher*, UInt32*, Win32cr::Foundation::HRESULT),
    enum_apps : Proc(IAppPublisher*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IAppPublisher, lpVtbl : IAppPublisherVtbl* do
    GUID = LibC::GUID.new(0x7250a10_u32, 0x9cf9_u16, 0x11d1_u16, StaticArray[0x90_u8, 0x76_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x5_u8, 0x93_u8, 0x82_u8])
    def query_interface(this : IAppPublisher*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IAppPublisher*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IAppPublisher*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_number_of_categories(this : IAppPublisher*, pdwCat : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_number_of_categories.call(this, pdwCat)
    end
    def get_categories(this : IAppPublisher*, pAppCategoryList : Win32cr::UI::Shell::APPCATEGORYINFOLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_categories.call(this, pAppCategoryList)
    end
    def get_number_of_apps(this : IAppPublisher*, pdwApps : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_number_of_apps.call(this, pdwApps)
    end
    def enum_apps(this : IAppPublisher*, pAppCategoryId : LibC::GUID*, ppepa : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_apps.call(this, pAppCategoryId, ppepa)
    end

  end

  @[Extern]
  record ICredentialProviderCredentialVtbl,
    query_interface : Proc(ICredentialProviderCredential*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICredentialProviderCredential*, UInt32),
    release : Proc(ICredentialProviderCredential*, UInt32),
    advise : Proc(ICredentialProviderCredential*, Void*, Win32cr::Foundation::HRESULT),
    un_advise : Proc(ICredentialProviderCredential*, Win32cr::Foundation::HRESULT),
    set_selected : Proc(ICredentialProviderCredential*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    set_deselected : Proc(ICredentialProviderCredential*, Win32cr::Foundation::HRESULT),
    get_field_state : Proc(ICredentialProviderCredential*, UInt32, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_STATE*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE*, Win32cr::Foundation::HRESULT),
    get_string_value : Proc(ICredentialProviderCredential*, UInt32, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_bitmap_value : Proc(ICredentialProviderCredential*, UInt32, Win32cr::Graphics::Gdi::HBITMAP*, Win32cr::Foundation::HRESULT),
    get_checkbox_value : Proc(ICredentialProviderCredential*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_submit_button_value : Proc(ICredentialProviderCredential*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_combo_box_value_count : Proc(ICredentialProviderCredential*, UInt32, UInt32*, UInt32*, Win32cr::Foundation::HRESULT),
    get_combo_box_value_at : Proc(ICredentialProviderCredential*, UInt32, UInt32, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    set_string_value : Proc(ICredentialProviderCredential*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_checkbox_value : Proc(ICredentialProviderCredential*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_combo_box_selected_value : Proc(ICredentialProviderCredential*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    command_link_clicked : Proc(ICredentialProviderCredential*, UInt32, Win32cr::Foundation::HRESULT),
    get_serialization : Proc(ICredentialProviderCredential*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, Win32cr::Foundation::PWSTR*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_STATUS_ICON*, Win32cr::Foundation::HRESULT),
    report_result : Proc(ICredentialProviderCredential*, Win32cr::Foundation::NTSTATUS, Win32cr::Foundation::NTSTATUS, Win32cr::Foundation::PWSTR*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_STATUS_ICON*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICredentialProviderCredential, lpVtbl : ICredentialProviderCredentialVtbl* do
    GUID = LibC::GUID.new(0x63913a93_u32, 0x40c1_u16, 0x481a_u16, StaticArray[0x81_u8, 0x8d_u8, 0x40_u8, 0x72_u8, 0xff_u8, 0x8c_u8, 0x70_u8, 0xcc_u8])
    def query_interface(this : ICredentialProviderCredential*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICredentialProviderCredential*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICredentialProviderCredential*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def advise(this : ICredentialProviderCredential*, pcpce : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, pcpce)
    end
    def un_advise(this : ICredentialProviderCredential*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.un_advise.call(this)
    end
    def set_selected(this : ICredentialProviderCredential*, pbAutoLogon : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_selected.call(this, pbAutoLogon)
    end
    def set_deselected(this : ICredentialProviderCredential*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_deselected.call(this)
    end
    def get_field_state(this : ICredentialProviderCredential*, dwFieldID : UInt32, pcpfs : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_STATE*, pcpfis : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_field_state.call(this, dwFieldID, pcpfs, pcpfis)
    end
    def get_string_value(this : ICredentialProviderCredential*, dwFieldID : UInt32, ppsz : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_string_value.call(this, dwFieldID, ppsz)
    end
    def get_bitmap_value(this : ICredentialProviderCredential*, dwFieldID : UInt32, phbmp : Win32cr::Graphics::Gdi::HBITMAP*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_bitmap_value.call(this, dwFieldID, phbmp)
    end
    def get_checkbox_value(this : ICredentialProviderCredential*, dwFieldID : UInt32, pbChecked : Win32cr::Foundation::BOOL*, ppszLabel : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_checkbox_value.call(this, dwFieldID, pbChecked, ppszLabel)
    end
    def get_submit_button_value(this : ICredentialProviderCredential*, dwFieldID : UInt32, pdwAdjacentTo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_submit_button_value.call(this, dwFieldID, pdwAdjacentTo)
    end
    def get_combo_box_value_count(this : ICredentialProviderCredential*, dwFieldID : UInt32, pcItems : UInt32*, pdwSelectedItem : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_combo_box_value_count.call(this, dwFieldID, pcItems, pdwSelectedItem)
    end
    def get_combo_box_value_at(this : ICredentialProviderCredential*, dwFieldID : UInt32, dwItem : UInt32, ppszItem : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_combo_box_value_at.call(this, dwFieldID, dwItem, ppszItem)
    end
    def set_string_value(this : ICredentialProviderCredential*, dwFieldID : UInt32, psz : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_string_value.call(this, dwFieldID, psz)
    end
    def set_checkbox_value(this : ICredentialProviderCredential*, dwFieldID : UInt32, bChecked : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_checkbox_value.call(this, dwFieldID, bChecked)
    end
    def set_combo_box_selected_value(this : ICredentialProviderCredential*, dwFieldID : UInt32, dwSelectedItem : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_combo_box_selected_value.call(this, dwFieldID, dwSelectedItem)
    end
    def command_link_clicked(this : ICredentialProviderCredential*, dwFieldID : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.command_link_clicked.call(this, dwFieldID)
    end
    def get_serialization(this : ICredentialProviderCredential*, pcpgsr : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE*, pcpcs : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, ppszOptionalStatusText : Win32cr::Foundation::PWSTR*, pcpsiOptionalStatusIcon : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_STATUS_ICON*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_serialization.call(this, pcpgsr, pcpcs, ppszOptionalStatusText, pcpsiOptionalStatusIcon)
    end
    def report_result(this : ICredentialProviderCredential*, ntsStatus : Win32cr::Foundation::NTSTATUS, ntsSubstatus : Win32cr::Foundation::NTSTATUS, ppszOptionalStatusText : Win32cr::Foundation::PWSTR*, pcpsiOptionalStatusIcon : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_STATUS_ICON*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.report_result.call(this, ntsStatus, ntsSubstatus, ppszOptionalStatusText, pcpsiOptionalStatusIcon)
    end

  end

  @[Extern]
  record IQueryContinueWithStatusVtbl,
    query_interface : Proc(IQueryContinueWithStatus*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IQueryContinueWithStatus*, UInt32),
    release : Proc(IQueryContinueWithStatus*, UInt32),
    query_continue : Proc(IQueryContinueWithStatus*, Win32cr::Foundation::HRESULT),
    set_status_message : Proc(IQueryContinueWithStatus*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IQueryContinueWithStatus, lpVtbl : IQueryContinueWithStatusVtbl* do
    GUID = LibC::GUID.new(0x9090be5b_u32, 0x502b_u16, 0x41fb_u16, StaticArray[0xbc_u8, 0xcc_u8, 0x0_u8, 0x49_u8, 0xa6_u8, 0xc7_u8, 0x25_u8, 0x4b_u8])
    def query_interface(this : IQueryContinueWithStatus*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IQueryContinueWithStatus*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IQueryContinueWithStatus*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def query_continue(this : IQueryContinueWithStatus*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_continue.call(this)
    end
    def set_status_message(this : IQueryContinueWithStatus*, psz : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_status_message.call(this, psz)
    end

  end

  @[Extern]
  record IConnectableCredentialProviderCredentialVtbl,
    query_interface : Proc(IConnectableCredentialProviderCredential*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IConnectableCredentialProviderCredential*, UInt32),
    release : Proc(IConnectableCredentialProviderCredential*, UInt32),
    advise : Proc(IConnectableCredentialProviderCredential*, Void*, Win32cr::Foundation::HRESULT),
    un_advise : Proc(IConnectableCredentialProviderCredential*, Win32cr::Foundation::HRESULT),
    set_selected : Proc(IConnectableCredentialProviderCredential*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    set_deselected : Proc(IConnectableCredentialProviderCredential*, Win32cr::Foundation::HRESULT),
    get_field_state : Proc(IConnectableCredentialProviderCredential*, UInt32, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_STATE*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE*, Win32cr::Foundation::HRESULT),
    get_string_value : Proc(IConnectableCredentialProviderCredential*, UInt32, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_bitmap_value : Proc(IConnectableCredentialProviderCredential*, UInt32, Win32cr::Graphics::Gdi::HBITMAP*, Win32cr::Foundation::HRESULT),
    get_checkbox_value : Proc(IConnectableCredentialProviderCredential*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_submit_button_value : Proc(IConnectableCredentialProviderCredential*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_combo_box_value_count : Proc(IConnectableCredentialProviderCredential*, UInt32, UInt32*, UInt32*, Win32cr::Foundation::HRESULT),
    get_combo_box_value_at : Proc(IConnectableCredentialProviderCredential*, UInt32, UInt32, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    set_string_value : Proc(IConnectableCredentialProviderCredential*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_checkbox_value : Proc(IConnectableCredentialProviderCredential*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_combo_box_selected_value : Proc(IConnectableCredentialProviderCredential*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    command_link_clicked : Proc(IConnectableCredentialProviderCredential*, UInt32, Win32cr::Foundation::HRESULT),
    get_serialization : Proc(IConnectableCredentialProviderCredential*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, Win32cr::Foundation::PWSTR*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_STATUS_ICON*, Win32cr::Foundation::HRESULT),
    report_result : Proc(IConnectableCredentialProviderCredential*, Win32cr::Foundation::NTSTATUS, Win32cr::Foundation::NTSTATUS, Win32cr::Foundation::PWSTR*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_STATUS_ICON*, Win32cr::Foundation::HRESULT),
    connect : Proc(IConnectableCredentialProviderCredential*, Void*, Win32cr::Foundation::HRESULT),
    disconnect : Proc(IConnectableCredentialProviderCredential*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IConnectableCredentialProviderCredential, lpVtbl : IConnectableCredentialProviderCredentialVtbl* do
    GUID = LibC::GUID.new(0x9387928b_u32, 0xac75_u16, 0x4bf9_u16, StaticArray[0x8a_u8, 0xb2_u8, 0x2b_u8, 0x93_u8, 0xc4_u8, 0xa5_u8, 0x52_u8, 0x90_u8])
    def query_interface(this : IConnectableCredentialProviderCredential*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IConnectableCredentialProviderCredential*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IConnectableCredentialProviderCredential*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def advise(this : IConnectableCredentialProviderCredential*, pcpce : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, pcpce)
    end
    def un_advise(this : IConnectableCredentialProviderCredential*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.un_advise.call(this)
    end
    def set_selected(this : IConnectableCredentialProviderCredential*, pbAutoLogon : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_selected.call(this, pbAutoLogon)
    end
    def set_deselected(this : IConnectableCredentialProviderCredential*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_deselected.call(this)
    end
    def get_field_state(this : IConnectableCredentialProviderCredential*, dwFieldID : UInt32, pcpfs : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_STATE*, pcpfis : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_field_state.call(this, dwFieldID, pcpfs, pcpfis)
    end
    def get_string_value(this : IConnectableCredentialProviderCredential*, dwFieldID : UInt32, ppsz : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_string_value.call(this, dwFieldID, ppsz)
    end
    def get_bitmap_value(this : IConnectableCredentialProviderCredential*, dwFieldID : UInt32, phbmp : Win32cr::Graphics::Gdi::HBITMAP*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_bitmap_value.call(this, dwFieldID, phbmp)
    end
    def get_checkbox_value(this : IConnectableCredentialProviderCredential*, dwFieldID : UInt32, pbChecked : Win32cr::Foundation::BOOL*, ppszLabel : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_checkbox_value.call(this, dwFieldID, pbChecked, ppszLabel)
    end
    def get_submit_button_value(this : IConnectableCredentialProviderCredential*, dwFieldID : UInt32, pdwAdjacentTo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_submit_button_value.call(this, dwFieldID, pdwAdjacentTo)
    end
    def get_combo_box_value_count(this : IConnectableCredentialProviderCredential*, dwFieldID : UInt32, pcItems : UInt32*, pdwSelectedItem : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_combo_box_value_count.call(this, dwFieldID, pcItems, pdwSelectedItem)
    end
    def get_combo_box_value_at(this : IConnectableCredentialProviderCredential*, dwFieldID : UInt32, dwItem : UInt32, ppszItem : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_combo_box_value_at.call(this, dwFieldID, dwItem, ppszItem)
    end
    def set_string_value(this : IConnectableCredentialProviderCredential*, dwFieldID : UInt32, psz : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_string_value.call(this, dwFieldID, psz)
    end
    def set_checkbox_value(this : IConnectableCredentialProviderCredential*, dwFieldID : UInt32, bChecked : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_checkbox_value.call(this, dwFieldID, bChecked)
    end
    def set_combo_box_selected_value(this : IConnectableCredentialProviderCredential*, dwFieldID : UInt32, dwSelectedItem : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_combo_box_selected_value.call(this, dwFieldID, dwSelectedItem)
    end
    def command_link_clicked(this : IConnectableCredentialProviderCredential*, dwFieldID : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.command_link_clicked.call(this, dwFieldID)
    end
    def get_serialization(this : IConnectableCredentialProviderCredential*, pcpgsr : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE*, pcpcs : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, ppszOptionalStatusText : Win32cr::Foundation::PWSTR*, pcpsiOptionalStatusIcon : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_STATUS_ICON*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_serialization.call(this, pcpgsr, pcpcs, ppszOptionalStatusText, pcpsiOptionalStatusIcon)
    end
    def report_result(this : IConnectableCredentialProviderCredential*, ntsStatus : Win32cr::Foundation::NTSTATUS, ntsSubstatus : Win32cr::Foundation::NTSTATUS, ppszOptionalStatusText : Win32cr::Foundation::PWSTR*, pcpsiOptionalStatusIcon : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_STATUS_ICON*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.report_result.call(this, ntsStatus, ntsSubstatus, ppszOptionalStatusText, pcpsiOptionalStatusIcon)
    end
    def connect(this : IConnectableCredentialProviderCredential*, pqcws : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.connect.call(this, pqcws)
    end
    def disconnect(this : IConnectableCredentialProviderCredential*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.disconnect.call(this)
    end

  end

  @[Extern]
  record ICredentialProviderCredentialEventsVtbl,
    query_interface : Proc(ICredentialProviderCredentialEvents*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICredentialProviderCredentialEvents*, UInt32),
    release : Proc(ICredentialProviderCredentialEvents*, UInt32),
    set_field_state : Proc(ICredentialProviderCredentialEvents*, Void*, UInt32, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_STATE, Win32cr::Foundation::HRESULT),
    set_field_interactive_state : Proc(ICredentialProviderCredentialEvents*, Void*, UInt32, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE, Win32cr::Foundation::HRESULT),
    set_field_string : Proc(ICredentialProviderCredentialEvents*, Void*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_field_checkbox : Proc(ICredentialProviderCredentialEvents*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_field_bitmap : Proc(ICredentialProviderCredentialEvents*, Void*, UInt32, Win32cr::Graphics::Gdi::HBITMAP, Win32cr::Foundation::HRESULT),
    set_field_combo_box_selected_item : Proc(ICredentialProviderCredentialEvents*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    delete_field_combo_box_item : Proc(ICredentialProviderCredentialEvents*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    append_field_combo_box_item : Proc(ICredentialProviderCredentialEvents*, Void*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_field_submit_button : Proc(ICredentialProviderCredentialEvents*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    on_creating_window : Proc(ICredentialProviderCredentialEvents*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICredentialProviderCredentialEvents, lpVtbl : ICredentialProviderCredentialEventsVtbl* do
    GUID = LibC::GUID.new(0xfa6fa76b_u32, 0x66b7_u16, 0x4b11_u16, StaticArray[0x95_u8, 0xf1_u8, 0x86_u8, 0x17_u8, 0x11_u8, 0x18_u8, 0xe8_u8, 0x16_u8])
    def query_interface(this : ICredentialProviderCredentialEvents*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICredentialProviderCredentialEvents*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICredentialProviderCredentialEvents*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_field_state(this : ICredentialProviderCredentialEvents*, pcpc : Void*, dwFieldID : UInt32, cpfs : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_STATE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_field_state.call(this, pcpc, dwFieldID, cpfs)
    end
    def set_field_interactive_state(this : ICredentialProviderCredentialEvents*, pcpc : Void*, dwFieldID : UInt32, cpfis : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_field_interactive_state.call(this, pcpc, dwFieldID, cpfis)
    end
    def set_field_string(this : ICredentialProviderCredentialEvents*, pcpc : Void*, dwFieldID : UInt32, psz : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_field_string.call(this, pcpc, dwFieldID, psz)
    end
    def set_field_checkbox(this : ICredentialProviderCredentialEvents*, pcpc : Void*, dwFieldID : UInt32, bChecked : Win32cr::Foundation::BOOL, pszLabel : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_field_checkbox.call(this, pcpc, dwFieldID, bChecked, pszLabel)
    end
    def set_field_bitmap(this : ICredentialProviderCredentialEvents*, pcpc : Void*, dwFieldID : UInt32, hbmp : Win32cr::Graphics::Gdi::HBITMAP) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_field_bitmap.call(this, pcpc, dwFieldID, hbmp)
    end
    def set_field_combo_box_selected_item(this : ICredentialProviderCredentialEvents*, pcpc : Void*, dwFieldID : UInt32, dwSelectedItem : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_field_combo_box_selected_item.call(this, pcpc, dwFieldID, dwSelectedItem)
    end
    def delete_field_combo_box_item(this : ICredentialProviderCredentialEvents*, pcpc : Void*, dwFieldID : UInt32, dwItem : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_field_combo_box_item.call(this, pcpc, dwFieldID, dwItem)
    end
    def append_field_combo_box_item(this : ICredentialProviderCredentialEvents*, pcpc : Void*, dwFieldID : UInt32, pszItem : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.append_field_combo_box_item.call(this, pcpc, dwFieldID, pszItem)
    end
    def set_field_submit_button(this : ICredentialProviderCredentialEvents*, pcpc : Void*, dwFieldID : UInt32, dwAdjacentTo : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_field_submit_button.call(this, pcpc, dwFieldID, dwAdjacentTo)
    end
    def on_creating_window(this : ICredentialProviderCredentialEvents*, phwndOwner : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_creating_window.call(this, phwndOwner)
    end

  end

  @[Extern]
  record ICredentialProviderVtbl,
    query_interface : Proc(ICredentialProvider*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICredentialProvider*, UInt32),
    release : Proc(ICredentialProvider*, UInt32),
    set_usage_scenario : Proc(ICredentialProvider*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_USAGE_SCENARIO, UInt32, Win32cr::Foundation::HRESULT),
    set_serialization : Proc(ICredentialProvider*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, Win32cr::Foundation::HRESULT),
    advise : Proc(ICredentialProvider*, Void*, LibC::UIntPtrT, Win32cr::Foundation::HRESULT),
    un_advise : Proc(ICredentialProvider*, Win32cr::Foundation::HRESULT),
    get_field_descriptor_count : Proc(ICredentialProvider*, UInt32*, Win32cr::Foundation::HRESULT),
    get_field_descriptor_at : Proc(ICredentialProvider*, UInt32, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_DESCRIPTOR**, Win32cr::Foundation::HRESULT),
    get_credential_count : Proc(ICredentialProvider*, UInt32*, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_credential_at : Proc(ICredentialProvider*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICredentialProvider, lpVtbl : ICredentialProviderVtbl* do
    GUID = LibC::GUID.new(0xd27c3481_u32, 0x5a1c_u16, 0x45b2_u16, StaticArray[0x8a_u8, 0xaa_u8, 0xc2_u8, 0xe_u8, 0xbb_u8, 0xe8_u8, 0x22_u8, 0x9e_u8])
    def query_interface(this : ICredentialProvider*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICredentialProvider*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICredentialProvider*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_usage_scenario(this : ICredentialProvider*, cpus : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_USAGE_SCENARIO, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_usage_scenario.call(this, cpus, dwFlags)
    end
    def set_serialization(this : ICredentialProvider*, pcpcs : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_serialization.call(this, pcpcs)
    end
    def advise(this : ICredentialProvider*, pcpe : Void*, upAdviseContext : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, pcpe, upAdviseContext)
    end
    def un_advise(this : ICredentialProvider*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.un_advise.call(this)
    end
    def get_field_descriptor_count(this : ICredentialProvider*, pdwCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_field_descriptor_count.call(this, pdwCount)
    end
    def get_field_descriptor_at(this : ICredentialProvider*, dwIndex : UInt32, ppcpfd : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_DESCRIPTOR**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_field_descriptor_at.call(this, dwIndex, ppcpfd)
    end
    def get_credential_count(this : ICredentialProvider*, pdwCount : UInt32*, pdwDefault : UInt32*, pbAutoLogonWithDefault : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_credential_count.call(this, pdwCount, pdwDefault, pbAutoLogonWithDefault)
    end
    def get_credential_at(this : ICredentialProvider*, dwIndex : UInt32, ppcpc : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_credential_at.call(this, dwIndex, ppcpc)
    end

  end

  @[Extern]
  record ICredentialProviderEventsVtbl,
    query_interface : Proc(ICredentialProviderEvents*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICredentialProviderEvents*, UInt32),
    release : Proc(ICredentialProviderEvents*, UInt32),
    credentials_changed : Proc(ICredentialProviderEvents*, LibC::UIntPtrT, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICredentialProviderEvents, lpVtbl : ICredentialProviderEventsVtbl* do
    GUID = LibC::GUID.new(0x34201e5a_u32, 0xa787_u16, 0x41a3_u16, StaticArray[0xa5_u8, 0xa4_u8, 0xbd_u8, 0x6d_u8, 0xcf_u8, 0x2a_u8, 0x85_u8, 0x4e_u8])
    def query_interface(this : ICredentialProviderEvents*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICredentialProviderEvents*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICredentialProviderEvents*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def credentials_changed(this : ICredentialProviderEvents*, upAdviseContext : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.credentials_changed.call(this, upAdviseContext)
    end

  end

  @[Extern]
  record ICredentialProviderFilterVtbl,
    query_interface : Proc(ICredentialProviderFilter*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICredentialProviderFilter*, UInt32),
    release : Proc(ICredentialProviderFilter*, UInt32),
    filter : Proc(ICredentialProviderFilter*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_USAGE_SCENARIO, UInt32, LibC::GUID*, Win32cr::Foundation::BOOL*, UInt32, Win32cr::Foundation::HRESULT),
    update_remote_credential : Proc(ICredentialProviderFilter*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICredentialProviderFilter, lpVtbl : ICredentialProviderFilterVtbl* do
    GUID = LibC::GUID.new(0xa5da53f9_u32, 0xd475_u16, 0x4080_u16, StaticArray[0xa1_u8, 0x20_u8, 0x91_u8, 0xc_u8, 0x4a_u8, 0x73_u8, 0x98_u8, 0x80_u8])
    def query_interface(this : ICredentialProviderFilter*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICredentialProviderFilter*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICredentialProviderFilter*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def filter(this : ICredentialProviderFilter*, cpus : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_USAGE_SCENARIO, dwFlags : UInt32, rgclsidProviders : LibC::GUID*, rgbAllow : Win32cr::Foundation::BOOL*, cProviders : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.filter.call(this, cpus, dwFlags, rgclsidProviders, rgbAllow, cProviders)
    end
    def update_remote_credential(this : ICredentialProviderFilter*, pcpcsIn : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, pcpcsOut : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_remote_credential.call(this, pcpcsIn, pcpcsOut)
    end

  end

  @[Extern]
  record ICredentialProviderCredential2Vtbl,
    query_interface : Proc(ICredentialProviderCredential2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICredentialProviderCredential2*, UInt32),
    release : Proc(ICredentialProviderCredential2*, UInt32),
    advise : Proc(ICredentialProviderCredential2*, Void*, Win32cr::Foundation::HRESULT),
    un_advise : Proc(ICredentialProviderCredential2*, Win32cr::Foundation::HRESULT),
    set_selected : Proc(ICredentialProviderCredential2*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    set_deselected : Proc(ICredentialProviderCredential2*, Win32cr::Foundation::HRESULT),
    get_field_state : Proc(ICredentialProviderCredential2*, UInt32, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_STATE*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE*, Win32cr::Foundation::HRESULT),
    get_string_value : Proc(ICredentialProviderCredential2*, UInt32, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_bitmap_value : Proc(ICredentialProviderCredential2*, UInt32, Win32cr::Graphics::Gdi::HBITMAP*, Win32cr::Foundation::HRESULT),
    get_checkbox_value : Proc(ICredentialProviderCredential2*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_submit_button_value : Proc(ICredentialProviderCredential2*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    get_combo_box_value_count : Proc(ICredentialProviderCredential2*, UInt32, UInt32*, UInt32*, Win32cr::Foundation::HRESULT),
    get_combo_box_value_at : Proc(ICredentialProviderCredential2*, UInt32, UInt32, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    set_string_value : Proc(ICredentialProviderCredential2*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_checkbox_value : Proc(ICredentialProviderCredential2*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_combo_box_selected_value : Proc(ICredentialProviderCredential2*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    command_link_clicked : Proc(ICredentialProviderCredential2*, UInt32, Win32cr::Foundation::HRESULT),
    get_serialization : Proc(ICredentialProviderCredential2*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, Win32cr::Foundation::PWSTR*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_STATUS_ICON*, Win32cr::Foundation::HRESULT),
    report_result : Proc(ICredentialProviderCredential2*, Win32cr::Foundation::NTSTATUS, Win32cr::Foundation::NTSTATUS, Win32cr::Foundation::PWSTR*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_STATUS_ICON*, Win32cr::Foundation::HRESULT),
    get_user_sid : Proc(ICredentialProviderCredential2*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICredentialProviderCredential2, lpVtbl : ICredentialProviderCredential2Vtbl* do
    GUID = LibC::GUID.new(0xfd672c54_u32, 0x40ea_u16, 0x4d6e_u16, StaticArray[0x9b_u8, 0x49_u8, 0xcf_u8, 0xb1_u8, 0xa7_u8, 0x50_u8, 0x7b_u8, 0xd7_u8])
    def query_interface(this : ICredentialProviderCredential2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICredentialProviderCredential2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICredentialProviderCredential2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def advise(this : ICredentialProviderCredential2*, pcpce : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, pcpce)
    end
    def un_advise(this : ICredentialProviderCredential2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.un_advise.call(this)
    end
    def set_selected(this : ICredentialProviderCredential2*, pbAutoLogon : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_selected.call(this, pbAutoLogon)
    end
    def set_deselected(this : ICredentialProviderCredential2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_deselected.call(this)
    end
    def get_field_state(this : ICredentialProviderCredential2*, dwFieldID : UInt32, pcpfs : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_STATE*, pcpfis : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_field_state.call(this, dwFieldID, pcpfs, pcpfis)
    end
    def get_string_value(this : ICredentialProviderCredential2*, dwFieldID : UInt32, ppsz : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_string_value.call(this, dwFieldID, ppsz)
    end
    def get_bitmap_value(this : ICredentialProviderCredential2*, dwFieldID : UInt32, phbmp : Win32cr::Graphics::Gdi::HBITMAP*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_bitmap_value.call(this, dwFieldID, phbmp)
    end
    def get_checkbox_value(this : ICredentialProviderCredential2*, dwFieldID : UInt32, pbChecked : Win32cr::Foundation::BOOL*, ppszLabel : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_checkbox_value.call(this, dwFieldID, pbChecked, ppszLabel)
    end
    def get_submit_button_value(this : ICredentialProviderCredential2*, dwFieldID : UInt32, pdwAdjacentTo : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_submit_button_value.call(this, dwFieldID, pdwAdjacentTo)
    end
    def get_combo_box_value_count(this : ICredentialProviderCredential2*, dwFieldID : UInt32, pcItems : UInt32*, pdwSelectedItem : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_combo_box_value_count.call(this, dwFieldID, pcItems, pdwSelectedItem)
    end
    def get_combo_box_value_at(this : ICredentialProviderCredential2*, dwFieldID : UInt32, dwItem : UInt32, ppszItem : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_combo_box_value_at.call(this, dwFieldID, dwItem, ppszItem)
    end
    def set_string_value(this : ICredentialProviderCredential2*, dwFieldID : UInt32, psz : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_string_value.call(this, dwFieldID, psz)
    end
    def set_checkbox_value(this : ICredentialProviderCredential2*, dwFieldID : UInt32, bChecked : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_checkbox_value.call(this, dwFieldID, bChecked)
    end
    def set_combo_box_selected_value(this : ICredentialProviderCredential2*, dwFieldID : UInt32, dwSelectedItem : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_combo_box_selected_value.call(this, dwFieldID, dwSelectedItem)
    end
    def command_link_clicked(this : ICredentialProviderCredential2*, dwFieldID : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.command_link_clicked.call(this, dwFieldID)
    end
    def get_serialization(this : ICredentialProviderCredential2*, pcpgsr : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE*, pcpcs : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, ppszOptionalStatusText : Win32cr::Foundation::PWSTR*, pcpsiOptionalStatusIcon : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_STATUS_ICON*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_serialization.call(this, pcpgsr, pcpcs, ppszOptionalStatusText, pcpsiOptionalStatusIcon)
    end
    def report_result(this : ICredentialProviderCredential2*, ntsStatus : Win32cr::Foundation::NTSTATUS, ntsSubstatus : Win32cr::Foundation::NTSTATUS, ppszOptionalStatusText : Win32cr::Foundation::PWSTR*, pcpsiOptionalStatusIcon : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_STATUS_ICON*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.report_result.call(this, ntsStatus, ntsSubstatus, ppszOptionalStatusText, pcpsiOptionalStatusIcon)
    end
    def get_user_sid(this : ICredentialProviderCredential2*, sid : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_user_sid.call(this, sid)
    end

  end

  @[Extern]
  record ICredentialProviderCredentialWithFieldOptionsVtbl,
    query_interface : Proc(ICredentialProviderCredentialWithFieldOptions*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICredentialProviderCredentialWithFieldOptions*, UInt32),
    release : Proc(ICredentialProviderCredentialWithFieldOptions*, UInt32),
    get_field_options : Proc(ICredentialProviderCredentialWithFieldOptions*, UInt32, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_FIELD_OPTIONS*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICredentialProviderCredentialWithFieldOptions, lpVtbl : ICredentialProviderCredentialWithFieldOptionsVtbl* do
    GUID = LibC::GUID.new(0xdbc6fb30_u32, 0xc843_u16, 0x49e3_u16, StaticArray[0xa6_u8, 0x45_u8, 0x57_u8, 0x3e_u8, 0x6f_u8, 0x39_u8, 0x44_u8, 0x6a_u8])
    def query_interface(this : ICredentialProviderCredentialWithFieldOptions*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICredentialProviderCredentialWithFieldOptions*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICredentialProviderCredentialWithFieldOptions*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_field_options(this : ICredentialProviderCredentialWithFieldOptions*, fieldID : UInt32, options : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_FIELD_OPTIONS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_field_options.call(this, fieldID, options)
    end

  end

  @[Extern]
  record ICredentialProviderCredentialEvents2Vtbl,
    query_interface : Proc(ICredentialProviderCredentialEvents2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICredentialProviderCredentialEvents2*, UInt32),
    release : Proc(ICredentialProviderCredentialEvents2*, UInt32),
    set_field_state : Proc(ICredentialProviderCredentialEvents2*, Void*, UInt32, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_STATE, Win32cr::Foundation::HRESULT),
    set_field_interactive_state : Proc(ICredentialProviderCredentialEvents2*, Void*, UInt32, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE, Win32cr::Foundation::HRESULT),
    set_field_string : Proc(ICredentialProviderCredentialEvents2*, Void*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_field_checkbox : Proc(ICredentialProviderCredentialEvents2*, Void*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_field_bitmap : Proc(ICredentialProviderCredentialEvents2*, Void*, UInt32, Win32cr::Graphics::Gdi::HBITMAP, Win32cr::Foundation::HRESULT),
    set_field_combo_box_selected_item : Proc(ICredentialProviderCredentialEvents2*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    delete_field_combo_box_item : Proc(ICredentialProviderCredentialEvents2*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    append_field_combo_box_item : Proc(ICredentialProviderCredentialEvents2*, Void*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_field_submit_button : Proc(ICredentialProviderCredentialEvents2*, Void*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    on_creating_window : Proc(ICredentialProviderCredentialEvents2*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    begin_field_updates : Proc(ICredentialProviderCredentialEvents2*, Win32cr::Foundation::HRESULT),
    end_field_updates : Proc(ICredentialProviderCredentialEvents2*, Win32cr::Foundation::HRESULT),
    set_field_options : Proc(ICredentialProviderCredentialEvents2*, Void*, UInt32, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_FIELD_OPTIONS, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICredentialProviderCredentialEvents2, lpVtbl : ICredentialProviderCredentialEvents2Vtbl* do
    GUID = LibC::GUID.new(0xb53c00b6_u32, 0x9922_u16, 0x4b78_u16, StaticArray[0xb1_u8, 0xf4_u8, 0xdd_u8, 0xfe_u8, 0x77_u8, 0x4d_u8, 0xc3_u8, 0x9b_u8])
    def query_interface(this : ICredentialProviderCredentialEvents2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICredentialProviderCredentialEvents2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICredentialProviderCredentialEvents2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_field_state(this : ICredentialProviderCredentialEvents2*, pcpc : Void*, dwFieldID : UInt32, cpfs : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_STATE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_field_state.call(this, pcpc, dwFieldID, cpfs)
    end
    def set_field_interactive_state(this : ICredentialProviderCredentialEvents2*, pcpc : Void*, dwFieldID : UInt32, cpfis : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_field_interactive_state.call(this, pcpc, dwFieldID, cpfis)
    end
    def set_field_string(this : ICredentialProviderCredentialEvents2*, pcpc : Void*, dwFieldID : UInt32, psz : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_field_string.call(this, pcpc, dwFieldID, psz)
    end
    def set_field_checkbox(this : ICredentialProviderCredentialEvents2*, pcpc : Void*, dwFieldID : UInt32, bChecked : Win32cr::Foundation::BOOL, pszLabel : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_field_checkbox.call(this, pcpc, dwFieldID, bChecked, pszLabel)
    end
    def set_field_bitmap(this : ICredentialProviderCredentialEvents2*, pcpc : Void*, dwFieldID : UInt32, hbmp : Win32cr::Graphics::Gdi::HBITMAP) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_field_bitmap.call(this, pcpc, dwFieldID, hbmp)
    end
    def set_field_combo_box_selected_item(this : ICredentialProviderCredentialEvents2*, pcpc : Void*, dwFieldID : UInt32, dwSelectedItem : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_field_combo_box_selected_item.call(this, pcpc, dwFieldID, dwSelectedItem)
    end
    def delete_field_combo_box_item(this : ICredentialProviderCredentialEvents2*, pcpc : Void*, dwFieldID : UInt32, dwItem : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_field_combo_box_item.call(this, pcpc, dwFieldID, dwItem)
    end
    def append_field_combo_box_item(this : ICredentialProviderCredentialEvents2*, pcpc : Void*, dwFieldID : UInt32, pszItem : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.append_field_combo_box_item.call(this, pcpc, dwFieldID, pszItem)
    end
    def set_field_submit_button(this : ICredentialProviderCredentialEvents2*, pcpc : Void*, dwFieldID : UInt32, dwAdjacentTo : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_field_submit_button.call(this, pcpc, dwFieldID, dwAdjacentTo)
    end
    def on_creating_window(this : ICredentialProviderCredentialEvents2*, phwndOwner : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_creating_window.call(this, phwndOwner)
    end
    def begin_field_updates(this : ICredentialProviderCredentialEvents2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.begin_field_updates.call(this)
    end
    def end_field_updates(this : ICredentialProviderCredentialEvents2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.end_field_updates.call(this)
    end
    def set_field_options(this : ICredentialProviderCredentialEvents2*, credential : Void*, fieldID : UInt32, options : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_CREDENTIAL_FIELD_OPTIONS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_field_options.call(this, credential, fieldID, options)
    end

  end

  @[Extern]
  record ICredentialProviderUserVtbl,
    query_interface : Proc(ICredentialProviderUser*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICredentialProviderUser*, UInt32),
    release : Proc(ICredentialProviderUser*, UInt32),
    get_sid : Proc(ICredentialProviderUser*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_provider_id : Proc(ICredentialProviderUser*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_string_value : Proc(ICredentialProviderUser*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_value : Proc(ICredentialProviderUser*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::System::Com::StructuredStorage::PROPVARIANT*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICredentialProviderUser, lpVtbl : ICredentialProviderUserVtbl* do
    GUID = LibC::GUID.new(0x13793285_u32, 0x3ea6_u16, 0x40fd_u16, StaticArray[0xb4_u8, 0x20_u8, 0x15_u8, 0xf4_u8, 0x7d_u8, 0xa4_u8, 0x1f_u8, 0xbb_u8])
    def query_interface(this : ICredentialProviderUser*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICredentialProviderUser*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICredentialProviderUser*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_sid(this : ICredentialProviderUser*, sid : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_sid.call(this, sid)
    end
    def get_provider_id(this : ICredentialProviderUser*, providerID : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_provider_id.call(this, providerID)
    end
    def get_string_value(this : ICredentialProviderUser*, key : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, stringValue : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_string_value.call(this, key, stringValue)
    end
    def get_value(this : ICredentialProviderUser*, key : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, value : Win32cr::System::Com::StructuredStorage::PROPVARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_value.call(this, key, value)
    end

  end

  @[Extern]
  record ICredentialProviderUserArrayVtbl,
    query_interface : Proc(ICredentialProviderUserArray*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICredentialProviderUserArray*, UInt32),
    release : Proc(ICredentialProviderUserArray*, UInt32),
    set_provider_filter : Proc(ICredentialProviderUserArray*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_account_options : Proc(ICredentialProviderUserArray*, Win32cr::UI::Shell::CREDENTIAL_PROVIDER_ACCOUNT_OPTIONS*, Win32cr::Foundation::HRESULT),
    get_count : Proc(ICredentialProviderUserArray*, UInt32*, Win32cr::Foundation::HRESULT),
    get_at : Proc(ICredentialProviderUserArray*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICredentialProviderUserArray, lpVtbl : ICredentialProviderUserArrayVtbl* do
    GUID = LibC::GUID.new(0x90c119ae_u32, 0xf18_u16, 0x4520_u16, StaticArray[0xa1_u8, 0xf1_u8, 0x11_u8, 0x43_u8, 0x66_u8, 0xa4_u8, 0xf_u8, 0xe8_u8])
    def query_interface(this : ICredentialProviderUserArray*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICredentialProviderUserArray*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICredentialProviderUserArray*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_provider_filter(this : ICredentialProviderUserArray*, guidProviderToFilterTo : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_provider_filter.call(this, guidProviderToFilterTo)
    end
    def get_account_options(this : ICredentialProviderUserArray*, credentialProviderAccountOptions : Win32cr::UI::Shell::CREDENTIAL_PROVIDER_ACCOUNT_OPTIONS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_account_options.call(this, credentialProviderAccountOptions)
    end
    def get_count(this : ICredentialProviderUserArray*, userCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_count.call(this, userCount)
    end
    def get_at(this : ICredentialProviderUserArray*, userIndex : UInt32, user : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_at.call(this, userIndex, user)
    end

  end

  @[Extern]
  record ICredentialProviderSetUserArrayVtbl,
    query_interface : Proc(ICredentialProviderSetUserArray*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ICredentialProviderSetUserArray*, UInt32),
    release : Proc(ICredentialProviderSetUserArray*, UInt32),
    set_user_array : Proc(ICredentialProviderSetUserArray*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ICredentialProviderSetUserArray, lpVtbl : ICredentialProviderSetUserArrayVtbl* do
    GUID = LibC::GUID.new(0x95c1484_u32, 0x1c0c_u16, 0x4388_u16, StaticArray[0x9c_u8, 0x6d_u8, 0x50_u8, 0xe_u8, 0x61_u8, 0xbf_u8, 0x84_u8, 0xbd_u8])
    def query_interface(this : ICredentialProviderSetUserArray*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ICredentialProviderSetUserArray*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ICredentialProviderSetUserArray*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_user_array(this : ICredentialProviderSetUserArray*, users : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_user_array.call(this, users)
    end

  end

  @[Extern]
  record ISyncMgrHandlerCollectionVtbl,
    query_interface : Proc(ISyncMgrHandlerCollection*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrHandlerCollection*, UInt32),
    release : Proc(ISyncMgrHandlerCollection*, UInt32),
    get_handler_enumerator : Proc(ISyncMgrHandlerCollection*, Void**, Win32cr::Foundation::HRESULT),
    bind_to_handler : Proc(ISyncMgrHandlerCollection*, Win32cr::Foundation::PWSTR, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrHandlerCollection, lpVtbl : ISyncMgrHandlerCollectionVtbl* do
    GUID = LibC::GUID.new(0xa7f337a3_u32, 0xd20b_u16, 0x45cb_u16, StaticArray[0x9e_u8, 0xd7_u8, 0x87_u8, 0xd0_u8, 0x94_u8, 0xca_u8, 0x50_u8, 0x45_u8])
    def query_interface(this : ISyncMgrHandlerCollection*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrHandlerCollection*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrHandlerCollection*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_handler_enumerator(this : ISyncMgrHandlerCollection*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_handler_enumerator.call(this, ppenum)
    end
    def bind_to_handler(this : ISyncMgrHandlerCollection*, pszHandlerID : Win32cr::Foundation::PWSTR, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_to_handler.call(this, pszHandlerID, riid, ppv)
    end

  end

  @[Extern]
  record ISyncMgrHandlerVtbl,
    query_interface : Proc(ISyncMgrHandler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrHandler*, UInt32),
    release : Proc(ISyncMgrHandler*, UInt32),
    get_name : Proc(ISyncMgrHandler*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_handler_info : Proc(ISyncMgrHandler*, Void**, Win32cr::Foundation::HRESULT),
    get_object : Proc(ISyncMgrHandler*, LibC::GUID*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_capabilities : Proc(ISyncMgrHandler*, Win32cr::UI::Shell::SYNCMGR_HANDLER_CAPABILITIES*, Win32cr::Foundation::HRESULT),
    get_policies : Proc(ISyncMgrHandler*, Win32cr::UI::Shell::SYNCMGR_HANDLER_POLICIES*, Win32cr::Foundation::HRESULT),
    activate : Proc(ISyncMgrHandler*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    enable : Proc(ISyncMgrHandler*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    synchronize : Proc(ISyncMgrHandler*, Win32cr::Foundation::PWSTR*, UInt32, Win32cr::Foundation::HWND, Void*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrHandler, lpVtbl : ISyncMgrHandlerVtbl* do
    GUID = LibC::GUID.new(0x4ec2e43_u32, 0xac77_u16, 0x49f9_u16, StaticArray[0x9b_u8, 0x98_u8, 0x3_u8, 0x7_u8, 0xef_u8, 0x7a_u8, 0x72_u8, 0xa2_u8])
    def query_interface(this : ISyncMgrHandler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrHandler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrHandler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_name(this : ISyncMgrHandler*, ppszName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_name.call(this, ppszName)
    end
    def get_handler_info(this : ISyncMgrHandler*, ppHandlerInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_handler_info.call(this, ppHandlerInfo)
    end
    def get_object(this : ISyncMgrHandler*, rguidObjectID : LibC::GUID*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object.call(this, rguidObjectID, riid, ppv)
    end
    def get_capabilities(this : ISyncMgrHandler*, pmCapabilities : Win32cr::UI::Shell::SYNCMGR_HANDLER_CAPABILITIES*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_capabilities.call(this, pmCapabilities)
    end
    def get_policies(this : ISyncMgrHandler*, pmPolicies : Win32cr::UI::Shell::SYNCMGR_HANDLER_POLICIES*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_policies.call(this, pmPolicies)
    end
    def activate(this : ISyncMgrHandler*, fActivate : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.activate.call(this, fActivate)
    end
    def enable(this : ISyncMgrHandler*, fEnable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable.call(this, fEnable)
    end
    def synchronize(this : ISyncMgrHandler*, ppszItemIDs : Win32cr::Foundation::PWSTR*, cItems : UInt32, hwndOwner : Win32cr::Foundation::HWND, pSessionCreator : Void*, punk : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.synchronize.call(this, ppszItemIDs, cItems, hwndOwner, pSessionCreator, punk)
    end

  end

  @[Extern]
  record ISyncMgrHandlerInfoVtbl,
    query_interface : Proc(ISyncMgrHandlerInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrHandlerInfo*, UInt32),
    release : Proc(ISyncMgrHandlerInfo*, UInt32),
    get_type : Proc(ISyncMgrHandlerInfo*, Win32cr::UI::Shell::SYNCMGR_HANDLER_TYPE*, Win32cr::Foundation::HRESULT),
    get_type_label : Proc(ISyncMgrHandlerInfo*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_comment : Proc(ISyncMgrHandlerInfo*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_last_sync_time : Proc(ISyncMgrHandlerInfo*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::HRESULT),
    is_active : Proc(ISyncMgrHandlerInfo*, Win32cr::Foundation::HRESULT),
    is_enabled : Proc(ISyncMgrHandlerInfo*, Win32cr::Foundation::HRESULT),
    is_connected : Proc(ISyncMgrHandlerInfo*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrHandlerInfo, lpVtbl : ISyncMgrHandlerInfoVtbl* do
    GUID = LibC::GUID.new(0x4ff1d798_u32, 0xecf7_u16, 0x4524_u16, StaticArray[0xaa_u8, 0x81_u8, 0x1e_u8, 0x36_u8, 0x2a_u8, 0xa_u8, 0xef_u8, 0x3a_u8])
    def query_interface(this : ISyncMgrHandlerInfo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrHandlerInfo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrHandlerInfo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type(this : ISyncMgrHandlerInfo*, pnType : Win32cr::UI::Shell::SYNCMGR_HANDLER_TYPE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type.call(this, pnType)
    end
    def get_type_label(this : ISyncMgrHandlerInfo*, ppszTypeLabel : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_label.call(this, ppszTypeLabel)
    end
    def get_comment(this : ISyncMgrHandlerInfo*, ppszComment : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_comment.call(this, ppszComment)
    end
    def get_last_sync_time(this : ISyncMgrHandlerInfo*, pftLastSync : Win32cr::Foundation::FILETIME*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_last_sync_time.call(this, pftLastSync)
    end
    def is_active(this : ISyncMgrHandlerInfo*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_active.call(this)
    end
    def is_enabled(this : ISyncMgrHandlerInfo*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_enabled.call(this)
    end
    def is_connected(this : ISyncMgrHandlerInfo*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_connected.call(this)
    end

  end

  @[Extern]
  record ISyncMgrSyncItemContainerVtbl,
    query_interface : Proc(ISyncMgrSyncItemContainer*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrSyncItemContainer*, UInt32),
    release : Proc(ISyncMgrSyncItemContainer*, UInt32),
    get_sync_item : Proc(ISyncMgrSyncItemContainer*, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    get_sync_item_enumerator : Proc(ISyncMgrSyncItemContainer*, Void**, Win32cr::Foundation::HRESULT),
    get_sync_item_count : Proc(ISyncMgrSyncItemContainer*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrSyncItemContainer, lpVtbl : ISyncMgrSyncItemContainerVtbl* do
    GUID = LibC::GUID.new(0x90701133_u32, 0xbe32_u16, 0x4129_u16, StaticArray[0xa6_u8, 0x5c_u8, 0x99_u8, 0xe6_u8, 0x16_u8, 0xca_u8, 0xff_u8, 0xf4_u8])
    def query_interface(this : ISyncMgrSyncItemContainer*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrSyncItemContainer*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrSyncItemContainer*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_sync_item(this : ISyncMgrSyncItemContainer*, pszItemID : Win32cr::Foundation::PWSTR, ppItem : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_sync_item.call(this, pszItemID, ppItem)
    end
    def get_sync_item_enumerator(this : ISyncMgrSyncItemContainer*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_sync_item_enumerator.call(this, ppenum)
    end
    def get_sync_item_count(this : ISyncMgrSyncItemContainer*, pcItems : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_sync_item_count.call(this, pcItems)
    end

  end

  @[Extern]
  record ISyncMgrSyncItemVtbl,
    query_interface : Proc(ISyncMgrSyncItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrSyncItem*, UInt32),
    release : Proc(ISyncMgrSyncItem*, UInt32),
    get_item_id : Proc(ISyncMgrSyncItem*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_name : Proc(ISyncMgrSyncItem*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_item_info : Proc(ISyncMgrSyncItem*, Void**, Win32cr::Foundation::HRESULT),
    get_object : Proc(ISyncMgrSyncItem*, LibC::GUID*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_capabilities : Proc(ISyncMgrSyncItem*, Win32cr::UI::Shell::SYNCMGR_ITEM_CAPABILITIES*, Win32cr::Foundation::HRESULT),
    get_policies : Proc(ISyncMgrSyncItem*, Win32cr::UI::Shell::SYNCMGR_ITEM_POLICIES*, Win32cr::Foundation::HRESULT),
    enable : Proc(ISyncMgrSyncItem*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    delete : Proc(ISyncMgrSyncItem*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrSyncItem, lpVtbl : ISyncMgrSyncItemVtbl* do
    GUID = LibC::GUID.new(0xb20b24ce_u32, 0x2593_u16, 0x4f04_u16, StaticArray[0xbd_u8, 0x8b_u8, 0x7a_u8, 0xd6_u8, 0xc4_u8, 0x50_u8, 0x51_u8, 0xcd_u8])
    def query_interface(this : ISyncMgrSyncItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrSyncItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrSyncItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_item_id(this : ISyncMgrSyncItem*, ppszItemID : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_id.call(this, ppszItemID)
    end
    def get_name(this : ISyncMgrSyncItem*, ppszName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_name.call(this, ppszName)
    end
    def get_item_info(this : ISyncMgrSyncItem*, ppItemInfo : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_info.call(this, ppItemInfo)
    end
    def get_object(this : ISyncMgrSyncItem*, rguidObjectID : LibC::GUID*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object.call(this, rguidObjectID, riid, ppv)
    end
    def get_capabilities(this : ISyncMgrSyncItem*, pmCapabilities : Win32cr::UI::Shell::SYNCMGR_ITEM_CAPABILITIES*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_capabilities.call(this, pmCapabilities)
    end
    def get_policies(this : ISyncMgrSyncItem*, pmPolicies : Win32cr::UI::Shell::SYNCMGR_ITEM_POLICIES*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_policies.call(this, pmPolicies)
    end
    def enable(this : ISyncMgrSyncItem*, fEnable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable.call(this, fEnable)
    end
    def delete(this : ISyncMgrSyncItem*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete.call(this)
    end

  end

  @[Extern]
  record ISyncMgrSyncItemInfoVtbl,
    query_interface : Proc(ISyncMgrSyncItemInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrSyncItemInfo*, UInt32),
    release : Proc(ISyncMgrSyncItemInfo*, UInt32),
    get_type_label : Proc(ISyncMgrSyncItemInfo*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_comment : Proc(ISyncMgrSyncItemInfo*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_last_sync_time : Proc(ISyncMgrSyncItemInfo*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::HRESULT),
    is_enabled : Proc(ISyncMgrSyncItemInfo*, Win32cr::Foundation::HRESULT),
    is_connected : Proc(ISyncMgrSyncItemInfo*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrSyncItemInfo, lpVtbl : ISyncMgrSyncItemInfoVtbl* do
    GUID = LibC::GUID.new(0xe7fd9502_u32, 0xbe0c_u16, 0x4464_u16, StaticArray[0x90_u8, 0xa1_u8, 0x2b_u8, 0x52_u8, 0x77_u8, 0x3_u8, 0x12_u8, 0x32_u8])
    def query_interface(this : ISyncMgrSyncItemInfo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrSyncItemInfo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrSyncItemInfo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_type_label(this : ISyncMgrSyncItemInfo*, ppszTypeLabel : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_label.call(this, ppszTypeLabel)
    end
    def get_comment(this : ISyncMgrSyncItemInfo*, ppszComment : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_comment.call(this, ppszComment)
    end
    def get_last_sync_time(this : ISyncMgrSyncItemInfo*, pftLastSync : Win32cr::Foundation::FILETIME*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_last_sync_time.call(this, pftLastSync)
    end
    def is_enabled(this : ISyncMgrSyncItemInfo*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_enabled.call(this)
    end
    def is_connected(this : ISyncMgrSyncItemInfo*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_connected.call(this)
    end

  end

  @[Extern]
  record IEnumSyncMgrSyncItemsVtbl,
    query_interface : Proc(IEnumSyncMgrSyncItems*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumSyncMgrSyncItems*, UInt32),
    release : Proc(IEnumSyncMgrSyncItems*, UInt32),
    next__ : Proc(IEnumSyncMgrSyncItems*, UInt32, Void**, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumSyncMgrSyncItems*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumSyncMgrSyncItems*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumSyncMgrSyncItems*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumSyncMgrSyncItems, lpVtbl : IEnumSyncMgrSyncItemsVtbl* do
    GUID = LibC::GUID.new(0x54b3abf3_u32, 0xf085_u16, 0x4181_u16, StaticArray[0xb5_u8, 0x46_u8, 0xe2_u8, 0x9c_u8, 0x40_u8, 0x3c_u8, 0x72_u8, 0x6b_u8])
    def query_interface(this : IEnumSyncMgrSyncItems*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumSyncMgrSyncItems*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumSyncMgrSyncItems*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumSyncMgrSyncItems*, celt : UInt32, rgelt : Void**, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, rgelt, pceltFetched)
    end
    def skip(this : IEnumSyncMgrSyncItems*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumSyncMgrSyncItems*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumSyncMgrSyncItems*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppenum)
    end

  end

  @[Extern]
  record ISyncMgrSessionCreatorVtbl,
    query_interface : Proc(ISyncMgrSessionCreator*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrSessionCreator*, UInt32),
    release : Proc(ISyncMgrSessionCreator*, UInt32),
    create_session : Proc(ISyncMgrSessionCreator*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR*, UInt32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrSessionCreator, lpVtbl : ISyncMgrSessionCreatorVtbl* do
    GUID = LibC::GUID.new(0x17f48517_u32, 0xf305_u16, 0x4321_u16, StaticArray[0xa0_u8, 0x8d_u8, 0xb2_u8, 0x5a_u8, 0x83_u8, 0x49_u8, 0x18_u8, 0xfd_u8])
    def query_interface(this : ISyncMgrSessionCreator*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrSessionCreator*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrSessionCreator*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_session(this : ISyncMgrSessionCreator*, pszHandlerID : Win32cr::Foundation::PWSTR, ppszItemIDs : Win32cr::Foundation::PWSTR*, cItems : UInt32, ppCallback : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_session.call(this, pszHandlerID, ppszItemIDs, cItems, ppCallback)
    end

  end

  @[Extern]
  record ISyncMgrSyncCallbackVtbl,
    query_interface : Proc(ISyncMgrSyncCallback*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrSyncCallback*, UInt32),
    release : Proc(ISyncMgrSyncCallback*, UInt32),
    report_progress : Proc(ISyncMgrSyncCallback*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::SYNCMGR_PROGRESS_STATUS, UInt32, UInt32, Win32cr::UI::Shell::SYNCMGR_CANCEL_REQUEST*, Win32cr::Foundation::HRESULT),
    set_handler_progress_text : Proc(ISyncMgrSyncCallback*, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::SYNCMGR_CANCEL_REQUEST*, Win32cr::Foundation::HRESULT),
    report_event : Proc(ISyncMgrSyncCallback*, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::SYNCMGR_EVENT_LEVEL, Win32cr::UI::Shell::SYNCMGR_EVENT_FLAGS, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, LibC::GUID*, Win32cr::Foundation::HRESULT),
    can_continue : Proc(ISyncMgrSyncCallback*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    query_for_additional_items : Proc(ISyncMgrSyncCallback*, Void**, Void**, Win32cr::Foundation::HRESULT),
    add_item_to_session : Proc(ISyncMgrSyncCallback*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    add_i_unknown_to_session : Proc(ISyncMgrSyncCallback*, Void*, Win32cr::Foundation::HRESULT),
    propose_item : Proc(ISyncMgrSyncCallback*, Void*, Win32cr::Foundation::HRESULT),
    commit_item : Proc(ISyncMgrSyncCallback*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    report_manual_sync : Proc(ISyncMgrSyncCallback*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrSyncCallback, lpVtbl : ISyncMgrSyncCallbackVtbl* do
    GUID = LibC::GUID.new(0x884ccd87_u32, 0xb139_u16, 0x4937_u16, StaticArray[0xa4_u8, 0xba_u8, 0x4f_u8, 0x8e_u8, 0x19_u8, 0x51_u8, 0x3f_u8, 0xbe_u8])
    def query_interface(this : ISyncMgrSyncCallback*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrSyncCallback*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrSyncCallback*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def report_progress(this : ISyncMgrSyncCallback*, pszItemID : Win32cr::Foundation::PWSTR, pszProgressText : Win32cr::Foundation::PWSTR, nStatus : Win32cr::UI::Shell::SYNCMGR_PROGRESS_STATUS, uCurrentStep : UInt32, uMaxStep : UInt32, pnCancelRequest : Win32cr::UI::Shell::SYNCMGR_CANCEL_REQUEST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.report_progress.call(this, pszItemID, pszProgressText, nStatus, uCurrentStep, uMaxStep, pnCancelRequest)
    end
    def set_handler_progress_text(this : ISyncMgrSyncCallback*, pszProgressText : Win32cr::Foundation::PWSTR, pnCancelRequest : Win32cr::UI::Shell::SYNCMGR_CANCEL_REQUEST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_handler_progress_text.call(this, pszProgressText, pnCancelRequest)
    end
    def report_event(this : ISyncMgrSyncCallback*, pszItemID : Win32cr::Foundation::PWSTR, nLevel : Win32cr::UI::Shell::SYNCMGR_EVENT_LEVEL, nFlags : Win32cr::UI::Shell::SYNCMGR_EVENT_FLAGS, pszName : Win32cr::Foundation::PWSTR, pszDescription : Win32cr::Foundation::PWSTR, pszLinkText : Win32cr::Foundation::PWSTR, pszLinkReference : Win32cr::Foundation::PWSTR, pszContext : Win32cr::Foundation::PWSTR, pguidEventID : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.report_event.call(this, pszItemID, nLevel, nFlags, pszName, pszDescription, pszLinkText, pszLinkReference, pszContext, pguidEventID)
    end
    def can_continue(this : ISyncMgrSyncCallback*, pszItemID : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.can_continue.call(this, pszItemID)
    end
    def query_for_additional_items(this : ISyncMgrSyncCallback*, ppenumItemIDs : Void**, ppenumPunks : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_for_additional_items.call(this, ppenumItemIDs, ppenumPunks)
    end
    def add_item_to_session(this : ISyncMgrSyncCallback*, pszItemID : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_item_to_session.call(this, pszItemID)
    end
    def add_i_unknown_to_session(this : ISyncMgrSyncCallback*, punk : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_i_unknown_to_session.call(this, punk)
    end
    def propose_item(this : ISyncMgrSyncCallback*, pNewItem : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.propose_item.call(this, pNewItem)
    end
    def commit_item(this : ISyncMgrSyncCallback*, pszItemID : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.commit_item.call(this, pszItemID)
    end
    def report_manual_sync(this : ISyncMgrSyncCallback*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.report_manual_sync.call(this)
    end

  end

  @[Extern]
  record ISyncMgrUIOperationVtbl,
    query_interface : Proc(ISyncMgrUIOperation*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrUIOperation*, UInt32),
    release : Proc(ISyncMgrUIOperation*, UInt32),
    run : Proc(ISyncMgrUIOperation*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrUIOperation, lpVtbl : ISyncMgrUIOperationVtbl* do
    GUID = LibC::GUID.new(0xfc7cfa47_u32, 0xdfe1_u16, 0x45b5_u16, StaticArray[0xa0_u8, 0x49_u8, 0x8c_u8, 0xfd_u8, 0x82_u8, 0xbe_u8, 0xc2_u8, 0x71_u8])
    def query_interface(this : ISyncMgrUIOperation*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrUIOperation*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrUIOperation*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def run(this : ISyncMgrUIOperation*, hwndOwner : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run.call(this, hwndOwner)
    end

  end

  @[Extern]
  record ISyncMgrEventLinkUIOperationVtbl,
    query_interface : Proc(ISyncMgrEventLinkUIOperation*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrEventLinkUIOperation*, UInt32),
    release : Proc(ISyncMgrEventLinkUIOperation*, UInt32),
    run : Proc(ISyncMgrEventLinkUIOperation*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    init : Proc(ISyncMgrEventLinkUIOperation*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrEventLinkUIOperation, lpVtbl : ISyncMgrEventLinkUIOperationVtbl* do
    GUID = LibC::GUID.new(0x64522e52_u32, 0x848b_u16, 0x4015_u16, StaticArray[0x89_u8, 0xce_u8, 0x5a_u8, 0x36_u8, 0xf0_u8, 0xb_u8, 0x94_u8, 0xff_u8])
    def query_interface(this : ISyncMgrEventLinkUIOperation*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrEventLinkUIOperation*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrEventLinkUIOperation*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def run(this : ISyncMgrEventLinkUIOperation*, hwndOwner : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run.call(this, hwndOwner)
    end
    def init(this : ISyncMgrEventLinkUIOperation*, rguidEventID : LibC::GUID*, pEvent : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.init.call(this, rguidEventID, pEvent)
    end

  end

  @[Extern]
  record ISyncMgrScheduleWizardUIOperationVtbl,
    query_interface : Proc(ISyncMgrScheduleWizardUIOperation*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrScheduleWizardUIOperation*, UInt32),
    release : Proc(ISyncMgrScheduleWizardUIOperation*, UInt32),
    run : Proc(ISyncMgrScheduleWizardUIOperation*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    init_wizard : Proc(ISyncMgrScheduleWizardUIOperation*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrScheduleWizardUIOperation, lpVtbl : ISyncMgrScheduleWizardUIOperationVtbl* do
    GUID = LibC::GUID.new(0x459a6c84_u32, 0x21d2_u16, 0x4ddc_u16, StaticArray[0x8a_u8, 0x53_u8, 0xf0_u8, 0x23_u8, 0xa4_u8, 0x60_u8, 0x66_u8, 0xf2_u8])
    def query_interface(this : ISyncMgrScheduleWizardUIOperation*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrScheduleWizardUIOperation*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrScheduleWizardUIOperation*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def run(this : ISyncMgrScheduleWizardUIOperation*, hwndOwner : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run.call(this, hwndOwner)
    end
    def init_wizard(this : ISyncMgrScheduleWizardUIOperation*, pszHandlerID : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.init_wizard.call(this, pszHandlerID)
    end

  end

  @[Extern]
  record ISyncMgrSyncResultVtbl,
    query_interface : Proc(ISyncMgrSyncResult*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrSyncResult*, UInt32),
    release : Proc(ISyncMgrSyncResult*, UInt32),
    result : Proc(ISyncMgrSyncResult*, Win32cr::UI::Shell::SYNCMGR_PROGRESS_STATUS, UInt32, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrSyncResult, lpVtbl : ISyncMgrSyncResultVtbl* do
    GUID = LibC::GUID.new(0x2b90f17e_u32, 0x5a3e_u16, 0x4b33_u16, StaticArray[0xbb_u8, 0x7f_u8, 0x1b_u8, 0xc4_u8, 0x80_u8, 0x56_u8, 0xb9_u8, 0x4d_u8])
    def query_interface(this : ISyncMgrSyncResult*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrSyncResult*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrSyncResult*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def result(this : ISyncMgrSyncResult*, nStatus : Win32cr::UI::Shell::SYNCMGR_PROGRESS_STATUS, cError : UInt32, cConflicts : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.result.call(this, nStatus, cError, cConflicts)
    end

  end

  @[Extern]
  record ISyncMgrControlVtbl,
    query_interface : Proc(ISyncMgrControl*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrControl*, UInt32),
    release : Proc(ISyncMgrControl*, UInt32),
    start_handler_sync : Proc(ISyncMgrControl*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HWND, Void*, Win32cr::UI::Shell::SYNCMGR_SYNC_CONTROL_FLAGS, Void*, Win32cr::Foundation::HRESULT),
    start_item_sync : Proc(ISyncMgrControl*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR*, UInt32, Win32cr::Foundation::HWND, Void*, Win32cr::UI::Shell::SYNCMGR_SYNC_CONTROL_FLAGS, Void*, Win32cr::Foundation::HRESULT),
    start_sync_all : Proc(ISyncMgrControl*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    stop_handler_sync : Proc(ISyncMgrControl*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    stop_item_sync : Proc(ISyncMgrControl*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR*, UInt32, Win32cr::Foundation::HRESULT),
    stop_sync_all : Proc(ISyncMgrControl*, Win32cr::Foundation::HRESULT),
    update_handler_collection : Proc(ISyncMgrControl*, LibC::GUID*, Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS, Win32cr::Foundation::HRESULT),
    update_handler : Proc(ISyncMgrControl*, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS, Win32cr::Foundation::HRESULT),
    update_item : Proc(ISyncMgrControl*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS, Win32cr::Foundation::HRESULT),
    update_events : Proc(ISyncMgrControl*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS, Win32cr::Foundation::HRESULT),
    update_conflict : Proc(ISyncMgrControl*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void*, Win32cr::UI::Shell::SYNCMGR_UPDATE_REASON, Win32cr::Foundation::HRESULT),
    update_conflicts : Proc(ISyncMgrControl*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS, Win32cr::Foundation::HRESULT),
    activate_handler : Proc(ISyncMgrControl*, Win32cr::Foundation::BOOL, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HWND, Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS, Win32cr::Foundation::HRESULT),
    enable_handler : Proc(ISyncMgrControl*, Win32cr::Foundation::BOOL, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HWND, Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS, Win32cr::Foundation::HRESULT),
    enable_item : Proc(ISyncMgrControl*, Win32cr::Foundation::BOOL, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HWND, Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrControl, lpVtbl : ISyncMgrControlVtbl* do
    GUID = LibC::GUID.new(0x9b63616c_u32, 0x36b2_u16, 0x46bc_u16, StaticArray[0x95_u8, 0x9f_u8, 0xc1_u8, 0x59_u8, 0x39_u8, 0x52_u8, 0xd1_u8, 0x9b_u8])
    def query_interface(this : ISyncMgrControl*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrControl*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrControl*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def start_handler_sync(this : ISyncMgrControl*, pszHandlerID : Win32cr::Foundation::PWSTR, hwndOwner : Win32cr::Foundation::HWND, punk : Void*, nSyncControlFlags : Win32cr::UI::Shell::SYNCMGR_SYNC_CONTROL_FLAGS, pResult : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start_handler_sync.call(this, pszHandlerID, hwndOwner, punk, nSyncControlFlags, pResult)
    end
    def start_item_sync(this : ISyncMgrControl*, pszHandlerID : Win32cr::Foundation::PWSTR, ppszItemIDs : Win32cr::Foundation::PWSTR*, cItems : UInt32, hwndOwner : Win32cr::Foundation::HWND, punk : Void*, nSyncControlFlags : Win32cr::UI::Shell::SYNCMGR_SYNC_CONTROL_FLAGS, pResult : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start_item_sync.call(this, pszHandlerID, ppszItemIDs, cItems, hwndOwner, punk, nSyncControlFlags, pResult)
    end
    def start_sync_all(this : ISyncMgrControl*, hwndOwner : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start_sync_all.call(this, hwndOwner)
    end
    def stop_handler_sync(this : ISyncMgrControl*, pszHandlerID : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop_handler_sync.call(this, pszHandlerID)
    end
    def stop_item_sync(this : ISyncMgrControl*, pszHandlerID : Win32cr::Foundation::PWSTR, ppszItemIDs : Win32cr::Foundation::PWSTR*, cItems : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop_item_sync.call(this, pszHandlerID, ppszItemIDs, cItems)
    end
    def stop_sync_all(this : ISyncMgrControl*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop_sync_all.call(this)
    end
    def update_handler_collection(this : ISyncMgrControl*, rclsidCollectionID : LibC::GUID*, nControlFlags : Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_handler_collection.call(this, rclsidCollectionID, nControlFlags)
    end
    def update_handler(this : ISyncMgrControl*, pszHandlerID : Win32cr::Foundation::PWSTR, nControlFlags : Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_handler.call(this, pszHandlerID, nControlFlags)
    end
    def update_item(this : ISyncMgrControl*, pszHandlerID : Win32cr::Foundation::PWSTR, pszItemID : Win32cr::Foundation::PWSTR, nControlFlags : Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_item.call(this, pszHandlerID, pszItemID, nControlFlags)
    end
    def update_events(this : ISyncMgrControl*, pszHandlerID : Win32cr::Foundation::PWSTR, pszItemID : Win32cr::Foundation::PWSTR, nControlFlags : Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_events.call(this, pszHandlerID, pszItemID, nControlFlags)
    end
    def update_conflict(this : ISyncMgrControl*, pszHandlerID : Win32cr::Foundation::PWSTR, pszItemID : Win32cr::Foundation::PWSTR, pConflict : Void*, nReason : Win32cr::UI::Shell::SYNCMGR_UPDATE_REASON) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_conflict.call(this, pszHandlerID, pszItemID, pConflict, nReason)
    end
    def update_conflicts(this : ISyncMgrControl*, pszHandlerID : Win32cr::Foundation::PWSTR, pszItemID : Win32cr::Foundation::PWSTR, nControlFlags : Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_conflicts.call(this, pszHandlerID, pszItemID, nControlFlags)
    end
    def activate_handler(this : ISyncMgrControl*, fActivate : Win32cr::Foundation::BOOL, pszHandlerID : Win32cr::Foundation::PWSTR, hwndOwner : Win32cr::Foundation::HWND, nControlFlags : Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.activate_handler.call(this, fActivate, pszHandlerID, hwndOwner, nControlFlags)
    end
    def enable_handler(this : ISyncMgrControl*, fEnable : Win32cr::Foundation::BOOL, pszHandlerID : Win32cr::Foundation::PWSTR, hwndOwner : Win32cr::Foundation::HWND, nControlFlags : Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_handler.call(this, fEnable, pszHandlerID, hwndOwner, nControlFlags)
    end
    def enable_item(this : ISyncMgrControl*, fEnable : Win32cr::Foundation::BOOL, pszHandlerID : Win32cr::Foundation::PWSTR, pszItemID : Win32cr::Foundation::PWSTR, hwndOwner : Win32cr::Foundation::HWND, nControlFlags : Win32cr::UI::Shell::SYNCMGR_CONTROL_FLAGS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_item.call(this, fEnable, pszHandlerID, pszItemID, hwndOwner, nControlFlags)
    end

  end

  @[Extern]
  record ISyncMgrEventStoreVtbl,
    query_interface : Proc(ISyncMgrEventStore*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrEventStore*, UInt32),
    release : Proc(ISyncMgrEventStore*, UInt32),
    get_event_enumerator : Proc(ISyncMgrEventStore*, Void**, Win32cr::Foundation::HRESULT),
    get_event_count : Proc(ISyncMgrEventStore*, UInt32*, Win32cr::Foundation::HRESULT),
    get_event : Proc(ISyncMgrEventStore*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    remove_event : Proc(ISyncMgrEventStore*, LibC::GUID*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrEventStore, lpVtbl : ISyncMgrEventStoreVtbl* do
    GUID = LibC::GUID.new(0x37e412f9_u32, 0x16e_u16, 0x44c2_u16, StaticArray[0x81_u8, 0xff_u8, 0xdb_u8, 0x3a_u8, 0xdd_u8, 0x77_u8, 0x42_u8, 0x66_u8])
    def query_interface(this : ISyncMgrEventStore*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrEventStore*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrEventStore*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_event_enumerator(this : ISyncMgrEventStore*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_event_enumerator.call(this, ppenum)
    end
    def get_event_count(this : ISyncMgrEventStore*, pcEvents : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_event_count.call(this, pcEvents)
    end
    def get_event(this : ISyncMgrEventStore*, rguidEventID : LibC::GUID*, ppEvent : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_event.call(this, rguidEventID, ppEvent)
    end
    def remove_event(this : ISyncMgrEventStore*, pguidEventIDs : LibC::GUID*, cEvents : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_event.call(this, pguidEventIDs, cEvents)
    end

  end

  @[Extern]
  record ISyncMgrEventVtbl,
    query_interface : Proc(ISyncMgrEvent*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrEvent*, UInt32),
    release : Proc(ISyncMgrEvent*, UInt32),
    get_event_id : Proc(ISyncMgrEvent*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_handler_id : Proc(ISyncMgrEvent*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_item_id : Proc(ISyncMgrEvent*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_level : Proc(ISyncMgrEvent*, Win32cr::UI::Shell::SYNCMGR_EVENT_LEVEL*, Win32cr::Foundation::HRESULT),
    get_flags : Proc(ISyncMgrEvent*, Win32cr::UI::Shell::SYNCMGR_EVENT_FLAGS*, Win32cr::Foundation::HRESULT),
    get_time : Proc(ISyncMgrEvent*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::HRESULT),
    get_name : Proc(ISyncMgrEvent*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_description : Proc(ISyncMgrEvent*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_link_text : Proc(ISyncMgrEvent*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_link_reference : Proc(ISyncMgrEvent*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_context : Proc(ISyncMgrEvent*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrEvent, lpVtbl : ISyncMgrEventVtbl* do
    GUID = LibC::GUID.new(0xfee0ef8b_u32, 0x46bd_u16, 0x4db4_u16, StaticArray[0xb7_u8, 0xe6_u8, 0xff_u8, 0x2c_u8, 0x68_u8, 0x73_u8, 0x13_u8, 0xbc_u8])
    def query_interface(this : ISyncMgrEvent*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrEvent*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrEvent*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_event_id(this : ISyncMgrEvent*, pguidEventID : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_event_id.call(this, pguidEventID)
    end
    def get_handler_id(this : ISyncMgrEvent*, ppszHandlerID : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_handler_id.call(this, ppszHandlerID)
    end
    def get_item_id(this : ISyncMgrEvent*, ppszItemID : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_id.call(this, ppszItemID)
    end
    def get_level(this : ISyncMgrEvent*, pnLevel : Win32cr::UI::Shell::SYNCMGR_EVENT_LEVEL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_level.call(this, pnLevel)
    end
    def get_flags(this : ISyncMgrEvent*, pnFlags : Win32cr::UI::Shell::SYNCMGR_EVENT_FLAGS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_flags.call(this, pnFlags)
    end
    def get_time(this : ISyncMgrEvent*, pfCreationTime : Win32cr::Foundation::FILETIME*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_time.call(this, pfCreationTime)
    end
    def get_name(this : ISyncMgrEvent*, ppszName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_name.call(this, ppszName)
    end
    def get_description(this : ISyncMgrEvent*, ppszDescription : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_description.call(this, ppszDescription)
    end
    def get_link_text(this : ISyncMgrEvent*, ppszLinkText : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_link_text.call(this, ppszLinkText)
    end
    def get_link_reference(this : ISyncMgrEvent*, ppszLinkReference : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_link_reference.call(this, ppszLinkReference)
    end
    def get_context(this : ISyncMgrEvent*, ppszContext : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_context.call(this, ppszContext)
    end

  end

  @[Extern]
  record IEnumSyncMgrEventsVtbl,
    query_interface : Proc(IEnumSyncMgrEvents*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumSyncMgrEvents*, UInt32),
    release : Proc(IEnumSyncMgrEvents*, UInt32),
    next__ : Proc(IEnumSyncMgrEvents*, UInt32, Void**, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumSyncMgrEvents*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumSyncMgrEvents*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumSyncMgrEvents*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumSyncMgrEvents, lpVtbl : IEnumSyncMgrEventsVtbl* do
    GUID = LibC::GUID.new(0xc81a1d4e_u32, 0x8cf7_u16, 0x4683_u16, StaticArray[0x80_u8, 0xe0_u8, 0xbc_u8, 0xae_u8, 0x88_u8, 0xd6_u8, 0x77_u8, 0xb6_u8])
    def query_interface(this : IEnumSyncMgrEvents*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumSyncMgrEvents*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumSyncMgrEvents*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumSyncMgrEvents*, celt : UInt32, rgelt : Void**, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, rgelt, pceltFetched)
    end
    def skip(this : IEnumSyncMgrEvents*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumSyncMgrEvents*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumSyncMgrEvents*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppenum)
    end

  end

  @[Extern]
  record ISyncMgrConflictStoreVtbl,
    query_interface : Proc(ISyncMgrConflictStore*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrConflictStore*, UInt32),
    release : Proc(ISyncMgrConflictStore*, UInt32),
    enum_conflicts : Proc(ISyncMgrConflictStore*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    bind_to_conflict : Proc(ISyncMgrConflictStore*, Win32cr::UI::Shell::SYNCMGR_CONFLICT_ID_INFO*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    remove_conflicts : Proc(ISyncMgrConflictStore*, Win32cr::UI::Shell::SYNCMGR_CONFLICT_ID_INFO*, UInt32, Win32cr::Foundation::HRESULT),
    get_count : Proc(ISyncMgrConflictStore*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrConflictStore, lpVtbl : ISyncMgrConflictStoreVtbl* do
    GUID = LibC::GUID.new(0xcf8fc579_u32, 0xc396_u16, 0x4774_u16, StaticArray[0x85_u8, 0xf1_u8, 0xd9_u8, 0x8_u8, 0xa8_u8, 0x31_u8, 0x15_u8, 0x6e_u8])
    def query_interface(this : ISyncMgrConflictStore*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrConflictStore*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrConflictStore*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def enum_conflicts(this : ISyncMgrConflictStore*, pszHandlerID : Win32cr::Foundation::PWSTR, pszItemID : Win32cr::Foundation::PWSTR, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_conflicts.call(this, pszHandlerID, pszItemID, ppEnum)
    end
    def bind_to_conflict(this : ISyncMgrConflictStore*, pConflictIdInfo : Win32cr::UI::Shell::SYNCMGR_CONFLICT_ID_INFO*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.bind_to_conflict.call(this, pConflictIdInfo, riid, ppv)
    end
    def remove_conflicts(this : ISyncMgrConflictStore*, rgConflictIdInfo : Win32cr::UI::Shell::SYNCMGR_CONFLICT_ID_INFO*, cConflicts : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_conflicts.call(this, rgConflictIdInfo, cConflicts)
    end
    def get_count(this : ISyncMgrConflictStore*, pszHandlerID : Win32cr::Foundation::PWSTR, pszItemID : Win32cr::Foundation::PWSTR, pnConflicts : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_count.call(this, pszHandlerID, pszItemID, pnConflicts)
    end

  end

  @[Extern]
  record IEnumSyncMgrConflictVtbl,
    query_interface : Proc(IEnumSyncMgrConflict*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumSyncMgrConflict*, UInt32),
    release : Proc(IEnumSyncMgrConflict*, UInt32),
    next__ : Proc(IEnumSyncMgrConflict*, UInt32, Void**, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumSyncMgrConflict*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumSyncMgrConflict*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumSyncMgrConflict*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumSyncMgrConflict, lpVtbl : IEnumSyncMgrConflictVtbl* do
    GUID = LibC::GUID.new(0x82705914_u32, 0xdda3_u16, 0x4893_u16, StaticArray[0xba_u8, 0x99_u8, 0x49_u8, 0xde_u8, 0x6c_u8, 0x8c_u8, 0x80_u8, 0x36_u8])
    def query_interface(this : IEnumSyncMgrConflict*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumSyncMgrConflict*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumSyncMgrConflict*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumSyncMgrConflict*, celt : UInt32, rgelt : Void**, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, rgelt, pceltFetched)
    end
    def skip(this : IEnumSyncMgrConflict*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumSyncMgrConflict*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumSyncMgrConflict*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppenum)
    end

  end

  @[Extern]
  record ISyncMgrConflictVtbl,
    query_interface : Proc(ISyncMgrConflict*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrConflict*, UInt32),
    release : Proc(ISyncMgrConflict*, UInt32),
    get_property : Proc(ISyncMgrConflict*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, Win32cr::System::Com::StructuredStorage::PROPVARIANT*, Win32cr::Foundation::HRESULT),
    get_conflict_id_info : Proc(ISyncMgrConflict*, Win32cr::UI::Shell::SYNCMGR_CONFLICT_ID_INFO*, Win32cr::Foundation::HRESULT),
    get_items_array : Proc(ISyncMgrConflict*, Void**, Win32cr::Foundation::HRESULT),
    resolve : Proc(ISyncMgrConflict*, Void*, Win32cr::Foundation::HRESULT),
    get_resolution_handler : Proc(ISyncMgrConflict*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrConflict, lpVtbl : ISyncMgrConflictVtbl* do
    GUID = LibC::GUID.new(0x9c204249_u32, 0xc443_u16, 0x4ba4_u16, StaticArray[0x85_u8, 0xed_u8, 0xc9_u8, 0x72_u8, 0x68_u8, 0x1d_u8, 0xb1_u8, 0x37_u8])
    def query_interface(this : ISyncMgrConflict*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrConflict*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrConflict*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_property(this : ISyncMgrConflict*, propkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, ppropvar : Win32cr::System::Com::StructuredStorage::PROPVARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property.call(this, propkey, ppropvar)
    end
    def get_conflict_id_info(this : ISyncMgrConflict*, pConflictIdInfo : Win32cr::UI::Shell::SYNCMGR_CONFLICT_ID_INFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_conflict_id_info.call(this, pConflictIdInfo)
    end
    def get_items_array(this : ISyncMgrConflict*, ppArray : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_items_array.call(this, ppArray)
    end
    def resolve(this : ISyncMgrConflict*, pResolveInfo : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resolve.call(this, pResolveInfo)
    end
    def get_resolution_handler(this : ISyncMgrConflict*, riid : LibC::GUID*, ppvResolutionHandler : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_resolution_handler.call(this, riid, ppvResolutionHandler)
    end

  end

  @[Extern]
  record ISyncMgrResolutionHandlerVtbl,
    query_interface : Proc(ISyncMgrResolutionHandler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrResolutionHandler*, UInt32),
    release : Proc(ISyncMgrResolutionHandler*, UInt32),
    query_abilities : Proc(ISyncMgrResolutionHandler*, UInt32*, Win32cr::Foundation::HRESULT),
    keep_other : Proc(ISyncMgrResolutionHandler*, Void*, Win32cr::UI::Shell::SYNCMGR_RESOLUTION_FEEDBACK*, Win32cr::Foundation::HRESULT),
    keep_recent : Proc(ISyncMgrResolutionHandler*, Win32cr::UI::Shell::SYNCMGR_RESOLUTION_FEEDBACK*, Win32cr::Foundation::HRESULT),
    remove_from_sync_set : Proc(ISyncMgrResolutionHandler*, Win32cr::UI::Shell::SYNCMGR_RESOLUTION_FEEDBACK*, Win32cr::Foundation::HRESULT),
    keep_items : Proc(ISyncMgrResolutionHandler*, Void*, Win32cr::UI::Shell::SYNCMGR_RESOLUTION_FEEDBACK*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrResolutionHandler, lpVtbl : ISyncMgrResolutionHandlerVtbl* do
    GUID = LibC::GUID.new(0x40a3d052_u32, 0x8bff_u16, 0x4c4b_u16, StaticArray[0xa3_u8, 0x38_u8, 0xd4_u8, 0xa3_u8, 0x95_u8, 0x70_u8, 0xd_u8, 0xe9_u8])
    def query_interface(this : ISyncMgrResolutionHandler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrResolutionHandler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrResolutionHandler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def query_abilities(this : ISyncMgrResolutionHandler*, pdwAbilities : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_abilities.call(this, pdwAbilities)
    end
    def keep_other(this : ISyncMgrResolutionHandler*, psiOther : Void*, pFeedback : Win32cr::UI::Shell::SYNCMGR_RESOLUTION_FEEDBACK*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.keep_other.call(this, psiOther, pFeedback)
    end
    def keep_recent(this : ISyncMgrResolutionHandler*, pFeedback : Win32cr::UI::Shell::SYNCMGR_RESOLUTION_FEEDBACK*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.keep_recent.call(this, pFeedback)
    end
    def remove_from_sync_set(this : ISyncMgrResolutionHandler*, pFeedback : Win32cr::UI::Shell::SYNCMGR_RESOLUTION_FEEDBACK*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_from_sync_set.call(this, pFeedback)
    end
    def keep_items(this : ISyncMgrResolutionHandler*, pArray : Void*, pFeedback : Win32cr::UI::Shell::SYNCMGR_RESOLUTION_FEEDBACK*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.keep_items.call(this, pArray, pFeedback)
    end

  end

  @[Extern]
  record ISyncMgrConflictPresenterVtbl,
    query_interface : Proc(ISyncMgrConflictPresenter*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrConflictPresenter*, UInt32),
    release : Proc(ISyncMgrConflictPresenter*, UInt32),
    present_conflict : Proc(ISyncMgrConflictPresenter*, Void*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrConflictPresenter, lpVtbl : ISyncMgrConflictPresenterVtbl* do
    GUID = LibC::GUID.new(0xb4f5353_u32, 0xfd2b_u16, 0x42cd_u16, StaticArray[0x87_u8, 0x63_u8, 0x47_u8, 0x79_u8, 0xf2_u8, 0xd5_u8, 0x8_u8, 0xa3_u8])
    def query_interface(this : ISyncMgrConflictPresenter*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrConflictPresenter*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrConflictPresenter*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def present_conflict(this : ISyncMgrConflictPresenter*, pConflict : Void*, pResolveInfo : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.present_conflict.call(this, pConflict, pResolveInfo)
    end

  end

  @[Extern]
  record ISyncMgrConflictResolveInfoVtbl,
    query_interface : Proc(ISyncMgrConflictResolveInfo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrConflictResolveInfo*, UInt32),
    release : Proc(ISyncMgrConflictResolveInfo*, UInt32),
    get_iteration_info : Proc(ISyncMgrConflictResolveInfo*, UInt32*, UInt32*, UInt32*, Win32cr::Foundation::HRESULT),
    get_presenter_next_step : Proc(ISyncMgrConflictResolveInfo*, Win32cr::UI::Shell::SYNCMGR_PRESENTER_NEXT_STEP*, Win32cr::Foundation::HRESULT),
    get_presenter_choice : Proc(ISyncMgrConflictResolveInfo*, Win32cr::UI::Shell::SYNCMGR_PRESENTER_CHOICE*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_item_choice_count : Proc(ISyncMgrConflictResolveInfo*, UInt32*, Win32cr::Foundation::HRESULT),
    get_item_choice : Proc(ISyncMgrConflictResolveInfo*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    set_presenter_next_step : Proc(ISyncMgrConflictResolveInfo*, Win32cr::UI::Shell::SYNCMGR_PRESENTER_NEXT_STEP, Win32cr::Foundation::HRESULT),
    set_presenter_choice : Proc(ISyncMgrConflictResolveInfo*, Win32cr::UI::Shell::SYNCMGR_PRESENTER_CHOICE, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_item_choices : Proc(ISyncMgrConflictResolveInfo*, UInt32*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrConflictResolveInfo, lpVtbl : ISyncMgrConflictResolveInfoVtbl* do
    GUID = LibC::GUID.new(0xc405a219_u32, 0x25a2_u16, 0x442e_u16, StaticArray[0x87_u8, 0x43_u8, 0xb8_u8, 0x45_u8, 0xa2_u8, 0xce_u8, 0xe9_u8, 0x3f_u8])
    def query_interface(this : ISyncMgrConflictResolveInfo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrConflictResolveInfo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrConflictResolveInfo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_iteration_info(this : ISyncMgrConflictResolveInfo*, pnCurrentConflict : UInt32*, pcConflicts : UInt32*, pcRemainingForApplyToAll : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_iteration_info.call(this, pnCurrentConflict, pcConflicts, pcRemainingForApplyToAll)
    end
    def get_presenter_next_step(this : ISyncMgrConflictResolveInfo*, pnPresenterNextStep : Win32cr::UI::Shell::SYNCMGR_PRESENTER_NEXT_STEP*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_presenter_next_step.call(this, pnPresenterNextStep)
    end
    def get_presenter_choice(this : ISyncMgrConflictResolveInfo*, pnPresenterChoice : Win32cr::UI::Shell::SYNCMGR_PRESENTER_CHOICE*, pfApplyToAll : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_presenter_choice.call(this, pnPresenterChoice, pfApplyToAll)
    end
    def get_item_choice_count(this : ISyncMgrConflictResolveInfo*, pcChoices : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_choice_count.call(this, pcChoices)
    end
    def get_item_choice(this : ISyncMgrConflictResolveInfo*, iChoice : UInt32, piChoiceIndex : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_choice.call(this, iChoice, piChoiceIndex)
    end
    def set_presenter_next_step(this : ISyncMgrConflictResolveInfo*, nPresenterNextStep : Win32cr::UI::Shell::SYNCMGR_PRESENTER_NEXT_STEP) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_presenter_next_step.call(this, nPresenterNextStep)
    end
    def set_presenter_choice(this : ISyncMgrConflictResolveInfo*, nPresenterChoice : Win32cr::UI::Shell::SYNCMGR_PRESENTER_CHOICE, fApplyToAll : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_presenter_choice.call(this, nPresenterChoice, fApplyToAll)
    end
    def set_item_choices(this : ISyncMgrConflictResolveInfo*, prgiConflictItemIndexes : UInt32*, cChoices : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_item_choices.call(this, prgiConflictItemIndexes, cChoices)
    end

  end

  @[Extern]
  record ISyncMgrConflictFolderVtbl,
    query_interface : Proc(ISyncMgrConflictFolder*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrConflictFolder*, UInt32),
    release : Proc(ISyncMgrConflictFolder*, UInt32),
    get_conflict_id_list : Proc(ISyncMgrConflictFolder*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrConflictFolder, lpVtbl : ISyncMgrConflictFolderVtbl* do
    GUID = LibC::GUID.new(0x59287f5e_u32, 0xbc81_u16, 0x4fca_u16, StaticArray[0xa7_u8, 0xf1_u8, 0xe5_u8, 0xa8_u8, 0xec_u8, 0xdb_u8, 0x1d_u8, 0x69_u8])
    def query_interface(this : ISyncMgrConflictFolder*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrConflictFolder*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrConflictFolder*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_conflict_id_list(this : ISyncMgrConflictFolder*, pConflict : Void*, ppidlConflict : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_conflict_id_list.call(this, pConflict, ppidlConflict)
    end

  end

  @[Extern]
  record ISyncMgrConflictItemsVtbl,
    query_interface : Proc(ISyncMgrConflictItems*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrConflictItems*, UInt32),
    release : Proc(ISyncMgrConflictItems*, UInt32),
    get_count : Proc(ISyncMgrConflictItems*, UInt32*, Win32cr::Foundation::HRESULT),
    get_item : Proc(ISyncMgrConflictItems*, UInt32, Win32cr::UI::Shell::CONFIRM_CONFLICT_ITEM*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrConflictItems, lpVtbl : ISyncMgrConflictItemsVtbl* do
    GUID = LibC::GUID.new(0x9c7ead52_u32, 0x8023_u16, 0x4936_u16, StaticArray[0xa4_u8, 0xdb_u8, 0xd2_u8, 0xa9_u8, 0xa9_u8, 0x9e_u8, 0x43_u8, 0x6a_u8])
    def query_interface(this : ISyncMgrConflictItems*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrConflictItems*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrConflictItems*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_count(this : ISyncMgrConflictItems*, pCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_count.call(this, pCount)
    end
    def get_item(this : ISyncMgrConflictItems*, iIndex : UInt32, pItemInfo : Win32cr::UI::Shell::CONFIRM_CONFLICT_ITEM*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item.call(this, iIndex, pItemInfo)
    end

  end

  @[Extern]
  record ISyncMgrConflictResolutionItemsVtbl,
    query_interface : Proc(ISyncMgrConflictResolutionItems*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrConflictResolutionItems*, UInt32),
    release : Proc(ISyncMgrConflictResolutionItems*, UInt32),
    get_count : Proc(ISyncMgrConflictResolutionItems*, UInt32*, Win32cr::Foundation::HRESULT),
    get_item : Proc(ISyncMgrConflictResolutionItems*, UInt32, Win32cr::UI::Shell::CONFIRM_CONFLICT_RESULT_INFO*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrConflictResolutionItems, lpVtbl : ISyncMgrConflictResolutionItemsVtbl* do
    GUID = LibC::GUID.new(0x458725b9_u32, 0x129d_u16, 0x4135_u16, StaticArray[0xa9_u8, 0x98_u8, 0x9c_u8, 0xea_u8, 0xfe_u8, 0xc2_u8, 0x70_u8, 0x7_u8])
    def query_interface(this : ISyncMgrConflictResolutionItems*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrConflictResolutionItems*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrConflictResolutionItems*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_count(this : ISyncMgrConflictResolutionItems*, pCount : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_count.call(this, pCount)
    end
    def get_item(this : ISyncMgrConflictResolutionItems*, iIndex : UInt32, pItemInfo : Win32cr::UI::Shell::CONFIRM_CONFLICT_RESULT_INFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item.call(this, iIndex, pItemInfo)
    end

  end

  @[Extern]
  record IInputPanelConfigurationVtbl,
    query_interface : Proc(IInputPanelConfiguration*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInputPanelConfiguration*, UInt32),
    release : Proc(IInputPanelConfiguration*, UInt32),
    enable_focus_tracking : Proc(IInputPanelConfiguration*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInputPanelConfiguration, lpVtbl : IInputPanelConfigurationVtbl* do
    GUID = LibC::GUID.new(0x41c81592_u32, 0x514c_u16, 0x48bd_u16, StaticArray[0xa2_u8, 0x2e_u8, 0xe6_u8, 0xaf_u8, 0x63_u8, 0x85_u8, 0x21_u8, 0xa6_u8])
    def query_interface(this : IInputPanelConfiguration*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInputPanelConfiguration*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInputPanelConfiguration*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def enable_focus_tracking(this : IInputPanelConfiguration*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_focus_tracking.call(this)
    end

  end

  @[Extern]
  record IInputPanelInvocationConfigurationVtbl,
    query_interface : Proc(IInputPanelInvocationConfiguration*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInputPanelInvocationConfiguration*, UInt32),
    release : Proc(IInputPanelInvocationConfiguration*, UInt32),
    require_touch_in_edit_control : Proc(IInputPanelInvocationConfiguration*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInputPanelInvocationConfiguration, lpVtbl : IInputPanelInvocationConfigurationVtbl* do
    GUID = LibC::GUID.new(0xa213f136_u32, 0x3b45_u16, 0x4362_u16, StaticArray[0xa3_u8, 0x32_u8, 0xef_u8, 0xb6_u8, 0x54_u8, 0x7c_u8, 0xd4_u8, 0x32_u8])
    def query_interface(this : IInputPanelInvocationConfiguration*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInputPanelInvocationConfiguration*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInputPanelInvocationConfiguration*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def require_touch_in_edit_control(this : IInputPanelInvocationConfiguration*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.require_touch_in_edit_control.call(this)
    end

  end

  @[Extern]
  record ISharedBitmapVtbl,
    query_interface : Proc(ISharedBitmap*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISharedBitmap*, UInt32),
    release : Proc(ISharedBitmap*, UInt32),
    get_shared_bitmap : Proc(ISharedBitmap*, Win32cr::Graphics::Gdi::HBITMAP*, Win32cr::Foundation::HRESULT),
    get_size : Proc(ISharedBitmap*, Win32cr::Foundation::SIZE*, Win32cr::Foundation::HRESULT),
    get_format : Proc(ISharedBitmap*, Win32cr::UI::Shell::WTS_ALPHATYPE*, Win32cr::Foundation::HRESULT),
    initialize_bitmap : Proc(ISharedBitmap*, Win32cr::Graphics::Gdi::HBITMAP, Win32cr::UI::Shell::WTS_ALPHATYPE, Win32cr::Foundation::HRESULT),
    detach : Proc(ISharedBitmap*, Win32cr::Graphics::Gdi::HBITMAP*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISharedBitmap, lpVtbl : ISharedBitmapVtbl* do
    GUID = LibC::GUID.new(0x91162a4_u32, 0xbc96_u16, 0x411f_u16, StaticArray[0xaa_u8, 0xe8_u8, 0xc5_u8, 0x12_u8, 0x2c_u8, 0xd0_u8, 0x33_u8, 0x63_u8])
    def query_interface(this : ISharedBitmap*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISharedBitmap*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISharedBitmap*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_shared_bitmap(this : ISharedBitmap*, phbm : Win32cr::Graphics::Gdi::HBITMAP*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_shared_bitmap.call(this, phbm)
    end
    def get_size(this : ISharedBitmap*, pSize : Win32cr::Foundation::SIZE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_size.call(this, pSize)
    end
    def get_format(this : ISharedBitmap*, pat : Win32cr::UI::Shell::WTS_ALPHATYPE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_format.call(this, pat)
    end
    def initialize_bitmap(this : ISharedBitmap*, hbm : Win32cr::Graphics::Gdi::HBITMAP, wtsAT : Win32cr::UI::Shell::WTS_ALPHATYPE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_bitmap.call(this, hbm, wtsAT)
    end
    def detach(this : ISharedBitmap*, phbm : Win32cr::Graphics::Gdi::HBITMAP*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.detach.call(this, phbm)
    end

  end

  @[Extern]
  record IThumbnailCacheVtbl,
    query_interface : Proc(IThumbnailCache*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IThumbnailCache*, UInt32),
    release : Proc(IThumbnailCache*, UInt32),
    get_thumbnail : Proc(IThumbnailCache*, Void*, UInt32, Win32cr::UI::Shell::WTS_FLAGS, Void**, Win32cr::UI::Shell::WTS_CACHEFLAGS*, Win32cr::UI::Shell::WTS_THUMBNAILID*, Win32cr::Foundation::HRESULT),
    get_thumbnail_by_id : Proc(IThumbnailCache*, Win32cr::UI::Shell::WTS_THUMBNAILID, UInt32, Void**, Win32cr::UI::Shell::WTS_CACHEFLAGS*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IThumbnailCache, lpVtbl : IThumbnailCacheVtbl* do
    GUID = LibC::GUID.new(0xf676c15d_u32, 0x596a_u16, 0x4ce2_u16, StaticArray[0x82_u8, 0x34_u8, 0x33_u8, 0x99_u8, 0x6f_u8, 0x44_u8, 0x5d_u8, 0xb1_u8])
    def query_interface(this : IThumbnailCache*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IThumbnailCache*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IThumbnailCache*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_thumbnail(this : IThumbnailCache*, pShellItem : Void*, cxyRequestedThumbSize : UInt32, flags : Win32cr::UI::Shell::WTS_FLAGS, ppvThumb : Void**, pOutFlags : Win32cr::UI::Shell::WTS_CACHEFLAGS*, pThumbnailID : Win32cr::UI::Shell::WTS_THUMBNAILID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_thumbnail.call(this, pShellItem, cxyRequestedThumbSize, flags, ppvThumb, pOutFlags, pThumbnailID)
    end
    def get_thumbnail_by_id(this : IThumbnailCache*, thumbnailID : Win32cr::UI::Shell::WTS_THUMBNAILID, cxyRequestedThumbSize : UInt32, ppvThumb : Void**, pOutFlags : Win32cr::UI::Shell::WTS_CACHEFLAGS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_thumbnail_by_id.call(this, thumbnailID, cxyRequestedThumbSize, ppvThumb, pOutFlags)
    end

  end

  @[Extern]
  record IThumbnailProviderVtbl,
    query_interface : Proc(IThumbnailProvider*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IThumbnailProvider*, UInt32),
    release : Proc(IThumbnailProvider*, UInt32),
    get_thumbnail : Proc(IThumbnailProvider*, UInt32, Win32cr::Graphics::Gdi::HBITMAP*, Win32cr::UI::Shell::WTS_ALPHATYPE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IThumbnailProvider, lpVtbl : IThumbnailProviderVtbl* do
    GUID = LibC::GUID.new(0xe357fccd_u32, 0xa995_u16, 0x4576_u16, StaticArray[0xb0_u8, 0x1f_u8, 0x23_u8, 0x46_u8, 0x30_u8, 0x15_u8, 0x4e_u8, 0x96_u8])
    def query_interface(this : IThumbnailProvider*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IThumbnailProvider*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IThumbnailProvider*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_thumbnail(this : IThumbnailProvider*, cx : UInt32, phbmp : Win32cr::Graphics::Gdi::HBITMAP*, pdwAlpha : Win32cr::UI::Shell::WTS_ALPHATYPE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_thumbnail.call(this, cx, phbmp, pdwAlpha)
    end

  end

  @[Extern]
  record IThumbnailSettingsVtbl,
    query_interface : Proc(IThumbnailSettings*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IThumbnailSettings*, UInt32),
    release : Proc(IThumbnailSettings*, UInt32),
    set_context : Proc(IThumbnailSettings*, Win32cr::UI::Shell::WTS_CONTEXTFLAGS, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IThumbnailSettings, lpVtbl : IThumbnailSettingsVtbl* do
    GUID = LibC::GUID.new(0xf4376f00_u32, 0xbef5_u16, 0x4d45_u16, StaticArray[0x80_u8, 0xf3_u8, 0x1e_u8, 0x2_u8, 0x3b_u8, 0xbf_u8, 0x12_u8, 0x9_u8])
    def query_interface(this : IThumbnailSettings*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IThumbnailSettings*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IThumbnailSettings*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_context(this : IThumbnailSettings*, dwContext : Win32cr::UI::Shell::WTS_CONTEXTFLAGS) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_context.call(this, dwContext)
    end

  end

  @[Extern]
  record IThumbnailCachePrimerVtbl,
    query_interface : Proc(IThumbnailCachePrimer*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IThumbnailCachePrimer*, UInt32),
    release : Proc(IThumbnailCachePrimer*, UInt32),
    page_in_thumbnail : Proc(IThumbnailCachePrimer*, Void*, Win32cr::UI::Shell::WTS_FLAGS, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IThumbnailCachePrimer, lpVtbl : IThumbnailCachePrimerVtbl* do
    GUID = LibC::GUID.new(0xf03f8fe_u32, 0x2b26_u16, 0x46f0_u16, StaticArray[0x96_u8, 0x5a_u8, 0x21_u8, 0x2a_u8, 0xa8_u8, 0xd6_u8, 0x6b_u8, 0x76_u8])
    def query_interface(this : IThumbnailCachePrimer*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IThumbnailCachePrimer*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IThumbnailCachePrimer*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def page_in_thumbnail(this : IThumbnailCachePrimer*, psi : Void*, wtsFlags : Win32cr::UI::Shell::WTS_FLAGS, cxyRequestedThumbSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.page_in_thumbnail.call(this, psi, wtsFlags, cxyRequestedThumbSize)
    end

  end

  @[Extern]
  record IShellImageDataFactoryVtbl,
    query_interface : Proc(IShellImageDataFactory*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellImageDataFactory*, UInt32),
    release : Proc(IShellImageDataFactory*, UInt32),
    create_i_shell_image_data : Proc(IShellImageDataFactory*, Void**, Win32cr::Foundation::HRESULT),
    create_image_from_file : Proc(IShellImageDataFactory*, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    create_image_from_stream : Proc(IShellImageDataFactory*, Void*, Void**, Win32cr::Foundation::HRESULT),
    get_data_format_from_path : Proc(IShellImageDataFactory*, Win32cr::Foundation::PWSTR, LibC::GUID*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellImageDataFactory, lpVtbl : IShellImageDataFactoryVtbl* do
    GUID = LibC::GUID.new(0x9be8ed5c_u32, 0xedab_u16, 0x4d75_u16, StaticArray[0x90_u8, 0xf3_u8, 0xbd_u8, 0x5b_u8, 0xdb_u8, 0xb2_u8, 0x1c_u8, 0x82_u8])
    def query_interface(this : IShellImageDataFactory*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellImageDataFactory*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellImageDataFactory*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_i_shell_image_data(this : IShellImageDataFactory*, ppshimg : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_i_shell_image_data.call(this, ppshimg)
    end
    def create_image_from_file(this : IShellImageDataFactory*, pszPath : Win32cr::Foundation::PWSTR, ppshimg : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_image_from_file.call(this, pszPath, ppshimg)
    end
    def create_image_from_stream(this : IShellImageDataFactory*, pStream : Void*, ppshimg : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_image_from_stream.call(this, pStream, ppshimg)
    end
    def get_data_format_from_path(this : IShellImageDataFactory*, pszPath : Win32cr::Foundation::PWSTR, pDataFormat : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_data_format_from_path.call(this, pszPath, pDataFormat)
    end

  end

  @[Extern]
  record IShellImageDataVtbl,
    query_interface : Proc(IShellImageData*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellImageData*, UInt32),
    release : Proc(IShellImageData*, UInt32),
    decode : Proc(IShellImageData*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    draw : Proc(IShellImageData*, Win32cr::Graphics::Gdi::HDC, Win32cr::Foundation::RECT*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    next_frame : Proc(IShellImageData*, Win32cr::Foundation::HRESULT),
    next_page : Proc(IShellImageData*, Win32cr::Foundation::HRESULT),
    prev_page : Proc(IShellImageData*, Win32cr::Foundation::HRESULT),
    is_transparent : Proc(IShellImageData*, Win32cr::Foundation::HRESULT),
    is_animated : Proc(IShellImageData*, Win32cr::Foundation::HRESULT),
    is_vector : Proc(IShellImageData*, Win32cr::Foundation::HRESULT),
    is_multipage : Proc(IShellImageData*, Win32cr::Foundation::HRESULT),
    is_editable : Proc(IShellImageData*, Win32cr::Foundation::HRESULT),
    is_printable : Proc(IShellImageData*, Win32cr::Foundation::HRESULT),
    is_decoded : Proc(IShellImageData*, Win32cr::Foundation::HRESULT),
    get_current_page : Proc(IShellImageData*, UInt32*, Win32cr::Foundation::HRESULT),
    get_page_count : Proc(IShellImageData*, UInt32*, Win32cr::Foundation::HRESULT),
    select_page : Proc(IShellImageData*, UInt32, Win32cr::Foundation::HRESULT),
    get_size : Proc(IShellImageData*, Win32cr::Foundation::SIZE*, Win32cr::Foundation::HRESULT),
    get_raw_data_format : Proc(IShellImageData*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_pixel_format : Proc(IShellImageData*, UInt32*, Win32cr::Foundation::HRESULT),
    get_delay : Proc(IShellImageData*, UInt32*, Win32cr::Foundation::HRESULT),
    get_properties : Proc(IShellImageData*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    rotate : Proc(IShellImageData*, UInt32, Win32cr::Foundation::HRESULT),
    scale : Proc(IShellImageData*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    discard_edit : Proc(IShellImageData*, Win32cr::Foundation::HRESULT),
    set_encoder_params : Proc(IShellImageData*, Void*, Win32cr::Foundation::HRESULT),
    display_name : Proc(IShellImageData*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_resolution : Proc(IShellImageData*, UInt32*, UInt32*, Win32cr::Foundation::HRESULT),
    get_encoder_params : Proc(IShellImageData*, LibC::GUID*, UInt8**, Win32cr::Foundation::HRESULT),
    register_abort : Proc(IShellImageData*, Void*, Void**, Win32cr::Foundation::HRESULT),
    clone_frame : Proc(IShellImageData*, UInt8**, Win32cr::Foundation::HRESULT),
    replace_frame : Proc(IShellImageData*, UInt8*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellImageData, lpVtbl : IShellImageDataVtbl* do
    GUID = LibC::GUID.new(0xbfdeec12_u32, 0x8040_u16, 0x4403_u16, StaticArray[0xa5_u8, 0xea_u8, 0x9e_u8, 0x7_u8, 0xda_u8, 0xfc_u8, 0xf5_u8, 0x30_u8])
    def query_interface(this : IShellImageData*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellImageData*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellImageData*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def decode(this : IShellImageData*, dwFlags : UInt32, cxDesired : UInt32, cyDesired : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.decode.call(this, dwFlags, cxDesired, cyDesired)
    end
    def draw(this : IShellImageData*, hdc : Win32cr::Graphics::Gdi::HDC, prcDest : Win32cr::Foundation::RECT*, prcSrc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.draw.call(this, hdc, prcDest, prcSrc)
    end
    def next_frame(this : IShellImageData*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next_frame.call(this)
    end
    def next_page(this : IShellImageData*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next_page.call(this)
    end
    def prev_page(this : IShellImageData*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.prev_page.call(this)
    end
    def is_transparent(this : IShellImageData*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_transparent.call(this)
    end
    def is_animated(this : IShellImageData*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_animated.call(this)
    end
    def is_vector(this : IShellImageData*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_vector.call(this)
    end
    def is_multipage(this : IShellImageData*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_multipage.call(this)
    end
    def is_editable(this : IShellImageData*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_editable.call(this)
    end
    def is_printable(this : IShellImageData*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_printable.call(this)
    end
    def is_decoded(this : IShellImageData*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_decoded.call(this)
    end
    def get_current_page(this : IShellImageData*, pnPage : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_page.call(this, pnPage)
    end
    def get_page_count(this : IShellImageData*, pcPages : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_page_count.call(this, pcPages)
    end
    def select_page(this : IShellImageData*, iPage : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_page.call(this, iPage)
    end
    def get_size(this : IShellImageData*, pSize : Win32cr::Foundation::SIZE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_size.call(this, pSize)
    end
    def get_raw_data_format(this : IShellImageData*, pDataFormat : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_raw_data_format.call(this, pDataFormat)
    end
    def get_pixel_format(this : IShellImageData*, pFormat : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_pixel_format.call(this, pFormat)
    end
    def get_delay(this : IShellImageData*, pdwDelay : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_delay.call(this, pdwDelay)
    end
    def get_properties(this : IShellImageData*, dwMode : UInt32, ppPropSet : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_properties.call(this, dwMode, ppPropSet)
    end
    def rotate(this : IShellImageData*, dwAngle : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.rotate.call(this, dwAngle)
    end
    def scale(this : IShellImageData*, cx : UInt32, cy : UInt32, hints : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.scale.call(this, cx, cy, hints)
    end
    def discard_edit(this : IShellImageData*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.discard_edit.call(this)
    end
    def set_encoder_params(this : IShellImageData*, pbagEnc : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_encoder_params.call(this, pbagEnc)
    end
    def display_name(this : IShellImageData*, wszName : Win32cr::Foundation::PWSTR, cch : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.display_name.call(this, wszName, cch)
    end
    def get_resolution(this : IShellImageData*, puResolutionX : UInt32*, puResolutionY : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_resolution.call(this, puResolutionX, puResolutionY)
    end
    def get_encoder_params(this : IShellImageData*, pguidFmt : LibC::GUID*, ppEncParams : UInt8**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_encoder_params.call(this, pguidFmt, ppEncParams)
    end
    def register_abort(this : IShellImageData*, pAbort : Void*, ppAbortPrev : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_abort.call(this, pAbort, ppAbortPrev)
    end
    def clone_frame(this : IShellImageData*, ppImg : UInt8**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone_frame.call(this, ppImg)
    end
    def replace_frame(this : IShellImageData*, pImg : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.replace_frame.call(this, pImg)
    end

  end

  @[Extern]
  record IShellImageDataAbortVtbl,
    query_interface : Proc(IShellImageDataAbort*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellImageDataAbort*, UInt32),
    release : Proc(IShellImageDataAbort*, UInt32),
    query_abort : Proc(IShellImageDataAbort*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellImageDataAbort, lpVtbl : IShellImageDataAbortVtbl* do
    GUID = LibC::GUID.new(0x53fb8e58_u32, 0x50c0_u16, 0x4003_u16, StaticArray[0xb4_u8, 0xaa_u8, 0xc_u8, 0x8d_u8, 0xf2_u8, 0x8e_u8, 0x7f_u8, 0x3a_u8])
    def query_interface(this : IShellImageDataAbort*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellImageDataAbort*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellImageDataAbort*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def query_abort(this : IShellImageDataAbort*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_abort.call(this)
    end

  end

  @[Extern]
  record IStorageProviderPropertyHandlerVtbl,
    query_interface : Proc(IStorageProviderPropertyHandler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IStorageProviderPropertyHandler*, UInt32),
    release : Proc(IStorageProviderPropertyHandler*, UInt32),
    retrieve_properties : Proc(IStorageProviderPropertyHandler*, Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    save_properties : Proc(IStorageProviderPropertyHandler*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IStorageProviderPropertyHandler, lpVtbl : IStorageProviderPropertyHandlerVtbl* do
    GUID = LibC::GUID.new(0x301dfbe5_u32, 0x524c_u16, 0x4b0f_u16, StaticArray[0x8b_u8, 0x2d_u8, 0x21_u8, 0xc4_u8, 0xb_u8, 0x3a_u8, 0x29_u8, 0x88_u8])
    def query_interface(this : IStorageProviderPropertyHandler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IStorageProviderPropertyHandler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IStorageProviderPropertyHandler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def retrieve_properties(this : IStorageProviderPropertyHandler*, propertiesToRetrieve : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, propertiesToRetrieveCount : UInt32, retrievedProperties : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.retrieve_properties.call(this, propertiesToRetrieve, propertiesToRetrieveCount, retrievedProperties)
    end
    def save_properties(this : IStorageProviderPropertyHandler*, propertiesToSave : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.save_properties.call(this, propertiesToSave)
    end

  end

  @[Extern]
  record IStorageProviderHandlerVtbl,
    query_interface : Proc(IStorageProviderHandler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IStorageProviderHandler*, UInt32),
    release : Proc(IStorageProviderHandler*, UInt32),
    get_property_handler_from_path : Proc(IStorageProviderHandler*, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    get_property_handler_from_uri : Proc(IStorageProviderHandler*, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    get_property_handler_from_file_id : Proc(IStorageProviderHandler*, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IStorageProviderHandler, lpVtbl : IStorageProviderHandlerVtbl* do
    GUID = LibC::GUID.new(0x162c6fb5_u32, 0x44d3_u16, 0x435b_u16, StaticArray[0x90_u8, 0x3d_u8, 0xe6_u8, 0x13_u8, 0xfa_u8, 0x9_u8, 0x3f_u8, 0xb5_u8])
    def query_interface(this : IStorageProviderHandler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IStorageProviderHandler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IStorageProviderHandler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_property_handler_from_path(this : IStorageProviderHandler*, path : Win32cr::Foundation::PWSTR, propertyHandler : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_handler_from_path.call(this, path, propertyHandler)
    end
    def get_property_handler_from_uri(this : IStorageProviderHandler*, uri : Win32cr::Foundation::PWSTR, propertyHandler : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_handler_from_uri.call(this, uri, propertyHandler)
    end
    def get_property_handler_from_file_id(this : IStorageProviderHandler*, fileId : Win32cr::Foundation::PWSTR, propertyHandler : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_handler_from_file_id.call(this, fileId, propertyHandler)
    end

  end

  @[Extern]
  record ISyncMgrSynchronizeCallbackVtbl,
    query_interface : Proc(ISyncMgrSynchronizeCallback*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrSynchronizeCallback*, UInt32),
    release : Proc(ISyncMgrSynchronizeCallback*, UInt32),
    show_properties_completed : Proc(ISyncMgrSynchronizeCallback*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::HRESULT),
    prepare_for_sync_completed : Proc(ISyncMgrSynchronizeCallback*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::HRESULT),
    synchronize_completed : Proc(ISyncMgrSynchronizeCallback*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::HRESULT),
    show_error_completed : Proc(ISyncMgrSynchronizeCallback*, Win32cr::Foundation::HRESULT, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT),
    enable_modeless : Proc(ISyncMgrSynchronizeCallback*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    progress : Proc(ISyncMgrSynchronizeCallback*, LibC::GUID*, Win32cr::UI::Shell::SYNCMGRPROGRESSITEM*, Win32cr::Foundation::HRESULT),
    log_error : Proc(ISyncMgrSynchronizeCallback*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::SYNCMGRLOGERRORINFO*, Win32cr::Foundation::HRESULT),
    delete_log_error : Proc(ISyncMgrSynchronizeCallback*, LibC::GUID*, UInt32, Win32cr::Foundation::HRESULT),
    establish_connection : Proc(ISyncMgrSynchronizeCallback*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrSynchronizeCallback, lpVtbl : ISyncMgrSynchronizeCallbackVtbl* do
    GUID = LibC::GUID.new(0x6295df41_u32, 0x35ee_u16, 0x11d1_u16, StaticArray[0x87_u8, 0x7_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x33_u8, 0x27_u8])
    def query_interface(this : ISyncMgrSynchronizeCallback*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrSynchronizeCallback*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrSynchronizeCallback*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def show_properties_completed(this : ISyncMgrSynchronizeCallback*, hr : Win32cr::Foundation::HRESULT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_properties_completed.call(this, hr)
    end
    def prepare_for_sync_completed(this : ISyncMgrSynchronizeCallback*, hr : Win32cr::Foundation::HRESULT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.prepare_for_sync_completed.call(this, hr)
    end
    def synchronize_completed(this : ISyncMgrSynchronizeCallback*, hr : Win32cr::Foundation::HRESULT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.synchronize_completed.call(this, hr)
    end
    def show_error_completed(this : ISyncMgrSynchronizeCallback*, hr : Win32cr::Foundation::HRESULT, cItems : UInt32, pItemIDs : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_error_completed.call(this, hr, cItems, pItemIDs)
    end
    def enable_modeless(this : ISyncMgrSynchronizeCallback*, fEnable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enable_modeless.call(this, fEnable)
    end
    def progress(this : ISyncMgrSynchronizeCallback*, item_id : LibC::GUID*, pSyncProgressItem : Win32cr::UI::Shell::SYNCMGRPROGRESSITEM*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.progress.call(this, item_id, pSyncProgressItem)
    end
    def log_error(this : ISyncMgrSynchronizeCallback*, dwErrorLevel : UInt32, pszErrorText : Win32cr::Foundation::PWSTR, pSyncLogError : Win32cr::UI::Shell::SYNCMGRLOGERRORINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.log_error.call(this, dwErrorLevel, pszErrorText, pSyncLogError)
    end
    def delete_log_error(this : ISyncMgrSynchronizeCallback*, error_id : LibC::GUID*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_log_error.call(this, error_id, dwReserved)
    end
    def establish_connection(this : ISyncMgrSynchronizeCallback*, pwszConnection : Win32cr::Foundation::PWSTR, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.establish_connection.call(this, pwszConnection, dwReserved)
    end

  end

  @[Extern]
  record ISyncMgrEnumItemsVtbl,
    query_interface : Proc(ISyncMgrEnumItems*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrEnumItems*, UInt32),
    release : Proc(ISyncMgrEnumItems*, UInt32),
    next__ : Proc(ISyncMgrEnumItems*, UInt32, Win32cr::UI::Shell::SYNCMGRITEM*, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(ISyncMgrEnumItems*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(ISyncMgrEnumItems*, Win32cr::Foundation::HRESULT),
    clone : Proc(ISyncMgrEnumItems*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrEnumItems, lpVtbl : ISyncMgrEnumItemsVtbl* do
    GUID = LibC::GUID.new(0x6295df2a_u32, 0x35ee_u16, 0x11d1_u16, StaticArray[0x87_u8, 0x7_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x33_u8, 0x27_u8])
    def query_interface(this : ISyncMgrEnumItems*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrEnumItems*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrEnumItems*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : ISyncMgrEnumItems*, celt : UInt32, rgelt : Win32cr::UI::Shell::SYNCMGRITEM*, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, rgelt, pceltFetched)
    end
    def skip(this : ISyncMgrEnumItems*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : ISyncMgrEnumItems*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : ISyncMgrEnumItems*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppenum)
    end

  end

  @[Extern]
  record ISyncMgrSynchronizeVtbl,
    query_interface : Proc(ISyncMgrSynchronize*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrSynchronize*, UInt32),
    release : Proc(ISyncMgrSynchronize*, UInt32),
    initialize__ : Proc(ISyncMgrSynchronize*, UInt32, UInt32, UInt32, UInt8*, Win32cr::Foundation::HRESULT),
    get_handler_info : Proc(ISyncMgrSynchronize*, Win32cr::UI::Shell::SYNCMGRHANDLERINFO**, Win32cr::Foundation::HRESULT),
    enum_sync_mgr_items : Proc(ISyncMgrSynchronize*, Void**, Win32cr::Foundation::HRESULT),
    get_item_object : Proc(ISyncMgrSynchronize*, LibC::GUID*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    show_properties : Proc(ISyncMgrSynchronize*, Win32cr::Foundation::HWND, LibC::GUID*, Win32cr::Foundation::HRESULT),
    set_progress_callback : Proc(ISyncMgrSynchronize*, Void*, Win32cr::Foundation::HRESULT),
    prepare_for_sync : Proc(ISyncMgrSynchronize*, UInt32, LibC::GUID*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    synchronize : Proc(ISyncMgrSynchronize*, Win32cr::Foundation::HWND, Win32cr::Foundation::HRESULT),
    set_item_status : Proc(ISyncMgrSynchronize*, LibC::GUID*, UInt32, Win32cr::Foundation::HRESULT),
    show_error : Proc(ISyncMgrSynchronize*, Win32cr::Foundation::HWND, LibC::GUID*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrSynchronize, lpVtbl : ISyncMgrSynchronizeVtbl* do
    GUID = LibC::GUID.new(0x6295df40_u32, 0x35ee_u16, 0x11d1_u16, StaticArray[0x87_u8, 0x7_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x33_u8, 0x27_u8])
    def query_interface(this : ISyncMgrSynchronize*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrSynchronize*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrSynchronize*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : ISyncMgrSynchronize*, dwReserved : UInt32, dwSyncMgrFlags : UInt32, cbCookie : UInt32, lpCookie : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, dwReserved, dwSyncMgrFlags, cbCookie, lpCookie)
    end
    def get_handler_info(this : ISyncMgrSynchronize*, ppSyncMgrHandlerInfo : Win32cr::UI::Shell::SYNCMGRHANDLERINFO**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_handler_info.call(this, ppSyncMgrHandlerInfo)
    end
    def enum_sync_mgr_items(this : ISyncMgrSynchronize*, ppSyncMgrEnumItems : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_sync_mgr_items.call(this, ppSyncMgrEnumItems)
    end
    def get_item_object(this : ISyncMgrSynchronize*, item_id : LibC::GUID*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_object.call(this, item_id, riid, ppv)
    end
    def show_properties(this : ISyncMgrSynchronize*, hWndParent : Win32cr::Foundation::HWND, item_id : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_properties.call(this, hWndParent, item_id)
    end
    def set_progress_callback(this : ISyncMgrSynchronize*, lpCallBack : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_progress_callback.call(this, lpCallBack)
    end
    def prepare_for_sync(this : ISyncMgrSynchronize*, cbNumItems : UInt32, pItemIDs : LibC::GUID*, hWndParent : Win32cr::Foundation::HWND, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.prepare_for_sync.call(this, cbNumItems, pItemIDs, hWndParent, dwReserved)
    end
    def synchronize(this : ISyncMgrSynchronize*, hWndParent : Win32cr::Foundation::HWND) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.synchronize.call(this, hWndParent)
    end
    def set_item_status(this : ISyncMgrSynchronize*, pItemID : LibC::GUID*, dwSyncMgrStatus : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_item_status.call(this, pItemID, dwSyncMgrStatus)
    end
    def show_error(this : ISyncMgrSynchronize*, hWndParent : Win32cr::Foundation::HWND, error_id : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_error.call(this, hWndParent, error_id)
    end

  end

  @[Extern]
  record ISyncMgrSynchronizeInvokeVtbl,
    query_interface : Proc(ISyncMgrSynchronizeInvoke*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrSynchronizeInvoke*, UInt32),
    release : Proc(ISyncMgrSynchronizeInvoke*, UInt32),
    update_items : Proc(ISyncMgrSynchronizeInvoke*, UInt32, LibC::GUID*, UInt32, UInt8*, Win32cr::Foundation::HRESULT),
    update_all : Proc(ISyncMgrSynchronizeInvoke*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrSynchronizeInvoke, lpVtbl : ISyncMgrSynchronizeInvokeVtbl* do
    GUID = LibC::GUID.new(0x6295df2c_u32, 0x35ee_u16, 0x11d1_u16, StaticArray[0x87_u8, 0x7_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x33_u8, 0x27_u8])
    def query_interface(this : ISyncMgrSynchronizeInvoke*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrSynchronizeInvoke*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrSynchronizeInvoke*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def update_items(this : ISyncMgrSynchronizeInvoke*, dwInvokeFlags : UInt32, clsid : LibC::GUID*, cbCookie : UInt32, pCookie : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_items.call(this, dwInvokeFlags, clsid, cbCookie, pCookie)
    end
    def update_all(this : ISyncMgrSynchronizeInvoke*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_all.call(this)
    end

  end

  @[Extern]
  record ISyncMgrRegisterVtbl,
    query_interface : Proc(ISyncMgrRegister*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ISyncMgrRegister*, UInt32),
    release : Proc(ISyncMgrRegister*, UInt32),
    register_sync_mgr_handler : Proc(ISyncMgrRegister*, LibC::GUID*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    unregister_sync_mgr_handler : Proc(ISyncMgrRegister*, LibC::GUID*, UInt32, Win32cr::Foundation::HRESULT),
    get_handler_registration_info : Proc(ISyncMgrRegister*, LibC::GUID*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ISyncMgrRegister, lpVtbl : ISyncMgrRegisterVtbl* do
    GUID = LibC::GUID.new(0x6295df42_u32, 0x35ee_u16, 0x11d1_u16, StaticArray[0x87_u8, 0x7_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x33_u8, 0x27_u8])
    def query_interface(this : ISyncMgrRegister*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ISyncMgrRegister*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ISyncMgrRegister*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def register_sync_mgr_handler(this : ISyncMgrRegister*, clsidHandler : LibC::GUID*, pwszDescription : Win32cr::Foundation::PWSTR, dwSyncMgrRegisterFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_sync_mgr_handler.call(this, clsidHandler, pwszDescription, dwSyncMgrRegisterFlags)
    end
    def unregister_sync_mgr_handler(this : ISyncMgrRegister*, clsidHandler : LibC::GUID*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unregister_sync_mgr_handler.call(this, clsidHandler, dwReserved)
    end
    def get_handler_registration_info(this : ISyncMgrRegister*, clsidHandler : LibC::GUID*, pdwSyncMgrRegisterFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_handler_registration_info.call(this, clsidHandler, pdwSyncMgrRegisterFlags)
    end

  end

  @[Extern]
  record IThumbnailStreamCacheVtbl,
    query_interface : Proc(IThumbnailStreamCache*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IThumbnailStreamCache*, UInt32),
    release : Proc(IThumbnailStreamCache*, UInt32),
    get_thumbnail_stream : Proc(IThumbnailStreamCache*, Win32cr::Foundation::PWSTR, UInt64, Win32cr::UI::Shell::ThumbnailStreamCacheOptions, UInt32, Win32cr::Foundation::SIZE*, Void**, Win32cr::Foundation::HRESULT),
    set_thumbnail_stream : Proc(IThumbnailStreamCache*, Win32cr::Foundation::PWSTR, UInt64, Win32cr::Foundation::SIZE, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IThumbnailStreamCache, lpVtbl : IThumbnailStreamCacheVtbl* do
    GUID = LibC::GUID.new(0x90e11430_u32, 0x9569_u16, 0x41d8_u16, StaticArray[0xae_u8, 0x75_u8, 0x6d_u8, 0x4d_u8, 0x2a_u8, 0xe7_u8, 0xcc_u8, 0xa0_u8])
    def query_interface(this : IThumbnailStreamCache*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IThumbnailStreamCache*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IThumbnailStreamCache*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_thumbnail_stream(this : IThumbnailStreamCache*, path : Win32cr::Foundation::PWSTR, cacheId : UInt64, options : Win32cr::UI::Shell::ThumbnailStreamCacheOptions, requestedThumbnailSize : UInt32, thumbnailSize : Win32cr::Foundation::SIZE*, thumbnailStream : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_thumbnail_stream.call(this, path, cacheId, options, requestedThumbnailSize, thumbnailSize, thumbnailStream)
    end
    def set_thumbnail_stream(this : IThumbnailStreamCache*, path : Win32cr::Foundation::PWSTR, cacheId : UInt64, thumbnailSize : Win32cr::Foundation::SIZE, thumbnailStream : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_thumbnail_stream.call(this, path, cacheId, thumbnailSize, thumbnailStream)
    end

  end

  @[Extern]
  record ITravelLogEntryVtbl,
    query_interface : Proc(ITravelLogEntry*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITravelLogEntry*, UInt32),
    release : Proc(ITravelLogEntry*, UInt32),
    get_title : Proc(ITravelLogEntry*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_url : Proc(ITravelLogEntry*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITravelLogEntry, lpVtbl : ITravelLogEntryVtbl* do
    GUID = LibC::GUID.new(0x7ebfdd87_u32, 0xad18_u16, 0x11d3_u16, StaticArray[0xa4_u8, 0xc5_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x72_u8, 0xd6_u8, 0xb8_u8])
    def query_interface(this : ITravelLogEntry*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITravelLogEntry*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITravelLogEntry*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_title(this : ITravelLogEntry*, ppszTitle : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_title.call(this, ppszTitle)
    end
    def get_url(this : ITravelLogEntry*, ppszURL : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_url.call(this, ppszURL)
    end

  end

  @[Extern]
  record ITravelLogClientVtbl,
    query_interface : Proc(ITravelLogClient*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITravelLogClient*, UInt32),
    release : Proc(ITravelLogClient*, UInt32),
    find_window_by_index : Proc(ITravelLogClient*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_window_data : Proc(ITravelLogClient*, Void*, Win32cr::UI::Shell::WINDOWDATA*, Win32cr::Foundation::HRESULT),
    load_history_position : Proc(ITravelLogClient*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITravelLogClient, lpVtbl : ITravelLogClientVtbl* do
    GUID = LibC::GUID.new(0x241c033e_u32, 0xe659_u16, 0x43da_u16, StaticArray[0xaa_u8, 0x4d_u8, 0x40_u8, 0x86_u8, 0xdb_u8, 0xc4_u8, 0x75_u8, 0x8d_u8])
    def query_interface(this : ITravelLogClient*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITravelLogClient*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITravelLogClient*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def find_window_by_index(this : ITravelLogClient*, dwID : UInt32, ppunk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_window_by_index.call(this, dwID, ppunk)
    end
    def get_window_data(this : ITravelLogClient*, pStream : Void*, pWinData : Win32cr::UI::Shell::WINDOWDATA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window_data.call(this, pStream, pWinData)
    end
    def load_history_position(this : ITravelLogClient*, pszUrlLocation : Win32cr::Foundation::PWSTR, dwPosition : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.load_history_position.call(this, pszUrlLocation, dwPosition)
    end

  end

  @[Extern]
  record IEnumTravelLogEntryVtbl,
    query_interface : Proc(IEnumTravelLogEntry*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumTravelLogEntry*, UInt32),
    release : Proc(IEnumTravelLogEntry*, UInt32),
    next__ : Proc(IEnumTravelLogEntry*, UInt32, Void**, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumTravelLogEntry*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumTravelLogEntry*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumTravelLogEntry*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumTravelLogEntry, lpVtbl : IEnumTravelLogEntryVtbl* do
    GUID = LibC::GUID.new(0x7ebfdd85_u32, 0xad18_u16, 0x11d3_u16, StaticArray[0xa4_u8, 0xc5_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x72_u8, 0xd6_u8, 0xb8_u8])
    def query_interface(this : IEnumTravelLogEntry*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumTravelLogEntry*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumTravelLogEntry*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumTravelLogEntry*, cElt : UInt32, rgElt : Void**, pcEltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, cElt, rgElt, pcEltFetched)
    end
    def skip(this : IEnumTravelLogEntry*, cElt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, cElt)
    end
    def reset(this : IEnumTravelLogEntry*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumTravelLogEntry*, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppEnum)
    end

  end

  @[Extern]
  record ITravelLogStgVtbl,
    query_interface : Proc(ITravelLogStg*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITravelLogStg*, UInt32),
    release : Proc(ITravelLogStg*, UInt32),
    create_entry : Proc(ITravelLogStg*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    travel_to : Proc(ITravelLogStg*, Void*, Win32cr::Foundation::HRESULT),
    enum_entries : Proc(ITravelLogStg*, Win32cr::UI::Shell::TLENUMF, Void**, Win32cr::Foundation::HRESULT),
    find_entries : Proc(ITravelLogStg*, Win32cr::UI::Shell::TLENUMF, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    get_count : Proc(ITravelLogStg*, Win32cr::UI::Shell::TLENUMF, UInt32*, Win32cr::Foundation::HRESULT),
    remove_entry : Proc(ITravelLogStg*, Void*, Win32cr::Foundation::HRESULT),
    get_relative_entry : Proc(ITravelLogStg*, Int32, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITravelLogStg, lpVtbl : ITravelLogStgVtbl* do
    GUID = LibC::GUID.new(0x7ebfdd80_u32, 0xad18_u16, 0x11d3_u16, StaticArray[0xa4_u8, 0xc5_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x72_u8, 0xd6_u8, 0xb8_u8])
    def query_interface(this : ITravelLogStg*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITravelLogStg*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITravelLogStg*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_entry(this : ITravelLogStg*, pszUrl : Win32cr::Foundation::PWSTR, pszTitle : Win32cr::Foundation::PWSTR, ptleRelativeTo : Void*, fPrepend : Win32cr::Foundation::BOOL, pptle : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_entry.call(this, pszUrl, pszTitle, ptleRelativeTo, fPrepend, pptle)
    end
    def travel_to(this : ITravelLogStg*, ptle : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.travel_to.call(this, ptle)
    end
    def enum_entries(this : ITravelLogStg*, flags : Win32cr::UI::Shell::TLENUMF, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_entries.call(this, flags, ppenum)
    end
    def find_entries(this : ITravelLogStg*, flags : Win32cr::UI::Shell::TLENUMF, pszUrl : Win32cr::Foundation::PWSTR, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_entries.call(this, flags, pszUrl, ppenum)
    end
    def get_count(this : ITravelLogStg*, flags : Win32cr::UI::Shell::TLENUMF, pcEntries : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_count.call(this, flags, pcEntries)
    end
    def remove_entry(this : ITravelLogStg*, ptle : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_entry.call(this, ptle)
    end
    def get_relative_entry(this : ITravelLogStg*, iOffset : Int32, ptle : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_relative_entry.call(this, iOffset, ptle)
    end

  end

  @[Extern]
  record IHlinkVtbl,
    query_interface : Proc(IHlink*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IHlink*, UInt32),
    release : Proc(IHlink*, UInt32),
    set_hlink_site : Proc(IHlink*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_hlink_site : Proc(IHlink*, Void**, UInt32*, Win32cr::Foundation::HRESULT),
    set_moniker_reference : Proc(IHlink*, UInt32, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_moniker_reference : Proc(IHlink*, UInt32, Void**, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    set_string_reference : Proc(IHlink*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_string_reference : Proc(IHlink*, UInt32, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    set_friendly_name : Proc(IHlink*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_friendly_name : Proc(IHlink*, UInt32, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    set_target_frame_name : Proc(IHlink*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_target_frame_name : Proc(IHlink*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    get_misc_status : Proc(IHlink*, UInt32*, Win32cr::Foundation::HRESULT),
    navigate : Proc(IHlink*, UInt32, Void*, Void*, Void*, Win32cr::Foundation::HRESULT),
    set_additional_params : Proc(IHlink*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_additional_params : Proc(IHlink*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IHlink, lpVtbl : IHlinkVtbl* do
    GUID = LibC::GUID.new(0x79eac9c3_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IHlink*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IHlink*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IHlink*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_hlink_site(this : IHlink*, pihlSite : Void*, dwSiteData : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_hlink_site.call(this, pihlSite, dwSiteData)
    end
    def get_hlink_site(this : IHlink*, ppihlSite : Void**, pdwSiteData : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_hlink_site.call(this, ppihlSite, pdwSiteData)
    end
    def set_moniker_reference(this : IHlink*, grfHLSETF : UInt32, pimkTarget : Void*, pwzLocation : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_moniker_reference.call(this, grfHLSETF, pimkTarget, pwzLocation)
    end
    def get_moniker_reference(this : IHlink*, dwWhichRef : UInt32, ppimkTarget : Void**, ppwzLocation : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_moniker_reference.call(this, dwWhichRef, ppimkTarget, ppwzLocation)
    end
    def set_string_reference(this : IHlink*, grfHLSETF : UInt32, pwzTarget : Win32cr::Foundation::PWSTR, pwzLocation : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_string_reference.call(this, grfHLSETF, pwzTarget, pwzLocation)
    end
    def get_string_reference(this : IHlink*, dwWhichRef : UInt32, ppwzTarget : Win32cr::Foundation::PWSTR*, ppwzLocation : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_string_reference.call(this, dwWhichRef, ppwzTarget, ppwzLocation)
    end
    def set_friendly_name(this : IHlink*, pwzFriendlyName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_friendly_name.call(this, pwzFriendlyName)
    end
    def get_friendly_name(this : IHlink*, grfHLFNAMEF : UInt32, ppwzFriendlyName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_friendly_name.call(this, grfHLFNAMEF, ppwzFriendlyName)
    end
    def set_target_frame_name(this : IHlink*, pwzTargetFrameName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_target_frame_name.call(this, pwzTargetFrameName)
    end
    def get_target_frame_name(this : IHlink*, ppwzTargetFrameName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_target_frame_name.call(this, ppwzTargetFrameName)
    end
    def get_misc_status(this : IHlink*, pdwStatus : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_misc_status.call(this, pdwStatus)
    end
    def navigate(this : IHlink*, grfHLNF : UInt32, pibc : Void*, pibsc : Void*, pihlbc : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate.call(this, grfHLNF, pibc, pibsc, pihlbc)
    end
    def set_additional_params(this : IHlink*, pwzAdditionalParams : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_additional_params.call(this, pwzAdditionalParams)
    end
    def get_additional_params(this : IHlink*, ppwzAdditionalParams : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_additional_params.call(this, ppwzAdditionalParams)
    end

  end

  @[Extern]
  record IHlinkSiteVtbl,
    query_interface : Proc(IHlinkSite*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IHlinkSite*, UInt32),
    release : Proc(IHlinkSite*, UInt32),
    query_service : Proc(IHlinkSite*, UInt32, LibC::GUID*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_moniker : Proc(IHlinkSite*, UInt32, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    ready_to_navigate : Proc(IHlinkSite*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    on_navigation_complete : Proc(IHlinkSite*, UInt32, UInt32, Win32cr::Foundation::HRESULT, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IHlinkSite, lpVtbl : IHlinkSiteVtbl* do
    GUID = LibC::GUID.new(0x79eac9c2_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IHlinkSite*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IHlinkSite*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IHlinkSite*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def query_service(this : IHlinkSite*, dwSiteData : UInt32, guidService : LibC::GUID*, riid : LibC::GUID*, ppiunk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_service.call(this, dwSiteData, guidService, riid, ppiunk)
    end
    def get_moniker(this : IHlinkSite*, dwSiteData : UInt32, dwAssign : UInt32, dwWhich : UInt32, ppimk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_moniker.call(this, dwSiteData, dwAssign, dwWhich, ppimk)
    end
    def ready_to_navigate(this : IHlinkSite*, dwSiteData : UInt32, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ready_to_navigate.call(this, dwSiteData, dwReserved)
    end
    def on_navigation_complete(this : IHlinkSite*, dwSiteData : UInt32, dwreserved : UInt32, hrError : Win32cr::Foundation::HRESULT, pwzError : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_navigation_complete.call(this, dwSiteData, dwreserved, hrError, pwzError)
    end

  end

  @[Extern]
  record IHlinkTargetVtbl,
    query_interface : Proc(IHlinkTarget*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IHlinkTarget*, UInt32),
    release : Proc(IHlinkTarget*, UInt32),
    set_browse_context : Proc(IHlinkTarget*, Void*, Win32cr::Foundation::HRESULT),
    get_browse_context : Proc(IHlinkTarget*, Void**, Win32cr::Foundation::HRESULT),
    navigate : Proc(IHlinkTarget*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_moniker : Proc(IHlinkTarget*, Win32cr::Foundation::PWSTR, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_friendly_name : Proc(IHlinkTarget*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IHlinkTarget, lpVtbl : IHlinkTargetVtbl* do
    GUID = LibC::GUID.new(0x79eac9c4_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IHlinkTarget*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IHlinkTarget*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IHlinkTarget*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_browse_context(this : IHlinkTarget*, pihlbc : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_browse_context.call(this, pihlbc)
    end
    def get_browse_context(this : IHlinkTarget*, ppihlbc : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_browse_context.call(this, ppihlbc)
    end
    def navigate(this : IHlinkTarget*, grfHLNF : UInt32, pwzJumpLocation : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate.call(this, grfHLNF, pwzJumpLocation)
    end
    def get_moniker(this : IHlinkTarget*, pwzLocation : Win32cr::Foundation::PWSTR, dwAssign : UInt32, ppimkLocation : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_moniker.call(this, pwzLocation, dwAssign, ppimkLocation)
    end
    def get_friendly_name(this : IHlinkTarget*, pwzLocation : Win32cr::Foundation::PWSTR, ppwzFriendlyName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_friendly_name.call(this, pwzLocation, ppwzFriendlyName)
    end

  end

  @[Extern]
  record IHlinkFrameVtbl,
    query_interface : Proc(IHlinkFrame*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IHlinkFrame*, UInt32),
    release : Proc(IHlinkFrame*, UInt32),
    set_browse_context : Proc(IHlinkFrame*, Void*, Win32cr::Foundation::HRESULT),
    get_browse_context : Proc(IHlinkFrame*, Void**, Win32cr::Foundation::HRESULT),
    navigate : Proc(IHlinkFrame*, UInt32, Void*, Void*, Void*, Win32cr::Foundation::HRESULT),
    on_navigate : Proc(IHlinkFrame*, UInt32, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    update_hlink : Proc(IHlinkFrame*, UInt32, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IHlinkFrame, lpVtbl : IHlinkFrameVtbl* do
    GUID = LibC::GUID.new(0x79eac9c5_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IHlinkFrame*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IHlinkFrame*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IHlinkFrame*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_browse_context(this : IHlinkFrame*, pihlbc : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_browse_context.call(this, pihlbc)
    end
    def get_browse_context(this : IHlinkFrame*, ppihlbc : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_browse_context.call(this, ppihlbc)
    end
    def navigate(this : IHlinkFrame*, grfHLNF : UInt32, pbc : Void*, pibsc : Void*, pihlNavigate : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate.call(this, grfHLNF, pbc, pibsc, pihlNavigate)
    end
    def on_navigate(this : IHlinkFrame*, grfHLNF : UInt32, pimkTarget : Void*, pwzLocation : Win32cr::Foundation::PWSTR, pwzFriendlyName : Win32cr::Foundation::PWSTR, dwreserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_navigate.call(this, grfHLNF, pimkTarget, pwzLocation, pwzFriendlyName, dwreserved)
    end
    def update_hlink(this : IHlinkFrame*, uHLID : UInt32, pimkTarget : Void*, pwzLocation : Win32cr::Foundation::PWSTR, pwzFriendlyName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_hlink.call(this, uHLID, pimkTarget, pwzLocation, pwzFriendlyName)
    end

  end

  @[Extern]
  record IEnumHLITEMVtbl,
    query_interface : Proc(IEnumHLITEM*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumHLITEM*, UInt32),
    release : Proc(IEnumHLITEM*, UInt32),
    next__ : Proc(IEnumHLITEM*, UInt32, Win32cr::UI::Shell::HLITEM*, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumHLITEM*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumHLITEM*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumHLITEM*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumHLITEM, lpVtbl : IEnumHLITEMVtbl* do
    GUID = LibC::GUID.new(0x79eac9c6_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IEnumHLITEM*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumHLITEM*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumHLITEM*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumHLITEM*, celt : UInt32, rgelt : Win32cr::UI::Shell::HLITEM*, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, rgelt, pceltFetched)
    end
    def skip(this : IEnumHLITEM*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumHLITEM*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumHLITEM*, ppienumhlitem : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppienumhlitem)
    end

  end

  @[Extern]
  record IHlinkBrowseContextVtbl,
    query_interface : Proc(IHlinkBrowseContext*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IHlinkBrowseContext*, UInt32),
    release : Proc(IHlinkBrowseContext*, UInt32),
    register : Proc(IHlinkBrowseContext*, UInt32, Void*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    get_object : Proc(IHlinkBrowseContext*, Void*, Win32cr::Foundation::BOOL, Void**, Win32cr::Foundation::HRESULT),
    revoke : Proc(IHlinkBrowseContext*, UInt32, Win32cr::Foundation::HRESULT),
    set_browse_window_info : Proc(IHlinkBrowseContext*, Win32cr::UI::Shell::HLBWINFO*, Win32cr::Foundation::HRESULT),
    get_browse_window_info : Proc(IHlinkBrowseContext*, Win32cr::UI::Shell::HLBWINFO*, Win32cr::Foundation::HRESULT),
    set_initial_hlink : Proc(IHlinkBrowseContext*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    on_navigate_hlink : Proc(IHlinkBrowseContext*, UInt32, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32*, Win32cr::Foundation::HRESULT),
    update_hlink : Proc(IHlinkBrowseContext*, UInt32, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    enum_navigation_stack : Proc(IHlinkBrowseContext*, UInt32, UInt32, Void**, Win32cr::Foundation::HRESULT),
    query_hlink : Proc(IHlinkBrowseContext*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_hlink : Proc(IHlinkBrowseContext*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    set_current_hlink : Proc(IHlinkBrowseContext*, UInt32, Win32cr::Foundation::HRESULT),
    clone : Proc(IHlinkBrowseContext*, Void*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    close : Proc(IHlinkBrowseContext*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IHlinkBrowseContext, lpVtbl : IHlinkBrowseContextVtbl* do
    GUID = LibC::GUID.new(0x79eac9c7_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IHlinkBrowseContext*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IHlinkBrowseContext*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IHlinkBrowseContext*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def register(this : IHlinkBrowseContext*, reserved : UInt32, piunk : Void*, pimk : Void*, pdwRegister : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register.call(this, reserved, piunk, pimk, pdwRegister)
    end
    def get_object(this : IHlinkBrowseContext*, pimk : Void*, fBindIfRootRegistered : Win32cr::Foundation::BOOL, ppiunk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object.call(this, pimk, fBindIfRootRegistered, ppiunk)
    end
    def revoke(this : IHlinkBrowseContext*, dwRegister : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.revoke.call(this, dwRegister)
    end
    def set_browse_window_info(this : IHlinkBrowseContext*, phlbwi : Win32cr::UI::Shell::HLBWINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_browse_window_info.call(this, phlbwi)
    end
    def get_browse_window_info(this : IHlinkBrowseContext*, phlbwi : Win32cr::UI::Shell::HLBWINFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_browse_window_info.call(this, phlbwi)
    end
    def set_initial_hlink(this : IHlinkBrowseContext*, pimkTarget : Void*, pwzLocation : Win32cr::Foundation::PWSTR, pwzFriendlyName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_initial_hlink.call(this, pimkTarget, pwzLocation, pwzFriendlyName)
    end
    def on_navigate_hlink(this : IHlinkBrowseContext*, grfHLNF : UInt32, pimkTarget : Void*, pwzLocation : Win32cr::Foundation::PWSTR, pwzFriendlyName : Win32cr::Foundation::PWSTR, puHLID : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_navigate_hlink.call(this, grfHLNF, pimkTarget, pwzLocation, pwzFriendlyName, puHLID)
    end
    def update_hlink(this : IHlinkBrowseContext*, uHLID : UInt32, pimkTarget : Void*, pwzLocation : Win32cr::Foundation::PWSTR, pwzFriendlyName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_hlink.call(this, uHLID, pimkTarget, pwzLocation, pwzFriendlyName)
    end
    def enum_navigation_stack(this : IHlinkBrowseContext*, dwReserved : UInt32, grfHLFNAMEF : UInt32, ppienumhlitem : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_navigation_stack.call(this, dwReserved, grfHLFNAMEF, ppienumhlitem)
    end
    def query_hlink(this : IHlinkBrowseContext*, grfHLQF : UInt32, uHLID : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_hlink.call(this, grfHLQF, uHLID)
    end
    def get_hlink(this : IHlinkBrowseContext*, uHLID : UInt32, ppihl : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_hlink.call(this, uHLID, ppihl)
    end
    def set_current_hlink(this : IHlinkBrowseContext*, uHLID : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_current_hlink.call(this, uHLID)
    end
    def clone(this : IHlinkBrowseContext*, piunkOuter : Void*, riid : LibC::GUID*, ppiunkObj : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, piunkOuter, riid, ppiunkObj)
    end
    def close(this : IHlinkBrowseContext*, reserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.close.call(this, reserved)
    end

  end

  @[Extern]
  record IExtensionServicesVtbl,
    query_interface : Proc(IExtensionServices*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExtensionServices*, UInt32),
    release : Proc(IExtensionServices*, UInt32),
    set_additional_headers : Proc(IExtensionServices*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    set_authenticate_data : Proc(IExtensionServices*, Win32cr::Foundation::HWND, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExtensionServices, lpVtbl : IExtensionServicesVtbl* do
    GUID = LibC::GUID.new(0x79eac9cb_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
    def query_interface(this : IExtensionServices*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExtensionServices*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExtensionServices*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_additional_headers(this : IExtensionServices*, pwzAdditionalHeaders : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_additional_headers.call(this, pwzAdditionalHeaders)
    end
    def set_authenticate_data(this : IExtensionServices*, phwnd : Win32cr::Foundation::HWND, pwzUsername : Win32cr::Foundation::PWSTR, pwzPassword : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_authenticate_data.call(this, phwnd, pwzUsername, pwzPassword)
    end

  end

  @[Extern]
  record ITravelEntryVtbl,
    query_interface : Proc(ITravelEntry*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITravelEntry*, UInt32),
    release : Proc(ITravelEntry*, UInt32),
    invoke : Proc(ITravelEntry*, Void*, Win32cr::Foundation::HRESULT),
    update : Proc(ITravelEntry*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_pidl : Proc(ITravelEntry*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITravelEntry, lpVtbl : ITravelEntryVtbl* do
    GUID = LibC::GUID.new(0xf46edb3b_u32, 0xbc2f_u16, 0x11d0_u16, StaticArray[0x94_u8, 0x12_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xa3_u8, 0xeb_u8, 0xd3_u8])
    def query_interface(this : ITravelEntry*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITravelEntry*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITravelEntry*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def invoke(this : ITravelEntry*, punk : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke.call(this, punk)
    end
    def update(this : ITravelEntry*, punk : Void*, fIsLocalAnchor : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update.call(this, punk, fIsLocalAnchor)
    end
    def get_pidl(this : ITravelEntry*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_pidl.call(this, ppidl)
    end

  end

  @[Extern]
  record ITravelLogVtbl,
    query_interface : Proc(ITravelLog*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITravelLog*, UInt32),
    release : Proc(ITravelLog*, UInt32),
    add_entry : Proc(ITravelLog*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    update_entry : Proc(ITravelLog*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    update_external : Proc(ITravelLog*, Void*, Void*, Win32cr::Foundation::HRESULT),
    travel : Proc(ITravelLog*, Void*, Int32, Win32cr::Foundation::HRESULT),
    get_travel_entry : Proc(ITravelLog*, Void*, Int32, Void**, Win32cr::Foundation::HRESULT),
    find_travel_entry : Proc(ITravelLog*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Void**, Win32cr::Foundation::HRESULT),
    get_tool_tip_text : Proc(ITravelLog*, Void*, Int32, Int32, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    insert_menu_entries : Proc(ITravelLog*, Void*, Win32cr::UI::WindowsAndMessaging::HMENU, Int32, Int32, Int32, UInt32, Win32cr::Foundation::HRESULT),
    clone : Proc(ITravelLog*, Void**, Win32cr::Foundation::HRESULT),
    count_entries : Proc(ITravelLog*, Void*, UInt32),
    revert : Proc(ITravelLog*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITravelLog, lpVtbl : ITravelLogVtbl* do
    GUID = LibC::GUID.new(0x66a9cb08_u32, 0x4802_u16, 0x11d2_u16, StaticArray[0xa5_u8, 0x61_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x2d_u8, 0xbf_u8, 0xe8_u8])
    def query_interface(this : ITravelLog*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITravelLog*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITravelLog*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_entry(this : ITravelLog*, punk : Void*, fIsLocalAnchor : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_entry.call(this, punk, fIsLocalAnchor)
    end
    def update_entry(this : ITravelLog*, punk : Void*, fIsLocalAnchor : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_entry.call(this, punk, fIsLocalAnchor)
    end
    def update_external(this : ITravelLog*, punk : Void*, punkHLBrowseContext : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_external.call(this, punk, punkHLBrowseContext)
    end
    def travel(this : ITravelLog*, punk : Void*, iOffset : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.travel.call(this, punk, iOffset)
    end
    def get_travel_entry(this : ITravelLog*, punk : Void*, iOffset : Int32, ppte : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_travel_entry.call(this, punk, iOffset, ppte)
    end
    def find_travel_entry(this : ITravelLog*, punk : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppte : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_travel_entry.call(this, punk, pidl, ppte)
    end
    def get_tool_tip_text(this : ITravelLog*, punk : Void*, iOffset : Int32, idsTemplate : Int32, pwzText : UInt16*, cchText : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_tool_tip_text.call(this, punk, iOffset, idsTemplate, pwzText, cchText)
    end
    def insert_menu_entries(this : ITravelLog*, punk : Void*, hmenu : Win32cr::UI::WindowsAndMessaging::HMENU, nPos : Int32, idFirst : Int32, idLast : Int32, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.insert_menu_entries.call(this, punk, hmenu, nPos, idFirst, idLast, dwFlags)
    end
    def clone(this : ITravelLog*, pptl : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, pptl)
    end
    def count_entries(this : ITravelLog*, punk : Void*) : UInt32
      @lpVtbl.try &.value.count_entries.call(this, punk)
    end
    def revert(this : ITravelLog*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.revert.call(this)
    end

  end

  @[Extern]
  record CIE4ConnectionPointVtbl,
    query_interface : Proc(CIE4ConnectionPoint*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(CIE4ConnectionPoint*, UInt32),
    release : Proc(CIE4ConnectionPoint*, UInt32),
    get_connection_interface : Proc(CIE4ConnectionPoint*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_connection_point_container : Proc(CIE4ConnectionPoint*, Void**, Win32cr::Foundation::HRESULT),
    advise : Proc(CIE4ConnectionPoint*, Void*, UInt32*, Win32cr::Foundation::HRESULT),
    unadvise : Proc(CIE4ConnectionPoint*, UInt32, Win32cr::Foundation::HRESULT),
    enum_connections : Proc(CIE4ConnectionPoint*, Void**, Win32cr::Foundation::HRESULT),
    do_invoke_ie4 : Proc(CIE4ConnectionPoint*, Win32cr::Foundation::BOOL*, Void**, Int32, Win32cr::System::Com::DISPPARAMS*, Win32cr::Foundation::HRESULT),
    do_invoke_pidlie4 : Proc(CIE4ConnectionPoint*, Int32, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT)


  @[Extern]
  record CIE4ConnectionPoint, lpVtbl : CIE4ConnectionPointVtbl* do
    GUID = LibC::GUID.new(0x0_u32, 0x0_u16, 0x0_u16, StaticArray[0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : CIE4ConnectionPoint*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : CIE4ConnectionPoint*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : CIE4ConnectionPoint*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_connection_interface(this : CIE4ConnectionPoint*, pIID : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_connection_interface.call(this, pIID)
    end
    def get_connection_point_container(this : CIE4ConnectionPoint*, ppCPC : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_connection_point_container.call(this, ppCPC)
    end
    def advise(this : CIE4ConnectionPoint*, pUnkSink : Void*, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.advise.call(this, pUnkSink, pdwCookie)
    end
    def unadvise(this : CIE4ConnectionPoint*, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unadvise.call(this, dwCookie)
    end
    def enum_connections(this : CIE4ConnectionPoint*, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_connections.call(this, ppEnum)
    end
    def do_invoke_ie4(this : CIE4ConnectionPoint*, pf : Win32cr::Foundation::BOOL*, ppv : Void**, dispid : Int32, pdispparams : Win32cr::System::Com::DISPPARAMS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.do_invoke_ie4.call(this, pf, ppv, dispid, pdispparams)
    end
    def do_invoke_pidlie4(this : CIE4ConnectionPoint*, dispid : Int32, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, fCanCancel : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.do_invoke_pidlie4.call(this, dispid, pidl, fCanCancel)
    end

  end

  @[Extern]
  record IExpDispSupportXPVtbl,
    query_interface : Proc(IExpDispSupportXP*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExpDispSupportXP*, UInt32),
    release : Proc(IExpDispSupportXP*, UInt32),
    find_cie4_connection_point : Proc(IExpDispSupportXP*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    on_translate_accelerator : Proc(IExpDispSupportXP*, Win32cr::UI::WindowsAndMessaging::MSG*, UInt32, Win32cr::Foundation::HRESULT),
    on_invoke : Proc(IExpDispSupportXP*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExpDispSupportXP, lpVtbl : IExpDispSupportXPVtbl* do
    GUID = LibC::GUID.new(0x2f0dd58c_u32, 0xf789_u16, 0x4f14_u16, StaticArray[0x99_u8, 0xfb_u8, 0x92_u8, 0x93_u8, 0xb3_u8, 0xc9_u8, 0xc2_u8, 0x12_u8])
    def query_interface(this : IExpDispSupportXP*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExpDispSupportXP*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExpDispSupportXP*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def find_cie4_connection_point(this : IExpDispSupportXP*, riid : LibC::GUID*, ppccp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_cie4_connection_point.call(this, riid, ppccp)
    end
    def on_translate_accelerator(this : IExpDispSupportXP*, pMsg : Win32cr::UI::WindowsAndMessaging::MSG*, grfModifiers : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_translate_accelerator.call(this, pMsg, grfModifiers)
    end
    def on_invoke(this : IExpDispSupportXP*, dispidMember : Int32, iid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pdispparams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pexcepinfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_invoke.call(this, dispidMember, iid, lcid, wFlags, pdispparams, pVarResult, pexcepinfo, puArgErr)
    end

  end

  @[Extern]
  record IExpDispSupportVtbl,
    query_interface : Proc(IExpDispSupport*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IExpDispSupport*, UInt32),
    release : Proc(IExpDispSupport*, UInt32),
    find_connection_point : Proc(IExpDispSupport*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    on_translate_accelerator : Proc(IExpDispSupport*, Win32cr::UI::WindowsAndMessaging::MSG*, UInt32, Win32cr::Foundation::HRESULT),
    on_invoke : Proc(IExpDispSupport*, Int32, LibC::GUID*, UInt32, UInt16, Win32cr::System::Com::DISPPARAMS*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::EXCEPINFO*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IExpDispSupport, lpVtbl : IExpDispSupportVtbl* do
    GUID = LibC::GUID.new(0xd7d1d00_u32, 0x6fc0_u16, 0x11d0_u16, StaticArray[0xa9_u8, 0x74_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0x5_u8, 0xa2_u8])
    def query_interface(this : IExpDispSupport*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IExpDispSupport*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IExpDispSupport*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def find_connection_point(this : IExpDispSupport*, riid : LibC::GUID*, ppccp : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_connection_point.call(this, riid, ppccp)
    end
    def on_translate_accelerator(this : IExpDispSupport*, pMsg : Win32cr::UI::WindowsAndMessaging::MSG*, grfModifiers : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_translate_accelerator.call(this, pMsg, grfModifiers)
    end
    def on_invoke(this : IExpDispSupport*, dispidMember : Int32, iid : LibC::GUID*, lcid : UInt32, wFlags : UInt16, pdispparams : Win32cr::System::Com::DISPPARAMS*, pVarResult : Win32cr::System::Com::VARIANT*, pexcepinfo : Win32cr::System::Com::EXCEPINFO*, puArgErr : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_invoke.call(this, dispidMember, iid, lcid, wFlags, pdispparams, pVarResult, pexcepinfo, puArgErr)
    end

  end

  @[Extern]
  record IBrowserServiceVtbl,
    query_interface : Proc(IBrowserService*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IBrowserService*, UInt32),
    release : Proc(IBrowserService*, UInt32),
    get_parent_site : Proc(IBrowserService*, Void**, Win32cr::Foundation::HRESULT),
    set_title : Proc(IBrowserService*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_title : Proc(IBrowserService*, Void*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_ole_object : Proc(IBrowserService*, Void**, Win32cr::Foundation::HRESULT),
    get_travel_log : Proc(IBrowserService*, Void**, Win32cr::Foundation::HRESULT),
    show_control_window : Proc(IBrowserService*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    is_control_window_shown : Proc(IBrowserService*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    ie_get_display_name : Proc(IBrowserService*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    ie_parse_display_name : Proc(IBrowserService*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    display_parse_error : Proc(IBrowserService*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    navigate_to_pidl : Proc(IBrowserService*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::Foundation::HRESULT),
    set_navigate_state : Proc(IBrowserService*, Win32cr::UI::Shell::BNSTATE, Win32cr::Foundation::HRESULT),
    get_navigate_state : Proc(IBrowserService*, Win32cr::UI::Shell::BNSTATE*, Win32cr::Foundation::HRESULT),
    notify_redirect : Proc(IBrowserService*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    update_window_list : Proc(IBrowserService*, Win32cr::Foundation::HRESULT),
    update_back_forward_state : Proc(IBrowserService*, Win32cr::Foundation::HRESULT),
    set_flags : Proc(IBrowserService*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_flags : Proc(IBrowserService*, UInt32*, Win32cr::Foundation::HRESULT),
    can_navigate_now : Proc(IBrowserService*, Win32cr::Foundation::HRESULT),
    get_pidl : Proc(IBrowserService*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    set_referrer : Proc(IBrowserService*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    get_browser_index : Proc(IBrowserService*, UInt32),
    get_browser_by_index : Proc(IBrowserService*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_history_object : Proc(IBrowserService*, Void**, Void**, Void**, Win32cr::Foundation::HRESULT),
    set_history_object : Proc(IBrowserService*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    cache_ole_server : Proc(IBrowserService*, Void*, Win32cr::Foundation::HRESULT),
    get_set_code_page : Proc(IBrowserService*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    on_http_equiv : Proc(IBrowserService*, Void*, Win32cr::Foundation::BOOL, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_palette : Proc(IBrowserService*, Win32cr::Graphics::Gdi::HPALETTE*, Win32cr::Foundation::HRESULT),
    register_window : Proc(IBrowserService*, Win32cr::Foundation::BOOL, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IBrowserService, lpVtbl : IBrowserServiceVtbl* do
    GUID = LibC::GUID.new(0x2ba3b52_u32, 0x547_u16, 0x11d1_u16, StaticArray[0xb8_u8, 0x33_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc9_u8, 0xb3_u8, 0x1f_u8])
    def query_interface(this : IBrowserService*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IBrowserService*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IBrowserService*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_parent_site(this : IBrowserService*, ppipsite : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_parent_site.call(this, ppipsite)
    end
    def set_title(this : IBrowserService*, psv : Void*, pszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_title.call(this, psv, pszName)
    end
    def get_title(this : IBrowserService*, psv : Void*, pszName : UInt16*, cchName : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_title.call(this, psv, pszName, cchName)
    end
    def get_ole_object(this : IBrowserService*, ppobjv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ole_object.call(this, ppobjv)
    end
    def get_travel_log(this : IBrowserService*, pptl : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_travel_log.call(this, pptl)
    end
    def show_control_window(this : IBrowserService*, id : UInt32, fShow : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_control_window.call(this, id, fShow)
    end
    def is_control_window_shown(this : IBrowserService*, id : UInt32, pfShown : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_control_window_shown.call(this, id, pfShown)
    end
    def ie_get_display_name(this : IBrowserService*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pwszName : Win32cr::Foundation::PWSTR, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ie_get_display_name.call(this, pidl, pwszName, uFlags)
    end
    def ie_parse_display_name(this : IBrowserService*, uiCP : UInt32, pwszPath : Win32cr::Foundation::PWSTR, ppidlOut : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ie_parse_display_name.call(this, uiCP, pwszPath, ppidlOut)
    end
    def display_parse_error(this : IBrowserService*, hres : Win32cr::Foundation::HRESULT, pwszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.display_parse_error.call(this, hres, pwszPath)
    end
    def navigate_to_pidl(this : IBrowserService*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, grfHLNF : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_to_pidl.call(this, pidl, grfHLNF)
    end
    def set_navigate_state(this : IBrowserService*, bnstate : Win32cr::UI::Shell::BNSTATE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_navigate_state.call(this, bnstate)
    end
    def get_navigate_state(this : IBrowserService*, pbnstate : Win32cr::UI::Shell::BNSTATE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_navigate_state.call(this, pbnstate)
    end
    def notify_redirect(this : IBrowserService*, psv : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pfDidBrowse : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.notify_redirect.call(this, psv, pidl, pfDidBrowse)
    end
    def update_window_list(this : IBrowserService*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_window_list.call(this)
    end
    def update_back_forward_state(this : IBrowserService*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_back_forward_state.call(this)
    end
    def set_flags(this : IBrowserService*, dwFlags : UInt32, dwFlagMask : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flags.call(this, dwFlags, dwFlagMask)
    end
    def get_flags(this : IBrowserService*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_flags.call(this, pdwFlags)
    end
    def can_navigate_now(this : IBrowserService*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.can_navigate_now.call(this)
    end
    def get_pidl(this : IBrowserService*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_pidl.call(this, ppidl)
    end
    def set_referrer(this : IBrowserService*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_referrer.call(this, pidl)
    end
    def get_browser_index(this : IBrowserService*) : UInt32
      @lpVtbl.try &.value.get_browser_index.call(this)
    end
    def get_browser_by_index(this : IBrowserService*, dwID : UInt32, ppunk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_browser_by_index.call(this, dwID, ppunk)
    end
    def get_history_object(this : IBrowserService*, ppole : Void**, pstm : Void**, ppbc : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_history_object.call(this, ppole, pstm, ppbc)
    end
    def set_history_object(this : IBrowserService*, pole : Void*, fIsLocalAnchor : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_history_object.call(this, pole, fIsLocalAnchor)
    end
    def cache_ole_server(this : IBrowserService*, pole : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cache_ole_server.call(this, pole)
    end
    def get_set_code_page(this : IBrowserService*, pvarIn : Win32cr::System::Com::VARIANT*, pvarOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_set_code_page.call(this, pvarIn, pvarOut)
    end
    def on_http_equiv(this : IBrowserService*, psv : Void*, fDone : Win32cr::Foundation::BOOL, pvarargIn : Win32cr::System::Com::VARIANT*, pvarargOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_http_equiv.call(this, psv, fDone, pvarargIn, pvarargOut)
    end
    def get_palette(this : IBrowserService*, hpal : Win32cr::Graphics::Gdi::HPALETTE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_palette.call(this, hpal)
    end
    def register_window(this : IBrowserService*, fForceRegister : Win32cr::Foundation::BOOL, swc : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_window.call(this, fForceRegister, swc)
    end

  end

  @[Extern]
  record IShellServiceVtbl,
    query_interface : Proc(IShellService*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IShellService*, UInt32),
    release : Proc(IShellService*, UInt32),
    set_owner : Proc(IShellService*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IShellService, lpVtbl : IShellServiceVtbl* do
    GUID = LibC::GUID.new(0x5836fb00_u32, 0x8187_u16, 0x11cf_u16, StaticArray[0xa1_u8, 0x2b_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4a_u8, 0xe8_u8, 0x37_u8])
    def query_interface(this : IShellService*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IShellService*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IShellService*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_owner(this : IShellService*, punkOwner : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_owner.call(this, punkOwner)
    end

  end

  @[Extern]
  record IBrowserService2Vtbl,
    query_interface : Proc(IBrowserService2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IBrowserService2*, UInt32),
    release : Proc(IBrowserService2*, UInt32),
    get_parent_site : Proc(IBrowserService2*, Void**, Win32cr::Foundation::HRESULT),
    set_title : Proc(IBrowserService2*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_title : Proc(IBrowserService2*, Void*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_ole_object : Proc(IBrowserService2*, Void**, Win32cr::Foundation::HRESULT),
    get_travel_log : Proc(IBrowserService2*, Void**, Win32cr::Foundation::HRESULT),
    show_control_window : Proc(IBrowserService2*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    is_control_window_shown : Proc(IBrowserService2*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    ie_get_display_name : Proc(IBrowserService2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    ie_parse_display_name : Proc(IBrowserService2*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    display_parse_error : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    navigate_to_pidl : Proc(IBrowserService2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::Foundation::HRESULT),
    set_navigate_state : Proc(IBrowserService2*, Win32cr::UI::Shell::BNSTATE, Win32cr::Foundation::HRESULT),
    get_navigate_state : Proc(IBrowserService2*, Win32cr::UI::Shell::BNSTATE*, Win32cr::Foundation::HRESULT),
    notify_redirect : Proc(IBrowserService2*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    update_window_list : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    update_back_forward_state : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    set_flags : Proc(IBrowserService2*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_flags : Proc(IBrowserService2*, UInt32*, Win32cr::Foundation::HRESULT),
    can_navigate_now : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    get_pidl : Proc(IBrowserService2*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    set_referrer : Proc(IBrowserService2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    get_browser_index : Proc(IBrowserService2*, UInt32),
    get_browser_by_index : Proc(IBrowserService2*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_history_object : Proc(IBrowserService2*, Void**, Void**, Void**, Win32cr::Foundation::HRESULT),
    set_history_object : Proc(IBrowserService2*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    cache_ole_server : Proc(IBrowserService2*, Void*, Win32cr::Foundation::HRESULT),
    get_set_code_page : Proc(IBrowserService2*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    on_http_equiv : Proc(IBrowserService2*, Void*, Win32cr::Foundation::BOOL, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_palette : Proc(IBrowserService2*, Win32cr::Graphics::Gdi::HPALETTE*, Win32cr::Foundation::HRESULT),
    register_window : Proc(IBrowserService2*, Win32cr::Foundation::BOOL, Int32, Win32cr::Foundation::HRESULT),
    wnd_proc_bs : Proc(IBrowserService2*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LRESULT),
    set_as_def_folder_settings : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    get_view_rect : Proc(IBrowserService2*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    on_size : Proc(IBrowserService2*, Win32cr::Foundation::WPARAM, Win32cr::Foundation::HRESULT),
    on_create : Proc(IBrowserService2*, Win32cr::UI::WindowsAndMessaging::CREATESTRUCTW*, Win32cr::Foundation::HRESULT),
    on_command : Proc(IBrowserService2*, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LRESULT),
    on_destroy : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    on_notify : Proc(IBrowserService2*, Win32cr::UI::Controls::NMHDR*, Win32cr::Foundation::LRESULT),
    on_set_focus : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    on_frame_window_activate_bs : Proc(IBrowserService2*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    release_shell_view : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    activate_pending_view : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    create_view_window : Proc(IBrowserService2*, Void*, Void*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    create_browser_prop_sheet_ext : Proc(IBrowserService2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_view_window : Proc(IBrowserService2*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    get_base_browser_data : Proc(IBrowserService2*, Win32cr::UI::Shell::BASEBROWSERDATALH**, Win32cr::Foundation::HRESULT),
    put_base_browser_data : Proc(IBrowserService2*, Win32cr::UI::Shell::BASEBROWSERDATALH*),
    initialize_travel_log : Proc(IBrowserService2*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    set_top_browser : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    offline : Proc(IBrowserService2*, Int32, Win32cr::Foundation::HRESULT),
    allow_view_resize : Proc(IBrowserService2*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_activate_state : Proc(IBrowserService2*, UInt32, Win32cr::Foundation::HRESULT),
    update_secure_lock_icon : Proc(IBrowserService2*, Int32, Win32cr::Foundation::HRESULT),
    initialize_download_manager : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    initialize_transition_site : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    _initialize : Proc(IBrowserService2*, Win32cr::Foundation::HWND, Void*, Win32cr::Foundation::HRESULT),
    _cancel_pending_navigation_async : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    _cancel_pending_view : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    _may_save_changes : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    _pause_or_resume_view : Proc(IBrowserService2*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    _disable_modeless : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    _navigate_to_pidl2 : Proc(IBrowserService2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    _try_shell2_rename : Proc(IBrowserService2*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    _switch_activation_now : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    _exec_children : Proc(IBrowserService2*, Void*, Win32cr::Foundation::BOOL, LibC::GUID*, UInt32, UInt32, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    _send_children : Proc(IBrowserService2*, Win32cr::Foundation::HWND, Win32cr::Foundation::BOOL, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT),
    get_folder_set_data : Proc(IBrowserService2*, Win32cr::UI::Shell::FOLDERSETDATA*, Win32cr::Foundation::HRESULT),
    _on_focus_change : Proc(IBrowserService2*, UInt32, Win32cr::Foundation::HRESULT),
    v_ShowHideChildWindows : Proc(IBrowserService2*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    _get_itb_last_focus : Proc(IBrowserService2*, UInt32),
    _put_itb_last_focus : Proc(IBrowserService2*, UInt32, Win32cr::Foundation::HRESULT),
    _ui_activate_view : Proc(IBrowserService2*, UInt32, Win32cr::Foundation::HRESULT),
    _get_view_border_rect : Proc(IBrowserService2*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    _update_view_rect_size : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    _resize_next_border : Proc(IBrowserService2*, UInt32, Win32cr::Foundation::HRESULT),
    _resize_view : Proc(IBrowserService2*, Win32cr::Foundation::HRESULT),
    _get_effective_client_area : Proc(IBrowserService2*, Win32cr::Foundation::RECT*, Win32cr::Graphics::Gdi::HMONITOR, Win32cr::Foundation::HRESULT),
    v_GetViewStream : Proc(IBrowserService2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::Foundation::PWSTR, Void*),
    forward_view_msg : Proc(IBrowserService2*, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LRESULT),
    set_accelerator_menu : Proc(IBrowserService2*, Win32cr::UI::WindowsAndMessaging::HACCEL, Win32cr::Foundation::HRESULT),
    _get_toolbar_count : Proc(IBrowserService2*, Int32),
    _get_toolbar_item : Proc(IBrowserService2*, Int32, Win32cr::UI::Shell::TOOLBARITEM*),
    _save_toolbars : Proc(IBrowserService2*, Void*, Win32cr::Foundation::HRESULT),
    _load_toolbars : Proc(IBrowserService2*, Void*, Win32cr::Foundation::HRESULT),
    _close_and_release_toolbars : Proc(IBrowserService2*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    v_MayGetNextToolbarFocus : Proc(IBrowserService2*, Win32cr::UI::WindowsAndMessaging::MSG*, UInt32, Int32, Win32cr::UI::Shell::TOOLBARITEM**, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    _resize_next_border_helper : Proc(IBrowserService2*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    _find_t_bar : Proc(IBrowserService2*, Void*, UInt32),
    _set_focus : Proc(IBrowserService2*, Win32cr::UI::Shell::TOOLBARITEM*, Win32cr::Foundation::HWND, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT),
    v_MayTranslateAccelerator : Proc(IBrowserService2*, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT),
    _get_border_dw_helper : Proc(IBrowserService2*, Void*, Win32cr::Foundation::RECT*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    v_CheckZoneCrossing : Proc(IBrowserService2*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IBrowserService2, lpVtbl : IBrowserService2Vtbl* do
    GUID = LibC::GUID.new(0x68bd21cc_u32, 0x438b_u16, 0x11d2_u16, StaticArray[0xa5_u8, 0x60_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x2d_u8, 0xbf_u8, 0xe8_u8])
    def query_interface(this : IBrowserService2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IBrowserService2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IBrowserService2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_parent_site(this : IBrowserService2*, ppipsite : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_parent_site.call(this, ppipsite)
    end
    def set_title(this : IBrowserService2*, psv : Void*, pszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_title.call(this, psv, pszName)
    end
    def get_title(this : IBrowserService2*, psv : Void*, pszName : UInt16*, cchName : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_title.call(this, psv, pszName, cchName)
    end
    def get_ole_object(this : IBrowserService2*, ppobjv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ole_object.call(this, ppobjv)
    end
    def get_travel_log(this : IBrowserService2*, pptl : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_travel_log.call(this, pptl)
    end
    def show_control_window(this : IBrowserService2*, id : UInt32, fShow : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_control_window.call(this, id, fShow)
    end
    def is_control_window_shown(this : IBrowserService2*, id : UInt32, pfShown : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_control_window_shown.call(this, id, pfShown)
    end
    def ie_get_display_name(this : IBrowserService2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pwszName : Win32cr::Foundation::PWSTR, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ie_get_display_name.call(this, pidl, pwszName, uFlags)
    end
    def ie_parse_display_name(this : IBrowserService2*, uiCP : UInt32, pwszPath : Win32cr::Foundation::PWSTR, ppidlOut : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ie_parse_display_name.call(this, uiCP, pwszPath, ppidlOut)
    end
    def display_parse_error(this : IBrowserService2*, hres : Win32cr::Foundation::HRESULT, pwszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.display_parse_error.call(this, hres, pwszPath)
    end
    def navigate_to_pidl(this : IBrowserService2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, grfHLNF : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_to_pidl.call(this, pidl, grfHLNF)
    end
    def set_navigate_state(this : IBrowserService2*, bnstate : Win32cr::UI::Shell::BNSTATE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_navigate_state.call(this, bnstate)
    end
    def get_navigate_state(this : IBrowserService2*, pbnstate : Win32cr::UI::Shell::BNSTATE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_navigate_state.call(this, pbnstate)
    end
    def notify_redirect(this : IBrowserService2*, psv : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pfDidBrowse : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.notify_redirect.call(this, psv, pidl, pfDidBrowse)
    end
    def update_window_list(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_window_list.call(this)
    end
    def update_back_forward_state(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_back_forward_state.call(this)
    end
    def set_flags(this : IBrowserService2*, dwFlags : UInt32, dwFlagMask : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flags.call(this, dwFlags, dwFlagMask)
    end
    def get_flags(this : IBrowserService2*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_flags.call(this, pdwFlags)
    end
    def can_navigate_now(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.can_navigate_now.call(this)
    end
    def get_pidl(this : IBrowserService2*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_pidl.call(this, ppidl)
    end
    def set_referrer(this : IBrowserService2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_referrer.call(this, pidl)
    end
    def get_browser_index(this : IBrowserService2*) : UInt32
      @lpVtbl.try &.value.get_browser_index.call(this)
    end
    def get_browser_by_index(this : IBrowserService2*, dwID : UInt32, ppunk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_browser_by_index.call(this, dwID, ppunk)
    end
    def get_history_object(this : IBrowserService2*, ppole : Void**, pstm : Void**, ppbc : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_history_object.call(this, ppole, pstm, ppbc)
    end
    def set_history_object(this : IBrowserService2*, pole : Void*, fIsLocalAnchor : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_history_object.call(this, pole, fIsLocalAnchor)
    end
    def cache_ole_server(this : IBrowserService2*, pole : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cache_ole_server.call(this, pole)
    end
    def get_set_code_page(this : IBrowserService2*, pvarIn : Win32cr::System::Com::VARIANT*, pvarOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_set_code_page.call(this, pvarIn, pvarOut)
    end
    def on_http_equiv(this : IBrowserService2*, psv : Void*, fDone : Win32cr::Foundation::BOOL, pvarargIn : Win32cr::System::Com::VARIANT*, pvarargOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_http_equiv.call(this, psv, fDone, pvarargIn, pvarargOut)
    end
    def get_palette(this : IBrowserService2*, hpal : Win32cr::Graphics::Gdi::HPALETTE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_palette.call(this, hpal)
    end
    def register_window(this : IBrowserService2*, fForceRegister : Win32cr::Foundation::BOOL, swc : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_window.call(this, fForceRegister, swc)
    end
    def wnd_proc_bs(this : IBrowserService2*, hwnd : Win32cr::Foundation::HWND, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
      @lpVtbl.try &.value.wnd_proc_bs.call(this, hwnd, uMsg, wParam, lParam)
    end
    def set_as_def_folder_settings(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_as_def_folder_settings.call(this)
    end
    def get_view_rect(this : IBrowserService2*, prc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_view_rect.call(this, prc)
    end
    def on_size(this : IBrowserService2*, wParam : Win32cr::Foundation::WPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_size.call(this, wParam)
    end
    def on_create(this : IBrowserService2*, pcs : Win32cr::UI::WindowsAndMessaging::CREATESTRUCTW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_create.call(this, pcs)
    end
    def on_command(this : IBrowserService2*, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
      @lpVtbl.try &.value.on_command.call(this, wParam, lParam)
    end
    def on_destroy(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_destroy.call(this)
    end
    def on_notify(this : IBrowserService2*, pnm : Win32cr::UI::Controls::NMHDR*) : Win32cr::Foundation::LRESULT
      @lpVtbl.try &.value.on_notify.call(this, pnm)
    end
    def on_set_focus(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_set_focus.call(this)
    end
    def on_frame_window_activate_bs(this : IBrowserService2*, fActive : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_frame_window_activate_bs.call(this, fActive)
    end
    def release_shell_view(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.release_shell_view.call(this)
    end
    def activate_pending_view(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.activate_pending_view.call(this)
    end
    def create_view_window(this : IBrowserService2*, psvNew : Void*, psvOld : Void*, prcView : Win32cr::Foundation::RECT*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_view_window.call(this, psvNew, psvOld, prcView, phwnd)
    end
    def create_browser_prop_sheet_ext(this : IBrowserService2*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_browser_prop_sheet_ext.call(this, riid, ppv)
    end
    def get_view_window(this : IBrowserService2*, phwndView : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_view_window.call(this, phwndView)
    end
    def get_base_browser_data(this : IBrowserService2*, pbbd : Win32cr::UI::Shell::BASEBROWSERDATALH**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_base_browser_data.call(this, pbbd)
    end
    def put_base_browser_data(this : IBrowserService2*) : Win32cr::UI::Shell::BASEBROWSERDATALH*
      @lpVtbl.try &.value.put_base_browser_data.call(this)
    end
    def initialize_travel_log(this : IBrowserService2*, ptl : Void*, dw : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_travel_log.call(this, ptl, dw)
    end
    def set_top_browser(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_top_browser.call(this)
    end
    def offline(this : IBrowserService2*, iCmd : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.offline.call(this, iCmd)
    end
    def allow_view_resize(this : IBrowserService2*, f : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.allow_view_resize.call(this, f)
    end
    def set_activate_state(this : IBrowserService2*, u : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_activate_state.call(this, u)
    end
    def update_secure_lock_icon(this : IBrowserService2*, eSecureLock : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_secure_lock_icon.call(this, eSecureLock)
    end
    def initialize_download_manager(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_download_manager.call(this)
    end
    def initialize_transition_site(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_transition_site.call(this)
    end
    def _initialize(this : IBrowserService2*, hwnd : Win32cr::Foundation::HWND, pauto : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._initialize.call(this, hwnd, pauto)
    end
    def _cancel_pending_navigation_async(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._cancel_pending_navigation_async.call(this)
    end
    def _cancel_pending_view(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._cancel_pending_view.call(this)
    end
    def _may_save_changes(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._may_save_changes.call(this)
    end
    def _pause_or_resume_view(this : IBrowserService2*, fPaused : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._pause_or_resume_view.call(this, fPaused)
    end
    def _disable_modeless(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._disable_modeless.call(this)
    end
    def _navigate_to_pidl2(this : IBrowserService2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, grfHLNF : UInt32, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._navigate_to_pidl2.call(this, pidl, grfHLNF, dwFlags)
    end
    def _try_shell2_rename(this : IBrowserService2*, psv : Void*, pidlNew : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._try_shell2_rename.call(this, psv, pidlNew)
    end
    def _switch_activation_now(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._switch_activation_now.call(this)
    end
    def _exec_children(this : IBrowserService2*, punkBar : Void*, fBroadcast : Win32cr::Foundation::BOOL, pguidCmdGroup : LibC::GUID*, nCmdID : UInt32, nCmdexecopt : UInt32, pvarargIn : Win32cr::System::Com::VARIANT*, pvarargOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._exec_children.call(this, punkBar, fBroadcast, pguidCmdGroup, nCmdID, nCmdexecopt, pvarargIn, pvarargOut)
    end
    def _send_children(this : IBrowserService2*, hwndBar : Win32cr::Foundation::HWND, fBroadcast : Win32cr::Foundation::BOOL, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._send_children.call(this, hwndBar, fBroadcast, uMsg, wParam, lParam)
    end
    def get_folder_set_data(this : IBrowserService2*, pfsd : Win32cr::UI::Shell::FOLDERSETDATA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder_set_data.call(this, pfsd)
    end
    def _on_focus_change(this : IBrowserService2*, itb : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._on_focus_change.call(this, itb)
    end
    def v_ShowHideChildWindows(this : IBrowserService2*, fChildOnly : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.v_ShowHideChildWindows.call(this, fChildOnly)
    end
    def _get_itb_last_focus(this : IBrowserService2*) : UInt32
      @lpVtbl.try &.value._get_itb_last_focus.call(this)
    end
    def _put_itb_last_focus(this : IBrowserService2*, itbLastFocus : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._put_itb_last_focus.call(this, itbLastFocus)
    end
    def _ui_activate_view(this : IBrowserService2*, uState : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._ui_activate_view.call(this, uState)
    end
    def _get_view_border_rect(this : IBrowserService2*, prc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._get_view_border_rect.call(this, prc)
    end
    def _update_view_rect_size(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._update_view_rect_size.call(this)
    end
    def _resize_next_border(this : IBrowserService2*, itb : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._resize_next_border.call(this, itb)
    end
    def _resize_view(this : IBrowserService2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._resize_view.call(this)
    end
    def _get_effective_client_area(this : IBrowserService2*, lprectBorder : Win32cr::Foundation::RECT*, hmon : Win32cr::Graphics::Gdi::HMONITOR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._get_effective_client_area.call(this, lprectBorder, hmon)
    end
    def v_GetViewStream(this : IBrowserService2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, grfMode : UInt32, pwszName : Win32cr::Foundation::PWSTR) : Void*
      @lpVtbl.try &.value.v_GetViewStream.call(this, pidl, grfMode, pwszName)
    end
    def forward_view_msg(this : IBrowserService2*, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
      @lpVtbl.try &.value.forward_view_msg.call(this, uMsg, wParam, lParam)
    end
    def set_accelerator_menu(this : IBrowserService2*, hacc : Win32cr::UI::WindowsAndMessaging::HACCEL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_accelerator_menu.call(this, hacc)
    end
    def _get_toolbar_count(this : IBrowserService2*) : Int32
      @lpVtbl.try &.value._get_toolbar_count.call(this)
    end
    def _get_toolbar_item(this : IBrowserService2*, itb : Int32) : Win32cr::UI::Shell::TOOLBARITEM*
      @lpVtbl.try &.value._get_toolbar_item.call(this, itb)
    end
    def _save_toolbars(this : IBrowserService2*, pstm : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._save_toolbars.call(this, pstm)
    end
    def _load_toolbars(this : IBrowserService2*, pstm : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._load_toolbars.call(this, pstm)
    end
    def _close_and_release_toolbars(this : IBrowserService2*, fClose : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._close_and_release_toolbars.call(this, fClose)
    end
    def v_MayGetNextToolbarFocus(this : IBrowserService2*, lpMsg : Win32cr::UI::WindowsAndMessaging::MSG*, itbNext : UInt32, citb : Int32, pptbi : Win32cr::UI::Shell::TOOLBARITEM**, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.v_MayGetNextToolbarFocus.call(this, lpMsg, itbNext, citb, pptbi, phwnd)
    end
    def _resize_next_border_helper(this : IBrowserService2*, itb : UInt32, bUseHmonitor : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._resize_next_border_helper.call(this, itb, bUseHmonitor)
    end
    def _find_t_bar(this : IBrowserService2*, punkSrc : Void*) : UInt32
      @lpVtbl.try &.value._find_t_bar.call(this, punkSrc)
    end
    def _set_focus(this : IBrowserService2*, ptbi : Win32cr::UI::Shell::TOOLBARITEM*, hwnd : Win32cr::Foundation::HWND, lpMsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._set_focus.call(this, ptbi, hwnd, lpMsg)
    end
    def v_MayTranslateAccelerator(this : IBrowserService2*, pmsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.v_MayTranslateAccelerator.call(this, pmsg)
    end
    def _get_border_dw_helper(this : IBrowserService2*, punkSrc : Void*, lprectBorder : Win32cr::Foundation::RECT*, bUseHmonitor : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._get_border_dw_helper.call(this, punkSrc, lprectBorder, bUseHmonitor)
    end
    def v_CheckZoneCrossing(this : IBrowserService2*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.v_CheckZoneCrossing.call(this, pidl)
    end

  end

  @[Extern]
  record IBrowserService3Vtbl,
    query_interface : Proc(IBrowserService3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IBrowserService3*, UInt32),
    release : Proc(IBrowserService3*, UInt32),
    get_parent_site : Proc(IBrowserService3*, Void**, Win32cr::Foundation::HRESULT),
    set_title : Proc(IBrowserService3*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_title : Proc(IBrowserService3*, Void*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_ole_object : Proc(IBrowserService3*, Void**, Win32cr::Foundation::HRESULT),
    get_travel_log : Proc(IBrowserService3*, Void**, Win32cr::Foundation::HRESULT),
    show_control_window : Proc(IBrowserService3*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    is_control_window_shown : Proc(IBrowserService3*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    ie_get_display_name : Proc(IBrowserService3*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    ie_parse_display_name : Proc(IBrowserService3*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    display_parse_error : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    navigate_to_pidl : Proc(IBrowserService3*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::Foundation::HRESULT),
    set_navigate_state : Proc(IBrowserService3*, Win32cr::UI::Shell::BNSTATE, Win32cr::Foundation::HRESULT),
    get_navigate_state : Proc(IBrowserService3*, Win32cr::UI::Shell::BNSTATE*, Win32cr::Foundation::HRESULT),
    notify_redirect : Proc(IBrowserService3*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    update_window_list : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    update_back_forward_state : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    set_flags : Proc(IBrowserService3*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_flags : Proc(IBrowserService3*, UInt32*, Win32cr::Foundation::HRESULT),
    can_navigate_now : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    get_pidl : Proc(IBrowserService3*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    set_referrer : Proc(IBrowserService3*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    get_browser_index : Proc(IBrowserService3*, UInt32),
    get_browser_by_index : Proc(IBrowserService3*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_history_object : Proc(IBrowserService3*, Void**, Void**, Void**, Win32cr::Foundation::HRESULT),
    set_history_object : Proc(IBrowserService3*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    cache_ole_server : Proc(IBrowserService3*, Void*, Win32cr::Foundation::HRESULT),
    get_set_code_page : Proc(IBrowserService3*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    on_http_equiv : Proc(IBrowserService3*, Void*, Win32cr::Foundation::BOOL, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_palette : Proc(IBrowserService3*, Win32cr::Graphics::Gdi::HPALETTE*, Win32cr::Foundation::HRESULT),
    register_window : Proc(IBrowserService3*, Win32cr::Foundation::BOOL, Int32, Win32cr::Foundation::HRESULT),
    wnd_proc_bs : Proc(IBrowserService3*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LRESULT),
    set_as_def_folder_settings : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    get_view_rect : Proc(IBrowserService3*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    on_size : Proc(IBrowserService3*, Win32cr::Foundation::WPARAM, Win32cr::Foundation::HRESULT),
    on_create : Proc(IBrowserService3*, Win32cr::UI::WindowsAndMessaging::CREATESTRUCTW*, Win32cr::Foundation::HRESULT),
    on_command : Proc(IBrowserService3*, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LRESULT),
    on_destroy : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    on_notify : Proc(IBrowserService3*, Win32cr::UI::Controls::NMHDR*, Win32cr::Foundation::LRESULT),
    on_set_focus : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    on_frame_window_activate_bs : Proc(IBrowserService3*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    release_shell_view : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    activate_pending_view : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    create_view_window : Proc(IBrowserService3*, Void*, Void*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    create_browser_prop_sheet_ext : Proc(IBrowserService3*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_view_window : Proc(IBrowserService3*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    get_base_browser_data : Proc(IBrowserService3*, Win32cr::UI::Shell::BASEBROWSERDATALH**, Win32cr::Foundation::HRESULT),
    put_base_browser_data : Proc(IBrowserService3*, Win32cr::UI::Shell::BASEBROWSERDATALH*),
    initialize_travel_log : Proc(IBrowserService3*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    set_top_browser : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    offline : Proc(IBrowserService3*, Int32, Win32cr::Foundation::HRESULT),
    allow_view_resize : Proc(IBrowserService3*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_activate_state : Proc(IBrowserService3*, UInt32, Win32cr::Foundation::HRESULT),
    update_secure_lock_icon : Proc(IBrowserService3*, Int32, Win32cr::Foundation::HRESULT),
    initialize_download_manager : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    initialize_transition_site : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    _initialize : Proc(IBrowserService3*, Win32cr::Foundation::HWND, Void*, Win32cr::Foundation::HRESULT),
    _cancel_pending_navigation_async : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    _cancel_pending_view : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    _may_save_changes : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    _pause_or_resume_view : Proc(IBrowserService3*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    _disable_modeless : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    _navigate_to_pidl2 : Proc(IBrowserService3*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    _try_shell2_rename : Proc(IBrowserService3*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    _switch_activation_now : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    _exec_children : Proc(IBrowserService3*, Void*, Win32cr::Foundation::BOOL, LibC::GUID*, UInt32, UInt32, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    _send_children : Proc(IBrowserService3*, Win32cr::Foundation::HWND, Win32cr::Foundation::BOOL, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT),
    get_folder_set_data : Proc(IBrowserService3*, Win32cr::UI::Shell::FOLDERSETDATA*, Win32cr::Foundation::HRESULT),
    _on_focus_change : Proc(IBrowserService3*, UInt32, Win32cr::Foundation::HRESULT),
    v_ShowHideChildWindows : Proc(IBrowserService3*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    _get_itb_last_focus : Proc(IBrowserService3*, UInt32),
    _put_itb_last_focus : Proc(IBrowserService3*, UInt32, Win32cr::Foundation::HRESULT),
    _ui_activate_view : Proc(IBrowserService3*, UInt32, Win32cr::Foundation::HRESULT),
    _get_view_border_rect : Proc(IBrowserService3*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    _update_view_rect_size : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    _resize_next_border : Proc(IBrowserService3*, UInt32, Win32cr::Foundation::HRESULT),
    _resize_view : Proc(IBrowserService3*, Win32cr::Foundation::HRESULT),
    _get_effective_client_area : Proc(IBrowserService3*, Win32cr::Foundation::RECT*, Win32cr::Graphics::Gdi::HMONITOR, Win32cr::Foundation::HRESULT),
    v_GetViewStream : Proc(IBrowserService3*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::Foundation::PWSTR, Void*),
    forward_view_msg : Proc(IBrowserService3*, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LRESULT),
    set_accelerator_menu : Proc(IBrowserService3*, Win32cr::UI::WindowsAndMessaging::HACCEL, Win32cr::Foundation::HRESULT),
    _get_toolbar_count : Proc(IBrowserService3*, Int32),
    _get_toolbar_item : Proc(IBrowserService3*, Int32, Win32cr::UI::Shell::TOOLBARITEM*),
    _save_toolbars : Proc(IBrowserService3*, Void*, Win32cr::Foundation::HRESULT),
    _load_toolbars : Proc(IBrowserService3*, Void*, Win32cr::Foundation::HRESULT),
    _close_and_release_toolbars : Proc(IBrowserService3*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    v_MayGetNextToolbarFocus : Proc(IBrowserService3*, Win32cr::UI::WindowsAndMessaging::MSG*, UInt32, Int32, Win32cr::UI::Shell::TOOLBARITEM**, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    _resize_next_border_helper : Proc(IBrowserService3*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    _find_t_bar : Proc(IBrowserService3*, Void*, UInt32),
    _set_focus : Proc(IBrowserService3*, Win32cr::UI::Shell::TOOLBARITEM*, Win32cr::Foundation::HWND, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT),
    v_MayTranslateAccelerator : Proc(IBrowserService3*, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT),
    _get_border_dw_helper : Proc(IBrowserService3*, Void*, Win32cr::Foundation::RECT*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    v_CheckZoneCrossing : Proc(IBrowserService3*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    _position_view_window : Proc(IBrowserService3*, Win32cr::Foundation::HWND, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    ie_parse_display_name_ex : Proc(IBrowserService3*, UInt32, Win32cr::Foundation::PWSTR, UInt32, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IBrowserService3, lpVtbl : IBrowserService3Vtbl* do
    GUID = LibC::GUID.new(0x27d7ce21_u32, 0x762d_u16, 0x48f3_u16, StaticArray[0x86_u8, 0xf3_u8, 0x40_u8, 0xe2_u8, 0xfd_u8, 0x37_u8, 0x49_u8, 0xc4_u8])
    def query_interface(this : IBrowserService3*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IBrowserService3*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IBrowserService3*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_parent_site(this : IBrowserService3*, ppipsite : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_parent_site.call(this, ppipsite)
    end
    def set_title(this : IBrowserService3*, psv : Void*, pszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_title.call(this, psv, pszName)
    end
    def get_title(this : IBrowserService3*, psv : Void*, pszName : UInt16*, cchName : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_title.call(this, psv, pszName, cchName)
    end
    def get_ole_object(this : IBrowserService3*, ppobjv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ole_object.call(this, ppobjv)
    end
    def get_travel_log(this : IBrowserService3*, pptl : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_travel_log.call(this, pptl)
    end
    def show_control_window(this : IBrowserService3*, id : UInt32, fShow : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_control_window.call(this, id, fShow)
    end
    def is_control_window_shown(this : IBrowserService3*, id : UInt32, pfShown : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_control_window_shown.call(this, id, pfShown)
    end
    def ie_get_display_name(this : IBrowserService3*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pwszName : Win32cr::Foundation::PWSTR, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ie_get_display_name.call(this, pidl, pwszName, uFlags)
    end
    def ie_parse_display_name(this : IBrowserService3*, uiCP : UInt32, pwszPath : Win32cr::Foundation::PWSTR, ppidlOut : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ie_parse_display_name.call(this, uiCP, pwszPath, ppidlOut)
    end
    def display_parse_error(this : IBrowserService3*, hres : Win32cr::Foundation::HRESULT, pwszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.display_parse_error.call(this, hres, pwszPath)
    end
    def navigate_to_pidl(this : IBrowserService3*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, grfHLNF : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_to_pidl.call(this, pidl, grfHLNF)
    end
    def set_navigate_state(this : IBrowserService3*, bnstate : Win32cr::UI::Shell::BNSTATE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_navigate_state.call(this, bnstate)
    end
    def get_navigate_state(this : IBrowserService3*, pbnstate : Win32cr::UI::Shell::BNSTATE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_navigate_state.call(this, pbnstate)
    end
    def notify_redirect(this : IBrowserService3*, psv : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pfDidBrowse : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.notify_redirect.call(this, psv, pidl, pfDidBrowse)
    end
    def update_window_list(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_window_list.call(this)
    end
    def update_back_forward_state(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_back_forward_state.call(this)
    end
    def set_flags(this : IBrowserService3*, dwFlags : UInt32, dwFlagMask : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flags.call(this, dwFlags, dwFlagMask)
    end
    def get_flags(this : IBrowserService3*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_flags.call(this, pdwFlags)
    end
    def can_navigate_now(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.can_navigate_now.call(this)
    end
    def get_pidl(this : IBrowserService3*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_pidl.call(this, ppidl)
    end
    def set_referrer(this : IBrowserService3*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_referrer.call(this, pidl)
    end
    def get_browser_index(this : IBrowserService3*) : UInt32
      @lpVtbl.try &.value.get_browser_index.call(this)
    end
    def get_browser_by_index(this : IBrowserService3*, dwID : UInt32, ppunk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_browser_by_index.call(this, dwID, ppunk)
    end
    def get_history_object(this : IBrowserService3*, ppole : Void**, pstm : Void**, ppbc : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_history_object.call(this, ppole, pstm, ppbc)
    end
    def set_history_object(this : IBrowserService3*, pole : Void*, fIsLocalAnchor : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_history_object.call(this, pole, fIsLocalAnchor)
    end
    def cache_ole_server(this : IBrowserService3*, pole : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cache_ole_server.call(this, pole)
    end
    def get_set_code_page(this : IBrowserService3*, pvarIn : Win32cr::System::Com::VARIANT*, pvarOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_set_code_page.call(this, pvarIn, pvarOut)
    end
    def on_http_equiv(this : IBrowserService3*, psv : Void*, fDone : Win32cr::Foundation::BOOL, pvarargIn : Win32cr::System::Com::VARIANT*, pvarargOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_http_equiv.call(this, psv, fDone, pvarargIn, pvarargOut)
    end
    def get_palette(this : IBrowserService3*, hpal : Win32cr::Graphics::Gdi::HPALETTE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_palette.call(this, hpal)
    end
    def register_window(this : IBrowserService3*, fForceRegister : Win32cr::Foundation::BOOL, swc : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_window.call(this, fForceRegister, swc)
    end
    def wnd_proc_bs(this : IBrowserService3*, hwnd : Win32cr::Foundation::HWND, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
      @lpVtbl.try &.value.wnd_proc_bs.call(this, hwnd, uMsg, wParam, lParam)
    end
    def set_as_def_folder_settings(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_as_def_folder_settings.call(this)
    end
    def get_view_rect(this : IBrowserService3*, prc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_view_rect.call(this, prc)
    end
    def on_size(this : IBrowserService3*, wParam : Win32cr::Foundation::WPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_size.call(this, wParam)
    end
    def on_create(this : IBrowserService3*, pcs : Win32cr::UI::WindowsAndMessaging::CREATESTRUCTW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_create.call(this, pcs)
    end
    def on_command(this : IBrowserService3*, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
      @lpVtbl.try &.value.on_command.call(this, wParam, lParam)
    end
    def on_destroy(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_destroy.call(this)
    end
    def on_notify(this : IBrowserService3*, pnm : Win32cr::UI::Controls::NMHDR*) : Win32cr::Foundation::LRESULT
      @lpVtbl.try &.value.on_notify.call(this, pnm)
    end
    def on_set_focus(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_set_focus.call(this)
    end
    def on_frame_window_activate_bs(this : IBrowserService3*, fActive : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_frame_window_activate_bs.call(this, fActive)
    end
    def release_shell_view(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.release_shell_view.call(this)
    end
    def activate_pending_view(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.activate_pending_view.call(this)
    end
    def create_view_window(this : IBrowserService3*, psvNew : Void*, psvOld : Void*, prcView : Win32cr::Foundation::RECT*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_view_window.call(this, psvNew, psvOld, prcView, phwnd)
    end
    def create_browser_prop_sheet_ext(this : IBrowserService3*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_browser_prop_sheet_ext.call(this, riid, ppv)
    end
    def get_view_window(this : IBrowserService3*, phwndView : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_view_window.call(this, phwndView)
    end
    def get_base_browser_data(this : IBrowserService3*, pbbd : Win32cr::UI::Shell::BASEBROWSERDATALH**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_base_browser_data.call(this, pbbd)
    end
    def put_base_browser_data(this : IBrowserService3*) : Win32cr::UI::Shell::BASEBROWSERDATALH*
      @lpVtbl.try &.value.put_base_browser_data.call(this)
    end
    def initialize_travel_log(this : IBrowserService3*, ptl : Void*, dw : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_travel_log.call(this, ptl, dw)
    end
    def set_top_browser(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_top_browser.call(this)
    end
    def offline(this : IBrowserService3*, iCmd : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.offline.call(this, iCmd)
    end
    def allow_view_resize(this : IBrowserService3*, f : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.allow_view_resize.call(this, f)
    end
    def set_activate_state(this : IBrowserService3*, u : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_activate_state.call(this, u)
    end
    def update_secure_lock_icon(this : IBrowserService3*, eSecureLock : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_secure_lock_icon.call(this, eSecureLock)
    end
    def initialize_download_manager(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_download_manager.call(this)
    end
    def initialize_transition_site(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_transition_site.call(this)
    end
    def _initialize(this : IBrowserService3*, hwnd : Win32cr::Foundation::HWND, pauto : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._initialize.call(this, hwnd, pauto)
    end
    def _cancel_pending_navigation_async(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._cancel_pending_navigation_async.call(this)
    end
    def _cancel_pending_view(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._cancel_pending_view.call(this)
    end
    def _may_save_changes(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._may_save_changes.call(this)
    end
    def _pause_or_resume_view(this : IBrowserService3*, fPaused : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._pause_or_resume_view.call(this, fPaused)
    end
    def _disable_modeless(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._disable_modeless.call(this)
    end
    def _navigate_to_pidl2(this : IBrowserService3*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, grfHLNF : UInt32, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._navigate_to_pidl2.call(this, pidl, grfHLNF, dwFlags)
    end
    def _try_shell2_rename(this : IBrowserService3*, psv : Void*, pidlNew : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._try_shell2_rename.call(this, psv, pidlNew)
    end
    def _switch_activation_now(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._switch_activation_now.call(this)
    end
    def _exec_children(this : IBrowserService3*, punkBar : Void*, fBroadcast : Win32cr::Foundation::BOOL, pguidCmdGroup : LibC::GUID*, nCmdID : UInt32, nCmdexecopt : UInt32, pvarargIn : Win32cr::System::Com::VARIANT*, pvarargOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._exec_children.call(this, punkBar, fBroadcast, pguidCmdGroup, nCmdID, nCmdexecopt, pvarargIn, pvarargOut)
    end
    def _send_children(this : IBrowserService3*, hwndBar : Win32cr::Foundation::HWND, fBroadcast : Win32cr::Foundation::BOOL, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._send_children.call(this, hwndBar, fBroadcast, uMsg, wParam, lParam)
    end
    def get_folder_set_data(this : IBrowserService3*, pfsd : Win32cr::UI::Shell::FOLDERSETDATA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder_set_data.call(this, pfsd)
    end
    def _on_focus_change(this : IBrowserService3*, itb : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._on_focus_change.call(this, itb)
    end
    def v_ShowHideChildWindows(this : IBrowserService3*, fChildOnly : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.v_ShowHideChildWindows.call(this, fChildOnly)
    end
    def _get_itb_last_focus(this : IBrowserService3*) : UInt32
      @lpVtbl.try &.value._get_itb_last_focus.call(this)
    end
    def _put_itb_last_focus(this : IBrowserService3*, itbLastFocus : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._put_itb_last_focus.call(this, itbLastFocus)
    end
    def _ui_activate_view(this : IBrowserService3*, uState : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._ui_activate_view.call(this, uState)
    end
    def _get_view_border_rect(this : IBrowserService3*, prc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._get_view_border_rect.call(this, prc)
    end
    def _update_view_rect_size(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._update_view_rect_size.call(this)
    end
    def _resize_next_border(this : IBrowserService3*, itb : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._resize_next_border.call(this, itb)
    end
    def _resize_view(this : IBrowserService3*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._resize_view.call(this)
    end
    def _get_effective_client_area(this : IBrowserService3*, lprectBorder : Win32cr::Foundation::RECT*, hmon : Win32cr::Graphics::Gdi::HMONITOR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._get_effective_client_area.call(this, lprectBorder, hmon)
    end
    def v_GetViewStream(this : IBrowserService3*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, grfMode : UInt32, pwszName : Win32cr::Foundation::PWSTR) : Void*
      @lpVtbl.try &.value.v_GetViewStream.call(this, pidl, grfMode, pwszName)
    end
    def forward_view_msg(this : IBrowserService3*, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
      @lpVtbl.try &.value.forward_view_msg.call(this, uMsg, wParam, lParam)
    end
    def set_accelerator_menu(this : IBrowserService3*, hacc : Win32cr::UI::WindowsAndMessaging::HACCEL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_accelerator_menu.call(this, hacc)
    end
    def _get_toolbar_count(this : IBrowserService3*) : Int32
      @lpVtbl.try &.value._get_toolbar_count.call(this)
    end
    def _get_toolbar_item(this : IBrowserService3*, itb : Int32) : Win32cr::UI::Shell::TOOLBARITEM*
      @lpVtbl.try &.value._get_toolbar_item.call(this, itb)
    end
    def _save_toolbars(this : IBrowserService3*, pstm : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._save_toolbars.call(this, pstm)
    end
    def _load_toolbars(this : IBrowserService3*, pstm : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._load_toolbars.call(this, pstm)
    end
    def _close_and_release_toolbars(this : IBrowserService3*, fClose : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._close_and_release_toolbars.call(this, fClose)
    end
    def v_MayGetNextToolbarFocus(this : IBrowserService3*, lpMsg : Win32cr::UI::WindowsAndMessaging::MSG*, itbNext : UInt32, citb : Int32, pptbi : Win32cr::UI::Shell::TOOLBARITEM**, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.v_MayGetNextToolbarFocus.call(this, lpMsg, itbNext, citb, pptbi, phwnd)
    end
    def _resize_next_border_helper(this : IBrowserService3*, itb : UInt32, bUseHmonitor : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._resize_next_border_helper.call(this, itb, bUseHmonitor)
    end
    def _find_t_bar(this : IBrowserService3*, punkSrc : Void*) : UInt32
      @lpVtbl.try &.value._find_t_bar.call(this, punkSrc)
    end
    def _set_focus(this : IBrowserService3*, ptbi : Win32cr::UI::Shell::TOOLBARITEM*, hwnd : Win32cr::Foundation::HWND, lpMsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._set_focus.call(this, ptbi, hwnd, lpMsg)
    end
    def v_MayTranslateAccelerator(this : IBrowserService3*, pmsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.v_MayTranslateAccelerator.call(this, pmsg)
    end
    def _get_border_dw_helper(this : IBrowserService3*, punkSrc : Void*, lprectBorder : Win32cr::Foundation::RECT*, bUseHmonitor : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._get_border_dw_helper.call(this, punkSrc, lprectBorder, bUseHmonitor)
    end
    def v_CheckZoneCrossing(this : IBrowserService3*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.v_CheckZoneCrossing.call(this, pidl)
    end
    def _position_view_window(this : IBrowserService3*, hwnd : Win32cr::Foundation::HWND, prc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._position_view_window.call(this, hwnd, prc)
    end
    def ie_parse_display_name_ex(this : IBrowserService3*, uiCP : UInt32, pwszPath : Win32cr::Foundation::PWSTR, dwFlags : UInt32, ppidlOut : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ie_parse_display_name_ex.call(this, uiCP, pwszPath, dwFlags, ppidlOut)
    end

  end

  @[Extern]
  record IBrowserService4Vtbl,
    query_interface : Proc(IBrowserService4*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IBrowserService4*, UInt32),
    release : Proc(IBrowserService4*, UInt32),
    get_parent_site : Proc(IBrowserService4*, Void**, Win32cr::Foundation::HRESULT),
    set_title : Proc(IBrowserService4*, Void*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_title : Proc(IBrowserService4*, Void*, UInt16*, UInt32, Win32cr::Foundation::HRESULT),
    get_ole_object : Proc(IBrowserService4*, Void**, Win32cr::Foundation::HRESULT),
    get_travel_log : Proc(IBrowserService4*, Void**, Win32cr::Foundation::HRESULT),
    show_control_window : Proc(IBrowserService4*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    is_control_window_shown : Proc(IBrowserService4*, UInt32, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    ie_get_display_name : Proc(IBrowserService4*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    ie_parse_display_name : Proc(IBrowserService4*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    display_parse_error : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    navigate_to_pidl : Proc(IBrowserService4*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::Foundation::HRESULT),
    set_navigate_state : Proc(IBrowserService4*, Win32cr::UI::Shell::BNSTATE, Win32cr::Foundation::HRESULT),
    get_navigate_state : Proc(IBrowserService4*, Win32cr::UI::Shell::BNSTATE*, Win32cr::Foundation::HRESULT),
    notify_redirect : Proc(IBrowserService4*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    update_window_list : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    update_back_forward_state : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    set_flags : Proc(IBrowserService4*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_flags : Proc(IBrowserService4*, UInt32*, Win32cr::Foundation::HRESULT),
    can_navigate_now : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    get_pidl : Proc(IBrowserService4*, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    set_referrer : Proc(IBrowserService4*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    get_browser_index : Proc(IBrowserService4*, UInt32),
    get_browser_by_index : Proc(IBrowserService4*, UInt32, Void**, Win32cr::Foundation::HRESULT),
    get_history_object : Proc(IBrowserService4*, Void**, Void**, Void**, Win32cr::Foundation::HRESULT),
    set_history_object : Proc(IBrowserService4*, Void*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    cache_ole_server : Proc(IBrowserService4*, Void*, Win32cr::Foundation::HRESULT),
    get_set_code_page : Proc(IBrowserService4*, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    on_http_equiv : Proc(IBrowserService4*, Void*, Win32cr::Foundation::BOOL, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    get_palette : Proc(IBrowserService4*, Win32cr::Graphics::Gdi::HPALETTE*, Win32cr::Foundation::HRESULT),
    register_window : Proc(IBrowserService4*, Win32cr::Foundation::BOOL, Int32, Win32cr::Foundation::HRESULT),
    wnd_proc_bs : Proc(IBrowserService4*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LRESULT),
    set_as_def_folder_settings : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    get_view_rect : Proc(IBrowserService4*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    on_size : Proc(IBrowserService4*, Win32cr::Foundation::WPARAM, Win32cr::Foundation::HRESULT),
    on_create : Proc(IBrowserService4*, Win32cr::UI::WindowsAndMessaging::CREATESTRUCTW*, Win32cr::Foundation::HRESULT),
    on_command : Proc(IBrowserService4*, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LRESULT),
    on_destroy : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    on_notify : Proc(IBrowserService4*, Win32cr::UI::Controls::NMHDR*, Win32cr::Foundation::LRESULT),
    on_set_focus : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    on_frame_window_activate_bs : Proc(IBrowserService4*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    release_shell_view : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    activate_pending_view : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    create_view_window : Proc(IBrowserService4*, Void*, Void*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    create_browser_prop_sheet_ext : Proc(IBrowserService4*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_view_window : Proc(IBrowserService4*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    get_base_browser_data : Proc(IBrowserService4*, Win32cr::UI::Shell::BASEBROWSERDATALH**, Win32cr::Foundation::HRESULT),
    put_base_browser_data : Proc(IBrowserService4*, Win32cr::UI::Shell::BASEBROWSERDATALH*),
    initialize_travel_log : Proc(IBrowserService4*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    set_top_browser : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    offline : Proc(IBrowserService4*, Int32, Win32cr::Foundation::HRESULT),
    allow_view_resize : Proc(IBrowserService4*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_activate_state : Proc(IBrowserService4*, UInt32, Win32cr::Foundation::HRESULT),
    update_secure_lock_icon : Proc(IBrowserService4*, Int32, Win32cr::Foundation::HRESULT),
    initialize_download_manager : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    initialize_transition_site : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    _initialize : Proc(IBrowserService4*, Win32cr::Foundation::HWND, Void*, Win32cr::Foundation::HRESULT),
    _cancel_pending_navigation_async : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    _cancel_pending_view : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    _may_save_changes : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    _pause_or_resume_view : Proc(IBrowserService4*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    _disable_modeless : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    _navigate_to_pidl2 : Proc(IBrowserService4*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    _try_shell2_rename : Proc(IBrowserService4*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    _switch_activation_now : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    _exec_children : Proc(IBrowserService4*, Void*, Win32cr::Foundation::BOOL, LibC::GUID*, UInt32, UInt32, Win32cr::System::Com::VARIANT*, Win32cr::System::Com::VARIANT*, Win32cr::Foundation::HRESULT),
    _send_children : Proc(IBrowserService4*, Win32cr::Foundation::HWND, Win32cr::Foundation::BOOL, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::HRESULT),
    get_folder_set_data : Proc(IBrowserService4*, Win32cr::UI::Shell::FOLDERSETDATA*, Win32cr::Foundation::HRESULT),
    _on_focus_change : Proc(IBrowserService4*, UInt32, Win32cr::Foundation::HRESULT),
    v_ShowHideChildWindows : Proc(IBrowserService4*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    _get_itb_last_focus : Proc(IBrowserService4*, UInt32),
    _put_itb_last_focus : Proc(IBrowserService4*, UInt32, Win32cr::Foundation::HRESULT),
    _ui_activate_view : Proc(IBrowserService4*, UInt32, Win32cr::Foundation::HRESULT),
    _get_view_border_rect : Proc(IBrowserService4*, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    _update_view_rect_size : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    _resize_next_border : Proc(IBrowserService4*, UInt32, Win32cr::Foundation::HRESULT),
    _resize_view : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    _get_effective_client_area : Proc(IBrowserService4*, Win32cr::Foundation::RECT*, Win32cr::Graphics::Gdi::HMONITOR, Win32cr::Foundation::HRESULT),
    v_GetViewStream : Proc(IBrowserService4*, Win32cr::UI::Shell::Common::ITEMIDLIST*, UInt32, Win32cr::Foundation::PWSTR, Void*),
    forward_view_msg : Proc(IBrowserService4*, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::LRESULT),
    set_accelerator_menu : Proc(IBrowserService4*, Win32cr::UI::WindowsAndMessaging::HACCEL, Win32cr::Foundation::HRESULT),
    _get_toolbar_count : Proc(IBrowserService4*, Int32),
    _get_toolbar_item : Proc(IBrowserService4*, Int32, Win32cr::UI::Shell::TOOLBARITEM*),
    _save_toolbars : Proc(IBrowserService4*, Void*, Win32cr::Foundation::HRESULT),
    _load_toolbars : Proc(IBrowserService4*, Void*, Win32cr::Foundation::HRESULT),
    _close_and_release_toolbars : Proc(IBrowserService4*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    v_MayGetNextToolbarFocus : Proc(IBrowserService4*, Win32cr::UI::WindowsAndMessaging::MSG*, UInt32, Int32, Win32cr::UI::Shell::TOOLBARITEM**, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    _resize_next_border_helper : Proc(IBrowserService4*, UInt32, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    _find_t_bar : Proc(IBrowserService4*, Void*, UInt32),
    _set_focus : Proc(IBrowserService4*, Win32cr::UI::Shell::TOOLBARITEM*, Win32cr::Foundation::HWND, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT),
    v_MayTranslateAccelerator : Proc(IBrowserService4*, Win32cr::UI::WindowsAndMessaging::MSG*, Win32cr::Foundation::HRESULT),
    _get_border_dw_helper : Proc(IBrowserService4*, Void*, Win32cr::Foundation::RECT*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    v_CheckZoneCrossing : Proc(IBrowserService4*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::Foundation::HRESULT),
    _position_view_window : Proc(IBrowserService4*, Win32cr::Foundation::HWND, Win32cr::Foundation::RECT*, Win32cr::Foundation::HRESULT),
    ie_parse_display_name_ex : Proc(IBrowserService4*, UInt32, Win32cr::Foundation::PWSTR, UInt32, Win32cr::UI::Shell::Common::ITEMIDLIST**, Win32cr::Foundation::HRESULT),
    activate_view : Proc(IBrowserService4*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    save_view_state : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT),
    _resize_all_borders : Proc(IBrowserService4*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IBrowserService4, lpVtbl : IBrowserService4Vtbl* do
    GUID = LibC::GUID.new(0x639f1bff_u32, 0xe135_u16, 0x4096_u16, StaticArray[0xab_u8, 0xd8_u8, 0xe0_u8, 0xf5_u8, 0x4_u8, 0xd6_u8, 0x49_u8, 0xa4_u8])
    def query_interface(this : IBrowserService4*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IBrowserService4*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IBrowserService4*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_parent_site(this : IBrowserService4*, ppipsite : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_parent_site.call(this, ppipsite)
    end
    def set_title(this : IBrowserService4*, psv : Void*, pszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_title.call(this, psv, pszName)
    end
    def get_title(this : IBrowserService4*, psv : Void*, pszName : UInt16*, cchName : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_title.call(this, psv, pszName, cchName)
    end
    def get_ole_object(this : IBrowserService4*, ppobjv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ole_object.call(this, ppobjv)
    end
    def get_travel_log(this : IBrowserService4*, pptl : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_travel_log.call(this, pptl)
    end
    def show_control_window(this : IBrowserService4*, id : UInt32, fShow : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.show_control_window.call(this, id, fShow)
    end
    def is_control_window_shown(this : IBrowserService4*, id : UInt32, pfShown : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.is_control_window_shown.call(this, id, pfShown)
    end
    def ie_get_display_name(this : IBrowserService4*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pwszName : Win32cr::Foundation::PWSTR, uFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ie_get_display_name.call(this, pidl, pwszName, uFlags)
    end
    def ie_parse_display_name(this : IBrowserService4*, uiCP : UInt32, pwszPath : Win32cr::Foundation::PWSTR, ppidlOut : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ie_parse_display_name.call(this, uiCP, pwszPath, ppidlOut)
    end
    def display_parse_error(this : IBrowserService4*, hres : Win32cr::Foundation::HRESULT, pwszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.display_parse_error.call(this, hres, pwszPath)
    end
    def navigate_to_pidl(this : IBrowserService4*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, grfHLNF : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.navigate_to_pidl.call(this, pidl, grfHLNF)
    end
    def set_navigate_state(this : IBrowserService4*, bnstate : Win32cr::UI::Shell::BNSTATE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_navigate_state.call(this, bnstate)
    end
    def get_navigate_state(this : IBrowserService4*, pbnstate : Win32cr::UI::Shell::BNSTATE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_navigate_state.call(this, pbnstate)
    end
    def notify_redirect(this : IBrowserService4*, psv : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pfDidBrowse : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.notify_redirect.call(this, psv, pidl, pfDidBrowse)
    end
    def update_window_list(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_window_list.call(this)
    end
    def update_back_forward_state(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_back_forward_state.call(this)
    end
    def set_flags(this : IBrowserService4*, dwFlags : UInt32, dwFlagMask : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_flags.call(this, dwFlags, dwFlagMask)
    end
    def get_flags(this : IBrowserService4*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_flags.call(this, pdwFlags)
    end
    def can_navigate_now(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.can_navigate_now.call(this)
    end
    def get_pidl(this : IBrowserService4*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_pidl.call(this, ppidl)
    end
    def set_referrer(this : IBrowserService4*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_referrer.call(this, pidl)
    end
    def get_browser_index(this : IBrowserService4*) : UInt32
      @lpVtbl.try &.value.get_browser_index.call(this)
    end
    def get_browser_by_index(this : IBrowserService4*, dwID : UInt32, ppunk : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_browser_by_index.call(this, dwID, ppunk)
    end
    def get_history_object(this : IBrowserService4*, ppole : Void**, pstm : Void**, ppbc : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_history_object.call(this, ppole, pstm, ppbc)
    end
    def set_history_object(this : IBrowserService4*, pole : Void*, fIsLocalAnchor : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_history_object.call(this, pole, fIsLocalAnchor)
    end
    def cache_ole_server(this : IBrowserService4*, pole : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cache_ole_server.call(this, pole)
    end
    def get_set_code_page(this : IBrowserService4*, pvarIn : Win32cr::System::Com::VARIANT*, pvarOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_set_code_page.call(this, pvarIn, pvarOut)
    end
    def on_http_equiv(this : IBrowserService4*, psv : Void*, fDone : Win32cr::Foundation::BOOL, pvarargIn : Win32cr::System::Com::VARIANT*, pvarargOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_http_equiv.call(this, psv, fDone, pvarargIn, pvarargOut)
    end
    def get_palette(this : IBrowserService4*, hpal : Win32cr::Graphics::Gdi::HPALETTE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_palette.call(this, hpal)
    end
    def register_window(this : IBrowserService4*, fForceRegister : Win32cr::Foundation::BOOL, swc : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_window.call(this, fForceRegister, swc)
    end
    def wnd_proc_bs(this : IBrowserService4*, hwnd : Win32cr::Foundation::HWND, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
      @lpVtbl.try &.value.wnd_proc_bs.call(this, hwnd, uMsg, wParam, lParam)
    end
    def set_as_def_folder_settings(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_as_def_folder_settings.call(this)
    end
    def get_view_rect(this : IBrowserService4*, prc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_view_rect.call(this, prc)
    end
    def on_size(this : IBrowserService4*, wParam : Win32cr::Foundation::WPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_size.call(this, wParam)
    end
    def on_create(this : IBrowserService4*, pcs : Win32cr::UI::WindowsAndMessaging::CREATESTRUCTW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_create.call(this, pcs)
    end
    def on_command(this : IBrowserService4*, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
      @lpVtbl.try &.value.on_command.call(this, wParam, lParam)
    end
    def on_destroy(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_destroy.call(this)
    end
    def on_notify(this : IBrowserService4*, pnm : Win32cr::UI::Controls::NMHDR*) : Win32cr::Foundation::LRESULT
      @lpVtbl.try &.value.on_notify.call(this, pnm)
    end
    def on_set_focus(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_set_focus.call(this)
    end
    def on_frame_window_activate_bs(this : IBrowserService4*, fActive : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_frame_window_activate_bs.call(this, fActive)
    end
    def release_shell_view(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.release_shell_view.call(this)
    end
    def activate_pending_view(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.activate_pending_view.call(this)
    end
    def create_view_window(this : IBrowserService4*, psvNew : Void*, psvOld : Void*, prcView : Win32cr::Foundation::RECT*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_view_window.call(this, psvNew, psvOld, prcView, phwnd)
    end
    def create_browser_prop_sheet_ext(this : IBrowserService4*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_browser_prop_sheet_ext.call(this, riid, ppv)
    end
    def get_view_window(this : IBrowserService4*, phwndView : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_view_window.call(this, phwndView)
    end
    def get_base_browser_data(this : IBrowserService4*, pbbd : Win32cr::UI::Shell::BASEBROWSERDATALH**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_base_browser_data.call(this, pbbd)
    end
    def put_base_browser_data(this : IBrowserService4*) : Win32cr::UI::Shell::BASEBROWSERDATALH*
      @lpVtbl.try &.value.put_base_browser_data.call(this)
    end
    def initialize_travel_log(this : IBrowserService4*, ptl : Void*, dw : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_travel_log.call(this, ptl, dw)
    end
    def set_top_browser(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_top_browser.call(this)
    end
    def offline(this : IBrowserService4*, iCmd : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.offline.call(this, iCmd)
    end
    def allow_view_resize(this : IBrowserService4*, f : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.allow_view_resize.call(this, f)
    end
    def set_activate_state(this : IBrowserService4*, u : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_activate_state.call(this, u)
    end
    def update_secure_lock_icon(this : IBrowserService4*, eSecureLock : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_secure_lock_icon.call(this, eSecureLock)
    end
    def initialize_download_manager(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_download_manager.call(this)
    end
    def initialize_transition_site(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_transition_site.call(this)
    end
    def _initialize(this : IBrowserService4*, hwnd : Win32cr::Foundation::HWND, pauto : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._initialize.call(this, hwnd, pauto)
    end
    def _cancel_pending_navigation_async(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._cancel_pending_navigation_async.call(this)
    end
    def _cancel_pending_view(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._cancel_pending_view.call(this)
    end
    def _may_save_changes(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._may_save_changes.call(this)
    end
    def _pause_or_resume_view(this : IBrowserService4*, fPaused : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._pause_or_resume_view.call(this, fPaused)
    end
    def _disable_modeless(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._disable_modeless.call(this)
    end
    def _navigate_to_pidl2(this : IBrowserService4*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, grfHLNF : UInt32, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._navigate_to_pidl2.call(this, pidl, grfHLNF, dwFlags)
    end
    def _try_shell2_rename(this : IBrowserService4*, psv : Void*, pidlNew : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._try_shell2_rename.call(this, psv, pidlNew)
    end
    def _switch_activation_now(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._switch_activation_now.call(this)
    end
    def _exec_children(this : IBrowserService4*, punkBar : Void*, fBroadcast : Win32cr::Foundation::BOOL, pguidCmdGroup : LibC::GUID*, nCmdID : UInt32, nCmdexecopt : UInt32, pvarargIn : Win32cr::System::Com::VARIANT*, pvarargOut : Win32cr::System::Com::VARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._exec_children.call(this, punkBar, fBroadcast, pguidCmdGroup, nCmdID, nCmdexecopt, pvarargIn, pvarargOut)
    end
    def _send_children(this : IBrowserService4*, hwndBar : Win32cr::Foundation::HWND, fBroadcast : Win32cr::Foundation::BOOL, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._send_children.call(this, hwndBar, fBroadcast, uMsg, wParam, lParam)
    end
    def get_folder_set_data(this : IBrowserService4*, pfsd : Win32cr::UI::Shell::FOLDERSETDATA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_folder_set_data.call(this, pfsd)
    end
    def _on_focus_change(this : IBrowserService4*, itb : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._on_focus_change.call(this, itb)
    end
    def v_ShowHideChildWindows(this : IBrowserService4*, fChildOnly : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.v_ShowHideChildWindows.call(this, fChildOnly)
    end
    def _get_itb_last_focus(this : IBrowserService4*) : UInt32
      @lpVtbl.try &.value._get_itb_last_focus.call(this)
    end
    def _put_itb_last_focus(this : IBrowserService4*, itbLastFocus : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._put_itb_last_focus.call(this, itbLastFocus)
    end
    def _ui_activate_view(this : IBrowserService4*, uState : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._ui_activate_view.call(this, uState)
    end
    def _get_view_border_rect(this : IBrowserService4*, prc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._get_view_border_rect.call(this, prc)
    end
    def _update_view_rect_size(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._update_view_rect_size.call(this)
    end
    def _resize_next_border(this : IBrowserService4*, itb : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._resize_next_border.call(this, itb)
    end
    def _resize_view(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._resize_view.call(this)
    end
    def _get_effective_client_area(this : IBrowserService4*, lprectBorder : Win32cr::Foundation::RECT*, hmon : Win32cr::Graphics::Gdi::HMONITOR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._get_effective_client_area.call(this, lprectBorder, hmon)
    end
    def v_GetViewStream(this : IBrowserService4*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, grfMode : UInt32, pwszName : Win32cr::Foundation::PWSTR) : Void*
      @lpVtbl.try &.value.v_GetViewStream.call(this, pidl, grfMode, pwszName)
    end
    def forward_view_msg(this : IBrowserService4*, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
      @lpVtbl.try &.value.forward_view_msg.call(this, uMsg, wParam, lParam)
    end
    def set_accelerator_menu(this : IBrowserService4*, hacc : Win32cr::UI::WindowsAndMessaging::HACCEL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_accelerator_menu.call(this, hacc)
    end
    def _get_toolbar_count(this : IBrowserService4*) : Int32
      @lpVtbl.try &.value._get_toolbar_count.call(this)
    end
    def _get_toolbar_item(this : IBrowserService4*, itb : Int32) : Win32cr::UI::Shell::TOOLBARITEM*
      @lpVtbl.try &.value._get_toolbar_item.call(this, itb)
    end
    def _save_toolbars(this : IBrowserService4*, pstm : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._save_toolbars.call(this, pstm)
    end
    def _load_toolbars(this : IBrowserService4*, pstm : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._load_toolbars.call(this, pstm)
    end
    def _close_and_release_toolbars(this : IBrowserService4*, fClose : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._close_and_release_toolbars.call(this, fClose)
    end
    def v_MayGetNextToolbarFocus(this : IBrowserService4*, lpMsg : Win32cr::UI::WindowsAndMessaging::MSG*, itbNext : UInt32, citb : Int32, pptbi : Win32cr::UI::Shell::TOOLBARITEM**, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.v_MayGetNextToolbarFocus.call(this, lpMsg, itbNext, citb, pptbi, phwnd)
    end
    def _resize_next_border_helper(this : IBrowserService4*, itb : UInt32, bUseHmonitor : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._resize_next_border_helper.call(this, itb, bUseHmonitor)
    end
    def _find_t_bar(this : IBrowserService4*, punkSrc : Void*) : UInt32
      @lpVtbl.try &.value._find_t_bar.call(this, punkSrc)
    end
    def _set_focus(this : IBrowserService4*, ptbi : Win32cr::UI::Shell::TOOLBARITEM*, hwnd : Win32cr::Foundation::HWND, lpMsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._set_focus.call(this, ptbi, hwnd, lpMsg)
    end
    def v_MayTranslateAccelerator(this : IBrowserService4*, pmsg : Win32cr::UI::WindowsAndMessaging::MSG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.v_MayTranslateAccelerator.call(this, pmsg)
    end
    def _get_border_dw_helper(this : IBrowserService4*, punkSrc : Void*, lprectBorder : Win32cr::Foundation::RECT*, bUseHmonitor : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._get_border_dw_helper.call(this, punkSrc, lprectBorder, bUseHmonitor)
    end
    def v_CheckZoneCrossing(this : IBrowserService4*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.v_CheckZoneCrossing.call(this, pidl)
    end
    def _position_view_window(this : IBrowserService4*, hwnd : Win32cr::Foundation::HWND, prc : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._position_view_window.call(this, hwnd, prc)
    end
    def ie_parse_display_name_ex(this : IBrowserService4*, uiCP : UInt32, pwszPath : Win32cr::Foundation::PWSTR, dwFlags : UInt32, ppidlOut : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.ie_parse_display_name_ex.call(this, uiCP, pwszPath, dwFlags, ppidlOut)
    end
    def activate_view(this : IBrowserService4*, fPendingView : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.activate_view.call(this, fPendingView)
    end
    def save_view_state(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.save_view_state.call(this)
    end
    def _resize_all_borders(this : IBrowserService4*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value._resize_all_borders.call(this)
    end

  end

  @[Extern]
  record ITrackShellMenuVtbl,
    query_interface : Proc(ITrackShellMenu*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITrackShellMenu*, UInt32),
    release : Proc(ITrackShellMenu*, UInt32),
    initialize__ : Proc(ITrackShellMenu*, Void*, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_menu_info : Proc(ITrackShellMenu*, Void**, UInt32*, UInt32*, UInt32*, Win32cr::Foundation::HRESULT),
    set_shell_folder : Proc(ITrackShellMenu*, Void*, Win32cr::UI::Shell::Common::ITEMIDLIST*, Win32cr::System::Registry::HKEY, UInt32, Win32cr::Foundation::HRESULT),
    get_shell_folder : Proc(ITrackShellMenu*, UInt32*, Win32cr::UI::Shell::Common::ITEMIDLIST**, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    set_menu : Proc(ITrackShellMenu*, Win32cr::UI::WindowsAndMessaging::HMENU, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    get_menu : Proc(ITrackShellMenu*, Win32cr::UI::WindowsAndMessaging::HMENU*, Win32cr::Foundation::HWND*, UInt32*, Win32cr::Foundation::HRESULT),
    invalidate_item : Proc(ITrackShellMenu*, Win32cr::UI::Shell::SMDATA*, UInt32, Win32cr::Foundation::HRESULT),
    get_state : Proc(ITrackShellMenu*, Win32cr::UI::Shell::SMDATA*, Win32cr::Foundation::HRESULT),
    set_menu_toolbar : Proc(ITrackShellMenu*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    set_obscured : Proc(ITrackShellMenu*, Win32cr::Foundation::HWND, Void*, UInt32, Win32cr::Foundation::HRESULT),
    popup : Proc(ITrackShellMenu*, Win32cr::Foundation::HWND, Win32cr::Foundation::POINTL*, Win32cr::Foundation::RECTL*, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITrackShellMenu, lpVtbl : ITrackShellMenuVtbl* do
    GUID = LibC::GUID.new(0x8278f932_u32, 0x2a3e_u16, 0x11d2_u16, StaticArray[0x83_u8, 0x8f_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xd0_u8])
    def query_interface(this : ITrackShellMenu*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITrackShellMenu*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITrackShellMenu*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : ITrackShellMenu*, psmc : Void*, uId : UInt32, uIdAncestor : UInt32, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, psmc, uId, uIdAncestor, dwFlags)
    end
    def get_menu_info(this : ITrackShellMenu*, ppsmc : Void**, puId : UInt32*, puIdAncestor : UInt32*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_menu_info.call(this, ppsmc, puId, puIdAncestor, pdwFlags)
    end
    def set_shell_folder(this : ITrackShellMenu*, psf : Void*, pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, hKey : Win32cr::System::Registry::HKEY, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_shell_folder.call(this, psf, pidlFolder, hKey, dwFlags)
    end
    def get_shell_folder(this : ITrackShellMenu*, pdwFlags : UInt32*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_shell_folder.call(this, pdwFlags, ppidl, riid, ppv)
    end
    def set_menu(this : ITrackShellMenu*, hmenu : Win32cr::UI::WindowsAndMessaging::HMENU, hwnd : Win32cr::Foundation::HWND, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_menu.call(this, hmenu, hwnd, dwFlags)
    end
    def get_menu(this : ITrackShellMenu*, phmenu : Win32cr::UI::WindowsAndMessaging::HMENU*, phwnd : Win32cr::Foundation::HWND*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_menu.call(this, phmenu, phwnd, pdwFlags)
    end
    def invalidate_item(this : ITrackShellMenu*, psmd : Win32cr::UI::Shell::SMDATA*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invalidate_item.call(this, psmd, dwFlags)
    end
    def get_state(this : ITrackShellMenu*, psmd : Win32cr::UI::Shell::SMDATA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_state.call(this, psmd)
    end
    def set_menu_toolbar(this : ITrackShellMenu*, punk : Void*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_menu_toolbar.call(this, punk, dwFlags)
    end
    def set_obscured(this : ITrackShellMenu*, hwndTB : Win32cr::Foundation::HWND, punkBand : Void*, dwSMSetFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_obscured.call(this, hwndTB, punkBand, dwSMSetFlags)
    end
    def popup(this : ITrackShellMenu*, hwnd : Win32cr::Foundation::HWND, ppt : Win32cr::Foundation::POINTL*, prcExclude : Win32cr::Foundation::RECTL*, dwFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.popup.call(this, hwnd, ppt, prcExclude, dwFlags)
    end

  end

  @[Extern]
  record ITranscodeImageVtbl,
    query_interface : Proc(ITranscodeImage*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(ITranscodeImage*, UInt32),
    release : Proc(ITranscodeImage*, UInt32),
    transcode_image : Proc(ITranscodeImage*, Void*, UInt32, UInt32, UInt32, Void*, UInt32*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record ITranscodeImage, lpVtbl : ITranscodeImageVtbl* do
    GUID = LibC::GUID.new(0xbae86ddd_u32, 0xdc11_u16, 0x421c_u16, StaticArray[0xb7_u8, 0xab_u8, 0xcc_u8, 0x55_u8, 0xd1_u8, 0xd6_u8, 0x5c_u8, 0x44_u8])
    def query_interface(this : ITranscodeImage*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : ITranscodeImage*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : ITranscodeImage*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def transcode_image(this : ITranscodeImage*, pShellItem : Void*, uiMaxWidth : UInt32, uiMaxHeight : UInt32, flags : UInt32, pvImage : Void*, puiWidth : UInt32*, puiHeight : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.transcode_image.call(this, pShellItem, uiMaxWidth, uiMaxHeight, flags, pvImage, puiWidth, puiHeight)
    end

  end

  @[Extern]
  record IUniformResourceLocatorAVtbl,
    query_interface : Proc(IUniformResourceLocatorA*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IUniformResourceLocatorA*, UInt32),
    release : Proc(IUniformResourceLocatorA*, UInt32),
    set_url : Proc(IUniformResourceLocatorA*, Win32cr::Foundation::PSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_url : Proc(IUniformResourceLocatorA*, Win32cr::Foundation::PSTR*, Win32cr::Foundation::HRESULT),
    invoke_command : Proc(IUniformResourceLocatorA*, Win32cr::UI::Shell::Urlinvokecommandinfoa*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IUniformResourceLocatorA, lpVtbl : IUniformResourceLocatorAVtbl* do
    GUID = LibC::GUID.new(0xfbf23b80_u32, 0xe3f0_u16, 0x101b_u16, StaticArray[0x84_u8, 0x88_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x3e_u8, 0x56_u8, 0xf8_u8])
    def query_interface(this : IUniformResourceLocatorA*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IUniformResourceLocatorA*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IUniformResourceLocatorA*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_url(this : IUniformResourceLocatorA*, pcszURL : Win32cr::Foundation::PSTR, dwInFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_url.call(this, pcszURL, dwInFlags)
    end
    def get_url(this : IUniformResourceLocatorA*, ppszURL : Win32cr::Foundation::PSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_url.call(this, ppszURL)
    end
    def invoke_command(this : IUniformResourceLocatorA*, purlici : Win32cr::UI::Shell::Urlinvokecommandinfoa*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_command.call(this, purlici)
    end

  end

  @[Extern]
  record IUniformResourceLocatorWVtbl,
    query_interface : Proc(IUniformResourceLocatorW*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IUniformResourceLocatorW*, UInt32),
    release : Proc(IUniformResourceLocatorW*, UInt32),
    set_url : Proc(IUniformResourceLocatorW*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_url : Proc(IUniformResourceLocatorW*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    invoke_command : Proc(IUniformResourceLocatorW*, Win32cr::UI::Shell::Urlinvokecommandinfow*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IUniformResourceLocatorW, lpVtbl : IUniformResourceLocatorWVtbl* do
    GUID = LibC::GUID.new(0xcabb0da0_u32, 0xda57_u16, 0x11cf_u16, StaticArray[0x99_u8, 0x74_u8, 0x0_u8, 0x20_u8, 0xaf_u8, 0xd7_u8, 0x97_u8, 0x62_u8])
    def query_interface(this : IUniformResourceLocatorW*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IUniformResourceLocatorW*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IUniformResourceLocatorW*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def set_url(this : IUniformResourceLocatorW*, pcszURL : Win32cr::Foundation::PWSTR, dwInFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_url.call(this, pcszURL, dwInFlags)
    end
    def get_url(this : IUniformResourceLocatorW*, ppszURL : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_url.call(this, ppszURL)
    end
    def invoke_command(this : IUniformResourceLocatorW*, purlici : Win32cr::UI::Shell::Urlinvokecommandinfow*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invoke_command.call(this, purlici)
    end

  end

  @[Extern]
  record IInputPaneAnimationCoordinatorVtbl,
    query_interface : Proc(IInputPaneAnimationCoordinator*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IInputPaneAnimationCoordinator*, UInt32),
    release : Proc(IInputPaneAnimationCoordinator*, UInt32),
    add_animation : Proc(IInputPaneAnimationCoordinator*, Void*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IInputPaneAnimationCoordinator, lpVtbl : IInputPaneAnimationCoordinatorVtbl* do
    GUID = LibC::GUID.new(0x2af16ba9_u32, 0x2de5_u16, 0x4b75_u16, StaticArray[0x82_u8, 0xd9_u8, 0x1_u8, 0x37_u8, 0x2a_u8, 0xfb_u8, 0xff_u8, 0xb4_u8])
    def query_interface(this : IInputPaneAnimationCoordinator*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IInputPaneAnimationCoordinator*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IInputPaneAnimationCoordinator*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add_animation(this : IInputPaneAnimationCoordinator*, device : Void*, animation : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_animation.call(this, device, animation)
    end

  end

  def loadUserProfileA(hToken : Win32cr::Foundation::HANDLE, lpProfileInfo : Win32cr::UI::Shell::PROFILEINFOA*) : Win32cr::Foundation::BOOL
    C.LoadUserProfileA(hToken, lpProfileInfo)
  end

  def loadUserProfileW(hToken : Win32cr::Foundation::HANDLE, lpProfileInfo : Win32cr::UI::Shell::PROFILEINFOW*) : Win32cr::Foundation::BOOL
    C.LoadUserProfileW(hToken, lpProfileInfo)
  end

  def unloadUserProfile(hToken : Win32cr::Foundation::HANDLE, hProfile : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL
    C.UnloadUserProfile(hToken, hProfile)
  end

  def getProfilesDirectoryA(lpProfileDir : UInt8*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL
    C.GetProfilesDirectoryA(lpProfileDir, lpcchSize)
  end

  def getProfilesDirectoryW(lpProfileDir : UInt16*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL
    C.GetProfilesDirectoryW(lpProfileDir, lpcchSize)
  end

  def getProfileType(dwFlags : UInt32*) : Win32cr::Foundation::BOOL
    C.GetProfileType(dwFlags)
  end

  def deleteProfileA(lpSidString : Win32cr::Foundation::PSTR, lpProfilePath : Win32cr::Foundation::PSTR, lpComputerName : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.DeleteProfileA(lpSidString, lpProfilePath, lpComputerName)
  end

  def deleteProfileW(lpSidString : Win32cr::Foundation::PWSTR, lpProfilePath : Win32cr::Foundation::PWSTR, lpComputerName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.DeleteProfileW(lpSidString, lpProfilePath, lpComputerName)
  end

  def createProfile(pszUserSid : Win32cr::Foundation::PWSTR, pszUserName : Win32cr::Foundation::PWSTR, pszProfilePath : UInt16*, cchProfilePath : UInt32) : Win32cr::Foundation::HRESULT
    C.CreateProfile(pszUserSid, pszUserName, pszProfilePath, cchProfilePath)
  end

  def getDefaultUserProfileDirectoryA(lpProfileDir : UInt8*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL
    C.GetDefaultUserProfileDirectoryA(lpProfileDir, lpcchSize)
  end

  def getDefaultUserProfileDirectoryW(lpProfileDir : UInt16*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL
    C.GetDefaultUserProfileDirectoryW(lpProfileDir, lpcchSize)
  end

  def getAllUsersProfileDirectoryA(lpProfileDir : UInt8*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL
    C.GetAllUsersProfileDirectoryA(lpProfileDir, lpcchSize)
  end

  def getAllUsersProfileDirectoryW(lpProfileDir : UInt16*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL
    C.GetAllUsersProfileDirectoryW(lpProfileDir, lpcchSize)
  end

  def getUserProfileDirectoryA(hToken : Win32cr::Foundation::HANDLE, lpProfileDir : UInt8*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL
    C.GetUserProfileDirectoryA(hToken, lpProfileDir, lpcchSize)
  end

  def getUserProfileDirectoryW(hToken : Win32cr::Foundation::HANDLE, lpProfileDir : UInt16*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL
    C.GetUserProfileDirectoryW(hToken, lpProfileDir, lpcchSize)
  end

  def setWindowSubclass(hWnd : Win32cr::Foundation::HWND, pfnSubclass : Win32cr::UI::Shell::SUBCLASSPROC, uIdSubclass : LibC::UIntPtrT, dwRefData : LibC::UIntPtrT) : Win32cr::Foundation::BOOL
    C.SetWindowSubclass(hWnd, pfnSubclass, uIdSubclass, dwRefData)
  end

  def getWindowSubclass(hWnd : Win32cr::Foundation::HWND, pfnSubclass : Win32cr::UI::Shell::SUBCLASSPROC, uIdSubclass : LibC::UIntPtrT, pdwRefData : LibC::UIntPtrT*) : Win32cr::Foundation::BOOL
    C.GetWindowSubclass(hWnd, pfnSubclass, uIdSubclass, pdwRefData)
  end

  def removeWindowSubclass(hWnd : Win32cr::Foundation::HWND, pfnSubclass : Win32cr::UI::Shell::SUBCLASSPROC, uIdSubclass : LibC::UIntPtrT) : Win32cr::Foundation::BOOL
    C.RemoveWindowSubclass(hWnd, pfnSubclass, uIdSubclass)
  end

  def defSubclassProc(hWnd : Win32cr::Foundation::HWND, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
    C.DefSubclassProc(hWnd, uMsg, wParam, lParam)
  end

  def setWindowContextHelpId(param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::BOOL
    C.SetWindowContextHelpId(param0, param1)
  end

  def getWindowContextHelpId(param0 : Win32cr::Foundation::HWND) : UInt32
    C.GetWindowContextHelpId(param0)
  end

  def setMenuContextHelpId(param0 : Win32cr::UI::WindowsAndMessaging::HMENU, param1 : UInt32) : Win32cr::Foundation::BOOL
    C.SetMenuContextHelpId(param0, param1)
  end

  def getMenuContextHelpId(param0 : Win32cr::UI::WindowsAndMessaging::HMENU) : UInt32
    C.GetMenuContextHelpId(param0)
  end

  def winHelpA(hWndMain : Win32cr::Foundation::HWND, lpszHelp : Win32cr::Foundation::PSTR, uCommand : UInt32, dwData : LibC::UIntPtrT) : Win32cr::Foundation::BOOL
    C.WinHelpA(hWndMain, lpszHelp, uCommand, dwData)
  end

  def winHelpW(hWndMain : Win32cr::Foundation::HWND, lpszHelp : Win32cr::Foundation::PWSTR, uCommand : UInt32, dwData : LibC::UIntPtrT) : Win32cr::Foundation::BOOL
    C.WinHelpW(hWndMain, lpszHelp, uCommand, dwData)
  end

  def sHSimpleIDListFromPath(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::UI::Shell::Common::ITEMIDLIST*
    C.SHSimpleIDListFromPath(pszPath)
  end

  def sHCreateItemFromIDList(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateItemFromIDList(pidl, riid, ppv)
  end

  def sHCreateItemFromParsingName(pszPath : Win32cr::Foundation::PWSTR, pbc : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateItemFromParsingName(pszPath, pbc, riid, ppv)
  end

  def sHCreateItemWithParent(pidlParent : Win32cr::UI::Shell::Common::ITEMIDLIST*, psfParent : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, riid : LibC::GUID*, ppvItem : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateItemWithParent(pidlParent, psfParent, pidl, riid, ppvItem)
  end

  def sHCreateItemFromRelativeName(psiParent : Void*, pszName : Win32cr::Foundation::PWSTR, pbc : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateItemFromRelativeName(psiParent, pszName, pbc, riid, ppv)
  end

  def sHCreateItemInKnownFolder(kfid : LibC::GUID*, dwKFFlags : UInt32, pszItem : Win32cr::Foundation::PWSTR, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateItemInKnownFolder(kfid, dwKFFlags, pszItem, riid, ppv)
  end

  def sHGetIDListFromObject(punk : Void*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
    C.SHGetIDListFromObject(punk, ppidl)
  end

  def sHGetItemFromObject(punk : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHGetItemFromObject(punk, riid, ppv)
  end

  def sHGetNameFromIDList(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, sigdnName : Win32cr::UI::Shell::SIGDN, ppszName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.SHGetNameFromIDList(pidl, sigdnName, ppszName)
  end

  def sHGetItemFromDataObject(pdtobj : Void*, dwFlags : Win32cr::UI::Shell::DATAOBJ_GET_ITEM_FLAGS, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHGetItemFromDataObject(pdtobj, dwFlags, riid, ppv)
  end

  def sHCreateShellItemArray(pidlParent : Win32cr::UI::Shell::Common::ITEMIDLIST*, psf : Void*, cidl : UInt32, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, ppsiItemArray : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateShellItemArray(pidlParent, psf, cidl, ppidl, ppsiItemArray)
  end

  def sHCreateShellItemArrayFromDataObject(pdo : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateShellItemArrayFromDataObject(pdo, riid, ppv)
  end

  def sHCreateShellItemArrayFromIDLists(cidl : UInt32, rgpidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, ppsiItemArray : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateShellItemArrayFromIDLists(cidl, rgpidl, ppsiItemArray)
  end

  def sHCreateShellItemArrayFromShellItem(psi : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateShellItemArrayFromShellItem(psi, riid, ppv)
  end

  def sHCreateAssociationRegistration(riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateAssociationRegistration(riid, ppv)
  end

  def sHCreateDefaultExtractIcon(riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateDefaultExtractIcon(riid, ppv)
  end

  def setCurrentProcessExplicitAppUserModelID(app_id : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
    C.SetCurrentProcessExplicitAppUserModelID(app_id)
  end

  def getCurrentProcessExplicitAppUserModelID(app_id : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.GetCurrentProcessExplicitAppUserModelID(app_id)
  end

  def sHGetTemporaryPropertyForItem(psi : Void*, propkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, ppropvar : Win32cr::System::Com::StructuredStorage::PROPVARIANT*) : Win32cr::Foundation::HRESULT
    C.SHGetTemporaryPropertyForItem(psi, propkey, ppropvar)
  end

  def sHSetTemporaryPropertyForItem(psi : Void*, propkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, propvar : Win32cr::System::Com::StructuredStorage::PROPVARIANT*) : Win32cr::Foundation::HRESULT
    C.SHSetTemporaryPropertyForItem(psi, propkey, propvar)
  end

  def sHShowManageLibraryUI(psiLibrary : Void*, hwndOwner : Win32cr::Foundation::HWND, pszTitle : Win32cr::Foundation::PWSTR, pszInstruction : Win32cr::Foundation::PWSTR, lmdOptions : Win32cr::UI::Shell::LIBRARYMANAGEDIALOGOPTIONS) : Win32cr::Foundation::HRESULT
    C.SHShowManageLibraryUI(psiLibrary, hwndOwner, pszTitle, pszInstruction, lmdOptions)
  end

  def sHResolveLibrary(psiLibrary : Void*) : Win32cr::Foundation::HRESULT
    C.SHResolveLibrary(psiLibrary)
  end

  def sHAssocEnumHandlers(pszExtra : Win32cr::Foundation::PWSTR, afFilter : Win32cr::UI::Shell::ASSOC_FILTER, ppEnumHandler : Void**) : Win32cr::Foundation::HRESULT
    C.SHAssocEnumHandlers(pszExtra, afFilter, ppEnumHandler)
  end

  def sHAssocEnumHandlersForProtocolByApplication(protocol : Win32cr::Foundation::PWSTR, riid : LibC::GUID*, enumHandlers : Void**) : Win32cr::Foundation::HRESULT
    C.SHAssocEnumHandlersForProtocolByApplication(protocol, riid, enumHandlers)
  end

  def hMONITORUserSize(param0 : UInt32*, param1 : UInt32, param2 : Win32cr::Graphics::Gdi::HMONITOR*) : UInt32
    C.HMONITOR_UserSize(param0, param1, param2)
  end

  def hMONITORUserMarshal(param0 : UInt32*, param1 : UInt8*, param2 : Win32cr::Graphics::Gdi::HMONITOR*) : UInt8*
    C.HMONITOR_UserMarshal(param0, param1, param2)
  end

  def hMONITORUserUnmarshal(param0 : UInt32*, param1 : UInt8*, param2 : Win32cr::Graphics::Gdi::HMONITOR*) : UInt8*
    C.HMONITOR_UserUnmarshal(param0, param1, param2)
  end

  def hMONITORUserFree(param0 : UInt32*, param1 : Win32cr::Graphics::Gdi::HMONITOR*) : Void
    C.HMONITOR_UserFree(param0, param1)
  end

  def hMONITORUserSize64(param0 : UInt32*, param1 : UInt32, param2 : Win32cr::Graphics::Gdi::HMONITOR*) : UInt32
    C.HMONITOR_UserSize64(param0, param1, param2)
  end

  def hMONITORUserMarshal64(param0 : UInt32*, param1 : UInt8*, param2 : Win32cr::Graphics::Gdi::HMONITOR*) : UInt8*
    C.HMONITOR_UserMarshal64(param0, param1, param2)
  end

  def hMONITORUserUnmarshal64(param0 : UInt32*, param1 : UInt8*, param2 : Win32cr::Graphics::Gdi::HMONITOR*) : UInt8*
    C.HMONITOR_UserUnmarshal64(param0, param1, param2)
  end

  def hMONITORUserFree64(param0 : UInt32*, param1 : Win32cr::Graphics::Gdi::HMONITOR*) : Void
    C.HMONITOR_UserFree64(param0, param1)
  end

  def sHCreateDefaultPropertiesOp(psi : Void*, ppFileOp : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateDefaultPropertiesOp(psi, ppFileOp)
  end

  def sHSetDefaultProperties(hwnd : Win32cr::Foundation::HWND, psi : Void*, dwFileOpFlags : UInt32, pfops : Void*) : Win32cr::Foundation::HRESULT
    C.SHSetDefaultProperties(hwnd, psi, dwFileOpFlags, pfops)
  end

  def sHGetMalloc(ppMalloc : Void**) : Win32cr::Foundation::HRESULT
    C.SHGetMalloc(ppMalloc)
  end

  def sHAlloc(cb : LibC::UIntPtrT) : Void*
    C.SHAlloc(cb)
  end

  def sHFree(pv : Void*) : Void
    C.SHFree(pv)
  end

  def sHGetIconOverlayIndexA(pszIconPath : Win32cr::Foundation::PSTR, iIconIndex : Int32) : Int32
    C.SHGetIconOverlayIndexA(pszIconPath, iIconIndex)
  end

  def sHGetIconOverlayIndexW(pszIconPath : Win32cr::Foundation::PWSTR, iIconIndex : Int32) : Int32
    C.SHGetIconOverlayIndexW(pszIconPath, iIconIndex)
  end

  def iLClone(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::UI::Shell::Common::ITEMIDLIST*
    C.ILClone(pidl)
  end

  def iLCloneFirst(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::UI::Shell::Common::ITEMIDLIST*
    C.ILCloneFirst(pidl)
  end

  def iLCombine(pidl1 : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidl2 : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::UI::Shell::Common::ITEMIDLIST*
    C.ILCombine(pidl1, pidl2)
  end

  def iLFree(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Void
    C.ILFree(pidl)
  end

  def iLGetNext(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::UI::Shell::Common::ITEMIDLIST*
    C.ILGetNext(pidl)
  end

  def iLGetSize(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : UInt32
    C.ILGetSize(pidl)
  end

  def iLFindChild(pidlParent : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidlChild : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::UI::Shell::Common::ITEMIDLIST*
    C.ILFindChild(pidlParent, pidlChild)
  end

  def iLFindLastID(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::UI::Shell::Common::ITEMIDLIST*
    C.ILFindLastID(pidl)
  end

  def iLRemoveLastID(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::BOOL
    C.ILRemoveLastID(pidl)
  end

  def iLIsEqual(pidl1 : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidl2 : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::BOOL
    C.ILIsEqual(pidl1, pidl2)
  end

  def iLIsParent(pidl1 : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidl2 : Win32cr::UI::Shell::Common::ITEMIDLIST*, fImmediate : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL
    C.ILIsParent(pidl1, pidl2, fImmediate)
  end

  def iLSaveToStream(pstm : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
    C.ILSaveToStream(pstm, pidl)
  end

  def iLLoadFromStreamEx(pstm : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
    C.ILLoadFromStreamEx(pstm, pidl)
  end

  def iLCreateFromPathA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::UI::Shell::Common::ITEMIDLIST*
    C.ILCreateFromPathA(pszPath)
  end

  def iLCreateFromPathW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::UI::Shell::Common::ITEMIDLIST*
    C.ILCreateFromPathW(pszPath)
  end

  def sHILCreateFromPath(pszPath : Win32cr::Foundation::PWSTR, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, rgfInOut : UInt32*) : Win32cr::Foundation::HRESULT
    C.SHILCreateFromPath(pszPath, ppidl, rgfInOut)
  end

  def iLAppendID(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pmkid : Win32cr::UI::Shell::Common::SHITEMID*, fAppend : Win32cr::Foundation::BOOL) : Win32cr::UI::Shell::Common::ITEMIDLIST*
    C.ILAppendID(pidl, pmkid, fAppend)
  end

  def sHGetPathFromIDListEx(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszPath : UInt16*, cchPath : UInt32, uOpts : Int32) : Win32cr::Foundation::BOOL
    C.SHGetPathFromIDListEx(pidl, pszPath, cchPath, uOpts)
  end

  def sHGetPathFromIDListA(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszPath : UInt8*) : Win32cr::Foundation::BOOL
    C.SHGetPathFromIDListA(pidl, pszPath)
  end

  def sHGetPathFromIDListW(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszPath : UInt16*) : Win32cr::Foundation::BOOL
    C.SHGetPathFromIDListW(pidl, pszPath)
  end

  def sHCreateDirectory(hwnd : Win32cr::Foundation::HWND, pszPath : Win32cr::Foundation::PWSTR) : Int32
    C.SHCreateDirectory(hwnd, pszPath)
  end

  def sHCreateDirectoryExA(hwnd : Win32cr::Foundation::HWND, pszPath : Win32cr::Foundation::PSTR, psa : Win32cr::Security::SECURITY_ATTRIBUTES*) : Int32
    C.SHCreateDirectoryExA(hwnd, pszPath, psa)
  end

  def sHCreateDirectoryExW(hwnd : Win32cr::Foundation::HWND, pszPath : Win32cr::Foundation::PWSTR, psa : Win32cr::Security::SECURITY_ATTRIBUTES*) : Int32
    C.SHCreateDirectoryExW(hwnd, pszPath, psa)
  end

  def sHOpenFolderAndSelectItems(pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.SHOpenFolderAndSelectItems(pidlFolder, cidl, apidl, dwFlags)
  end

  def sHCreateShellItem(pidlParent : Win32cr::UI::Shell::Common::ITEMIDLIST*, psfParent : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppsi : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateShellItem(pidlParent, psfParent, pidl, ppsi)
  end

  def sHGetSpecialFolderLocation(hwnd : Win32cr::Foundation::HWND, csidl : Int32, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
    C.SHGetSpecialFolderLocation(hwnd, csidl, ppidl)
  end

  def sHCloneSpecialIDList(hwnd : Win32cr::Foundation::HWND, csidl : Int32, fCreate : Win32cr::Foundation::BOOL) : Win32cr::UI::Shell::Common::ITEMIDLIST*
    C.SHCloneSpecialIDList(hwnd, csidl, fCreate)
  end

  def sHGetSpecialFolderPathA(hwnd : Win32cr::Foundation::HWND, pszPath : UInt8*, csidl : Int32, fCreate : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL
    C.SHGetSpecialFolderPathA(hwnd, pszPath, csidl, fCreate)
  end

  def sHGetSpecialFolderPathW(hwnd : Win32cr::Foundation::HWND, pszPath : UInt16*, csidl : Int32, fCreate : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL
    C.SHGetSpecialFolderPathW(hwnd, pszPath, csidl, fCreate)
  end

  def sHFlushSFCache : Void
    C.SHFlushSFCache
  end

  def sHGetFolderPathA(hwnd : Win32cr::Foundation::HWND, csidl : Int32, hToken : Win32cr::Foundation::HANDLE, dwFlags : UInt32, pszPath : UInt8*) : Win32cr::Foundation::HRESULT
    C.SHGetFolderPathA(hwnd, csidl, hToken, dwFlags, pszPath)
  end

  def sHGetFolderPathW(hwnd : Win32cr::Foundation::HWND, csidl : Int32, hToken : Win32cr::Foundation::HANDLE, dwFlags : UInt32, pszPath : UInt16*) : Win32cr::Foundation::HRESULT
    C.SHGetFolderPathW(hwnd, csidl, hToken, dwFlags, pszPath)
  end

  def sHGetFolderLocation(hwnd : Win32cr::Foundation::HWND, csidl : Int32, hToken : Win32cr::Foundation::HANDLE, dwFlags : UInt32, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
    C.SHGetFolderLocation(hwnd, csidl, hToken, dwFlags, ppidl)
  end

  def sHSetFolderPathA(csidl : Int32, hToken : Win32cr::Foundation::HANDLE, dwFlags : UInt32, pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::HRESULT
    C.SHSetFolderPathA(csidl, hToken, dwFlags, pszPath)
  end

  def sHSetFolderPathW(csidl : Int32, hToken : Win32cr::Foundation::HANDLE, dwFlags : UInt32, pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
    C.SHSetFolderPathW(csidl, hToken, dwFlags, pszPath)
  end

  def sHGetFolderPathAndSubDirA(hwnd : Win32cr::Foundation::HWND, csidl : Int32, hToken : Win32cr::Foundation::HANDLE, dwFlags : UInt32, pszSubDir : Win32cr::Foundation::PSTR, pszPath : UInt8*) : Win32cr::Foundation::HRESULT
    C.SHGetFolderPathAndSubDirA(hwnd, csidl, hToken, dwFlags, pszSubDir, pszPath)
  end

  def sHGetFolderPathAndSubDirW(hwnd : Win32cr::Foundation::HWND, csidl : Int32, hToken : Win32cr::Foundation::HANDLE, dwFlags : UInt32, pszSubDir : Win32cr::Foundation::PWSTR, pszPath : UInt16*) : Win32cr::Foundation::HRESULT
    C.SHGetFolderPathAndSubDirW(hwnd, csidl, hToken, dwFlags, pszSubDir, pszPath)
  end

  def sHGetKnownFolderIDList(rfid : LibC::GUID*, dwFlags : UInt32, hToken : Win32cr::Foundation::HANDLE, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
    C.SHGetKnownFolderIDList(rfid, dwFlags, hToken, ppidl)
  end

  def sHSetKnownFolderPath(rfid : LibC::GUID*, dwFlags : UInt32, hToken : Win32cr::Foundation::HANDLE, pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
    C.SHSetKnownFolderPath(rfid, dwFlags, hToken, pszPath)
  end

  #def sHGetKnownFolderPath(rfid : LibC::GUID*, dwFlags : UInt32, hToken : Win32cr::Foundation::HANDLE, ppszPath : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    #C.SHGetKnownFolderPath(rfid, dwFlags, hToken, ppszPath)
  #end

  def sHGetKnownFolderItem(rfid : LibC::GUID*, flags : Win32cr::UI::Shell::KNOWN_FOLDER_FLAG, hToken : Win32cr::Foundation::HANDLE, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHGetKnownFolderItem(rfid, flags, hToken, riid, ppv)
  end

  def sHGetSetFolderCustomSettings(pfcs : Win32cr::UI::Shell::SHFOLDERCUSTOMSETTINGS*, pszPath : Win32cr::Foundation::PWSTR, dwReadWrite : UInt32) : Win32cr::Foundation::HRESULT
    C.SHGetSetFolderCustomSettings(pfcs, pszPath, dwReadWrite)
  end

  def sHBrowseForFolderA(lpbi : Win32cr::UI::Shell::BROWSEINFOA*) : Win32cr::UI::Shell::Common::ITEMIDLIST*
    C.SHBrowseForFolderA(lpbi)
  end

  def sHBrowseForFolderW(lpbi : Win32cr::UI::Shell::BROWSEINFOW*) : Win32cr::UI::Shell::Common::ITEMIDLIST*
    C.SHBrowseForFolderW(lpbi)
  end

  def sHLoadInProc(rclsid : LibC::GUID*) : Win32cr::Foundation::HRESULT
    C.SHLoadInProc(rclsid)
  end

  def sHGetDesktopFolder(ppshf : Void**) : Win32cr::Foundation::HRESULT
    C.SHGetDesktopFolder(ppshf)
  end

  def sHChangeNotify(wEventId : Win32cr::UI::Shell::SHCNE_ID, uFlags : Win32cr::UI::Shell::SHCNF_FLAGS, dwItem1 : Void*, dwItem2 : Void*) : Void
    C.SHChangeNotify(wEventId, uFlags, dwItem1, dwItem2)
  end

  def sHAddToRecentDocs(uFlags : UInt32, pv : Void*) : Void
    C.SHAddToRecentDocs(uFlags, pv)
  end

  def sHHandleUpdateImage(pidlExtra : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Int32
    C.SHHandleUpdateImage(pidlExtra)
  end

  def sHUpdateImageA(pszHashItem : Win32cr::Foundation::PSTR, iIndex : Int32, uFlags : UInt32, iImageIndex : Int32) : Void
    C.SHUpdateImageA(pszHashItem, iIndex, uFlags, iImageIndex)
  end

  def sHUpdateImageW(pszHashItem : Win32cr::Foundation::PWSTR, iIndex : Int32, uFlags : UInt32, iImageIndex : Int32) : Void
    C.SHUpdateImageW(pszHashItem, iIndex, uFlags, iImageIndex)
  end

  def sHChangeNotifyRegister(hwnd : Win32cr::Foundation::HWND, fSources : Win32cr::UI::Shell::SHCNRF_SOURCE, fEvents : Int32, wMsg : UInt32, cEntries : Int32, pshcne : Win32cr::UI::Shell::SHChangeNotifyEntry*) : UInt32
    C.SHChangeNotifyRegister(hwnd, fSources, fEvents, wMsg, cEntries, pshcne)
  end

  def sHChangeNotifyDeregister(ulID : UInt32) : Win32cr::Foundation::BOOL
    C.SHChangeNotifyDeregister(ulID)
  end

  def sHChangeNotificationLock(hChange : Win32cr::Foundation::HANDLE, dwProcId : UInt32, pppidl : Win32cr::UI::Shell::Common::ITEMIDLIST***, plEvent : Int32*) : Win32cr::UI::Shell::ShFindChangeNotificationHandle
    C.SHChangeNotification_Lock(hChange, dwProcId, pppidl, plEvent)
  end

  def sHChangeNotificationUnlock(hLock : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL
    C.SHChangeNotification_Unlock(hLock)
  end

  def sHGetRealIDL(psf : Void*, pidlSimple : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppidlReal : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
    C.SHGetRealIDL(psf, pidlSimple, ppidlReal)
  end

  def sHGetInstanceExplorer(ppunk : Void**) : Win32cr::Foundation::HRESULT
    C.SHGetInstanceExplorer(ppunk)
  end

  def sHGetDataFromIDListA(psf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, nFormat : Win32cr::UI::Shell::SHGDFIL_FORMAT, pv : Void*, cb : Int32) : Win32cr::Foundation::HRESULT
    C.SHGetDataFromIDListA(psf, pidl, nFormat, pv, cb)
  end

  def sHGetDataFromIDListW(psf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, nFormat : Win32cr::UI::Shell::SHGDFIL_FORMAT, pv : Void*, cb : Int32) : Win32cr::Foundation::HRESULT
    C.SHGetDataFromIDListW(psf, pidl, nFormat, pv, cb)
  end

  def restartDialog(hwnd : Win32cr::Foundation::HWND, pszPrompt : Win32cr::Foundation::PWSTR, dwReturn : UInt32) : Int32
    C.RestartDialog(hwnd, pszPrompt, dwReturn)
  end

  def restartDialogEx(hwnd : Win32cr::Foundation::HWND, pszPrompt : Win32cr::Foundation::PWSTR, dwReturn : UInt32, dwReasonCode : UInt32) : Int32
    C.RestartDialogEx(hwnd, pszPrompt, dwReturn, dwReasonCode)
  end

  def sHCoCreateInstance(pszCLSID : Win32cr::Foundation::PWSTR, pclsid : LibC::GUID*, pUnkOuter : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHCoCreateInstance(pszCLSID, pclsid, pUnkOuter, riid, ppv)
  end

  def sHCreateDataObject(pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, pdtInner : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateDataObject(pidlFolder, cidl, apidl, pdtInner, riid, ppv)
  end

  def cIDLDataCreateFromIDArray(pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, ppdtobj : Void**) : Win32cr::Foundation::HRESULT
    C.CIDLData_CreateFromIDArray(pidlFolder, cidl, apidl, ppdtobj)
  end

  def sHCreateStdEnumFmtEtc(cfmt : UInt32, afmt : Win32cr::System::Com::FORMATETC*, ppenumFormatEtc : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateStdEnumFmtEtc(cfmt, afmt, ppenumFormatEtc)
  end

  def sHDoDragDrop(hwnd : Win32cr::Foundation::HWND, pdata : Void*, pdsrc : Void*, dwEffect : Win32cr::System::Ole::DROPEFFECT, pdwEffect : Win32cr::System::Ole::DROPEFFECT*) : Win32cr::Foundation::HRESULT
    C.SHDoDragDrop(hwnd, pdata, pdsrc, dwEffect, pdwEffect)
  end

  def dADSetDragImage(him : Win32cr::UI::Controls::HIMAGELIST, pptOffset : Win32cr::Foundation::POINT*) : Win32cr::Foundation::BOOL
    C.DAD_SetDragImage(him, pptOffset)
  end

  def dADDragEnterEx(hwndTarget : Win32cr::Foundation::HWND, ptStart : Win32cr::Foundation::POINT) : Win32cr::Foundation::BOOL
    C.DAD_DragEnterEx(hwndTarget, ptStart)
  end

  def dADDragEnterEx2(hwndTarget : Win32cr::Foundation::HWND, ptStart : Win32cr::Foundation::POINT, pdtObject : Void*) : Win32cr::Foundation::BOOL
    C.DAD_DragEnterEx2(hwndTarget, ptStart, pdtObject)
  end

  def dADShowDragImage(fShow : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL
    C.DAD_ShowDragImage(fShow)
  end

  def dADDragMove(pt : Win32cr::Foundation::POINT) : Win32cr::Foundation::BOOL
    C.DAD_DragMove(pt)
  end

  def dADDragLeave : Win32cr::Foundation::BOOL
    C.DAD_DragLeave
  end

  def dADAutoScroll(hwnd : Win32cr::Foundation::HWND, pad : Win32cr::UI::Shell::AUTO_SCROLL_DATA*, pptNow : Win32cr::Foundation::POINT*) : Win32cr::Foundation::BOOL
    C.DAD_AutoScroll(hwnd, pad, pptNow)
  end

  def readCabinetState(pcs : Win32cr::UI::Shell::CABINETSTATE*, cLength : Int32) : Win32cr::Foundation::BOOL
    C.ReadCabinetState(pcs, cLength)
  end

  def writeCabinetState(pcs : Win32cr::UI::Shell::CABINETSTATE*) : Win32cr::Foundation::BOOL
    C.WriteCabinetState(pcs)
  end

  def pathMakeUniqueName(pszUniqueName : UInt16*, cchMax : UInt32, pszTemplate : Win32cr::Foundation::PWSTR, pszLongPlate : Win32cr::Foundation::PWSTR, pszDir : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathMakeUniqueName(pszUniqueName, cchMax, pszTemplate, pszLongPlate, pszDir)
  end

  def pathIsExe(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathIsExe(pszPath)
  end

  def pathCleanupSpec(pszDir : Win32cr::Foundation::PWSTR, pszSpec : Win32cr::Foundation::PWSTR) : Win32cr::UI::Shell::PCS_RET
    C.PathCleanupSpec(pszDir, pszSpec)
  end

  def pathResolve(pszPath : UInt16*, dirs : UInt16**, fFlags : Win32cr::UI::Shell::PRF_FLAGS) : Int32
    C.PathResolve(pszPath, dirs, fFlags)
  end

  def getFileNameFromBrowse(hwnd : Win32cr::Foundation::HWND, pszFilePath : UInt16*, cchFilePath : UInt32, pszWorkingDir : Win32cr::Foundation::PWSTR, pszDefExt : Win32cr::Foundation::PWSTR, pszFilters : Win32cr::Foundation::PWSTR, pszTitle : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.GetFileNameFromBrowse(hwnd, pszFilePath, cchFilePath, pszWorkingDir, pszDefExt, pszFilters, pszTitle)
  end

  def driveType(iDrive : Int32) : Int32
    C.DriveType(iDrive)
  end

  def realDriveType(iDrive : Int32, fOKToHitNet : Win32cr::Foundation::BOOL) : Int32
    C.RealDriveType(iDrive, fOKToHitNet)
  end

  def isNetDrive(iDrive : Int32) : Int32
    C.IsNetDrive(iDrive)
  end

  def shellMergeMenus(hmDst : Win32cr::UI::WindowsAndMessaging::HMENU, hmSrc : Win32cr::UI::WindowsAndMessaging::HMENU, uInsert : UInt32, uIDAdjust : UInt32, uIDAdjustMax : UInt32, uFlags : Win32cr::UI::Shell::MM_FLAGS) : UInt32
    C.Shell_MergeMenus(hmDst, hmSrc, uInsert, uIDAdjust, uIDAdjustMax, uFlags)
  end

  def sHObjectProperties(hwnd : Win32cr::Foundation::HWND, shopObjectType : Win32cr::UI::Shell::SHOP_TYPE, pszObjectName : Win32cr::Foundation::PWSTR, pszPropertyPage : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.SHObjectProperties(hwnd, shopObjectType, pszObjectName, pszPropertyPage)
  end

  def sHFormatDrive(hwnd : Win32cr::Foundation::HWND, drive : UInt32, fmtID : Win32cr::UI::Shell::SHFMT_ID, options : Win32cr::UI::Shell::SHFMT_OPT) : UInt32
    C.SHFormatDrive(hwnd, drive, fmtID, options)
  end

  def sHDestroyPropSheetExtArray(hpsxa : Win32cr::UI::Shell::HPSXA) : Void
    C.SHDestroyPropSheetExtArray(hpsxa)
  end

  def sHAddFromPropSheetExtArray(hpsxa : Win32cr::UI::Shell::HPSXA, lpfnAddPage : Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, lParam : Win32cr::Foundation::LPARAM) : UInt32
    C.SHAddFromPropSheetExtArray(hpsxa, lpfnAddPage, lParam)
  end

  def sHReplaceFromPropSheetExtArray(hpsxa : Win32cr::UI::Shell::HPSXA, uPageID : UInt32, lpfnReplaceWith : Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, lParam : Win32cr::Foundation::LPARAM) : UInt32
    C.SHReplaceFromPropSheetExtArray(hpsxa, uPageID, lpfnReplaceWith, lParam)
  end

  def openRegStream(hkey : Win32cr::System::Registry::HKEY, pszSubkey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, grfMode : UInt32) : Void*
    C.OpenRegStream(hkey, pszSubkey, pszValue, grfMode)
  end

  def sHFindFiles(pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidlSaveFile : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::BOOL
    C.SHFindFiles(pidlFolder, pidlSaveFile)
  end

  def pathGetShortPath(pszLongPath : UInt16*) : Void
    C.PathGetShortPath(pszLongPath)
  end

  def pathYetAnotherMakeUniqueName(pszUniqueName : UInt16*, pszPath : Win32cr::Foundation::PWSTR, pszShort : Win32cr::Foundation::PWSTR, pszFileSpec : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathYetAnotherMakeUniqueName(pszUniqueName, pszPath, pszShort, pszFileSpec)
  end

  def win32DeleteFile(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.Win32DeleteFile(pszPath)
  end

  def sHRestricted(rest : Win32cr::UI::Shell::RESTRICTIONS) : UInt32
    C.SHRestricted(rest)
  end

  def signalFileOpen(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::BOOL
    C.SignalFileOpen(pidl)
  end

  def assocGetDetailsOfPropKey(psf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, pv : Win32cr::System::Com::VARIANT*, pfFoundPropKey : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
    C.AssocGetDetailsOfPropKey(psf, pidl, pkey, pv, pfFoundPropKey)
  end

  def sHStartNetConnectionDialogW(hwnd : Win32cr::Foundation::HWND, pszRemoteName : Win32cr::Foundation::PWSTR, dwType : UInt32) : Win32cr::Foundation::HRESULT
    C.SHStartNetConnectionDialogW(hwnd, pszRemoteName, dwType)
  end

  def sHDefExtractIconA(pszIconFile : Win32cr::Foundation::PSTR, iIndex : Int32, uFlags : UInt32, phiconLarge : Win32cr::UI::WindowsAndMessaging::HICON*, phiconSmall : Win32cr::UI::WindowsAndMessaging::HICON*, nIconSize : UInt32) : Win32cr::Foundation::HRESULT
    C.SHDefExtractIconA(pszIconFile, iIndex, uFlags, phiconLarge, phiconSmall, nIconSize)
  end

  def sHDefExtractIconW(pszIconFile : Win32cr::Foundation::PWSTR, iIndex : Int32, uFlags : UInt32, phiconLarge : Win32cr::UI::WindowsAndMessaging::HICON*, phiconSmall : Win32cr::UI::WindowsAndMessaging::HICON*, nIconSize : UInt32) : Win32cr::Foundation::HRESULT
    C.SHDefExtractIconW(pszIconFile, iIndex, uFlags, phiconLarge, phiconSmall, nIconSize)
  end

  def sHOpenWithDialog(hwndParent : Win32cr::Foundation::HWND, poainfo : Win32cr::UI::Shell::OPENASINFO*) : Win32cr::Foundation::HRESULT
    C.SHOpenWithDialog(hwndParent, poainfo)
  end

  def shellGetImageLists(phiml : Win32cr::UI::Controls::HIMAGELIST*, phimlSmall : Win32cr::UI::Controls::HIMAGELIST*) : Win32cr::Foundation::BOOL
    C.Shell_GetImageLists(phiml, phimlSmall)
  end

  def shellGetCachedImageIndex(pwszIconPath : Win32cr::Foundation::PWSTR, iIconIndex : Int32, uIconFlags : UInt32) : Int32
    C.Shell_GetCachedImageIndex(pwszIconPath, iIconIndex, uIconFlags)
  end

  def shellGetCachedImageIndexA(pszIconPath : Win32cr::Foundation::PSTR, iIconIndex : Int32, uIconFlags : UInt32) : Int32
    C.Shell_GetCachedImageIndexA(pszIconPath, iIconIndex, uIconFlags)
  end

  def shellGetCachedImageIndexW(pszIconPath : Win32cr::Foundation::PWSTR, iIconIndex : Int32, uIconFlags : UInt32) : Int32
    C.Shell_GetCachedImageIndexW(pszIconPath, iIconIndex, uIconFlags)
  end

  def sHValidateUNC(hwndOwner : Win32cr::Foundation::HWND, pszFile : Win32cr::Foundation::PWSTR, fConnect : Win32cr::UI::Shell::VALIDATEUNC_OPTION) : Win32cr::Foundation::BOOL
    C.SHValidateUNC(hwndOwner, pszFile, fConnect)
  end

  def sHSetInstanceExplorer(punk : Void*) : Void
    C.SHSetInstanceExplorer(punk)
  end

  def isUserAnAdmin : Win32cr::Foundation::BOOL
    C.IsUserAnAdmin
  end

  def sHShellFolderViewMessage(hwndMain : Win32cr::Foundation::HWND, uMsg : UInt32, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
    C.SHShellFolderView_Message(hwndMain, uMsg, lParam)
  end

  def sHCreateShellFolderView(pcsfv : Win32cr::UI::Shell::SFV_CREATE*, ppsv : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateShellFolderView(pcsfv, ppsv)
  end

  def cDefFolderMenuCreate2(pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, hwnd : Win32cr::Foundation::HWND, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, psf : Void*, pfn : Win32cr::UI::Shell::LPFNDFMCALLBACK, nKeys : UInt32, ahkeys : Win32cr::System::Registry::HKEY*, ppcm : Void**) : Win32cr::Foundation::HRESULT
    C.CDefFolderMenu_Create2(pidlFolder, hwnd, cidl, apidl, psf, pfn, nKeys, ahkeys, ppcm)
  end

  def sHCreateDefaultContextMenu(pdcm : Win32cr::UI::Shell::DEFCONTEXTMENU*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateDefaultContextMenu(pdcm, riid, ppv)
  end

  def sHFindInitMenuPopup(hmenu : Win32cr::UI::WindowsAndMessaging::HMENU, hwndOwner : Win32cr::Foundation::HWND, idCmdFirst : UInt32, idCmdLast : UInt32) : Void*
    C.SHFind_InitMenuPopup(hmenu, hwndOwner, idCmdFirst, idCmdLast)
  end

  def sHCreateShellFolderViewEx(pcsfv : Win32cr::UI::Shell::CSFV*, ppsv : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateShellFolderViewEx(pcsfv, ppsv)
  end

  def sHGetSetSettings(lpss : Win32cr::UI::Shell::SHELLSTATEA*, dwMask : Win32cr::UI::Shell::SSF_MASK, bSet : Win32cr::Foundation::BOOL) : Void
    C.SHGetSetSettings(lpss, dwMask, bSet)
  end

  def sHGetSettings(psfs : Win32cr::UI::Shell::SHELLFLAGSTATE*, dwMask : UInt32) : Void
    C.SHGetSettings(psfs, dwMask)
  end

  def sHBindToParent(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, riid : LibC::GUID*, ppv : Void**, ppidlLast : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
    C.SHBindToParent(pidl, riid, ppv, ppidlLast)
  end

  def sHBindToFolderIDListParent(psfRoot : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, riid : LibC::GUID*, ppv : Void**, ppidlLast : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
    C.SHBindToFolderIDListParent(psfRoot, pidl, riid, ppv, ppidlLast)
  end

  def sHBindToFolderIDListParentEx(psfRoot : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppbc : Void*, riid : LibC::GUID*, ppv : Void**, ppidlLast : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
    C.SHBindToFolderIDListParentEx(psfRoot, pidl, ppbc, riid, ppv, ppidlLast)
  end

  def sHBindToObject(psf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pbc : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHBindToObject(psf, pidl, pbc, riid, ppv)
  end

  def sHParseDisplayName(pszName : Win32cr::Foundation::PWSTR, pbc : Void*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, sfgaoIn : UInt32, psfgaoOut : UInt32*) : Win32cr::Foundation::HRESULT
    C.SHParseDisplayName(pszName, pbc, ppidl, sfgaoIn, psfgaoOut)
  end

  def sHPathPrepareForWriteA(hwnd : Win32cr::Foundation::HWND, punkEnableModless : Void*, pszPath : Win32cr::Foundation::PSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.SHPathPrepareForWriteA(hwnd, punkEnableModless, pszPath, dwFlags)
  end

  def sHPathPrepareForWriteW(hwnd : Win32cr::Foundation::HWND, punkEnableModless : Void*, pszPath : Win32cr::Foundation::PWSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.SHPathPrepareForWriteW(hwnd, punkEnableModless, pszPath, dwFlags)
  end

  def sHCreateFileExtractIconW(pszFile : Win32cr::Foundation::PWSTR, dwFileAttributes : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateFileExtractIconW(pszFile, dwFileAttributes, riid, ppv)
  end

  def sHLimitInputEdit(hwndEdit : Win32cr::Foundation::HWND, psf : Void*) : Win32cr::Foundation::HRESULT
    C.SHLimitInputEdit(hwndEdit, psf)
  end

  def sHGetAttributesFromDataObject(pdo : Void*, dwAttributeMask : UInt32, pdwAttributes : UInt32*, pcItems : UInt32*) : Win32cr::Foundation::HRESULT
    C.SHGetAttributesFromDataObject(pdo, dwAttributeMask, pdwAttributes, pcItems)
  end

  def sHMapPIDLToSystemImageListIndex(pshf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, piIndexSel : Int32*) : Int32
    C.SHMapPIDLToSystemImageListIndex(pshf, pidl, piIndexSel)
  end

  def sHCLSIDFromString(psz : Win32cr::Foundation::PWSTR, pclsid : LibC::GUID*) : Win32cr::Foundation::HRESULT
    C.SHCLSIDFromString(psz, pclsid)
  end

  def pickIconDlg(hwnd : Win32cr::Foundation::HWND, pszIconPath : UInt16*, cchIconPath : UInt32, piIconIndex : Int32*) : Int32
    C.PickIconDlg(hwnd, pszIconPath, cchIconPath, piIconIndex)
  end

  def stgMakeUniqueName(pstgParent : Void*, pszFileSpec : Win32cr::Foundation::PWSTR, grfMode : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.StgMakeUniqueName(pstgParent, pszFileSpec, grfMode, riid, ppv)
  end

  def sHChangeNotifyRegisterThread(status : Win32cr::UI::Shell::SCNRT_STATUS) : Void
    C.SHChangeNotifyRegisterThread(status)
  end

  def pathQualify(psz : Win32cr::Foundation::PWSTR) : Void
    C.PathQualify(psz)
  end

  def pathIsSlowA(pszFile : Win32cr::Foundation::PSTR, dwAttr : UInt32) : Win32cr::Foundation::BOOL
    C.PathIsSlowA(pszFile, dwAttr)
  end

  def pathIsSlowW(pszFile : Win32cr::Foundation::PWSTR, dwAttr : UInt32) : Win32cr::Foundation::BOOL
    C.PathIsSlowW(pszFile, dwAttr)
  end

  def sHCreatePropSheetExtArray(hKey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PWSTR, max_iface : UInt32) : Win32cr::UI::Shell::HPSXA
    C.SHCreatePropSheetExtArray(hKey, pszSubKey, max_iface)
  end

  def sHOpenPropSheetW(pszCaption : Win32cr::Foundation::PWSTR, ahkeys : Win32cr::System::Registry::HKEY*, ckeys : UInt32, pclsidDefault : LibC::GUID*, pdtobj : Void*, psb : Void*, pStartPage : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.SHOpenPropSheetW(pszCaption, ahkeys, ckeys, pclsidDefault, pdtobj, psb, pStartPage)
  end

  def softwareUpdateMessageBox(hWnd : Win32cr::Foundation::HWND, pszDistUnit : Win32cr::Foundation::PWSTR, dwFlags : UInt32, psdi : Win32cr::System::Com::Urlmon::SOFTDISTINFO*) : UInt32
    C.SoftwareUpdateMessageBox(hWnd, pszDistUnit, dwFlags, psdi)
  end

  def sHMultiFileProperties(pdtobj : Void*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.SHMultiFileProperties(pdtobj, dwFlags)
  end

  def sHCreateQueryCancelAutoPlayMoniker(ppmoniker : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateQueryCancelAutoPlayMoniker(ppmoniker)
  end

  def importPrivacySettings(pszFilename : Win32cr::Foundation::PWSTR, pfParsePrivacyPreferences : Win32cr::Foundation::BOOL*, pfParsePerSiteRules : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::BOOL
    C.ImportPrivacySettings(pszFilename, pfParsePrivacyPreferences, pfParsePerSiteRules)
  end

  def getScaleFactorForDevice(deviceType : Win32cr::UI::Shell::DISPLAY_DEVICE_TYPE) : Win32cr::UI::Shell::Common::DEVICE_SCALE_FACTOR
    C.GetScaleFactorForDevice(deviceType)
  end

  def registerScaleChangeNotifications(displayDevice : Win32cr::UI::Shell::DISPLAY_DEVICE_TYPE, hwndNotify : Win32cr::Foundation::HWND, uMsgNotify : UInt32, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT
    C.RegisterScaleChangeNotifications(displayDevice, hwndNotify, uMsgNotify, pdwCookie)
  end

  def revokeScaleChangeNotifications(displayDevice : Win32cr::UI::Shell::DISPLAY_DEVICE_TYPE, dwCookie : UInt32) : Win32cr::Foundation::HRESULT
    C.RevokeScaleChangeNotifications(displayDevice, dwCookie)
  end

  def getScaleFactorForMonitor(hMon : Win32cr::Graphics::Gdi::HMONITOR, pScale : Win32cr::UI::Shell::Common::DEVICE_SCALE_FACTOR*) : Win32cr::Foundation::HRESULT
    C.GetScaleFactorForMonitor(hMon, pScale)
  end

  def registerScaleChangeEvent(hEvent : Win32cr::Foundation::HANDLE, pdwCookie : LibC::UIntPtrT*) : Win32cr::Foundation::HRESULT
    C.RegisterScaleChangeEvent(hEvent, pdwCookie)
  end

  def unregisterScaleChangeEvent(dwCookie : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
    C.UnregisterScaleChangeEvent(dwCookie)
  end

  def getDpiForShellUIComponent(param0 : Win32cr::UI::Shell::SHELL_UI_COMPONENT) : UInt32
    C.GetDpiForShellUIComponent(param0)
  end

  def commandLineToArgvW(lpCmdLine : Win32cr::Foundation::PWSTR, pNumArgs : Int32*) : Win32cr::Foundation::PWSTR*
    C.CommandLineToArgvW(lpCmdLine, pNumArgs)
  end

  def dragQueryFileA(hDrop : Win32cr::UI::Shell::HDROP, iFile : UInt32, lpszFile : UInt8*, cch : UInt32) : UInt32
    C.DragQueryFileA(hDrop, iFile, lpszFile, cch)
  end

  def dragQueryFileW(hDrop : Win32cr::UI::Shell::HDROP, iFile : UInt32, lpszFile : UInt16*, cch : UInt32) : UInt32
    C.DragQueryFileW(hDrop, iFile, lpszFile, cch)
  end

  def dragQueryPoint(hDrop : Win32cr::UI::Shell::HDROP, ppt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::BOOL
    C.DragQueryPoint(hDrop, ppt)
  end

  def dragFinish(hDrop : Win32cr::UI::Shell::HDROP) : Void
    C.DragFinish(hDrop)
  end

  def dragAcceptFiles(hWnd : Win32cr::Foundation::HWND, fAccept : Win32cr::Foundation::BOOL) : Void
    C.DragAcceptFiles(hWnd, fAccept)
  end

  def shellExecuteA(hwnd : Win32cr::Foundation::HWND, lpOperation : Win32cr::Foundation::PSTR, lpFile : Win32cr::Foundation::PSTR, lpParameters : Win32cr::Foundation::PSTR, lpDirectory : Win32cr::Foundation::PSTR, nShowCmd : Int32) : Win32cr::Foundation::HINSTANCE
    C.ShellExecuteA(hwnd, lpOperation, lpFile, lpParameters, lpDirectory, nShowCmd)
  end

  def shellExecuteW(hwnd : Win32cr::Foundation::HWND, lpOperation : Win32cr::Foundation::PWSTR, lpFile : Win32cr::Foundation::PWSTR, lpParameters : Win32cr::Foundation::PWSTR, lpDirectory : Win32cr::Foundation::PWSTR, nShowCmd : Int32) : Win32cr::Foundation::HINSTANCE
    C.ShellExecuteW(hwnd, lpOperation, lpFile, lpParameters, lpDirectory, nShowCmd)
  end

  def findExecutableA(lpFile : Win32cr::Foundation::PSTR, lpDirectory : Win32cr::Foundation::PSTR, lpResult : UInt8*) : Win32cr::Foundation::HINSTANCE
    C.FindExecutableA(lpFile, lpDirectory, lpResult)
  end

  def findExecutableW(lpFile : Win32cr::Foundation::PWSTR, lpDirectory : Win32cr::Foundation::PWSTR, lpResult : UInt16*) : Win32cr::Foundation::HINSTANCE
    C.FindExecutableW(lpFile, lpDirectory, lpResult)
  end

  def shellAboutA(hWnd : Win32cr::Foundation::HWND, szApp : Win32cr::Foundation::PSTR, szOtherStuff : Win32cr::Foundation::PSTR, hIcon : Win32cr::UI::WindowsAndMessaging::HICON) : Int32
    C.ShellAboutA(hWnd, szApp, szOtherStuff, hIcon)
  end

  def shellAboutW(hWnd : Win32cr::Foundation::HWND, szApp : Win32cr::Foundation::PWSTR, szOtherStuff : Win32cr::Foundation::PWSTR, hIcon : Win32cr::UI::WindowsAndMessaging::HICON) : Int32
    C.ShellAboutW(hWnd, szApp, szOtherStuff, hIcon)
  end

  def duplicateIcon(hInst : Win32cr::Foundation::HINSTANCE, hIcon : Win32cr::UI::WindowsAndMessaging::HICON) : Win32cr::UI::WindowsAndMessaging::HICON
    C.DuplicateIcon(hInst, hIcon)
  end

  def extractAssociatedIconA(hInst : Win32cr::Foundation::HINSTANCE, pszIconPath : UInt8*, piIcon : UInt16*) : Win32cr::UI::WindowsAndMessaging::HICON
    C.ExtractAssociatedIconA(hInst, pszIconPath, piIcon)
  end

  def extractAssociatedIconW(hInst : Win32cr::Foundation::HINSTANCE, pszIconPath : UInt16*, piIcon : UInt16*) : Win32cr::UI::WindowsAndMessaging::HICON
    C.ExtractAssociatedIconW(hInst, pszIconPath, piIcon)
  end

  def extractAssociatedIconExA(hInst : Win32cr::Foundation::HINSTANCE, pszIconPath : UInt8*, piIconIndex : UInt16*, piIconId : UInt16*) : Win32cr::UI::WindowsAndMessaging::HICON
    C.ExtractAssociatedIconExA(hInst, pszIconPath, piIconIndex, piIconId)
  end

  def extractAssociatedIconExW(hInst : Win32cr::Foundation::HINSTANCE, pszIconPath : UInt16*, piIconIndex : UInt16*, piIconId : UInt16*) : Win32cr::UI::WindowsAndMessaging::HICON
    C.ExtractAssociatedIconExW(hInst, pszIconPath, piIconIndex, piIconId)
  end

  def extractIconA(hInst : Win32cr::Foundation::HINSTANCE, pszExeFileName : Win32cr::Foundation::PSTR, nIconIndex : UInt32) : Win32cr::UI::WindowsAndMessaging::HICON
    C.ExtractIconA(hInst, pszExeFileName, nIconIndex)
  end

  def extractIconW(hInst : Win32cr::Foundation::HINSTANCE, pszExeFileName : Win32cr::Foundation::PWSTR, nIconIndex : UInt32) : Win32cr::UI::WindowsAndMessaging::HICON
    C.ExtractIconW(hInst, pszExeFileName, nIconIndex)
  end

  def sHAppBarMessage(dwMessage : UInt32, pData : Win32cr::UI::Shell::APPBARDATA*) : LibC::UIntPtrT
    C.SHAppBarMessage(dwMessage, pData)
  end

  def doEnvironmentSubstA(pszSrc : UInt8*, cchSrc : UInt32) : UInt32
    C.DoEnvironmentSubstA(pszSrc, cchSrc)
  end

  def doEnvironmentSubstW(pszSrc : UInt16*, cchSrc : UInt32) : UInt32
    C.DoEnvironmentSubstW(pszSrc, cchSrc)
  end

  def extractIconExA(lpszFile : Win32cr::Foundation::PSTR, nIconIndex : Int32, phiconLarge : Win32cr::UI::WindowsAndMessaging::HICON*, phiconSmall : Win32cr::UI::WindowsAndMessaging::HICON*, nIcons : UInt32) : UInt32
    C.ExtractIconExA(lpszFile, nIconIndex, phiconLarge, phiconSmall, nIcons)
  end

  def extractIconExW(lpszFile : Win32cr::Foundation::PWSTR, nIconIndex : Int32, phiconLarge : Win32cr::UI::WindowsAndMessaging::HICON*, phiconSmall : Win32cr::UI::WindowsAndMessaging::HICON*, nIcons : UInt32) : UInt32
    C.ExtractIconExW(lpszFile, nIconIndex, phiconLarge, phiconSmall, nIcons)
  end

  def sHFileOperationA(lpFileOp : Win32cr::UI::Shell::SHFILEOPSTRUCTA*) : Int32
    C.SHFileOperationA(lpFileOp)
  end

  def sHFileOperationW(lpFileOp : Win32cr::UI::Shell::SHFILEOPSTRUCTW*) : Int32
    C.SHFileOperationW(lpFileOp)
  end

  def sHFreeNameMappings(hNameMappings : Win32cr::Foundation::HANDLE) : Void
    C.SHFreeNameMappings(hNameMappings)
  end

  def shellExecuteExA(pExecInfo : Win32cr::UI::Shell::SHELLEXECUTEINFOA*) : Win32cr::Foundation::BOOL
    C.ShellExecuteExA(pExecInfo)
  end

  def shellExecuteExW(pExecInfo : Win32cr::UI::Shell::SHELLEXECUTEINFOW*) : Win32cr::Foundation::BOOL
    C.ShellExecuteExW(pExecInfo)
  end

  def sHCreateProcessAsUserW(pscpi : Win32cr::UI::Shell::SHCREATEPROCESSINFOW*) : Win32cr::Foundation::BOOL
    C.SHCreateProcessAsUserW(pscpi)
  end

  def sHEvaluateSystemCommandTemplate(pszCmdTemplate : Win32cr::Foundation::PWSTR, ppszApplication : Win32cr::Foundation::PWSTR*, ppszCommandLine : Win32cr::Foundation::PWSTR*, ppszParameters : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.SHEvaluateSystemCommandTemplate(pszCmdTemplate, ppszApplication, ppszCommandLine, ppszParameters)
  end

  def assocCreateForClasses(rgClasses : Win32cr::UI::Shell::ASSOCIATIONELEMENT*, cClasses : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.AssocCreateForClasses(rgClasses, cClasses, riid, ppv)
  end

  def sHQueryRecycleBinA(pszRootPath : Win32cr::Foundation::PSTR, pSHQueryRBInfo : Win32cr::UI::Shell::SHQUERYRBINFO*) : Win32cr::Foundation::HRESULT
    C.SHQueryRecycleBinA(pszRootPath, pSHQueryRBInfo)
  end

  def sHQueryRecycleBinW(pszRootPath : Win32cr::Foundation::PWSTR, pSHQueryRBInfo : Win32cr::UI::Shell::SHQUERYRBINFO*) : Win32cr::Foundation::HRESULT
    C.SHQueryRecycleBinW(pszRootPath, pSHQueryRBInfo)
  end

  def sHEmptyRecycleBinA(hwnd : Win32cr::Foundation::HWND, pszRootPath : Win32cr::Foundation::PSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.SHEmptyRecycleBinA(hwnd, pszRootPath, dwFlags)
  end

  def sHEmptyRecycleBinW(hwnd : Win32cr::Foundation::HWND, pszRootPath : Win32cr::Foundation::PWSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.SHEmptyRecycleBinW(hwnd, pszRootPath, dwFlags)
  end

  def sHQueryUserNotificationState(pquns : Win32cr::UI::Shell::QUERY_USER_NOTIFICATION_STATE*) : Win32cr::Foundation::HRESULT
    C.SHQueryUserNotificationState(pquns)
  end

  def shellNotifyIconA(dwMessage : Win32cr::UI::Shell::NOTIFY_ICON_MESSAGE, lpData : Win32cr::UI::Shell::NOTIFYICONDATAA*) : Win32cr::Foundation::BOOL
    C.Shell_NotifyIconA(dwMessage, lpData)
  end

  def shellNotifyIconW(dwMessage : Win32cr::UI::Shell::NOTIFY_ICON_MESSAGE, lpData : Win32cr::UI::Shell::NOTIFYICONDATAW*) : Win32cr::Foundation::BOOL
    C.Shell_NotifyIconW(dwMessage, lpData)
  end

  def shellNotifyIconGetRect(identifier : Win32cr::UI::Shell::NOTIFYICONIDENTIFIER*, iconLocation : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT
    C.Shell_NotifyIconGetRect(identifier, iconLocation)
  end

  def sHGetFileInfoA(pszPath : Win32cr::Foundation::PSTR, dwFileAttributes : Win32cr::Storage::FileSystem::FILE_FLAGS_AND_ATTRIBUTES, psfi : Win32cr::UI::Shell::SHFILEINFOA*, cbFileInfo : UInt32, uFlags : Win32cr::UI::Shell::SHGFI_FLAGS) : LibC::UIntPtrT
    C.SHGetFileInfoA(pszPath, dwFileAttributes, psfi, cbFileInfo, uFlags)
  end

  def sHGetFileInfoW(pszPath : Win32cr::Foundation::PWSTR, dwFileAttributes : Win32cr::Storage::FileSystem::FILE_FLAGS_AND_ATTRIBUTES, psfi : Win32cr::UI::Shell::SHFILEINFOW*, cbFileInfo : UInt32, uFlags : Win32cr::UI::Shell::SHGFI_FLAGS) : LibC::UIntPtrT
    C.SHGetFileInfoW(pszPath, dwFileAttributes, psfi, cbFileInfo, uFlags)
  end

  def sHGetStockIconInfo(siid : Win32cr::UI::Shell::SHSTOCKICONID, uFlags : UInt32, psii : Win32cr::UI::Shell::SHSTOCKICONINFO*) : Win32cr::Foundation::HRESULT
    C.SHGetStockIconInfo(siid, uFlags, psii)
  end

  def sHGetDiskFreeSpaceExA(pszDirectoryName : Win32cr::Foundation::PSTR, pulFreeBytesAvailableToCaller : Win32cr::Foundation::ULARGE_INTEGER*, pulTotalNumberOfBytes : Win32cr::Foundation::ULARGE_INTEGER*, pulTotalNumberOfFreeBytes : Win32cr::Foundation::ULARGE_INTEGER*) : Win32cr::Foundation::BOOL
    C.SHGetDiskFreeSpaceExA(pszDirectoryName, pulFreeBytesAvailableToCaller, pulTotalNumberOfBytes, pulTotalNumberOfFreeBytes)
  end

  def sHGetDiskFreeSpaceExW(pszDirectoryName : Win32cr::Foundation::PWSTR, pulFreeBytesAvailableToCaller : Win32cr::Foundation::ULARGE_INTEGER*, pulTotalNumberOfBytes : Win32cr::Foundation::ULARGE_INTEGER*, pulTotalNumberOfFreeBytes : Win32cr::Foundation::ULARGE_INTEGER*) : Win32cr::Foundation::BOOL
    C.SHGetDiskFreeSpaceExW(pszDirectoryName, pulFreeBytesAvailableToCaller, pulTotalNumberOfBytes, pulTotalNumberOfFreeBytes)
  end

  def sHGetNewLinkInfoA(pszLinkTo : Win32cr::Foundation::PSTR, pszDir : Win32cr::Foundation::PSTR, pszName : UInt8*, pfMustCopy : Win32cr::Foundation::BOOL*, uFlags : UInt32) : Win32cr::Foundation::BOOL
    C.SHGetNewLinkInfoA(pszLinkTo, pszDir, pszName, pfMustCopy, uFlags)
  end

  def sHGetNewLinkInfoW(pszLinkTo : Win32cr::Foundation::PWSTR, pszDir : Win32cr::Foundation::PWSTR, pszName : UInt16*, pfMustCopy : Win32cr::Foundation::BOOL*, uFlags : UInt32) : Win32cr::Foundation::BOOL
    C.SHGetNewLinkInfoW(pszLinkTo, pszDir, pszName, pfMustCopy, uFlags)
  end

  def sHInvokePrinterCommandA(hwnd : Win32cr::Foundation::HWND, uAction : UInt32, lpBuf1 : Win32cr::Foundation::PSTR, lpBuf2 : Win32cr::Foundation::PSTR, fModal : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL
    C.SHInvokePrinterCommandA(hwnd, uAction, lpBuf1, lpBuf2, fModal)
  end

  def sHInvokePrinterCommandW(hwnd : Win32cr::Foundation::HWND, uAction : UInt32, lpBuf1 : Win32cr::Foundation::PWSTR, lpBuf2 : Win32cr::Foundation::PWSTR, fModal : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL
    C.SHInvokePrinterCommandW(hwnd, uAction, lpBuf1, lpBuf2, fModal)
  end

  def sHLoadNonloadedIconOverlayIdentifiers : Win32cr::Foundation::HRESULT
    C.SHLoadNonloadedIconOverlayIdentifiers
  end

  def sHIsFileAvailableOffline(pwszPath : Win32cr::Foundation::PWSTR, pdwStatus : UInt32*) : Win32cr::Foundation::HRESULT
    C.SHIsFileAvailableOffline(pwszPath, pdwStatus)
  end

  def sHSetLocalizedName(pszPath : Win32cr::Foundation::PWSTR, pszResModule : Win32cr::Foundation::PWSTR, idsRes : Int32) : Win32cr::Foundation::HRESULT
    C.SHSetLocalizedName(pszPath, pszResModule, idsRes)
  end

  def sHRemoveLocalizedName(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
    C.SHRemoveLocalizedName(pszPath)
  end

  def sHGetLocalizedName(pszPath : Win32cr::Foundation::PWSTR, pszResModule : UInt16*, cch : UInt32, pidsRes : Int32*) : Win32cr::Foundation::HRESULT
    C.SHGetLocalizedName(pszPath, pszResModule, cch, pidsRes)
  end

  def shellMessageBoxA(hAppInst : Win32cr::Foundation::HINSTANCE, hWnd : Win32cr::Foundation::HWND, lpcText : Win32cr::Foundation::PSTR, lpcTitle : Win32cr::Foundation::PSTR, fuStyle : UInt32) : Int32
    C.ShellMessageBoxA(hAppInst, hWnd, lpcText, lpcTitle, fuStyle)
  end

  def shellMessageBoxW(hAppInst : Win32cr::Foundation::HINSTANCE, hWnd : Win32cr::Foundation::HWND, lpcText : Win32cr::Foundation::PWSTR, lpcTitle : Win32cr::Foundation::PWSTR, fuStyle : UInt32) : Int32
    C.ShellMessageBoxW(hAppInst, hWnd, lpcText, lpcTitle, fuStyle)
  end

  def isLFNDriveA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.IsLFNDriveA(pszPath)
  end

  def isLFNDriveW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.IsLFNDriveW(pszPath)
  end

  def sHEnumerateUnreadMailAccountsW(hKeyUser : Win32cr::System::Registry::HKEY, dwIndex : UInt32, pszMailAddress : UInt16*, cchMailAddress : Int32) : Win32cr::Foundation::HRESULT
    C.SHEnumerateUnreadMailAccountsW(hKeyUser, dwIndex, pszMailAddress, cchMailAddress)
  end

  def sHGetUnreadMailCountW(hKeyUser : Win32cr::System::Registry::HKEY, pszMailAddress : Win32cr::Foundation::PWSTR, pdwCount : UInt32*, pFileTime : Win32cr::Foundation::FILETIME*, pszShellExecuteCommand : UInt16*, cchShellExecuteCommand : Int32) : Win32cr::Foundation::HRESULT
    C.SHGetUnreadMailCountW(hKeyUser, pszMailAddress, pdwCount, pFileTime, pszShellExecuteCommand, cchShellExecuteCommand)
  end

  def sHSetUnreadMailCountW(pszMailAddress : Win32cr::Foundation::PWSTR, dwCount : UInt32, pszShellExecuteCommand : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
    C.SHSetUnreadMailCountW(pszMailAddress, dwCount, pszShellExecuteCommand)
  end

  def sHTestTokenMembership(hToken : Win32cr::Foundation::HANDLE, ulRID : UInt32) : Win32cr::Foundation::BOOL
    C.SHTestTokenMembership(hToken, ulRID)
  end

  def sHGetImageList(iImageList : Int32, riid : LibC::GUID*, ppvObj : Void**) : Win32cr::Foundation::HRESULT
    C.SHGetImageList(iImageList, riid, ppvObj)
  end

  def initNetworkAddressControl : Win32cr::Foundation::BOOL
    C.InitNetworkAddressControl
  end

  def sHGetDriveMedia(pszDrive : Win32cr::Foundation::PWSTR, pdwMediaContent : UInt32*) : Win32cr::Foundation::HRESULT
    C.SHGetDriveMedia(pszDrive, pdwMediaContent)
  end

  def strChrA(pszStart : Win32cr::Foundation::PSTR, wMatch : UInt16) : Win32cr::Foundation::PSTR
    C.StrChrA(pszStart, wMatch)
  end

  def strChrW(pszStart : Win32cr::Foundation::PWSTR, wMatch : UInt16) : Win32cr::Foundation::PWSTR
    C.StrChrW(pszStart, wMatch)
  end

  def strChrIA(pszStart : Win32cr::Foundation::PSTR, wMatch : UInt16) : Win32cr::Foundation::PSTR
    C.StrChrIA(pszStart, wMatch)
  end

  def strChrIW(pszStart : Win32cr::Foundation::PWSTR, wMatch : UInt16) : Win32cr::Foundation::PWSTR
    C.StrChrIW(pszStart, wMatch)
  end

  def strChrNW(pszStart : Win32cr::Foundation::PWSTR, wMatch : UInt16, cchMax : UInt32) : Win32cr::Foundation::PWSTR
    C.StrChrNW(pszStart, wMatch, cchMax)
  end

  def strChrNIW(pszStart : Win32cr::Foundation::PWSTR, wMatch : UInt16, cchMax : UInt32) : Win32cr::Foundation::PWSTR
    C.StrChrNIW(pszStart, wMatch, cchMax)
  end

  def strCmpNA(psz1 : Win32cr::Foundation::PSTR, psz2 : Win32cr::Foundation::PSTR, nChar : Int32) : Int32
    C.StrCmpNA(psz1, psz2, nChar)
  end

  def strCmpNW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR, nChar : Int32) : Int32
    C.StrCmpNW(psz1, psz2, nChar)
  end

  def strCmpNIA(psz1 : Win32cr::Foundation::PSTR, psz2 : Win32cr::Foundation::PSTR, nChar : Int32) : Int32
    C.StrCmpNIA(psz1, psz2, nChar)
  end

  def strCmpNIW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR, nChar : Int32) : Int32
    C.StrCmpNIW(psz1, psz2, nChar)
  end

  def strCSpnA(pszStr : Win32cr::Foundation::PSTR, pszSet : Win32cr::Foundation::PSTR) : Int32
    C.StrCSpnA(pszStr, pszSet)
  end

  def strCSpnW(pszStr : Win32cr::Foundation::PWSTR, pszSet : Win32cr::Foundation::PWSTR) : Int32
    C.StrCSpnW(pszStr, pszSet)
  end

  def strCSpnIA(pszStr : Win32cr::Foundation::PSTR, pszSet : Win32cr::Foundation::PSTR) : Int32
    C.StrCSpnIA(pszStr, pszSet)
  end

  def strCSpnIW(pszStr : Win32cr::Foundation::PWSTR, pszSet : Win32cr::Foundation::PWSTR) : Int32
    C.StrCSpnIW(pszStr, pszSet)
  end

  def strDupA(pszSrch : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR
    C.StrDupA(pszSrch)
  end

  def strDupW(pszSrch : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR
    C.StrDupW(pszSrch)
  end

  def strFormatByteSizeEx(ull : UInt64, flags : Win32cr::UI::Shell::SFBS_FLAGS, pszBuf : UInt16*, cchBuf : UInt32) : Win32cr::Foundation::HRESULT
    C.StrFormatByteSizeEx(ull, flags, pszBuf, cchBuf)
  end

  def strFormatByteSizeA(dw : UInt32, pszBuf : UInt8*, cchBuf : UInt32) : Win32cr::Foundation::PSTR
    C.StrFormatByteSizeA(dw, pszBuf, cchBuf)
  end

  def strFormatByteSize64A(qdw : Int64, pszBuf : UInt8*, cchBuf : UInt32) : Win32cr::Foundation::PSTR
    C.StrFormatByteSize64A(qdw, pszBuf, cchBuf)
  end

  def strFormatByteSizeW(qdw : Int64, pszBuf : UInt16*, cchBuf : UInt32) : Win32cr::Foundation::PWSTR
    C.StrFormatByteSizeW(qdw, pszBuf, cchBuf)
  end

  def strFormatKBSizeW(qdw : Int64, pszBuf : UInt16*, cchBuf : UInt32) : Win32cr::Foundation::PWSTR
    C.StrFormatKBSizeW(qdw, pszBuf, cchBuf)
  end

  def strFormatKBSizeA(qdw : Int64, pszBuf : UInt8*, cchBuf : UInt32) : Win32cr::Foundation::PSTR
    C.StrFormatKBSizeA(qdw, pszBuf, cchBuf)
  end

  def strFromTimeIntervalA(pszOut : UInt8*, cchMax : UInt32, dwTimeMS : UInt32, digits : Int32) : Int32
    C.StrFromTimeIntervalA(pszOut, cchMax, dwTimeMS, digits)
  end

  def strFromTimeIntervalW(pszOut : UInt16*, cchMax : UInt32, dwTimeMS : UInt32, digits : Int32) : Int32
    C.StrFromTimeIntervalW(pszOut, cchMax, dwTimeMS, digits)
  end

  def strIsIntlEqualA(fCaseSens : Win32cr::Foundation::BOOL, pszString1 : Win32cr::Foundation::PSTR, pszString2 : Win32cr::Foundation::PSTR, nChar : Int32) : Win32cr::Foundation::BOOL
    C.StrIsIntlEqualA(fCaseSens, pszString1, pszString2, nChar)
  end

  def strIsIntlEqualW(fCaseSens : Win32cr::Foundation::BOOL, pszString1 : Win32cr::Foundation::PWSTR, pszString2 : Win32cr::Foundation::PWSTR, nChar : Int32) : Win32cr::Foundation::BOOL
    C.StrIsIntlEqualW(fCaseSens, pszString1, pszString2, nChar)
  end

  def strNCatA(psz1 : UInt8*, psz2 : Win32cr::Foundation::PSTR, cchMax : Int32) : Win32cr::Foundation::PSTR
    C.StrNCatA(psz1, psz2, cchMax)
  end

  def strNCatW(psz1 : UInt16*, psz2 : Win32cr::Foundation::PWSTR, cchMax : Int32) : Win32cr::Foundation::PWSTR
    C.StrNCatW(psz1, psz2, cchMax)
  end

  def strPBrkA(psz : Win32cr::Foundation::PSTR, pszSet : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR
    C.StrPBrkA(psz, pszSet)
  end

  def strPBrkW(psz : Win32cr::Foundation::PWSTR, pszSet : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR
    C.StrPBrkW(psz, pszSet)
  end

  def strRChrA(pszStart : Win32cr::Foundation::PSTR, pszEnd : Win32cr::Foundation::PSTR, wMatch : UInt16) : Win32cr::Foundation::PSTR
    C.StrRChrA(pszStart, pszEnd, wMatch)
  end

  def strRChrW(pszStart : Win32cr::Foundation::PWSTR, pszEnd : Win32cr::Foundation::PWSTR, wMatch : UInt16) : Win32cr::Foundation::PWSTR
    C.StrRChrW(pszStart, pszEnd, wMatch)
  end

  def strRChrIA(pszStart : Win32cr::Foundation::PSTR, pszEnd : Win32cr::Foundation::PSTR, wMatch : UInt16) : Win32cr::Foundation::PSTR
    C.StrRChrIA(pszStart, pszEnd, wMatch)
  end

  def strRChrIW(pszStart : Win32cr::Foundation::PWSTR, pszEnd : Win32cr::Foundation::PWSTR, wMatch : UInt16) : Win32cr::Foundation::PWSTR
    C.StrRChrIW(pszStart, pszEnd, wMatch)
  end

  def strRStrIA(pszSource : Win32cr::Foundation::PSTR, pszLast : Win32cr::Foundation::PSTR, pszSrch : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR
    C.StrRStrIA(pszSource, pszLast, pszSrch)
  end

  def strRStrIW(pszSource : Win32cr::Foundation::PWSTR, pszLast : Win32cr::Foundation::PWSTR, pszSrch : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR
    C.StrRStrIW(pszSource, pszLast, pszSrch)
  end

  def strSpnA(psz : Win32cr::Foundation::PSTR, pszSet : Win32cr::Foundation::PSTR) : Int32
    C.StrSpnA(psz, pszSet)
  end

  def strSpnW(psz : Win32cr::Foundation::PWSTR, pszSet : Win32cr::Foundation::PWSTR) : Int32
    C.StrSpnW(psz, pszSet)
  end

  def strStrA(pszFirst : Win32cr::Foundation::PSTR, pszSrch : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR
    C.StrStrA(pszFirst, pszSrch)
  end

  def strStrW(pszFirst : Win32cr::Foundation::PWSTR, pszSrch : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR
    C.StrStrW(pszFirst, pszSrch)
  end

  def strStrIA(pszFirst : Win32cr::Foundation::PSTR, pszSrch : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR
    C.StrStrIA(pszFirst, pszSrch)
  end

  def strStrIW(pszFirst : Win32cr::Foundation::PWSTR, pszSrch : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR
    C.StrStrIW(pszFirst, pszSrch)
  end

  def strStrNW(pszFirst : Win32cr::Foundation::PWSTR, pszSrch : Win32cr::Foundation::PWSTR, cchMax : UInt32) : Win32cr::Foundation::PWSTR
    C.StrStrNW(pszFirst, pszSrch, cchMax)
  end

  def strStrNIW(pszFirst : Win32cr::Foundation::PWSTR, pszSrch : Win32cr::Foundation::PWSTR, cchMax : UInt32) : Win32cr::Foundation::PWSTR
    C.StrStrNIW(pszFirst, pszSrch, cchMax)
  end

  def strToIntA(pszSrc : Win32cr::Foundation::PSTR) : Int32
    C.StrToIntA(pszSrc)
  end

  def strToIntW(pszSrc : Win32cr::Foundation::PWSTR) : Int32
    C.StrToIntW(pszSrc)
  end

  def strToIntExA(pszString : Win32cr::Foundation::PSTR, dwFlags : Int32, piRet : Int32*) : Win32cr::Foundation::BOOL
    C.StrToIntExA(pszString, dwFlags, piRet)
  end

  def strToIntExW(pszString : Win32cr::Foundation::PWSTR, dwFlags : Int32, piRet : Int32*) : Win32cr::Foundation::BOOL
    C.StrToIntExW(pszString, dwFlags, piRet)
  end

  def strToInt64ExA(pszString : Win32cr::Foundation::PSTR, dwFlags : Int32, pllRet : Int64*) : Win32cr::Foundation::BOOL
    C.StrToInt64ExA(pszString, dwFlags, pllRet)
  end

  def strToInt64ExW(pszString : Win32cr::Foundation::PWSTR, dwFlags : Int32, pllRet : Int64*) : Win32cr::Foundation::BOOL
    C.StrToInt64ExW(pszString, dwFlags, pllRet)
  end

  def strTrimA(psz : Win32cr::Foundation::PSTR, pszTrimChars : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.StrTrimA(psz, pszTrimChars)
  end

  def strTrimW(psz : Win32cr::Foundation::PWSTR, pszTrimChars : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.StrTrimW(psz, pszTrimChars)
  end

  def strCatW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR
    C.StrCatW(psz1, psz2)
  end

  def strCmpW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR) : Int32
    C.StrCmpW(psz1, psz2)
  end

  def strCmpIW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR) : Int32
    C.StrCmpIW(psz1, psz2)
  end

  def strCpyW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR
    C.StrCpyW(psz1, psz2)
  end

  def strCpyNW(pszDst : UInt16*, pszSrc : Win32cr::Foundation::PWSTR, cchMax : Int32) : Win32cr::Foundation::PWSTR
    C.StrCpyNW(pszDst, pszSrc, cchMax)
  end

  def strCatBuffW(pszDest : UInt16*, pszSrc : Win32cr::Foundation::PWSTR, cchDestBuffSize : Int32) : Win32cr::Foundation::PWSTR
    C.StrCatBuffW(pszDest, pszSrc, cchDestBuffSize)
  end

  def strCatBuffA(pszDest : UInt8*, pszSrc : Win32cr::Foundation::PSTR, cchDestBuffSize : Int32) : Win32cr::Foundation::PSTR
    C.StrCatBuffA(pszDest, pszSrc, cchDestBuffSize)
  end

  def chrCmpIA(w1 : UInt16, w2 : UInt16) : Win32cr::Foundation::BOOL
    C.ChrCmpIA(w1, w2)
  end

  def chrCmpIW(w1 : UInt16, w2 : UInt16) : Win32cr::Foundation::BOOL
    C.ChrCmpIW(w1, w2)
  end

  def wvnsprintfA(pszDest : UInt8*, cchDest : Int32, pszFmt : Win32cr::Foundation::PSTR, arglist : Int8*) : Int32
    C.wvnsprintfA(pszDest, cchDest, pszFmt, arglist)
  end

  def wvnsprintfW(pszDest : UInt16*, cchDest : Int32, pszFmt : Win32cr::Foundation::PWSTR, arglist : Int8*) : Int32
    C.wvnsprintfW(pszDest, cchDest, pszFmt, arglist)
  end

  def wnsprintfA(pszDest : UInt8*, cchDest : Int32, pszFmt : Win32cr::Foundation::PSTR) : Int32
    C.wnsprintfA(pszDest, cchDest, pszFmt)
  end

  def wnsprintfW(pszDest : UInt16*, cchDest : Int32, pszFmt : Win32cr::Foundation::PWSTR) : Int32
    C.wnsprintfW(pszDest, cchDest, pszFmt)
  end

  def strRetToStrA(pstr : Win32cr::UI::Shell::Common::STRRET*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppsz : Win32cr::Foundation::PSTR*) : Win32cr::Foundation::HRESULT
    C.StrRetToStrA(pstr, pidl, ppsz)
  end

  def strRetToStrW(pstr : Win32cr::UI::Shell::Common::STRRET*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppsz : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.StrRetToStrW(pstr, pidl, ppsz)
  end

  def strRetToBufA(pstr : Win32cr::UI::Shell::Common::STRRET*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszBuf : UInt8*, cchBuf : UInt32) : Win32cr::Foundation::HRESULT
    C.StrRetToBufA(pstr, pidl, pszBuf, cchBuf)
  end

  def strRetToBufW(pstr : Win32cr::UI::Shell::Common::STRRET*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszBuf : UInt16*, cchBuf : UInt32) : Win32cr::Foundation::HRESULT
    C.StrRetToBufW(pstr, pidl, pszBuf, cchBuf)
  end

  def sHStrDupA(psz : Win32cr::Foundation::PSTR, ppwsz : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.SHStrDupA(psz, ppwsz)
  end

  def sHStrDupW(psz : Win32cr::Foundation::PWSTR, ppwsz : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.SHStrDupW(psz, ppwsz)
  end

  def strCmpLogicalW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR) : Int32
    C.StrCmpLogicalW(psz1, psz2)
  end

  def strCatChainW(pszDst : UInt16*, cchDst : UInt32, ichAt : UInt32, pszSrc : Win32cr::Foundation::PWSTR) : UInt32
    C.StrCatChainW(pszDst, cchDst, ichAt, pszSrc)
  end

  def strRetToBSTR(pstr : Win32cr::UI::Shell::Common::STRRET*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pbstr : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
    C.StrRetToBSTR(pstr, pidl, pbstr)
  end

  def sHLoadIndirectString(pszSource : Win32cr::Foundation::PWSTR, pszOutBuf : UInt16*, cchOutBuf : UInt32, ppvReserved : Void**) : Win32cr::Foundation::HRESULT
    C.SHLoadIndirectString(pszSource, pszOutBuf, cchOutBuf, ppvReserved)
  end

  def isCharSpaceA(wch : Win32cr::Foundation::CHAR) : Win32cr::Foundation::BOOL
    C.IsCharSpaceA(wch)
  end

  def isCharSpaceW(wch : UInt16) : Win32cr::Foundation::BOOL
    C.IsCharSpaceW(wch)
  end

  def strCmpCA(pszStr1 : Win32cr::Foundation::PSTR, pszStr2 : Win32cr::Foundation::PSTR) : Int32
    C.StrCmpCA(pszStr1, pszStr2)
  end

  def strCmpCW(pszStr1 : Win32cr::Foundation::PWSTR, pszStr2 : Win32cr::Foundation::PWSTR) : Int32
    C.StrCmpCW(pszStr1, pszStr2)
  end

  def strCmpICA(pszStr1 : Win32cr::Foundation::PSTR, pszStr2 : Win32cr::Foundation::PSTR) : Int32
    C.StrCmpICA(pszStr1, pszStr2)
  end

  def strCmpICW(pszStr1 : Win32cr::Foundation::PWSTR, pszStr2 : Win32cr::Foundation::PWSTR) : Int32
    C.StrCmpICW(pszStr1, pszStr2)
  end

  def strCmpNCA(pszStr1 : Win32cr::Foundation::PSTR, pszStr2 : Win32cr::Foundation::PSTR, nChar : Int32) : Int32
    C.StrCmpNCA(pszStr1, pszStr2, nChar)
  end

  def strCmpNCW(pszStr1 : Win32cr::Foundation::PWSTR, pszStr2 : Win32cr::Foundation::PWSTR, nChar : Int32) : Int32
    C.StrCmpNCW(pszStr1, pszStr2, nChar)
  end

  def strCmpNICA(pszStr1 : Win32cr::Foundation::PSTR, pszStr2 : Win32cr::Foundation::PSTR, nChar : Int32) : Int32
    C.StrCmpNICA(pszStr1, pszStr2, nChar)
  end

  def strCmpNICW(pszStr1 : Win32cr::Foundation::PWSTR, pszStr2 : Win32cr::Foundation::PWSTR, nChar : Int32) : Int32
    C.StrCmpNICW(pszStr1, pszStr2, nChar)
  end

  def intlStrEqWorkerA(fCaseSens : Win32cr::Foundation::BOOL, lpString1 : UInt8*, lpString2 : UInt8*, nChar : Int32) : Win32cr::Foundation::BOOL
    C.IntlStrEqWorkerA(fCaseSens, lpString1, lpString2, nChar)
  end

  def intlStrEqWorkerW(fCaseSens : Win32cr::Foundation::BOOL, lpString1 : UInt16*, lpString2 : UInt16*, nChar : Int32) : Win32cr::Foundation::BOOL
    C.IntlStrEqWorkerW(fCaseSens, lpString1, lpString2, nChar)
  end

  def pathAddBackslashA(pszPath : UInt8*) : Win32cr::Foundation::PSTR
    C.PathAddBackslashA(pszPath)
  end

  def pathAddBackslashW(pszPath : UInt16*) : Win32cr::Foundation::PWSTR
    C.PathAddBackslashW(pszPath)
  end

  def pathAddExtensionA(pszPath : UInt8*, pszExt : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathAddExtensionA(pszPath, pszExt)
  end

  def pathAddExtensionW(pszPath : UInt16*, pszExt : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathAddExtensionW(pszPath, pszExt)
  end

  def pathAppendA(pszPath : UInt8*, pszMore : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathAppendA(pszPath, pszMore)
  end

  def pathAppendW(pszPath : UInt16*, pszMore : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathAppendW(pszPath, pszMore)
  end

  def pathBuildRootA(pszRoot : UInt8*, iDrive : Int32) : Win32cr::Foundation::PSTR
    C.PathBuildRootA(pszRoot, iDrive)
  end

  def pathBuildRootW(pszRoot : UInt16*, iDrive : Int32) : Win32cr::Foundation::PWSTR
    C.PathBuildRootW(pszRoot, iDrive)
  end

  def pathCanonicalizeA(pszBuf : UInt8*, pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathCanonicalizeA(pszBuf, pszPath)
  end

  def pathCanonicalizeW(pszBuf : UInt16*, pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathCanonicalizeW(pszBuf, pszPath)
  end

  def pathCombineA(pszDest : UInt8*, pszDir : Win32cr::Foundation::PSTR, pszFile : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR
    C.PathCombineA(pszDest, pszDir, pszFile)
  end

  def pathCombineW(pszDest : UInt16*, pszDir : Win32cr::Foundation::PWSTR, pszFile : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR
    C.PathCombineW(pszDest, pszDir, pszFile)
  end

  def pathCompactPathA(hDC : Win32cr::Graphics::Gdi::HDC, pszPath : UInt8*, dx : UInt32) : Win32cr::Foundation::BOOL
    C.PathCompactPathA(hDC, pszPath, dx)
  end

  def pathCompactPathW(hDC : Win32cr::Graphics::Gdi::HDC, pszPath : UInt16*, dx : UInt32) : Win32cr::Foundation::BOOL
    C.PathCompactPathW(hDC, pszPath, dx)
  end

  def pathCompactPathExA(pszOut : UInt8*, pszSrc : Win32cr::Foundation::PSTR, cchMax : UInt32, dwFlags : UInt32) : Win32cr::Foundation::BOOL
    C.PathCompactPathExA(pszOut, pszSrc, cchMax, dwFlags)
  end

  def pathCompactPathExW(pszOut : UInt16*, pszSrc : Win32cr::Foundation::PWSTR, cchMax : UInt32, dwFlags : UInt32) : Win32cr::Foundation::BOOL
    C.PathCompactPathExW(pszOut, pszSrc, cchMax, dwFlags)
  end

  def pathCommonPrefixA(pszFile1 : Win32cr::Foundation::PSTR, pszFile2 : Win32cr::Foundation::PSTR, achPath : UInt8*) : Int32
    C.PathCommonPrefixA(pszFile1, pszFile2, achPath)
  end

  def pathCommonPrefixW(pszFile1 : Win32cr::Foundation::PWSTR, pszFile2 : Win32cr::Foundation::PWSTR, achPath : UInt16*) : Int32
    C.PathCommonPrefixW(pszFile1, pszFile2, achPath)
  end

  def pathFileExistsA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathFileExistsA(pszPath)
  end

  def pathFileExistsW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathFileExistsW(pszPath)
  end

  def pathFindExtensionA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR
    C.PathFindExtensionA(pszPath)
  end

  def pathFindExtensionW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR
    C.PathFindExtensionW(pszPath)
  end

  def pathFindFileNameA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR
    C.PathFindFileNameA(pszPath)
  end

  def pathFindFileNameW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR
    C.PathFindFileNameW(pszPath)
  end

  def pathFindNextComponentA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR
    C.PathFindNextComponentA(pszPath)
  end

  def pathFindNextComponentW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR
    C.PathFindNextComponentW(pszPath)
  end

  def pathFindOnPathA(pszPath : UInt8*, ppszOtherDirs : Int8**) : Win32cr::Foundation::BOOL
    C.PathFindOnPathA(pszPath, ppszOtherDirs)
  end

  def pathFindOnPathW(pszPath : UInt16*, ppszOtherDirs : UInt16**) : Win32cr::Foundation::BOOL
    C.PathFindOnPathW(pszPath, ppszOtherDirs)
  end

  def pathFindSuffixArrayA(pszPath : Win32cr::Foundation::PSTR, apszSuffix : Win32cr::Foundation::PSTR*, iArraySize : Int32) : Win32cr::Foundation::PSTR
    C.PathFindSuffixArrayA(pszPath, apszSuffix, iArraySize)
  end

  def pathFindSuffixArrayW(pszPath : Win32cr::Foundation::PWSTR, apszSuffix : Win32cr::Foundation::PWSTR*, iArraySize : Int32) : Win32cr::Foundation::PWSTR
    C.PathFindSuffixArrayW(pszPath, apszSuffix, iArraySize)
  end

  def pathGetArgsA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR
    C.PathGetArgsA(pszPath)
  end

  def pathGetArgsW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR
    C.PathGetArgsW(pszPath)
  end

  def pathIsLFNFileSpecA(pszName : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathIsLFNFileSpecA(pszName)
  end

  def pathIsLFNFileSpecW(pszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathIsLFNFileSpecW(pszName)
  end

  def pathGetCharTypeA(ch : UInt8) : UInt32
    C.PathGetCharTypeA(ch)
  end

  def pathGetCharTypeW(ch : UInt16) : UInt32
    C.PathGetCharTypeW(ch)
  end

  def pathGetDriveNumberA(pszPath : Win32cr::Foundation::PSTR) : Int32
    C.PathGetDriveNumberA(pszPath)
  end

  def pathGetDriveNumberW(pszPath : Win32cr::Foundation::PWSTR) : Int32
    C.PathGetDriveNumberW(pszPath)
  end

  def pathIsDirectoryA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathIsDirectoryA(pszPath)
  end

  def pathIsDirectoryW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathIsDirectoryW(pszPath)
  end

  def pathIsDirectoryEmptyA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathIsDirectoryEmptyA(pszPath)
  end

  def pathIsDirectoryEmptyW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathIsDirectoryEmptyW(pszPath)
  end

  def pathIsFileSpecA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathIsFileSpecA(pszPath)
  end

  def pathIsFileSpecW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathIsFileSpecW(pszPath)
  end

  def pathIsPrefixA(pszPrefix : Win32cr::Foundation::PSTR, pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathIsPrefixA(pszPrefix, pszPath)
  end

  def pathIsPrefixW(pszPrefix : Win32cr::Foundation::PWSTR, pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathIsPrefixW(pszPrefix, pszPath)
  end

  def pathIsRelativeA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathIsRelativeA(pszPath)
  end

  def pathIsRelativeW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathIsRelativeW(pszPath)
  end

  def pathIsRootA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathIsRootA(pszPath)
  end

  def pathIsRootW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathIsRootW(pszPath)
  end

  def pathIsSameRootA(pszPath1 : Win32cr::Foundation::PSTR, pszPath2 : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathIsSameRootA(pszPath1, pszPath2)
  end

  def pathIsSameRootW(pszPath1 : Win32cr::Foundation::PWSTR, pszPath2 : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathIsSameRootW(pszPath1, pszPath2)
  end

  def pathIsUNCA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathIsUNCA(pszPath)
  end

  def pathIsUNCW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathIsUNCW(pszPath)
  end

  def pathIsNetworkPathA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathIsNetworkPathA(pszPath)
  end

  def pathIsNetworkPathW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathIsNetworkPathW(pszPath)
  end

  def pathIsUNCServerA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathIsUNCServerA(pszPath)
  end

  def pathIsUNCServerW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathIsUNCServerW(pszPath)
  end

  def pathIsUNCServerShareA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathIsUNCServerShareA(pszPath)
  end

  def pathIsUNCServerShareW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathIsUNCServerShareW(pszPath)
  end

  def pathIsContentTypeA(pszPath : Win32cr::Foundation::PSTR, pszContentType : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathIsContentTypeA(pszPath, pszContentType)
  end

  def pathIsContentTypeW(pszPath : Win32cr::Foundation::PWSTR, pszContentType : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathIsContentTypeW(pszPath, pszContentType)
  end

  def pathIsURLA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathIsURLA(pszPath)
  end

  def pathIsURLW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathIsURLW(pszPath)
  end

  def pathMakePrettyA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathMakePrettyA(pszPath)
  end

  def pathMakePrettyW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathMakePrettyW(pszPath)
  end

  def pathMatchSpecA(pszFile : Win32cr::Foundation::PSTR, pszSpec : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathMatchSpecA(pszFile, pszSpec)
  end

  def pathMatchSpecW(pszFile : Win32cr::Foundation::PWSTR, pszSpec : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathMatchSpecW(pszFile, pszSpec)
  end

  def pathMatchSpecExA(pszFile : Win32cr::Foundation::PSTR, pszSpec : Win32cr::Foundation::PSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.PathMatchSpecExA(pszFile, pszSpec, dwFlags)
  end

  def pathMatchSpecExW(pszFile : Win32cr::Foundation::PWSTR, pszSpec : Win32cr::Foundation::PWSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.PathMatchSpecExW(pszFile, pszSpec, dwFlags)
  end

  def pathParseIconLocationA(pszIconFile : Win32cr::Foundation::PSTR) : Int32
    C.PathParseIconLocationA(pszIconFile)
  end

  def pathParseIconLocationW(pszIconFile : Win32cr::Foundation::PWSTR) : Int32
    C.PathParseIconLocationW(pszIconFile)
  end

  def pathQuoteSpacesA(lpsz : UInt8*) : Win32cr::Foundation::BOOL
    C.PathQuoteSpacesA(lpsz)
  end

  def pathQuoteSpacesW(lpsz : UInt16*) : Win32cr::Foundation::BOOL
    C.PathQuoteSpacesW(lpsz)
  end

  def pathRelativePathToA(pszPath : UInt8*, pszFrom : Win32cr::Foundation::PSTR, dwAttrFrom : UInt32, pszTo : Win32cr::Foundation::PSTR, dwAttrTo : UInt32) : Win32cr::Foundation::BOOL
    C.PathRelativePathToA(pszPath, pszFrom, dwAttrFrom, pszTo, dwAttrTo)
  end

  def pathRelativePathToW(pszPath : UInt16*, pszFrom : Win32cr::Foundation::PWSTR, dwAttrFrom : UInt32, pszTo : Win32cr::Foundation::PWSTR, dwAttrTo : UInt32) : Win32cr::Foundation::BOOL
    C.PathRelativePathToW(pszPath, pszFrom, dwAttrFrom, pszTo, dwAttrTo)
  end

  def pathRemoveArgsA(pszPath : Win32cr::Foundation::PSTR) : Void
    C.PathRemoveArgsA(pszPath)
  end

  def pathRemoveArgsW(pszPath : Win32cr::Foundation::PWSTR) : Void
    C.PathRemoveArgsW(pszPath)
  end

  def pathRemoveBackslashA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR
    C.PathRemoveBackslashA(pszPath)
  end

  def pathRemoveBackslashW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR
    C.PathRemoveBackslashW(pszPath)
  end

  def pathRemoveBlanksA(pszPath : Win32cr::Foundation::PSTR) : Void
    C.PathRemoveBlanksA(pszPath)
  end

  def pathRemoveBlanksW(pszPath : Win32cr::Foundation::PWSTR) : Void
    C.PathRemoveBlanksW(pszPath)
  end

  def pathRemoveExtensionA(pszPath : Win32cr::Foundation::PSTR) : Void
    C.PathRemoveExtensionA(pszPath)
  end

  def pathRemoveExtensionW(pszPath : Win32cr::Foundation::PWSTR) : Void
    C.PathRemoveExtensionW(pszPath)
  end

  def pathRemoveFileSpecA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathRemoveFileSpecA(pszPath)
  end

  def pathRemoveFileSpecW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathRemoveFileSpecW(pszPath)
  end

  def pathRenameExtensionA(pszPath : UInt8*, pszExt : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathRenameExtensionA(pszPath, pszExt)
  end

  def pathRenameExtensionW(pszPath : UInt16*, pszExt : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathRenameExtensionW(pszPath, pszExt)
  end

  def pathSearchAndQualifyA(pszPath : Win32cr::Foundation::PSTR, pszBuf : UInt8*, cchBuf : UInt32) : Win32cr::Foundation::BOOL
    C.PathSearchAndQualifyA(pszPath, pszBuf, cchBuf)
  end

  def pathSearchAndQualifyW(pszPath : Win32cr::Foundation::PWSTR, pszBuf : UInt16*, cchBuf : UInt32) : Win32cr::Foundation::BOOL
    C.PathSearchAndQualifyW(pszPath, pszBuf, cchBuf)
  end

  def pathSetDlgItemPathA(hDlg : Win32cr::Foundation::HWND, id : Int32, pszPath : Win32cr::Foundation::PSTR) : Void
    C.PathSetDlgItemPathA(hDlg, id, pszPath)
  end

  def pathSetDlgItemPathW(hDlg : Win32cr::Foundation::HWND, id : Int32, pszPath : Win32cr::Foundation::PWSTR) : Void
    C.PathSetDlgItemPathW(hDlg, id, pszPath)
  end

  def pathSkipRootA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR
    C.PathSkipRootA(pszPath)
  end

  def pathSkipRootW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR
    C.PathSkipRootW(pszPath)
  end

  def pathStripPathA(pszPath : Win32cr::Foundation::PSTR) : Void
    C.PathStripPathA(pszPath)
  end

  def pathStripPathW(pszPath : Win32cr::Foundation::PWSTR) : Void
    C.PathStripPathW(pszPath)
  end

  def pathStripToRootA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathStripToRootA(pszPath)
  end

  def pathStripToRootW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathStripToRootW(pszPath)
  end

  def pathUnquoteSpacesA(lpsz : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathUnquoteSpacesA(lpsz)
  end

  def pathUnquoteSpacesW(lpsz : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathUnquoteSpacesW(lpsz)
  end

  def pathMakeSystemFolderA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathMakeSystemFolderA(pszPath)
  end

  def pathMakeSystemFolderW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathMakeSystemFolderW(pszPath)
  end

  def pathUnmakeSystemFolderA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.PathUnmakeSystemFolderA(pszPath)
  end

  def pathUnmakeSystemFolderW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathUnmakeSystemFolderW(pszPath)
  end

  def pathIsSystemFolderA(pszPath : Win32cr::Foundation::PSTR, dwAttrb : UInt32) : Win32cr::Foundation::BOOL
    C.PathIsSystemFolderA(pszPath, dwAttrb)
  end

  def pathIsSystemFolderW(pszPath : Win32cr::Foundation::PWSTR, dwAttrb : UInt32) : Win32cr::Foundation::BOOL
    C.PathIsSystemFolderW(pszPath, dwAttrb)
  end

  def pathUndecorateA(pszPath : Win32cr::Foundation::PSTR) : Void
    C.PathUndecorateA(pszPath)
  end

  def pathUndecorateW(pszPath : Win32cr::Foundation::PWSTR) : Void
    C.PathUndecorateW(pszPath)
  end

  def pathUnExpandEnvStringsA(pszPath : Win32cr::Foundation::PSTR, pszBuf : UInt8*, cchBuf : UInt32) : Win32cr::Foundation::BOOL
    C.PathUnExpandEnvStringsA(pszPath, pszBuf, cchBuf)
  end

  def pathUnExpandEnvStringsW(pszPath : Win32cr::Foundation::PWSTR, pszBuf : UInt16*, cchBuf : UInt32) : Win32cr::Foundation::BOOL
    C.PathUnExpandEnvStringsW(pszPath, pszBuf, cchBuf)
  end

  def urlCompareA(psz1 : Win32cr::Foundation::PSTR, psz2 : Win32cr::Foundation::PSTR, fIgnoreSlash : Win32cr::Foundation::BOOL) : Int32
    C.UrlCompareA(psz1, psz2, fIgnoreSlash)
  end

  def urlCompareW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR, fIgnoreSlash : Win32cr::Foundation::BOOL) : Int32
    C.UrlCompareW(psz1, psz2, fIgnoreSlash)
  end

  def urlCombineA(pszBase : Win32cr::Foundation::PSTR, pszRelative : Win32cr::Foundation::PSTR, pszCombined : UInt8*, pcchCombined : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlCombineA(pszBase, pszRelative, pszCombined, pcchCombined, dwFlags)
  end

  def urlCombineW(pszBase : Win32cr::Foundation::PWSTR, pszRelative : Win32cr::Foundation::PWSTR, pszCombined : UInt16*, pcchCombined : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlCombineW(pszBase, pszRelative, pszCombined, pcchCombined, dwFlags)
  end

  def urlCanonicalizeA(pszUrl : Win32cr::Foundation::PSTR, pszCanonicalized : UInt8*, pcchCanonicalized : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlCanonicalizeA(pszUrl, pszCanonicalized, pcchCanonicalized, dwFlags)
  end

  def urlCanonicalizeW(pszUrl : Win32cr::Foundation::PWSTR, pszCanonicalized : UInt16*, pcchCanonicalized : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlCanonicalizeW(pszUrl, pszCanonicalized, pcchCanonicalized, dwFlags)
  end

  def urlIsOpaqueA(pszURL : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.UrlIsOpaqueA(pszURL)
  end

  def urlIsOpaqueW(pszURL : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.UrlIsOpaqueW(pszURL)
  end

  def urlIsNoHistoryA(pszURL : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL
    C.UrlIsNoHistoryA(pszURL)
  end

  def urlIsNoHistoryW(pszURL : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.UrlIsNoHistoryW(pszURL)
  end

  def urlIsA(pszUrl : Win32cr::Foundation::PSTR, url_is : Win32cr::UI::Shell::URLIS) : Win32cr::Foundation::BOOL
    C.UrlIsA(pszUrl, url_is)
  end

  def urlIsW(pszUrl : Win32cr::Foundation::PWSTR, url_is : Win32cr::UI::Shell::URLIS) : Win32cr::Foundation::BOOL
    C.UrlIsW(pszUrl, url_is)
  end

  def urlGetLocationA(pszURL : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR
    C.UrlGetLocationA(pszURL)
  end

  def urlGetLocationW(pszURL : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR
    C.UrlGetLocationW(pszURL)
  end

  def urlUnescapeA(pszUrl : Win32cr::Foundation::PSTR, pszUnescaped : UInt8*, pcchUnescaped : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlUnescapeA(pszUrl, pszUnescaped, pcchUnescaped, dwFlags)
  end

  def urlUnescapeW(pszUrl : Win32cr::Foundation::PWSTR, pszUnescaped : UInt16*, pcchUnescaped : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlUnescapeW(pszUrl, pszUnescaped, pcchUnescaped, dwFlags)
  end

  def urlEscapeA(pszUrl : Win32cr::Foundation::PSTR, pszEscaped : UInt8*, pcchEscaped : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlEscapeA(pszUrl, pszEscaped, pcchEscaped, dwFlags)
  end

  def urlEscapeW(pszUrl : Win32cr::Foundation::PWSTR, pszEscaped : UInt16*, pcchEscaped : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlEscapeW(pszUrl, pszEscaped, pcchEscaped, dwFlags)
  end

  def urlCreateFromPathA(pszPath : Win32cr::Foundation::PSTR, pszUrl : UInt8*, pcchUrl : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlCreateFromPathA(pszPath, pszUrl, pcchUrl, dwFlags)
  end

  def urlCreateFromPathW(pszPath : Win32cr::Foundation::PWSTR, pszUrl : UInt16*, pcchUrl : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlCreateFromPathW(pszPath, pszUrl, pcchUrl, dwFlags)
  end

  def pathCreateFromUrlA(pszUrl : Win32cr::Foundation::PSTR, pszPath : UInt8*, pcchPath : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.PathCreateFromUrlA(pszUrl, pszPath, pcchPath, dwFlags)
  end

  def pathCreateFromUrlW(pszUrl : Win32cr::Foundation::PWSTR, pszPath : UInt16*, pcchPath : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.PathCreateFromUrlW(pszUrl, pszPath, pcchPath, dwFlags)
  end

  def pathCreateFromUrlAlloc(pszIn : Win32cr::Foundation::PWSTR, ppszOut : Win32cr::Foundation::PWSTR*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.PathCreateFromUrlAlloc(pszIn, ppszOut, dwFlags)
  end

  def urlHashA(pszUrl : Win32cr::Foundation::PSTR, pbHash : UInt8*, cbHash : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlHashA(pszUrl, pbHash, cbHash)
  end

  def urlHashW(pszUrl : Win32cr::Foundation::PWSTR, pbHash : UInt8*, cbHash : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlHashW(pszUrl, pbHash, cbHash)
  end

  def urlGetPartW(pszIn : Win32cr::Foundation::PWSTR, pszOut : UInt16*, pcchOut : UInt32*, dwPart : UInt32, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlGetPartW(pszIn, pszOut, pcchOut, dwPart, dwFlags)
  end

  def urlGetPartA(pszIn : Win32cr::Foundation::PSTR, pszOut : UInt8*, pcchOut : UInt32*, dwPart : UInt32, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlGetPartA(pszIn, pszOut, pcchOut, dwPart, dwFlags)
  end

  def urlApplySchemeA(pszIn : Win32cr::Foundation::PSTR, pszOut : UInt8*, pcchOut : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlApplySchemeA(pszIn, pszOut, pcchOut, dwFlags)
  end

  def urlApplySchemeW(pszIn : Win32cr::Foundation::PWSTR, pszOut : UInt16*, pcchOut : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlApplySchemeW(pszIn, pszOut, pcchOut, dwFlags)
  end

  def hashData(pbData : UInt8*, cbData : UInt32, pbHash : UInt8*, cbHash : UInt32) : Win32cr::Foundation::HRESULT
    C.HashData(pbData, cbData, pbHash, cbHash)
  end

  def urlFixupW(pcszUrl : Win32cr::Foundation::PWSTR, pszTranslatedUrl : UInt16*, cchMax : UInt32) : Win32cr::Foundation::HRESULT
    C.UrlFixupW(pcszUrl, pszTranslatedUrl, cchMax)
  end

  def parseURLA(pcszURL : Win32cr::Foundation::PSTR, ppu : Win32cr::UI::Shell::PARSEDURLA*) : Win32cr::Foundation::HRESULT
    C.ParseURLA(pcszURL, ppu)
  end

  def parseURLW(pcszURL : Win32cr::Foundation::PWSTR, ppu : Win32cr::UI::Shell::PARSEDURLW*) : Win32cr::Foundation::HRESULT
    C.ParseURLW(pcszURL, ppu)
  end

  def sHDeleteEmptyKeyA(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PSTR) : Win32cr::Foundation::WIN32_ERROR
    C.SHDeleteEmptyKeyA(hkey, pszSubKey)
  end

  def sHDeleteEmptyKeyW(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::WIN32_ERROR
    C.SHDeleteEmptyKeyW(hkey, pszSubKey)
  end

  def sHDeleteKeyA(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PSTR) : Win32cr::Foundation::WIN32_ERROR
    C.SHDeleteKeyA(hkey, pszSubKey)
  end

  def sHDeleteKeyW(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::WIN32_ERROR
    C.SHDeleteKeyW(hkey, pszSubKey)
  end

  def sHRegDuplicateHKey(hkey : Win32cr::System::Registry::HKEY) : Win32cr::System::Registry::HKEY
    C.SHRegDuplicateHKey(hkey)
  end

  def sHDeleteValueA(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR) : Win32cr::Foundation::WIN32_ERROR
    C.SHDeleteValueA(hkey, pszSubKey, pszValue)
  end

  def sHDeleteValueW(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::WIN32_ERROR
    C.SHDeleteValueW(hkey, pszSubKey, pszValue)
  end

  def sHGetValueA(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR
    C.SHGetValueA(hkey, pszSubKey, pszValue, pdwType, pvData, pcbData)
  end

  def sHGetValueW(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR
    C.SHGetValueW(hkey, pszSubKey, pszValue, pdwType, pvData, pcbData)
  end

  def sHSetValueA(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, dwType : UInt32, pvData : Void*, cbData : UInt32) : Int32
    C.SHSetValueA(hkey, pszSubKey, pszValue, dwType, pvData, cbData)
  end

  def sHSetValueW(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, dwType : UInt32, pvData : Void*, cbData : UInt32) : Int32
    C.SHSetValueW(hkey, pszSubKey, pszValue, dwType, pvData, cbData)
  end

  def sHRegGetValueA(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, srrfFlags : Int32, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegGetValueA(hkey, pszSubKey, pszValue, srrfFlags, pdwType, pvData, pcbData)
  end

  def sHRegGetValueW(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, srrfFlags : Int32, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegGetValueW(hkey, pszSubKey, pszValue, srrfFlags, pdwType, pvData, pcbData)
  end

  def sHRegGetValueFromHKCUHKLM(pwszKey : Win32cr::Foundation::PWSTR, pwszValue : Win32cr::Foundation::PWSTR, srrfFlags : Int32, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegGetValueFromHKCUHKLM(pwszKey, pwszValue, srrfFlags, pdwType, pvData, pcbData)
  end

  def sHQueryValueExA(hkey : Win32cr::System::Registry::HKEY, pszValue : Win32cr::Foundation::PSTR, pdwReserved : UInt32*, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR
    C.SHQueryValueExA(hkey, pszValue, pdwReserved, pdwType, pvData, pcbData)
  end

  def sHQueryValueExW(hkey : Win32cr::System::Registry::HKEY, pszValue : Win32cr::Foundation::PWSTR, pdwReserved : UInt32*, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR
    C.SHQueryValueExW(hkey, pszValue, pdwReserved, pdwType, pvData, pcbData)
  end

  def sHEnumKeyExA(hkey : Win32cr::System::Registry::HKEY, dwIndex : UInt32, pszName : UInt8*, pcchName : UInt32*) : Win32cr::Foundation::WIN32_ERROR
    C.SHEnumKeyExA(hkey, dwIndex, pszName, pcchName)
  end

  def sHEnumKeyExW(hkey : Win32cr::System::Registry::HKEY, dwIndex : UInt32, pszName : UInt16*, pcchName : UInt32*) : Win32cr::Foundation::WIN32_ERROR
    C.SHEnumKeyExW(hkey, dwIndex, pszName, pcchName)
  end

  def sHEnumValueA(hkey : Win32cr::System::Registry::HKEY, dwIndex : UInt32, pszValueName : UInt8*, pcchValueName : UInt32*, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR
    C.SHEnumValueA(hkey, dwIndex, pszValueName, pcchValueName, pdwType, pvData, pcbData)
  end

  def sHEnumValueW(hkey : Win32cr::System::Registry::HKEY, dwIndex : UInt32, pszValueName : UInt16*, pcchValueName : UInt32*, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR
    C.SHEnumValueW(hkey, dwIndex, pszValueName, pcchValueName, pdwType, pvData, pcbData)
  end

  def sHQueryInfoKeyA(hkey : Win32cr::System::Registry::HKEY, pcSubKeys : UInt32*, pcchMaxSubKeyLen : UInt32*, pcValues : UInt32*, pcchMaxValueNameLen : UInt32*) : Win32cr::Foundation::WIN32_ERROR
    C.SHQueryInfoKeyA(hkey, pcSubKeys, pcchMaxSubKeyLen, pcValues, pcchMaxValueNameLen)
  end

  def sHQueryInfoKeyW(hkey : Win32cr::System::Registry::HKEY, pcSubKeys : UInt32*, pcchMaxSubKeyLen : UInt32*, pcValues : UInt32*, pcchMaxValueNameLen : UInt32*) : Win32cr::Foundation::WIN32_ERROR
    C.SHQueryInfoKeyW(hkey, pcSubKeys, pcchMaxSubKeyLen, pcValues, pcchMaxValueNameLen)
  end

  def sHCopyKeyA(hkeySrc : Win32cr::System::Registry::HKEY, pszSrcSubKey : Win32cr::Foundation::PSTR, hkeyDest : Win32cr::System::Registry::HKEY, fReserved : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHCopyKeyA(hkeySrc, pszSrcSubKey, hkeyDest, fReserved)
  end

  def sHCopyKeyW(hkeySrc : Win32cr::System::Registry::HKEY, pszSrcSubKey : Win32cr::Foundation::PWSTR, hkeyDest : Win32cr::System::Registry::HKEY, fReserved : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHCopyKeyW(hkeySrc, pszSrcSubKey, hkeyDest, fReserved)
  end

  def sHRegGetPathA(hKey : Win32cr::System::Registry::HKEY, pcszSubKey : Win32cr::Foundation::PSTR, pcszValue : Win32cr::Foundation::PSTR, pszPath : UInt8*, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegGetPathA(hKey, pcszSubKey, pcszValue, pszPath, dwFlags)
  end

  def sHRegGetPathW(hKey : Win32cr::System::Registry::HKEY, pcszSubKey : Win32cr::Foundation::PWSTR, pcszValue : Win32cr::Foundation::PWSTR, pszPath : UInt16*, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegGetPathW(hKey, pcszSubKey, pcszValue, pszPath, dwFlags)
  end

  def sHRegSetPathA(hKey : Win32cr::System::Registry::HKEY, pcszSubKey : Win32cr::Foundation::PSTR, pcszValue : Win32cr::Foundation::PSTR, pcszPath : Win32cr::Foundation::PSTR, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegSetPathA(hKey, pcszSubKey, pcszValue, pcszPath, dwFlags)
  end

  def sHRegSetPathW(hKey : Win32cr::System::Registry::HKEY, pcszSubKey : Win32cr::Foundation::PWSTR, pcszValue : Win32cr::Foundation::PWSTR, pcszPath : Win32cr::Foundation::PWSTR, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegSetPathW(hKey, pcszSubKey, pcszValue, pcszPath, dwFlags)
  end

  def sHRegCreateUSKeyA(pszPath : Win32cr::Foundation::PSTR, samDesired : UInt32, hRelativeUSKey : LibC::IntPtrT, phNewUSKey : LibC::IntPtrT*, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegCreateUSKeyA(pszPath, samDesired, hRelativeUSKey, phNewUSKey, dwFlags)
  end

  def sHRegCreateUSKeyW(pwzPath : Win32cr::Foundation::PWSTR, samDesired : UInt32, hRelativeUSKey : LibC::IntPtrT, phNewUSKey : LibC::IntPtrT*, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegCreateUSKeyW(pwzPath, samDesired, hRelativeUSKey, phNewUSKey, dwFlags)
  end

  def sHRegOpenUSKeyA(pszPath : Win32cr::Foundation::PSTR, samDesired : UInt32, hRelativeUSKey : LibC::IntPtrT, phNewUSKey : LibC::IntPtrT*, fIgnoreHKCU : Win32cr::Foundation::BOOL) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegOpenUSKeyA(pszPath, samDesired, hRelativeUSKey, phNewUSKey, fIgnoreHKCU)
  end

  def sHRegOpenUSKeyW(pwzPath : Win32cr::Foundation::PWSTR, samDesired : UInt32, hRelativeUSKey : LibC::IntPtrT, phNewUSKey : LibC::IntPtrT*, fIgnoreHKCU : Win32cr::Foundation::BOOL) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegOpenUSKeyW(pwzPath, samDesired, hRelativeUSKey, phNewUSKey, fIgnoreHKCU)
  end

  def sHRegQueryUSValueA(hUSKey : LibC::IntPtrT, pszValue : Win32cr::Foundation::PSTR, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*, fIgnoreHKCU : Win32cr::Foundation::BOOL, pvDefaultData : Void*, dwDefaultDataSize : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegQueryUSValueA(hUSKey, pszValue, pdwType, pvData, pcbData, fIgnoreHKCU, pvDefaultData, dwDefaultDataSize)
  end

  def sHRegQueryUSValueW(hUSKey : LibC::IntPtrT, pszValue : Win32cr::Foundation::PWSTR, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*, fIgnoreHKCU : Win32cr::Foundation::BOOL, pvDefaultData : Void*, dwDefaultDataSize : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegQueryUSValueW(hUSKey, pszValue, pdwType, pvData, pcbData, fIgnoreHKCU, pvDefaultData, dwDefaultDataSize)
  end

  def sHRegWriteUSValueA(hUSKey : LibC::IntPtrT, pszValue : Win32cr::Foundation::PSTR, dwType : UInt32, pvData : Void*, cbData : UInt32, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegWriteUSValueA(hUSKey, pszValue, dwType, pvData, cbData, dwFlags)
  end

  def sHRegWriteUSValueW(hUSKey : LibC::IntPtrT, pwzValue : Win32cr::Foundation::PWSTR, dwType : UInt32, pvData : Void*, cbData : UInt32, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegWriteUSValueW(hUSKey, pwzValue, dwType, pvData, cbData, dwFlags)
  end

  def sHRegDeleteUSValueA(hUSKey : LibC::IntPtrT, pszValue : Win32cr::Foundation::PSTR, delRegFlags : Win32cr::UI::Shell::SHREGDEL_FLAGS) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegDeleteUSValueA(hUSKey, pszValue, delRegFlags)
  end

  def sHRegDeleteUSValueW(hUSKey : LibC::IntPtrT, pwzValue : Win32cr::Foundation::PWSTR, delRegFlags : Win32cr::UI::Shell::SHREGDEL_FLAGS) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegDeleteUSValueW(hUSKey, pwzValue, delRegFlags)
  end

  def sHRegDeleteEmptyUSKeyW(hUSKey : LibC::IntPtrT, pwzSubKey : Win32cr::Foundation::PWSTR, delRegFlags : Win32cr::UI::Shell::SHREGDEL_FLAGS) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegDeleteEmptyUSKeyW(hUSKey, pwzSubKey, delRegFlags)
  end

  def sHRegDeleteEmptyUSKeyA(hUSKey : LibC::IntPtrT, pszSubKey : Win32cr::Foundation::PSTR, delRegFlags : Win32cr::UI::Shell::SHREGDEL_FLAGS) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegDeleteEmptyUSKeyA(hUSKey, pszSubKey, delRegFlags)
  end

  def sHRegEnumUSKeyA(hUSKey : LibC::IntPtrT, dwIndex : UInt32, pszName : UInt8*, pcchName : UInt32*, enumRegFlags : Win32cr::UI::Shell::SHREGENUM_FLAGS) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegEnumUSKeyA(hUSKey, dwIndex, pszName, pcchName, enumRegFlags)
  end

  def sHRegEnumUSKeyW(hUSKey : LibC::IntPtrT, dwIndex : UInt32, pwzName : UInt16*, pcchName : UInt32*, enumRegFlags : Win32cr::UI::Shell::SHREGENUM_FLAGS) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegEnumUSKeyW(hUSKey, dwIndex, pwzName, pcchName, enumRegFlags)
  end

  def sHRegEnumUSValueA(hUSkey : LibC::IntPtrT, dwIndex : UInt32, pszValueName : UInt8*, pcchValueName : UInt32*, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*, enumRegFlags : Win32cr::UI::Shell::SHREGENUM_FLAGS) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegEnumUSValueA(hUSkey, dwIndex, pszValueName, pcchValueName, pdwType, pvData, pcbData, enumRegFlags)
  end

  def sHRegEnumUSValueW(hUSkey : LibC::IntPtrT, dwIndex : UInt32, pszValueName : UInt16*, pcchValueName : UInt32*, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*, enumRegFlags : Win32cr::UI::Shell::SHREGENUM_FLAGS) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegEnumUSValueW(hUSkey, dwIndex, pszValueName, pcchValueName, pdwType, pvData, pcbData, enumRegFlags)
  end

  def sHRegQueryInfoUSKeyA(hUSKey : LibC::IntPtrT, pcSubKeys : UInt32*, pcchMaxSubKeyLen : UInt32*, pcValues : UInt32*, pcchMaxValueNameLen : UInt32*, enumRegFlags : Win32cr::UI::Shell::SHREGENUM_FLAGS) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegQueryInfoUSKeyA(hUSKey, pcSubKeys, pcchMaxSubKeyLen, pcValues, pcchMaxValueNameLen, enumRegFlags)
  end

  def sHRegQueryInfoUSKeyW(hUSKey : LibC::IntPtrT, pcSubKeys : UInt32*, pcchMaxSubKeyLen : UInt32*, pcValues : UInt32*, pcchMaxValueNameLen : UInt32*, enumRegFlags : Win32cr::UI::Shell::SHREGENUM_FLAGS) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegQueryInfoUSKeyW(hUSKey, pcSubKeys, pcchMaxSubKeyLen, pcValues, pcchMaxValueNameLen, enumRegFlags)
  end

  def sHRegCloseUSKey(hUSKey : LibC::IntPtrT) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegCloseUSKey(hUSKey)
  end

  def sHRegGetUSValueA(pszSubKey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*, fIgnoreHKCU : Win32cr::Foundation::BOOL, pvDefaultData : Void*, dwDefaultDataSize : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegGetUSValueA(pszSubKey, pszValue, pdwType, pvData, pcbData, fIgnoreHKCU, pvDefaultData, dwDefaultDataSize)
  end

  def sHRegGetUSValueW(pszSubKey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*, fIgnoreHKCU : Win32cr::Foundation::BOOL, pvDefaultData : Void*, dwDefaultDataSize : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegGetUSValueW(pszSubKey, pszValue, pdwType, pvData, pcbData, fIgnoreHKCU, pvDefaultData, dwDefaultDataSize)
  end

  def sHRegSetUSValueA(pszSubKey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, dwType : UInt32, pvData : Void*, cbData : UInt32, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegSetUSValueA(pszSubKey, pszValue, dwType, pvData, cbData, dwFlags)
  end

  def sHRegSetUSValueW(pwzSubKey : Win32cr::Foundation::PWSTR, pwzValue : Win32cr::Foundation::PWSTR, dwType : UInt32, pvData : Void*, cbData : UInt32, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegSetUSValueW(pwzSubKey, pwzValue, dwType, pvData, cbData, dwFlags)
  end

  def sHRegGetIntW(hk : Win32cr::System::Registry::HKEY, pwzKey : Win32cr::Foundation::PWSTR, iDefault : Int32) : Win32cr::Foundation::WIN32_ERROR
    C.SHRegGetIntW(hk, pwzKey, iDefault)
  end

  def sHRegGetBoolUSValueA(pszSubKey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, fIgnoreHKCU : Win32cr::Foundation::BOOL, fDefault : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL
    C.SHRegGetBoolUSValueA(pszSubKey, pszValue, fIgnoreHKCU, fDefault)
  end

  def sHRegGetBoolUSValueW(pszSubKey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, fIgnoreHKCU : Win32cr::Foundation::BOOL, fDefault : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL
    C.SHRegGetBoolUSValueW(pszSubKey, pszValue, fIgnoreHKCU, fDefault)
  end

  def assocCreate(clsid : LibC::GUID, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.AssocCreate(clsid, riid, ppv)
  end

  def assocQueryStringA(flags : UInt32, str : Win32cr::UI::Shell::ASSOCSTR, pszAssoc : Win32cr::Foundation::PSTR, pszExtra : Win32cr::Foundation::PSTR, pszOut : UInt8*, pcchOut : UInt32*) : Win32cr::Foundation::HRESULT
    C.AssocQueryStringA(flags, str, pszAssoc, pszExtra, pszOut, pcchOut)
  end

  def assocQueryStringW(flags : UInt32, str : Win32cr::UI::Shell::ASSOCSTR, pszAssoc : Win32cr::Foundation::PWSTR, pszExtra : Win32cr::Foundation::PWSTR, pszOut : UInt16*, pcchOut : UInt32*) : Win32cr::Foundation::HRESULT
    C.AssocQueryStringW(flags, str, pszAssoc, pszExtra, pszOut, pcchOut)
  end

  def assocQueryStringByKeyA(flags : UInt32, str : Win32cr::UI::Shell::ASSOCSTR, hkAssoc : Win32cr::System::Registry::HKEY, pszExtra : Win32cr::Foundation::PSTR, pszOut : UInt8*, pcchOut : UInt32*) : Win32cr::Foundation::HRESULT
    C.AssocQueryStringByKeyA(flags, str, hkAssoc, pszExtra, pszOut, pcchOut)
  end

  def assocQueryStringByKeyW(flags : UInt32, str : Win32cr::UI::Shell::ASSOCSTR, hkAssoc : Win32cr::System::Registry::HKEY, pszExtra : Win32cr::Foundation::PWSTR, pszOut : UInt16*, pcchOut : UInt32*) : Win32cr::Foundation::HRESULT
    C.AssocQueryStringByKeyW(flags, str, hkAssoc, pszExtra, pszOut, pcchOut)
  end

  def assocQueryKeyA(flags : UInt32, key : Win32cr::UI::Shell::ASSOCKEY, pszAssoc : Win32cr::Foundation::PSTR, pszExtra : Win32cr::Foundation::PSTR, phkeyOut : Win32cr::System::Registry::HKEY*) : Win32cr::Foundation::HRESULT
    C.AssocQueryKeyA(flags, key, pszAssoc, pszExtra, phkeyOut)
  end

  def assocQueryKeyW(flags : UInt32, key : Win32cr::UI::Shell::ASSOCKEY, pszAssoc : Win32cr::Foundation::PWSTR, pszExtra : Win32cr::Foundation::PWSTR, phkeyOut : Win32cr::System::Registry::HKEY*) : Win32cr::Foundation::HRESULT
    C.AssocQueryKeyW(flags, key, pszAssoc, pszExtra, phkeyOut)
  end

  def assocIsDangerous(pszAssoc : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.AssocIsDangerous(pszAssoc)
  end

  def assocGetPerceivedType(pszExt : Win32cr::Foundation::PWSTR, ptype : Win32cr::UI::Shell::Common::PERCEIVED*, pflag : UInt32*, ppszType : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.AssocGetPerceivedType(pszExt, ptype, pflag, ppszType)
  end

  def sHOpenRegStreamA(hkey : Win32cr::System::Registry::HKEY, pszSubkey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, grfMode : UInt32) : Void*
    C.SHOpenRegStreamA(hkey, pszSubkey, pszValue, grfMode)
  end

  def sHOpenRegStreamW(hkey : Win32cr::System::Registry::HKEY, pszSubkey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, grfMode : UInt32) : Void*
    C.SHOpenRegStreamW(hkey, pszSubkey, pszValue, grfMode)
  end

  def sHOpenRegStream2A(hkey : Win32cr::System::Registry::HKEY, pszSubkey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, grfMode : UInt32) : Void*
    C.SHOpenRegStream2A(hkey, pszSubkey, pszValue, grfMode)
  end

  def sHOpenRegStream2W(hkey : Win32cr::System::Registry::HKEY, pszSubkey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, grfMode : UInt32) : Void*
    C.SHOpenRegStream2W(hkey, pszSubkey, pszValue, grfMode)
  end

  def sHCreateStreamOnFileA(pszFile : Win32cr::Foundation::PSTR, grfMode : UInt32, ppstm : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateStreamOnFileA(pszFile, grfMode, ppstm)
  end

  def sHCreateStreamOnFileW(pszFile : Win32cr::Foundation::PWSTR, grfMode : UInt32, ppstm : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateStreamOnFileW(pszFile, grfMode, ppstm)
  end

  def sHCreateStreamOnFileEx(pszFile : Win32cr::Foundation::PWSTR, grfMode : UInt32, dwAttributes : UInt32, fCreate : Win32cr::Foundation::BOOL, pstmTemplate : Void*, ppstm : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateStreamOnFileEx(pszFile, grfMode, dwAttributes, fCreate, pstmTemplate, ppstm)
  end

  def sHCreateMemStream(pInit : UInt8*, cbInit : UInt32) : Void*
    C.SHCreateMemStream(pInit, cbInit)
  end

  def getAcceptLanguagesA(pszLanguages : UInt8*, pcchLanguages : UInt32*) : Win32cr::Foundation::HRESULT
    C.GetAcceptLanguagesA(pszLanguages, pcchLanguages)
  end

  def getAcceptLanguagesW(pszLanguages : UInt16*, pcchLanguages : UInt32*) : Win32cr::Foundation::HRESULT
    C.GetAcceptLanguagesW(pszLanguages, pcchLanguages)
  end

  def iUnknownSet(ppunk : Void**, punk : Void*) : Void
    C.IUnknown_Set(ppunk, punk)
  end

  def iUnknownAtomicRelease(ppunk : Void**) : Void
    C.IUnknown_AtomicRelease(ppunk)
  end

  def iUnknownGetWindow(punk : Void*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
    C.IUnknown_GetWindow(punk, phwnd)
  end

  def iUnknownSetSite(punk : Void*, punkSite : Void*) : Win32cr::Foundation::HRESULT
    C.IUnknown_SetSite(punk, punkSite)
  end

  def iUnknownGetSite(punk : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.IUnknown_GetSite(punk, riid, ppv)
  end

  def iUnknownQueryService(punk : Void*, guidService : LibC::GUID*, riid : LibC::GUID*, ppvOut : Void**) : Win32cr::Foundation::HRESULT
    C.IUnknown_QueryService(punk, guidService, riid, ppvOut)
  end

  def iStreamRead(pstm : Void*, pv : Void*, cb : UInt32) : Win32cr::Foundation::HRESULT
    C.IStream_Read(pstm, pv, cb)
  end

  def iStreamWrite(pstm : Void*, pv : Void*, cb : UInt32) : Win32cr::Foundation::HRESULT
    C.IStream_Write(pstm, pv, cb)
  end

  def iStreamReset(pstm : Void*) : Win32cr::Foundation::HRESULT
    C.IStream_Reset(pstm)
  end

  def iStreamSize(pstm : Void*, pui : Win32cr::Foundation::ULARGE_INTEGER*) : Win32cr::Foundation::HRESULT
    C.IStream_Size(pstm, pui)
  end

  def connectToConnectionPoint(punk : Void*, riidEvent : LibC::GUID*, fConnect : Win32cr::Foundation::BOOL, punkTarget : Void*, pdwCookie : UInt32*, ppcpOut : Void**) : Win32cr::Foundation::HRESULT
    C.ConnectToConnectionPoint(punk, riidEvent, fConnect, punkTarget, pdwCookie, ppcpOut)
  end

  def iStreamReadPidl(pstm : Void*, ppidlOut : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT
    C.IStream_ReadPidl(pstm, ppidlOut)
  end

  def iStreamWritePidl(pstm : Void*, pidlWrite : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT
    C.IStream_WritePidl(pstm, pidlWrite)
  end

  def iStreamReadStr(pstm : Void*, ppsz : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.IStream_ReadStr(pstm, ppsz)
  end

  def iStreamWriteStr(pstm : Void*, psz : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
    C.IStream_WriteStr(pstm, psz)
  end

  def iStreamCopy(pstmFrom : Void*, pstmTo : Void*, cb : UInt32) : Win32cr::Foundation::HRESULT
    C.IStream_Copy(pstmFrom, pstmTo, cb)
  end

  def sHGetViewStatePropertyBag(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszBagName : Win32cr::Foundation::PWSTR, dwFlags : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.SHGetViewStatePropertyBag(pidl, pszBagName, dwFlags, riid, ppv)
  end

  def sHFormatDateTimeA(pft : Win32cr::Foundation::FILETIME*, pdwFlags : UInt32*, pszBuf : UInt8*, cchBuf : UInt32) : Int32
    C.SHFormatDateTimeA(pft, pdwFlags, pszBuf, cchBuf)
  end

  def sHFormatDateTimeW(pft : Win32cr::Foundation::FILETIME*, pdwFlags : UInt32*, pszBuf : UInt16*, cchBuf : UInt32) : Int32
    C.SHFormatDateTimeW(pft, pdwFlags, pszBuf, cchBuf)
  end

  def sHAnsiToUnicode(pszSrc : Win32cr::Foundation::PSTR, pwszDst : UInt16*, cwchBuf : Int32) : Int32
    C.SHAnsiToUnicode(pszSrc, pwszDst, cwchBuf)
  end

  def sHAnsiToAnsi(pszSrc : Win32cr::Foundation::PSTR, pszDst : UInt8*, cchBuf : Int32) : Int32
    C.SHAnsiToAnsi(pszSrc, pszDst, cchBuf)
  end

  def sHUnicodeToAnsi(pwszSrc : Win32cr::Foundation::PWSTR, pszDst : UInt8*, cchBuf : Int32) : Int32
    C.SHUnicodeToAnsi(pwszSrc, pszDst, cchBuf)
  end

  def sHUnicodeToUnicode(pwzSrc : Win32cr::Foundation::PWSTR, pwzDst : UInt16*, cwchBuf : Int32) : Int32
    C.SHUnicodeToUnicode(pwzSrc, pwzDst, cwchBuf)
  end

  def sHMessageBoxCheckA(hwnd : Win32cr::Foundation::HWND, pszText : Win32cr::Foundation::PSTR, pszCaption : Win32cr::Foundation::PSTR, uType : UInt32, iDefault : Int32, pszRegVal : Win32cr::Foundation::PSTR) : Int32
    C.SHMessageBoxCheckA(hwnd, pszText, pszCaption, uType, iDefault, pszRegVal)
  end

  def sHMessageBoxCheckW(hwnd : Win32cr::Foundation::HWND, pszText : Win32cr::Foundation::PWSTR, pszCaption : Win32cr::Foundation::PWSTR, uType : UInt32, iDefault : Int32, pszRegVal : Win32cr::Foundation::PWSTR) : Int32
    C.SHMessageBoxCheckW(hwnd, pszText, pszCaption, uType, iDefault, pszRegVal)
  end

  def sHSendMessageBroadcastA(uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
    C.SHSendMessageBroadcastA(uMsg, wParam, lParam)
  end

  def sHSendMessageBroadcastW(uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT
    C.SHSendMessageBroadcastW(uMsg, wParam, lParam)
  end

  def sHStripMneumonicA(pszMenu : Win32cr::Foundation::PSTR) : Win32cr::Foundation::CHAR
    C.SHStripMneumonicA(pszMenu)
  end

  def sHStripMneumonicW(pszMenu : Win32cr::Foundation::PWSTR) : UInt16
    C.SHStripMneumonicW(pszMenu)
  end

  def isOS(dwOS : Win32cr::UI::Shell::OS) : Win32cr::Foundation::BOOL
    C.IsOS(dwOS)
  end

  def sHGlobalCounterGetValue(id : Win32cr::UI::Shell::SHGLOBALCOUNTER) : Int32
    C.SHGlobalCounterGetValue(id)
  end

  def sHGlobalCounterIncrement(id : Win32cr::UI::Shell::SHGLOBALCOUNTER) : Int32
    C.SHGlobalCounterIncrement(id)
  end

  def sHGlobalCounterDecrement(id : Win32cr::UI::Shell::SHGLOBALCOUNTER) : Int32
    C.SHGlobalCounterDecrement(id)
  end

  def sHAllocShared(pvData : Void*, dwSize : UInt32, dwProcessId : UInt32) : Win32cr::Foundation::HANDLE
    C.SHAllocShared(pvData, dwSize, dwProcessId)
  end

  def sHFreeShared(hData : Win32cr::Foundation::HANDLE, dwProcessId : UInt32) : Win32cr::Foundation::BOOL
    C.SHFreeShared(hData, dwProcessId)
  end

  def sHLockShared(hData : Win32cr::Foundation::HANDLE, dwProcessId : UInt32) : Void*
    C.SHLockShared(hData, dwProcessId)
  end

  def sHUnlockShared(pvData : Void*) : Win32cr::Foundation::BOOL
    C.SHUnlockShared(pvData)
  end

  def whichPlatform : UInt32
    C.WhichPlatform
  end

  def qISearch(that : Void*, pqit : Win32cr::UI::Shell::QITAB*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT
    C.QISearch(that, pqit, riid, ppv)
  end

  def sHIsLowMemoryMachine(dwType : UInt32) : Win32cr::Foundation::BOOL
    C.SHIsLowMemoryMachine(dwType)
  end

  def getMenuPosFromID(hmenu : Win32cr::UI::WindowsAndMessaging::HMENU, id : UInt32) : Int32
    C.GetMenuPosFromID(hmenu, id)
  end

  def sHGetInverseCMAP(pbMap : UInt8*, cbMap : UInt32) : Win32cr::Foundation::HRESULT
    C.SHGetInverseCMAP(pbMap, cbMap)
  end

  def sHAutoComplete(hwndEdit : Win32cr::Foundation::HWND, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
    C.SHAutoComplete(hwndEdit, dwFlags)
  end

  def sHCreateThreadRef(pcRef : Int32*, ppunk : Void**) : Win32cr::Foundation::HRESULT
    C.SHCreateThreadRef(pcRef, ppunk)
  end

  def sHSetThreadRef(punk : Void*) : Win32cr::Foundation::HRESULT
    C.SHSetThreadRef(punk)
  end

  def sHGetThreadRef(ppunk : Void**) : Win32cr::Foundation::HRESULT
    C.SHGetThreadRef(ppunk)
  end

  def sHSkipJunction(pbc : Void*, pclsid : LibC::GUID*) : Win32cr::Foundation::BOOL
    C.SHSkipJunction(pbc, pclsid)
  end

  def sHCreateThread(pfnThreadProc : Win32cr::System::Threading::LPTHREAD_START_ROUTINE, pData : Void*, flags : UInt32, pfnCallback : Win32cr::System::Threading::LPTHREAD_START_ROUTINE) : Win32cr::Foundation::BOOL
    C.SHCreateThread(pfnThreadProc, pData, flags, pfnCallback)
  end

  def sHCreateThreadWithHandle(pfnThreadProc : Win32cr::System::Threading::LPTHREAD_START_ROUTINE, pData : Void*, flags : UInt32, pfnCallback : Win32cr::System::Threading::LPTHREAD_START_ROUTINE, pHandle : Win32cr::Foundation::HANDLE*) : Win32cr::Foundation::BOOL
    C.SHCreateThreadWithHandle(pfnThreadProc, pData, flags, pfnCallback, pHandle)
  end

  def sHReleaseThreadRef : Win32cr::Foundation::HRESULT
    C.SHReleaseThreadRef
  end

  def sHCreateShellPalette(hdc : Win32cr::Graphics::Gdi::HDC) : Win32cr::Graphics::Gdi::HPALETTE
    C.SHCreateShellPalette(hdc)
  end

  def colorRGBToHLS(clrRGB : UInt32, pwHue : UInt16*, pwLuminance : UInt16*, pwSaturation : UInt16*) : Void
    C.ColorRGBToHLS(clrRGB, pwHue, pwLuminance, pwSaturation)
  end

  def colorHLSToRGB(wHue : UInt16, wLuminance : UInt16, wSaturation : UInt16) : UInt32
    C.ColorHLSToRGB(wHue, wLuminance, wSaturation)
  end

  def colorAdjustLuma(clrRGB : UInt32, n : Int32, fScale : Win32cr::Foundation::BOOL) : UInt32
    C.ColorAdjustLuma(clrRGB, n, fScale)
  end

  def isInternetESCEnabled : Win32cr::Foundation::BOOL
    C.IsInternetESCEnabled
  end

  def hlinkCreateFromMoniker(pimkTrgt : Void*, pwzLocation : Win32cr::Foundation::PWSTR, pwzFriendlyName : Win32cr::Foundation::PWSTR, pihlsite : Void*, dwSiteData : UInt32, piunkOuter : Void*, riid : LibC::GUID*, ppvObj : Void**) : Win32cr::Foundation::HRESULT
    C.HlinkCreateFromMoniker(pimkTrgt, pwzLocation, pwzFriendlyName, pihlsite, dwSiteData, piunkOuter, riid, ppvObj)
  end

  def hlinkCreateFromString(pwzTarget : Win32cr::Foundation::PWSTR, pwzLocation : Win32cr::Foundation::PWSTR, pwzFriendlyName : Win32cr::Foundation::PWSTR, pihlsite : Void*, dwSiteData : UInt32, piunkOuter : Void*, riid : LibC::GUID*, ppvObj : Void**) : Win32cr::Foundation::HRESULT
    C.HlinkCreateFromString(pwzTarget, pwzLocation, pwzFriendlyName, pihlsite, dwSiteData, piunkOuter, riid, ppvObj)
  end

  def hlinkCreateFromData(piDataObj : Void*, pihlsite : Void*, dwSiteData : UInt32, piunkOuter : Void*, riid : LibC::GUID*, ppvObj : Void**) : Win32cr::Foundation::HRESULT
    C.HlinkCreateFromData(piDataObj, pihlsite, dwSiteData, piunkOuter, riid, ppvObj)
  end

  def hlinkQueryCreateFromData(piDataObj : Void*) : Win32cr::Foundation::HRESULT
    C.HlinkQueryCreateFromData(piDataObj)
  end

  def hlinkClone(pihl : Void*, riid : LibC::GUID*, pihlsiteForClone : Void*, dwSiteData : UInt32, ppvObj : Void**) : Win32cr::Foundation::HRESULT
    C.HlinkClone(pihl, riid, pihlsiteForClone, dwSiteData, ppvObj)
  end

  def hlinkCreateBrowseContext(piunkOuter : Void*, riid : LibC::GUID*, ppvObj : Void**) : Win32cr::Foundation::HRESULT
    C.HlinkCreateBrowseContext(piunkOuter, riid, ppvObj)
  end

  def hlinkNavigateToStringReference(pwzTarget : Win32cr::Foundation::PWSTR, pwzLocation : Win32cr::Foundation::PWSTR, pihlsite : Void*, dwSiteData : UInt32, pihlframe : Void*, grfHLNF : UInt32, pibc : Void*, pibsc : Void*, pihlbc : Void*) : Win32cr::Foundation::HRESULT
    C.HlinkNavigateToStringReference(pwzTarget, pwzLocation, pihlsite, dwSiteData, pihlframe, grfHLNF, pibc, pibsc, pihlbc)
  end

  def hlinkNavigate(pihl : Void*, pihlframe : Void*, grfHLNF : UInt32, pbc : Void*, pibsc : Void*, pihlbc : Void*) : Win32cr::Foundation::HRESULT
    C.HlinkNavigate(pihl, pihlframe, grfHLNF, pbc, pibsc, pihlbc)
  end

  def hlinkOnNavigate(pihlframe : Void*, pihlbc : Void*, grfHLNF : UInt32, pimkTarget : Void*, pwzLocation : Win32cr::Foundation::PWSTR, pwzFriendlyName : Win32cr::Foundation::PWSTR, puHLID : UInt32*) : Win32cr::Foundation::HRESULT
    C.HlinkOnNavigate(pihlframe, pihlbc, grfHLNF, pimkTarget, pwzLocation, pwzFriendlyName, puHLID)
  end

  def hlinkUpdateStackItem(pihlframe : Void*, pihlbc : Void*, uHLID : UInt32, pimkTrgt : Void*, pwzLocation : Win32cr::Foundation::PWSTR, pwzFriendlyName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
    C.HlinkUpdateStackItem(pihlframe, pihlbc, uHLID, pimkTrgt, pwzLocation, pwzFriendlyName)
  end

  def hlinkOnRenameDocument(dwReserved : UInt32, pihlbc : Void*, pimkOld : Void*, pimkNew : Void*) : Win32cr::Foundation::HRESULT
    C.HlinkOnRenameDocument(dwReserved, pihlbc, pimkOld, pimkNew)
  end

  def hlinkResolveMonikerForData(pimkReference : Void*, reserved : UInt32, pibc : Void*, cFmtetc : UInt32, rgFmtetc : Win32cr::System::Com::FORMATETC*, pibsc : Void*, pimkBase : Void*) : Win32cr::Foundation::HRESULT
    C.HlinkResolveMonikerForData(pimkReference, reserved, pibc, cFmtetc, rgFmtetc, pibsc, pimkBase)
  end

  def hlinkResolveStringForData(pwzReference : Win32cr::Foundation::PWSTR, reserved : UInt32, pibc : Void*, cFmtetc : UInt32, rgFmtetc : Win32cr::System::Com::FORMATETC*, pibsc : Void*, pimkBase : Void*) : Win32cr::Foundation::HRESULT
    C.HlinkResolveStringForData(pwzReference, reserved, pibc, cFmtetc, rgFmtetc, pibsc, pimkBase)
  end

  def hlinkParseDisplayName(pibc : Void*, pwzDisplayName : Win32cr::Foundation::PWSTR, fNoForceAbs : Win32cr::Foundation::BOOL, pcchEaten : UInt32*, ppimk : Void**) : Win32cr::Foundation::HRESULT
    C.HlinkParseDisplayName(pibc, pwzDisplayName, fNoForceAbs, pcchEaten, ppimk)
  end

  def hlinkCreateExtensionServices(pwzAdditionalHeaders : Win32cr::Foundation::PWSTR, phwnd : Win32cr::Foundation::HWND, pszUsername : Win32cr::Foundation::PWSTR, pszPassword : Win32cr::Foundation::PWSTR, piunkOuter : Void*, riid : LibC::GUID*, ppvObj : Void**) : Win32cr::Foundation::HRESULT
    C.HlinkCreateExtensionServices(pwzAdditionalHeaders, phwnd, pszUsername, pszPassword, piunkOuter, riid, ppvObj)
  end

  def hlinkPreprocessMoniker(pibc : Void*, pimkIn : Void*, ppimkOut : Void**) : Win32cr::Foundation::HRESULT
    C.HlinkPreprocessMoniker(pibc, pimkIn, ppimkOut)
  end

  def oleSaveToStreamEx(piunk : Void*, pistm : Void*, fClearDirty : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
    C.OleSaveToStreamEx(piunk, pistm, fClearDirty)
  end

  def hlinkSetSpecialReference(uReference : UInt32, pwzReference : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
    C.HlinkSetSpecialReference(uReference, pwzReference)
  end

  def hlinkGetSpecialReference(uReference : UInt32, ppwzReference : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.HlinkGetSpecialReference(uReference, ppwzReference)
  end

  def hlinkCreateShortcut(grfHLSHORTCUTF : UInt32, pihl : Void*, pwzDir : Win32cr::Foundation::PWSTR, pwzFileName : Win32cr::Foundation::PWSTR, ppwzShortcutFile : Win32cr::Foundation::PWSTR*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
    C.HlinkCreateShortcut(grfHLSHORTCUTF, pihl, pwzDir, pwzFileName, ppwzShortcutFile, dwReserved)
  end

  def hlinkCreateShortcutFromMoniker(grfHLSHORTCUTF : UInt32, pimkTarget : Void*, pwzLocation : Win32cr::Foundation::PWSTR, pwzDir : Win32cr::Foundation::PWSTR, pwzFileName : Win32cr::Foundation::PWSTR, ppwzShortcutFile : Win32cr::Foundation::PWSTR*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
    C.HlinkCreateShortcutFromMoniker(grfHLSHORTCUTF, pimkTarget, pwzLocation, pwzDir, pwzFileName, ppwzShortcutFile, dwReserved)
  end

  def hlinkCreateShortcutFromString(grfHLSHORTCUTF : UInt32, pwzTarget : Win32cr::Foundation::PWSTR, pwzLocation : Win32cr::Foundation::PWSTR, pwzDir : Win32cr::Foundation::PWSTR, pwzFileName : Win32cr::Foundation::PWSTR, ppwzShortcutFile : Win32cr::Foundation::PWSTR*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT
    C.HlinkCreateShortcutFromString(grfHLSHORTCUTF, pwzTarget, pwzLocation, pwzDir, pwzFileName, ppwzShortcutFile, dwReserved)
  end

  def hlinkResolveShortcut(pwzShortcutFileName : Win32cr::Foundation::PWSTR, pihlsite : Void*, dwSiteData : UInt32, piunkOuter : Void*, riid : LibC::GUID*, ppvObj : Void**) : Win32cr::Foundation::HRESULT
    C.HlinkResolveShortcut(pwzShortcutFileName, pihlsite, dwSiteData, piunkOuter, riid, ppvObj)
  end

  def hlinkResolveShortcutToMoniker(pwzShortcutFileName : Win32cr::Foundation::PWSTR, ppimkTarget : Void**, ppwzLocation : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.HlinkResolveShortcutToMoniker(pwzShortcutFileName, ppimkTarget, ppwzLocation)
  end

  def hlinkResolveShortcutToString(pwzShortcutFileName : Win32cr::Foundation::PWSTR, ppwzTarget : Win32cr::Foundation::PWSTR*, ppwzLocation : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.HlinkResolveShortcutToString(pwzShortcutFileName, ppwzTarget, ppwzLocation)
  end

  def hlinkIsShortcut(pwzFileName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
    C.HlinkIsShortcut(pwzFileName)
  end

  def hlinkGetValueFromParams(pwzParams : Win32cr::Foundation::PWSTR, pwzName : Win32cr::Foundation::PWSTR, ppwzValue : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.HlinkGetValueFromParams(pwzParams, pwzName, ppwzValue)
  end

  def hlinkTranslateURL(pwzURL : Win32cr::Foundation::PWSTR, grfFlags : UInt32, ppwzTranslatedURL : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.HlinkTranslateURL(pwzURL, grfFlags, ppwzTranslatedURL)
  end

  def pathIsUNCEx(pszPath : Win32cr::Foundation::PWSTR, ppszServer : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::BOOL
    C.PathIsUNCEx(pszPath, ppszServer)
  end

  def pathCchIsRoot(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.PathCchIsRoot(pszPath)
  end

  def pathCchAddBackslashEx(pszPath : UInt16*, cchPath : LibC::UIntPtrT, ppszEnd : Win32cr::Foundation::PWSTR*, pcchRemaining : LibC::UIntPtrT*) : Win32cr::Foundation::HRESULT
    C.PathCchAddBackslashEx(pszPath, cchPath, ppszEnd, pcchRemaining)
  end

  def pathCchAddBackslash(pszPath : UInt16*, cchPath : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
    C.PathCchAddBackslash(pszPath, cchPath)
  end

  def pathCchRemoveBackslashEx(pszPath : Win32cr::Foundation::PWSTR, cchPath : LibC::UIntPtrT, ppszEnd : Win32cr::Foundation::PWSTR*, pcchRemaining : LibC::UIntPtrT*) : Win32cr::Foundation::HRESULT
    C.PathCchRemoveBackslashEx(pszPath, cchPath, ppszEnd, pcchRemaining)
  end

  def pathCchRemoveBackslash(pszPath : UInt16*, cchPath : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
    C.PathCchRemoveBackslash(pszPath, cchPath)
  end

  def pathCchSkipRoot(pszPath : Win32cr::Foundation::PWSTR, ppszRootEnd : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.PathCchSkipRoot(pszPath, ppszRootEnd)
  end

  def pathCchStripToRoot(pszPath : Win32cr::Foundation::PWSTR, cchPath : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
    C.PathCchStripToRoot(pszPath, cchPath)
  end

  def pathCchRemoveFileSpec(pszPath : Win32cr::Foundation::PWSTR, cchPath : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
    C.PathCchRemoveFileSpec(pszPath, cchPath)
  end

  def pathCchFindExtension(pszPath : Win32cr::Foundation::PWSTR, cchPath : LibC::UIntPtrT, ppszExt : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.PathCchFindExtension(pszPath, cchPath, ppszExt)
  end

  def pathCchAddExtension(pszPath : UInt16*, cchPath : LibC::UIntPtrT, pszExt : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
    C.PathCchAddExtension(pszPath, cchPath, pszExt)
  end

  def pathCchRenameExtension(pszPath : UInt16*, cchPath : LibC::UIntPtrT, pszExt : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
    C.PathCchRenameExtension(pszPath, cchPath, pszExt)
  end

  def pathCchRemoveExtension(pszPath : Win32cr::Foundation::PWSTR, cchPath : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
    C.PathCchRemoveExtension(pszPath, cchPath)
  end

  def pathCchCanonicalizeEx(pszPathOut : UInt16*, cchPathOut : LibC::UIntPtrT, pszPathIn : Win32cr::Foundation::PWSTR, dwFlags : Win32cr::UI::Shell::PATHCCH_OPTIONS) : Win32cr::Foundation::HRESULT
    C.PathCchCanonicalizeEx(pszPathOut, cchPathOut, pszPathIn, dwFlags)
  end

  def pathCchCanonicalize(pszPathOut : UInt16*, cchPathOut : LibC::UIntPtrT, pszPathIn : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
    C.PathCchCanonicalize(pszPathOut, cchPathOut, pszPathIn)
  end

  def pathCchCombineEx(pszPathOut : UInt16*, cchPathOut : LibC::UIntPtrT, pszPathIn : Win32cr::Foundation::PWSTR, pszMore : Win32cr::Foundation::PWSTR, dwFlags : Win32cr::UI::Shell::PATHCCH_OPTIONS) : Win32cr::Foundation::HRESULT
    C.PathCchCombineEx(pszPathOut, cchPathOut, pszPathIn, pszMore, dwFlags)
  end

  def pathCchCombine(pszPathOut : UInt16*, cchPathOut : LibC::UIntPtrT, pszPathIn : Win32cr::Foundation::PWSTR, pszMore : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
    C.PathCchCombine(pszPathOut, cchPathOut, pszPathIn, pszMore)
  end

  def pathCchAppendEx(pszPath : UInt16*, cchPath : LibC::UIntPtrT, pszMore : Win32cr::Foundation::PWSTR, dwFlags : Win32cr::UI::Shell::PATHCCH_OPTIONS) : Win32cr::Foundation::HRESULT
    C.PathCchAppendEx(pszPath, cchPath, pszMore, dwFlags)
  end

  def pathCchAppend(pszPath : UInt16*, cchPath : LibC::UIntPtrT, pszMore : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
    C.PathCchAppend(pszPath, cchPath, pszMore)
  end

  def pathCchStripPrefix(pszPath : UInt16*, cchPath : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT
    C.PathCchStripPrefix(pszPath, cchPath)
  end

  def pathAllocCombine(pszPathIn : Win32cr::Foundation::PWSTR, pszMore : Win32cr::Foundation::PWSTR, dwFlags : Win32cr::UI::Shell::PATHCCH_OPTIONS, ppszPathOut : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.PathAllocCombine(pszPathIn, pszMore, dwFlags, ppszPathOut)
  end

  def pathAllocCanonicalize(pszPathIn : Win32cr::Foundation::PWSTR, dwFlags : Win32cr::UI::Shell::PATHCCH_OPTIONS, ppszPathOut : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
    C.PathAllocCanonicalize(pszPathIn, dwFlags, ppszPathOut)
  end

  def registerAppStateChangeNotification(routine : Win32cr::UI::Shell::PAPPSTATE_CHANGE_ROUTINE, context : Void*, registration : Win32cr::UI::Shell::APPSTATE_REGISTRATION_**) : UInt32
    C.RegisterAppStateChangeNotification(routine, context, registration)
  end

  def unregisterAppStateChangeNotification(registration : Win32cr::UI::Shell::APPSTATE_REGISTRATION_*) : Void
    C.UnregisterAppStateChangeNotification(registration)
  end

  def registerAppConstrainedChangeNotification(routine : Win32cr::UI::Shell::PAPPCONSTRAIN_CHANGE_ROUTINE, context : Void*, registration : Win32cr::UI::Shell::APPCONSTRAIN_REGISTRATION_**) : UInt32
    C.RegisterAppConstrainedChangeNotification(routine, context, registration)
  end

  def unregisterAppConstrainedChangeNotification(registration : Win32cr::UI::Shell::APPCONSTRAIN_REGISTRATION_*) : Void
    C.UnregisterAppConstrainedChangeNotification(registration)
  end

  @[Link("userenv")]
  @[Link("comctl32")]
  @[Link("user32")]
  @[Link("shell32")]
  @[Link("ole32")]
  @[Link("shdocvw")]
  @[Link("shlwapi")]
  @[Link("hlink")]
  lib C
    # :nodoc:
    fun LoadUserProfileA(hToken : Win32cr::Foundation::HANDLE, lpProfileInfo : Win32cr::UI::Shell::PROFILEINFOA*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun LoadUserProfileW(hToken : Win32cr::Foundation::HANDLE, lpProfileInfo : Win32cr::UI::Shell::PROFILEINFOW*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun UnloadUserProfile(hToken : Win32cr::Foundation::HANDLE, hProfile : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetProfilesDirectoryA(lpProfileDir : UInt8*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetProfilesDirectoryW(lpProfileDir : UInt16*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetProfileType(dwFlags : UInt32*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DeleteProfileA(lpSidString : Win32cr::Foundation::PSTR, lpProfilePath : Win32cr::Foundation::PSTR, lpComputerName : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DeleteProfileW(lpSidString : Win32cr::Foundation::PWSTR, lpProfilePath : Win32cr::Foundation::PWSTR, lpComputerName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun CreateProfile(pszUserSid : Win32cr::Foundation::PWSTR, pszUserName : Win32cr::Foundation::PWSTR, pszProfilePath : UInt16*, cchProfilePath : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun GetDefaultUserProfileDirectoryA(lpProfileDir : UInt8*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetDefaultUserProfileDirectoryW(lpProfileDir : UInt16*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetAllUsersProfileDirectoryA(lpProfileDir : UInt8*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetAllUsersProfileDirectoryW(lpProfileDir : UInt16*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetUserProfileDirectoryA(hToken : Win32cr::Foundation::HANDLE, lpProfileDir : UInt8*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetUserProfileDirectoryW(hToken : Win32cr::Foundation::HANDLE, lpProfileDir : UInt16*, lpcchSize : UInt32*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SetWindowSubclass(hWnd : Win32cr::Foundation::HWND, pfnSubclass : Win32cr::UI::Shell::SUBCLASSPROC, uIdSubclass : LibC::UIntPtrT, dwRefData : LibC::UIntPtrT) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetWindowSubclass(hWnd : Win32cr::Foundation::HWND, pfnSubclass : Win32cr::UI::Shell::SUBCLASSPROC, uIdSubclass : LibC::UIntPtrT, pdwRefData : LibC::UIntPtrT*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun RemoveWindowSubclass(hWnd : Win32cr::Foundation::HWND, pfnSubclass : Win32cr::UI::Shell::SUBCLASSPROC, uIdSubclass : LibC::UIntPtrT) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DefSubclassProc(hWnd : Win32cr::Foundation::HWND, uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT

    # :nodoc:
    fun SetWindowContextHelpId(param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetWindowContextHelpId(param0 : Win32cr::Foundation::HWND) : UInt32

    # :nodoc:
    fun SetMenuContextHelpId(param0 : Win32cr::UI::WindowsAndMessaging::HMENU, param1 : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetMenuContextHelpId(param0 : Win32cr::UI::WindowsAndMessaging::HMENU) : UInt32

    # :nodoc:
    fun WinHelpA(hWndMain : Win32cr::Foundation::HWND, lpszHelp : Win32cr::Foundation::PSTR, uCommand : UInt32, dwData : LibC::UIntPtrT) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun WinHelpW(hWndMain : Win32cr::Foundation::HWND, lpszHelp : Win32cr::Foundation::PWSTR, uCommand : UInt32, dwData : LibC::UIntPtrT) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHSimpleIDListFromPath(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::UI::Shell::Common::ITEMIDLIST*

    # :nodoc:
    fun SHCreateItemFromIDList(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateItemFromParsingName(pszPath : Win32cr::Foundation::PWSTR, pbc : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateItemWithParent(pidlParent : Win32cr::UI::Shell::Common::ITEMIDLIST*, psfParent : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, riid : LibC::GUID*, ppvItem : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateItemFromRelativeName(psiParent : Void*, pszName : Win32cr::Foundation::PWSTR, pbc : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateItemInKnownFolder(kfid : LibC::GUID*, dwKFFlags : UInt32, pszItem : Win32cr::Foundation::PWSTR, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetIDListFromObject(punk : Void*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetItemFromObject(punk : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetNameFromIDList(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, sigdnName : Win32cr::UI::Shell::SIGDN, ppszName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetItemFromDataObject(pdtobj : Void*, dwFlags : Win32cr::UI::Shell::DATAOBJ_GET_ITEM_FLAGS, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateShellItemArray(pidlParent : Win32cr::UI::Shell::Common::ITEMIDLIST*, psf : Void*, cidl : UInt32, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, ppsiItemArray : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateShellItemArrayFromDataObject(pdo : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateShellItemArrayFromIDLists(cidl : UInt32, rgpidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, ppsiItemArray : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateShellItemArrayFromShellItem(psi : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateAssociationRegistration(riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateDefaultExtractIcon(riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SetCurrentProcessExplicitAppUserModelID(app_id : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun GetCurrentProcessExplicitAppUserModelID(app_id : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetTemporaryPropertyForItem(psi : Void*, propkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, ppropvar : Win32cr::System::Com::StructuredStorage::PROPVARIANT*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHSetTemporaryPropertyForItem(psi : Void*, propkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, propvar : Win32cr::System::Com::StructuredStorage::PROPVARIANT*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHShowManageLibraryUI(psiLibrary : Void*, hwndOwner : Win32cr::Foundation::HWND, pszTitle : Win32cr::Foundation::PWSTR, pszInstruction : Win32cr::Foundation::PWSTR, lmdOptions : Win32cr::UI::Shell::LIBRARYMANAGEDIALOGOPTIONS) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHResolveLibrary(psiLibrary : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHAssocEnumHandlers(pszExtra : Win32cr::Foundation::PWSTR, afFilter : Win32cr::UI::Shell::ASSOC_FILTER, ppEnumHandler : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHAssocEnumHandlersForProtocolByApplication(protocol : Win32cr::Foundation::PWSTR, riid : LibC::GUID*, enumHandlers : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HMONITOR_UserSize(param0 : UInt32*, param1 : UInt32, param2 : Win32cr::Graphics::Gdi::HMONITOR*) : UInt32

    # :nodoc:
    fun HMONITOR_UserMarshal(param0 : UInt32*, param1 : UInt8*, param2 : Win32cr::Graphics::Gdi::HMONITOR*) : UInt8*

    # :nodoc:
    fun HMONITOR_UserUnmarshal(param0 : UInt32*, param1 : UInt8*, param2 : Win32cr::Graphics::Gdi::HMONITOR*) : UInt8*

    # :nodoc:
    fun HMONITOR_UserFree(param0 : UInt32*, param1 : Win32cr::Graphics::Gdi::HMONITOR*) : Void

    # :nodoc:
    fun HMONITOR_UserSize64(param0 : UInt32*, param1 : UInt32, param2 : Win32cr::Graphics::Gdi::HMONITOR*) : UInt32

    # :nodoc:
    fun HMONITOR_UserMarshal64(param0 : UInt32*, param1 : UInt8*, param2 : Win32cr::Graphics::Gdi::HMONITOR*) : UInt8*

    # :nodoc:
    fun HMONITOR_UserUnmarshal64(param0 : UInt32*, param1 : UInt8*, param2 : Win32cr::Graphics::Gdi::HMONITOR*) : UInt8*

    # :nodoc:
    fun HMONITOR_UserFree64(param0 : UInt32*, param1 : Win32cr::Graphics::Gdi::HMONITOR*) : Void

    # :nodoc:
    fun SHCreateDefaultPropertiesOp(psi : Void*, ppFileOp : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHSetDefaultProperties(hwnd : Win32cr::Foundation::HWND, psi : Void*, dwFileOpFlags : UInt32, pfops : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetMalloc(ppMalloc : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHAlloc(cb : LibC::UIntPtrT) : Void*

    # :nodoc:
    fun SHFree(pv : Void*) : Void

    # :nodoc:
    fun SHGetIconOverlayIndexA(pszIconPath : Win32cr::Foundation::PSTR, iIconIndex : Int32) : Int32

    # :nodoc:
    fun SHGetIconOverlayIndexW(pszIconPath : Win32cr::Foundation::PWSTR, iIconIndex : Int32) : Int32

    # :nodoc:
    fun ILClone(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::UI::Shell::Common::ITEMIDLIST*

    # :nodoc:
    fun ILCloneFirst(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::UI::Shell::Common::ITEMIDLIST*

    # :nodoc:
    fun ILCombine(pidl1 : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidl2 : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::UI::Shell::Common::ITEMIDLIST*

    # :nodoc:
    fun ILFree(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Void

    # :nodoc:
    fun ILGetNext(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::UI::Shell::Common::ITEMIDLIST*

    # :nodoc:
    fun ILGetSize(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : UInt32

    # :nodoc:
    fun ILFindChild(pidlParent : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidlChild : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::UI::Shell::Common::ITEMIDLIST*

    # :nodoc:
    fun ILFindLastID(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::UI::Shell::Common::ITEMIDLIST*

    # :nodoc:
    fun ILRemoveLastID(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun ILIsEqual(pidl1 : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidl2 : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun ILIsParent(pidl1 : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidl2 : Win32cr::UI::Shell::Common::ITEMIDLIST*, fImmediate : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun ILSaveToStream(pstm : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun ILLoadFromStreamEx(pstm : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun ILCreateFromPathA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::UI::Shell::Common::ITEMIDLIST*

    # :nodoc:
    fun ILCreateFromPathW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::UI::Shell::Common::ITEMIDLIST*

    # :nodoc:
    fun SHILCreateFromPath(pszPath : Win32cr::Foundation::PWSTR, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, rgfInOut : UInt32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun ILAppendID(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pmkid : Win32cr::UI::Shell::Common::SHITEMID*, fAppend : Win32cr::Foundation::BOOL) : Win32cr::UI::Shell::Common::ITEMIDLIST*

    # :nodoc:
    fun SHGetPathFromIDListEx(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszPath : UInt16*, cchPath : UInt32, uOpts : Int32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHGetPathFromIDListA(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszPath : UInt8*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHGetPathFromIDListW(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszPath : UInt16*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHCreateDirectory(hwnd : Win32cr::Foundation::HWND, pszPath : Win32cr::Foundation::PWSTR) : Int32

    # :nodoc:
    fun SHCreateDirectoryExA(hwnd : Win32cr::Foundation::HWND, pszPath : Win32cr::Foundation::PSTR, psa : Win32cr::Security::SECURITY_ATTRIBUTES*) : Int32

    # :nodoc:
    fun SHCreateDirectoryExW(hwnd : Win32cr::Foundation::HWND, pszPath : Win32cr::Foundation::PWSTR, psa : Win32cr::Security::SECURITY_ATTRIBUTES*) : Int32

    # :nodoc:
    fun SHOpenFolderAndSelectItems(pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateShellItem(pidlParent : Win32cr::UI::Shell::Common::ITEMIDLIST*, psfParent : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppsi : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetSpecialFolderLocation(hwnd : Win32cr::Foundation::HWND, csidl : Int32, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCloneSpecialIDList(hwnd : Win32cr::Foundation::HWND, csidl : Int32, fCreate : Win32cr::Foundation::BOOL) : Win32cr::UI::Shell::Common::ITEMIDLIST*

    # :nodoc:
    fun SHGetSpecialFolderPathA(hwnd : Win32cr::Foundation::HWND, pszPath : UInt8*, csidl : Int32, fCreate : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHGetSpecialFolderPathW(hwnd : Win32cr::Foundation::HWND, pszPath : UInt16*, csidl : Int32, fCreate : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHFlushSFCache : Void

    # :nodoc:
    fun SHGetFolderPathA(hwnd : Win32cr::Foundation::HWND, csidl : Int32, hToken : Win32cr::Foundation::HANDLE, dwFlags : UInt32, pszPath : UInt8*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetFolderPathW(hwnd : Win32cr::Foundation::HWND, csidl : Int32, hToken : Win32cr::Foundation::HANDLE, dwFlags : UInt32, pszPath : UInt16*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetFolderLocation(hwnd : Win32cr::Foundation::HWND, csidl : Int32, hToken : Win32cr::Foundation::HANDLE, dwFlags : UInt32, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHSetFolderPathA(csidl : Int32, hToken : Win32cr::Foundation::HANDLE, dwFlags : UInt32, pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHSetFolderPathW(csidl : Int32, hToken : Win32cr::Foundation::HANDLE, dwFlags : UInt32, pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetFolderPathAndSubDirA(hwnd : Win32cr::Foundation::HWND, csidl : Int32, hToken : Win32cr::Foundation::HANDLE, dwFlags : UInt32, pszSubDir : Win32cr::Foundation::PSTR, pszPath : UInt8*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetFolderPathAndSubDirW(hwnd : Win32cr::Foundation::HWND, csidl : Int32, hToken : Win32cr::Foundation::HANDLE, dwFlags : UInt32, pszSubDir : Win32cr::Foundation::PWSTR, pszPath : UInt16*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetKnownFolderIDList(rfid : LibC::GUID*, dwFlags : UInt32, hToken : Win32cr::Foundation::HANDLE, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHSetKnownFolderPath(rfid : LibC::GUID*, dwFlags : UInt32, hToken : Win32cr::Foundation::HANDLE, pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    # Commented out due to being part of LibC
    # :nodoc:
    #fun SHGetKnownFolderPath(rfid : LibC::GUID*, dwFlags : UInt32, hToken : Win32cr::Foundation::HANDLE, ppszPath : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetKnownFolderItem(rfid : LibC::GUID*, flags : Win32cr::UI::Shell::KNOWN_FOLDER_FLAG, hToken : Win32cr::Foundation::HANDLE, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetSetFolderCustomSettings(pfcs : Win32cr::UI::Shell::SHFOLDERCUSTOMSETTINGS*, pszPath : Win32cr::Foundation::PWSTR, dwReadWrite : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHBrowseForFolderA(lpbi : Win32cr::UI::Shell::BROWSEINFOA*) : Win32cr::UI::Shell::Common::ITEMIDLIST*

    # :nodoc:
    fun SHBrowseForFolderW(lpbi : Win32cr::UI::Shell::BROWSEINFOW*) : Win32cr::UI::Shell::Common::ITEMIDLIST*

    # :nodoc:
    fun SHLoadInProc(rclsid : LibC::GUID*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetDesktopFolder(ppshf : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHChangeNotify(wEventId : Win32cr::UI::Shell::SHCNE_ID, uFlags : Win32cr::UI::Shell::SHCNF_FLAGS, dwItem1 : Void*, dwItem2 : Void*) : Void

    # :nodoc:
    fun SHAddToRecentDocs(uFlags : UInt32, pv : Void*) : Void

    # :nodoc:
    fun SHHandleUpdateImage(pidlExtra : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Int32

    # :nodoc:
    fun SHUpdateImageA(pszHashItem : Win32cr::Foundation::PSTR, iIndex : Int32, uFlags : UInt32, iImageIndex : Int32) : Void

    # :nodoc:
    fun SHUpdateImageW(pszHashItem : Win32cr::Foundation::PWSTR, iIndex : Int32, uFlags : UInt32, iImageIndex : Int32) : Void

    # :nodoc:
    fun SHChangeNotifyRegister(hwnd : Win32cr::Foundation::HWND, fSources : Win32cr::UI::Shell::SHCNRF_SOURCE, fEvents : Int32, wMsg : UInt32, cEntries : Int32, pshcne : Win32cr::UI::Shell::SHChangeNotifyEntry*) : UInt32

    # :nodoc:
    fun SHChangeNotifyDeregister(ulID : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHChangeNotification_Lock(hChange : Win32cr::Foundation::HANDLE, dwProcId : UInt32, pppidl : Win32cr::UI::Shell::Common::ITEMIDLIST***, plEvent : Int32*) : Win32cr::UI::Shell::ShFindChangeNotificationHandle

    # :nodoc:
    fun SHChangeNotification_Unlock(hLock : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHGetRealIDL(psf : Void*, pidlSimple : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppidlReal : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetInstanceExplorer(ppunk : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetDataFromIDListA(psf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, nFormat : Win32cr::UI::Shell::SHGDFIL_FORMAT, pv : Void*, cb : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetDataFromIDListW(psf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, nFormat : Win32cr::UI::Shell::SHGDFIL_FORMAT, pv : Void*, cb : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun RestartDialog(hwnd : Win32cr::Foundation::HWND, pszPrompt : Win32cr::Foundation::PWSTR, dwReturn : UInt32) : Int32

    # :nodoc:
    fun RestartDialogEx(hwnd : Win32cr::Foundation::HWND, pszPrompt : Win32cr::Foundation::PWSTR, dwReturn : UInt32, dwReasonCode : UInt32) : Int32

    # :nodoc:
    fun SHCoCreateInstance(pszCLSID : Win32cr::Foundation::PWSTR, pclsid : LibC::GUID*, pUnkOuter : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateDataObject(pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, pdtInner : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun CIDLData_CreateFromIDArray(pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, ppdtobj : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateStdEnumFmtEtc(cfmt : UInt32, afmt : Win32cr::System::Com::FORMATETC*, ppenumFormatEtc : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHDoDragDrop(hwnd : Win32cr::Foundation::HWND, pdata : Void*, pdsrc : Void*, dwEffect : Win32cr::System::Ole::DROPEFFECT, pdwEffect : Win32cr::System::Ole::DROPEFFECT*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun DAD_SetDragImage(him : Win32cr::UI::Controls::HIMAGELIST, pptOffset : Win32cr::Foundation::POINT*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DAD_DragEnterEx(hwndTarget : Win32cr::Foundation::HWND, ptStart : Win32cr::Foundation::POINT) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DAD_DragEnterEx2(hwndTarget : Win32cr::Foundation::HWND, ptStart : Win32cr::Foundation::POINT, pdtObject : Void*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DAD_ShowDragImage(fShow : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DAD_DragMove(pt : Win32cr::Foundation::POINT) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DAD_DragLeave : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DAD_AutoScroll(hwnd : Win32cr::Foundation::HWND, pad : Win32cr::UI::Shell::AUTO_SCROLL_DATA*, pptNow : Win32cr::Foundation::POINT*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun ReadCabinetState(pcs : Win32cr::UI::Shell::CABINETSTATE*, cLength : Int32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun WriteCabinetState(pcs : Win32cr::UI::Shell::CABINETSTATE*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathMakeUniqueName(pszUniqueName : UInt16*, cchMax : UInt32, pszTemplate : Win32cr::Foundation::PWSTR, pszLongPlate : Win32cr::Foundation::PWSTR, pszDir : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsExe(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathCleanupSpec(pszDir : Win32cr::Foundation::PWSTR, pszSpec : Win32cr::Foundation::PWSTR) : Win32cr::UI::Shell::PCS_RET

    # :nodoc:
    fun PathResolve(pszPath : UInt16*, dirs : UInt16**, fFlags : Win32cr::UI::Shell::PRF_FLAGS) : Int32

    # :nodoc:
    fun GetFileNameFromBrowse(hwnd : Win32cr::Foundation::HWND, pszFilePath : UInt16*, cchFilePath : UInt32, pszWorkingDir : Win32cr::Foundation::PWSTR, pszDefExt : Win32cr::Foundation::PWSTR, pszFilters : Win32cr::Foundation::PWSTR, pszTitle : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DriveType(iDrive : Int32) : Int32

    # :nodoc:
    fun RealDriveType(iDrive : Int32, fOKToHitNet : Win32cr::Foundation::BOOL) : Int32

    # :nodoc:
    fun IsNetDrive(iDrive : Int32) : Int32

    # :nodoc:
    fun Shell_MergeMenus(hmDst : Win32cr::UI::WindowsAndMessaging::HMENU, hmSrc : Win32cr::UI::WindowsAndMessaging::HMENU, uInsert : UInt32, uIDAdjust : UInt32, uIDAdjustMax : UInt32, uFlags : Win32cr::UI::Shell::MM_FLAGS) : UInt32

    # :nodoc:
    fun SHObjectProperties(hwnd : Win32cr::Foundation::HWND, shopObjectType : Win32cr::UI::Shell::SHOP_TYPE, pszObjectName : Win32cr::Foundation::PWSTR, pszPropertyPage : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHFormatDrive(hwnd : Win32cr::Foundation::HWND, drive : UInt32, fmtID : Win32cr::UI::Shell::SHFMT_ID, options : Win32cr::UI::Shell::SHFMT_OPT) : UInt32

    # :nodoc:
    fun SHDestroyPropSheetExtArray(hpsxa : Win32cr::UI::Shell::HPSXA) : Void

    # :nodoc:
    fun SHAddFromPropSheetExtArray(hpsxa : Win32cr::UI::Shell::HPSXA, lpfnAddPage : Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, lParam : Win32cr::Foundation::LPARAM) : UInt32

    # :nodoc:
    fun SHReplaceFromPropSheetExtArray(hpsxa : Win32cr::UI::Shell::HPSXA, uPageID : UInt32, lpfnReplaceWith : Win32cr::UI::Controls::LPFNSVADDPROPSHEETPAGE, lParam : Win32cr::Foundation::LPARAM) : UInt32

    # :nodoc:
    fun OpenRegStream(hkey : Win32cr::System::Registry::HKEY, pszSubkey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, grfMode : UInt32) : Void*

    # :nodoc:
    fun SHFindFiles(pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, pidlSaveFile : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathGetShortPath(pszLongPath : UInt16*) : Void

    # :nodoc:
    fun PathYetAnotherMakeUniqueName(pszUniqueName : UInt16*, pszPath : Win32cr::Foundation::PWSTR, pszShort : Win32cr::Foundation::PWSTR, pszFileSpec : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun Win32DeleteFile(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHRestricted(rest : Win32cr::UI::Shell::RESTRICTIONS) : UInt32

    # :nodoc:
    fun SignalFileOpen(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun AssocGetDetailsOfPropKey(psf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pkey : Win32cr::UI::Shell::PropertiesSystem::PROPERTYKEY*, pv : Win32cr::System::Com::VARIANT*, pfFoundPropKey : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHStartNetConnectionDialogW(hwnd : Win32cr::Foundation::HWND, pszRemoteName : Win32cr::Foundation::PWSTR, dwType : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHDefExtractIconA(pszIconFile : Win32cr::Foundation::PSTR, iIndex : Int32, uFlags : UInt32, phiconLarge : Win32cr::UI::WindowsAndMessaging::HICON*, phiconSmall : Win32cr::UI::WindowsAndMessaging::HICON*, nIconSize : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHDefExtractIconW(pszIconFile : Win32cr::Foundation::PWSTR, iIndex : Int32, uFlags : UInt32, phiconLarge : Win32cr::UI::WindowsAndMessaging::HICON*, phiconSmall : Win32cr::UI::WindowsAndMessaging::HICON*, nIconSize : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHOpenWithDialog(hwndParent : Win32cr::Foundation::HWND, poainfo : Win32cr::UI::Shell::OPENASINFO*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun Shell_GetImageLists(phiml : Win32cr::UI::Controls::HIMAGELIST*, phimlSmall : Win32cr::UI::Controls::HIMAGELIST*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun Shell_GetCachedImageIndex(pwszIconPath : Win32cr::Foundation::PWSTR, iIconIndex : Int32, uIconFlags : UInt32) : Int32

    # :nodoc:
    fun Shell_GetCachedImageIndexA(pszIconPath : Win32cr::Foundation::PSTR, iIconIndex : Int32, uIconFlags : UInt32) : Int32

    # :nodoc:
    fun Shell_GetCachedImageIndexW(pszIconPath : Win32cr::Foundation::PWSTR, iIconIndex : Int32, uIconFlags : UInt32) : Int32

    # :nodoc:
    fun SHValidateUNC(hwndOwner : Win32cr::Foundation::HWND, pszFile : Win32cr::Foundation::PWSTR, fConnect : Win32cr::UI::Shell::VALIDATEUNC_OPTION) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHSetInstanceExplorer(punk : Void*) : Void

    # :nodoc:
    fun IsUserAnAdmin : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHShellFolderView_Message(hwndMain : Win32cr::Foundation::HWND, uMsg : UInt32, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT

    # :nodoc:
    fun SHCreateShellFolderView(pcsfv : Win32cr::UI::Shell::SFV_CREATE*, ppsv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun CDefFolderMenu_Create2(pidlFolder : Win32cr::UI::Shell::Common::ITEMIDLIST*, hwnd : Win32cr::Foundation::HWND, cidl : UInt32, apidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, psf : Void*, pfn : Win32cr::UI::Shell::LPFNDFMCALLBACK, nKeys : UInt32, ahkeys : Win32cr::System::Registry::HKEY*, ppcm : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateDefaultContextMenu(pdcm : Win32cr::UI::Shell::DEFCONTEXTMENU*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHFind_InitMenuPopup(hmenu : Win32cr::UI::WindowsAndMessaging::HMENU, hwndOwner : Win32cr::Foundation::HWND, idCmdFirst : UInt32, idCmdLast : UInt32) : Void*

    # :nodoc:
    fun SHCreateShellFolderViewEx(pcsfv : Win32cr::UI::Shell::CSFV*, ppsv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetSetSettings(lpss : Win32cr::UI::Shell::SHELLSTATEA*, dwMask : Win32cr::UI::Shell::SSF_MASK, bSet : Win32cr::Foundation::BOOL) : Void

    # :nodoc:
    fun SHGetSettings(psfs : Win32cr::UI::Shell::SHELLFLAGSTATE*, dwMask : UInt32) : Void

    # :nodoc:
    fun SHBindToParent(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, riid : LibC::GUID*, ppv : Void**, ppidlLast : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHBindToFolderIDListParent(psfRoot : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, riid : LibC::GUID*, ppv : Void**, ppidlLast : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHBindToFolderIDListParentEx(psfRoot : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppbc : Void*, riid : LibC::GUID*, ppv : Void**, ppidlLast : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHBindToObject(psf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pbc : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHParseDisplayName(pszName : Win32cr::Foundation::PWSTR, pbc : Void*, ppidl : Win32cr::UI::Shell::Common::ITEMIDLIST**, sfgaoIn : UInt32, psfgaoOut : UInt32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHPathPrepareForWriteA(hwnd : Win32cr::Foundation::HWND, punkEnableModless : Void*, pszPath : Win32cr::Foundation::PSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHPathPrepareForWriteW(hwnd : Win32cr::Foundation::HWND, punkEnableModless : Void*, pszPath : Win32cr::Foundation::PWSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateFileExtractIconW(pszFile : Win32cr::Foundation::PWSTR, dwFileAttributes : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHLimitInputEdit(hwndEdit : Win32cr::Foundation::HWND, psf : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetAttributesFromDataObject(pdo : Void*, dwAttributeMask : UInt32, pdwAttributes : UInt32*, pcItems : UInt32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHMapPIDLToSystemImageListIndex(pshf : Void*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, piIndexSel : Int32*) : Int32

    # :nodoc:
    fun SHCLSIDFromString(psz : Win32cr::Foundation::PWSTR, pclsid : LibC::GUID*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PickIconDlg(hwnd : Win32cr::Foundation::HWND, pszIconPath : UInt16*, cchIconPath : UInt32, piIconIndex : Int32*) : Int32

    # :nodoc:
    fun StgMakeUniqueName(pstgParent : Void*, pszFileSpec : Win32cr::Foundation::PWSTR, grfMode : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHChangeNotifyRegisterThread(status : Win32cr::UI::Shell::SCNRT_STATUS) : Void

    # :nodoc:
    fun PathQualify(psz : Win32cr::Foundation::PWSTR) : Void

    # :nodoc:
    fun PathIsSlowA(pszFile : Win32cr::Foundation::PSTR, dwAttr : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsSlowW(pszFile : Win32cr::Foundation::PWSTR, dwAttr : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHCreatePropSheetExtArray(hKey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PWSTR, max_iface : UInt32) : Win32cr::UI::Shell::HPSXA

    # :nodoc:
    fun SHOpenPropSheetW(pszCaption : Win32cr::Foundation::PWSTR, ahkeys : Win32cr::System::Registry::HKEY*, ckeys : UInt32, pclsidDefault : LibC::GUID*, pdtobj : Void*, psb : Void*, pStartPage : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SoftwareUpdateMessageBox(hWnd : Win32cr::Foundation::HWND, pszDistUnit : Win32cr::Foundation::PWSTR, dwFlags : UInt32, psdi : Win32cr::System::Com::Urlmon::SOFTDISTINFO*) : UInt32

    # :nodoc:
    fun SHMultiFileProperties(pdtobj : Void*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateQueryCancelAutoPlayMoniker(ppmoniker : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun ImportPrivacySettings(pszFilename : Win32cr::Foundation::PWSTR, pfParsePrivacyPreferences : Win32cr::Foundation::BOOL*, pfParsePerSiteRules : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetScaleFactorForDevice(deviceType : Win32cr::UI::Shell::DISPLAY_DEVICE_TYPE) : Win32cr::UI::Shell::Common::DEVICE_SCALE_FACTOR

    # :nodoc:
    fun RegisterScaleChangeNotifications(displayDevice : Win32cr::UI::Shell::DISPLAY_DEVICE_TYPE, hwndNotify : Win32cr::Foundation::HWND, uMsgNotify : UInt32, pdwCookie : UInt32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun RevokeScaleChangeNotifications(displayDevice : Win32cr::UI::Shell::DISPLAY_DEVICE_TYPE, dwCookie : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun GetScaleFactorForMonitor(hMon : Win32cr::Graphics::Gdi::HMONITOR, pScale : Win32cr::UI::Shell::Common::DEVICE_SCALE_FACTOR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun RegisterScaleChangeEvent(hEvent : Win32cr::Foundation::HANDLE, pdwCookie : LibC::UIntPtrT*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UnregisterScaleChangeEvent(dwCookie : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun GetDpiForShellUIComponent(param0 : Win32cr::UI::Shell::SHELL_UI_COMPONENT) : UInt32

    # :nodoc:
    fun CommandLineToArgvW(lpCmdLine : Win32cr::Foundation::PWSTR, pNumArgs : Int32*) : Win32cr::Foundation::PWSTR*

    # :nodoc:
    fun DragQueryFileA(hDrop : Win32cr::UI::Shell::HDROP, iFile : UInt32, lpszFile : UInt8*, cch : UInt32) : UInt32

    # :nodoc:
    fun DragQueryFileW(hDrop : Win32cr::UI::Shell::HDROP, iFile : UInt32, lpszFile : UInt16*, cch : UInt32) : UInt32

    # :nodoc:
    fun DragQueryPoint(hDrop : Win32cr::UI::Shell::HDROP, ppt : Win32cr::Foundation::POINT*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun DragFinish(hDrop : Win32cr::UI::Shell::HDROP) : Void

    # :nodoc:
    fun DragAcceptFiles(hWnd : Win32cr::Foundation::HWND, fAccept : Win32cr::Foundation::BOOL) : Void

    # :nodoc:
    fun ShellExecuteA(hwnd : Win32cr::Foundation::HWND, lpOperation : Win32cr::Foundation::PSTR, lpFile : Win32cr::Foundation::PSTR, lpParameters : Win32cr::Foundation::PSTR, lpDirectory : Win32cr::Foundation::PSTR, nShowCmd : Int32) : Win32cr::Foundation::HINSTANCE

    # :nodoc:
    fun ShellExecuteW(hwnd : Win32cr::Foundation::HWND, lpOperation : Win32cr::Foundation::PWSTR, lpFile : Win32cr::Foundation::PWSTR, lpParameters : Win32cr::Foundation::PWSTR, lpDirectory : Win32cr::Foundation::PWSTR, nShowCmd : Int32) : Win32cr::Foundation::HINSTANCE

    # :nodoc:
    fun FindExecutableA(lpFile : Win32cr::Foundation::PSTR, lpDirectory : Win32cr::Foundation::PSTR, lpResult : UInt8*) : Win32cr::Foundation::HINSTANCE

    # :nodoc:
    fun FindExecutableW(lpFile : Win32cr::Foundation::PWSTR, lpDirectory : Win32cr::Foundation::PWSTR, lpResult : UInt16*) : Win32cr::Foundation::HINSTANCE

    # :nodoc:
    fun ShellAboutA(hWnd : Win32cr::Foundation::HWND, szApp : Win32cr::Foundation::PSTR, szOtherStuff : Win32cr::Foundation::PSTR, hIcon : Win32cr::UI::WindowsAndMessaging::HICON) : Int32

    # :nodoc:
    fun ShellAboutW(hWnd : Win32cr::Foundation::HWND, szApp : Win32cr::Foundation::PWSTR, szOtherStuff : Win32cr::Foundation::PWSTR, hIcon : Win32cr::UI::WindowsAndMessaging::HICON) : Int32

    # :nodoc:
    fun DuplicateIcon(hInst : Win32cr::Foundation::HINSTANCE, hIcon : Win32cr::UI::WindowsAndMessaging::HICON) : Win32cr::UI::WindowsAndMessaging::HICON

    # :nodoc:
    fun ExtractAssociatedIconA(hInst : Win32cr::Foundation::HINSTANCE, pszIconPath : UInt8*, piIcon : UInt16*) : Win32cr::UI::WindowsAndMessaging::HICON

    # :nodoc:
    fun ExtractAssociatedIconW(hInst : Win32cr::Foundation::HINSTANCE, pszIconPath : UInt16*, piIcon : UInt16*) : Win32cr::UI::WindowsAndMessaging::HICON

    # :nodoc:
    fun ExtractAssociatedIconExA(hInst : Win32cr::Foundation::HINSTANCE, pszIconPath : UInt8*, piIconIndex : UInt16*, piIconId : UInt16*) : Win32cr::UI::WindowsAndMessaging::HICON

    # :nodoc:
    fun ExtractAssociatedIconExW(hInst : Win32cr::Foundation::HINSTANCE, pszIconPath : UInt16*, piIconIndex : UInt16*, piIconId : UInt16*) : Win32cr::UI::WindowsAndMessaging::HICON

    # :nodoc:
    fun ExtractIconA(hInst : Win32cr::Foundation::HINSTANCE, pszExeFileName : Win32cr::Foundation::PSTR, nIconIndex : UInt32) : Win32cr::UI::WindowsAndMessaging::HICON

    # :nodoc:
    fun ExtractIconW(hInst : Win32cr::Foundation::HINSTANCE, pszExeFileName : Win32cr::Foundation::PWSTR, nIconIndex : UInt32) : Win32cr::UI::WindowsAndMessaging::HICON

    # :nodoc:
    fun SHAppBarMessage(dwMessage : UInt32, pData : Win32cr::UI::Shell::APPBARDATA*) : LibC::UIntPtrT

    # :nodoc:
    fun DoEnvironmentSubstA(pszSrc : UInt8*, cchSrc : UInt32) : UInt32

    # :nodoc:
    fun DoEnvironmentSubstW(pszSrc : UInt16*, cchSrc : UInt32) : UInt32

    # :nodoc:
    fun ExtractIconExA(lpszFile : Win32cr::Foundation::PSTR, nIconIndex : Int32, phiconLarge : Win32cr::UI::WindowsAndMessaging::HICON*, phiconSmall : Win32cr::UI::WindowsAndMessaging::HICON*, nIcons : UInt32) : UInt32

    # :nodoc:
    fun ExtractIconExW(lpszFile : Win32cr::Foundation::PWSTR, nIconIndex : Int32, phiconLarge : Win32cr::UI::WindowsAndMessaging::HICON*, phiconSmall : Win32cr::UI::WindowsAndMessaging::HICON*, nIcons : UInt32) : UInt32

    # :nodoc:
    fun SHFileOperationA(lpFileOp : Win32cr::UI::Shell::SHFILEOPSTRUCTA*) : Int32

    # :nodoc:
    fun SHFileOperationW(lpFileOp : Win32cr::UI::Shell::SHFILEOPSTRUCTW*) : Int32

    # :nodoc:
    fun SHFreeNameMappings(hNameMappings : Win32cr::Foundation::HANDLE) : Void

    # :nodoc:
    fun ShellExecuteExA(pExecInfo : Win32cr::UI::Shell::SHELLEXECUTEINFOA*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun ShellExecuteExW(pExecInfo : Win32cr::UI::Shell::SHELLEXECUTEINFOW*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHCreateProcessAsUserW(pscpi : Win32cr::UI::Shell::SHCREATEPROCESSINFOW*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHEvaluateSystemCommandTemplate(pszCmdTemplate : Win32cr::Foundation::PWSTR, ppszApplication : Win32cr::Foundation::PWSTR*, ppszCommandLine : Win32cr::Foundation::PWSTR*, ppszParameters : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AssocCreateForClasses(rgClasses : Win32cr::UI::Shell::ASSOCIATIONELEMENT*, cClasses : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHQueryRecycleBinA(pszRootPath : Win32cr::Foundation::PSTR, pSHQueryRBInfo : Win32cr::UI::Shell::SHQUERYRBINFO*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHQueryRecycleBinW(pszRootPath : Win32cr::Foundation::PWSTR, pSHQueryRBInfo : Win32cr::UI::Shell::SHQUERYRBINFO*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHEmptyRecycleBinA(hwnd : Win32cr::Foundation::HWND, pszRootPath : Win32cr::Foundation::PSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHEmptyRecycleBinW(hwnd : Win32cr::Foundation::HWND, pszRootPath : Win32cr::Foundation::PWSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHQueryUserNotificationState(pquns : Win32cr::UI::Shell::QUERY_USER_NOTIFICATION_STATE*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun Shell_NotifyIconA(dwMessage : Win32cr::UI::Shell::NOTIFY_ICON_MESSAGE, lpData : Win32cr::UI::Shell::NOTIFYICONDATAA*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun Shell_NotifyIconW(dwMessage : Win32cr::UI::Shell::NOTIFY_ICON_MESSAGE, lpData : Win32cr::UI::Shell::NOTIFYICONDATAW*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun Shell_NotifyIconGetRect(identifier : Win32cr::UI::Shell::NOTIFYICONIDENTIFIER*, iconLocation : Win32cr::Foundation::RECT*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetFileInfoA(pszPath : Win32cr::Foundation::PSTR, dwFileAttributes : Win32cr::Storage::FileSystem::FILE_FLAGS_AND_ATTRIBUTES, psfi : Win32cr::UI::Shell::SHFILEINFOA*, cbFileInfo : UInt32, uFlags : Win32cr::UI::Shell::SHGFI_FLAGS) : LibC::UIntPtrT

    # :nodoc:
    fun SHGetFileInfoW(pszPath : Win32cr::Foundation::PWSTR, dwFileAttributes : Win32cr::Storage::FileSystem::FILE_FLAGS_AND_ATTRIBUTES, psfi : Win32cr::UI::Shell::SHFILEINFOW*, cbFileInfo : UInt32, uFlags : Win32cr::UI::Shell::SHGFI_FLAGS) : LibC::UIntPtrT

    # :nodoc:
    fun SHGetStockIconInfo(siid : Win32cr::UI::Shell::SHSTOCKICONID, uFlags : UInt32, psii : Win32cr::UI::Shell::SHSTOCKICONINFO*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetDiskFreeSpaceExA(pszDirectoryName : Win32cr::Foundation::PSTR, pulFreeBytesAvailableToCaller : Win32cr::Foundation::ULARGE_INTEGER*, pulTotalNumberOfBytes : Win32cr::Foundation::ULARGE_INTEGER*, pulTotalNumberOfFreeBytes : Win32cr::Foundation::ULARGE_INTEGER*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHGetDiskFreeSpaceExW(pszDirectoryName : Win32cr::Foundation::PWSTR, pulFreeBytesAvailableToCaller : Win32cr::Foundation::ULARGE_INTEGER*, pulTotalNumberOfBytes : Win32cr::Foundation::ULARGE_INTEGER*, pulTotalNumberOfFreeBytes : Win32cr::Foundation::ULARGE_INTEGER*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHGetNewLinkInfoA(pszLinkTo : Win32cr::Foundation::PSTR, pszDir : Win32cr::Foundation::PSTR, pszName : UInt8*, pfMustCopy : Win32cr::Foundation::BOOL*, uFlags : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHGetNewLinkInfoW(pszLinkTo : Win32cr::Foundation::PWSTR, pszDir : Win32cr::Foundation::PWSTR, pszName : UInt16*, pfMustCopy : Win32cr::Foundation::BOOL*, uFlags : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHInvokePrinterCommandA(hwnd : Win32cr::Foundation::HWND, uAction : UInt32, lpBuf1 : Win32cr::Foundation::PSTR, lpBuf2 : Win32cr::Foundation::PSTR, fModal : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHInvokePrinterCommandW(hwnd : Win32cr::Foundation::HWND, uAction : UInt32, lpBuf1 : Win32cr::Foundation::PWSTR, lpBuf2 : Win32cr::Foundation::PWSTR, fModal : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHLoadNonloadedIconOverlayIdentifiers : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHIsFileAvailableOffline(pwszPath : Win32cr::Foundation::PWSTR, pdwStatus : UInt32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHSetLocalizedName(pszPath : Win32cr::Foundation::PWSTR, pszResModule : Win32cr::Foundation::PWSTR, idsRes : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHRemoveLocalizedName(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetLocalizedName(pszPath : Win32cr::Foundation::PWSTR, pszResModule : UInt16*, cch : UInt32, pidsRes : Int32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun ShellMessageBoxA(hAppInst : Win32cr::Foundation::HINSTANCE, hWnd : Win32cr::Foundation::HWND, lpcText : Win32cr::Foundation::PSTR, lpcTitle : Win32cr::Foundation::PSTR, fuStyle : UInt32) : Int32

    # :nodoc:
    fun ShellMessageBoxW(hAppInst : Win32cr::Foundation::HINSTANCE, hWnd : Win32cr::Foundation::HWND, lpcText : Win32cr::Foundation::PWSTR, lpcTitle : Win32cr::Foundation::PWSTR, fuStyle : UInt32) : Int32

    # :nodoc:
    fun IsLFNDriveA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun IsLFNDriveW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHEnumerateUnreadMailAccountsW(hKeyUser : Win32cr::System::Registry::HKEY, dwIndex : UInt32, pszMailAddress : UInt16*, cchMailAddress : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetUnreadMailCountW(hKeyUser : Win32cr::System::Registry::HKEY, pszMailAddress : Win32cr::Foundation::PWSTR, pdwCount : UInt32*, pFileTime : Win32cr::Foundation::FILETIME*, pszShellExecuteCommand : UInt16*, cchShellExecuteCommand : Int32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHSetUnreadMailCountW(pszMailAddress : Win32cr::Foundation::PWSTR, dwCount : UInt32, pszShellExecuteCommand : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHTestTokenMembership(hToken : Win32cr::Foundation::HANDLE, ulRID : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHGetImageList(iImageList : Int32, riid : LibC::GUID*, ppvObj : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun InitNetworkAddressControl : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHGetDriveMedia(pszDrive : Win32cr::Foundation::PWSTR, pdwMediaContent : UInt32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun StrChrA(pszStart : Win32cr::Foundation::PSTR, wMatch : UInt16) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun StrChrW(pszStart : Win32cr::Foundation::PWSTR, wMatch : UInt16) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrChrIA(pszStart : Win32cr::Foundation::PSTR, wMatch : UInt16) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun StrChrIW(pszStart : Win32cr::Foundation::PWSTR, wMatch : UInt16) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrChrNW(pszStart : Win32cr::Foundation::PWSTR, wMatch : UInt16, cchMax : UInt32) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrChrNIW(pszStart : Win32cr::Foundation::PWSTR, wMatch : UInt16, cchMax : UInt32) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrCmpNA(psz1 : Win32cr::Foundation::PSTR, psz2 : Win32cr::Foundation::PSTR, nChar : Int32) : Int32

    # :nodoc:
    fun StrCmpNW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR, nChar : Int32) : Int32

    # :nodoc:
    fun StrCmpNIA(psz1 : Win32cr::Foundation::PSTR, psz2 : Win32cr::Foundation::PSTR, nChar : Int32) : Int32

    # :nodoc:
    fun StrCmpNIW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR, nChar : Int32) : Int32

    # :nodoc:
    fun StrCSpnA(pszStr : Win32cr::Foundation::PSTR, pszSet : Win32cr::Foundation::PSTR) : Int32

    # :nodoc:
    fun StrCSpnW(pszStr : Win32cr::Foundation::PWSTR, pszSet : Win32cr::Foundation::PWSTR) : Int32

    # :nodoc:
    fun StrCSpnIA(pszStr : Win32cr::Foundation::PSTR, pszSet : Win32cr::Foundation::PSTR) : Int32

    # :nodoc:
    fun StrCSpnIW(pszStr : Win32cr::Foundation::PWSTR, pszSet : Win32cr::Foundation::PWSTR) : Int32

    # :nodoc:
    fun StrDupA(pszSrch : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun StrDupW(pszSrch : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrFormatByteSizeEx(ull : UInt64, flags : Win32cr::UI::Shell::SFBS_FLAGS, pszBuf : UInt16*, cchBuf : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun StrFormatByteSizeA(dw : UInt32, pszBuf : UInt8*, cchBuf : UInt32) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun StrFormatByteSize64A(qdw : Int64, pszBuf : UInt8*, cchBuf : UInt32) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun StrFormatByteSizeW(qdw : Int64, pszBuf : UInt16*, cchBuf : UInt32) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrFormatKBSizeW(qdw : Int64, pszBuf : UInt16*, cchBuf : UInt32) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrFormatKBSizeA(qdw : Int64, pszBuf : UInt8*, cchBuf : UInt32) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun StrFromTimeIntervalA(pszOut : UInt8*, cchMax : UInt32, dwTimeMS : UInt32, digits : Int32) : Int32

    # :nodoc:
    fun StrFromTimeIntervalW(pszOut : UInt16*, cchMax : UInt32, dwTimeMS : UInt32, digits : Int32) : Int32

    # :nodoc:
    fun StrIsIntlEqualA(fCaseSens : Win32cr::Foundation::BOOL, pszString1 : Win32cr::Foundation::PSTR, pszString2 : Win32cr::Foundation::PSTR, nChar : Int32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun StrIsIntlEqualW(fCaseSens : Win32cr::Foundation::BOOL, pszString1 : Win32cr::Foundation::PWSTR, pszString2 : Win32cr::Foundation::PWSTR, nChar : Int32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun StrNCatA(psz1 : UInt8*, psz2 : Win32cr::Foundation::PSTR, cchMax : Int32) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun StrNCatW(psz1 : UInt16*, psz2 : Win32cr::Foundation::PWSTR, cchMax : Int32) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrPBrkA(psz : Win32cr::Foundation::PSTR, pszSet : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun StrPBrkW(psz : Win32cr::Foundation::PWSTR, pszSet : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrRChrA(pszStart : Win32cr::Foundation::PSTR, pszEnd : Win32cr::Foundation::PSTR, wMatch : UInt16) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun StrRChrW(pszStart : Win32cr::Foundation::PWSTR, pszEnd : Win32cr::Foundation::PWSTR, wMatch : UInt16) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrRChrIA(pszStart : Win32cr::Foundation::PSTR, pszEnd : Win32cr::Foundation::PSTR, wMatch : UInt16) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun StrRChrIW(pszStart : Win32cr::Foundation::PWSTR, pszEnd : Win32cr::Foundation::PWSTR, wMatch : UInt16) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrRStrIA(pszSource : Win32cr::Foundation::PSTR, pszLast : Win32cr::Foundation::PSTR, pszSrch : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun StrRStrIW(pszSource : Win32cr::Foundation::PWSTR, pszLast : Win32cr::Foundation::PWSTR, pszSrch : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrSpnA(psz : Win32cr::Foundation::PSTR, pszSet : Win32cr::Foundation::PSTR) : Int32

    # :nodoc:
    fun StrSpnW(psz : Win32cr::Foundation::PWSTR, pszSet : Win32cr::Foundation::PWSTR) : Int32

    # :nodoc:
    fun StrStrA(pszFirst : Win32cr::Foundation::PSTR, pszSrch : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun StrStrW(pszFirst : Win32cr::Foundation::PWSTR, pszSrch : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrStrIA(pszFirst : Win32cr::Foundation::PSTR, pszSrch : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun StrStrIW(pszFirst : Win32cr::Foundation::PWSTR, pszSrch : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrStrNW(pszFirst : Win32cr::Foundation::PWSTR, pszSrch : Win32cr::Foundation::PWSTR, cchMax : UInt32) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrStrNIW(pszFirst : Win32cr::Foundation::PWSTR, pszSrch : Win32cr::Foundation::PWSTR, cchMax : UInt32) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrToIntA(pszSrc : Win32cr::Foundation::PSTR) : Int32

    # :nodoc:
    fun StrToIntW(pszSrc : Win32cr::Foundation::PWSTR) : Int32

    # :nodoc:
    fun StrToIntExA(pszString : Win32cr::Foundation::PSTR, dwFlags : Int32, piRet : Int32*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun StrToIntExW(pszString : Win32cr::Foundation::PWSTR, dwFlags : Int32, piRet : Int32*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun StrToInt64ExA(pszString : Win32cr::Foundation::PSTR, dwFlags : Int32, pllRet : Int64*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun StrToInt64ExW(pszString : Win32cr::Foundation::PWSTR, dwFlags : Int32, pllRet : Int64*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun StrTrimA(psz : Win32cr::Foundation::PSTR, pszTrimChars : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun StrTrimW(psz : Win32cr::Foundation::PWSTR, pszTrimChars : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun StrCatW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrCmpW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR) : Int32

    # :nodoc:
    fun StrCmpIW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR) : Int32

    # :nodoc:
    fun StrCpyW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrCpyNW(pszDst : UInt16*, pszSrc : Win32cr::Foundation::PWSTR, cchMax : Int32) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrCatBuffW(pszDest : UInt16*, pszSrc : Win32cr::Foundation::PWSTR, cchDestBuffSize : Int32) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun StrCatBuffA(pszDest : UInt8*, pszSrc : Win32cr::Foundation::PSTR, cchDestBuffSize : Int32) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun ChrCmpIA(w1 : UInt16, w2 : UInt16) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun ChrCmpIW(w1 : UInt16, w2 : UInt16) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun wvnsprintfA(pszDest : UInt8*, cchDest : Int32, pszFmt : Win32cr::Foundation::PSTR, arglist : Int8*) : Int32

    # :nodoc:
    fun wvnsprintfW(pszDest : UInt16*, cchDest : Int32, pszFmt : Win32cr::Foundation::PWSTR, arglist : Int8*) : Int32

    # :nodoc:
    fun wnsprintfA(pszDest : UInt8*, cchDest : Int32, pszFmt : Win32cr::Foundation::PSTR) : Int32

    # :nodoc:
    fun wnsprintfW(pszDest : UInt16*, cchDest : Int32, pszFmt : Win32cr::Foundation::PWSTR) : Int32

    # :nodoc:
    fun StrRetToStrA(pstr : Win32cr::UI::Shell::Common::STRRET*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppsz : Win32cr::Foundation::PSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun StrRetToStrW(pstr : Win32cr::UI::Shell::Common::STRRET*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, ppsz : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun StrRetToBufA(pstr : Win32cr::UI::Shell::Common::STRRET*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszBuf : UInt8*, cchBuf : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun StrRetToBufW(pstr : Win32cr::UI::Shell::Common::STRRET*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszBuf : UInt16*, cchBuf : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHStrDupA(psz : Win32cr::Foundation::PSTR, ppwsz : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHStrDupW(psz : Win32cr::Foundation::PWSTR, ppwsz : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun StrCmpLogicalW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR) : Int32

    # :nodoc:
    fun StrCatChainW(pszDst : UInt16*, cchDst : UInt32, ichAt : UInt32, pszSrc : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun StrRetToBSTR(pstr : Win32cr::UI::Shell::Common::STRRET*, pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pbstr : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHLoadIndirectString(pszSource : Win32cr::Foundation::PWSTR, pszOutBuf : UInt16*, cchOutBuf : UInt32, ppvReserved : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun IsCharSpaceA(wch : Win32cr::Foundation::CHAR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun IsCharSpaceW(wch : UInt16) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun StrCmpCA(pszStr1 : Win32cr::Foundation::PSTR, pszStr2 : Win32cr::Foundation::PSTR) : Int32

    # :nodoc:
    fun StrCmpCW(pszStr1 : Win32cr::Foundation::PWSTR, pszStr2 : Win32cr::Foundation::PWSTR) : Int32

    # :nodoc:
    fun StrCmpICA(pszStr1 : Win32cr::Foundation::PSTR, pszStr2 : Win32cr::Foundation::PSTR) : Int32

    # :nodoc:
    fun StrCmpICW(pszStr1 : Win32cr::Foundation::PWSTR, pszStr2 : Win32cr::Foundation::PWSTR) : Int32

    # :nodoc:
    fun StrCmpNCA(pszStr1 : Win32cr::Foundation::PSTR, pszStr2 : Win32cr::Foundation::PSTR, nChar : Int32) : Int32

    # :nodoc:
    fun StrCmpNCW(pszStr1 : Win32cr::Foundation::PWSTR, pszStr2 : Win32cr::Foundation::PWSTR, nChar : Int32) : Int32

    # :nodoc:
    fun StrCmpNICA(pszStr1 : Win32cr::Foundation::PSTR, pszStr2 : Win32cr::Foundation::PSTR, nChar : Int32) : Int32

    # :nodoc:
    fun StrCmpNICW(pszStr1 : Win32cr::Foundation::PWSTR, pszStr2 : Win32cr::Foundation::PWSTR, nChar : Int32) : Int32

    # :nodoc:
    fun IntlStrEqWorkerA(fCaseSens : Win32cr::Foundation::BOOL, lpString1 : UInt8*, lpString2 : UInt8*, nChar : Int32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun IntlStrEqWorkerW(fCaseSens : Win32cr::Foundation::BOOL, lpString1 : UInt16*, lpString2 : UInt16*, nChar : Int32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathAddBackslashA(pszPath : UInt8*) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun PathAddBackslashW(pszPath : UInt16*) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun PathAddExtensionA(pszPath : UInt8*, pszExt : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathAddExtensionW(pszPath : UInt16*, pszExt : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathAppendA(pszPath : UInt8*, pszMore : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathAppendW(pszPath : UInt16*, pszMore : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathBuildRootA(pszRoot : UInt8*, iDrive : Int32) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun PathBuildRootW(pszRoot : UInt16*, iDrive : Int32) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun PathCanonicalizeA(pszBuf : UInt8*, pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathCanonicalizeW(pszBuf : UInt16*, pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathCombineA(pszDest : UInt8*, pszDir : Win32cr::Foundation::PSTR, pszFile : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun PathCombineW(pszDest : UInt16*, pszDir : Win32cr::Foundation::PWSTR, pszFile : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun PathCompactPathA(hDC : Win32cr::Graphics::Gdi::HDC, pszPath : UInt8*, dx : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathCompactPathW(hDC : Win32cr::Graphics::Gdi::HDC, pszPath : UInt16*, dx : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathCompactPathExA(pszOut : UInt8*, pszSrc : Win32cr::Foundation::PSTR, cchMax : UInt32, dwFlags : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathCompactPathExW(pszOut : UInt16*, pszSrc : Win32cr::Foundation::PWSTR, cchMax : UInt32, dwFlags : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathCommonPrefixA(pszFile1 : Win32cr::Foundation::PSTR, pszFile2 : Win32cr::Foundation::PSTR, achPath : UInt8*) : Int32

    # :nodoc:
    fun PathCommonPrefixW(pszFile1 : Win32cr::Foundation::PWSTR, pszFile2 : Win32cr::Foundation::PWSTR, achPath : UInt16*) : Int32

    # :nodoc:
    fun PathFileExistsA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathFileExistsW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathFindExtensionA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun PathFindExtensionW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun PathFindFileNameA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun PathFindFileNameW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun PathFindNextComponentA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun PathFindNextComponentW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun PathFindOnPathA(pszPath : UInt8*, ppszOtherDirs : Int8**) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathFindOnPathW(pszPath : UInt16*, ppszOtherDirs : UInt16**) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathFindSuffixArrayA(pszPath : Win32cr::Foundation::PSTR, apszSuffix : Win32cr::Foundation::PSTR*, iArraySize : Int32) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun PathFindSuffixArrayW(pszPath : Win32cr::Foundation::PWSTR, apszSuffix : Win32cr::Foundation::PWSTR*, iArraySize : Int32) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun PathGetArgsA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun PathGetArgsW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun PathIsLFNFileSpecA(pszName : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsLFNFileSpecW(pszName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathGetCharTypeA(ch : UInt8) : UInt32

    # :nodoc:
    fun PathGetCharTypeW(ch : UInt16) : UInt32

    # :nodoc:
    fun PathGetDriveNumberA(pszPath : Win32cr::Foundation::PSTR) : Int32

    # :nodoc:
    fun PathGetDriveNumberW(pszPath : Win32cr::Foundation::PWSTR) : Int32

    # :nodoc:
    fun PathIsDirectoryA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsDirectoryW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsDirectoryEmptyA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsDirectoryEmptyW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsFileSpecA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsFileSpecW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsPrefixA(pszPrefix : Win32cr::Foundation::PSTR, pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsPrefixW(pszPrefix : Win32cr::Foundation::PWSTR, pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsRelativeA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsRelativeW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsRootA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsRootW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsSameRootA(pszPath1 : Win32cr::Foundation::PSTR, pszPath2 : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsSameRootW(pszPath1 : Win32cr::Foundation::PWSTR, pszPath2 : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsUNCA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsUNCW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsNetworkPathA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsNetworkPathW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsUNCServerA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsUNCServerW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsUNCServerShareA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsUNCServerShareW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsContentTypeA(pszPath : Win32cr::Foundation::PSTR, pszContentType : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsContentTypeW(pszPath : Win32cr::Foundation::PWSTR, pszContentType : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsURLA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsURLW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathMakePrettyA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathMakePrettyW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathMatchSpecA(pszFile : Win32cr::Foundation::PSTR, pszSpec : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathMatchSpecW(pszFile : Win32cr::Foundation::PWSTR, pszSpec : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathMatchSpecExA(pszFile : Win32cr::Foundation::PSTR, pszSpec : Win32cr::Foundation::PSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathMatchSpecExW(pszFile : Win32cr::Foundation::PWSTR, pszSpec : Win32cr::Foundation::PWSTR, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathParseIconLocationA(pszIconFile : Win32cr::Foundation::PSTR) : Int32

    # :nodoc:
    fun PathParseIconLocationW(pszIconFile : Win32cr::Foundation::PWSTR) : Int32

    # :nodoc:
    fun PathQuoteSpacesA(lpsz : UInt8*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathQuoteSpacesW(lpsz : UInt16*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathRelativePathToA(pszPath : UInt8*, pszFrom : Win32cr::Foundation::PSTR, dwAttrFrom : UInt32, pszTo : Win32cr::Foundation::PSTR, dwAttrTo : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathRelativePathToW(pszPath : UInt16*, pszFrom : Win32cr::Foundation::PWSTR, dwAttrFrom : UInt32, pszTo : Win32cr::Foundation::PWSTR, dwAttrTo : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathRemoveArgsA(pszPath : Win32cr::Foundation::PSTR) : Void

    # :nodoc:
    fun PathRemoveArgsW(pszPath : Win32cr::Foundation::PWSTR) : Void

    # :nodoc:
    fun PathRemoveBackslashA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun PathRemoveBackslashW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun PathRemoveBlanksA(pszPath : Win32cr::Foundation::PSTR) : Void

    # :nodoc:
    fun PathRemoveBlanksW(pszPath : Win32cr::Foundation::PWSTR) : Void

    # :nodoc:
    fun PathRemoveExtensionA(pszPath : Win32cr::Foundation::PSTR) : Void

    # :nodoc:
    fun PathRemoveExtensionW(pszPath : Win32cr::Foundation::PWSTR) : Void

    # :nodoc:
    fun PathRemoveFileSpecA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathRemoveFileSpecW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathRenameExtensionA(pszPath : UInt8*, pszExt : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathRenameExtensionW(pszPath : UInt16*, pszExt : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathSearchAndQualifyA(pszPath : Win32cr::Foundation::PSTR, pszBuf : UInt8*, cchBuf : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathSearchAndQualifyW(pszPath : Win32cr::Foundation::PWSTR, pszBuf : UInt16*, cchBuf : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathSetDlgItemPathA(hDlg : Win32cr::Foundation::HWND, id : Int32, pszPath : Win32cr::Foundation::PSTR) : Void

    # :nodoc:
    fun PathSetDlgItemPathW(hDlg : Win32cr::Foundation::HWND, id : Int32, pszPath : Win32cr::Foundation::PWSTR) : Void

    # :nodoc:
    fun PathSkipRootA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun PathSkipRootW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun PathStripPathA(pszPath : Win32cr::Foundation::PSTR) : Void

    # :nodoc:
    fun PathStripPathW(pszPath : Win32cr::Foundation::PWSTR) : Void

    # :nodoc:
    fun PathStripToRootA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathStripToRootW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathUnquoteSpacesA(lpsz : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathUnquoteSpacesW(lpsz : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathMakeSystemFolderA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathMakeSystemFolderW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathUnmakeSystemFolderA(pszPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathUnmakeSystemFolderW(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsSystemFolderA(pszPath : Win32cr::Foundation::PSTR, dwAttrb : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathIsSystemFolderW(pszPath : Win32cr::Foundation::PWSTR, dwAttrb : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathUndecorateA(pszPath : Win32cr::Foundation::PSTR) : Void

    # :nodoc:
    fun PathUndecorateW(pszPath : Win32cr::Foundation::PWSTR) : Void

    # :nodoc:
    fun PathUnExpandEnvStringsA(pszPath : Win32cr::Foundation::PSTR, pszBuf : UInt8*, cchBuf : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathUnExpandEnvStringsW(pszPath : Win32cr::Foundation::PWSTR, pszBuf : UInt16*, cchBuf : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun UrlCompareA(psz1 : Win32cr::Foundation::PSTR, psz2 : Win32cr::Foundation::PSTR, fIgnoreSlash : Win32cr::Foundation::BOOL) : Int32

    # :nodoc:
    fun UrlCompareW(psz1 : Win32cr::Foundation::PWSTR, psz2 : Win32cr::Foundation::PWSTR, fIgnoreSlash : Win32cr::Foundation::BOOL) : Int32

    # :nodoc:
    fun UrlCombineA(pszBase : Win32cr::Foundation::PSTR, pszRelative : Win32cr::Foundation::PSTR, pszCombined : UInt8*, pcchCombined : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlCombineW(pszBase : Win32cr::Foundation::PWSTR, pszRelative : Win32cr::Foundation::PWSTR, pszCombined : UInt16*, pcchCombined : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlCanonicalizeA(pszUrl : Win32cr::Foundation::PSTR, pszCanonicalized : UInt8*, pcchCanonicalized : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlCanonicalizeW(pszUrl : Win32cr::Foundation::PWSTR, pszCanonicalized : UInt16*, pcchCanonicalized : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlIsOpaqueA(pszURL : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun UrlIsOpaqueW(pszURL : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun UrlIsNoHistoryA(pszURL : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun UrlIsNoHistoryW(pszURL : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun UrlIsA(pszUrl : Win32cr::Foundation::PSTR, url_is : Win32cr::UI::Shell::URLIS) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun UrlIsW(pszUrl : Win32cr::Foundation::PWSTR, url_is : Win32cr::UI::Shell::URLIS) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun UrlGetLocationA(pszURL : Win32cr::Foundation::PSTR) : Win32cr::Foundation::PSTR

    # :nodoc:
    fun UrlGetLocationW(pszURL : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::PWSTR

    # :nodoc:
    fun UrlUnescapeA(pszUrl : Win32cr::Foundation::PSTR, pszUnescaped : UInt8*, pcchUnescaped : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlUnescapeW(pszUrl : Win32cr::Foundation::PWSTR, pszUnescaped : UInt16*, pcchUnescaped : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlEscapeA(pszUrl : Win32cr::Foundation::PSTR, pszEscaped : UInt8*, pcchEscaped : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlEscapeW(pszUrl : Win32cr::Foundation::PWSTR, pszEscaped : UInt16*, pcchEscaped : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlCreateFromPathA(pszPath : Win32cr::Foundation::PSTR, pszUrl : UInt8*, pcchUrl : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlCreateFromPathW(pszPath : Win32cr::Foundation::PWSTR, pszUrl : UInt16*, pcchUrl : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCreateFromUrlA(pszUrl : Win32cr::Foundation::PSTR, pszPath : UInt8*, pcchPath : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCreateFromUrlW(pszUrl : Win32cr::Foundation::PWSTR, pszPath : UInt16*, pcchPath : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCreateFromUrlAlloc(pszIn : Win32cr::Foundation::PWSTR, ppszOut : Win32cr::Foundation::PWSTR*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlHashA(pszUrl : Win32cr::Foundation::PSTR, pbHash : UInt8*, cbHash : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlHashW(pszUrl : Win32cr::Foundation::PWSTR, pbHash : UInt8*, cbHash : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlGetPartW(pszIn : Win32cr::Foundation::PWSTR, pszOut : UInt16*, pcchOut : UInt32*, dwPart : UInt32, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlGetPartA(pszIn : Win32cr::Foundation::PSTR, pszOut : UInt8*, pcchOut : UInt32*, dwPart : UInt32, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlApplySchemeA(pszIn : Win32cr::Foundation::PSTR, pszOut : UInt8*, pcchOut : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlApplySchemeW(pszIn : Win32cr::Foundation::PWSTR, pszOut : UInt16*, pcchOut : UInt32*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HashData(pbData : UInt8*, cbData : UInt32, pbHash : UInt8*, cbHash : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun UrlFixupW(pcszUrl : Win32cr::Foundation::PWSTR, pszTranslatedUrl : UInt16*, cchMax : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun ParseURLA(pcszURL : Win32cr::Foundation::PSTR, ppu : Win32cr::UI::Shell::PARSEDURLA*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun ParseURLW(pcszURL : Win32cr::Foundation::PWSTR, ppu : Win32cr::UI::Shell::PARSEDURLW*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHDeleteEmptyKeyA(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PSTR) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHDeleteEmptyKeyW(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHDeleteKeyA(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PSTR) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHDeleteKeyW(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegDuplicateHKey(hkey : Win32cr::System::Registry::HKEY) : Win32cr::System::Registry::HKEY

    # :nodoc:
    fun SHDeleteValueA(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHDeleteValueW(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHGetValueA(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHGetValueW(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHSetValueA(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, dwType : UInt32, pvData : Void*, cbData : UInt32) : Int32

    # :nodoc:
    fun SHSetValueW(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, dwType : UInt32, pvData : Void*, cbData : UInt32) : Int32

    # :nodoc:
    fun SHRegGetValueA(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, srrfFlags : Int32, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegGetValueW(hkey : Win32cr::System::Registry::HKEY, pszSubKey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, srrfFlags : Int32, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegGetValueFromHKCUHKLM(pwszKey : Win32cr::Foundation::PWSTR, pwszValue : Win32cr::Foundation::PWSTR, srrfFlags : Int32, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHQueryValueExA(hkey : Win32cr::System::Registry::HKEY, pszValue : Win32cr::Foundation::PSTR, pdwReserved : UInt32*, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHQueryValueExW(hkey : Win32cr::System::Registry::HKEY, pszValue : Win32cr::Foundation::PWSTR, pdwReserved : UInt32*, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHEnumKeyExA(hkey : Win32cr::System::Registry::HKEY, dwIndex : UInt32, pszName : UInt8*, pcchName : UInt32*) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHEnumKeyExW(hkey : Win32cr::System::Registry::HKEY, dwIndex : UInt32, pszName : UInt16*, pcchName : UInt32*) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHEnumValueA(hkey : Win32cr::System::Registry::HKEY, dwIndex : UInt32, pszValueName : UInt8*, pcchValueName : UInt32*, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHEnumValueW(hkey : Win32cr::System::Registry::HKEY, dwIndex : UInt32, pszValueName : UInt16*, pcchValueName : UInt32*, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHQueryInfoKeyA(hkey : Win32cr::System::Registry::HKEY, pcSubKeys : UInt32*, pcchMaxSubKeyLen : UInt32*, pcValues : UInt32*, pcchMaxValueNameLen : UInt32*) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHQueryInfoKeyW(hkey : Win32cr::System::Registry::HKEY, pcSubKeys : UInt32*, pcchMaxSubKeyLen : UInt32*, pcValues : UInt32*, pcchMaxValueNameLen : UInt32*) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHCopyKeyA(hkeySrc : Win32cr::System::Registry::HKEY, pszSrcSubKey : Win32cr::Foundation::PSTR, hkeyDest : Win32cr::System::Registry::HKEY, fReserved : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHCopyKeyW(hkeySrc : Win32cr::System::Registry::HKEY, pszSrcSubKey : Win32cr::Foundation::PWSTR, hkeyDest : Win32cr::System::Registry::HKEY, fReserved : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegGetPathA(hKey : Win32cr::System::Registry::HKEY, pcszSubKey : Win32cr::Foundation::PSTR, pcszValue : Win32cr::Foundation::PSTR, pszPath : UInt8*, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegGetPathW(hKey : Win32cr::System::Registry::HKEY, pcszSubKey : Win32cr::Foundation::PWSTR, pcszValue : Win32cr::Foundation::PWSTR, pszPath : UInt16*, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegSetPathA(hKey : Win32cr::System::Registry::HKEY, pcszSubKey : Win32cr::Foundation::PSTR, pcszValue : Win32cr::Foundation::PSTR, pcszPath : Win32cr::Foundation::PSTR, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegSetPathW(hKey : Win32cr::System::Registry::HKEY, pcszSubKey : Win32cr::Foundation::PWSTR, pcszValue : Win32cr::Foundation::PWSTR, pcszPath : Win32cr::Foundation::PWSTR, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegCreateUSKeyA(pszPath : Win32cr::Foundation::PSTR, samDesired : UInt32, hRelativeUSKey : LibC::IntPtrT, phNewUSKey : LibC::IntPtrT*, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegCreateUSKeyW(pwzPath : Win32cr::Foundation::PWSTR, samDesired : UInt32, hRelativeUSKey : LibC::IntPtrT, phNewUSKey : LibC::IntPtrT*, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegOpenUSKeyA(pszPath : Win32cr::Foundation::PSTR, samDesired : UInt32, hRelativeUSKey : LibC::IntPtrT, phNewUSKey : LibC::IntPtrT*, fIgnoreHKCU : Win32cr::Foundation::BOOL) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegOpenUSKeyW(pwzPath : Win32cr::Foundation::PWSTR, samDesired : UInt32, hRelativeUSKey : LibC::IntPtrT, phNewUSKey : LibC::IntPtrT*, fIgnoreHKCU : Win32cr::Foundation::BOOL) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegQueryUSValueA(hUSKey : LibC::IntPtrT, pszValue : Win32cr::Foundation::PSTR, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*, fIgnoreHKCU : Win32cr::Foundation::BOOL, pvDefaultData : Void*, dwDefaultDataSize : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegQueryUSValueW(hUSKey : LibC::IntPtrT, pszValue : Win32cr::Foundation::PWSTR, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*, fIgnoreHKCU : Win32cr::Foundation::BOOL, pvDefaultData : Void*, dwDefaultDataSize : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegWriteUSValueA(hUSKey : LibC::IntPtrT, pszValue : Win32cr::Foundation::PSTR, dwType : UInt32, pvData : Void*, cbData : UInt32, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegWriteUSValueW(hUSKey : LibC::IntPtrT, pwzValue : Win32cr::Foundation::PWSTR, dwType : UInt32, pvData : Void*, cbData : UInt32, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegDeleteUSValueA(hUSKey : LibC::IntPtrT, pszValue : Win32cr::Foundation::PSTR, delRegFlags : Win32cr::UI::Shell::SHREGDEL_FLAGS) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegDeleteUSValueW(hUSKey : LibC::IntPtrT, pwzValue : Win32cr::Foundation::PWSTR, delRegFlags : Win32cr::UI::Shell::SHREGDEL_FLAGS) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegDeleteEmptyUSKeyW(hUSKey : LibC::IntPtrT, pwzSubKey : Win32cr::Foundation::PWSTR, delRegFlags : Win32cr::UI::Shell::SHREGDEL_FLAGS) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegDeleteEmptyUSKeyA(hUSKey : LibC::IntPtrT, pszSubKey : Win32cr::Foundation::PSTR, delRegFlags : Win32cr::UI::Shell::SHREGDEL_FLAGS) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegEnumUSKeyA(hUSKey : LibC::IntPtrT, dwIndex : UInt32, pszName : UInt8*, pcchName : UInt32*, enumRegFlags : Win32cr::UI::Shell::SHREGENUM_FLAGS) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegEnumUSKeyW(hUSKey : LibC::IntPtrT, dwIndex : UInt32, pwzName : UInt16*, pcchName : UInt32*, enumRegFlags : Win32cr::UI::Shell::SHREGENUM_FLAGS) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegEnumUSValueA(hUSkey : LibC::IntPtrT, dwIndex : UInt32, pszValueName : UInt8*, pcchValueName : UInt32*, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*, enumRegFlags : Win32cr::UI::Shell::SHREGENUM_FLAGS) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegEnumUSValueW(hUSkey : LibC::IntPtrT, dwIndex : UInt32, pszValueName : UInt16*, pcchValueName : UInt32*, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*, enumRegFlags : Win32cr::UI::Shell::SHREGENUM_FLAGS) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegQueryInfoUSKeyA(hUSKey : LibC::IntPtrT, pcSubKeys : UInt32*, pcchMaxSubKeyLen : UInt32*, pcValues : UInt32*, pcchMaxValueNameLen : UInt32*, enumRegFlags : Win32cr::UI::Shell::SHREGENUM_FLAGS) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegQueryInfoUSKeyW(hUSKey : LibC::IntPtrT, pcSubKeys : UInt32*, pcchMaxSubKeyLen : UInt32*, pcValues : UInt32*, pcchMaxValueNameLen : UInt32*, enumRegFlags : Win32cr::UI::Shell::SHREGENUM_FLAGS) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegCloseUSKey(hUSKey : LibC::IntPtrT) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegGetUSValueA(pszSubKey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*, fIgnoreHKCU : Win32cr::Foundation::BOOL, pvDefaultData : Void*, dwDefaultDataSize : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegGetUSValueW(pszSubKey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, pdwType : UInt32*, pvData : Void*, pcbData : UInt32*, fIgnoreHKCU : Win32cr::Foundation::BOOL, pvDefaultData : Void*, dwDefaultDataSize : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegSetUSValueA(pszSubKey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, dwType : UInt32, pvData : Void*, cbData : UInt32, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegSetUSValueW(pwzSubKey : Win32cr::Foundation::PWSTR, pwzValue : Win32cr::Foundation::PWSTR, dwType : UInt32, pvData : Void*, cbData : UInt32, dwFlags : UInt32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegGetIntW(hk : Win32cr::System::Registry::HKEY, pwzKey : Win32cr::Foundation::PWSTR, iDefault : Int32) : Win32cr::Foundation::WIN32_ERROR

    # :nodoc:
    fun SHRegGetBoolUSValueA(pszSubKey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, fIgnoreHKCU : Win32cr::Foundation::BOOL, fDefault : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHRegGetBoolUSValueW(pszSubKey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, fIgnoreHKCU : Win32cr::Foundation::BOOL, fDefault : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun AssocCreate(clsid : LibC::GUID, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AssocQueryStringA(flags : UInt32, str : Win32cr::UI::Shell::ASSOCSTR, pszAssoc : Win32cr::Foundation::PSTR, pszExtra : Win32cr::Foundation::PSTR, pszOut : UInt8*, pcchOut : UInt32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AssocQueryStringW(flags : UInt32, str : Win32cr::UI::Shell::ASSOCSTR, pszAssoc : Win32cr::Foundation::PWSTR, pszExtra : Win32cr::Foundation::PWSTR, pszOut : UInt16*, pcchOut : UInt32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AssocQueryStringByKeyA(flags : UInt32, str : Win32cr::UI::Shell::ASSOCSTR, hkAssoc : Win32cr::System::Registry::HKEY, pszExtra : Win32cr::Foundation::PSTR, pszOut : UInt8*, pcchOut : UInt32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AssocQueryStringByKeyW(flags : UInt32, str : Win32cr::UI::Shell::ASSOCSTR, hkAssoc : Win32cr::System::Registry::HKEY, pszExtra : Win32cr::Foundation::PWSTR, pszOut : UInt16*, pcchOut : UInt32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AssocQueryKeyA(flags : UInt32, key : Win32cr::UI::Shell::ASSOCKEY, pszAssoc : Win32cr::Foundation::PSTR, pszExtra : Win32cr::Foundation::PSTR, phkeyOut : Win32cr::System::Registry::HKEY*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AssocQueryKeyW(flags : UInt32, key : Win32cr::UI::Shell::ASSOCKEY, pszAssoc : Win32cr::Foundation::PWSTR, pszExtra : Win32cr::Foundation::PWSTR, phkeyOut : Win32cr::System::Registry::HKEY*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun AssocIsDangerous(pszAssoc : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun AssocGetPerceivedType(pszExt : Win32cr::Foundation::PWSTR, ptype : Win32cr::UI::Shell::Common::PERCEIVED*, pflag : UInt32*, ppszType : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHOpenRegStreamA(hkey : Win32cr::System::Registry::HKEY, pszSubkey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, grfMode : UInt32) : Void*

    # :nodoc:
    fun SHOpenRegStreamW(hkey : Win32cr::System::Registry::HKEY, pszSubkey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, grfMode : UInt32) : Void*

    # :nodoc:
    fun SHOpenRegStream2A(hkey : Win32cr::System::Registry::HKEY, pszSubkey : Win32cr::Foundation::PSTR, pszValue : Win32cr::Foundation::PSTR, grfMode : UInt32) : Void*

    # :nodoc:
    fun SHOpenRegStream2W(hkey : Win32cr::System::Registry::HKEY, pszSubkey : Win32cr::Foundation::PWSTR, pszValue : Win32cr::Foundation::PWSTR, grfMode : UInt32) : Void*

    # :nodoc:
    fun SHCreateStreamOnFileA(pszFile : Win32cr::Foundation::PSTR, grfMode : UInt32, ppstm : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateStreamOnFileW(pszFile : Win32cr::Foundation::PWSTR, grfMode : UInt32, ppstm : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateStreamOnFileEx(pszFile : Win32cr::Foundation::PWSTR, grfMode : UInt32, dwAttributes : UInt32, fCreate : Win32cr::Foundation::BOOL, pstmTemplate : Void*, ppstm : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateMemStream(pInit : UInt8*, cbInit : UInt32) : Void*

    # :nodoc:
    fun GetAcceptLanguagesA(pszLanguages : UInt8*, pcchLanguages : UInt32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun GetAcceptLanguagesW(pszLanguages : UInt16*, pcchLanguages : UInt32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun IUnknown_Set(ppunk : Void**, punk : Void*) : Void

    # :nodoc:
    fun IUnknown_AtomicRelease(ppunk : Void**) : Void

    # :nodoc:
    fun IUnknown_GetWindow(punk : Void*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun IUnknown_SetSite(punk : Void*, punkSite : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun IUnknown_GetSite(punk : Void*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun IUnknown_QueryService(punk : Void*, guidService : LibC::GUID*, riid : LibC::GUID*, ppvOut : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun IStream_Read(pstm : Void*, pv : Void*, cb : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun IStream_Write(pstm : Void*, pv : Void*, cb : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun IStream_Reset(pstm : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun IStream_Size(pstm : Void*, pui : Win32cr::Foundation::ULARGE_INTEGER*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun ConnectToConnectionPoint(punk : Void*, riidEvent : LibC::GUID*, fConnect : Win32cr::Foundation::BOOL, punkTarget : Void*, pdwCookie : UInt32*, ppcpOut : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun IStream_ReadPidl(pstm : Void*, ppidlOut : Win32cr::UI::Shell::Common::ITEMIDLIST**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun IStream_WritePidl(pstm : Void*, pidlWrite : Win32cr::UI::Shell::Common::ITEMIDLIST*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun IStream_ReadStr(pstm : Void*, ppsz : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun IStream_WriteStr(pstm : Void*, psz : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun IStream_Copy(pstmFrom : Void*, pstmTo : Void*, cb : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetViewStatePropertyBag(pidl : Win32cr::UI::Shell::Common::ITEMIDLIST*, pszBagName : Win32cr::Foundation::PWSTR, dwFlags : UInt32, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHFormatDateTimeA(pft : Win32cr::Foundation::FILETIME*, pdwFlags : UInt32*, pszBuf : UInt8*, cchBuf : UInt32) : Int32

    # :nodoc:
    fun SHFormatDateTimeW(pft : Win32cr::Foundation::FILETIME*, pdwFlags : UInt32*, pszBuf : UInt16*, cchBuf : UInt32) : Int32

    # :nodoc:
    fun SHAnsiToUnicode(pszSrc : Win32cr::Foundation::PSTR, pwszDst : UInt16*, cwchBuf : Int32) : Int32

    # :nodoc:
    fun SHAnsiToAnsi(pszSrc : Win32cr::Foundation::PSTR, pszDst : UInt8*, cchBuf : Int32) : Int32

    # :nodoc:
    fun SHUnicodeToAnsi(pwszSrc : Win32cr::Foundation::PWSTR, pszDst : UInt8*, cchBuf : Int32) : Int32

    # :nodoc:
    fun SHUnicodeToUnicode(pwzSrc : Win32cr::Foundation::PWSTR, pwzDst : UInt16*, cwchBuf : Int32) : Int32

    # :nodoc:
    fun SHMessageBoxCheckA(hwnd : Win32cr::Foundation::HWND, pszText : Win32cr::Foundation::PSTR, pszCaption : Win32cr::Foundation::PSTR, uType : UInt32, iDefault : Int32, pszRegVal : Win32cr::Foundation::PSTR) : Int32

    # :nodoc:
    fun SHMessageBoxCheckW(hwnd : Win32cr::Foundation::HWND, pszText : Win32cr::Foundation::PWSTR, pszCaption : Win32cr::Foundation::PWSTR, uType : UInt32, iDefault : Int32, pszRegVal : Win32cr::Foundation::PWSTR) : Int32

    # :nodoc:
    fun SHSendMessageBroadcastA(uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT

    # :nodoc:
    fun SHSendMessageBroadcastW(uMsg : UInt32, wParam : Win32cr::Foundation::WPARAM, lParam : Win32cr::Foundation::LPARAM) : Win32cr::Foundation::LRESULT

    # :nodoc:
    fun SHStripMneumonicA(pszMenu : Win32cr::Foundation::PSTR) : Win32cr::Foundation::CHAR

    # :nodoc:
    fun SHStripMneumonicW(pszMenu : Win32cr::Foundation::PWSTR) : UInt16

    # :nodoc:
    fun IsOS(dwOS : Win32cr::UI::Shell::OS) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHGlobalCounterGetValue(id : Win32cr::UI::Shell::SHGLOBALCOUNTER) : Int32

    # :nodoc:
    fun SHGlobalCounterIncrement(id : Win32cr::UI::Shell::SHGLOBALCOUNTER) : Int32

    # :nodoc:
    fun SHGlobalCounterDecrement(id : Win32cr::UI::Shell::SHGLOBALCOUNTER) : Int32

    # :nodoc:
    fun SHAllocShared(pvData : Void*, dwSize : UInt32, dwProcessId : UInt32) : Win32cr::Foundation::HANDLE

    # :nodoc:
    fun SHFreeShared(hData : Win32cr::Foundation::HANDLE, dwProcessId : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHLockShared(hData : Win32cr::Foundation::HANDLE, dwProcessId : UInt32) : Void*

    # :nodoc:
    fun SHUnlockShared(pvData : Void*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun WhichPlatform : UInt32

    # :nodoc:
    fun QISearch(that : Void*, pqit : Win32cr::UI::Shell::QITAB*, riid : LibC::GUID*, ppv : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHIsLowMemoryMachine(dwType : UInt32) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun GetMenuPosFromID(hmenu : Win32cr::UI::WindowsAndMessaging::HMENU, id : UInt32) : Int32

    # :nodoc:
    fun SHGetInverseCMAP(pbMap : UInt8*, cbMap : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHAutoComplete(hwndEdit : Win32cr::Foundation::HWND, dwFlags : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateThreadRef(pcRef : Int32*, ppunk : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHSetThreadRef(punk : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHGetThreadRef(ppunk : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHSkipJunction(pbc : Void*, pclsid : LibC::GUID*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHCreateThread(pfnThreadProc : Win32cr::System::Threading::LPTHREAD_START_ROUTINE, pData : Void*, flags : UInt32, pfnCallback : Win32cr::System::Threading::LPTHREAD_START_ROUTINE) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHCreateThreadWithHandle(pfnThreadProc : Win32cr::System::Threading::LPTHREAD_START_ROUTINE, pData : Void*, flags : UInt32, pfnCallback : Win32cr::System::Threading::LPTHREAD_START_ROUTINE, pHandle : Win32cr::Foundation::HANDLE*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun SHReleaseThreadRef : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun SHCreateShellPalette(hdc : Win32cr::Graphics::Gdi::HDC) : Win32cr::Graphics::Gdi::HPALETTE

    # :nodoc:
    fun ColorRGBToHLS(clrRGB : UInt32, pwHue : UInt16*, pwLuminance : UInt16*, pwSaturation : UInt16*) : Void

    # :nodoc:
    fun ColorHLSToRGB(wHue : UInt16, wLuminance : UInt16, wSaturation : UInt16) : UInt32

    # :nodoc:
    fun ColorAdjustLuma(clrRGB : UInt32, n : Int32, fScale : Win32cr::Foundation::BOOL) : UInt32

    # :nodoc:
    fun IsInternetESCEnabled : Win32cr::Foundation::BOOL

    # :nodoc:
    fun HlinkCreateFromMoniker(pimkTrgt : Void*, pwzLocation : Win32cr::Foundation::PWSTR, pwzFriendlyName : Win32cr::Foundation::PWSTR, pihlsite : Void*, dwSiteData : UInt32, piunkOuter : Void*, riid : LibC::GUID*, ppvObj : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkCreateFromString(pwzTarget : Win32cr::Foundation::PWSTR, pwzLocation : Win32cr::Foundation::PWSTR, pwzFriendlyName : Win32cr::Foundation::PWSTR, pihlsite : Void*, dwSiteData : UInt32, piunkOuter : Void*, riid : LibC::GUID*, ppvObj : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkCreateFromData(piDataObj : Void*, pihlsite : Void*, dwSiteData : UInt32, piunkOuter : Void*, riid : LibC::GUID*, ppvObj : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkQueryCreateFromData(piDataObj : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkClone(pihl : Void*, riid : LibC::GUID*, pihlsiteForClone : Void*, dwSiteData : UInt32, ppvObj : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkCreateBrowseContext(piunkOuter : Void*, riid : LibC::GUID*, ppvObj : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkNavigateToStringReference(pwzTarget : Win32cr::Foundation::PWSTR, pwzLocation : Win32cr::Foundation::PWSTR, pihlsite : Void*, dwSiteData : UInt32, pihlframe : Void*, grfHLNF : UInt32, pibc : Void*, pibsc : Void*, pihlbc : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkNavigate(pihl : Void*, pihlframe : Void*, grfHLNF : UInt32, pbc : Void*, pibsc : Void*, pihlbc : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkOnNavigate(pihlframe : Void*, pihlbc : Void*, grfHLNF : UInt32, pimkTarget : Void*, pwzLocation : Win32cr::Foundation::PWSTR, pwzFriendlyName : Win32cr::Foundation::PWSTR, puHLID : UInt32*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkUpdateStackItem(pihlframe : Void*, pihlbc : Void*, uHLID : UInt32, pimkTrgt : Void*, pwzLocation : Win32cr::Foundation::PWSTR, pwzFriendlyName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkOnRenameDocument(dwReserved : UInt32, pihlbc : Void*, pimkOld : Void*, pimkNew : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkResolveMonikerForData(pimkReference : Void*, reserved : UInt32, pibc : Void*, cFmtetc : UInt32, rgFmtetc : Win32cr::System::Com::FORMATETC*, pibsc : Void*, pimkBase : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkResolveStringForData(pwzReference : Win32cr::Foundation::PWSTR, reserved : UInt32, pibc : Void*, cFmtetc : UInt32, rgFmtetc : Win32cr::System::Com::FORMATETC*, pibsc : Void*, pimkBase : Void*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkParseDisplayName(pibc : Void*, pwzDisplayName : Win32cr::Foundation::PWSTR, fNoForceAbs : Win32cr::Foundation::BOOL, pcchEaten : UInt32*, ppimk : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkCreateExtensionServices(pwzAdditionalHeaders : Win32cr::Foundation::PWSTR, phwnd : Win32cr::Foundation::HWND, pszUsername : Win32cr::Foundation::PWSTR, pszPassword : Win32cr::Foundation::PWSTR, piunkOuter : Void*, riid : LibC::GUID*, ppvObj : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkPreprocessMoniker(pibc : Void*, pimkIn : Void*, ppimkOut : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun OleSaveToStreamEx(piunk : Void*, pistm : Void*, fClearDirty : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkSetSpecialReference(uReference : UInt32, pwzReference : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkGetSpecialReference(uReference : UInt32, ppwzReference : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkCreateShortcut(grfHLSHORTCUTF : UInt32, pihl : Void*, pwzDir : Win32cr::Foundation::PWSTR, pwzFileName : Win32cr::Foundation::PWSTR, ppwzShortcutFile : Win32cr::Foundation::PWSTR*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkCreateShortcutFromMoniker(grfHLSHORTCUTF : UInt32, pimkTarget : Void*, pwzLocation : Win32cr::Foundation::PWSTR, pwzDir : Win32cr::Foundation::PWSTR, pwzFileName : Win32cr::Foundation::PWSTR, ppwzShortcutFile : Win32cr::Foundation::PWSTR*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkCreateShortcutFromString(grfHLSHORTCUTF : UInt32, pwzTarget : Win32cr::Foundation::PWSTR, pwzLocation : Win32cr::Foundation::PWSTR, pwzDir : Win32cr::Foundation::PWSTR, pwzFileName : Win32cr::Foundation::PWSTR, ppwzShortcutFile : Win32cr::Foundation::PWSTR*, dwReserved : UInt32) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkResolveShortcut(pwzShortcutFileName : Win32cr::Foundation::PWSTR, pihlsite : Void*, dwSiteData : UInt32, piunkOuter : Void*, riid : LibC::GUID*, ppvObj : Void**) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkResolveShortcutToMoniker(pwzShortcutFileName : Win32cr::Foundation::PWSTR, ppimkTarget : Void**, ppwzLocation : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkResolveShortcutToString(pwzShortcutFileName : Win32cr::Foundation::PWSTR, ppwzTarget : Win32cr::Foundation::PWSTR*, ppwzLocation : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkIsShortcut(pwzFileName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkGetValueFromParams(pwzParams : Win32cr::Foundation::PWSTR, pwzName : Win32cr::Foundation::PWSTR, ppwzValue : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun HlinkTranslateURL(pwzURL : Win32cr::Foundation::PWSTR, grfFlags : UInt32, ppwzTranslatedURL : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathIsUNCEx(pszPath : Win32cr::Foundation::PWSTR, ppszServer : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathCchIsRoot(pszPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun PathCchAddBackslashEx(pszPath : UInt16*, cchPath : LibC::UIntPtrT, ppszEnd : Win32cr::Foundation::PWSTR*, pcchRemaining : LibC::UIntPtrT*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchAddBackslash(pszPath : UInt16*, cchPath : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchRemoveBackslashEx(pszPath : Win32cr::Foundation::PWSTR, cchPath : LibC::UIntPtrT, ppszEnd : Win32cr::Foundation::PWSTR*, pcchRemaining : LibC::UIntPtrT*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchRemoveBackslash(pszPath : UInt16*, cchPath : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchSkipRoot(pszPath : Win32cr::Foundation::PWSTR, ppszRootEnd : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchStripToRoot(pszPath : Win32cr::Foundation::PWSTR, cchPath : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchRemoveFileSpec(pszPath : Win32cr::Foundation::PWSTR, cchPath : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchFindExtension(pszPath : Win32cr::Foundation::PWSTR, cchPath : LibC::UIntPtrT, ppszExt : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchAddExtension(pszPath : UInt16*, cchPath : LibC::UIntPtrT, pszExt : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchRenameExtension(pszPath : UInt16*, cchPath : LibC::UIntPtrT, pszExt : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchRemoveExtension(pszPath : Win32cr::Foundation::PWSTR, cchPath : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchCanonicalizeEx(pszPathOut : UInt16*, cchPathOut : LibC::UIntPtrT, pszPathIn : Win32cr::Foundation::PWSTR, dwFlags : Win32cr::UI::Shell::PATHCCH_OPTIONS) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchCanonicalize(pszPathOut : UInt16*, cchPathOut : LibC::UIntPtrT, pszPathIn : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchCombineEx(pszPathOut : UInt16*, cchPathOut : LibC::UIntPtrT, pszPathIn : Win32cr::Foundation::PWSTR, pszMore : Win32cr::Foundation::PWSTR, dwFlags : Win32cr::UI::Shell::PATHCCH_OPTIONS) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchCombine(pszPathOut : UInt16*, cchPathOut : LibC::UIntPtrT, pszPathIn : Win32cr::Foundation::PWSTR, pszMore : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchAppendEx(pszPath : UInt16*, cchPath : LibC::UIntPtrT, pszMore : Win32cr::Foundation::PWSTR, dwFlags : Win32cr::UI::Shell::PATHCCH_OPTIONS) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchAppend(pszPath : UInt16*, cchPath : LibC::UIntPtrT, pszMore : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathCchStripPrefix(pszPath : UInt16*, cchPath : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathAllocCombine(pszPathIn : Win32cr::Foundation::PWSTR, pszMore : Win32cr::Foundation::PWSTR, dwFlags : Win32cr::UI::Shell::PATHCCH_OPTIONS, ppszPathOut : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun PathAllocCanonicalize(pszPathIn : Win32cr::Foundation::PWSTR, dwFlags : Win32cr::UI::Shell::PATHCCH_OPTIONS, ppszPathOut : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT

    # :nodoc:
    fun RegisterAppStateChangeNotification(routine : Win32cr::UI::Shell::PAPPSTATE_CHANGE_ROUTINE, context : Void*, registration : Win32cr::UI::Shell::APPSTATE_REGISTRATION_**) : UInt32

    # :nodoc:
    fun UnregisterAppStateChangeNotification(registration : Win32cr::UI::Shell::APPSTATE_REGISTRATION_*) : Void

    # :nodoc:
    fun RegisterAppConstrainedChangeNotification(routine : Win32cr::UI::Shell::PAPPCONSTRAIN_CHANGE_ROUTINE, context : Void*, registration : Win32cr::UI::Shell::APPCONSTRAIN_REGISTRATION_**) : UInt32

    # :nodoc:
    fun UnregisterAppConstrainedChangeNotification(registration : Win32cr::UI::Shell::APPCONSTRAIN_REGISTRATION_*) : Void

  end
end