require "./../foundation.cr"
require "./../system/com.cr"
require "./../system/com/structured_storage.cr"
require "./../ui/windows_and_messaging.cr"
require "./../graphics/gdi.cr"

module Win32cr::Devices::ImageAcquisition
  extend self
  alias DeviceDialogFunction = Proc(Win32cr::Devices::ImageAcquisition::DEVICEDIALOGDATA*, Win32cr::Foundation::HRESULT)

  WIA_DIP_DEV_ID = 2_u32
  WIA_DIP_DEV_ID_STR = "Unique Device ID"
  WIA_DIP_VEND_DESC = 3_u32
  WIA_DIP_VEND_DESC_STR = "Manufacturer"
  WIA_DIP_DEV_DESC = 4_u32
  WIA_DIP_DEV_DESC_STR = "Description"
  WIA_DIP_DEV_TYPE = 5_u32
  WIA_DIP_DEV_TYPE_STR = "Type"
  WIA_DIP_PORT_NAME = 6_u32
  WIA_DIP_PORT_NAME_STR = "Port"
  WIA_DIP_DEV_NAME = 7_u32
  WIA_DIP_DEV_NAME_STR = "Name"
  WIA_DIP_SERVER_NAME = 8_u32
  WIA_DIP_SERVER_NAME_STR = "Server"
  WIA_DIP_REMOTE_DEV_ID = 9_u32
  WIA_DIP_REMOTE_DEV_ID_STR = "Remote Device ID"
  WIA_DIP_UI_CLSID = 10_u32
  WIA_DIP_UI_CLSID_STR = "UI Class ID"
  WIA_DIP_HW_CONFIG = 11_u32
  WIA_DIP_HW_CONFIG_STR = "Hardware Configuration"
  WIA_DIP_BAUDRATE = 12_u32
  WIA_DIP_BAUDRATE_STR = "BaudRate"
  WIA_DIP_STI_GEN_CAPABILITIES = 13_u32
  WIA_DIP_STI_GEN_CAPABILITIES_STR = "STI Generic Capabilities"
  WIA_DIP_WIA_VERSION = 14_u32
  WIA_DIP_WIA_VERSION_STR = "WIA Version"
  WIA_DIP_DRIVER_VERSION = 15_u32
  WIA_DIP_DRIVER_VERSION_STR = "Driver Version"
  WIA_DIP_PNP_ID = 16_u32
  WIA_DIP_PNP_ID_STR = "PnP ID String"
  WIA_DIP_STI_DRIVER_VERSION = 17_u32
  WIA_DIP_STI_DRIVER_VERSION_STR = "STI Driver Version"
  WIA_DPA_FIRMWARE_VERSION = 1026_u32
  WIA_DPA_FIRMWARE_VERSION_STR = "Firmware Version"
  WIA_DPA_CONNECT_STATUS = 1027_u32
  WIA_DPA_CONNECT_STATUS_STR = "Connect Status"
  WIA_DPA_DEVICE_TIME = 1028_u32
  WIA_DPA_DEVICE_TIME_STR = "Device Time"
  WIA_DPC_PICTURES_TAKEN = 2050_u32
  WIA_DPC_PICTURES_TAKEN_STR = "Pictures Taken"
  WIA_DPC_PICTURES_REMAINING = 2051_u32
  WIA_DPC_PICTURES_REMAINING_STR = "Pictures Remaining"
  WIA_DPC_EXPOSURE_MODE = 2052_u32
  WIA_DPC_EXPOSURE_MODE_STR = "Exposure Mode"
  WIA_DPC_EXPOSURE_COMP = 2053_u32
  WIA_DPC_EXPOSURE_COMP_STR = "Exposure Compensation"
  WIA_DPC_EXPOSURE_TIME = 2054_u32
  WIA_DPC_EXPOSURE_TIME_STR = "Exposure Time"
  WIA_DPC_FNUMBER = 2055_u32
  WIA_DPC_FNUMBER_STR = "F Number"
  WIA_DPC_FLASH_MODE = 2056_u32
  WIA_DPC_FLASH_MODE_STR = "Flash Mode"
  WIA_DPC_FOCUS_MODE = 2057_u32
  WIA_DPC_FOCUS_MODE_STR = "Focus Mode"
  WIA_DPC_FOCUS_MANUAL_DIST = 2058_u32
  WIA_DPC_FOCUS_MANUAL_DIST_STR = "Focus Manual Dist"
  WIA_DPC_ZOOM_POSITION = 2059_u32
  WIA_DPC_ZOOM_POSITION_STR = "Zoom Position"
  WIA_DPC_PAN_POSITION = 2060_u32
  WIA_DPC_PAN_POSITION_STR = "Pan Position"
  WIA_DPC_TILT_POSITION = 2061_u32
  WIA_DPC_TILT_POSITION_STR = "Tilt Position"
  WIA_DPC_TIMER_MODE = 2062_u32
  WIA_DPC_TIMER_MODE_STR = "Timer Mode"
  WIA_DPC_TIMER_VALUE = 2063_u32
  WIA_DPC_TIMER_VALUE_STR = "Timer Value"
  WIA_DPC_POWER_MODE = 2064_u32
  WIA_DPC_POWER_MODE_STR = "Power Mode"
  WIA_DPC_BATTERY_STATUS = 2065_u32
  WIA_DPC_BATTERY_STATUS_STR = "Battery Status"
  WIA_DPC_THUMB_WIDTH = 2066_u32
  WIA_DPC_THUMB_WIDTH_STR = "Thumbnail Width"
  WIA_DPC_THUMB_HEIGHT = 2067_u32
  WIA_DPC_THUMB_HEIGHT_STR = "Thumbnail Height"
  WIA_DPC_PICT_WIDTH = 2068_u32
  WIA_DPC_PICT_WIDTH_STR = "Picture Width"
  WIA_DPC_PICT_HEIGHT = 2069_u32
  WIA_DPC_PICT_HEIGHT_STR = "Picture Height"
  WIA_DPC_DIMENSION = 2070_u32
  WIA_DPC_DIMENSION_STR = "Dimension"
  WIA_DPC_COMPRESSION_SETTING = 2071_u32
  WIA_DPC_COMPRESSION_SETTING_STR = "Compression Setting"
  WIA_DPC_FOCUS_METERING = 2072_u32
  WIA_DPC_FOCUS_METERING_STR = "Focus Metering Mode"
  WIA_DPC_TIMELAPSE_INTERVAL = 2073_u32
  WIA_DPC_TIMELAPSE_INTERVAL_STR = "Timelapse Interval"
  WIA_DPC_TIMELAPSE_NUMBER = 2074_u32
  WIA_DPC_TIMELAPSE_NUMBER_STR = "Timelapse Number"
  WIA_DPC_BURST_INTERVAL = 2075_u32
  WIA_DPC_BURST_INTERVAL_STR = "Burst Interval"
  WIA_DPC_BURST_NUMBER = 2076_u32
  WIA_DPC_BURST_NUMBER_STR = "Burst Number"
  WIA_DPC_EFFECT_MODE = 2077_u32
  WIA_DPC_EFFECT_MODE_STR = "Effect Mode"
  WIA_DPC_DIGITAL_ZOOM = 2078_u32
  WIA_DPC_DIGITAL_ZOOM_STR = "Digital Zoom"
  WIA_DPC_SHARPNESS = 2079_u32
  WIA_DPC_SHARPNESS_STR = "Sharpness"
  WIA_DPC_CONTRAST = 2080_u32
  WIA_DPC_CONTRAST_STR = "Contrast"
  WIA_DPC_CAPTURE_MODE = 2081_u32
  WIA_DPC_CAPTURE_MODE_STR = "Capture Mode"
  WIA_DPC_CAPTURE_DELAY = 2082_u32
  WIA_DPC_CAPTURE_DELAY_STR = "Capture Delay"
  WIA_DPC_EXPOSURE_INDEX = 2083_u32
  WIA_DPC_EXPOSURE_INDEX_STR = "Exposure Index"
  WIA_DPC_EXPOSURE_METERING_MODE = 2084_u32
  WIA_DPC_EXPOSURE_METERING_MODE_STR = "Exposure Metering Mode"
  WIA_DPC_FOCUS_METERING_MODE = 2085_u32
  WIA_DPC_FOCUS_METERING_MODE_STR = "Focus Metering Mode"
  WIA_DPC_FOCUS_DISTANCE = 2086_u32
  WIA_DPC_FOCUS_DISTANCE_STR = "Focus Distance"
  WIA_DPC_FOCAL_LENGTH = 2087_u32
  WIA_DPC_FOCAL_LENGTH_STR = "Focus Length"
  WIA_DPC_RGB_GAIN = 2088_u32
  WIA_DPC_RGB_GAIN_STR = "RGB Gain"
  WIA_DPC_WHITE_BALANCE = 2089_u32
  WIA_DPC_WHITE_BALANCE_STR = "White Balance"
  WIA_DPC_UPLOAD_URL = 2090_u32
  WIA_DPC_UPLOAD_URL_STR = "Upload URL"
  WIA_DPC_ARTIST = 2091_u32
  WIA_DPC_ARTIST_STR = "Artist"
  WIA_DPC_COPYRIGHT_INFO = 2092_u32
  WIA_DPC_COPYRIGHT_INFO_STR = "Copyright Info"
  WIA_DPS_HORIZONTAL_BED_SIZE = 3074_u32
  WIA_DPS_HORIZONTAL_BED_SIZE_STR = "Horizontal Bed Size"
  WIA_DPS_VERTICAL_BED_SIZE = 3075_u32
  WIA_DPS_VERTICAL_BED_SIZE_STR = "Vertical Bed Size"
  WIA_DPS_HORIZONTAL_SHEET_FEED_SIZE = 3076_u32
  WIA_DPS_HORIZONTAL_SHEET_FEED_SIZE_STR = "Horizontal Sheet Feed Size"
  WIA_DPS_VERTICAL_SHEET_FEED_SIZE = 3077_u32
  WIA_DPS_VERTICAL_SHEET_FEED_SIZE_STR = "Vertical Sheet Feed Size"
  WIA_DPS_SHEET_FEEDER_REGISTRATION = 3078_u32
  WIA_DPS_SHEET_FEEDER_REGISTRATION_STR = "Sheet Feeder Registration"
  WIA_DPS_HORIZONTAL_BED_REGISTRATION = 3079_u32
  WIA_DPS_HORIZONTAL_BED_REGISTRATION_STR = "Horizontal Bed Registration"
  WIA_DPS_VERTICAL_BED_REGISTRATION = 3080_u32
  WIA_DPS_VERTICAL_BED_REGISTRATION_STR = "Vertical Bed Registration"
  WIA_DPS_PLATEN_COLOR = 3081_u32
  WIA_DPS_PLATEN_COLOR_STR = "Platen Color"
  WIA_DPS_PAD_COLOR = 3082_u32
  WIA_DPS_PAD_COLOR_STR = "Pad Color"
  WIA_DPS_FILTER_SELECT = 3083_u32
  WIA_DPS_FILTER_SELECT_STR = "Filter Select"
  WIA_DPS_DITHER_SELECT = 3084_u32
  WIA_DPS_DITHER_SELECT_STR = "Dither Select"
  WIA_DPS_DITHER_PATTERN_DATA = 3085_u32
  WIA_DPS_DITHER_PATTERN_DATA_STR = "Dither Pattern Data"
  WIA_DPS_DOCUMENT_HANDLING_CAPABILITIES = 3086_u32
  WIA_DPS_DOCUMENT_HANDLING_CAPABILITIES_STR = "Document Handling Capabilities"
  WIA_DPS_DOCUMENT_HANDLING_STATUS = 3087_u32
  WIA_DPS_DOCUMENT_HANDLING_STATUS_STR = "Document Handling Status"
  WIA_DPS_DOCUMENT_HANDLING_SELECT = 3088_u32
  WIA_DPS_DOCUMENT_HANDLING_SELECT_STR = "Document Handling Select"
  WIA_DPS_DOCUMENT_HANDLING_CAPACITY = 3089_u32
  WIA_DPS_DOCUMENT_HANDLING_CAPACITY_STR = "Document Handling Capacity"
  WIA_DPS_OPTICAL_XRES = 3090_u32
  WIA_DPS_OPTICAL_XRES_STR = "Horizontal Optical Resolution"
  WIA_DPS_OPTICAL_YRES = 3091_u32
  WIA_DPS_OPTICAL_YRES_STR = "Vertical Optical Resolution"
  WIA_DPS_ENDORSER_CHARACTERS = 3092_u32
  WIA_DPS_ENDORSER_CHARACTERS_STR = "Endorser Characters"
  WIA_DPS_ENDORSER_STRING = 3093_u32
  WIA_DPS_ENDORSER_STRING_STR = "Endorser String"
  WIA_DPS_SCAN_AHEAD_PAGES = 3094_u32
  WIA_DPS_SCAN_AHEAD_PAGES_STR = "Scan Ahead Pages"
  WIA_DPS_MAX_SCAN_TIME = 3095_u32
  WIA_DPS_MAX_SCAN_TIME_STR = "Max Scan Time"
  WIA_DPS_PAGES = 3096_u32
  WIA_DPS_PAGES_STR = "Pages"
  WIA_DPS_PAGE_SIZE = 3097_u32
  WIA_DPS_PAGE_SIZE_STR = "Page Size"
  WIA_DPS_PAGE_WIDTH = 3098_u32
  WIA_DPS_PAGE_WIDTH_STR = "Page Width"
  WIA_DPS_PAGE_HEIGHT = 3099_u32
  WIA_DPS_PAGE_HEIGHT_STR = "Page Height"
  WIA_DPS_PREVIEW = 3100_u32
  WIA_DPS_PREVIEW_STR = "Preview"
  WIA_DPS_TRANSPARENCY = 3101_u32
  WIA_DPS_TRANSPARENCY_STR = "Transparency Adapter"
  WIA_DPS_TRANSPARENCY_SELECT = 3102_u32
  WIA_DPS_TRANSPARENCY_SELECT_STR = "Transparency Adapter Select"
  WIA_DPS_SHOW_PREVIEW_CONTROL = 3103_u32
  WIA_DPS_SHOW_PREVIEW_CONTROL_STR = "Show preview control"
  WIA_DPS_MIN_HORIZONTAL_SHEET_FEED_SIZE = 3104_u32
  WIA_DPS_MIN_HORIZONTAL_SHEET_FEED_SIZE_STR = "Minimum Horizontal Sheet Feed Size"
  WIA_DPS_MIN_VERTICAL_SHEET_FEED_SIZE = 3105_u32
  WIA_DPS_MIN_VERTICAL_SHEET_FEED_SIZE_STR = "Minimum Vertical Sheet Feed Size"
  WIA_DPS_TRANSPARENCY_CAPABILITIES = 3106_u32
  WIA_DPS_TRANSPARENCY_CAPABILITIES_STR = "Transparency Adapter Capabilities"
  WIA_DPS_TRANSPARENCY_STATUS = 3107_u32
  WIA_DPS_TRANSPARENCY_STATUS_STR = "Transparency Adapter Status"
  WIA_DPF_MOUNT_POINT = 3330_u32
  WIA_DPF_MOUNT_POINT_STR = "Directory mount point"
  WIA_DPV_LAST_PICTURE_TAKEN = 3586_u32
  WIA_DPV_LAST_PICTURE_TAKEN_STR = "Last Picture Taken"
  WIA_DPV_IMAGES_DIRECTORY = 3587_u32
  WIA_DPV_IMAGES_DIRECTORY_STR = "Images Directory"
  WIA_DPV_DSHOW_DEVICE_PATH = 3588_u32
  WIA_DPV_DSHOW_DEVICE_PATH_STR = "Directshow Device Path"
  WIA_IPA_ITEM_NAME = 4098_u32
  WIA_IPA_ITEM_NAME_STR = "Item Name"
  WIA_IPA_FULL_ITEM_NAME = 4099_u32
  WIA_IPA_FULL_ITEM_NAME_STR = "Full Item Name"
  WIA_IPA_ITEM_TIME = 4100_u32
  WIA_IPA_ITEM_TIME_STR = "Item Time Stamp"
  WIA_IPA_ITEM_FLAGS = 4101_u32
  WIA_IPA_ITEM_FLAGS_STR = "Item Flags"
  WIA_IPA_ACCESS_RIGHTS = 4102_u32
  WIA_IPA_ACCESS_RIGHTS_STR = "Access Rights"
  WIA_IPA_DATATYPE = 4103_u32
  WIA_IPA_DATATYPE_STR = "Data Type"
  WIA_IPA_DEPTH = 4104_u32
  WIA_IPA_DEPTH_STR = "Bits Per Pixel"
  WIA_IPA_PREFERRED_FORMAT = 4105_u32
  WIA_IPA_PREFERRED_FORMAT_STR = "Preferred Format"
  WIA_IPA_FORMAT = 4106_u32
  WIA_IPA_FORMAT_STR = "Format"
  WIA_IPA_COMPRESSION = 4107_u32
  WIA_IPA_COMPRESSION_STR = "Compression"
  WIA_IPA_TYMED = 4108_u32
  WIA_IPA_TYMED_STR = "Media Type"
  WIA_IPA_CHANNELS_PER_PIXEL = 4109_u32
  WIA_IPA_CHANNELS_PER_PIXEL_STR = "Channels Per Pixel"
  WIA_IPA_BITS_PER_CHANNEL = 4110_u32
  WIA_IPA_BITS_PER_CHANNEL_STR = "Bits Per Channel"
  WIA_IPA_PLANAR = 4111_u32
  WIA_IPA_PLANAR_STR = "Planar"
  WIA_IPA_PIXELS_PER_LINE = 4112_u32
  WIA_IPA_PIXELS_PER_LINE_STR = "Pixels Per Line"
  WIA_IPA_BYTES_PER_LINE = 4113_u32
  WIA_IPA_BYTES_PER_LINE_STR = "Bytes Per Line"
  WIA_IPA_NUMBER_OF_LINES = 4114_u32
  WIA_IPA_NUMBER_OF_LINES_STR = "Number of Lines"
  WIA_IPA_GAMMA_CURVES = 4115_u32
  WIA_IPA_GAMMA_CURVES_STR = "Gamma Curves"
  WIA_IPA_ITEM_SIZE = 4116_u32
  WIA_IPA_ITEM_SIZE_STR = "Item Size"
  WIA_IPA_COLOR_PROFILE = 4117_u32
  WIA_IPA_COLOR_PROFILE_STR = "Color Profiles"
  WIA_IPA_MIN_BUFFER_SIZE = 4118_u32
  WIA_IPA_MIN_BUFFER_SIZE_STR = "Buffer Size"
  WIA_IPA_BUFFER_SIZE = 4118_u32
  WIA_IPA_BUFFER_SIZE_STR = "Buffer Size"
  WIA_IPA_REGION_TYPE = 4119_u32
  WIA_IPA_REGION_TYPE_STR = "Region Type"
  WIA_IPA_ICM_PROFILE_NAME = 4120_u32
  WIA_IPA_ICM_PROFILE_NAME_STR = "Color Profile Name"
  WIA_IPA_APP_COLOR_MAPPING = 4121_u32
  WIA_IPA_APP_COLOR_MAPPING_STR = "Application Applies Color Mapping"
  WIA_IPA_PROP_STREAM_COMPAT_ID = 4122_u32
  WIA_IPA_PROP_STREAM_COMPAT_ID_STR = "Stream Compatibility ID"
  WIA_IPA_FILENAME_EXTENSION = 4123_u32
  WIA_IPA_FILENAME_EXTENSION_STR = "Filename extension"
  WIA_IPA_SUPPRESS_PROPERTY_PAGE = 4124_u32
  WIA_IPA_SUPPRESS_PROPERTY_PAGE_STR = "Suppress a property page"
  WIA_IPC_THUMBNAIL = 5122_u32
  WIA_IPC_THUMBNAIL_STR = "Thumbnail Data"
  WIA_IPC_THUMB_WIDTH = 5123_u32
  WIA_IPC_THUMB_WIDTH_STR = "Thumbnail Width"
  WIA_IPC_THUMB_HEIGHT = 5124_u32
  WIA_IPC_THUMB_HEIGHT_STR = "Thumbnail Height"
  WIA_IPC_AUDIO_AVAILABLE = 5125_u32
  WIA_IPC_AUDIO_AVAILABLE_STR = "Audio Available"
  WIA_IPC_AUDIO_DATA_FORMAT = 5126_u32
  WIA_IPC_AUDIO_DATA_FORMAT_STR = "Audio Format"
  WIA_IPC_AUDIO_DATA = 5127_u32
  WIA_IPC_AUDIO_DATA_STR = "Audio Data"
  WIA_IPC_NUM_PICT_PER_ROW = 5128_u32
  WIA_IPC_NUM_PICT_PER_ROW_STR = "Pictures per Row"
  WIA_IPC_SEQUENCE = 5129_u32
  WIA_IPC_SEQUENCE_STR = "Sequence Number"
  WIA_IPC_TIMEDELAY = 5130_u32
  WIA_IPC_TIMEDELAY_STR = "Time Delay"
  WIA_IPS_CUR_INTENT = 6146_u32
  WIA_IPS_CUR_INTENT_STR = "Current Intent"
  WIA_IPS_XRES = 6147_u32
  WIA_IPS_XRES_STR = "Horizontal Resolution"
  WIA_IPS_YRES = 6148_u32
  WIA_IPS_YRES_STR = "Vertical Resolution"
  WIA_IPS_XPOS = 6149_u32
  WIA_IPS_XPOS_STR = "Horizontal Start Position"
  WIA_IPS_YPOS = 6150_u32
  WIA_IPS_YPOS_STR = "Vertical Start Position"
  WIA_IPS_XEXTENT = 6151_u32
  WIA_IPS_XEXTENT_STR = "Horizontal Extent"
  WIA_IPS_YEXTENT = 6152_u32
  WIA_IPS_YEXTENT_STR = "Vertical Extent"
  WIA_IPS_PHOTOMETRIC_INTERP = 6153_u32
  WIA_IPS_PHOTOMETRIC_INTERP_STR = "Photometric Interpretation"
  WIA_IPS_BRIGHTNESS = 6154_u32
  WIA_IPS_BRIGHTNESS_STR = "Brightness"
  WIA_IPS_CONTRAST = 6155_u32
  WIA_IPS_CONTRAST_STR = "Contrast"
  WIA_IPS_ORIENTATION = 6156_u32
  WIA_IPS_ORIENTATION_STR = "Orientation"
  WIA_IPS_ROTATION = 6157_u32
  WIA_IPS_ROTATION_STR = "Rotation"
  WIA_IPS_MIRROR = 6158_u32
  WIA_IPS_MIRROR_STR = "Mirror"
  WIA_IPS_THRESHOLD = 6159_u32
  WIA_IPS_THRESHOLD_STR = "Threshold"
  WIA_IPS_INVERT = 6160_u32
  WIA_IPS_INVERT_STR = "Invert"
  WIA_IPS_WARM_UP_TIME = 6161_u32
  WIA_IPS_WARM_UP_TIME_STR = "Lamp Warm up Time"
  WIA_DPS_USER_NAME = 3112_u32
  WIA_DPS_USER_NAME_STR = "User Name"
  WIA_DPS_SERVICE_ID = 3113_u32
  WIA_DPS_SERVICE_ID_STR = "Service ID"
  WIA_DPS_DEVICE_ID = 3114_u32
  WIA_DPS_DEVICE_ID_STR = "Device ID"
  WIA_DPS_GLOBAL_IDENTITY = 3115_u32
  WIA_DPS_GLOBAL_IDENTITY_STR = "Global Identity"
  WIA_DPS_SCAN_AVAILABLE_ITEM = 3116_u32
  WIA_DPS_SCAN_AVAILABLE_ITEM_STR = "Scan Available Item"
  WIA_IPS_DESKEW_X = 6162_u32
  WIA_IPS_DESKEW_X_STR = "DeskewX"
  WIA_IPS_DESKEW_Y = 6163_u32
  WIA_IPS_DESKEW_Y_STR = "DeskewY"
  WIA_IPS_SEGMENTATION = 6164_u32
  WIA_IPS_SEGMENTATION_STR = "Segmentation"
  WIA_SEGMENTATION_FILTER_STR = "SegmentationFilter"
  WIA_IMAGEPROC_FILTER_STR = "ImageProcessingFilter"
  WIA_IPS_MAX_HORIZONTAL_SIZE = 6165_u32
  WIA_IPS_MAX_HORIZONTAL_SIZE_STR = "Maximum Horizontal Scan Size"
  WIA_IPS_MAX_VERTICAL_SIZE = 6166_u32
  WIA_IPS_MAX_VERTICAL_SIZE_STR = "Maximum Vertical Scan Size"
  WIA_IPS_MIN_HORIZONTAL_SIZE = 6167_u32
  WIA_IPS_MIN_HORIZONTAL_SIZE_STR = "Minimum Horizontal Scan Size"
  WIA_IPS_MIN_VERTICAL_SIZE = 6168_u32
  WIA_IPS_MIN_VERTICAL_SIZE_STR = "Minimum Vertical Scan Size"
  WIA_IPS_TRANSFER_CAPABILITIES = 6169_u32
  WIA_IPS_TRANSFER_CAPABILITIES_STR = "Transfer Capabilities"
  WIA_IPS_SHEET_FEEDER_REGISTRATION = 3078_u32
  WIA_IPS_SHEET_FEEDER_REGISTRATION_STR = "Sheet Feeder Registration"
  WIA_IPS_DOCUMENT_HANDLING_SELECT = 3088_u32
  WIA_IPS_DOCUMENT_HANDLING_SELECT_STR = "Document Handling Select"
  WIA_IPS_OPTICAL_XRES = 3090_u32
  WIA_IPS_OPTICAL_XRES_STR = "Horizontal Optical Resolution"
  WIA_IPS_OPTICAL_YRES = 3091_u32
  WIA_IPS_OPTICAL_YRES_STR = "Vertical Optical Resolution"
  WIA_IPS_PAGES = 3096_u32
  WIA_IPS_PAGES_STR = "Pages"
  WIA_IPS_PAGE_SIZE = 3097_u32
  WIA_IPS_PAGE_SIZE_STR = "Page Size"
  WIA_IPS_PAGE_WIDTH = 3098_u32
  WIA_IPS_PAGE_WIDTH_STR = "Page Width"
  WIA_IPS_PAGE_HEIGHT = 3099_u32
  WIA_IPS_PAGE_HEIGHT_STR = "Page Height"
  WIA_IPS_PREVIEW = 3100_u32
  WIA_IPS_PREVIEW_STR = "Preview"
  WIA_IPS_SHOW_PREVIEW_CONTROL = 3103_u32
  WIA_IPS_SHOW_PREVIEW_CONTROL_STR = "Show preview control"
  WIA_IPS_FILM_SCAN_MODE = 3104_u32
  WIA_IPS_FILM_SCAN_MODE_STR = "Film Scan Mode"
  WIA_IPS_LAMP = 3105_u32
  WIA_IPS_LAMP_STR = "Lamp"
  WIA_IPS_LAMP_AUTO_OFF = 3106_u32
  WIA_IPS_LAMP_AUTO_OFF_STR = "Lamp Auto Off"
  WIA_IPS_AUTO_DESKEW = 3107_u32
  WIA_IPS_AUTO_DESKEW_STR = "Automatic Deskew"
  WIA_IPS_SUPPORTS_CHILD_ITEM_CREATION = 3108_u32
  WIA_IPS_SUPPORTS_CHILD_ITEM_CREATION_STR = "Supports Child Item Creation"
  WIA_IPS_XSCALING = 3109_u32
  WIA_IPS_XSCALING_STR = "Horizontal Scaling"
  WIA_IPS_YSCALING = 3110_u32
  WIA_IPS_YSCALING_STR = "Vertical Scaling"
  WIA_IPS_PREVIEW_TYPE = 3111_u32
  WIA_IPS_PREVIEW_TYPE_STR = "Preview Type"
  WIA_IPA_ITEM_CATEGORY = 4125_u32
  WIA_IPA_ITEM_CATEGORY_STR = "Item Category"
  WIA_IPA_UPLOAD_ITEM_SIZE = 4126_u32
  WIA_IPA_UPLOAD_ITEM_SIZE_STR = "Upload Item Size"
  WIA_IPA_ITEMS_STORED = 4127_u32
  WIA_IPA_ITEMS_STORED_STR = "Items Stored"
  WIA_IPA_RAW_BITS_PER_CHANNEL = 4128_u32
  WIA_IPA_RAW_BITS_PER_CHANNEL_STR = "Raw Bits Per Channel"
  WIA_IPS_FILM_NODE_NAME = 4129_u32
  WIA_IPS_FILM_NODE_NAME_STR = "Film Node Name"
  WIA_IPS_PRINTER_ENDORSER = 4130_u32
  WIA_IPS_PRINTER_ENDORSER_STR = "Printer/Endorser"
  WIA_IPS_PRINTER_ENDORSER_ORDER = 4131_u32
  WIA_IPS_PRINTER_ENDORSER_ORDER_STR = "Printer/Endorser Order"
  WIA_IPS_PRINTER_ENDORSER_COUNTER = 4132_u32
  WIA_IPS_PRINTER_ENDORSER_COUNTER_STR = "Printer/Endorser Counter"
  WIA_IPS_PRINTER_ENDORSER_STEP = 4133_u32
  WIA_IPS_PRINTER_ENDORSER_STEP_STR = "Printer/Endorser Step"
  WIA_IPS_PRINTER_ENDORSER_XOFFSET = 4134_u32
  WIA_IPS_PRINTER_ENDORSER_XOFFSET_STR = "Printer/Endorser Horizontal Offset"
  WIA_IPS_PRINTER_ENDORSER_YOFFSET = 4135_u32
  WIA_IPS_PRINTER_ENDORSER_YOFFSET_STR = "Printer/Endorser Vertical Offset"
  WIA_IPS_PRINTER_ENDORSER_NUM_LINES = 4136_u32
  WIA_IPS_PRINTER_ENDORSER_NUM_LINES_STR = "Printer/Endorser Lines"
  WIA_IPS_PRINTER_ENDORSER_STRING = 4137_u32
  WIA_IPS_PRINTER_ENDORSER_STRING_STR = "Printer/Endorser String"
  WIA_IPS_PRINTER_ENDORSER_VALID_CHARACTERS = 4138_u32
  WIA_IPS_PRINTER_ENDORSER_VALID_CHARACTERS_STR = "Printer/Endorser Valid Characters"
  WIA_IPS_PRINTER_ENDORSER_VALID_FORMAT_SPECIFIERS = 4139_u32
  WIA_IPS_PRINTER_ENDORSER_VALID_FORMAT_SPECIFIERS_STR = "Printer/Endorser Valid Format Specifiers"
  WIA_IPS_PRINTER_ENDORSER_TEXT_UPLOAD = 4140_u32
  WIA_IPS_PRINTER_ENDORSER_TEXT_UPLOAD_STR = "Printer/Endorser Text Upload"
  WIA_IPS_PRINTER_ENDORSER_TEXT_DOWNLOAD = 4141_u32
  WIA_IPS_PRINTER_ENDORSER_TEXT_DOWNLOAD_STR = "Printer/Endorser Text Download"
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS = 4142_u32
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS_STR = "Printer/Endorser Graphics"
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS_POSITION = 4143_u32
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS_POSITION_STR = "Printer/Endorser Graphics Position"
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MIN_WIDTH = 4144_u32
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MIN_WIDTH_STR = "Printer/Endorser Graphics Minimum Width"
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MAX_WIDTH = 4145_u32
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MAX_WIDTH_STR = "Printer/Endorser Graphics Maximum Width"
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MIN_HEIGHT = 4146_u32
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MIN_HEIGHT_STR = "Printer/Endorser Graphics Minimum Height"
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MAX_HEIGHT = 4147_u32
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MAX_HEIGHT_STR = "Printer/Endorser Graphics Maximum Height"
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS_UPLOAD = 4148_u32
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS_UPLOAD_STR = "Printer/Endorser Graphics Upload"
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS_DOWNLOAD = 4149_u32
  WIA_IPS_PRINTER_ENDORSER_GRAPHICS_DOWNLOAD_STR = "Printer/Endorser Graphics Download"
  WIA_IPS_BARCODE_READER = 4150_u32
  WIA_IPS_BARCODE_READER_STR = "Barcode Reader"
  WIA_IPS_MAXIMUM_BARCODES_PER_PAGE = 4151_u32
  WIA_IPS_MAXIMUM_BARCODES_PER_PAGE_STR = "Maximum Barcodes Per Page"
  WIA_IPS_BARCODE_SEARCH_DIRECTION = 4152_u32
  WIA_IPS_BARCODE_SEARCH_DIRECTION_STR = "Barcode Search Direction"
  WIA_IPS_MAXIMUM_BARCODE_SEARCH_RETRIES = 4153_u32
  WIA_IPS_MAXIMUM_BARCODE_SEARCH_RETRIES_STR = "Barcode Search Retries"
  WIA_IPS_BARCODE_SEARCH_TIMEOUT = 4154_u32
  WIA_IPS_BARCODE_SEARCH_TIMEOUT_STR = "Barcode Search Timeout"
  WIA_IPS_SUPPORTED_BARCODE_TYPES = 4155_u32
  WIA_IPS_SUPPORTED_BARCODE_TYPES_STR = "Supported Barcode Types"
  WIA_IPS_ENABLED_BARCODE_TYPES = 4156_u32
  WIA_IPS_ENABLED_BARCODE_TYPES_STR = "Enabled Barcode Types"
  WIA_IPS_PATCH_CODE_READER = 4157_u32
  WIA_IPS_PATCH_CODE_READER_STR = "Patch Code Reader"
  WIA_IPS_SUPPORTED_PATCH_CODE_TYPES = 4162_u32
  WIA_IPS_SUPPORTED_PATCH_CODE_TYPES_STR = "Supported Patch Code Types"
  WIA_IPS_ENABLED_PATCH_CODE_TYPES = 4163_u32
  WIA_IPS_ENABLED_PATCH_CODE_TYPES_STR = "Enabled Path Code Types"
  WIA_IPS_MICR_READER = 4164_u32
  WIA_IPS_MICR_READER_STR = "MICR Reader"
  WIA_IPS_JOB_SEPARATORS = 4165_u32
  WIA_IPS_JOB_SEPARATORS_STR = "Job Separators"
  WIA_IPS_LONG_DOCUMENT = 4166_u32
  WIA_IPS_LONG_DOCUMENT_STR = "Long Document"
  WIA_IPS_BLANK_PAGES = 4167_u32
  WIA_IPS_BLANK_PAGES_STR = "Blank Pages"
  WIA_IPS_MULTI_FEED = 4168_u32
  WIA_IPS_MULTI_FEED_STR = "Multi-Feed"
  WIA_IPS_MULTI_FEED_SENSITIVITY = 4169_u32
  WIA_IPS_MULTI_FEED_SENSITIVITY_STR = "Multi-Feed Sensitivity"
  WIA_IPS_AUTO_CROP = 4170_u32
  WIA_IPS_AUTO_CROP_STR = "Auto-Crop"
  WIA_IPS_OVER_SCAN = 4171_u32
  WIA_IPS_OVER_SCAN_STR = "Overscan"
  WIA_IPS_OVER_SCAN_LEFT = 4172_u32
  WIA_IPS_OVER_SCAN_LEFT_STR = "Overscan Left"
  WIA_IPS_OVER_SCAN_RIGHT = 4173_u32
  WIA_IPS_OVER_SCAN_RIGHT_STR = "Overscan Right"
  WIA_IPS_OVER_SCAN_TOP = 4174_u32
  WIA_IPS_OVER_SCAN_TOP_STR = "Overscan Top"
  WIA_IPS_OVER_SCAN_BOTTOM = 4175_u32
  WIA_IPS_OVER_SCAN_BOTTOM_STR = "Overscan Bottom"
  WIA_IPS_COLOR_DROP = 4176_u32
  WIA_IPS_COLOR_DROP_STR = "Color Drop"
  WIA_IPS_COLOR_DROP_RED = 4177_u32
  WIA_IPS_COLOR_DROP_RED_STR = "Color Drop Red"
  WIA_IPS_COLOR_DROP_GREEN = 4178_u32
  WIA_IPS_COLOR_DROP_GREEN_STR = "Color Drop Green"
  WIA_IPS_COLOR_DROP_BLUE = 4179_u32
  WIA_IPS_COLOR_DROP_BLUE_STR = "Color Drop Blue"
  WIA_IPS_SCAN_AHEAD = 4180_u32
  WIA_IPS_SCAN_AHEAD_STR = "Scan Ahead"
  WIA_IPS_SCAN_AHEAD_CAPACITY = 4181_u32
  WIA_IPS_SCAN_AHEAD_CAPACITY_STR = "Scan Ahead Capacity"
  WIA_IPS_FEEDER_CONTROL = 4182_u32
  WIA_IPS_FEEDER_CONTROL_STR = "Feeder Control"
  WIA_IPS_PRINTER_ENDORSER_PADDING = 4183_u32
  WIA_IPS_PRINTER_ENDORSER_PADDING_STR = "Printer/Endorser Padding"
  WIA_IPS_PRINTER_ENDORSER_FONT_TYPE = 4184_u32
  WIA_IPS_PRINTER_ENDORSER_FONT_TYPE_STR = "Printer/Endorser Font Type"
  WIA_IPS_ALARM = 4185_u32
  WIA_IPS_ALARM_STR = "Alarm"
  WIA_IPS_PRINTER_ENDORSER_INK = 4186_u32
  WIA_IPS_PRINTER_ENDORSER_INK_STR = "Printer/Endorser Ink"
  WIA_IPS_PRINTER_ENDORSER_CHARACTER_ROTATION = 4187_u32
  WIA_IPS_PRINTER_ENDORSER_CHARACTER_ROTATION_STR = "Printer/Endorser Character Rotation"
  WIA_IPS_PRINTER_ENDORSER_MAX_CHARACTERS = 4188_u32
  WIA_IPS_PRINTER_ENDORSER_MAX_CHARACTERS_STR = "Printer/Endorser Maximum Characters"
  WIA_IPS_PRINTER_ENDORSER_MAX_GRAPHICS = 4189_u32
  WIA_IPS_PRINTER_ENDORSER_MAX_GRAPHICS_STR = "Printer/Endorser Maximum Graphics"
  WIA_IPS_PRINTER_ENDORSER_COUNTER_DIGITS = 4190_u32
  WIA_IPS_PRINTER_ENDORSER_COUNTER_DIGITS_STR = "Printer/Endorser Counter Digits"
  WIA_IPS_COLOR_DROP_MULTI = 4191_u32
  WIA_IPS_COLOR_DROP_MULTI_STR = "Color Drop Multiple"
  WIA_IPS_BLANK_PAGES_SENSITIVITY = 4192_u32
  WIA_IPS_BLANK_PAGES_SENSITIVITY_STR = "Blank Pages Sensitivity"
  WIA_IPS_MULTI_FEED_DETECT_METHOD = 4193_u32
  WIA_IPS_MULTI_FEED_DETECT_METHOD_STR = "Multi-Feed Detection Method"
  WIA_CATEGORY_FINISHED_FILE = "ff2b77ca-cf84-432b-a735-3a130dde2a88"
  WIA_CATEGORY_FLATBED = "fb607b1f-43f3-488b-855b-fb703ec342a6"
  WIA_CATEGORY_FEEDER = "fe131934-f84c-42ad-8da4-6129cddd7288"
  WIA_CATEGORY_FILM = "fcf65be7-3ce3-4473-af85-f5d37d21b68a"
  WIA_CATEGORY_ROOT = "f193526f-59b8-4a26-9888-e16e4f97ce10"
  WIA_CATEGORY_FOLDER = "c692a446-6f5a-481d-85bb-92e2e86fd30a"
  WIA_CATEGORY_FEEDER_FRONT = "4823175c-3b28-487b-a7e6-eebc17614fd1"
  WIA_CATEGORY_FEEDER_BACK = "61ca74d4-39db-42aa-89b1-8c19c9cd4c23"
  WIA_CATEGORY_AUTO = "defe5fd8-6c97-4dde-b11e-cb509b270e11"
  WIA_CATEGORY_IMPRINTER = "fc65016d-9202-43dd-91a7-64c2954cfb8b"
  WIA_CATEGORY_ENDORSER = "47102cc3-127f-4771-adfc-991ab8ee1e97"
  WIA_CATEGORY_BARCODE_READER = "36e178a0-473f-494b-af8f-6c3f6d7486fc"
  WIA_CATEGORY_PATCH_CODE_READER = "8faa1a6d-9c8a-42cd-98b3-ee9700cbc74f"
  WIA_CATEGORY_MICR_READER = "3b86c1ec-71bc-4645-b4d5-1b19da2be978"
  CLSID_WiaDefaultSegFilter = "d4f4d30b-0b29-4508-8922-0c5797d42765"
  WIA_TRANSFER_CHILDREN_SINGLE_SCAN = 1_u32
  WIA_USE_SEGMENTATION_FILTER = 0_u32
  WIA_DONT_USE_SEGMENTATION_FILTER = 1_u32
  WIA_FILM_COLOR_SLIDE = 0_u32
  WIA_FILM_COLOR_NEGATIVE = 1_u32
  WIA_FILM_BW_NEGATIVE = 2_u32
  WIA_LAMP_ON = 0_u32
  WIA_LAMP_OFF = 1_u32
  WIA_AUTO_DESKEW_ON = 0_u32
  WIA_AUTO_DESKEW_OFF = 1_u32
  WIA_ADVANCED_PREVIEW = 0_u32
  WIA_BASIC_PREVIEW = 1_u32
  WIA_PRINTER_ENDORSER_DISABLED = 0_u32
  WIA_PRINTER_ENDORSER_AUTO = 1_u32
  WIA_PRINTER_ENDORSER_FLATBED = 2_u32
  WIA_PRINTER_ENDORSER_FEEDER_FRONT = 3_u32
  WIA_PRINTER_ENDORSER_FEEDER_BACK = 4_u32
  WIA_PRINTER_ENDORSER_FEEDER_DUPLEX = 5_u32
  WIA_PRINTER_ENDORSER_DIGITAL = 6_u32
  WIA_PRINTER_ENDORSER_BEFORE_SCAN = 0_u32
  WIA_PRINTER_ENDORSER_AFTER_SCAN = 1_u32
  WIA_PRINT_DATE = 0_u32
  WIA_PRINT_YEAR = 1_u32
  WIA_PRINT_MONTH = 2_u32
  WIA_PRINT_DAY = 3_u32
  WIA_PRINT_WEEK_DAY = 4_u32
  WIA_PRINT_TIME_24H = 5_u32
  WIA_PRINT_TIME_12H = 6_u32
  WIA_PRINT_HOUR_24H = 7_u32
  WIA_PRINT_HOUR_12H = 8_u32
  WIA_PRINT_AM_PM = 9_u32
  WIA_PRINT_MINUTE = 10_u32
  WIA_PRINT_SECOND = 11_u32
  WIA_PRINT_PAGE_COUNT = 12_u32
  WIA_PRINT_IMAGE = 13_u32
  WIA_PRINT_MILLISECOND = 14_u32
  WIA_PRINT_MONTH_NAME = 15_u32
  WIA_PRINT_MONTH_SHORT = 16_u32
  WIA_PRINT_WEEK_DAY_SHORT = 17_u32
  WIA_PRINTER_ENDORSER_GRAPHICS_LEFT = 0_u32
  WIA_PRINTER_ENDORSER_GRAPHICS_RIGHT = 1_u32
  WIA_PRINTER_ENDORSER_GRAPHICS_TOP = 2_u32
  WIA_PRINTER_ENDORSER_GRAPHICS_BOTTOM = 3_u32
  WIA_PRINTER_ENDORSER_GRAPHICS_TOP_LEFT = 4_u32
  WIA_PRINTER_ENDORSER_GRAPHICS_TOP_RIGHT = 5_u32
  WIA_PRINTER_ENDORSER_GRAPHICS_BOTTOM_LEFT = 6_u32
  WIA_PRINTER_ENDORSER_GRAPHICS_BOTTOM_RIGHT = 7_u32
  WIA_PRINTER_ENDORSER_GRAPHICS_BACKGROUND = 8_u32
  WIA_PRINTER_ENDORSER_GRAPHICS_DEVICE_DEFAULT = 9_u32
  WIA_BARCODE_READER_DISABLED = 0_u32
  WIA_BARCODE_READER_AUTO = 1_u32
  WIA_BARCODE_READER_FLATBED = 2_u32
  WIA_BARCODE_READER_FEEDER_FRONT = 3_u32
  WIA_BARCODE_READER_FEEDER_BACK = 4_u32
  WIA_BARCODE_READER_FEEDER_DUPLEX = 5_u32
  WIA_BARCODE_HORIZONTAL_SEARCH = 0_u32
  WIA_BARCODE_VERTICAL_SEARCH = 1_u32
  WIA_BARCODE_HORIZONTAL_VERTICAL_SEARCH = 2_u32
  WIA_BARCODE_VERTICAL_HORIZONTAL_SEARCH = 3_u32
  WIA_BARCODE_AUTO_SEARCH = 4_u32
  WIA_BARCODE_UPCA = 0_u32
  WIA_BARCODE_UPCE = 1_u32
  WIA_BARCODE_CODABAR = 2_u32
  WIA_BARCODE_NONINTERLEAVED_2OF5 = 3_u32
  WIA_BARCODE_INTERLEAVED_2OF5 = 4_u32
  WIA_BARCODE_CODE39 = 5_u32
  WIA_BARCODE_CODE39_MOD43 = 6_u32
  WIA_BARCODE_CODE39_FULLASCII = 7_u32
  WIA_BARCODE_CODE93 = 8_u32
  WIA_BARCODE_CODE128 = 9_u32
  WIA_BARCODE_CODE128A = 10_u32
  WIA_BARCODE_CODE128B = 11_u32
  WIA_BARCODE_CODE128C = 12_u32
  WIA_BARCODE_GS1128 = 13_u32
  WIA_BARCODE_GS1DATABAR = 14_u32
  WIA_BARCODE_ITF14 = 15_u32
  WIA_BARCODE_EAN8 = 16_u32
  WIA_BARCODE_EAN13 = 17_u32
  WIA_BARCODE_POSTNETA = 18_u32
  WIA_BARCODE_POSTNETB = 19_u32
  WIA_BARCODE_POSTNETC = 20_u32
  WIA_BARCODE_POSTNET_DPBC = 21_u32
  WIA_BARCODE_PLANET = 22_u32
  WIA_BARCODE_INTELLIGENT_MAIL = 23_u32
  WIA_BARCODE_POSTBAR = 24_u32
  WIA_BARCODE_RM4SCC = 25_u32
  WIA_BARCODE_HIGH_CAPACITY_COLOR = 26_u32
  WIA_BARCODE_MAXICODE = 27_u32
  WIA_BARCODE_PDF417 = 28_u32
  WIA_BARCODE_CPCBINARY = 29_u32
  WIA_BARCODE_FIM = 30_u32
  WIA_BARCODE_PHARMACODE = 31_u32
  WIA_BARCODE_PLESSEY = 32_u32
  WIA_BARCODE_MSI = 33_u32
  WIA_BARCODE_JAN = 34_u32
  WIA_BARCODE_TELEPEN = 35_u32
  WIA_BARCODE_AZTEC = 36_u32
  WIA_BARCODE_SMALLAZTEC = 37_u32
  WIA_BARCODE_DATAMATRIX = 38_u32
  WIA_BARCODE_DATASTRIP = 39_u32
  WIA_BARCODE_EZCODE = 40_u32
  WIA_BARCODE_QRCODE = 41_u32
  WIA_BARCODE_SHOTCODE = 42_u32
  WIA_BARCODE_SPARQCODE = 43_u32
  WIA_BARCODE_CUSTOMBASE = 32768_u32
  WIA_PATCH_CODE_READER_DISABLED = 0_u32
  WIA_PATCH_CODE_READER_AUTO = 1_u32
  WIA_PATCH_CODE_READER_FLATBED = 2_u32
  WIA_PATCH_CODE_READER_FEEDER_FRONT = 3_u32
  WIA_PATCH_CODE_READER_FEEDER_BACK = 4_u32
  WIA_PATCH_CODE_READER_FEEDER_DUPLEX = 5_u32
  WIA_PATCH_CODE_UNKNOWN = 0_u32
  WIA_PATCH_CODE_1 = 1_u32
  WIA_PATCH_CODE_2 = 2_u32
  WIA_PATCH_CODE_3 = 3_u32
  WIA_PATCH_CODE_4 = 4_u32
  WIA_PATCH_CODE_T = 5_u32
  WIA_PATCH_CODE_6 = 6_u32
  WIA_PATCH_CODE_7 = 7_u32
  WIA_PATCH_CODE_8 = 8_u32
  WIA_PATCH_CODE_9 = 9_u32
  WIA_PATCH_CODE_10 = 10_u32
  WIA_PATCH_CODE_11 = 11_u32
  WIA_PATCH_CODE_12 = 12_u32
  WIA_PATCH_CODE_13 = 13_u32
  WIA_PATCH_CODE_14 = 14_u32
  WIA_PATCH_CODE_CUSTOM_BASE = 32768_u32
  WIA_MICR_READER_DISABLED = 0_u32
  WIA_MICR_READER_AUTO = 1_u32
  WIA_MICR_READER_FLATBED = 2_u32
  WIA_MICR_READER_FEEDER_FRONT = 3_u32
  WIA_MICR_READER_FEEDER_BACK = 4_u32
  WIA_MICR_READER_FEEDER_DUPLEX = 5_u32
  WIA_SEPARATOR_DISABLED = 0_u32
  WIA_SEPARATOR_DETECT_SCAN_CONTINUE = 1_u32
  WIA_SEPARATOR_DETECT_SCAN_STOP = 2_u32
  WIA_SEPARATOR_DETECT_NOSCAN_CONTINUE = 3_u32
  WIA_SEPARATOR_DETECT_NOSCAN_STOP = 4_u32
  WIA_LONG_DOCUMENT_DISABLED = 0_u32
  WIA_LONG_DOCUMENT_ENABLED = 1_u32
  WIA_LONG_DOCUMENT_SPLIT = 2_u32
  WIA_BLANK_PAGE_DETECTION_DISABLED = 0_u32
  WIA_BLANK_PAGE_DISCARD = 1_u32
  WIA_BLANK_PAGE_JOB_SEPARATOR = 2_u32
  WIA_MULTI_FEED_DETECT_DISABLED = 0_u32
  WIA_MULTI_FEED_DETECT_STOP_ERROR = 1_u32
  WIA_MULTI_FEED_DETECT_STOP_SUCCESS = 2_u32
  WIA_MULTI_FEED_DETECT_CONTINUE = 3_u32
  WIA_MULTI_FEED_DETECT_METHOD_LENGTH = 0_u32
  WIA_MULTI_FEED_DETECT_METHOD_OVERLAP = 1_u32
  WIA_AUTO_CROP_DISABLED = 0_u32
  WIA_AUTO_CROP_SINGLE = 1_u32
  WIA_AUTO_CROP_MULTI = 2_u32
  WIA_OVER_SCAN_DISABLED = 0_u32
  WIA_OVER_SCAN_TOP_BOTTOM = 1_u32
  WIA_OVER_SCAN_LEFT_RIGHT = 2_u32
  WIA_OVER_SCAN_ALL = 3_u32
  WIA_COLOR_DROP_DISABLED = 0_u32
  WIA_COLOR_DROP_RED = 1_u32
  WIA_COLOR_DROP_GREEN = 2_u32
  WIA_COLOR_DROP_BLUE = 3_u32
  WIA_COLOR_DROP_RGB = 4_u32
  WIA_SCAN_AHEAD_DISABLED = 0_u32
  WIA_SCAN_AHEAD_ENABLED = 1_u32
  WIA_FEEDER_CONTROL_AUTO = 0_u32
  WIA_FEEDER_CONTROL_MANUAL = 1_u32
  WIA_PRINT_PADDING_NONE = 0_u32
  WIA_PRINT_PADDING_ZERO = 1_u32
  WIA_PRINT_PADDING_BLANK = 2_u32
  WIA_PRINT_FONT_NORMAL = 0_u32
  WIA_PRINT_FONT_BOLD = 1_u32
  WIA_PRINT_FONT_EXTRA_BOLD = 2_u32
  WIA_PRINT_FONT_ITALIC_BOLD = 3_u32
  WIA_PRINT_FONT_ITALIC_EXTRA_BOLD = 4_u32
  WIA_PRINT_FONT_ITALIC = 5_u32
  WIA_PRINT_FONT_SMALL = 6_u32
  WIA_PRINT_FONT_SMALL_BOLD = 7_u32
  WIA_PRINT_FONT_SMALL_EXTRA_BOLD = 8_u32
  WIA_PRINT_FONT_SMALL_ITALIC_BOLD = 9_u32
  WIA_PRINT_FONT_SMALL_ITALIC_EXTRA_BOLD = 10_u32
  WIA_PRINT_FONT_SMALL_ITALIC = 11_u32
  WIA_PRINT_FONT_LARGE = 12_u32
  WIA_PRINT_FONT_LARGE_BOLD = 13_u32
  WIA_PRINT_FONT_LARGE_EXTRA_BOLD = 14_u32
  WIA_PRINT_FONT_LARGE_ITALIC_BOLD = 15_u32
  WIA_PRINT_FONT_LARGE_ITALIC_EXTRA_BOLD = 16_u32
  WIA_PRINT_FONT_LARGE_ITALIC = 17_u32
  WIA_ALARM_NONE = 0_u32
  WIA_ALARM_BEEP1 = 1_u32
  WIA_ALARM_BEEP2 = 2_u32
  WIA_ALARM_BEEP3 = 3_u32
  WIA_ALARM_BEEP4 = 4_u32
  WIA_ALARM_BEEP5 = 5_u32
  WIA_ALARM_BEEP6 = 6_u32
  WIA_ALARM_BEEP7 = 7_u32
  WIA_ALARM_BEEP8 = 8_u32
  WIA_ALARM_BEEP9 = 9_u32
  WIA_ALARM_BEEP10 = 10_u32
  WIA_PRIVATE_DEVPROP = 38914_u32
  WIA_PRIVATE_ITEMPROP = 71682_u32
  WiaImgFmt_UNDEFINED = "b96b3ca9-0728-11d3-9d7b-0000f81ef32e"
  WiaImgFmt_RAWRGB = "bca48b55-f272-4371-b0f1-4a150d057bb4"
  WiaImgFmt_MEMORYBMP = "b96b3caa-0728-11d3-9d7b-0000f81ef32e"
  WiaImgFmt_BMP = "b96b3cab-0728-11d3-9d7b-0000f81ef32e"
  WiaImgFmt_EMF = "b96b3cac-0728-11d3-9d7b-0000f81ef32e"
  WiaImgFmt_WMF = "b96b3cad-0728-11d3-9d7b-0000f81ef32e"
  WiaImgFmt_JPEG = "b96b3cae-0728-11d3-9d7b-0000f81ef32e"
  WiaImgFmt_PNG = "b96b3caf-0728-11d3-9d7b-0000f81ef32e"
  WiaImgFmt_GIF = "b96b3cb0-0728-11d3-9d7b-0000f81ef32e"
  WiaImgFmt_TIFF = "b96b3cb1-0728-11d3-9d7b-0000f81ef32e"
  WiaImgFmt_EXIF = "b96b3cb2-0728-11d3-9d7b-0000f81ef32e"
  WiaImgFmt_PHOTOCD = "b96b3cb3-0728-11d3-9d7b-0000f81ef32e"
  WiaImgFmt_FLASHPIX = "b96b3cb4-0728-11d3-9d7b-0000f81ef32e"
  WiaImgFmt_ICO = "b96b3cb5-0728-11d3-9d7b-0000f81ef32e"
  WiaImgFmt_CIFF = "9821a8ab-3a7e-4215-94e0-d27a460c03b2"
  WiaImgFmt_PICT = "a6bc85d8-6b3e-40ee-a95c-25d482e41adc"
  WiaImgFmt_JPEG2K = "344ee2b2-39db-4dde-8173-c4b75f8f1e49"
  WiaImgFmt_JPEG2KX = "43e14614-c80a-4850-baf3-4b152dc8da27"
  WiaImgFmt_RAW = "6f120719-f1a8-4e07-9ade-9b64c63a3dcc"
  WiaImgFmt_JBIG = "41e8dd92-2f0a-43d4-8636-f1614ba11e46"
  WiaImgFmt_JBIG2 = "bb8e7e67-283c-4235-9e59-0b9bf94ca687"
  WiaImgFmt_RTF = "573dd6a3-4834-432d-a9b5-e198dd9e890d"
  WiaImgFmt_XML = "b9171457-dac8-4884-b393-15b471d5f07e"
  WiaImgFmt_HTML = "c99a4e62-99de-4a94-acca-71956ac2977d"
  WiaImgFmt_TXT = "fafd4d82-723f-421f-9318-30501ac44b59"
  WiaImgFmt_PDFA = "9980bd5b-3463-43c7-bdca-3caa146f229f"
  WiaImgFmt_XPS = "700b4a0f-2011-411c-b430-d1e0b2e10b28"
  WiaImgFmt_OXPS = "2c7b1240-c14d-4109-9755-04b89025153a"
  WiaImgFmt_CSV = "355bda24-5a9f-4494-80dc-be752cecbc8c"
  WiaImgFmt_MPG = "ecd757e4-d2ec-4f57-955d-bcf8a97c4e52"
  WiaImgFmt_AVI = "32f8ca14-087c-4908-b7c4-6757fe7e90ab"
  WiaAudFmt_WAV = "f818e146-07af-40ff-ae55-be8f2c065dbe"
  WiaAudFmt_MP3 = "0fbc71fb-43bf-49f2-9190-e6fecff37e54"
  WiaAudFmt_AIFF = "66e2bf4f-b6fc-443f-94c8-2f33c8a65aaf"
  WiaAudFmt_WMA = "d61d6413-8bc2-438f-93ad-21bd484db6a1"
  WiaImgFmt_ASF = "8d948ee9-d0aa-4a12-9d9a-9cc5de36199b"
  WiaImgFmt_SCRIPT = "fe7d6c53-2dac-446a-b0bd-d73e21e924c9"
  WiaImgFmt_EXEC = "485da097-141e-4aa5-bb3b-a5618d95d02b"
  WiaImgFmt_UNICODE16 = "1b7639b6-6357-47d1-9a07-12452dc073e9"
  WiaImgFmt_DPOF = "369eeeab-a0e8-45ca-86a6-a83ce5697e28"
  WiaImgFmt_XMLBAR = "6235701c-3a98-484c-b2a8-fdffd87e6b16"
  WiaImgFmt_RAWBAR = "da63f833-d26e-451e-90d2-ea55a1365d62"
  WiaImgFmt_XMLPAT = "f8986f55-f052-460d-9523-3a7dfedbb33c"
  WiaImgFmt_RAWPAT = "7760507c-5064-400c-9a17-575624d8824b"
  WiaImgFmt_XMLMIC = "2d164c61-b9ae-4b23-8973-c7067e1fbd31"
  WiaImgFmt_RAWMIC = "22c4f058-0d88-409c-ac1c-eec12b0ea680"
  WIA_EVENT_DEVICE_DISCONNECTED = "143e4e83-6497-11d2-a231-00c04fa31809"
  WIA_EVENT_DEVICE_CONNECTED = "a28bbade-64b6-11d2-a231-00c04fa31809"
  WIA_EVENT_ITEM_DELETED = "1d22a559-e14f-11d2-b326-00c04f68ce61"
  WIA_EVENT_ITEM_CREATED = "4c8f4ef5-e14f-11d2-b326-00c04f68ce61"
  WIA_EVENT_TREE_UPDATED = "c9859b91-4ab2-4cd6-a1fc-582eec55e585"
  WIA_EVENT_VOLUME_INSERT = "9638bbfd-d1bd-11d2-b31f-00c04f68ce61"
  WIA_EVENT_SCAN_IMAGE = "a6c5a715-8c6e-11d2-977a-0000f87a926f"
  WIA_EVENT_SCAN_PRINT_IMAGE = "b441f425-8c6e-11d2-977a-0000f87a926f"
  WIA_EVENT_SCAN_FAX_IMAGE = "c00eb793-8c6e-11d2-977a-0000f87a926f"
  WIA_EVENT_SCAN_OCR_IMAGE = "9d095b89-37d6-4877-afed-62a297dc6dbe"
  WIA_EVENT_SCAN_EMAIL_IMAGE = "c686dcee-54f2-419e-9a27-2fc7f2e98f9e"
  WIA_EVENT_SCAN_FILM_IMAGE = "9b2b662c-6185-438c-b68b-e39ee25e71cb"
  WIA_EVENT_SCAN_IMAGE2 = "fc4767c1-c8b3-48a2-9cfa-2e90cb3d3590"
  WIA_EVENT_SCAN_IMAGE3 = "154e27be-b617-4653-acc5-0fd7bd4c65ce"
  WIA_EVENT_SCAN_IMAGE4 = "a65b704a-7f3c-4447-a75d-8a26dfca1fdf"
  WIA_EVENT_STORAGE_CREATED = "353308b2-fe73-46c8-895e-fa4551ccc85a"
  WIA_EVENT_STORAGE_DELETED = "5e41e75e-9390-44c5-9a51-e47019e390cf"
  WIA_EVENT_STI_PROXY = "d711f81f-1f0d-422d-8641-927d1b93e5e5"
  WIA_EVENT_CANCEL_IO = "c860f7b8-9ccd-41ea-bbbf-4dd09c5b1795"
  WIA_EVENT_POWER_SUSPEND = "a0922ff9-c3b4-411c-9e29-03a66993d2be"
  WIA_EVENT_POWER_RESUME = "618f153e-f686-4350-9634-4115a304830c"
  WIA_EVENT_HANDLER_NO_ACTION = "e0372b7d-e115-4525-bc55-b629e68c745a"
  WIA_EVENT_HANDLER_PROMPT = "5f4baad0-4d59-4fcd-b213-783ce7a92f22"
  WIA_EVENT_DEVICE_NOT_READY = "d8962d7e-e4dc-4b4d-ba29-668a87f42e6f"
  WIA_EVENT_DEVICE_READY = "7523ec6c-988b-419e-9a0a-425ac31b37dc"
  WIA_EVENT_FLATBED_LID_OPEN = "ba0a0623-437d-4f03-a97d-7793b123113c"
  WIA_EVENT_FLATBED_LID_CLOSED = "f879af0f-9b29-4283-ad95-d412164d39a9"
  WIA_EVENT_FEEDER_LOADED = "cc8d701e-9aba-481d-bf74-78f763dc342a"
  WIA_EVENT_FEEDER_EMPTIED = "e70b4b82-6dda-46bb-8ff9-53ceb1a03e35"
  WIA_EVENT_COVER_OPEN = "19a12136-fa1c-4f66-900f-8f914ec74ec9"
  WIA_EVENT_COVER_CLOSED = "6714a1e6-e285-468c-9b8c-da7dc4cbaa05"
  WIA_CMD_SYNCHRONIZE = "9b26b7b2-acad-11d2-a093-00c04f72dc3c"
  WIA_CMD_TAKE_PICTURE = "af933cac-acad-11d2-a093-00c04f72dc3c"
  WIA_CMD_DELETE_ALL_ITEMS = "e208c170-acad-11d2-a093-00c04f72dc3c"
  WIA_CMD_CHANGE_DOCUMENT = "04e725b0-acae-11d2-a093-00c04f72dc3c"
  WIA_CMD_UNLOAD_DOCUMENT = "1f3b3d8e-acae-11d2-a093-00c04f72dc3c"
  WIA_CMD_DIAGNOSTIC = "10ff52f5-de04-4cf0-a5ad-691f8dce0141"
  WIA_CMD_FORMAT = "c3a693aa-f788-4d34-a5b0-be7190759a24"
  WIA_CMD_DELETE_DEVICE_TREE = "73815942-dbea-11d2-8416-00c04fa36145"
  WIA_CMD_BUILD_DEVICE_TREE = "9cba5ce0-dbea-11d2-8416-00c04fa36145"
  WIA_CMD_START_FEEDER = "5a9df6c9-5f2d-4a39-9d6c-00456d047f00"
  WIA_CMD_STOP_FEEDER = "d847b06d-3905-459c-9509-9b29cdb691e7"
  WIA_CMD_PAUSE_FEEDER = "50985e4d-a5b2-4b71-9c95-6d7d7c469a43"
  BASE_VAL_WIA_ERROR = 0_u32
  BASE_VAL_WIA_SUCCESS = 0_u32
  WIA_ERROR_GENERAL_ERROR = -2145320959_i32
  WIA_ERROR_PAPER_JAM = -2145320958_i32
  WIA_ERROR_PAPER_EMPTY = -2145320957_i32
  WIA_ERROR_PAPER_PROBLEM = -2145320956_i32
  WIA_ERROR_OFFLINE = -2145320955_i32
  WIA_ERROR_BUSY = -2145320954_i32
  WIA_ERROR_WARMING_UP = -2145320953_i32
  WIA_ERROR_USER_INTERVENTION = -2145320952_i32
  WIA_ERROR_ITEM_DELETED = -2145320951_i32
  WIA_ERROR_DEVICE_COMMUNICATION = -2145320950_i32
  WIA_ERROR_INVALID_COMMAND = -2145320949_i32
  WIA_ERROR_INCORRECT_HARDWARE_SETTING = -2145320948_i32
  WIA_ERROR_DEVICE_LOCKED = -2145320947_i32
  WIA_ERROR_EXCEPTION_IN_DRIVER = -2145320946_i32
  WIA_ERROR_INVALID_DRIVER_RESPONSE = -2145320945_i32
  WIA_ERROR_COVER_OPEN = -2145320944_i32
  WIA_ERROR_LAMP_OFF = -2145320943_i32
  WIA_ERROR_DESTINATION = -2145320942_i32
  WIA_ERROR_NETWORK_RESERVATION_FAILED = -2145320941_i32
  WIA_ERROR_MULTI_FEED = -2145320940_i32
  WIA_ERROR_MAXIMUM_PRINTER_ENDORSER_COUNTER = -2145320939_i32
  WIA_STATUS_END_OF_MEDIA = 2162689_i32
  WIA_STATUS_WARMING_UP = 2162690_i32
  WIA_STATUS_CALIBRATING = 2162691_i32
  WIA_STATUS_RESERVING_NETWORK_DEVICE = 2162694_i32
  WIA_STATUS_NETWORK_DEVICE_RESERVED = 2162695_i32
  WIA_STATUS_CLEAR = 2162696_i32
  WIA_STATUS_SKIP_ITEM = 2162697_i32
  WIA_STATUS_NOT_HANDLED = 2162698_i32
  WIA_S_CHANGE_DEVICE = 2162699_i32
  WIA_S_NO_DEVICE_AVAILABLE = -2145320939_i32
  WIA_SELECT_DEVICE_NODEFAULT = 1_u32
  WIA_DEVICE_DIALOG_SINGLE_IMAGE = 2_u32
  WIA_DEVICE_DIALOG_USE_COMMON_UI = 4_u32
  WIA_REGISTER_EVENT_CALLBACK = 1_u32
  WIA_UNREGISTER_EVENT_CALLBACK = 2_u32
  WIA_SET_DEFAULT_HANDLER = 4_u32
  WIA_NOTIFICATION_EVENT = 1_u32
  WIA_ACTION_EVENT = 2_u32
  WIA_LINE_ORDER_TOP_TO_BOTTOM = 1_u32
  WIA_LINE_ORDER_BOTTOM_TO_TOP = 2_u32
  WIA_IS_DEFAULT_HANDLER = 1_u32
  WIA_EVENT_DEVICE_DISCONNECTED_STR = "Device Disconnected"
  WIA_EVENT_DEVICE_CONNECTED_STR = "Device Connected"
  TYMED_CALLBACK = 128_u32
  TYMED_MULTIPAGE_FILE = 256_u32
  TYMED_MULTIPAGE_CALLBACK = 512_u32
  IT_MSG_DATA_HEADER = 1_u32
  IT_MSG_DATA = 2_u32
  IT_MSG_STATUS = 3_u32
  IT_MSG_TERMINATION = 4_u32
  IT_MSG_NEW_PAGE = 5_u32
  IT_MSG_FILE_PREVIEW_DATA = 6_u32
  IT_MSG_FILE_PREVIEW_DATA_HEADER = 7_u32
  IT_STATUS_TRANSFER_FROM_DEVICE = 1_u32
  IT_STATUS_PROCESSING_DATA = 2_u32
  IT_STATUS_TRANSFER_TO_CLIENT = 4_u32
  IT_STATUS_MASK = 7_u32
  WIA_TRANSFER_ACQUIRE_CHILDREN = 1_u32
  WIA_TRANSFER_MSG_STATUS = 1_u32
  WIA_TRANSFER_MSG_END_OF_STREAM = 2_u32
  WIA_TRANSFER_MSG_END_OF_TRANSFER = 3_u32
  WIA_TRANSFER_MSG_DEVICE_STATUS = 5_u32
  WIA_TRANSFER_MSG_NEW_PAGE = 6_u32
  WIA_MAJOR_EVENT_DEVICE_CONNECT = 1_u32
  WIA_MAJOR_EVENT_DEVICE_DISCONNECT = 2_u32
  WIA_MAJOR_EVENT_PICTURE_TAKEN = 3_u32
  WIA_MAJOR_EVENT_PICTURE_DELETED = 4_u32
  WIA_DEVICE_NOT_CONNECTED = 0_u32
  WIA_DEVICE_CONNECTED = 1_u32
  WIA_DEVICE_COMMANDS = 1_u32
  WIA_DEVICE_EVENTS = 2_u32
  WIA_DEVINFO_ENUM_ALL = 15_u32
  WIA_DEVINFO_ENUM_LOCAL = 16_u32
  WiaItemTypeFree = 0_u32
  WiaItemTypeImage = 1_u32
  WiaItemTypeFile = 2_u32
  WiaItemTypeFolder = 4_u32
  WiaItemTypeRoot = 8_u32
  WiaItemTypeAnalyze = 16_u32
  WiaItemTypeAudio = 32_u32
  WiaItemTypeDevice = 64_u32
  WiaItemTypeDeleted = 128_u32
  WiaItemTypeDisconnected = 256_u32
  WiaItemTypeHPanorama = 512_u32
  WiaItemTypeVPanorama = 1024_u32
  WiaItemTypeBurst = 2048_u32
  WiaItemTypeStorage = 4096_u32
  WiaItemTypeTransfer = 8192_u32
  WiaItemTypeGenerated = 16384_u32
  WiaItemTypeHasAttachments = 32768_u32
  WiaItemTypeVideo = 65536_u32
  WiaItemTypeRemoved = 2147483648_u32
  WiaItemTypeDocument = 262144_u32
  WiaItemTypeProgrammableDataSource = 524288_u32
  WiaItemTypeMask = 2148532223_u32
  WIA_MAX_CTX_SIZE = 16777216_u32
  WIA_PROP_READ = 1_u32
  WIA_PROP_WRITE = 2_u32
  WIA_PROP_SYNC_REQUIRED = 4_u32
  WIA_PROP_NONE = 8_u32
  WIA_PROP_RANGE = 16_u32
  WIA_PROP_LIST = 32_u32
  WIA_PROP_FLAG = 64_u32
  WIA_PROP_CACHEABLE = 65536_u32
  COPY_PARENT_PROPERTY_VALUES = 1073741824_u32
  WIA_ITEM_CAN_BE_DELETED = 128_u32
  WIA_ITEM_READ = 1_u32
  WIA_ITEM_WRITE = 2_u32
  WIA_RANGE_MIN = 0_u32
  WIA_RANGE_NOM = 1_u32
  WIA_RANGE_MAX = 2_u32
  WIA_RANGE_STEP = 3_u32
  WIA_RANGE_NUM_ELEMS = 4_u32
  WIA_LIST_COUNT = 0_u32
  WIA_LIST_NOM = 1_u32
  WIA_LIST_VALUES = 2_u32
  WIA_LIST_NUM_ELEMS = 2_u32
  WIA_FLAG_NOM = 0_u32
  WIA_FLAG_VALUES = 1_u32
  WIA_FLAG_NUM_ELEMS = 2_u32
  WIA_DIP_FIRST = 2_u32
  WIA_IPA_FIRST = 4098_u32
  WIA_DPF_FIRST = 3330_u32
  WIA_IPS_FIRST = 6146_u32
  WIA_DPS_FIRST = 3074_u32
  WIA_IPC_FIRST = 5122_u32
  WIA_NUM_IPC = 9_u32
  WIA_RESERVED_FOR_NEW_PROPS = 1024_u32
  WHITEBALANCE_MANUAL = 1_u32
  WHITEBALANCE_AUTO = 2_u32
  WHITEBALANCE_ONEPUSH_AUTO = 3_u32
  WHITEBALANCE_DAYLIGHT = 4_u32
  WHITEBALANCE_FLORESCENT = 5_u32
  WHITEBALANCE_TUNGSTEN = 6_u32
  WHITEBALANCE_FLASH = 7_u32
  FOCUSMODE_MANUAL = 1_u32
  FOCUSMODE_AUTO = 2_u32
  FOCUSMODE_MACROAUTO = 3_u32
  EXPOSUREMETERING_AVERAGE = 1_u32
  EXPOSUREMETERING_CENTERWEIGHT = 2_u32
  EXPOSUREMETERING_MULTISPOT = 3_u32
  EXPOSUREMETERING_CENTERSPOT = 4_u32
  FLASHMODE_AUTO = 1_u32
  FLASHMODE_OFF = 2_u32
  FLASHMODE_FILL = 3_u32
  FLASHMODE_REDEYE_AUTO = 4_u32
  FLASHMODE_REDEYE_FILL = 5_u32
  FLASHMODE_EXTERNALSYNC = 6_u32
  EXPOSUREMODE_MANUAL = 1_u32
  EXPOSUREMODE_AUTO = 2_u32
  EXPOSUREMODE_APERTURE_PRIORITY = 3_u32
  EXPOSUREMODE_SHUTTER_PRIORITY = 4_u32
  EXPOSUREMODE_PROGRAM_CREATIVE = 5_u32
  EXPOSUREMODE_PROGRAM_ACTION = 6_u32
  EXPOSUREMODE_PORTRAIT = 7_u32
  CAPTUREMODE_NORMAL = 1_u32
  CAPTUREMODE_BURST = 2_u32
  CAPTUREMODE_TIMELAPSE = 3_u32
  EFFECTMODE_STANDARD = 1_u32
  EFFECTMODE_BW = 2_u32
  EFFECTMODE_SEPIA = 3_u32
  FOCUSMETERING_CENTERSPOT = 1_u32
  FOCUSMETERING_MULTISPOT = 2_u32
  POWERMODE_LINE = 1_u32
  POWERMODE_BATTERY = 2_u32
  LEFT_JUSTIFIED = 0_u32
  CENTERED = 1_u32
  RIGHT_JUSTIFIED = 2_u32
  TOP_JUSTIFIED = 0_u32
  BOTTOM_JUSTIFIED = 2_u32
  PORTRAIT = 0_u32
  LANSCAPE = 1_u32
  LANDSCAPE = 1_u32
  ROT180 = 2_u32
  ROT270 = 3_u32
  MIRRORED = 1_u32
  FEED = 1_u32
  FLAT = 2_u32
  DUP = 4_u32
  DETECT_FLAT = 8_u32
  DETECT_SCAN = 16_u32
  DETECT_FEED = 32_u32
  DETECT_DUP = 64_u32
  DETECT_FEED_AVAIL = 128_u32
  DETECT_DUP_AVAIL = 256_u32
  FILM_TPA = 512_u32
  DETECT_FILM_TPA = 1024_u32
  STOR = 2048_u32
  DETECT_STOR = 4096_u32
  ADVANCED_DUP = 8192_u32
  AUTO_SOURCE = 32768_u32
  IMPRINTER = 65536_u32
  ENDORSER = 131072_u32
  BARCODE_READER = 262144_u32
  PATCH_CODE_READER = 524288_u32
  MICR_READER = 1048576_u32
  FEED_READY = 1_u32
  FLAT_READY = 2_u32
  DUP_READY = 4_u32
  FLAT_COVER_UP = 8_u32
  PATH_COVER_UP = 16_u32
  PAPER_JAM = 32_u32
  FILM_TPA_READY = 64_u32
  STORAGE_READY = 128_u32
  STORAGE_FULL = 256_u32
  MULTIPLE_FEED = 512_u32
  DEVICE_ATTENTION = 1024_u32
  LAMP_ERR = 2048_u32
  IMPRINTER_READY = 4096_u32
  ENDORSER_READY = 8192_u32
  BARCODE_READER_READY = 16384_u32
  PATCH_CODE_READER_READY = 32768_u32
  MICR_READER_READY = 65536_u32
  FEEDER = 1_u32
  FLATBED = 2_u32
  DUPLEX = 4_u32
  FRONT_FIRST = 8_u32
  BACK_FIRST = 16_u32
  FRONT_ONLY = 32_u32
  BACK_ONLY = 64_u32
  NEXT_PAGE = 128_u32
  PREFEED = 256_u32
  AUTO_ADVANCE = 512_u32
  ADVANCED_DUPLEX = 1024_u32
  LIGHT_SOURCE_PRESENT_DETECT = 1_u32
  LIGHT_SOURCE_PRESENT = 2_u32
  LIGHT_SOURCE_DETECT_READY = 4_u32
  LIGHT_SOURCE_READY = 8_u32
  TRANSPARENCY_DYNAMIC_FRAME_SUPPORT = 1_u32
  TRANSPARENCY_STATIC_FRAME_SUPPORT = 2_u32
  LIGHT_SOURCE_SELECT = 1_u32
  LIGHT_SOURCE_POSITIVE = 2_u32
  LIGHT_SOURCE_NEGATIVE = 4_u32
  WIA_SCAN_AHEAD_ALL = 0_u32
  ALL_PAGES = 0_u32
  WIA_FINAL_SCAN = 0_u32
  WIA_PREVIEW_SCAN = 1_u32
  WIA_SHOW_PREVIEW_CONTROL = 0_u32
  WIA_DONT_SHOW_PREVIEW_CONTROL = 1_u32
  WIA_ENDORSER_TOK_DATE = "$DATE$"
  WIA_ENDORSER_TOK_TIME = "$TIME$"
  WIA_ENDORSER_TOK_PAGE_COUNT = "$PAGE_COUNT$"
  WIA_ENDORSER_TOK_DAY = "$DAY$"
  WIA_ENDORSER_TOK_MONTH = "$MONTH$"
  WIA_ENDORSER_TOK_YEAR = "$YEAR$"
  WIA_PAGE_A4 = 0_u32
  WIA_PAGE_LETTER = 1_u32
  WIA_PAGE_CUSTOM = 2_u32
  WIA_PAGE_USLEGAL = 3_u32
  WIA_PAGE_USLETTER = 1_u32
  WIA_PAGE_USLEDGER = 4_u32
  WIA_PAGE_USSTATEMENT = 5_u32
  WIA_PAGE_BUSINESSCARD = 6_u32
  WIA_PAGE_ISO_A0 = 7_u32
  WIA_PAGE_ISO_A1 = 8_u32
  WIA_PAGE_ISO_A2 = 9_u32
  WIA_PAGE_ISO_A3 = 10_u32
  WIA_PAGE_ISO_A4 = 0_u32
  WIA_PAGE_ISO_A5 = 11_u32
  WIA_PAGE_ISO_A6 = 12_u32
  WIA_PAGE_ISO_A7 = 13_u32
  WIA_PAGE_ISO_A8 = 14_u32
  WIA_PAGE_ISO_A9 = 15_u32
  WIA_PAGE_ISO_A10 = 16_u32
  WIA_PAGE_ISO_B0 = 17_u32
  WIA_PAGE_ISO_B1 = 18_u32
  WIA_PAGE_ISO_B2 = 19_u32
  WIA_PAGE_ISO_B3 = 20_u32
  WIA_PAGE_ISO_B4 = 21_u32
  WIA_PAGE_ISO_B5 = 22_u32
  WIA_PAGE_ISO_B6 = 23_u32
  WIA_PAGE_ISO_B7 = 24_u32
  WIA_PAGE_ISO_B8 = 25_u32
  WIA_PAGE_ISO_B9 = 26_u32
  WIA_PAGE_ISO_B10 = 27_u32
  WIA_PAGE_ISO_C0 = 28_u32
  WIA_PAGE_ISO_C1 = 29_u32
  WIA_PAGE_ISO_C2 = 30_u32
  WIA_PAGE_ISO_C3 = 31_u32
  WIA_PAGE_ISO_C4 = 32_u32
  WIA_PAGE_ISO_C5 = 33_u32
  WIA_PAGE_ISO_C6 = 34_u32
  WIA_PAGE_ISO_C7 = 35_u32
  WIA_PAGE_ISO_C8 = 36_u32
  WIA_PAGE_ISO_C9 = 37_u32
  WIA_PAGE_ISO_C10 = 38_u32
  WIA_PAGE_JIS_B0 = 39_u32
  WIA_PAGE_JIS_B1 = 40_u32
  WIA_PAGE_JIS_B2 = 41_u32
  WIA_PAGE_JIS_B3 = 42_u32
  WIA_PAGE_JIS_B4 = 43_u32
  WIA_PAGE_JIS_B5 = 44_u32
  WIA_PAGE_JIS_B6 = 45_u32
  WIA_PAGE_JIS_B7 = 46_u32
  WIA_PAGE_JIS_B8 = 47_u32
  WIA_PAGE_JIS_B9 = 48_u32
  WIA_PAGE_JIS_B10 = 49_u32
  WIA_PAGE_JIS_2A = 50_u32
  WIA_PAGE_JIS_4A = 51_u32
  WIA_PAGE_DIN_2B = 52_u32
  WIA_PAGE_DIN_4B = 53_u32
  WIA_PAGE_AUTO = 100_u32
  WIA_PAGE_CUSTOM_BASE = 32768_u32
  WIA_COMPRESSION_NONE = 0_u32
  WIA_COMPRESSION_BI_RLE4 = 1_u32
  WIA_COMPRESSION_BI_RLE8 = 2_u32
  WIA_COMPRESSION_G3 = 3_u32
  WIA_COMPRESSION_G4 = 4_u32
  WIA_COMPRESSION_JPEG = 5_u32
  WIA_COMPRESSION_JBIG = 6_u32
  WIA_COMPRESSION_JPEG2K = 7_u32
  WIA_COMPRESSION_PNG = 8_u32
  WIA_COMPRESSION_AUTO = 100_u32
  WIA_PACKED_PIXEL = 0_u32
  WIA_PLANAR = 1_u32
  WIA_DATA_THRESHOLD = 0_u32
  WIA_DATA_DITHER = 1_u32
  WIA_DATA_GRAYSCALE = 2_u32
  WIA_DATA_COLOR = 3_u32
  WIA_DATA_COLOR_THRESHOLD = 4_u32
  WIA_DATA_COLOR_DITHER = 5_u32
  WIA_DATA_RAW_RGB = 6_u32
  WIA_DATA_RAW_BGR = 7_u32
  WIA_DATA_RAW_YUV = 8_u32
  WIA_DATA_RAW_YUVK = 9_u32
  WIA_DATA_RAW_CMY = 10_u32
  WIA_DATA_RAW_CMYK = 11_u32
  WIA_DATA_AUTO = 100_u32
  WIA_DEPTH_AUTO = 0_u32
  WIA_PHOTO_WHITE_1 = 0_u32
  WIA_PHOTO_WHITE_0 = 1_u32
  WIA_PROPPAGE_SCANNER_ITEM_GENERAL = 1_u32
  WIA_PROPPAGE_CAMERA_ITEM_GENERAL = 2_u32
  WIA_PROPPAGE_DEVICE_GENERAL = 4_u32
  WIA_INTENT_NONE = 0_u32
  WIA_INTENT_IMAGE_TYPE_COLOR = 1_u32
  WIA_INTENT_IMAGE_TYPE_GRAYSCALE = 2_u32
  WIA_INTENT_IMAGE_TYPE_TEXT = 4_u32
  WIA_INTENT_IMAGE_TYPE_MASK = 15_u32
  WIA_INTENT_MINIMIZE_SIZE = 65536_u32
  WIA_INTENT_MAXIMIZE_QUALITY = 131072_u32
  WIA_INTENT_BEST_PREVIEW = 262144_u32
  WIA_INTENT_SIZE_MASK = 983040_u32
  WIA_NUM_DIP = 16_u32
  SHELLEX_WIAUIEXTENSION_NAME = "WiaDialogExtensionHandlers"
  CFSTR_WIAITEMNAMES = "WIAItemNames"
  CFSTR_WIAITEMPTR = "WIAItemPointer"
  GUID_DEVINTERFACE_IMAGE = "6bdd1fc6-810f-11d0-bec7-08002be2092f"
  MAX_IO_HANDLES = 16_u32
  MAX_RESERVED = 4_u32
  MAX_ANSI_CHAR = 255_u32
  BUS_TYPE_SCSI = 200_u32
  BUS_TYPE_USB = 201_u32
  BUS_TYPE_PARALLEL = 202_u32
  BUS_TYPE_FIREWIRE = 203_u32
  SCAN_FIRST = 10_u32
  SCAN_NEXT = 20_u32
  SCAN_FINISHED = 30_u32
  SCANMODE_FINALSCAN = 0_u32
  SCANMODE_PREVIEWSCAN = 1_u32
  CMD_INITIALIZE = 100_u32
  CMD_UNINITIALIZE = 101_u32
  CMD_SETXRESOLUTION = 102_u32
  CMD_SETYRESOLUTION = 103_u32
  CMD_SETCONTRAST = 104_u32
  CMD_SETINTENSITY = 105_u32
  CMD_SETDATATYPE = 106_u32
  CMD_SETDITHER = 107_u32
  CMD_SETMIRROR = 108_u32
  CMD_SETNEGATIVE = 109_u32
  CMD_SETTONEMAP = 110_u32
  CMD_SETCOLORDITHER = 111_u32
  CMD_SETMATRIX = 112_u32
  CMD_SETSPEED = 113_u32
  CMD_SETFILTER = 114_u32
  CMD_LOAD_ADF = 115_u32
  CMD_UNLOAD_ADF = 116_u32
  CMD_GETADFAVAILABLE = 117_u32
  CMD_GETADFOPEN = 118_u32
  CMD_GETADFREADY = 119_u32
  CMD_GETADFHASPAPER = 120_u32
  CMD_GETADFSTATUS = 121_u32
  CMD_GETADFUNLOADREADY = 122_u32
  CMD_GETTPAAVAILABLE = 123_u32
  CMD_GETTPAOPENED = 124_u32
  CMD_TPAREADY = 125_u32
  CMD_SETLAMP = 126_u32
  CMD_SENDSCSICOMMAND = 127_u32
  CMD_STI_DEVICERESET = 128_u32
  CMD_STI_GETSTATUS = 129_u32
  CMD_STI_DIAGNOSTIC = 130_u32
  CMD_RESETSCANNER = 131_u32
  CMD_GETCAPABILITIES = 132_u32
  CMD_GET_INTERRUPT_EVENT = 133_u32
  CMD_SETGSDNAME = 134_u32
  CMD_SETSCANMODE = 135_u32
  CMD_SETSTIDEVICEHKEY = 136_u32
  CMD_GETSUPPORTEDFILEFORMATS = 138_u32
  CMD_GETSUPPORTEDMEMORYFORMATS = 139_u32
  CMD_SETFORMAT = 140_u32
  SUPPORT_COLOR = 1_u32
  SUPPORT_BW = 2_u32
  SUPPORT_GRAYSCALE = 4_u32
  MCRO_ERROR_GENERAL_ERROR = 0_u32
  MCRO_STATUS_OK = 1_u32
  MCRO_ERROR_PAPER_JAM = 2_u32
  MCRO_ERROR_PAPER_PROBLEM = 3_u32
  MCRO_ERROR_PAPER_EMPTY = 4_u32
  MCRO_ERROR_OFFLINE = 5_u32
  MCRO_ERROR_USER_INTERVENTION = 6_u32
  WIA_ORDER_RGB = 0_u32
  WIA_ORDER_BGR = 1_u32
  WiaItemTypeTwainCapabilityPassThrough = 131072_u32
  ESC_TWAIN_CAPABILITY = 2001_u32
  ESC_TWAIN_PRIVATE_SUPPORTED_CAPS = 2002_u32
  WIAU_DEBUG_TSTR = "S"
  G_dwdebugflags = 0_u32
  WIA_WSD_MANUFACTURER = 38914_u32
  WIA_WSD_MANUFACTURER_STR = "Device manufacturer"
  WIA_WSD_MANUFACTURER_URL = 38915_u32
  WIA_WSD_MANUFACTURER_URL_STR = "Manufacurer URL"
  WIA_WSD_MODEL_NAME = 38916_u32
  WIA_WSD_MODEL_NAME_STR = "Model name"
  WIA_WSD_MODEL_NUMBER = 38917_u32
  WIA_WSD_MODEL_NUMBER_STR = "Model number"
  WIA_WSD_MODEL_URL = 38918_u32
  WIA_WSD_MODEL_URL_STR = "Model URL"
  WIA_WSD_PRESENTATION_URL = 38919_u32
  WIA_WSD_PRESENTATION_URL_STR = "Presentation URL"
  WIA_WSD_FRIENDLY_NAME = 38920_u32
  WIA_WSD_FRIENDLY_NAME_STR = "Friendly name"
  WIA_WSD_SERIAL_NUMBER = 38921_u32
  WIA_WSD_SERIAL_NUMBER_STR = "Serial number"
  WIA_WSD_SCAN_AVAILABLE_ITEM = 38922_u32
  WIA_WSD_SCAN_AVAILABLE_ITEM_STR = "Scan Available Item"

  CLSID_WiaDevMgr = LibC::GUID.new(0xa1f4e726_u32, 0x8cf1_u16, 0x11d1_u16, StaticArray[0xbf_u8, 0x92_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x1e_u8, 0xd8_u8, 0x11_u8])

  CLSID_WiaDevMgr2 = LibC::GUID.new(0xb6c292bc_u32, 0x7c88_u16, 0x41ee_u16, StaticArray[0x8b_u8, 0x54_u8, 0x8e_u8, 0xc9_u8, 0x26_u8, 0x17_u8, 0xe5_u8, 0x99_u8])

  CLSID_WiaLog = LibC::GUID.new(0xa1e75357_u32, 0x881a_u16, 0x419e_u16, StaticArray[0x83_u8, 0xe2_u8, 0xbb_u8, 0x16_u8, 0xdb_u8, 0x19_u8, 0x7c_u8, 0x68_u8])

  CLSID_WiaVideo = LibC::GUID.new(0x3908c3cd_u32, 0x4478_u16, 0x4536_u16, StaticArray[0xaf_u8, 0x2f_u8, 0x10_u8, 0xc2_u8, 0x5d_u8, 0x4e_u8, 0xf8_u8, 0x9a_u8])

  enum WIAVIDEO_STATE
    WIAVIDEO_NO_VIDEO = 1_i32
    WIAVIDEO_CREATING_VIDEO = 2_i32
    WIAVIDEO_VIDEO_CREATED = 3_i32
    WIAVIDEO_VIDEO_PLAYING = 4_i32
    WIAVIDEO_VIDEO_PAUSED = 5_i32
    WIAVIDEO_DESTROYING_VIDEO = 6_i32
  end

  @[Extern]
  struct WIA_DITHER_PATTERN_DATA
    property lSize : Int32
    property bstrPatternName : Win32cr::Foundation::BSTR
    property lPatternWidth : Int32
    property lPatternLength : Int32
    property cbPattern : Int32
    property pbPattern : UInt8*
    def initialize(@lSize : Int32, @bstrPatternName : Win32cr::Foundation::BSTR, @lPatternWidth : Int32, @lPatternLength : Int32, @cbPattern : Int32, @pbPattern : UInt8*)
    end
  end

  @[Extern]
  struct WIA_PROPID_TO_NAME
    property propid : UInt32
    property pszName : Win32cr::Foundation::PWSTR
    def initialize(@propid : UInt32, @pszName : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct WIA_FORMAT_INFO
    property guidFormatID : LibC::GUID
    property lTymed : Int32
    def initialize(@guidFormatID : LibC::GUID, @lTymed : Int32)
    end
  end

  @[Extern]
  struct WIA_RAW_HEADER
    property tag : UInt32
    property version : UInt32
    property header_size : UInt32
    property x_res : UInt32
    property y_res : UInt32
    property x_extent : UInt32
    property y_extent : UInt32
    property bytes_per_line : UInt32
    property bits_per_pixel : UInt32
    property channels_per_pixel : UInt32
    property data_type : UInt32
    property bits_per_channel : UInt8[8]
    property compression : UInt32
    property photometric_interp : UInt32
    property line_order : UInt32
    property raw_data_offset : UInt32
    property raw_data_size : UInt32
    property palette_offset : UInt32
    property palette_size : UInt32
    def initialize(@tag : UInt32, @version : UInt32, @header_size : UInt32, @x_res : UInt32, @y_res : UInt32, @x_extent : UInt32, @y_extent : UInt32, @bytes_per_line : UInt32, @bits_per_pixel : UInt32, @channels_per_pixel : UInt32, @data_type : UInt32, @bits_per_channel : UInt8[8], @compression : UInt32, @photometric_interp : UInt32, @line_order : UInt32, @raw_data_offset : UInt32, @raw_data_size : UInt32, @palette_offset : UInt32, @palette_size : UInt32)
    end
  end

  @[Extern]
  struct WIA_BARCODE_INFO
    property size : UInt32
    property type__ : UInt32
    property page : UInt32
    property confidence : UInt32
    property x_offset : UInt32
    property y_offset : UInt32
    property rotation : UInt32
    property length : UInt32
    property text : UInt16*
    def initialize(@size : UInt32, @type__ : UInt32, @page : UInt32, @confidence : UInt32, @x_offset : UInt32, @y_offset : UInt32, @rotation : UInt32, @length : UInt32, @text : UInt16*)
    end
  end

  @[Extern]
  struct WIA_BARCODES
    property tag : UInt32
    property version : UInt32
    property size : UInt32
    property count : UInt32
    property barcodes : Win32cr::Devices::ImageAcquisition::WIA_BARCODE_INFO*
    def initialize(@tag : UInt32, @version : UInt32, @size : UInt32, @count : UInt32, @barcodes : Win32cr::Devices::ImageAcquisition::WIA_BARCODE_INFO*)
    end
  end

  @[Extern]
  struct WIA_PATCH_CODE_INFO
    property type__ : UInt32
    def initialize(@type__ : UInt32)
    end
  end

  @[Extern]
  struct WIA_PATCH_CODES
    property tag : UInt32
    property version : UInt32
    property size : UInt32
    property count : UInt32
    property patch_codes : Win32cr::Devices::ImageAcquisition::WIA_PATCH_CODE_INFO*
    def initialize(@tag : UInt32, @version : UInt32, @size : UInt32, @count : UInt32, @patch_codes : Win32cr::Devices::ImageAcquisition::WIA_PATCH_CODE_INFO*)
    end
  end

  @[Extern]
  struct WIA_MICR_INFO
    property size : UInt32
    property page : UInt32
    property length : UInt32
    property text : UInt16*
    def initialize(@size : UInt32, @page : UInt32, @length : UInt32, @text : UInt16*)
    end
  end

  @[Extern]
  struct WIA_MICR
    property tag : UInt32
    property version : UInt32
    property size : UInt32
    property placeholder : UInt16
    property reserved : UInt16
    property count : UInt32
    property micr : Win32cr::Devices::ImageAcquisition::WIA_MICR_INFO*
    def initialize(@tag : UInt32, @version : UInt32, @size : UInt32, @placeholder : UInt16, @reserved : UInt16, @count : UInt32, @micr : Win32cr::Devices::ImageAcquisition::WIA_MICR_INFO*)
    end
  end

  @[Extern]
  struct WIA_DATA_CALLBACK_HEADER
    property lSize : Int32
    property guidFormatID : LibC::GUID
    property lBufferSize : Int32
    property lPageCount : Int32
    def initialize(@lSize : Int32, @guidFormatID : LibC::GUID, @lBufferSize : Int32, @lPageCount : Int32)
    end
  end

  @[Extern]
  struct WIA_DATA_TRANSFER_INFO
    property ulSize : UInt32
    property ulSection : UInt32
    property ulBufferSize : UInt32
    property bDoubleBuffer : Win32cr::Foundation::BOOL
    property ulReserved1 : UInt32
    property ulReserved2 : UInt32
    property ulReserved3 : UInt32
    def initialize(@ulSize : UInt32, @ulSection : UInt32, @ulBufferSize : UInt32, @bDoubleBuffer : Win32cr::Foundation::BOOL, @ulReserved1 : UInt32, @ulReserved2 : UInt32, @ulReserved3 : UInt32)
    end
  end

  @[Extern]
  struct WIA_EXTENDED_TRANSFER_INFO
    property ulSize : UInt32
    property ulMinBufferSize : UInt32
    property ulOptimalBufferSize : UInt32
    property ulMaxBufferSize : UInt32
    property ulNumBuffers : UInt32
    def initialize(@ulSize : UInt32, @ulMinBufferSize : UInt32, @ulOptimalBufferSize : UInt32, @ulMaxBufferSize : UInt32, @ulNumBuffers : UInt32)
    end
  end

  @[Extern]
  struct WIA_DEV_CAP
    property guid : LibC::GUID
    property ulFlags : UInt32
    property bstrName : Win32cr::Foundation::BSTR
    property bstrDescription : Win32cr::Foundation::BSTR
    property bstrIcon : Win32cr::Foundation::BSTR
    property bstrCommandline : Win32cr::Foundation::BSTR
    def initialize(@guid : LibC::GUID, @ulFlags : UInt32, @bstrName : Win32cr::Foundation::BSTR, @bstrDescription : Win32cr::Foundation::BSTR, @bstrIcon : Win32cr::Foundation::BSTR, @bstrCommandline : Win32cr::Foundation::BSTR)
    end
  end

  @[Extern]
  struct WiaTransferParams
    property lMessage : Int32
    property lPercentComplete : Int32
    property ulTransferredBytes : UInt64
    property hrErrorStatus : Win32cr::Foundation::HRESULT
    def initialize(@lMessage : Int32, @lPercentComplete : Int32, @ulTransferredBytes : UInt64, @hrErrorStatus : Win32cr::Foundation::HRESULT)
    end
  end

  @[Extern]
  struct MINIDRV_TRANSFER_CONTEXT
    property lSize : Int32
    property lWidthInPixels : Int32
    property lLines : Int32
    property lDepth : Int32
    property lXRes : Int32
    property lYRes : Int32
    property lCompression : Int32
    property guidFormatID : LibC::GUID
    property tymed : Int32
    property hFile : LibC::IntPtrT
    property cbOffset : Int32
    property lBufferSize : Int32
    property lActiveBuffer : Int32
    property lNumBuffers : Int32
    property pBaseBuffer : UInt8*
    property pTransferBuffer : UInt8*
    property bTransferDataCB : Win32cr::Foundation::BOOL
    property bClassDrvAllocBuf : Win32cr::Foundation::BOOL
    property lClientAddress : LibC::IntPtrT
    property pIWiaMiniDrvCallBack : Void*
    property lImageSize : Int32
    property lHeaderSize : Int32
    property lItemSize : Int32
    property cbWidthInBytes : Int32
    property lPage : Int32
    property lCurIfdOffset : Int32
    property lPrevIfdOffset : Int32
    def initialize(@lSize : Int32, @lWidthInPixels : Int32, @lLines : Int32, @lDepth : Int32, @lXRes : Int32, @lYRes : Int32, @lCompression : Int32, @guidFormatID : LibC::GUID, @tymed : Int32, @hFile : LibC::IntPtrT, @cbOffset : Int32, @lBufferSize : Int32, @lActiveBuffer : Int32, @lNumBuffers : Int32, @pBaseBuffer : UInt8*, @pTransferBuffer : UInt8*, @bTransferDataCB : Win32cr::Foundation::BOOL, @bClassDrvAllocBuf : Win32cr::Foundation::BOOL, @lClientAddress : LibC::IntPtrT, @pIWiaMiniDrvCallBack : Void*, @lImageSize : Int32, @lHeaderSize : Int32, @lItemSize : Int32, @cbWidthInBytes : Int32, @lPage : Int32, @lCurIfdOffset : Int32, @lPrevIfdOffset : Int32)
    end
  end

  @[Extern]
  struct WIA_DEV_CAP_DRV
    property guid : LibC::GUID*
    property ulFlags : UInt32
    property wszName : Win32cr::Foundation::PWSTR
    property wszDescription : Win32cr::Foundation::PWSTR
    property wszIcon : Win32cr::Foundation::PWSTR
    def initialize(@guid : LibC::GUID*, @ulFlags : UInt32, @wszName : Win32cr::Foundation::PWSTR, @wszDescription : Win32cr::Foundation::PWSTR, @wszIcon : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct WIA_PROPERTY_INFO
    property lAccessFlags : UInt32
    property vt : UInt16
    property valid_val : ValidVal_e__Union_

    # Nested Type ValidVal_e__Union_
    @[Extern(union: true)]
    struct ValidVal_e__Union_
    property range : Range_e__Struct_
    property range_float : RangeFloat_e__Struct_
    property list : List_e__Struct_
    property list_float : ListFloat_e__Struct_
    property list_guid : ListGuid_e__Struct_
    property list_b_str : ListBStr_e__Struct_
    property flag : Flag_e__Struct_
    property none : None_e__Struct_

      # Nested Type Flag_e__Struct_
      @[Extern]
      struct Flag_e__Struct_
    property nom : Int32
    property valid_bits : Int32
    def initialize(@nom : Int32, @valid_bits : Int32)
    end
      end


      # Nested Type ListGuid_e__Struct_
      @[Extern]
      struct ListGuid_e__Struct_
    property cNumList : Int32
    property nom : LibC::GUID
    property pList : LibC::GUID*
    def initialize(@cNumList : Int32, @nom : LibC::GUID, @pList : LibC::GUID*)
    end
      end


      # Nested Type List_e__Struct_
      @[Extern]
      struct List_e__Struct_
    property cNumList : Int32
    property nom : Int32
    property pList : UInt8*
    def initialize(@cNumList : Int32, @nom : Int32, @pList : UInt8*)
    end
      end


      # Nested Type Range_e__Struct_
      @[Extern]
      struct Range_e__Struct_
    property min : Int32
    property nom : Int32
    property max : Int32
    property inc : Int32
    def initialize(@min : Int32, @nom : Int32, @max : Int32, @inc : Int32)
    end
      end


      # Nested Type None_e__Struct_
      @[Extern]
      struct None_e__Struct_
    property dummy : Int32
    def initialize(@dummy : Int32)
    end
      end


      # Nested Type ListFloat_e__Struct_
      @[Extern]
      struct ListFloat_e__Struct_
    property cNumList : Int32
    property nom : Float64
    property pList : UInt8*
    def initialize(@cNumList : Int32, @nom : Float64, @pList : UInt8*)
    end
      end


      # Nested Type ListBStr_e__Struct_
      @[Extern]
      struct ListBStr_e__Struct_
    property cNumList : Int32
    property nom : Win32cr::Foundation::BSTR
    property pList : Win32cr::Foundation::BSTR*
    def initialize(@cNumList : Int32, @nom : Win32cr::Foundation::BSTR, @pList : Win32cr::Foundation::BSTR*)
    end
      end


      # Nested Type RangeFloat_e__Struct_
      @[Extern]
      struct RangeFloat_e__Struct_
    property min : Float64
    property nom : Float64
    property max : Float64
    property inc : Float64
    def initialize(@min : Float64, @nom : Float64, @max : Float64, @inc : Float64)
    end
      end

    def initialize(@range : Range_e__Struct_, @range_float : RangeFloat_e__Struct_, @list : List_e__Struct_, @list_float : ListFloat_e__Struct_, @list_guid : ListGuid_e__Struct_, @list_b_str : ListBStr_e__Struct_, @flag : Flag_e__Struct_, @none : None_e__Struct_)
    end
    end

    def initialize(@lAccessFlags : UInt32, @vt : UInt16, @valid_val : ValidVal_e__Union_)
    end
  end

  @[Extern]
  struct WIA_PROPERTY_CONTEXT
    property cProps : UInt32
    property pProps : UInt32*
    property pChanged : Win32cr::Foundation::BOOL*
    def initialize(@cProps : UInt32, @pProps : UInt32*, @pChanged : Win32cr::Foundation::BOOL*)
    end
  end

  @[Extern]
  struct WIAS_CHANGED_VALUE_INFO
    property bChanged : Win32cr::Foundation::BOOL
    property vt : Int32
    property old : Old_e__Union_
    property current : Current_e__Union_

    # Nested Type Old_e__Union_
    @[Extern(union: true)]
    struct Old_e__Union_
    property lVal : Int32
    property fltVal : Float32
    property bstrVal : Win32cr::Foundation::BSTR
    property guidVal : LibC::GUID
    def initialize(@lVal : Int32, @fltVal : Float32, @bstrVal : Win32cr::Foundation::BSTR, @guidVal : LibC::GUID)
    end
    end


    # Nested Type Current_e__Union_
    @[Extern(union: true)]
    struct Current_e__Union_
    property lVal : Int32
    property fltVal : Float32
    property bstrVal : Win32cr::Foundation::BSTR
    property guidVal : LibC::GUID
    def initialize(@lVal : Int32, @fltVal : Float32, @bstrVal : Win32cr::Foundation::BSTR, @guidVal : LibC::GUID)
    end
    end

    def initialize(@bChanged : Win32cr::Foundation::BOOL, @vt : Int32, @old : Old_e__Union_, @current : Current_e__Union_)
    end
  end

  @[Extern]
  struct WIAS_DOWN_SAMPLE_INFO
    property ulOriginalWidth : UInt32
    property ulOriginalHeight : UInt32
    property ulBitsPerPixel : UInt32
    property ulXRes : UInt32
    property ulYRes : UInt32
    property ulDownSampledWidth : UInt32
    property ulDownSampledHeight : UInt32
    property ulActualSize : UInt32
    property ulDestBufSize : UInt32
    property ulSrcBufSize : UInt32
    property pSrcBuffer : UInt8*
    property pDestBuffer : UInt8*
    def initialize(@ulOriginalWidth : UInt32, @ulOriginalHeight : UInt32, @ulBitsPerPixel : UInt32, @ulXRes : UInt32, @ulYRes : UInt32, @ulDownSampledWidth : UInt32, @ulDownSampledHeight : UInt32, @ulActualSize : UInt32, @ulDestBufSize : UInt32, @ulSrcBufSize : UInt32, @pSrcBuffer : UInt8*, @pDestBuffer : UInt8*)
    end
  end

  @[Extern]
  struct WIAS_ENDORSER_VALUE
    property wszTokenName : Win32cr::Foundation::PWSTR
    property wszValue : Win32cr::Foundation::PWSTR
    def initialize(@wszTokenName : Win32cr::Foundation::PWSTR, @wszValue : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct WIAS_ENDORSER_INFO
    property ulPageCount : UInt32
    property ulNumEndorserValues : UInt32
    property pEndorserValues : Win32cr::Devices::ImageAcquisition::WIAS_ENDORSER_VALUE*
    def initialize(@ulPageCount : UInt32, @ulNumEndorserValues : UInt32, @pEndorserValues : Win32cr::Devices::ImageAcquisition::WIAS_ENDORSER_VALUE*)
    end
  end

  @[Extern]
  struct DEVICEDIALOGDATA2
    property cbSize : UInt32
    property pIWiaItemRoot : Void*
    property dwFlags : UInt32
    property hwndParent : Win32cr::Foundation::HWND
    property bstrFolderName : Win32cr::Foundation::BSTR
    property bstrFilename : Win32cr::Foundation::BSTR
    property lNumFiles : Int32
    property pbstrFilePaths : Win32cr::Foundation::BSTR*
    property pWiaItem : Void*
    def initialize(@cbSize : UInt32, @pIWiaItemRoot : Void*, @dwFlags : UInt32, @hwndParent : Win32cr::Foundation::HWND, @bstrFolderName : Win32cr::Foundation::BSTR, @bstrFilename : Win32cr::Foundation::BSTR, @lNumFiles : Int32, @pbstrFilePaths : Win32cr::Foundation::BSTR*, @pWiaItem : Void*)
    end
  end

  @[Extern]
  struct DEVICEDIALOGDATA
    property cbSize : UInt32
    property hwndParent : Win32cr::Foundation::HWND
    property pIWiaItemRoot : Void*
    property dwFlags : UInt32
    property lIntent : Int32
    property lItemCount : Int32
    property ppWiaItems : Void**
    def initialize(@cbSize : UInt32, @hwndParent : Win32cr::Foundation::HWND, @pIWiaItemRoot : Void*, @dwFlags : UInt32, @lIntent : Int32, @lItemCount : Int32, @ppWiaItems : Void**)
    end
  end

  @[Extern]
  struct RANGEVALUE
    property lMin : Int32
    property lMax : Int32
    property lStep : Int32
    def initialize(@lMin : Int32, @lMax : Int32, @lStep : Int32)
    end
  end

  @[Extern]
  struct SCANWINDOW
    property xPos : Int32
    property yPos : Int32
    property xExtent : Int32
    property yExtent : Int32
    def initialize(@xPos : Int32, @yPos : Int32, @xExtent : Int32, @yExtent : Int32)
    end
  end

  @[Extern]
  struct SCANINFO
    property adf : Int32
    property tpa : Int32
    property endorser : Int32
    property optical_x_resolution : Int32
    property optical_y_resolution : Int32
    property bed_width : Int32
    property bed_height : Int32
    property intensity_range : Win32cr::Devices::ImageAcquisition::RANGEVALUE
    property contrast_range : Win32cr::Devices::ImageAcquisition::RANGEVALUE
    property supported_compression_type : Int32
    property supported_data_types : Int32
    property width_pixels : Int32
    property width_bytes : Int32
    property lines : Int32
    property data_type : Int32
    property pixel_bits : Int32
    property intensity : Int32
    property contrast : Int32
    property xresolution : Int32
    property yresolution : Int32
    property window : Win32cr::Devices::ImageAcquisition::SCANWINDOW
    property dither_pattern : Int32
    property negative : Int32
    property mirror : Int32
    property auto_back : Int32
    property color_dither_pattern : Int32
    property tone_map : Int32
    property compression : Int32
    property raw_data_format : Int32
    property raw_pixel_order : Int32
    property bNeedDataAlignment : Int32
    property delay_between_read : Int32
    property max_buffer_size : Int32
    property device_io_handles : Win32cr::Foundation::HANDLE[16]
    property lReserved : Int32[4]
    property pMicroDriverContext : Void*
    def initialize(@adf : Int32, @tpa : Int32, @endorser : Int32, @optical_x_resolution : Int32, @optical_y_resolution : Int32, @bed_width : Int32, @bed_height : Int32, @intensity_range : Win32cr::Devices::ImageAcquisition::RANGEVALUE, @contrast_range : Win32cr::Devices::ImageAcquisition::RANGEVALUE, @supported_compression_type : Int32, @supported_data_types : Int32, @width_pixels : Int32, @width_bytes : Int32, @lines : Int32, @data_type : Int32, @pixel_bits : Int32, @intensity : Int32, @contrast : Int32, @xresolution : Int32, @yresolution : Int32, @window : Win32cr::Devices::ImageAcquisition::SCANWINDOW, @dither_pattern : Int32, @negative : Int32, @mirror : Int32, @auto_back : Int32, @color_dither_pattern : Int32, @tone_map : Int32, @compression : Int32, @raw_data_format : Int32, @raw_pixel_order : Int32, @bNeedDataAlignment : Int32, @delay_between_read : Int32, @max_buffer_size : Int32, @device_io_handles : Win32cr::Foundation::HANDLE[16], @lReserved : Int32[4], @pMicroDriverContext : Void*)
    end
  end

  @[Extern]
  struct VAL
    property lVal : Int32
    property dblVal : Float64
    property pGuid : LibC::GUID*
    property pScanInfo : Win32cr::Devices::ImageAcquisition::SCANINFO*
    property handle : LibC::IntPtrT
    property ppButtonNames : UInt16**
    property pHandle : Win32cr::Foundation::HANDLE*
    property lReserved : Int32
    property szVal : Win32cr::Foundation::CHAR[255]
    def initialize(@lVal : Int32, @dblVal : Float64, @pGuid : LibC::GUID*, @pScanInfo : Win32cr::Devices::ImageAcquisition::SCANINFO*, @handle : LibC::IntPtrT, @ppButtonNames : UInt16**, @pHandle : Win32cr::Foundation::HANDLE*, @lReserved : Int32, @szVal : Win32cr::Foundation::CHAR[255])
    end
  end

  @[Extern]
  struct TWAIN_CAPABILITY
    property lSize : Int32
    property lMSG : Int32
    property lCapID : Int32
    property lConType : Int32
    property lRC : Int32
    property lCC : Int32
    property lDataSize : Int32
    property data : UInt8*
    def initialize(@lSize : Int32, @lMSG : Int32, @lCapID : Int32, @lConType : Int32, @lRC : Int32, @lCC : Int32, @lDataSize : Int32, @data : UInt8*)
    end
  end

  @[Extern]
  record IWiaDevMgrVtbl,
    query_interface : Proc(IWiaDevMgr*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaDevMgr*, UInt32),
    release : Proc(IWiaDevMgr*, UInt32),
    enum_device_info : Proc(IWiaDevMgr*, Int32, Void**, Win32cr::Foundation::HRESULT),
    create_device : Proc(IWiaDevMgr*, Win32cr::Foundation::BSTR, Void**, Win32cr::Foundation::HRESULT),
    select_device_dlg : Proc(IWiaDevMgr*, Win32cr::Foundation::HWND, Int32, Int32, Win32cr::Foundation::BSTR*, Void**, Win32cr::Foundation::HRESULT),
    select_device_dlg_id : Proc(IWiaDevMgr*, Win32cr::Foundation::HWND, Int32, Int32, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_image_dlg : Proc(IWiaDevMgr*, Win32cr::Foundation::HWND, Int32, Int32, Int32, Void*, Win32cr::Foundation::BSTR, LibC::GUID*, Win32cr::Foundation::HRESULT),
    register_event_callback_program : Proc(IWiaDevMgr*, Int32, Win32cr::Foundation::BSTR, LibC::GUID*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    register_event_callback_interface : Proc(IWiaDevMgr*, Int32, Win32cr::Foundation::BSTR, LibC::GUID*, Void*, Void**, Win32cr::Foundation::HRESULT),
    register_event_callback_clsid : Proc(IWiaDevMgr*, Int32, Win32cr::Foundation::BSTR, LibC::GUID*, LibC::GUID*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    add_device_dlg : Proc(IWiaDevMgr*, Win32cr::Foundation::HWND, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaDevMgr, lpVtbl : IWiaDevMgrVtbl* do
    GUID = LibC::GUID.new(0x5eb2502a_u32, 0x8cf1_u16, 0x11d1_u16, StaticArray[0xbf_u8, 0x92_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x1e_u8, 0xd8_u8, 0x11_u8])
    def query_interface(this : IWiaDevMgr*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaDevMgr*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaDevMgr*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def enum_device_info(this : IWiaDevMgr*, lFlag : Int32, ppIEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_device_info.call(this, lFlag, ppIEnum)
    end
    def create_device(this : IWiaDevMgr*, bstrDeviceID : Win32cr::Foundation::BSTR, ppWiaItemRoot : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device.call(this, bstrDeviceID, ppWiaItemRoot)
    end
    def select_device_dlg(this : IWiaDevMgr*, hwndParent : Win32cr::Foundation::HWND, lDeviceType : Int32, lFlags : Int32, pbstrDeviceID : Win32cr::Foundation::BSTR*, ppItemRoot : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_device_dlg.call(this, hwndParent, lDeviceType, lFlags, pbstrDeviceID, ppItemRoot)
    end
    def select_device_dlg_id(this : IWiaDevMgr*, hwndParent : Win32cr::Foundation::HWND, lDeviceType : Int32, lFlags : Int32, pbstrDeviceID : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_device_dlg_id.call(this, hwndParent, lDeviceType, lFlags, pbstrDeviceID)
    end
    def get_image_dlg(this : IWiaDevMgr*, hwndParent : Win32cr::Foundation::HWND, lDeviceType : Int32, lFlags : Int32, lIntent : Int32, pItemRoot : Void*, bstrFilename : Win32cr::Foundation::BSTR, pguidFormat : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_image_dlg.call(this, hwndParent, lDeviceType, lFlags, lIntent, pItemRoot, bstrFilename, pguidFormat)
    end
    def register_event_callback_program(this : IWiaDevMgr*, lFlags : Int32, bstrDeviceID : Win32cr::Foundation::BSTR, pEventGUID : LibC::GUID*, bstrCommandline : Win32cr::Foundation::BSTR, bstrName : Win32cr::Foundation::BSTR, bstrDescription : Win32cr::Foundation::BSTR, bstrIcon : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_event_callback_program.call(this, lFlags, bstrDeviceID, pEventGUID, bstrCommandline, bstrName, bstrDescription, bstrIcon)
    end
    def register_event_callback_interface(this : IWiaDevMgr*, lFlags : Int32, bstrDeviceID : Win32cr::Foundation::BSTR, pEventGUID : LibC::GUID*, pIWiaEventCallback : Void*, pEventObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_event_callback_interface.call(this, lFlags, bstrDeviceID, pEventGUID, pIWiaEventCallback, pEventObject)
    end
    def register_event_callback_clsid(this : IWiaDevMgr*, lFlags : Int32, bstrDeviceID : Win32cr::Foundation::BSTR, pEventGUID : LibC::GUID*, pClsID : LibC::GUID*, bstrName : Win32cr::Foundation::BSTR, bstrDescription : Win32cr::Foundation::BSTR, bstrIcon : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_event_callback_clsid.call(this, lFlags, bstrDeviceID, pEventGUID, pClsID, bstrName, bstrDescription, bstrIcon)
    end
    def add_device_dlg(this : IWiaDevMgr*, hwndParent : Win32cr::Foundation::HWND, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_device_dlg.call(this, hwndParent, lFlags)
    end

  end

  @[Extern]
  record IEnumWIA_DEV_INFOVtbl,
    query_interface : Proc(IEnumWIA_DEV_INFO*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumWIA_DEV_INFO*, UInt32),
    release : Proc(IEnumWIA_DEV_INFO*, UInt32),
    next__ : Proc(IEnumWIA_DEV_INFO*, UInt32, Void**, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumWIA_DEV_INFO*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumWIA_DEV_INFO*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumWIA_DEV_INFO*, Void**, Win32cr::Foundation::HRESULT),
    get_count : Proc(IEnumWIA_DEV_INFO*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumWIA_DEV_INFO, lpVtbl : IEnumWIA_DEV_INFOVtbl* do
    GUID = LibC::GUID.new(0x5e38b83c_u32, 0x8cf1_u16, 0x11d1_u16, StaticArray[0xbf_u8, 0x92_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x1e_u8, 0xd8_u8, 0x11_u8])
    def query_interface(this : IEnumWIA_DEV_INFO*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumWIA_DEV_INFO*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumWIA_DEV_INFO*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumWIA_DEV_INFO*, celt : UInt32, rgelt : Void**, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, rgelt, pceltFetched)
    end
    def skip(this : IEnumWIA_DEV_INFO*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumWIA_DEV_INFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumWIA_DEV_INFO*, ppIEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppIEnum)
    end
    def get_count(this : IEnumWIA_DEV_INFO*, celt : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_count.call(this, celt)
    end

  end

  @[Extern]
  record IWiaEventCallbackVtbl,
    query_interface : Proc(IWiaEventCallback*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaEventCallback*, UInt32),
    release : Proc(IWiaEventCallback*, UInt32),
    image_event_callback : Proc(IWiaEventCallback*, LibC::GUID*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, UInt32, Win32cr::Foundation::BSTR, UInt32*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaEventCallback, lpVtbl : IWiaEventCallbackVtbl* do
    GUID = LibC::GUID.new(0xae6287b0_u32, 0x84_u16, 0x11d2_u16, StaticArray[0x97_u8, 0x3b_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x6_u8, 0x8f_u8, 0x2e_u8])
    def query_interface(this : IWiaEventCallback*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaEventCallback*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaEventCallback*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def image_event_callback(this : IWiaEventCallback*, pEventGUID : LibC::GUID*, bstrEventDescription : Win32cr::Foundation::BSTR, bstrDeviceID : Win32cr::Foundation::BSTR, bstrDeviceDescription : Win32cr::Foundation::BSTR, dwDeviceType : UInt32, bstrFullItemName : Win32cr::Foundation::BSTR, pulEventType : UInt32*, ulReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.image_event_callback.call(this, pEventGUID, bstrEventDescription, bstrDeviceID, bstrDeviceDescription, dwDeviceType, bstrFullItemName, pulEventType, ulReserved)
    end

  end

  @[Extern]
  record IWiaDataCallbackVtbl,
    query_interface : Proc(IWiaDataCallback*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaDataCallback*, UInt32),
    release : Proc(IWiaDataCallback*, UInt32),
    banded_data_callback : Proc(IWiaDataCallback*, Int32, Int32, Int32, Int32, Int32, Int32, Int32, UInt8*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaDataCallback, lpVtbl : IWiaDataCallbackVtbl* do
    GUID = LibC::GUID.new(0xa558a866_u32, 0xa5b0_u16, 0x11d2_u16, StaticArray[0xa0_u8, 0x8f_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x72_u8, 0xdc_u8, 0x3c_u8])
    def query_interface(this : IWiaDataCallback*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaDataCallback*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaDataCallback*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def banded_data_callback(this : IWiaDataCallback*, lMessage : Int32, lStatus : Int32, lPercentComplete : Int32, lOffset : Int32, lLength : Int32, lReserved : Int32, lResLength : Int32, pbBuffer : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.banded_data_callback.call(this, lMessage, lStatus, lPercentComplete, lOffset, lLength, lReserved, lResLength, pbBuffer)
    end

  end

  @[Extern]
  record IWiaDataTransferVtbl,
    query_interface : Proc(IWiaDataTransfer*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaDataTransfer*, UInt32),
    release : Proc(IWiaDataTransfer*, UInt32),
    idtGetData : Proc(IWiaDataTransfer*, Win32cr::System::Com::STGMEDIUM*, Void*, Win32cr::Foundation::HRESULT),
    idtGetBandedData : Proc(IWiaDataTransfer*, Win32cr::Devices::ImageAcquisition::WIA_DATA_TRANSFER_INFO*, Void*, Win32cr::Foundation::HRESULT),
    idtQueryGetData : Proc(IWiaDataTransfer*, Win32cr::Devices::ImageAcquisition::WIA_FORMAT_INFO*, Win32cr::Foundation::HRESULT),
    idtEnumWIA_FORMAT_INFO : Proc(IWiaDataTransfer*, Void**, Win32cr::Foundation::HRESULT),
    idtGetExtendedTransferInfo : Proc(IWiaDataTransfer*, Win32cr::Devices::ImageAcquisition::WIA_EXTENDED_TRANSFER_INFO*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaDataTransfer, lpVtbl : IWiaDataTransferVtbl* do
    GUID = LibC::GUID.new(0xa6cef998_u32, 0xa5b0_u16, 0x11d2_u16, StaticArray[0xa0_u8, 0x8f_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x72_u8, 0xdc_u8, 0x3c_u8])
    def query_interface(this : IWiaDataTransfer*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaDataTransfer*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaDataTransfer*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def idtGetData(this : IWiaDataTransfer*, pMedium : Win32cr::System::Com::STGMEDIUM*, pIWiaDataCallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.idtGetData.call(this, pMedium, pIWiaDataCallback)
    end
    def idtGetBandedData(this : IWiaDataTransfer*, pWiaDataTransInfo : Win32cr::Devices::ImageAcquisition::WIA_DATA_TRANSFER_INFO*, pIWiaDataCallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.idtGetBandedData.call(this, pWiaDataTransInfo, pIWiaDataCallback)
    end
    def idtQueryGetData(this : IWiaDataTransfer*, pfe : Win32cr::Devices::ImageAcquisition::WIA_FORMAT_INFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.idtQueryGetData.call(this, pfe)
    end
    def idtEnumWIA_FORMAT_INFO(this : IWiaDataTransfer*, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.idtEnumWIA_FORMAT_INFO.call(this, ppEnum)
    end
    def idtGetExtendedTransferInfo(this : IWiaDataTransfer*, pExtendedTransferInfo : Win32cr::Devices::ImageAcquisition::WIA_EXTENDED_TRANSFER_INFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.idtGetExtendedTransferInfo.call(this, pExtendedTransferInfo)
    end

  end

  @[Extern]
  record IWiaItemVtbl,
    query_interface : Proc(IWiaItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaItem*, UInt32),
    release : Proc(IWiaItem*, UInt32),
    get_item_type : Proc(IWiaItem*, Int32*, Win32cr::Foundation::HRESULT),
    analyze_item : Proc(IWiaItem*, Int32, Win32cr::Foundation::HRESULT),
    enum_child_items : Proc(IWiaItem*, Void**, Win32cr::Foundation::HRESULT),
    delete_item : Proc(IWiaItem*, Int32, Win32cr::Foundation::HRESULT),
    create_child_item : Proc(IWiaItem*, Int32, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Void**, Win32cr::Foundation::HRESULT),
    enum_register_event_info : Proc(IWiaItem*, Int32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    find_item_by_name : Proc(IWiaItem*, Int32, Win32cr::Foundation::BSTR, Void**, Win32cr::Foundation::HRESULT),
    device_dlg : Proc(IWiaItem*, Win32cr::Foundation::HWND, Int32, Int32, Int32*, Void***, Win32cr::Foundation::HRESULT),
    device_command : Proc(IWiaItem*, Int32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_root_item : Proc(IWiaItem*, Void**, Win32cr::Foundation::HRESULT),
    enum_device_capabilities : Proc(IWiaItem*, Int32, Void**, Win32cr::Foundation::HRESULT),
    dump_item_data : Proc(IWiaItem*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    dump_drv_item_data : Proc(IWiaItem*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    dump_tree_item_data : Proc(IWiaItem*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    diagnostic : Proc(IWiaItem*, UInt32, UInt8*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaItem, lpVtbl : IWiaItemVtbl* do
    GUID = LibC::GUID.new(0x4db1ad10_u32, 0x3391_u16, 0x11d2_u16, StaticArray[0x9a_u8, 0x33_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xa3_u8, 0x61_u8, 0x45_u8])
    def query_interface(this : IWiaItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_item_type(this : IWiaItem*, pItemType : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_type.call(this, pItemType)
    end
    def analyze_item(this : IWiaItem*, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.analyze_item.call(this, lFlags)
    end
    def enum_child_items(this : IWiaItem*, ppIEnumWiaItem : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_child_items.call(this, ppIEnumWiaItem)
    end
    def delete_item(this : IWiaItem*, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_item.call(this, lFlags)
    end
    def create_child_item(this : IWiaItem*, lFlags : Int32, bstrItemName : Win32cr::Foundation::BSTR, bstrFullItemName : Win32cr::Foundation::BSTR, ppIWiaItem : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_child_item.call(this, lFlags, bstrItemName, bstrFullItemName, ppIWiaItem)
    end
    def enum_register_event_info(this : IWiaItem*, lFlags : Int32, pEventGUID : LibC::GUID*, ppIEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_register_event_info.call(this, lFlags, pEventGUID, ppIEnum)
    end
    def find_item_by_name(this : IWiaItem*, lFlags : Int32, bstrFullItemName : Win32cr::Foundation::BSTR, ppIWiaItem : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_item_by_name.call(this, lFlags, bstrFullItemName, ppIWiaItem)
    end
    def device_dlg(this : IWiaItem*, hwndParent : Win32cr::Foundation::HWND, lFlags : Int32, lIntent : Int32, plItemCount : Int32*, ppIWiaItem : Void***) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.device_dlg.call(this, hwndParent, lFlags, lIntent, plItemCount, ppIWiaItem)
    end
    def device_command(this : IWiaItem*, lFlags : Int32, pCmdGUID : LibC::GUID*, pIWiaItem : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.device_command.call(this, lFlags, pCmdGUID, pIWiaItem)
    end
    def get_root_item(this : IWiaItem*, ppIWiaItem : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_root_item.call(this, ppIWiaItem)
    end
    def enum_device_capabilities(this : IWiaItem*, lFlags : Int32, ppIEnumWIA_DEV_CAPS : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_device_capabilities.call(this, lFlags, ppIEnumWIA_DEV_CAPS)
    end
    def dump_item_data(this : IWiaItem*, bstrData : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.dump_item_data.call(this, bstrData)
    end
    def dump_drv_item_data(this : IWiaItem*, bstrData : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.dump_drv_item_data.call(this, bstrData)
    end
    def dump_tree_item_data(this : IWiaItem*, bstrData : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.dump_tree_item_data.call(this, bstrData)
    end
    def diagnostic(this : IWiaItem*, ulSize : UInt32, pBuffer : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.diagnostic.call(this, ulSize, pBuffer)
    end

  end

  @[Extern]
  record IWiaPropertyStorageVtbl,
    query_interface : Proc(IWiaPropertyStorage*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaPropertyStorage*, UInt32),
    release : Proc(IWiaPropertyStorage*, UInt32),
    read_multiple : Proc(IWiaPropertyStorage*, UInt32, Win32cr::System::Com::StructuredStorage::PROPSPEC*, Win32cr::System::Com::StructuredStorage::PROPVARIANT*, Win32cr::Foundation::HRESULT),
    write_multiple : Proc(IWiaPropertyStorage*, UInt32, Win32cr::System::Com::StructuredStorage::PROPSPEC*, Win32cr::System::Com::StructuredStorage::PROPVARIANT*, UInt32, Win32cr::Foundation::HRESULT),
    delete_multiple : Proc(IWiaPropertyStorage*, UInt32, Win32cr::System::Com::StructuredStorage::PROPSPEC*, Win32cr::Foundation::HRESULT),
    read_property_names : Proc(IWiaPropertyStorage*, UInt32, UInt32*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    write_property_names : Proc(IWiaPropertyStorage*, UInt32, UInt32*, Win32cr::Foundation::PWSTR*, Win32cr::Foundation::HRESULT),
    delete_property_names : Proc(IWiaPropertyStorage*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    commit : Proc(IWiaPropertyStorage*, UInt32, Win32cr::Foundation::HRESULT),
    revert : Proc(IWiaPropertyStorage*, Win32cr::Foundation::HRESULT),
    enum__ : Proc(IWiaPropertyStorage*, Void**, Win32cr::Foundation::HRESULT),
    set_times : Proc(IWiaPropertyStorage*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::FILETIME*, Win32cr::Foundation::HRESULT),
    set_class : Proc(IWiaPropertyStorage*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    stat : Proc(IWiaPropertyStorage*, Win32cr::System::Com::StructuredStorage::STATPROPSETSTG*, Win32cr::Foundation::HRESULT),
    get_property_attributes : Proc(IWiaPropertyStorage*, UInt32, Win32cr::System::Com::StructuredStorage::PROPSPEC*, UInt32*, Win32cr::System::Com::StructuredStorage::PROPVARIANT*, Win32cr::Foundation::HRESULT),
    get_count : Proc(IWiaPropertyStorage*, UInt32*, Win32cr::Foundation::HRESULT),
    get_property_stream : Proc(IWiaPropertyStorage*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    set_property_stream : Proc(IWiaPropertyStorage*, LibC::GUID*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaPropertyStorage, lpVtbl : IWiaPropertyStorageVtbl* do
    GUID = LibC::GUID.new(0x98b5e8a0_u32, 0x29cc_u16, 0x491a_u16, StaticArray[0xaa_u8, 0xc0_u8, 0xe6_u8, 0xdb_u8, 0x4f_u8, 0xdc_u8, 0xce_u8, 0xb6_u8])
    def query_interface(this : IWiaPropertyStorage*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaPropertyStorage*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaPropertyStorage*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def read_multiple(this : IWiaPropertyStorage*, cpspec : UInt32, rgpspec : Win32cr::System::Com::StructuredStorage::PROPSPEC*, rgpropvar : Win32cr::System::Com::StructuredStorage::PROPVARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read_multiple.call(this, cpspec, rgpspec, rgpropvar)
    end
    def write_multiple(this : IWiaPropertyStorage*, cpspec : UInt32, rgpspec : Win32cr::System::Com::StructuredStorage::PROPSPEC*, rgpropvar : Win32cr::System::Com::StructuredStorage::PROPVARIANT*, propidNameFirst : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_multiple.call(this, cpspec, rgpspec, rgpropvar, propidNameFirst)
    end
    def delete_multiple(this : IWiaPropertyStorage*, cpspec : UInt32, rgpspec : Win32cr::System::Com::StructuredStorage::PROPSPEC*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_multiple.call(this, cpspec, rgpspec)
    end
    def read_property_names(this : IWiaPropertyStorage*, cpropid : UInt32, rgpropid : UInt32*, rglpwstrName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.read_property_names.call(this, cpropid, rgpropid, rglpwstrName)
    end
    def write_property_names(this : IWiaPropertyStorage*, cpropid : UInt32, rgpropid : UInt32*, rglpwstrName : Win32cr::Foundation::PWSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_property_names.call(this, cpropid, rgpropid, rglpwstrName)
    end
    def delete_property_names(this : IWiaPropertyStorage*, cpropid : UInt32, rgpropid : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_property_names.call(this, cpropid, rgpropid)
    end
    def commit(this : IWiaPropertyStorage*, grfCommitFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.commit.call(this, grfCommitFlags)
    end
    def revert(this : IWiaPropertyStorage*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.revert.call(this)
    end
    def enum__(this : IWiaPropertyStorage*, ppenum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum__.call(this, ppenum)
    end
    def set_times(this : IWiaPropertyStorage*, pctime : Win32cr::Foundation::FILETIME*, patime : Win32cr::Foundation::FILETIME*, pmtime : Win32cr::Foundation::FILETIME*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_times.call(this, pctime, patime, pmtime)
    end
    def set_class(this : IWiaPropertyStorage*, clsid : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_class.call(this, clsid)
    end
    def stat(this : IWiaPropertyStorage*, pstatpsstg : Win32cr::System::Com::StructuredStorage::STATPROPSETSTG*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stat.call(this, pstatpsstg)
    end
    def get_property_attributes(this : IWiaPropertyStorage*, cpspec : UInt32, rgpspec : Win32cr::System::Com::StructuredStorage::PROPSPEC*, rgflags : UInt32*, rgpropvar : Win32cr::System::Com::StructuredStorage::PROPVARIANT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_attributes.call(this, cpspec, rgpspec, rgflags, rgpropvar)
    end
    def get_count(this : IWiaPropertyStorage*, pulNumProps : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_count.call(this, pulNumProps)
    end
    def get_property_stream(this : IWiaPropertyStorage*, pCompatibilityId : LibC::GUID*, ppIStream : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property_stream.call(this, pCompatibilityId, ppIStream)
    end
    def set_property_stream(this : IWiaPropertyStorage*, pCompatibilityId : LibC::GUID*, pIStream : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_property_stream.call(this, pCompatibilityId, pIStream)
    end

  end

  @[Extern]
  record IEnumWiaItemVtbl,
    query_interface : Proc(IEnumWiaItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumWiaItem*, UInt32),
    release : Proc(IEnumWiaItem*, UInt32),
    next__ : Proc(IEnumWiaItem*, UInt32, Void**, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumWiaItem*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumWiaItem*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumWiaItem*, Void**, Win32cr::Foundation::HRESULT),
    get_count : Proc(IEnumWiaItem*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumWiaItem, lpVtbl : IEnumWiaItemVtbl* do
    GUID = LibC::GUID.new(0x5e8383fc_u32, 0x3391_u16, 0x11d2_u16, StaticArray[0x9a_u8, 0x33_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xa3_u8, 0x61_u8, 0x45_u8])
    def query_interface(this : IEnumWiaItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumWiaItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumWiaItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumWiaItem*, celt : UInt32, ppIWiaItem : Void**, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, ppIWiaItem, pceltFetched)
    end
    def skip(this : IEnumWiaItem*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumWiaItem*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumWiaItem*, ppIEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppIEnum)
    end
    def get_count(this : IEnumWiaItem*, celt : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_count.call(this, celt)
    end

  end

  @[Extern]
  record IEnumWIA_DEV_CAPSVtbl,
    query_interface : Proc(IEnumWIA_DEV_CAPS*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumWIA_DEV_CAPS*, UInt32),
    release : Proc(IEnumWIA_DEV_CAPS*, UInt32),
    next__ : Proc(IEnumWIA_DEV_CAPS*, UInt32, Win32cr::Devices::ImageAcquisition::WIA_DEV_CAP*, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumWIA_DEV_CAPS*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumWIA_DEV_CAPS*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumWIA_DEV_CAPS*, Void**, Win32cr::Foundation::HRESULT),
    get_count : Proc(IEnumWIA_DEV_CAPS*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumWIA_DEV_CAPS, lpVtbl : IEnumWIA_DEV_CAPSVtbl* do
    GUID = LibC::GUID.new(0x1fcc4287_u32, 0xaca6_u16, 0x11d2_u16, StaticArray[0xa0_u8, 0x93_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x72_u8, 0xdc_u8, 0x3c_u8])
    def query_interface(this : IEnumWIA_DEV_CAPS*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumWIA_DEV_CAPS*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumWIA_DEV_CAPS*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumWIA_DEV_CAPS*, celt : UInt32, rgelt : Win32cr::Devices::ImageAcquisition::WIA_DEV_CAP*, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, rgelt, pceltFetched)
    end
    def skip(this : IEnumWIA_DEV_CAPS*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumWIA_DEV_CAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumWIA_DEV_CAPS*, ppIEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppIEnum)
    end
    def get_count(this : IEnumWIA_DEV_CAPS*, pcelt : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_count.call(this, pcelt)
    end

  end

  @[Extern]
  record IEnumWIA_FORMAT_INFOVtbl,
    query_interface : Proc(IEnumWIA_FORMAT_INFO*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumWIA_FORMAT_INFO*, UInt32),
    release : Proc(IEnumWIA_FORMAT_INFO*, UInt32),
    next__ : Proc(IEnumWIA_FORMAT_INFO*, UInt32, Win32cr::Devices::ImageAcquisition::WIA_FORMAT_INFO*, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumWIA_FORMAT_INFO*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumWIA_FORMAT_INFO*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumWIA_FORMAT_INFO*, Void**, Win32cr::Foundation::HRESULT),
    get_count : Proc(IEnumWIA_FORMAT_INFO*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumWIA_FORMAT_INFO, lpVtbl : IEnumWIA_FORMAT_INFOVtbl* do
    GUID = LibC::GUID.new(0x81befc5b_u32, 0x656d_u16, 0x44f1_u16, StaticArray[0xb2_u8, 0x4c_u8, 0xd4_u8, 0x1d_u8, 0x51_u8, 0xb4_u8, 0xdc_u8, 0x81_u8])
    def query_interface(this : IEnumWIA_FORMAT_INFO*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumWIA_FORMAT_INFO*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumWIA_FORMAT_INFO*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumWIA_FORMAT_INFO*, celt : UInt32, rgelt : Win32cr::Devices::ImageAcquisition::WIA_FORMAT_INFO*, pceltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, celt, rgelt, pceltFetched)
    end
    def skip(this : IEnumWIA_FORMAT_INFO*, celt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, celt)
    end
    def reset(this : IEnumWIA_FORMAT_INFO*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumWIA_FORMAT_INFO*, ppIEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppIEnum)
    end
    def get_count(this : IEnumWIA_FORMAT_INFO*, pcelt : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_count.call(this, pcelt)
    end

  end

  @[Extern]
  record IWiaLogVtbl,
    query_interface : Proc(IWiaLog*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaLog*, UInt32),
    release : Proc(IWiaLog*, UInt32),
    initialize_log : Proc(IWiaLog*, Int32, Win32cr::Foundation::HRESULT),
    hResult : Proc(IWiaLog*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::HRESULT),
    log : Proc(IWiaLog*, Int32, Int32, Int32, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaLog, lpVtbl : IWiaLogVtbl* do
    GUID = LibC::GUID.new(0xa00c10b6_u32, 0x82a1_u16, 0x452f_u16, StaticArray[0x8b_u8, 0x6c_u8, 0x86_u8, 0x6_u8, 0x2a_u8, 0xad_u8, 0x68_u8, 0x90_u8])
    def query_interface(this : IWiaLog*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaLog*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaLog*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize_log(this : IWiaLog*, hInstance : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_log.call(this, hInstance)
    end
    def hResult(this : IWiaLog*, hResult : Win32cr::Foundation::HRESULT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hResult.call(this, hResult)
    end
    def log(this : IWiaLog*, lFlags : Int32, lResID : Int32, lDetail : Int32, bstrText : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.log.call(this, lFlags, lResID, lDetail, bstrText)
    end

  end

  @[Extern]
  record IWiaLogExVtbl,
    query_interface : Proc(IWiaLogEx*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaLogEx*, UInt32),
    release : Proc(IWiaLogEx*, UInt32),
    initialize_log_ex : Proc(IWiaLogEx*, UInt8*, Win32cr::Foundation::HRESULT),
    hResult : Proc(IWiaLogEx*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::HRESULT),
    log : Proc(IWiaLogEx*, Int32, Int32, Int32, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    hResultEx : Proc(IWiaLogEx*, Int32, Win32cr::Foundation::HRESULT, Win32cr::Foundation::HRESULT),
    log_ex : Proc(IWiaLogEx*, Int32, Int32, Int32, Int32, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaLogEx, lpVtbl : IWiaLogExVtbl* do
    GUID = LibC::GUID.new(0xaf1f22ac_u32, 0x7a40_u16, 0x4787_u16, StaticArray[0xb4_u8, 0x21_u8, 0xae_u8, 0xb4_u8, 0x7a_u8, 0x1f_u8, 0xbd_u8, 0xb_u8])
    def query_interface(this : IWiaLogEx*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaLogEx*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaLogEx*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize_log_ex(this : IWiaLogEx*, hInstance : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_log_ex.call(this, hInstance)
    end
    def hResult(this : IWiaLogEx*, hResult : Win32cr::Foundation::HRESULT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hResult.call(this, hResult)
    end
    def log(this : IWiaLogEx*, lFlags : Int32, lResID : Int32, lDetail : Int32, bstrText : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.log.call(this, lFlags, lResID, lDetail, bstrText)
    end
    def hResultEx(this : IWiaLogEx*, lMethodId : Int32, hResult : Win32cr::Foundation::HRESULT) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.hResultEx.call(this, lMethodId, hResult)
    end
    def log_ex(this : IWiaLogEx*, lMethodId : Int32, lFlags : Int32, lResID : Int32, lDetail : Int32, bstrText : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.log_ex.call(this, lMethodId, lFlags, lResID, lDetail, bstrText)
    end

  end

  @[Extern]
  record IWiaNotifyDevMgrVtbl,
    query_interface : Proc(IWiaNotifyDevMgr*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaNotifyDevMgr*, UInt32),
    release : Proc(IWiaNotifyDevMgr*, UInt32),
    new_device_arrival : Proc(IWiaNotifyDevMgr*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaNotifyDevMgr, lpVtbl : IWiaNotifyDevMgrVtbl* do
    GUID = LibC::GUID.new(0x70681ea0_u32, 0xe7bf_u16, 0x4291_u16, StaticArray[0x9f_u8, 0xb1_u8, 0x4e_u8, 0x88_u8, 0x13_u8, 0xa3_u8, 0xf7_u8, 0x8e_u8])
    def query_interface(this : IWiaNotifyDevMgr*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaNotifyDevMgr*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaNotifyDevMgr*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def new_device_arrival(this : IWiaNotifyDevMgr*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.new_device_arrival.call(this)
    end

  end

  @[Extern]
  record IWiaItemExtrasVtbl,
    query_interface : Proc(IWiaItemExtras*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaItemExtras*, UInt32),
    release : Proc(IWiaItemExtras*, UInt32),
    get_extended_error_info : Proc(IWiaItemExtras*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    escape : Proc(IWiaItemExtras*, UInt32, UInt8*, UInt32, UInt8*, UInt32, UInt32*, Win32cr::Foundation::HRESULT),
    cancel_pending_io : Proc(IWiaItemExtras*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaItemExtras, lpVtbl : IWiaItemExtrasVtbl* do
    GUID = LibC::GUID.new(0x6291ef2c_u32, 0x36ef_u16, 0x4532_u16, StaticArray[0x87_u8, 0x6a_u8, 0x8e_u8, 0x13_u8, 0x25_u8, 0x93_u8, 0x77_u8, 0x8d_u8])
    def query_interface(this : IWiaItemExtras*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaItemExtras*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaItemExtras*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_extended_error_info(this : IWiaItemExtras*, bstrErrorText : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_extended_error_info.call(this, bstrErrorText)
    end
    def escape(this : IWiaItemExtras*, dwEscapeCode : UInt32, lpInData : UInt8*, cbInDataSize : UInt32, pOutData : UInt8*, dwOutDataSize : UInt32, pdwActualDataSize : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.escape.call(this, dwEscapeCode, lpInData, cbInDataSize, pOutData, dwOutDataSize, pdwActualDataSize)
    end
    def cancel_pending_io(this : IWiaItemExtras*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cancel_pending_io.call(this)
    end

  end

  @[Extern]
  record IWiaAppErrorHandlerVtbl,
    query_interface : Proc(IWiaAppErrorHandler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaAppErrorHandler*, UInt32),
    release : Proc(IWiaAppErrorHandler*, UInt32),
    get_window : Proc(IWiaAppErrorHandler*, Win32cr::Foundation::HWND*, Win32cr::Foundation::HRESULT),
    report_status : Proc(IWiaAppErrorHandler*, Int32, Void*, Win32cr::Foundation::HRESULT, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaAppErrorHandler, lpVtbl : IWiaAppErrorHandlerVtbl* do
    GUID = LibC::GUID.new(0x6c16186c_u32, 0xd0a6_u16, 0x400c_u16, StaticArray[0x80_u8, 0xf4_u8, 0xd2_u8, 0x69_u8, 0x86_u8, 0xa0_u8, 0xe7_u8, 0x34_u8])
    def query_interface(this : IWiaAppErrorHandler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaAppErrorHandler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaAppErrorHandler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_window(this : IWiaAppErrorHandler*, phwnd : Win32cr::Foundation::HWND*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_window.call(this, phwnd)
    end
    def report_status(this : IWiaAppErrorHandler*, lFlags : Int32, pWiaItem2 : Void*, hrStatus : Win32cr::Foundation::HRESULT, lPercentComplete : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.report_status.call(this, lFlags, pWiaItem2, hrStatus, lPercentComplete)
    end

  end

  @[Extern]
  record IWiaErrorHandlerVtbl,
    query_interface : Proc(IWiaErrorHandler*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaErrorHandler*, UInt32),
    release : Proc(IWiaErrorHandler*, UInt32),
    report_status : Proc(IWiaErrorHandler*, Int32, Win32cr::Foundation::HWND, Void*, Win32cr::Foundation::HRESULT, Int32, Win32cr::Foundation::HRESULT),
    get_status_description : Proc(IWiaErrorHandler*, Int32, Void*, Win32cr::Foundation::HRESULT, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaErrorHandler, lpVtbl : IWiaErrorHandlerVtbl* do
    GUID = LibC::GUID.new(0xe4a51b1_u32, 0xbc1f_u16, 0x443d_u16, StaticArray[0xa8_u8, 0x35_u8, 0x72_u8, 0xe8_u8, 0x90_u8, 0x75_u8, 0x9e_u8, 0xf3_u8])
    def query_interface(this : IWiaErrorHandler*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaErrorHandler*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaErrorHandler*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def report_status(this : IWiaErrorHandler*, lFlags : Int32, hwndParent : Win32cr::Foundation::HWND, pWiaItem2 : Void*, hrStatus : Win32cr::Foundation::HRESULT, lPercentComplete : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.report_status.call(this, lFlags, hwndParent, pWiaItem2, hrStatus, lPercentComplete)
    end
    def get_status_description(this : IWiaErrorHandler*, lFlags : Int32, pWiaItem2 : Void*, hrStatus : Win32cr::Foundation::HRESULT, pbstrDescription : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_status_description.call(this, lFlags, pWiaItem2, hrStatus, pbstrDescription)
    end

  end

  @[Extern]
  record IWiaTransferVtbl,
    query_interface : Proc(IWiaTransfer*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaTransfer*, UInt32),
    release : Proc(IWiaTransfer*, UInt32),
    download : Proc(IWiaTransfer*, Int32, Void*, Win32cr::Foundation::HRESULT),
    upload : Proc(IWiaTransfer*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    cancel : Proc(IWiaTransfer*, Win32cr::Foundation::HRESULT),
    enum_wia_format_info : Proc(IWiaTransfer*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaTransfer, lpVtbl : IWiaTransferVtbl* do
    GUID = LibC::GUID.new(0xc39d6942_u32, 0x2f4e_u16, 0x4d04_u16, StaticArray[0x92_u8, 0xfe_u8, 0x4e_u8, 0xf4_u8, 0xd3_u8, 0xa1_u8, 0xde_u8, 0x5a_u8])
    def query_interface(this : IWiaTransfer*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaTransfer*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaTransfer*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def download(this : IWiaTransfer*, lFlags : Int32, pIWiaTransferCallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.download.call(this, lFlags, pIWiaTransferCallback)
    end
    def upload(this : IWiaTransfer*, lFlags : Int32, pSource : Void*, pIWiaTransferCallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.upload.call(this, lFlags, pSource, pIWiaTransferCallback)
    end
    def cancel(this : IWiaTransfer*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.cancel.call(this)
    end
    def enum_wia_format_info(this : IWiaTransfer*, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_wia_format_info.call(this, ppEnum)
    end

  end

  @[Extern]
  record IWiaTransferCallbackVtbl,
    query_interface : Proc(IWiaTransferCallback*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaTransferCallback*, UInt32),
    release : Proc(IWiaTransferCallback*, UInt32),
    transfer_callback : Proc(IWiaTransferCallback*, Int32, Win32cr::Devices::ImageAcquisition::WiaTransferParams*, Win32cr::Foundation::HRESULT),
    get_next_stream : Proc(IWiaTransferCallback*, Int32, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaTransferCallback, lpVtbl : IWiaTransferCallbackVtbl* do
    GUID = LibC::GUID.new(0x27d4eaaf_u32, 0x28a6_u16, 0x4ca5_u16, StaticArray[0x9a_u8, 0xab_u8, 0xe6_u8, 0x78_u8, 0x16_u8, 0x8b_u8, 0x95_u8, 0x27_u8])
    def query_interface(this : IWiaTransferCallback*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaTransferCallback*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaTransferCallback*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def transfer_callback(this : IWiaTransferCallback*, lFlags : Int32, pWiaTransferParams : Win32cr::Devices::ImageAcquisition::WiaTransferParams*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.transfer_callback.call(this, lFlags, pWiaTransferParams)
    end
    def get_next_stream(this : IWiaTransferCallback*, lFlags : Int32, bstrItemName : Win32cr::Foundation::BSTR, bstrFullItemName : Win32cr::Foundation::BSTR, ppDestination : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_next_stream.call(this, lFlags, bstrItemName, bstrFullItemName, ppDestination)
    end

  end

  @[Extern]
  record IWiaSegmentationFilterVtbl,
    query_interface : Proc(IWiaSegmentationFilter*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaSegmentationFilter*, UInt32),
    release : Proc(IWiaSegmentationFilter*, UInt32),
    detect_regions : Proc(IWiaSegmentationFilter*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaSegmentationFilter, lpVtbl : IWiaSegmentationFilterVtbl* do
    GUID = LibC::GUID.new(0xec46a697_u32, 0xac04_u16, 0x4447_u16, StaticArray[0x8f_u8, 0x65_u8, 0xff_u8, 0x63_u8, 0xd5_u8, 0x15_u8, 0x4b_u8, 0x21_u8])
    def query_interface(this : IWiaSegmentationFilter*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaSegmentationFilter*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaSegmentationFilter*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def detect_regions(this : IWiaSegmentationFilter*, lFlags : Int32, pInputStream : Void*, pWiaItem2 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.detect_regions.call(this, lFlags, pInputStream, pWiaItem2)
    end

  end

  @[Extern]
  record IWiaImageFilterVtbl,
    query_interface : Proc(IWiaImageFilter*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaImageFilter*, UInt32),
    release : Proc(IWiaImageFilter*, UInt32),
    initialize_filter : Proc(IWiaImageFilter*, Void*, Void*, Win32cr::Foundation::HRESULT),
    set_new_callback : Proc(IWiaImageFilter*, Void*, Win32cr::Foundation::HRESULT),
    filter_preview_image : Proc(IWiaImageFilter*, Int32, Void*, Win32cr::Foundation::RECT, Void*, Win32cr::Foundation::HRESULT),
    apply_properties : Proc(IWiaImageFilter*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaImageFilter, lpVtbl : IWiaImageFilterVtbl* do
    GUID = LibC::GUID.new(0xa8a79ffa_u32, 0x450b_u16, 0x41f1_u16, StaticArray[0x8f_u8, 0x87_u8, 0x84_u8, 0x9c_u8, 0xcd_u8, 0x94_u8, 0xeb_u8, 0xf6_u8])
    def query_interface(this : IWiaImageFilter*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaImageFilter*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaImageFilter*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize_filter(this : IWiaImageFilter*, pWiaItem2 : Void*, pWiaTransferCallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize_filter.call(this, pWiaItem2, pWiaTransferCallback)
    end
    def set_new_callback(this : IWiaImageFilter*, pWiaTransferCallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_new_callback.call(this, pWiaTransferCallback)
    end
    def filter_preview_image(this : IWiaImageFilter*, lFlags : Int32, pWiaChildItem2 : Void*, input_image_extents : Win32cr::Foundation::RECT, pInputStream : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.filter_preview_image.call(this, lFlags, pWiaChildItem2, input_image_extents, pInputStream)
    end
    def apply_properties(this : IWiaImageFilter*, pWiaPropertyStorage : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.apply_properties.call(this, pWiaPropertyStorage)
    end

  end

  @[Extern]
  record IWiaPreviewVtbl,
    query_interface : Proc(IWiaPreview*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaPreview*, UInt32),
    release : Proc(IWiaPreview*, UInt32),
    get_new_preview : Proc(IWiaPreview*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    update_preview : Proc(IWiaPreview*, Int32, Void*, Void*, Win32cr::Foundation::HRESULT),
    detect_regions : Proc(IWiaPreview*, Int32, Win32cr::Foundation::HRESULT),
    clear : Proc(IWiaPreview*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaPreview, lpVtbl : IWiaPreviewVtbl* do
    GUID = LibC::GUID.new(0x95c2b4fd_u32, 0x33f2_u16, 0x4d86_u16, StaticArray[0xad_u8, 0x40_u8, 0x94_u8, 0x31_u8, 0xf0_u8, 0xdf_u8, 0x8_u8, 0xf7_u8])
    def query_interface(this : IWiaPreview*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaPreview*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaPreview*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_new_preview(this : IWiaPreview*, lFlags : Int32, pWiaItem2 : Void*, pWiaTransferCallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_new_preview.call(this, lFlags, pWiaItem2, pWiaTransferCallback)
    end
    def update_preview(this : IWiaPreview*, lFlags : Int32, pChildWiaItem2 : Void*, pWiaTransferCallback : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.update_preview.call(this, lFlags, pChildWiaItem2, pWiaTransferCallback)
    end
    def detect_regions(this : IWiaPreview*, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.detect_regions.call(this, lFlags)
    end
    def clear(this : IWiaPreview*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clear.call(this)
    end

  end

  @[Extern]
  record IEnumWiaItem2Vtbl,
    query_interface : Proc(IEnumWiaItem2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumWiaItem2*, UInt32),
    release : Proc(IEnumWiaItem2*, UInt32),
    next__ : Proc(IEnumWiaItem2*, UInt32, Void**, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumWiaItem2*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumWiaItem2*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumWiaItem2*, Void**, Win32cr::Foundation::HRESULT),
    get_count : Proc(IEnumWiaItem2*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IEnumWiaItem2, lpVtbl : IEnumWiaItem2Vtbl* do
    GUID = LibC::GUID.new(0x59970af4_u32, 0xcd0d_u16, 0x44d9_u16, StaticArray[0xab_u8, 0x24_u8, 0x52_u8, 0x29_u8, 0x56_u8, 0x30_u8, 0xe5_u8, 0x82_u8])
    def query_interface(this : IEnumWiaItem2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumWiaItem2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumWiaItem2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumWiaItem2*, cElt : UInt32, ppIWiaItem2 : Void**, pcEltFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, cElt, ppIWiaItem2, pcEltFetched)
    end
    def skip(this : IEnumWiaItem2*, cElt : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, cElt)
    end
    def reset(this : IEnumWiaItem2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumWiaItem2*, ppIEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppIEnum)
    end
    def get_count(this : IEnumWiaItem2*, cElt : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_count.call(this, cElt)
    end

  end

  @[Extern]
  record IWiaItem2Vtbl,
    query_interface : Proc(IWiaItem2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaItem2*, UInt32),
    release : Proc(IWiaItem2*, UInt32),
    create_child_item : Proc(IWiaItem2*, Int32, Int32, Win32cr::Foundation::BSTR, Void**, Win32cr::Foundation::HRESULT),
    delete_item : Proc(IWiaItem2*, Int32, Win32cr::Foundation::HRESULT),
    enum_child_items : Proc(IWiaItem2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    find_item_by_name : Proc(IWiaItem2*, Int32, Win32cr::Foundation::BSTR, Void**, Win32cr::Foundation::HRESULT),
    get_item_category : Proc(IWiaItem2*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_item_type : Proc(IWiaItem2*, Int32*, Win32cr::Foundation::HRESULT),
    device_dlg : Proc(IWiaItem2*, Int32, Win32cr::Foundation::HWND, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32*, Win32cr::Foundation::BSTR**, Void**, Win32cr::Foundation::HRESULT),
    device_command : Proc(IWiaItem2*, Int32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    enum_device_capabilities : Proc(IWiaItem2*, Int32, Void**, Win32cr::Foundation::HRESULT),
    check_extension : Proc(IWiaItem2*, Int32, Win32cr::Foundation::BSTR, LibC::GUID*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    get_extension : Proc(IWiaItem2*, Int32, Win32cr::Foundation::BSTR, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    get_parent_item : Proc(IWiaItem2*, Void**, Win32cr::Foundation::HRESULT),
    get_root_item : Proc(IWiaItem2*, Void**, Win32cr::Foundation::HRESULT),
    get_preview_component : Proc(IWiaItem2*, Int32, Void**, Win32cr::Foundation::HRESULT),
    enum_register_event_info : Proc(IWiaItem2*, Int32, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    diagnostic : Proc(IWiaItem2*, UInt32, UInt8*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaItem2, lpVtbl : IWiaItem2Vtbl* do
    GUID = LibC::GUID.new(0x6cba0075_u32, 0x1287_u16, 0x407d_u16, StaticArray[0x9b_u8, 0x77_u8, 0xcf_u8, 0xe_u8, 0x3_u8, 0x4_u8, 0x35_u8, 0xcc_u8])
    def query_interface(this : IWiaItem2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaItem2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaItem2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_child_item(this : IWiaItem2*, lItemFlags : Int32, lCreationFlags : Int32, bstrItemName : Win32cr::Foundation::BSTR, ppIWiaItem2 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_child_item.call(this, lItemFlags, lCreationFlags, bstrItemName, ppIWiaItem2)
    end
    def delete_item(this : IWiaItem2*, lFlags : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_item.call(this, lFlags)
    end
    def enum_child_items(this : IWiaItem2*, pCategoryGUID : LibC::GUID*, ppIEnumWiaItem2 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_child_items.call(this, pCategoryGUID, ppIEnumWiaItem2)
    end
    def find_item_by_name(this : IWiaItem2*, lFlags : Int32, bstrFullItemName : Win32cr::Foundation::BSTR, ppIWiaItem2 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_item_by_name.call(this, lFlags, bstrFullItemName, ppIWiaItem2)
    end
    def get_item_category(this : IWiaItem2*, pItemCategoryGUID : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_category.call(this, pItemCategoryGUID)
    end
    def get_item_type(this : IWiaItem2*, pItemType : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_type.call(this, pItemType)
    end
    def device_dlg(this : IWiaItem2*, lFlags : Int32, hwndParent : Win32cr::Foundation::HWND, bstrFolderName : Win32cr::Foundation::BSTR, bstrFilename : Win32cr::Foundation::BSTR, plNumFiles : Int32*, ppbstrFilePaths : Win32cr::Foundation::BSTR**, ppItem : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.device_dlg.call(this, lFlags, hwndParent, bstrFolderName, bstrFilename, plNumFiles, ppbstrFilePaths, ppItem)
    end
    def device_command(this : IWiaItem2*, lFlags : Int32, pCmdGUID : LibC::GUID*, ppIWiaItem2 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.device_command.call(this, lFlags, pCmdGUID, ppIWiaItem2)
    end
    def enum_device_capabilities(this : IWiaItem2*, lFlags : Int32, ppIEnumWIA_DEV_CAPS : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_device_capabilities.call(this, lFlags, ppIEnumWIA_DEV_CAPS)
    end
    def check_extension(this : IWiaItem2*, lFlags : Int32, bstrName : Win32cr::Foundation::BSTR, riidExtensionInterface : LibC::GUID*, pbExtensionExists : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.check_extension.call(this, lFlags, bstrName, riidExtensionInterface, pbExtensionExists)
    end
    def get_extension(this : IWiaItem2*, lFlags : Int32, bstrName : Win32cr::Foundation::BSTR, riidExtensionInterface : LibC::GUID*, ppOut : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_extension.call(this, lFlags, bstrName, riidExtensionInterface, ppOut)
    end
    def get_parent_item(this : IWiaItem2*, ppIWiaItem2 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_parent_item.call(this, ppIWiaItem2)
    end
    def get_root_item(this : IWiaItem2*, ppIWiaItem2 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_root_item.call(this, ppIWiaItem2)
    end
    def get_preview_component(this : IWiaItem2*, lFlags : Int32, ppWiaPreview : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_preview_component.call(this, lFlags, ppWiaPreview)
    end
    def enum_register_event_info(this : IWiaItem2*, lFlags : Int32, pEventGUID : LibC::GUID*, ppIEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_register_event_info.call(this, lFlags, pEventGUID, ppIEnum)
    end
    def diagnostic(this : IWiaItem2*, ulSize : UInt32, pBuffer : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.diagnostic.call(this, ulSize, pBuffer)
    end

  end

  @[Extern]
  record IWiaDevMgr2Vtbl,
    query_interface : Proc(IWiaDevMgr2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaDevMgr2*, UInt32),
    release : Proc(IWiaDevMgr2*, UInt32),
    enum_device_info : Proc(IWiaDevMgr2*, Int32, Void**, Win32cr::Foundation::HRESULT),
    create_device : Proc(IWiaDevMgr2*, Int32, Win32cr::Foundation::BSTR, Void**, Win32cr::Foundation::HRESULT),
    select_device_dlg : Proc(IWiaDevMgr2*, Win32cr::Foundation::HWND, Int32, Int32, Win32cr::Foundation::BSTR*, Void**, Win32cr::Foundation::HRESULT),
    select_device_dlg_id : Proc(IWiaDevMgr2*, Win32cr::Foundation::HWND, Int32, Int32, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    register_event_callback_interface : Proc(IWiaDevMgr2*, Int32, Win32cr::Foundation::BSTR, LibC::GUID*, Void*, Void**, Win32cr::Foundation::HRESULT),
    register_event_callback_program : Proc(IWiaDevMgr2*, Int32, Win32cr::Foundation::BSTR, LibC::GUID*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    register_event_callback_clsid : Proc(IWiaDevMgr2*, Int32, Win32cr::Foundation::BSTR, LibC::GUID*, LibC::GUID*, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    get_image_dlg : Proc(IWiaDevMgr2*, Int32, Win32cr::Foundation::BSTR, Win32cr::Foundation::HWND, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Int32*, Win32cr::Foundation::BSTR**, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaDevMgr2, lpVtbl : IWiaDevMgr2Vtbl* do
    GUID = LibC::GUID.new(0x79c07cf1_u32, 0xcbdd_u16, 0x41ee_u16, StaticArray[0x8e_u8, 0xc3_u8, 0xf0_u8, 0x0_u8, 0x80_u8, 0xca_u8, 0xda_u8, 0x7a_u8])
    def query_interface(this : IWiaDevMgr2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaDevMgr2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaDevMgr2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def enum_device_info(this : IWiaDevMgr2*, lFlags : Int32, ppIEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_device_info.call(this, lFlags, ppIEnum)
    end
    def create_device(this : IWiaDevMgr2*, lFlags : Int32, bstrDeviceID : Win32cr::Foundation::BSTR, ppWiaItem2Root : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device.call(this, lFlags, bstrDeviceID, ppWiaItem2Root)
    end
    def select_device_dlg(this : IWiaDevMgr2*, hwndParent : Win32cr::Foundation::HWND, lDeviceType : Int32, lFlags : Int32, pbstrDeviceID : Win32cr::Foundation::BSTR*, ppItemRoot : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_device_dlg.call(this, hwndParent, lDeviceType, lFlags, pbstrDeviceID, ppItemRoot)
    end
    def select_device_dlg_id(this : IWiaDevMgr2*, hwndParent : Win32cr::Foundation::HWND, lDeviceType : Int32, lFlags : Int32, pbstrDeviceID : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.select_device_dlg_id.call(this, hwndParent, lDeviceType, lFlags, pbstrDeviceID)
    end
    def register_event_callback_interface(this : IWiaDevMgr2*, lFlags : Int32, bstrDeviceID : Win32cr::Foundation::BSTR, pEventGUID : LibC::GUID*, pIWiaEventCallback : Void*, pEventObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_event_callback_interface.call(this, lFlags, bstrDeviceID, pEventGUID, pIWiaEventCallback, pEventObject)
    end
    def register_event_callback_program(this : IWiaDevMgr2*, lFlags : Int32, bstrDeviceID : Win32cr::Foundation::BSTR, pEventGUID : LibC::GUID*, bstrFullAppName : Win32cr::Foundation::BSTR, bstrCommandLineArg : Win32cr::Foundation::BSTR, bstrName : Win32cr::Foundation::BSTR, bstrDescription : Win32cr::Foundation::BSTR, bstrIcon : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_event_callback_program.call(this, lFlags, bstrDeviceID, pEventGUID, bstrFullAppName, bstrCommandLineArg, bstrName, bstrDescription, bstrIcon)
    end
    def register_event_callback_clsid(this : IWiaDevMgr2*, lFlags : Int32, bstrDeviceID : Win32cr::Foundation::BSTR, pEventGUID : LibC::GUID*, pClsID : LibC::GUID*, bstrName : Win32cr::Foundation::BSTR, bstrDescription : Win32cr::Foundation::BSTR, bstrIcon : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.register_event_callback_clsid.call(this, lFlags, bstrDeviceID, pEventGUID, pClsID, bstrName, bstrDescription, bstrIcon)
    end
    def get_image_dlg(this : IWiaDevMgr2*, lFlags : Int32, bstrDeviceID : Win32cr::Foundation::BSTR, hwndParent : Win32cr::Foundation::HWND, bstrFolderName : Win32cr::Foundation::BSTR, bstrFilename : Win32cr::Foundation::BSTR, plNumFiles : Int32*, ppbstrFilePaths : Win32cr::Foundation::BSTR**, ppItem : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_image_dlg.call(this, lFlags, bstrDeviceID, hwndParent, bstrFolderName, bstrFilename, plNumFiles, ppbstrFilePaths, ppItem)
    end

  end

  @[Extern]
  record IWiaMiniDrvVtbl,
    query_interface : Proc(IWiaMiniDrv*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaMiniDrv*, UInt32),
    release : Proc(IWiaMiniDrv*, UInt32),
    drvInitializeWia : Proc(IWiaMiniDrv*, UInt8*, Int32, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Void*, Void*, Void**, Void**, Int32*, Win32cr::Foundation::HRESULT),
    drvAcquireItemData : Proc(IWiaMiniDrv*, UInt8*, Int32, Win32cr::Devices::ImageAcquisition::MINIDRV_TRANSFER_CONTEXT*, Int32*, Win32cr::Foundation::HRESULT),
    drvInitItemProperties : Proc(IWiaMiniDrv*, UInt8*, Int32, Int32*, Win32cr::Foundation::HRESULT),
    drvValidateItemProperties : Proc(IWiaMiniDrv*, UInt8*, Int32, UInt32, Win32cr::System::Com::StructuredStorage::PROPSPEC*, Int32*, Win32cr::Foundation::HRESULT),
    drvWriteItemProperties : Proc(IWiaMiniDrv*, UInt8*, Int32, Win32cr::Devices::ImageAcquisition::MINIDRV_TRANSFER_CONTEXT*, Int32*, Win32cr::Foundation::HRESULT),
    drvReadItemProperties : Proc(IWiaMiniDrv*, UInt8*, Int32, UInt32, Win32cr::System::Com::StructuredStorage::PROPSPEC*, Int32*, Win32cr::Foundation::HRESULT),
    drvLockWiaDevice : Proc(IWiaMiniDrv*, UInt8*, Int32, Int32*, Win32cr::Foundation::HRESULT),
    drvUnLockWiaDevice : Proc(IWiaMiniDrv*, UInt8*, Int32, Int32*, Win32cr::Foundation::HRESULT),
    drvAnalyzeItem : Proc(IWiaMiniDrv*, UInt8*, Int32, Int32*, Win32cr::Foundation::HRESULT),
    drvGetDeviceErrorStr : Proc(IWiaMiniDrv*, Int32, Int32, Win32cr::Foundation::PWSTR*, Int32*, Win32cr::Foundation::HRESULT),
    drvDeviceCommand : Proc(IWiaMiniDrv*, UInt8*, Int32, LibC::GUID*, Void**, Int32*, Win32cr::Foundation::HRESULT),
    drvGetCapabilities : Proc(IWiaMiniDrv*, UInt8*, Int32, Int32*, Win32cr::Devices::ImageAcquisition::WIA_DEV_CAP_DRV**, Int32*, Win32cr::Foundation::HRESULT),
    drvDeleteItem : Proc(IWiaMiniDrv*, UInt8*, Int32, Int32*, Win32cr::Foundation::HRESULT),
    drvFreeDrvItemContext : Proc(IWiaMiniDrv*, Int32, UInt8*, Int32*, Win32cr::Foundation::HRESULT),
    drvGetWiaFormatInfo : Proc(IWiaMiniDrv*, UInt8*, Int32, Int32*, Win32cr::Devices::ImageAcquisition::WIA_FORMAT_INFO**, Int32*, Win32cr::Foundation::HRESULT),
    drvNotifyPnpEvent : Proc(IWiaMiniDrv*, LibC::GUID*, Win32cr::Foundation::BSTR, UInt32, Win32cr::Foundation::HRESULT),
    drvUnInitializeWia : Proc(IWiaMiniDrv*, UInt8*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaMiniDrv, lpVtbl : IWiaMiniDrvVtbl* do
    GUID = LibC::GUID.new(0xd8cdee14_u32, 0x3c6c_u16, 0x11d2_u16, StaticArray[0x9a_u8, 0x35_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xa3_u8, 0x61_u8, 0x45_u8])
    def query_interface(this : IWiaMiniDrv*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaMiniDrv*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaMiniDrv*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def drvInitializeWia(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0000 : UInt8*, __midl__i_wia_mini_drv0001 : Int32, __midl__i_wia_mini_drv0002 : Win32cr::Foundation::BSTR, __midl__i_wia_mini_drv0003 : Win32cr::Foundation::BSTR, __midl__i_wia_mini_drv0004 : Void*, __midl__i_wia_mini_drv0005 : Void*, __midl__i_wia_mini_drv0006 : Void**, __midl__i_wia_mini_drv0007 : Void**, __midl__i_wia_mini_drv0008 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvInitializeWia.call(this, __midl__i_wia_mini_drv0000, __midl__i_wia_mini_drv0001, __midl__i_wia_mini_drv0002, __midl__i_wia_mini_drv0003, __midl__i_wia_mini_drv0004, __midl__i_wia_mini_drv0005, __midl__i_wia_mini_drv0006, __midl__i_wia_mini_drv0007, __midl__i_wia_mini_drv0008)
    end
    def drvAcquireItemData(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0009 : UInt8*, __midl__i_wia_mini_drv0010 : Int32, __midl__i_wia_mini_drv0011 : Win32cr::Devices::ImageAcquisition::MINIDRV_TRANSFER_CONTEXT*, __midl__i_wia_mini_drv0012 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvAcquireItemData.call(this, __midl__i_wia_mini_drv0009, __midl__i_wia_mini_drv0010, __midl__i_wia_mini_drv0011, __midl__i_wia_mini_drv0012)
    end
    def drvInitItemProperties(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0013 : UInt8*, __midl__i_wia_mini_drv0014 : Int32, __midl__i_wia_mini_drv0015 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvInitItemProperties.call(this, __midl__i_wia_mini_drv0013, __midl__i_wia_mini_drv0014, __midl__i_wia_mini_drv0015)
    end
    def drvValidateItemProperties(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0016 : UInt8*, __midl__i_wia_mini_drv0017 : Int32, __midl__i_wia_mini_drv0018 : UInt32, __midl__i_wia_mini_drv0019 : Win32cr::System::Com::StructuredStorage::PROPSPEC*, __midl__i_wia_mini_drv0020 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvValidateItemProperties.call(this, __midl__i_wia_mini_drv0016, __midl__i_wia_mini_drv0017, __midl__i_wia_mini_drv0018, __midl__i_wia_mini_drv0019, __midl__i_wia_mini_drv0020)
    end
    def drvWriteItemProperties(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0021 : UInt8*, __midl__i_wia_mini_drv0022 : Int32, __midl__i_wia_mini_drv0023 : Win32cr::Devices::ImageAcquisition::MINIDRV_TRANSFER_CONTEXT*, __midl__i_wia_mini_drv0024 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvWriteItemProperties.call(this, __midl__i_wia_mini_drv0021, __midl__i_wia_mini_drv0022, __midl__i_wia_mini_drv0023, __midl__i_wia_mini_drv0024)
    end
    def drvReadItemProperties(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0025 : UInt8*, __midl__i_wia_mini_drv0026 : Int32, __midl__i_wia_mini_drv0027 : UInt32, __midl__i_wia_mini_drv0028 : Win32cr::System::Com::StructuredStorage::PROPSPEC*, __midl__i_wia_mini_drv0029 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvReadItemProperties.call(this, __midl__i_wia_mini_drv0025, __midl__i_wia_mini_drv0026, __midl__i_wia_mini_drv0027, __midl__i_wia_mini_drv0028, __midl__i_wia_mini_drv0029)
    end
    def drvLockWiaDevice(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0030 : UInt8*, __midl__i_wia_mini_drv0031 : Int32, __midl__i_wia_mini_drv0032 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvLockWiaDevice.call(this, __midl__i_wia_mini_drv0030, __midl__i_wia_mini_drv0031, __midl__i_wia_mini_drv0032)
    end
    def drvUnLockWiaDevice(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0033 : UInt8*, __midl__i_wia_mini_drv0034 : Int32, __midl__i_wia_mini_drv0035 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvUnLockWiaDevice.call(this, __midl__i_wia_mini_drv0033, __midl__i_wia_mini_drv0034, __midl__i_wia_mini_drv0035)
    end
    def drvAnalyzeItem(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0036 : UInt8*, __midl__i_wia_mini_drv0037 : Int32, __midl__i_wia_mini_drv0038 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvAnalyzeItem.call(this, __midl__i_wia_mini_drv0036, __midl__i_wia_mini_drv0037, __midl__i_wia_mini_drv0038)
    end
    def drvGetDeviceErrorStr(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0039 : Int32, __midl__i_wia_mini_drv0040 : Int32, __midl__i_wia_mini_drv0041 : Win32cr::Foundation::PWSTR*, __midl__i_wia_mini_drv0042 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvGetDeviceErrorStr.call(this, __midl__i_wia_mini_drv0039, __midl__i_wia_mini_drv0040, __midl__i_wia_mini_drv0041, __midl__i_wia_mini_drv0042)
    end
    def drvDeviceCommand(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0043 : UInt8*, __midl__i_wia_mini_drv0044 : Int32, __midl__i_wia_mini_drv0045 : LibC::GUID*, __midl__i_wia_mini_drv0046 : Void**, __midl__i_wia_mini_drv0047 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvDeviceCommand.call(this, __midl__i_wia_mini_drv0043, __midl__i_wia_mini_drv0044, __midl__i_wia_mini_drv0045, __midl__i_wia_mini_drv0046, __midl__i_wia_mini_drv0047)
    end
    def drvGetCapabilities(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0048 : UInt8*, __midl__i_wia_mini_drv0049 : Int32, __midl__i_wia_mini_drv0050 : Int32*, __midl__i_wia_mini_drv0051 : Win32cr::Devices::ImageAcquisition::WIA_DEV_CAP_DRV**, __midl__i_wia_mini_drv0052 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvGetCapabilities.call(this, __midl__i_wia_mini_drv0048, __midl__i_wia_mini_drv0049, __midl__i_wia_mini_drv0050, __midl__i_wia_mini_drv0051, __midl__i_wia_mini_drv0052)
    end
    def drvDeleteItem(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0053 : UInt8*, __midl__i_wia_mini_drv0054 : Int32, __midl__i_wia_mini_drv0055 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvDeleteItem.call(this, __midl__i_wia_mini_drv0053, __midl__i_wia_mini_drv0054, __midl__i_wia_mini_drv0055)
    end
    def drvFreeDrvItemContext(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0056 : Int32, __midl__i_wia_mini_drv0057 : UInt8*, __midl__i_wia_mini_drv0058 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvFreeDrvItemContext.call(this, __midl__i_wia_mini_drv0056, __midl__i_wia_mini_drv0057, __midl__i_wia_mini_drv0058)
    end
    def drvGetWiaFormatInfo(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0059 : UInt8*, __midl__i_wia_mini_drv0060 : Int32, __midl__i_wia_mini_drv0061 : Int32*, __midl__i_wia_mini_drv0062 : Win32cr::Devices::ImageAcquisition::WIA_FORMAT_INFO**, __midl__i_wia_mini_drv0063 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvGetWiaFormatInfo.call(this, __midl__i_wia_mini_drv0059, __midl__i_wia_mini_drv0060, __midl__i_wia_mini_drv0061, __midl__i_wia_mini_drv0062, __midl__i_wia_mini_drv0063)
    end
    def drvNotifyPnpEvent(this : IWiaMiniDrv*, pEventGUID : LibC::GUID*, bstrDeviceID : Win32cr::Foundation::BSTR, ulReserved : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvNotifyPnpEvent.call(this, pEventGUID, bstrDeviceID, ulReserved)
    end
    def drvUnInitializeWia(this : IWiaMiniDrv*, __midl__i_wia_mini_drv0064 : UInt8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.drvUnInitializeWia.call(this, __midl__i_wia_mini_drv0064)
    end

  end

  @[Extern]
  record IWiaMiniDrvCallBackVtbl,
    query_interface : Proc(IWiaMiniDrvCallBack*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaMiniDrvCallBack*, UInt32),
    release : Proc(IWiaMiniDrvCallBack*, UInt32),
    mini_drv_callback : Proc(IWiaMiniDrvCallBack*, Int32, Int32, Int32, Int32, Int32, Win32cr::Devices::ImageAcquisition::MINIDRV_TRANSFER_CONTEXT*, Int32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaMiniDrvCallBack, lpVtbl : IWiaMiniDrvCallBackVtbl* do
    GUID = LibC::GUID.new(0x33a57d5a_u32, 0x3de8_u16, 0x11d2_u16, StaticArray[0x9a_u8, 0x36_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xa3_u8, 0x61_u8, 0x45_u8])
    def query_interface(this : IWiaMiniDrvCallBack*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaMiniDrvCallBack*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaMiniDrvCallBack*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def mini_drv_callback(this : IWiaMiniDrvCallBack*, lReason : Int32, lStatus : Int32, lPercentComplete : Int32, lOffset : Int32, lLength : Int32, pTranCtx : Win32cr::Devices::ImageAcquisition::MINIDRV_TRANSFER_CONTEXT*, lReserved : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.mini_drv_callback.call(this, lReason, lStatus, lPercentComplete, lOffset, lLength, pTranCtx, lReserved)
    end

  end

  @[Extern]
  record IWiaMiniDrvTransferCallbackVtbl,
    query_interface : Proc(IWiaMiniDrvTransferCallback*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaMiniDrvTransferCallback*, UInt32),
    release : Proc(IWiaMiniDrvTransferCallback*, UInt32),
    get_next_stream : Proc(IWiaMiniDrvTransferCallback*, Int32, Win32cr::Foundation::BSTR, Win32cr::Foundation::BSTR, Void**, Win32cr::Foundation::HRESULT),
    send_message : Proc(IWiaMiniDrvTransferCallback*, Int32, Win32cr::Devices::ImageAcquisition::WiaTransferParams*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaMiniDrvTransferCallback, lpVtbl : IWiaMiniDrvTransferCallbackVtbl* do
    GUID = LibC::GUID.new(0xa9d2ee89_u32, 0x2ce5_u16, 0x4ff0_u16, StaticArray[0x8a_u8, 0xdb_u8, 0xc9_u8, 0x61_u8, 0xd1_u8, 0xd7_u8, 0x74_u8, 0xca_u8])
    def query_interface(this : IWiaMiniDrvTransferCallback*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaMiniDrvTransferCallback*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaMiniDrvTransferCallback*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_next_stream(this : IWiaMiniDrvTransferCallback*, lFlags : Int32, bstrItemName : Win32cr::Foundation::BSTR, bstrFullItemName : Win32cr::Foundation::BSTR, ppIStream : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_next_stream.call(this, lFlags, bstrItemName, bstrFullItemName, ppIStream)
    end
    def send_message(this : IWiaMiniDrvTransferCallback*, lFlags : Int32, pWiaTransferParams : Win32cr::Devices::ImageAcquisition::WiaTransferParams*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_message.call(this, lFlags, pWiaTransferParams)
    end

  end

  @[Extern]
  record IWiaDrvItemVtbl,
    query_interface : Proc(IWiaDrvItem*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaDrvItem*, UInt32),
    release : Proc(IWiaDrvItem*, UInt32),
    get_item_flags : Proc(IWiaDrvItem*, Int32*, Win32cr::Foundation::HRESULT),
    get_device_spec_context : Proc(IWiaDrvItem*, UInt8**, Win32cr::Foundation::HRESULT),
    get_full_item_name : Proc(IWiaDrvItem*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    get_item_name : Proc(IWiaDrvItem*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    add_item_to_folder : Proc(IWiaDrvItem*, Void*, Win32cr::Foundation::HRESULT),
    unlink_item_tree : Proc(IWiaDrvItem*, Int32, Win32cr::Foundation::HRESULT),
    remove_item_from_folder : Proc(IWiaDrvItem*, Int32, Win32cr::Foundation::HRESULT),
    find_item_by_name : Proc(IWiaDrvItem*, Int32, Win32cr::Foundation::BSTR, Void**, Win32cr::Foundation::HRESULT),
    find_child_item_by_name : Proc(IWiaDrvItem*, Win32cr::Foundation::BSTR, Void**, Win32cr::Foundation::HRESULT),
    get_parent_item : Proc(IWiaDrvItem*, Void**, Win32cr::Foundation::HRESULT),
    get_first_child_item : Proc(IWiaDrvItem*, Void**, Win32cr::Foundation::HRESULT),
    get_next_sibling_item : Proc(IWiaDrvItem*, Void**, Win32cr::Foundation::HRESULT),
    dump_item_data : Proc(IWiaDrvItem*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaDrvItem, lpVtbl : IWiaDrvItemVtbl* do
    GUID = LibC::GUID.new(0x1f02b5c5_u32, 0xb00c_u16, 0x11d2_u16, StaticArray[0xa0_u8, 0x94_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x72_u8, 0xdc_u8, 0x3c_u8])
    def query_interface(this : IWiaDrvItem*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaDrvItem*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaDrvItem*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_item_flags(this : IWiaDrvItem*, __midl__i_wia_drv_item0000 : Int32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_flags.call(this, __midl__i_wia_drv_item0000)
    end
    def get_device_spec_context(this : IWiaDrvItem*, __midl__i_wia_drv_item0001 : UInt8**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_spec_context.call(this, __midl__i_wia_drv_item0001)
    end
    def get_full_item_name(this : IWiaDrvItem*, __midl__i_wia_drv_item0002 : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_full_item_name.call(this, __midl__i_wia_drv_item0002)
    end
    def get_item_name(this : IWiaDrvItem*, __midl__i_wia_drv_item0003 : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_item_name.call(this, __midl__i_wia_drv_item0003)
    end
    def add_item_to_folder(this : IWiaDrvItem*, __midl__i_wia_drv_item0004 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_item_to_folder.call(this, __midl__i_wia_drv_item0004)
    end
    def unlink_item_tree(this : IWiaDrvItem*, __midl__i_wia_drv_item0005 : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unlink_item_tree.call(this, __midl__i_wia_drv_item0005)
    end
    def remove_item_from_folder(this : IWiaDrvItem*, __midl__i_wia_drv_item0006 : Int32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_item_from_folder.call(this, __midl__i_wia_drv_item0006)
    end
    def find_item_by_name(this : IWiaDrvItem*, __midl__i_wia_drv_item0007 : Int32, __midl__i_wia_drv_item0008 : Win32cr::Foundation::BSTR, __midl__i_wia_drv_item0009 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_item_by_name.call(this, __midl__i_wia_drv_item0007, __midl__i_wia_drv_item0008, __midl__i_wia_drv_item0009)
    end
    def find_child_item_by_name(this : IWiaDrvItem*, __midl__i_wia_drv_item0010 : Win32cr::Foundation::BSTR, __midl__i_wia_drv_item0011 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_child_item_by_name.call(this, __midl__i_wia_drv_item0010, __midl__i_wia_drv_item0011)
    end
    def get_parent_item(this : IWiaDrvItem*, __midl__i_wia_drv_item0012 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_parent_item.call(this, __midl__i_wia_drv_item0012)
    end
    def get_first_child_item(this : IWiaDrvItem*, __midl__i_wia_drv_item0013 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_first_child_item.call(this, __midl__i_wia_drv_item0013)
    end
    def get_next_sibling_item(this : IWiaDrvItem*, __midl__i_wia_drv_item0014 : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_next_sibling_item.call(this, __midl__i_wia_drv_item0014)
    end
    def dump_item_data(this : IWiaDrvItem*, __midl__i_wia_drv_item0015 : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.dump_item_data.call(this, __midl__i_wia_drv_item0015)
    end

  end

  @[Extern]
  record IWiaVideoVtbl,
    query_interface : Proc(IWiaVideo*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaVideo*, UInt32),
    release : Proc(IWiaVideo*, UInt32),
    get_PreviewVisible : Proc(IWiaVideo*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HRESULT),
    put_PreviewVisible : Proc(IWiaVideo*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_ImagesDirectory : Proc(IWiaVideo*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    put_ImagesDirectory : Proc(IWiaVideo*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HRESULT),
    create_video_by_wia_dev_id : Proc(IWiaVideo*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HWND, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_video_by_dev_num : Proc(IWiaVideo*, UInt32, Win32cr::Foundation::HWND, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    create_video_by_name : Proc(IWiaVideo*, Win32cr::Foundation::BSTR, Win32cr::Foundation::HWND, Win32cr::Foundation::BOOL, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    destroy_video : Proc(IWiaVideo*, Win32cr::Foundation::HRESULT),
    play : Proc(IWiaVideo*, Win32cr::Foundation::HRESULT),
    pause : Proc(IWiaVideo*, Win32cr::Foundation::HRESULT),
    take_picture : Proc(IWiaVideo*, Win32cr::Foundation::BSTR*, Win32cr::Foundation::HRESULT),
    resize_video : Proc(IWiaVideo*, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    get_current_state : Proc(IWiaVideo*, Win32cr::Devices::ImageAcquisition::WIAVIDEO_STATE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaVideo, lpVtbl : IWiaVideoVtbl* do
    GUID = LibC::GUID.new(0xd52920aa_u32, 0xdb88_u16, 0x41f0_u16, StaticArray[0x94_u8, 0x6c_u8, 0xe0_u8, 0xd_u8, 0xc0_u8, 0xa1_u8, 0x9c_u8, 0xfa_u8])
    def query_interface(this : IWiaVideo*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaVideo*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaVideo*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_PreviewVisible(this : IWiaVideo*, pbPreviewVisible : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_PreviewVisible.call(this, pbPreviewVisible)
    end
    def put_PreviewVisible(this : IWiaVideo*, bPreviewVisible : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_PreviewVisible.call(this, bPreviewVisible)
    end
    def get_ImagesDirectory(this : IWiaVideo*, pbstrImageDirectory : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_ImagesDirectory.call(this, pbstrImageDirectory)
    end
    def put_ImagesDirectory(this : IWiaVideo*, bstrImageDirectory : Win32cr::Foundation::BSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.put_ImagesDirectory.call(this, bstrImageDirectory)
    end
    def create_video_by_wia_dev_id(this : IWiaVideo*, bstrWiaDeviceID : Win32cr::Foundation::BSTR, hwndParent : Win32cr::Foundation::HWND, bStretchToFitParent : Win32cr::Foundation::BOOL, bAutoBeginPlayback : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_by_wia_dev_id.call(this, bstrWiaDeviceID, hwndParent, bStretchToFitParent, bAutoBeginPlayback)
    end
    def create_video_by_dev_num(this : IWiaVideo*, uiDeviceNumber : UInt32, hwndParent : Win32cr::Foundation::HWND, bStretchToFitParent : Win32cr::Foundation::BOOL, bAutoBeginPlayback : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_by_dev_num.call(this, uiDeviceNumber, hwndParent, bStretchToFitParent, bAutoBeginPlayback)
    end
    def create_video_by_name(this : IWiaVideo*, bstrFriendlyName : Win32cr::Foundation::BSTR, hwndParent : Win32cr::Foundation::HWND, bStretchToFitParent : Win32cr::Foundation::BOOL, bAutoBeginPlayback : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_video_by_name.call(this, bstrFriendlyName, hwndParent, bStretchToFitParent, bAutoBeginPlayback)
    end
    def destroy_video(this : IWiaVideo*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.destroy_video.call(this)
    end
    def play(this : IWiaVideo*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.play.call(this)
    end
    def pause(this : IWiaVideo*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.pause.call(this)
    end
    def take_picture(this : IWiaVideo*, pbstrNewImageFilename : Win32cr::Foundation::BSTR*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.take_picture.call(this, pbstrNewImageFilename)
    end
    def resize_video(this : IWiaVideo*, bStretchToFitParent : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.resize_video.call(this, bStretchToFitParent)
    end
    def get_current_state(this : IWiaVideo*, pState : Win32cr::Devices::ImageAcquisition::WIAVIDEO_STATE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_current_state.call(this, pState)
    end

  end

  @[Extern]
  record IWiaUIExtension2Vtbl,
    query_interface : Proc(IWiaUIExtension2*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaUIExtension2*, UInt32),
    release : Proc(IWiaUIExtension2*, UInt32),
    device_dialog : Proc(IWiaUIExtension2*, Win32cr::Devices::ImageAcquisition::DEVICEDIALOGDATA2*, Win32cr::Foundation::HRESULT),
    get_device_icon : Proc(IWiaUIExtension2*, Win32cr::Foundation::BSTR, Win32cr::UI::WindowsAndMessaging::HICON*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaUIExtension2, lpVtbl : IWiaUIExtension2Vtbl* do
    GUID = LibC::GUID.new(0x305600d7_u32, 0x5088_u16, 0x46d7_u16, StaticArray[0x9a_u8, 0x15_u8, 0xb7_u8, 0x7b_u8, 0x9_u8, 0xcd_u8, 0xba_u8, 0x7a_u8])
    def query_interface(this : IWiaUIExtension2*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaUIExtension2*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaUIExtension2*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def device_dialog(this : IWiaUIExtension2*, pDeviceDialogData : Win32cr::Devices::ImageAcquisition::DEVICEDIALOGDATA2*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.device_dialog.call(this, pDeviceDialogData)
    end
    def get_device_icon(this : IWiaUIExtension2*, bstrDeviceId : Win32cr::Foundation::BSTR, phIcon : Win32cr::UI::WindowsAndMessaging::HICON*, nSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_icon.call(this, bstrDeviceId, phIcon, nSize)
    end

  end

  @[Extern]
  record IWiaUIExtensionVtbl,
    query_interface : Proc(IWiaUIExtension*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IWiaUIExtension*, UInt32),
    release : Proc(IWiaUIExtension*, UInt32),
    device_dialog : Proc(IWiaUIExtension*, Win32cr::Devices::ImageAcquisition::DEVICEDIALOGDATA*, Win32cr::Foundation::HRESULT),
    get_device_icon : Proc(IWiaUIExtension*, Win32cr::Foundation::BSTR, Win32cr::UI::WindowsAndMessaging::HICON*, UInt32, Win32cr::Foundation::HRESULT),
    get_device_bitmap_logo : Proc(IWiaUIExtension*, Win32cr::Foundation::BSTR, Win32cr::Graphics::Gdi::HBITMAP*, UInt32, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  record IWiaUIExtension, lpVtbl : IWiaUIExtensionVtbl* do
    GUID = LibC::GUID.new(0xda319113_u32, 0x50ee_u16, 0x4c80_u16, StaticArray[0xb4_u8, 0x60_u8, 0x57_u8, 0xd0_u8, 0x5_u8, 0xd4_u8, 0x4a_u8, 0x2c_u8])
    def query_interface(this : IWiaUIExtension*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IWiaUIExtension*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IWiaUIExtension*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def device_dialog(this : IWiaUIExtension*, pDeviceDialogData : Win32cr::Devices::ImageAcquisition::DEVICEDIALOGDATA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.device_dialog.call(this, pDeviceDialogData)
    end
    def get_device_icon(this : IWiaUIExtension*, bstrDeviceId : Win32cr::Foundation::BSTR, phIcon : Win32cr::UI::WindowsAndMessaging::HICON*, nSize : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_icon.call(this, bstrDeviceId, phIcon, nSize)
    end
    def get_device_bitmap_logo(this : IWiaUIExtension*, bstrDeviceId : Win32cr::Foundation::BSTR, phBitmap : Win32cr::Graphics::Gdi::HBITMAP*, nMaxWidth : UInt32, nMaxHeight : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_bitmap_logo.call(this, bstrDeviceId, phBitmap, nMaxWidth, nMaxHeight)
    end

  end

end