require "../foundation.cr"
require "../graphics/gdi.cr"
require "../system/com.cr"
require "../graphics/opengl.cr"
require "../graphics/directdraw.cr"
require "../ui/colorsystem.cr"
require "../system/console.cr"
require "../graphics/direct3d9.cr"

{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link("delayimp")]
{% end %}
@[Link("user32")]
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/IGNORE:4199")]
{% end %}
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/DELAYLOAD:dxva2.dll")]
@[Link(ldflags: "/DELAYLOAD:gdi32.dll")]
@[Link(ldflags: "/DELAYLOAD:user32.dll")]
{% else %}
@[Link("dxva2")]
@[Link("gdi32")]
@[Link("user32")]
{% end %}
lib LibWin32
  alias HSEMAPHORE = LibC::IntPtrT
  alias HSURF = LibC::IntPtrT
  alias HFASTMUTEX = LibC::IntPtrT
  alias HDRVOBJ = LibC::IntPtrT
  alias HDEV = LibC::IntPtrT
  alias HBM = LibC::IntPtrT
  alias DHSURF = LibC::IntPtrT
  alias DHPDEV = LibC::IntPtrT

  GUID_DEVINTERFACE_DISPLAY_ADAPTER = "5b45201d-f2f2-4f3b-85bb-30ff1f953599"
  GUID_DEVINTERFACE_MONITOR = "e6f07b5f-ee97-4a90-b076-33f57bf4eaa7"
  GUID_DISPLAY_DEVICE_ARRIVAL = "1ca05180-a699-450a-9a0c-de4fbe3ddd89"
  GUID_DEVINTERFACE_VIDEO_OUTPUT_ARRIVAL = "1ad9e4f0-f88d-4360-bab9-4c2d55e564cd"
  DEVPKEY_IndirectDisplay = PROPERTYKEY.new(LibC::GUID.new(0xc50a3f10_u32, 0xaa5c_u16, 0x4247_u16, StaticArray[0xb8_u8, 0x30_u8, 0xd6_u8, 0xa6_u8, 0xf8_u8, 0xea_u8, 0xa3_u8, 0x10_u8]), 1_u32)
  DEVPKEY_Device_TerminalLuid = PROPERTYKEY.new(LibC::GUID.new(0xc50a3f10_u32, 0xaa5c_u16, 0x4247_u16, StaticArray[0xb8_u8, 0x30_u8, 0xd6_u8, 0xa6_u8, 0xf8_u8, 0xea_u8, 0xa3_u8, 0x10_u8]), 2_u32)
  DEVPKEY_Device_AdapterLuid = PROPERTYKEY.new(LibC::GUID.new(0xc50a3f10_u32, 0xaa5c_u16, 0x4247_u16, StaticArray[0xb8_u8, 0x30_u8, 0xd6_u8, 0xa6_u8, 0xf8_u8, 0xea_u8, 0xa3_u8, 0x10_u8]), 3_u32)
  DEVPKEY_Device_ActivityId = PROPERTYKEY.new(LibC::GUID.new(0xc50a3f10_u32, 0xaa5c_u16, 0x4247_u16, StaticArray[0xb8_u8, 0x30_u8, 0xd6_u8, 0xa6_u8, 0xf8_u8, 0xea_u8, 0xa3_u8, 0x10_u8]), 4_u32)
  INDIRECT_DISPLAY_INFO_FLAGS_CREATED_IDDCX_ADAPTER = 1_u32
  IOCTL_VIDEO_DISABLE_VDM = 2293764_u32
  IOCTL_VIDEO_REGISTER_VDM = 2293768_u32
  IOCTL_VIDEO_SET_OUTPUT_DEVICE_POWER_STATE = 2293772_u32
  IOCTL_VIDEO_GET_OUTPUT_DEVICE_POWER_STATE = 2293776_u32
  IOCTL_VIDEO_MONITOR_DEVICE = 2293780_u32
  IOCTL_VIDEO_ENUM_MONITOR_PDO = 2293784_u32
  IOCTL_VIDEO_INIT_WIN32K_CALLBACKS = 2293788_u32
  IOCTL_VIDEO_IS_VGA_DEVICE = 2293796_u32
  IOCTL_VIDEO_USE_DEVICE_IN_SESSION = 2293800_u32
  IOCTL_VIDEO_PREPARE_FOR_EARECOVERY = 2293804_u32
  IOCTL_VIDEO_ENABLE_VDM = 2293760_u32
  IOCTL_VIDEO_SAVE_HARDWARE_STATE = 2294272_u32
  IOCTL_VIDEO_RESTORE_HARDWARE_STATE = 2294276_u32
  IOCTL_VIDEO_HANDLE_VIDEOPARAMETERS = 2293792_u32
  IOCTL_VIDEO_QUERY_AVAIL_MODES = 2294784_u32
  IOCTL_VIDEO_QUERY_NUM_AVAIL_MODES = 2294788_u32
  IOCTL_VIDEO_QUERY_CURRENT_MODE = 2294792_u32
  IOCTL_VIDEO_SET_CURRENT_MODE = 2294796_u32
  IOCTL_VIDEO_RESET_DEVICE = 2294800_u32
  IOCTL_VIDEO_LOAD_AND_SET_FONT = 2294804_u32
  IOCTL_VIDEO_SET_PALETTE_REGISTERS = 2294808_u32
  IOCTL_VIDEO_SET_COLOR_REGISTERS = 2294812_u32
  IOCTL_VIDEO_ENABLE_CURSOR = 2294816_u32
  IOCTL_VIDEO_DISABLE_CURSOR = 2294820_u32
  IOCTL_VIDEO_SET_CURSOR_ATTR = 2294824_u32
  IOCTL_VIDEO_QUERY_CURSOR_ATTR = 2294828_u32
  IOCTL_VIDEO_SET_CURSOR_POSITION = 2294832_u32
  IOCTL_VIDEO_QUERY_CURSOR_POSITION = 2294836_u32
  IOCTL_VIDEO_ENABLE_POINTER = 2294840_u32
  IOCTL_VIDEO_DISABLE_POINTER = 2294844_u32
  IOCTL_VIDEO_SET_POINTER_ATTR = 2294848_u32
  IOCTL_VIDEO_QUERY_POINTER_ATTR = 2294852_u32
  IOCTL_VIDEO_SET_POINTER_POSITION = 2294856_u32
  IOCTL_VIDEO_QUERY_POINTER_POSITION = 2294860_u32
  IOCTL_VIDEO_QUERY_POINTER_CAPABILITIES = 2294864_u32
  IOCTL_VIDEO_GET_BANK_SELECT_CODE = 2294868_u32
  IOCTL_VIDEO_MAP_VIDEO_MEMORY = 2294872_u32
  IOCTL_VIDEO_UNMAP_VIDEO_MEMORY = 2294876_u32
  IOCTL_VIDEO_QUERY_PUBLIC_ACCESS_RANGES = 2294880_u32
  IOCTL_VIDEO_FREE_PUBLIC_ACCESS_RANGES = 2294884_u32
  IOCTL_VIDEO_QUERY_COLOR_CAPABILITIES = 2294888_u32
  IOCTL_VIDEO_SET_POWER_MANAGEMENT = 2294892_u32
  IOCTL_VIDEO_GET_POWER_MANAGEMENT = 2294896_u32
  IOCTL_VIDEO_SHARE_VIDEO_MEMORY = 2294900_u32
  IOCTL_VIDEO_UNSHARE_VIDEO_MEMORY = 2294904_u32
  IOCTL_VIDEO_SET_COLOR_LUT_DATA = 2294908_u32
  IOCTL_VIDEO_GET_CHILD_STATE = 2294912_u32
  IOCTL_VIDEO_VALIDATE_CHILD_STATE_CONFIGURATION = 2294916_u32
  IOCTL_VIDEO_SET_CHILD_STATE_CONFIGURATION = 2294920_u32
  IOCTL_VIDEO_SWITCH_DUALVIEW = 2294924_u32
  IOCTL_VIDEO_SET_BANK_POSITION = 2294928_u32
  IOCTL_VIDEO_QUERY_SUPPORTED_BRIGHTNESS = 2294932_u32
  IOCTL_VIDEO_QUERY_DISPLAY_BRIGHTNESS = 2294936_u32
  IOCTL_VIDEO_SET_DISPLAY_BRIGHTNESS = 2294940_u32
  IOCTL_FSVIDEO_COPY_FRAME_BUFFER = 3409920_u32
  IOCTL_FSVIDEO_WRITE_TO_FRAME_BUFFER = 3409924_u32
  IOCTL_FSVIDEO_REVERSE_MOUSE_POINTER = 3409928_u32
  IOCTL_FSVIDEO_SET_CURRENT_MODE = 3409932_u32
  IOCTL_FSVIDEO_SET_SCREEN_INFORMATION = 3409936_u32
  IOCTL_FSVIDEO_SET_CURSOR_POSITION = 3409940_u32
  IOCTL_PANEL_QUERY_BRIGHTNESS_CAPS = 2296832_u32
  IOCTL_PANEL_QUERY_BRIGHTNESS_RANGES = 2296836_u32
  IOCTL_PANEL_GET_BRIGHTNESS = 2296840_u32
  IOCTL_PANEL_SET_BRIGHTNESS = 2296844_u32
  IOCTL_PANEL_SET_BRIGHTNESS_STATE = 2296848_u32
  IOCTL_PANEL_SET_BACKLIGHT_OPTIMIZATION = 2296852_u32
  IOCTL_PANEL_GET_BACKLIGHT_REDUCTION = 2296856_u32
  IOCTL_COLORSPACE_TRANSFORM_QUERY_TARGET_CAPS = 2297856_u32
  IOCTL_COLORSPACE_TRANSFORM_SET = 2297860_u32
  IOCTL_SET_ACTIVE_COLOR_PROFILE_NAME = 2297864_u32
  IOCTL_MIPI_DSI_QUERY_CAPS = 2298880_u32
  IOCTL_MIPI_DSI_TRANSMISSION = 2298884_u32
  IOCTL_MIPI_DSI_RESET = 2298888_u32
  DXGK_WIN32K_PARAM_FLAG_UPDATEREGISTRY = 1_u32
  DXGK_WIN32K_PARAM_FLAG_MODESWITCH = 2_u32
  DXGK_WIN32K_PARAM_FLAG_DISABLEVIEW = 4_u32
  VIDEO_DUALVIEW_REMOVABLE = 1_u32
  VIDEO_DUALVIEW_PRIMARY = 2147483648_u32
  VIDEO_DUALVIEW_SECONDARY = 1073741824_u32
  VIDEO_DUALVIEW_WDDM_VGA = 536870912_u32
  VIDEO_STATE_NON_STANDARD_VGA = 1_u32
  VIDEO_STATE_UNEMULATED_VGA_STATE = 2_u32
  VIDEO_STATE_PACKED_CHAIN4_MODE = 4_u32
  VIDEO_MODE_NO_ZERO_MEMORY = 2147483648_u32
  VIDEO_MODE_MAP_MEM_LINEAR = 1073741824_u32
  VIDEO_MODE_COLOR = 1_u32
  VIDEO_MODE_GRAPHICS = 2_u32
  VIDEO_MODE_PALETTE_DRIVEN = 4_u32
  VIDEO_MODE_MANAGED_PALETTE = 8_u32
  VIDEO_MODE_INTERLACED = 16_u32
  VIDEO_MODE_NO_OFF_SCREEN = 32_u32
  VIDEO_MODE_NO_64_BIT_ACCESS = 64_u32
  VIDEO_MODE_BANKED = 128_u32
  VIDEO_MODE_LINEAR = 256_u32
  VIDEO_MODE_ASYNC_POINTER = 1_u32
  VIDEO_MODE_MONO_POINTER = 2_u32
  VIDEO_MODE_COLOR_POINTER = 4_u32
  VIDEO_MODE_ANIMATE_START = 8_u32
  VIDEO_MODE_ANIMATE_UPDATE = 16_u32
  PLANAR_HC = 1_u32
  VIDEO_DEVICE_COLOR = 1_u32
  VIDEO_OPTIONAL_GAMMET_TABLE = 2_u32
  VIDEO_COLOR_LUT_DATA_FORMAT_RGB256WORDS = 1_u32
  VIDEO_COLOR_LUT_DATA_FORMAT_PRIVATEFORMAT = 2147483648_u32
  DISPLAYPOLICY_AC = 1_u32
  DISPLAYPOLICY_DC = 2_u32
  CHAR_TYPE_SBCS = 0_u32
  CHAR_TYPE_LEADING = 2_u32
  CHAR_TYPE_TRAILING = 3_u32
  BITMAP_BITS_BYTE_ALIGN = 8_u32
  BITMAP_BITS_WORD_ALIGN = 16_u32
  BITMAP_ARRAY_BYTE = 3_u32
  BITMAP_PLANES = 1_u32
  BITMAP_BITS_PIXEL = 1_u32
  VIDEO_REASON_NONE = 0_u32
  VIDEO_REASON_POLICY1 = 1_u32
  VIDEO_REASON_POLICY2 = 2_u32
  VIDEO_REASON_POLICY3 = 3_u32
  VIDEO_REASON_POLICY4 = 4_u32
  VIDEO_REASON_LOCK = 5_u32
  VIDEO_REASON_FAILED_ROTATION = 5_u32
  VIDEO_REASON_ALLOCATION = 6_u32
  VIDEO_REASON_SCRATCH = 8_u32
  VIDEO_REASON_CONFIGURATION = 9_u32
  VIDEO_MAX_REASON = 9_u32
  BRIGHTNESS_MAX_LEVEL_COUNT = 103_u32
  BRIGHTNESS_MAX_NIT_RANGE_COUNT = 16_u32
  DSI_PACKET_EMBEDDED_PAYLOAD_SIZE = 8_u32
  MAX_PACKET_COUNT = 128_u32
  DSI_INVALID_PACKET_INDEX = 255_u32
  DSI_SOT_ERROR = 1_u32
  DSI_SOT_SYNC_ERROR = 2_u32
  DSI_EOT_SYNC_ERROR = 4_u32
  DSI_ESCAPE_MODE_ENTRY_COMMAND_ERROR = 8_u32
  DSI_LOW_POWER_TRANSMIT_SYNC_ERROR = 16_u32
  DSI_PERIPHERAL_TIMEOUT_ERROR = 32_u32
  DSI_FALSE_CONTROL_ERROR = 64_u32
  DSI_CONTENTION_DETECTED = 128_u32
  DSI_CHECKSUM_ERROR_CORRECTED = 256_u32
  DSI_CHECKSUM_ERROR_NOT_CORRECTED = 512_u32
  DSI_LONG_PACKET_PAYLOAD_CHECKSUM_ERROR = 1024_u32
  DSI_DSI_DATA_TYPE_NOT_RECOGNIZED = 2048_u32
  DSI_DSI_VC_ID_INVALID = 4096_u32
  DSI_INVALID_TRANSMISSION_LENGTH = 8192_u32
  DSI_DSI_PROTOCOL_VIOLATION = 32768_u32
  HOST_DSI_DEVICE_NOT_READY = 1_u32
  HOST_DSI_INTERFACE_RESET = 2_u32
  HOST_DSI_DEVICE_RESET = 4_u32
  HOST_DSI_TRANSMISSION_CANCELLED = 16_u32
  HOST_DSI_TRANSMISSION_DROPPED = 32_u32
  HOST_DSI_TRANSMISSION_TIMEOUT = 64_u32
  HOST_DSI_INVALID_TRANSMISSION = 256_u32
  HOST_DSI_OS_REJECTED_PACKET = 512_u32
  HOST_DSI_DRIVER_REJECTED_PACKET = 1024_u32
  HOST_DSI_BAD_TRANSMISSION_MODE = 4096_u32
  GUID_MONITOR_OVERRIDE_PSEUDO_SPECIALIZED = "f196c02f-f86f-4f9a-aa15-e9cebdfe3b96"
  FD_ERROR = 4294967295_u32
  DDI_ERROR = 4294967295_u32
  FDM_TYPE_BM_SIDE_CONST = 1_u32
  FDM_TYPE_MAXEXT_EQUAL_BM_SIDE = 2_u32
  FDM_TYPE_CHAR_INC_EQUAL_BM_BASE = 4_u32
  FDM_TYPE_ZERO_BEARINGS = 8_u32
  FDM_TYPE_CONST_BEARINGS = 16_u32
  GS_UNICODE_HANDLES = 1_u32
  GS_8BIT_HANDLES = 2_u32
  GS_16BIT_HANDLES = 4_u32
  FM_VERSION_NUMBER = 0_u32
  FM_TYPE_LICENSED = 2_u32
  FM_READONLY_EMBED = 4_u32
  FM_EDITABLE_EMBED = 8_u32
  FM_NO_EMBEDDING = 2_u32
  FM_INFO_TECH_TRUETYPE = 1_u32
  FM_INFO_TECH_BITMAP = 2_u32
  FM_INFO_TECH_STROKE = 4_u32
  FM_INFO_TECH_OUTLINE_NOT_TRUETYPE = 8_u32
  FM_INFO_ARB_XFORMS = 16_u32
  FM_INFO_1BPP = 32_u32
  FM_INFO_4BPP = 64_u32
  FM_INFO_8BPP = 128_u32
  FM_INFO_16BPP = 256_u32
  FM_INFO_24BPP = 512_u32
  FM_INFO_32BPP = 1024_u32
  FM_INFO_INTEGER_WIDTH = 2048_u32
  FM_INFO_CONSTANT_WIDTH = 4096_u32
  FM_INFO_NOT_CONTIGUOUS = 8192_u32
  FM_INFO_TECH_MM = 16384_u32
  FM_INFO_RETURNS_OUTLINES = 32768_u32
  FM_INFO_RETURNS_STROKES = 65536_u32
  FM_INFO_RETURNS_BITMAPS = 131072_u32
  FM_INFO_DSIG = 262144_u32
  FM_INFO_RIGHT_HANDED = 524288_u32
  FM_INFO_INTEGRAL_SCALING = 1048576_u32
  FM_INFO_90DEGREE_ROTATIONS = 2097152_u32
  FM_INFO_OPTICALLY_FIXED_PITCH = 4194304_u32
  FM_INFO_DO_NOT_ENUMERATE = 8388608_u32
  FM_INFO_ISOTROPIC_SCALING_ONLY = 16777216_u32
  FM_INFO_ANISOTROPIC_SCALING_ONLY = 33554432_u32
  FM_INFO_TECH_CFF = 67108864_u32
  FM_INFO_FAMILY_EQUIV = 134217728_u32
  FM_INFO_DBCS_FIXED_PITCH = 268435456_u32
  FM_INFO_NONNEGATIVE_AC = 536870912_u32
  FM_INFO_IGNORE_TC_RA_ABLE = 1073741824_u32
  FM_INFO_TECH_TYPE1 = 2147483648_u32
  MAXCHARSETS = 16_u32
  FM_PANOSE_CULTURE_LATIN = 0_u32
  FM_SEL_ITALIC = 1_u32
  FM_SEL_UNDERSCORE = 2_u32
  FM_SEL_NEGATIVE = 4_u32
  FM_SEL_OUTLINED = 8_u32
  FM_SEL_STRIKEOUT = 16_u32
  FM_SEL_BOLD = 32_u32
  FM_SEL_REGULAR = 64_u32
  OPENGL_CMD = 4352_u32
  OPENGL_GETINFO = 4353_u32
  WNDOBJ_SETUP = 4354_u32
  DDI_DRIVER_VERSION_NT4 = 131072_u32
  DDI_DRIVER_VERSION_SP3 = 131075_u32
  DDI_DRIVER_VERSION_NT5 = 196608_u32
  DDI_DRIVER_VERSION_NT5_01 = 196864_u32
  DDI_DRIVER_VERSION_NT5_01_SP1 = 196865_u32
  GDI_DRIVER_VERSION = 16384_u32
  INDEX_DrvEnablePDEV = 0_i32
  INDEX_DrvCompletePDEV = 1_i32
  INDEX_DrvDisablePDEV = 2_i32
  INDEX_DrvEnableSurface = 3_i32
  INDEX_DrvDisableSurface = 4_i32
  INDEX_DrvAssertMode = 5_i32
  INDEX_DrvOffset = 6_i32
  INDEX_DrvResetPDEV = 7_i32
  INDEX_DrvDisableDriver = 8_i32
  INDEX_DrvCreateDeviceBitmap = 10_i32
  INDEX_DrvDeleteDeviceBitmap = 11_i32
  INDEX_DrvRealizeBrush = 12_i32
  INDEX_DrvDitherColor = 13_i32
  INDEX_DrvStrokePath = 14_i32
  INDEX_DrvFillPath = 15_i32
  INDEX_DrvStrokeAndFillPath = 16_i32
  INDEX_DrvPaint = 17_i32
  INDEX_DrvBitBlt = 18_i32
  INDEX_DrvCopyBits = 19_i32
  INDEX_DrvStretchBlt = 20_i32
  INDEX_DrvSetPalette = 22_i32
  INDEX_DrvTextOut = 23_i32
  INDEX_DrvEscape = 24_i32
  INDEX_DrvDrawEscape = 25_i32
  INDEX_DrvQueryFont = 26_i32
  INDEX_DrvQueryFontTree = 27_i32
  INDEX_DrvQueryFontData = 28_i32
  INDEX_DrvSetPointerShape = 29_i32
  INDEX_DrvMovePointer = 30_i32
  INDEX_DrvLineTo = 31_i32
  INDEX_DrvSendPage = 32_i32
  INDEX_DrvStartPage = 33_i32
  INDEX_DrvEndDoc = 34_i32
  INDEX_DrvStartDoc = 35_i32
  INDEX_DrvGetGlyphMode = 37_i32
  INDEX_DrvSynchronize = 38_i32
  INDEX_DrvSaveScreenBits = 40_i32
  INDEX_DrvGetModes = 41_i32
  INDEX_DrvFree = 42_i32
  INDEX_DrvDestroyFont = 43_i32
  INDEX_DrvQueryFontCaps = 44_i32
  INDEX_DrvLoadFontFile = 45_i32
  INDEX_DrvUnloadFontFile = 46_i32
  INDEX_DrvFontManagement = 47_i32
  INDEX_DrvQueryTrueTypeTable = 48_i32
  INDEX_DrvQueryTrueTypeOutline = 49_i32
  INDEX_DrvGetTrueTypeFile = 50_i32
  INDEX_DrvQueryFontFile = 51_i32
  INDEX_DrvMovePanning = 52_i32
  INDEX_DrvQueryAdvanceWidths = 53_i32
  INDEX_DrvSetPixelFormat = 54_i32
  INDEX_DrvDescribePixelFormat = 55_i32
  INDEX_DrvSwapBuffers = 56_i32
  INDEX_DrvStartBanding = 57_i32
  INDEX_DrvNextBand = 58_i32
  INDEX_DrvGetDirectDrawInfo = 59_i32
  INDEX_DrvEnableDirectDraw = 60_i32
  INDEX_DrvDisableDirectDraw = 61_i32
  INDEX_DrvQuerySpoolType = 62_i32
  INDEX_DrvIcmCreateColorTransform = 64_i32
  INDEX_DrvIcmDeleteColorTransform = 65_i32
  INDEX_DrvIcmCheckBitmapBits = 66_i32
  INDEX_DrvIcmSetDeviceGammaRamp = 67_i32
  INDEX_DrvGradientFill = 68_i32
  INDEX_DrvStretchBltROP = 69_i32
  INDEX_DrvPlgBlt = 70_i32
  INDEX_DrvAlphaBlend = 71_i32
  INDEX_DrvSynthesizeFont = 72_i32
  INDEX_DrvGetSynthesizedFontFiles = 73_i32
  INDEX_DrvTransparentBlt = 74_i32
  INDEX_DrvQueryPerBandInfo = 75_i32
  INDEX_DrvQueryDeviceSupport = 76_i32
  INDEX_DrvReserved1 = 77_i32
  INDEX_DrvReserved2 = 78_i32
  INDEX_DrvReserved3 = 79_i32
  INDEX_DrvReserved4 = 80_i32
  INDEX_DrvReserved5 = 81_i32
  INDEX_DrvReserved6 = 82_i32
  INDEX_DrvReserved7 = 83_i32
  INDEX_DrvReserved8 = 84_i32
  INDEX_DrvDeriveSurface = 85_i32
  INDEX_DrvQueryGlyphAttrs = 86_i32
  INDEX_DrvNotify = 87_i32
  INDEX_DrvSynchronizeSurface = 88_i32
  INDEX_DrvResetDevice = 89_i32
  INDEX_DrvReserved9 = 90_i32
  INDEX_DrvReserved10 = 91_i32
  INDEX_DrvReserved11 = 92_i32
  INDEX_DrvRenderHint = 93_i32
  INDEX_DrvCreateDeviceBitmapEx = 94_i32
  INDEX_DrvDeleteDeviceBitmapEx = 95_i32
  INDEX_DrvAssociateSharedSurface = 96_i32
  INDEX_DrvSynchronizeRedirectionBitmaps = 97_i32
  INDEX_DrvAccumulateD3DDirtyRect = 98_i32
  INDEX_DrvStartDxInterop = 99_i32
  INDEX_DrvEndDxInterop = 100_i32
  INDEX_DrvLockDisplayArea = 101_i32
  INDEX_DrvUnlockDisplayArea = 102_i32
  INDEX_DrvSurfaceComplete = 103_i32
  INDEX_LAST = 89_i32
  GCAPS_BEZIERS = 1_u32
  GCAPS_GEOMETRICWIDE = 2_u32
  GCAPS_ALTERNATEFILL = 4_u32
  GCAPS_WINDINGFILL = 8_u32
  GCAPS_HALFTONE = 16_u32
  GCAPS_COLOR_DITHER = 32_u32
  GCAPS_HORIZSTRIKE = 64_u32
  GCAPS_VERTSTRIKE = 128_u32
  GCAPS_OPAQUERECT = 256_u32
  GCAPS_VECTORFONT = 512_u32
  GCAPS_MONO_DITHER = 1024_u32
  GCAPS_ASYNCCHANGE = 2048_u32
  GCAPS_ASYNCMOVE = 4096_u32
  GCAPS_DONTJOURNAL = 8192_u32
  GCAPS_DIRECTDRAW = 16384_u32
  GCAPS_ARBRUSHOPAQUE = 32768_u32
  GCAPS_PANNING = 65536_u32
  GCAPS_HIGHRESTEXT = 262144_u32
  GCAPS_PALMANAGED = 524288_u32
  GCAPS_DITHERONREALIZE = 2097152_u32
  GCAPS_NO64BITMEMACCESS = 4194304_u32
  GCAPS_FORCEDITHER = 8388608_u32
  GCAPS_GRAY16 = 16777216_u32
  GCAPS_ICM = 33554432_u32
  GCAPS_CMYKCOLOR = 67108864_u32
  GCAPS_LAYERED = 134217728_u32
  GCAPS_ARBRUSHTEXT = 268435456_u32
  GCAPS_SCREENPRECISION = 536870912_u32
  GCAPS_FONT_RASTERIZER = 1073741824_u32
  GCAPS_NUP = 2147483648_u32
  GCAPS2_JPEGSRC = 1_u32
  GCAPS2_xxxx = 2_u32
  GCAPS2_PNGSRC = 8_u32
  GCAPS2_CHANGEGAMMARAMP = 16_u32
  GCAPS2_ALPHACURSOR = 32_u32
  GCAPS2_SYNCFLUSH = 64_u32
  GCAPS2_SYNCTIMER = 128_u32
  GCAPS2_ICD_MULTIMON = 256_u32
  GCAPS2_MOUSETRAILS = 512_u32
  GCAPS2_RESERVED1 = 1024_u32
  GCAPS2_REMOTEDRIVER = 1024_u32
  GCAPS2_EXCLUDELAYERED = 2048_u32
  GCAPS2_INCLUDEAPIBITMAPS = 4096_u32
  GCAPS2_SHOWHIDDENPOINTER = 8192_u32
  GCAPS2_CLEARTYPE = 16384_u32
  GCAPS2_ACC_DRIVER = 32768_u32
  GCAPS2_BITMAPEXREUSE = 65536_u32
  LA_GEOMETRIC = 1_u32
  LA_ALTERNATE = 2_u32
  LA_STARTGAP = 4_u32
  LA_STYLED = 8_u32
  JOIN_ROUND = 0_i32
  JOIN_BEVEL = 1_i32
  JOIN_MITER = 2_i32
  ENDCAP_ROUND = 0_i32
  ENDCAP_SQUARE = 1_i32
  ENDCAP_BUTT = 2_i32
  PRIMARY_ORDER_ABC = 0_u32
  PRIMARY_ORDER_ACB = 1_u32
  PRIMARY_ORDER_BAC = 2_u32
  PRIMARY_ORDER_BCA = 3_u32
  PRIMARY_ORDER_CBA = 4_u32
  PRIMARY_ORDER_CAB = 5_u32
  HT_PATSIZE_2x2 = 0_u32
  HT_PATSIZE_2x2_M = 1_u32
  HT_PATSIZE_4x4 = 2_u32
  HT_PATSIZE_4x4_M = 3_u32
  HT_PATSIZE_6x6 = 4_u32
  HT_PATSIZE_6x6_M = 5_u32
  HT_PATSIZE_8x8 = 6_u32
  HT_PATSIZE_8x8_M = 7_u32
  HT_PATSIZE_10x10 = 8_u32
  HT_PATSIZE_10x10_M = 9_u32
  HT_PATSIZE_12x12 = 10_u32
  HT_PATSIZE_12x12_M = 11_u32
  HT_PATSIZE_14x14 = 12_u32
  HT_PATSIZE_14x14_M = 13_u32
  HT_PATSIZE_16x16 = 14_u32
  HT_PATSIZE_16x16_M = 15_u32
  HT_PATSIZE_SUPERCELL = 16_u32
  HT_PATSIZE_SUPERCELL_M = 17_u32
  HT_PATSIZE_USER = 18_u32
  HT_PATSIZE_MAX_INDEX = 18_u32
  HT_PATSIZE_DEFAULT = 17_u32
  HT_USERPAT_CX_MIN = 4_u32
  HT_USERPAT_CX_MAX = 256_u32
  HT_USERPAT_CY_MIN = 4_u32
  HT_USERPAT_CY_MAX = 256_u32
  HT_FORMAT_1BPP = 0_u32
  HT_FORMAT_4BPP = 2_u32
  HT_FORMAT_4BPP_IRGB = 3_u32
  HT_FORMAT_8BPP = 4_u32
  HT_FORMAT_16BPP = 5_u32
  HT_FORMAT_24BPP = 6_u32
  HT_FORMAT_32BPP = 7_u32
  WINDDI_MAX_BROADCAST_CONTEXT = 64_u32
  HT_FLAG_SQUARE_DEVICE_PEL = 1_u32
  HT_FLAG_HAS_BLACK_DYE = 2_u32
  HT_FLAG_ADDITIVE_PRIMS = 4_u32
  HT_FLAG_USE_8BPP_BITMASK = 8_u32
  HT_FLAG_INK_HIGH_ABSORPTION = 16_u32
  HT_FLAG_INK_ABSORPTION_INDICES = 96_u32
  HT_FLAG_DO_DEVCLR_XFORM = 128_u32
  HT_FLAG_OUTPUT_CMY = 256_u32
  HT_FLAG_PRINT_DRAFT_MODE = 512_u32
  HT_FLAG_INVERT_8BPP_BITMASK_IDX = 1024_u32
  HT_FLAG_8BPP_CMY332_MASK = 4278190080_u32
  HT_FLAG_INK_ABSORPTION_IDX0 = 0_u32
  HT_FLAG_INK_ABSORPTION_IDX1 = 32_u32
  HT_FLAG_INK_ABSORPTION_IDX2 = 64_u32
  HT_FLAG_INK_ABSORPTION_IDX3 = 96_u32
  HT_FLAG_NORMAL_INK_ABSORPTION = 0_u32
  HT_FLAG_LOW_INK_ABSORPTION = 32_u32
  HT_FLAG_LOWER_INK_ABSORPTION = 64_u32
  HT_FLAG_LOWEST_INK_ABSORPTION = 96_u32
  PPC_DEFAULT = 0_u32
  PPC_UNDEFINED = 1_u32
  PPC_RGB_ORDER_VERTICAL_STRIPES = 2_u32
  PPC_BGR_ORDER_VERTICAL_STRIPES = 3_u32
  PPC_RGB_ORDER_HORIZONTAL_STRIPES = 4_u32
  PPC_BGR_ORDER_HORIZONTAL_STRIPES = 5_u32
  PPG_DEFAULT = 0_u32
  PPG_SRGB = 1_u32
  BR_DEVICE_ICM = 1_u32
  BR_HOST_ICM = 2_u32
  BR_CMYKCOLOR = 4_u32
  BR_ORIGCOLOR = 8_u32
  FO_SIM_BOLD = 8192_u32
  FO_SIM_ITALIC = 16384_u32
  FO_EM_HEIGHT = 32768_u32
  FO_GRAY16 = 65536_u32
  FO_NOGRAY16 = 131072_u32
  FO_NOHINTS = 262144_u32
  FO_NO_CHOICE = 524288_u32
  FO_CFF = 1048576_u32
  FO_POSTSCRIPT = 2097152_u32
  FO_MULTIPLEMASTER = 4194304_u32
  FO_VERT_FACE = 8388608_u32
  FO_DBCS_FONT = 16777216_u32
  FO_NOCLEARTYPE = 33554432_u32
  FO_CLEARTYPE_X = 268435456_u32
  FO_CLEARTYPE_Y = 536870912_u32
  FO_CLEARTYPENATURAL_X = 1073741824_u32
  DC_TRIVIAL = 0_u32
  DC_RECT = 1_u32
  DC_COMPLEX = 3_u32
  FC_RECT = 1_u32
  FC_RECT4 = 2_u32
  FC_COMPLEX = 3_u32
  TC_RECTANGLES = 0_u32
  TC_PATHOBJ = 2_u32
  OC_BANK_CLIP = 1_u32
  CT_RECTANGLES = 0_i32
  CD_RIGHTDOWN = 0_i32
  CD_LEFTDOWN = 1_i32
  CD_RIGHTUP = 2_i32
  CD_LEFTUP = 3_i32
  CD_ANY = 4_i32
  CD_LEFTWARDS = 1_i32
  CD_UPWARDS = 2_i32
  FO_HGLYPHS = 0_i32
  FO_GLYPHBITS = 1_i32
  FO_PATHOBJ = 2_i32
  FD_NEGATIVE_FONT = 1_i32
  FO_DEVICE_FONT = 1_i32
  FO_OUTLINE_CAPABLE = 2_i32
  SO_FLAG_DEFAULT_PLACEMENT = 1_u32
  SO_HORIZONTAL = 2_u32
  SO_VERTICAL = 4_u32
  SO_REVERSED = 8_u32
  SO_ZERO_BEARINGS = 16_u32
  SO_CHAR_INC_EQUAL_BM_BASE = 32_u32
  SO_MAXEXT_EQUAL_BM_SIDE = 64_u32
  SO_DO_NOT_SUBSTITUTE_DEVICE_FONT = 128_u32
  SO_GLYPHINDEX_TEXTOUT = 256_u32
  SO_ESC_NOT_ORIENT = 512_u32
  SO_DXDY = 1024_u32
  SO_CHARACTER_EXTRA = 2048_u32
  SO_BREAK_EXTRA = 4096_u32
  FO_ATTR_MODE_ROTATE = 1_u32
  PAL_INDEXED = 1_u32
  PAL_BITFIELDS = 2_u32
  PAL_RGB = 4_u32
  PAL_BGR = 8_u32
  PAL_CMYK = 16_u32
  PO_BEZIERS = 1_u32
  PO_ELLIPSE = 2_u32
  PO_ALL_INTEGERS = 4_u32
  PO_ENUM_AS_INTEGERS = 8_u32
  PO_WIDENED = 16_u32
  PD_BEGINSUBPATH = 1_u32
  PD_ENDSUBPATH = 2_u32
  PD_RESETSTYLE = 4_u32
  PD_CLOSEFIGURE = 8_u32
  PD_BEZIERS = 16_u32
  SGI_EXTRASPACE = 0_u32
  STYPE_BITMAP = 0_i32
  STYPE_DEVBITMAP = 3_i32
  BMF_1BPP = 1_i32
  BMF_4BPP = 2_i32
  BMF_8BPP = 3_i32
  BMF_16BPP = 4_i32
  BMF_24BPP = 5_i32
  BMF_32BPP = 6_i32
  BMF_4RLE = 7_i32
  BMF_8RLE = 8_i32
  BMF_JPEG = 9_i32
  BMF_PNG = 10_i32
  BMF_TOPDOWN = 1_u32
  BMF_NOZEROINIT = 2_u32
  BMF_DONTCACHE = 4_u32
  BMF_USERMEM = 8_u32
  BMF_KMSECTION = 16_u32
  BMF_NOTSYSMEM = 32_u32
  BMF_WINDOW_BLT = 64_u32
  BMF_UMPDMEM = 128_u32
  BMF_TEMP_ALPHA = 256_u32
  BMF_ACC_NOTIFY = 32768_u32
  BMF_RMT_ENTER = 16384_u32
  BMF_RESERVED = 15872_u32
  GX_IDENTITY = 0_i32
  GX_OFFSET = 1_i32
  GX_SCALE = 2_i32
  GX_GENERAL = 3_i32
  XF_LTOL = 0_i32
  XF_INV_LTOL = 1_i32
  XF_LTOFX = 2_i32
  XF_INV_FXTOL = 3_i32
  XO_TRIVIAL = 1_u32
  XO_TABLE = 2_u32
  XO_TO_MONO = 4_u32
  XO_FROM_CMYK = 8_u32
  XO_DEVICE_ICM = 16_u32
  XO_HOST_ICM = 32_u32
  XO_SRCPALETTE = 1_u32
  XO_DESTPALETTE = 2_u32
  XO_DESTDCPALETTE = 3_u32
  XO_SRCBITFIELDS = 4_u32
  XO_DESTBITFIELDS = 5_u32
  HOOK_BITBLT = 1_u32
  HOOK_STRETCHBLT = 2_u32
  HOOK_PLGBLT = 4_u32
  HOOK_TEXTOUT = 8_u32
  HOOK_PAINT = 16_u32
  HOOK_STROKEPATH = 32_u32
  HOOK_FILLPATH = 64_u32
  HOOK_STROKEANDFILLPATH = 128_u32
  HOOK_LINETO = 256_u32
  HOOK_COPYBITS = 1024_u32
  HOOK_MOVEPANNING = 2048_u32
  HOOK_SYNCHRONIZE = 4096_u32
  HOOK_STRETCHBLTROP = 8192_u32
  HOOK_SYNCHRONIZEACCESS = 16384_u32
  HOOK_TRANSPARENTBLT = 32768_u32
  HOOK_ALPHABLEND = 65536_u32
  HOOK_GRADIENTFILL = 131072_u32
  HOOK_FLAGS = 243199_u32
  MS_NOTSYSTEMMEMORY = 1_u32
  MS_SHAREDACCESS = 2_u32
  MS_CDDDEVICEBITMAP = 4_u32
  MS_REUSEDDEVICEBITMAP = 8_u32
  DRVQUERY_USERMODE = 1_u32
  HS_DDI_MAX = 6_u32
  DRD_SUCCESS = 0_u32
  DRD_ERROR = 1_u32
  SS_SAVE = 0_u32
  SS_RESTORE = 1_u32
  SS_FREE = 2_u32
  CDBEX_REDIRECTION = 1_u32
  CDBEX_DXINTEROP = 2_u32
  CDBEX_NTSHAREDSURFACEHANDLE = 4_u32
  CDBEX_CROSSADAPTER = 8_u32
  CDBEX_REUSE = 16_u32
  WINDDI_MAXSETPALETTECOLORS = 256_u32
  WINDDI_MAXSETPALETTECOLORINDEX = 255_u32
  DM_DEFAULT = 1_u32
  DM_MONOCHROME = 2_u32
  DCR_SOLID = 0_u32
  DCR_DRIVER = 1_u32
  DCR_HALFTONE = 2_u32
  RB_DITHERCOLOR = -2147483648_i32
  QFT_LIGATURES = 1_i32
  QFT_KERNPAIRS = 2_i32
  QFT_GLYPHSET = 3_i32
  QFD_GLYPHANDBITMAP = 1_i32
  QFD_GLYPHANDOUTLINE = 2_i32
  QFD_MAXEXTENTS = 3_i32
  QFD_TT_GLYPHANDBITMAP = 4_i32
  QFD_TT_GRAY1_BITMAP = 5_i32
  QFD_TT_GRAY2_BITMAP = 6_i32
  QFD_TT_GRAY4_BITMAP = 8_i32
  QFD_TT_GRAY8_BITMAP = 9_i32
  QFD_TT_MONO_BITMAP = 5_i32
  QC_OUTLINES = 1_u32
  QC_1BIT = 2_u32
  QC_4BIT = 4_u32
  FF_SIGNATURE_VERIFIED = 1_u32
  FF_IGNORED_SIGNATURE = 2_u32
  QAW_GETWIDTHS = 0_u32
  QAW_GETEASYWIDTHS = 1_u32
  TTO_METRICS_ONLY = 1_u32
  TTO_QUBICS = 2_u32
  TTO_UNHINTED = 4_u32
  QFF_DESCRIPTION = 1_i32
  QFF_NUMFACES = 2_i32
  FP_ALTERNATEMODE = 1_i32
  FP_WINDINGMODE = 2_i32
  SPS_ERROR = 0_u32
  SPS_DECLINE = 1_u32
  SPS_ACCEPT_NOEXCLUDE = 2_u32
  SPS_ACCEPT_EXCLUDE = 3_u32
  SPS_ACCEPT_SYNCHRONOUS = 4_u32
  SPS_CHANGE = 1_i32
  SPS_ASYNCCHANGE = 2_i32
  SPS_ANIMATESTART = 4_i32
  SPS_ANIMATEUPDATE = 8_i32
  SPS_ALPHA = 16_i32
  SPS_RESERVED = 32_i32
  SPS_RESERVED1 = 64_i32
  SPS_FLAGSMASK = 255_i32
  SPS_LENGTHMASK = 3840_i32
  SPS_FREQMASK = 1044480_i32
  ED_ABORTDOC = 1_u32
  IGRF_RGB_256BYTES = 0_u32
  IGRF_RGB_256WORDS = 1_u32
  QDS_CHECKJPEGFORMAT = 0_u32
  QDS_CHECKPNGFORMAT = 1_u32
  DSS_TIMER_EVENT = 1_u32
  DSS_FLUSH_EVENT = 2_u32
  DSS_RESERVED = 4_u32
  DSS_RESERVED1 = 8_u32
  DSS_RESERVED2 = 16_u32
  DN_ACCELERATION_LEVEL = 1_u32
  DN_DEVICE_ORIGIN = 2_u32
  DN_SLEEP_MODE = 3_u32
  DN_DRAWING_BEGIN = 4_u32
  DN_ASSOCIATE_WINDOW = 5_u32
  DN_COMPOSITION_CHANGED = 6_u32
  DN_DRAWING_BEGIN_APIBITMAP = 7_u32
  DN_SURFOBJ_DESTRUCTION = 8_u32
  WOC_RGN_CLIENT_DELTA = 1_u32
  WOC_RGN_CLIENT = 2_u32
  WOC_RGN_SURFACE_DELTA = 4_u32
  WOC_RGN_SURFACE = 8_u32
  WOC_CHANGED = 16_u32
  WOC_DELETE = 32_u32
  WOC_DRAWN = 64_u32
  WOC_SPRITE_OVERLAP = 128_u32
  WOC_SPRITE_NO_OVERLAP = 256_u32
  WOC_RGN_SPRITE = 512_u32
  WO_RGN_CLIENT_DELTA = 1_u32
  WO_RGN_CLIENT = 2_u32
  WO_RGN_SURFACE_DELTA = 4_u32
  WO_RGN_SURFACE = 8_u32
  WO_RGN_UPDATE_ALL = 16_u32
  WO_RGN_WINDOW = 32_u32
  WO_DRAW_NOTIFY = 64_u32
  WO_SPRITE_NOTIFY = 128_u32
  WO_RGN_DESKTOP_COORD = 256_u32
  WO_RGN_SPRITE = 512_u32
  EHN_RESTORED = 0_u32
  EHN_ERROR = 1_u32
  ECS_TEARDOWN = 1_u32
  ECS_REDRAW = 2_u32
  DEVHTADJF_COLOR_DEVICE = 1_u32
  DEVHTADJF_ADDITIVE_DEVICE = 2_u32
  FL_ZERO_MEMORY = 1_u32
  FL_NONPAGED_MEMORY = 2_u32
  FL_NON_SESSION = 4_u32
  QSA_MMX = 256_u32
  QSA_SSE = 8192_u32
  QSA_3DNOW = 16384_u32
  QSA_SSE1 = 8192_u32
  QSA_SSE2 = 65536_u32
  QSA_SSE3 = 524288_u32
  ENG_FNT_CACHE_READ_FAULT = 1_u32
  ENG_FNT_CACHE_WRITE_FAULT = 2_u32
  DRH_APIBITMAP = 1_u32
  MC_CAPS_NONE = 0_u32
  MC_CAPS_MONITOR_TECHNOLOGY_TYPE = 1_u32
  MC_CAPS_BRIGHTNESS = 2_u32
  MC_CAPS_CONTRAST = 4_u32
  MC_CAPS_COLOR_TEMPERATURE = 8_u32
  MC_CAPS_RED_GREEN_BLUE_GAIN = 16_u32
  MC_CAPS_RED_GREEN_BLUE_DRIVE = 32_u32
  MC_CAPS_DEGAUSS = 64_u32
  MC_CAPS_DISPLAY_AREA_POSITION = 128_u32
  MC_CAPS_DISPLAY_AREA_SIZE = 256_u32
  MC_CAPS_RESTORE_FACTORY_DEFAULTS = 1024_u32
  MC_CAPS_RESTORE_FACTORY_COLOR_DEFAULTS = 2048_u32
  MC_RESTORE_FACTORY_DEFAULTS_ENABLES_MONITOR_SETTINGS = 4096_u32
  MC_SUPPORTED_COLOR_TEMPERATURE_NONE = 0_u32
  MC_SUPPORTED_COLOR_TEMPERATURE_4000K = 1_u32
  MC_SUPPORTED_COLOR_TEMPERATURE_5000K = 2_u32
  MC_SUPPORTED_COLOR_TEMPERATURE_6500K = 4_u32
  MC_SUPPORTED_COLOR_TEMPERATURE_7500K = 8_u32
  MC_SUPPORTED_COLOR_TEMPERATURE_8200K = 16_u32
  MC_SUPPORTED_COLOR_TEMPERATURE_9300K = 32_u32
  MC_SUPPORTED_COLOR_TEMPERATURE_10000K = 64_u32
  MC_SUPPORTED_COLOR_TEMPERATURE_11500K = 128_u32
  PHYSICAL_MONITOR_DESCRIPTION_SIZE = 128_u32
  GETCONNECTEDIDS_TARGET = 0_u32
  GETCONNECTEDIDS_SOURCE = 1_u32
  S_INIT = 2_u32
  SETCONFIGURATION_STATUS_APPLIED = 0_u32
  SETCONFIGURATION_STATUS_ADDITIONAL = 1_u32
  SETCONFIGURATION_STATUS_OVERRIDDEN = 2_u32

  alias PFN = Proc(LibC::IntPtrT)
  alias FREEOBJPROC = Proc(DRIVEROBJ*, LibC::BOOL)
  alias WNDOBJCHANGEPROC = Proc(WNDOBJ*, UInt32, Void)
  alias SORTCOMP = Proc(Void*, Void*, Int32)
  alias PFN_DrvEnableDriver = Proc(UInt32, UInt32, DRVENABLEDATA*, LibC::BOOL)
  alias PFN_DrvEnablePDEV = Proc(DEVMODEW*, LibC::LPWSTR, UInt32, HSURF*, UInt32, GDIINFO*, UInt32, DEVINFO*, HDEV, LibC::LPWSTR, LibC::HANDLE, DHPDEV)
  alias PFN_DrvCompletePDEV = Proc(DHPDEV, HDEV, Void)
  alias PFN_DrvResetDevice = Proc(DHPDEV, Void*, UInt32)
  alias PFN_DrvDisablePDEV = Proc(DHPDEV, Void)
  alias PFN_DrvSynchronize = Proc(DHPDEV, RECTL*, Void)
  alias PFN_DrvEnableSurface = Proc(DHPDEV, HSURF)
  alias PFN_DrvDisableDriver = Proc(Void)
  alias PFN_DrvDisableSurface = Proc(DHPDEV, Void)
  alias PFN_DrvAssertMode = Proc(DHPDEV, LibC::BOOL, LibC::BOOL)
  alias PFN_DrvTextOut = Proc(SURFOBJ*, STROBJ*, FONTOBJ*, CLIPOBJ*, RECTL*, RECTL*, BRUSHOBJ*, BRUSHOBJ*, POINTL*, UInt32, LibC::BOOL)
  alias PFN_DrvStretchBlt = Proc(SURFOBJ*, SURFOBJ*, SURFOBJ*, CLIPOBJ*, XLATEOBJ*, COLORADJUSTMENT*, POINTL*, RECTL*, RECTL*, POINTL*, UInt32, LibC::BOOL)
  alias PFN_DrvStretchBltROP = Proc(SURFOBJ*, SURFOBJ*, SURFOBJ*, CLIPOBJ*, XLATEOBJ*, COLORADJUSTMENT*, POINTL*, RECTL*, RECTL*, POINTL*, UInt32, BRUSHOBJ*, UInt32, LibC::BOOL)
  alias PFN_DrvTransparentBlt = Proc(SURFOBJ*, SURFOBJ*, CLIPOBJ*, XLATEOBJ*, RECTL*, RECTL*, UInt32, UInt32, LibC::BOOL)
  alias PFN_DrvPlgBlt = Proc(SURFOBJ*, SURFOBJ*, SURFOBJ*, CLIPOBJ*, XLATEOBJ*, COLORADJUSTMENT*, POINTL*, POINTFIX*, RECTL*, POINTL*, UInt32, LibC::BOOL)
  alias PFN_DrvBitBlt = Proc(SURFOBJ*, SURFOBJ*, SURFOBJ*, CLIPOBJ*, XLATEOBJ*, RECTL*, POINTL*, POINTL*, BRUSHOBJ*, POINTL*, UInt32, LibC::BOOL)
  alias PFN_DrvRealizeBrush = Proc(BRUSHOBJ*, SURFOBJ*, SURFOBJ*, SURFOBJ*, XLATEOBJ*, UInt32, LibC::BOOL)
  alias PFN_DrvCopyBits = Proc(SURFOBJ*, SURFOBJ*, CLIPOBJ*, XLATEOBJ*, RECTL*, POINTL*, LibC::BOOL)
  alias PFN_DrvDitherColor = Proc(DHPDEV, UInt32, UInt32, UInt32*, UInt32)
  alias PFN_DrvCreateDeviceBitmap = Proc(DHPDEV, SIZE, UInt32, HBITMAP)
  alias PFN_DrvDeleteDeviceBitmap = Proc(DHSURF, Void)
  alias PFN_DrvSetPalette = Proc(DHPDEV, PALOBJ*, UInt32, UInt32, UInt32, LibC::BOOL)
  alias PFN_DrvEscape = Proc(SURFOBJ*, UInt32, UInt32, Void*, UInt32, Void*, UInt32)
  alias PFN_DrvDrawEscape = Proc(SURFOBJ*, UInt32, CLIPOBJ*, RECTL*, UInt32, Void*, UInt32)
  alias PFN_DrvQueryFont = Proc(DHPDEV, LibC::UINT_PTR, UInt32, LibC::UINT_PTR*, IFIMETRICS*)
  alias PFN_DrvQueryFontTree = Proc(DHPDEV, LibC::UINT_PTR, UInt32, UInt32, LibC::UINT_PTR*, Void*)
  alias PFN_DrvQueryFontData = Proc(DHPDEV, FONTOBJ*, UInt32, UInt32, GLYPHDATA*, Void*, UInt32, Int32)
  alias PFN_DrvFree = Proc(Void*, LibC::UINT_PTR, Void)
  alias PFN_DrvDestroyFont = Proc(FONTOBJ*, Void)
  alias PFN_DrvQueryFontCaps = Proc(UInt32, UInt32*, Int32)
  alias PFN_DrvLoadFontFile = Proc(UInt32, LibC::UINT_PTR*, Void**, UInt32*, DESIGNVECTOR*, UInt32, UInt32, LibC::UINT_PTR)
  alias PFN_DrvUnloadFontFile = Proc(LibC::UINT_PTR, LibC::BOOL)
  alias PFN_DrvSetPointerShape = Proc(SURFOBJ*, SURFOBJ*, SURFOBJ*, XLATEOBJ*, Int32, Int32, Int32, Int32, RECTL*, UInt32, UInt32)
  alias PFN_DrvMovePointer = Proc(SURFOBJ*, Int32, Int32, RECTL*, Void)
  alias PFN_DrvSendPage = Proc(SURFOBJ*, LibC::BOOL)
  alias PFN_DrvStartPage = Proc(SURFOBJ*, LibC::BOOL)
  alias PFN_DrvStartDoc = Proc(SURFOBJ*, LibC::LPWSTR, UInt32, LibC::BOOL)
  alias PFN_DrvEndDoc = Proc(SURFOBJ*, UInt32, LibC::BOOL)
  alias PFN_DrvQuerySpoolType = Proc(DHPDEV, LibC::LPWSTR, LibC::BOOL)
  alias PFN_DrvLineTo = Proc(SURFOBJ*, CLIPOBJ*, BRUSHOBJ*, Int32, Int32, Int32, Int32, RECTL*, UInt32, LibC::BOOL)
  alias PFN_DrvStrokePath = Proc(SURFOBJ*, PATHOBJ*, CLIPOBJ*, XFORMOBJ*, BRUSHOBJ*, POINTL*, LINEATTRS*, UInt32, LibC::BOOL)
  alias PFN_DrvFillPath = Proc(SURFOBJ*, PATHOBJ*, CLIPOBJ*, BRUSHOBJ*, POINTL*, UInt32, UInt32, LibC::BOOL)
  alias PFN_DrvStrokeAndFillPath = Proc(SURFOBJ*, PATHOBJ*, CLIPOBJ*, XFORMOBJ*, BRUSHOBJ*, LINEATTRS*, BRUSHOBJ*, POINTL*, UInt32, UInt32, LibC::BOOL)
  alias PFN_DrvPaint = Proc(SURFOBJ*, CLIPOBJ*, BRUSHOBJ*, POINTL*, UInt32, LibC::BOOL)
  alias PFN_DrvGetGlyphMode = Proc(DHPDEV, FONTOBJ*, UInt32)
  alias PFN_DrvResetPDEV = Proc(DHPDEV, DHPDEV, LibC::BOOL)
  alias PFN_DrvSaveScreenBits = Proc(SURFOBJ*, UInt32, LibC::UINT_PTR, RECTL*, LibC::UINT_PTR)
  alias PFN_DrvGetModes = Proc(LibC::HANDLE, UInt32, DEVMODEW*, UInt32)
  alias PFN_DrvQueryTrueTypeTable = Proc(LibC::UINT_PTR, UInt32, UInt32, Int32, UInt32, UInt8*, UInt8**, UInt32*, Int32)
  alias PFN_DrvQueryTrueTypeSection = Proc(UInt32, UInt32, UInt32, LibC::HANDLE*, Int32*, Int32)
  alias PFN_DrvQueryTrueTypeOutline = Proc(DHPDEV, FONTOBJ*, UInt32, LibC::BOOL, GLYPHDATA*, UInt32, TTPOLYGONHEADER*, Int32)
  alias PFN_DrvGetTrueTypeFile = Proc(LibC::UINT_PTR, UInt32*, Void*)
  alias PFN_DrvQueryFontFile = Proc(LibC::UINT_PTR, UInt32, UInt32, UInt32*, Int32)
  alias PFN_DrvQueryGlyphAttrs = Proc(FONTOBJ*, UInt32, FD_GLYPHATTR*)
  alias PFN_DrvQueryAdvanceWidths = Proc(DHPDEV, FONTOBJ*, UInt32, UInt32*, Void*, UInt32, LibC::BOOL)
  alias PFN_DrvFontManagement = Proc(SURFOBJ*, FONTOBJ*, UInt32, UInt32, Void*, UInt32, Void*, UInt32)
  alias PFN_DrvSetPixelFormat = Proc(SURFOBJ*, Int32, LibC::HANDLE, LibC::BOOL)
  alias PFN_DrvDescribePixelFormat = Proc(DHPDEV, Int32, UInt32, PIXELFORMATDESCRIPTOR*, Int32)
  alias PFN_DrvSwapBuffers = Proc(SURFOBJ*, WNDOBJ*, LibC::BOOL)
  alias PFN_DrvStartBanding = Proc(SURFOBJ*, POINTL*, LibC::BOOL)
  alias PFN_DrvNextBand = Proc(SURFOBJ*, POINTL*, LibC::BOOL)
  alias PFN_DrvQueryPerBandInfo = Proc(SURFOBJ*, PERBANDINFO*, LibC::BOOL)
  alias PFN_DrvEnableDirectDraw = Proc(DHPDEV, DD_CALLBACKS*, DD_SURFACECALLBACKS*, DD_PALETTECALLBACKS*, LibC::BOOL)
  alias PFN_DrvDisableDirectDraw = Proc(DHPDEV, Void)
  alias PFN_DrvGetDirectDrawInfo = Proc(DHPDEV, DD_HALINFO*, UInt32*, VIDEOMEMORY*, UInt32*, UInt32*, LibC::BOOL)
  alias PFN_DrvIcmCreateColorTransform = Proc(DHPDEV, LOGCOLORSPACEW*, Void*, UInt32, Void*, UInt32, Void*, UInt32, UInt32, LibC::HANDLE)
  alias PFN_DrvIcmDeleteColorTransform = Proc(DHPDEV, LibC::HANDLE, LibC::BOOL)
  alias PFN_DrvIcmCheckBitmapBits = Proc(DHPDEV, LibC::HANDLE, SURFOBJ*, UInt8*, LibC::BOOL)
  alias PFN_DrvIcmSetDeviceGammaRamp = Proc(DHPDEV, UInt32, Void*, LibC::BOOL)
  alias PFN_DrvAlphaBlend = Proc(SURFOBJ*, SURFOBJ*, CLIPOBJ*, XLATEOBJ*, RECTL*, RECTL*, BLENDOBJ*, LibC::BOOL)
  alias PFN_DrvGradientFill = Proc(SURFOBJ*, CLIPOBJ*, XLATEOBJ*, TRIVERTEX*, UInt32, Void*, UInt32, RECTL*, POINTL*, UInt32, LibC::BOOL)
  alias PFN_DrvQueryDeviceSupport = Proc(SURFOBJ*, XLATEOBJ*, XFORMOBJ*, UInt32, UInt32, Void*, UInt32, Void*, LibC::BOOL)
  alias PFN_DrvDeriveSurface = Proc(DD_DIRECTDRAW_GLOBAL*, DD_SURFACE_LOCAL*, HBITMAP)
  alias PFN_DrvSynchronizeSurface = Proc(SURFOBJ*, RECTL*, UInt32, Void)
  alias PFN_DrvNotify = Proc(SURFOBJ*, UInt32, Void*, Void)
  alias PFN_DrvRenderHint = Proc(DHPDEV, UInt32, LibC::UINT_PTR, Void*, Int32)
  alias PFN_EngCreateRectRgn = Proc(Int32, Int32, Int32, Int32, LibC::HANDLE)
  alias PFN_EngDeleteRgn = Proc(LibC::HANDLE, Void)
  alias PFN_EngCombineRgn = Proc(LibC::HANDLE, LibC::HANDLE, LibC::HANDLE, Int32, Int32)
  alias PFN_EngCopyRgn = Proc(LibC::HANDLE, LibC::HANDLE, Int32)
  alias PFN_EngIntersectRgn = Proc(LibC::HANDLE, LibC::HANDLE, LibC::HANDLE, Int32)
  alias PFN_EngSubtractRgn = Proc(LibC::HANDLE, LibC::HANDLE, LibC::HANDLE, Int32)
  alias PFN_EngUnionRgn = Proc(LibC::HANDLE, LibC::HANDLE, LibC::HANDLE, Int32)
  alias PFN_EngXorRgn = Proc(LibC::HANDLE, LibC::HANDLE, LibC::HANDLE, Int32)
  alias PFN_DrvCreateDeviceBitmapEx = Proc(DHPDEV, SIZE, UInt32, UInt32, DHSURF, UInt32, UInt32, LibC::HANDLE*, HBITMAP)
  alias PFN_DrvDeleteDeviceBitmapEx = Proc(DHSURF, Void)
  alias PFN_DrvAssociateSharedSurface = Proc(SURFOBJ*, LibC::HANDLE, LibC::HANDLE, SIZE, LibC::BOOL)
  alias PFN_DrvSynchronizeRedirectionBitmaps = Proc(DHPDEV, UInt64*, NTSTATUS)
  alias PFN_DrvAccumulateD3DDirtyRect = Proc(SURFOBJ*, CDDDXGK_REDIRBITMAPPRESENTINFO*, LibC::BOOL)
  alias PFN_DrvStartDxInterop = Proc(SURFOBJ*, LibC::BOOL, Void*, LibC::BOOL)
  alias PFN_DrvEndDxInterop = Proc(SURFOBJ*, LibC::BOOL, LibC::BOOL*, Void*, LibC::BOOL)
  alias PFN_DrvLockDisplayArea = Proc(DHPDEV, RECTL*, Void)
  alias PFN_DrvUnlockDisplayArea = Proc(DHPDEV, RECTL*, Void)
  alias PFN_DrvSurfaceComplete = Proc(DHPDEV, LibC::HANDLE, LibC::BOOL)
  alias PVIDEO_WIN32K_CALLOUT = Proc(Void*, Void)


  enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY : Int32
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_OTHER = -1
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HD15 = 0
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SVIDEO = 1
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPOSITE_VIDEO = 2
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPONENT_VIDEO = 3
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DVI = 4
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HDMI = 5
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_LVDS = 6
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_D_JPN = 8
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDI = 9
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EXTERNAL = 10
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EMBEDDED = 11
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EXTERNAL = 12
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EMBEDDED = 13
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDTVDONGLE = 14
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_MIRACAST = 15
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INDIRECT_WIRED = 16
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INDIRECT_VIRTUAL = 17
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_USB_TUNNEL = 18
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INTERNAL = -2147483648
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_FORCE_UINT32 = -1
  end

  enum DISPLAYCONFIG_SCANLINE_ORDERING : Int32
    DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED = 0
    DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE = 1
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED = 2
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST = 2
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST = 3
    DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32 = -1
  end

  enum DISPLAYCONFIG_SCALING : Int32
    DISPLAYCONFIG_SCALING_IDENTITY = 1
    DISPLAYCONFIG_SCALING_CENTERED = 2
    DISPLAYCONFIG_SCALING_STRETCHED = 3
    DISPLAYCONFIG_SCALING_ASPECTRATIOCENTEREDMAX = 4
    DISPLAYCONFIG_SCALING_CUSTOM = 5
    DISPLAYCONFIG_SCALING_PREFERRED = 128
    DISPLAYCONFIG_SCALING_FORCE_UINT32 = -1
  end

  enum DISPLAYCONFIG_ROTATION : Int32
    DISPLAYCONFIG_ROTATION_IDENTITY = 1
    DISPLAYCONFIG_ROTATION_ROTATE90 = 2
    DISPLAYCONFIG_ROTATION_ROTATE180 = 3
    DISPLAYCONFIG_ROTATION_ROTATE270 = 4
    DISPLAYCONFIG_ROTATION_FORCE_UINT32 = -1
  end

  enum DISPLAYCONFIG_MODE_INFO_TYPE : Int32
    DISPLAYCONFIG_MODE_INFO_TYPE_SOURCE = 1
    DISPLAYCONFIG_MODE_INFO_TYPE_TARGET = 2
    DISPLAYCONFIG_MODE_INFO_TYPE_DESKTOP_IMAGE = 3
    DISPLAYCONFIG_MODE_INFO_TYPE_FORCE_UINT32 = -1
  end

  enum DISPLAYCONFIG_PIXELFORMAT : Int32
    DISPLAYCONFIG_PIXELFORMAT_8BPP = 1
    DISPLAYCONFIG_PIXELFORMAT_16BPP = 2
    DISPLAYCONFIG_PIXELFORMAT_24BPP = 3
    DISPLAYCONFIG_PIXELFORMAT_32BPP = 4
    DISPLAYCONFIG_PIXELFORMAT_NONGDI = 5
    DISPLAYCONFIG_PIXELFORMAT_FORCE_UINT32 = -1
  end

  enum DISPLAYCONFIG_TOPOLOGY_ID : Int32
    DISPLAYCONFIG_TOPOLOGY_INTERNAL = 1
    DISPLAYCONFIG_TOPOLOGY_CLONE = 2
    DISPLAYCONFIG_TOPOLOGY_EXTEND = 4
    DISPLAYCONFIG_TOPOLOGY_EXTERNAL = 8
    DISPLAYCONFIG_TOPOLOGY_FORCE_UINT32 = -1
  end

  enum DISPLAYCONFIG_DEVICE_INFO_TYPE : Int32
    DISPLAYCONFIG_DEVICE_INFO_GET_SOURCE_NAME = 1
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_NAME = 2
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_PREFERRED_MODE = 3
    DISPLAYCONFIG_DEVICE_INFO_GET_ADAPTER_NAME = 4
    DISPLAYCONFIG_DEVICE_INFO_SET_TARGET_PERSISTENCE = 5
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_BASE_TYPE = 6
    DISPLAYCONFIG_DEVICE_INFO_GET_SUPPORT_VIRTUAL_RESOLUTION = 7
    DISPLAYCONFIG_DEVICE_INFO_SET_SUPPORT_VIRTUAL_RESOLUTION = 8
    DISPLAYCONFIG_DEVICE_INFO_GET_ADVANCED_COLOR_INFO = 9
    DISPLAYCONFIG_DEVICE_INFO_SET_ADVANCED_COLOR_STATE = 10
    DISPLAYCONFIG_DEVICE_INFO_GET_SDR_WHITE_LEVEL = 11
    DISPLAYCONFIG_DEVICE_INFO_GET_MONITOR_SPECIALIZATION = 12
    DISPLAYCONFIG_DEVICE_INFO_SET_MONITOR_SPECIALIZATION = 13
    DISPLAYCONFIG_DEVICE_INFO_FORCE_UINT32 = -1
  end

  enum MC_VCP_CODE_TYPE : Int32
    MC_MOMENTARY = 0
    MC_SET_PARAMETER = 1
  end

  enum MC_DISPLAY_TECHNOLOGY_TYPE : Int32
    MC_SHADOW_MASK_CATHODE_RAY_TUBE = 0
    MC_APERTURE_GRILL_CATHODE_RAY_TUBE = 1
    MC_THIN_FILM_TRANSISTOR = 2
    MC_LIQUID_CRYSTAL_ON_SILICON = 3
    MC_PLASMA = 4
    MC_ORGANIC_LIGHT_EMITTING_DIODE = 5
    MC_ELECTROLUMINESCENT = 6
    MC_MICROELECTROMECHANICAL = 7
    MC_FIELD_EMISSION_DEVICE = 8
  end

  enum MC_DRIVE_TYPE : Int32
    MC_RED_DRIVE = 0
    MC_GREEN_DRIVE = 1
    MC_BLUE_DRIVE = 2
  end

  enum MC_GAIN_TYPE : Int32
    MC_RED_GAIN = 0
    MC_GREEN_GAIN = 1
    MC_BLUE_GAIN = 2
  end

  enum MC_POSITION_TYPE : Int32
    MC_HORIZONTAL_POSITION = 0
    MC_VERTICAL_POSITION = 1
  end

  enum MC_SIZE_TYPE : Int32
    MC_WIDTH = 0
    MC_HEIGHT = 1
  end

  enum MC_COLOR_TEMPERATURE : Int32
    MC_COLOR_TEMPERATURE_UNKNOWN = 0
    MC_COLOR_TEMPERATURE_4000K = 1
    MC_COLOR_TEMPERATURE_5000K = 2
    MC_COLOR_TEMPERATURE_6500K = 3
    MC_COLOR_TEMPERATURE_7500K = 4
    MC_COLOR_TEMPERATURE_8200K = 5
    MC_COLOR_TEMPERATURE_9300K = 6
    MC_COLOR_TEMPERATURE_10000K = 7
    MC_COLOR_TEMPERATURE_11500K = 8
  end

  enum ENG_SYSTEM_ATTRIBUTE : Int32
    EngProcessorFeature = 1
    EngNumberOfProcessors = 2
    EngOptimumAvailableUserMemory = 3
    EngOptimumAvailableSystemMemory = 4
  end

  enum ENG_DEVICE_ATTRIBUTE : Int32
    QDA_RESERVED = 0
    QDA_ACCELERATION_LEVEL = 1
  end

  enum VIDEO_WIN32K_CALLBACKS_PARAMS_TYPE : Int32
    VideoPowerNotifyCallout = 1
    VideoEnumChildPdoNotifyCallout = 3
    VideoFindAdapterCallout = 4
    VideoPnpNotifyCallout = 7
    VideoDxgkDisplaySwitchCallout = 8
    VideoDxgkFindAdapterTdrCallout = 10
    VideoDxgkHardwareProtectionTeardown = 11
    VideoRepaintDesktop = 12
    VideoUpdateCursor = 13
    VideoDisableMultiPlaneOverlay = 14
    VideoDesktopDuplicationChange = 15
    VideoBlackScreenDiagnostics = 16
  end

  enum BlackScreenDiagnosticsCalloutParam : Int32
    BlackScreenDiagnosticsData = 1
    BlackScreenDisplayRecovery = 2
  end

  enum VIDEO_BANK_TYPE : Int32
    VideoNotBanked = 0
    VideoBanked1RW = 1
    VideoBanked1R1W = 2
    VideoBanked2RW = 3
    NumVideoBankTypes = 4
  end

  enum VIDEO_POWER_STATE : Int32
    VideoPowerUnspecified = 0
    VideoPowerOn = 1
    VideoPowerStandBy = 2
    VideoPowerSuspend = 3
    VideoPowerOff = 4
    VideoPowerHibernate = 5
    VideoPowerShutdown = 6
    VideoPowerMaximum = 7
  end

  enum BRIGHTNESS_INTERFACE_VERSION : Int32
    BRIGHTNESS_INTERFACE_VERSION_1 = 1
    BRIGHTNESS_INTERFACE_VERSION_2 = 2
    BRIGHTNESS_INTERFACE_VERSION_3 = 3
  end

  enum BACKLIGHT_OPTIMIZATION_LEVEL : Int32
    BacklightOptimizationDisable = 0
    BacklightOptimizationDesktop = 1
    BacklightOptimizationDynamic = 2
    BacklightOptimizationDimmed = 3
    BacklightOptimizationEDR = 4
  end

  enum COLORSPACE_TRANSFORM_DATA_TYPE : Int32
    COLORSPACE_TRANSFORM_DATA_TYPE_FIXED_POINT = 0
    COLORSPACE_TRANSFORM_DATA_TYPE_FLOAT = 1
  end

  enum COLORSPACE_TRANSFORM_TARGET_CAPS_VERSION : Int32
    COLORSPACE_TRANSFORM_VERSION_DEFAULT = 0
    COLORSPACE_TRANSFORM_VERSION_1 = 1
    COLORSPACE_TRANSFORM_VERSION_NOT_SUPPORTED = 0
  end

  enum COLORSPACE_TRANSFORM_TYPE : Int32
    COLORSPACE_TRANSFORM_TYPE_UNINITIALIZED = 0
    COLORSPACE_TRANSFORM_TYPE_DEFAULT = 1
    COLORSPACE_TRANSFORM_TYPE_RGB256x3x16 = 2
    COLORSPACE_TRANSFORM_TYPE_DXGI_1 = 3
    COLORSPACE_TRANSFORM_TYPE_MATRIX_3x4 = 4
    COLORSPACE_TRANSFORM_TYPE_MATRIX_V2 = 5
  end

  enum OUTPUT_WIRE_COLOR_SPACE_TYPE : Int32
    OUTPUT_WIRE_COLOR_SPACE_G22_P709 = 0
    OUTPUT_WIRE_COLOR_SPACE_RESERVED = 4
    OUTPUT_WIRE_COLOR_SPACE_G2084_P2020 = 12
    OUTPUT_WIRE_COLOR_SPACE_G22_P709_WCG = 30
    OUTPUT_WIRE_COLOR_SPACE_G22_P2020 = 31
    OUTPUT_WIRE_COLOR_SPACE_G2084_P2020_HDR10PLUS = 32
    OUTPUT_WIRE_COLOR_SPACE_G2084_P2020_DVLL = 33
  end

  enum OUTPUT_COLOR_ENCODING : Int32
    OUTPUT_COLOR_ENCODING_RGB = 0
    OUTPUT_COLOR_ENCODING_YCBCR444 = 1
    OUTPUT_COLOR_ENCODING_YCBCR422 = 2
    OUTPUT_COLOR_ENCODING_YCBCR420 = 3
    OUTPUT_COLOR_ENCODING_INTENSITY = 4
    OUTPUT_COLOR_ENCODING_FORCE_UINT32 = -1
  end

  enum COLORSPACE_TRANSFORM_STAGE_CONTROL : Int32
    ColorSpaceTransformStageControl_No_Change = 0
    ColorSpaceTransformStageControl_Enable = 1
    ColorSpaceTransformStageControl_Bypass = 2
  end

  enum DSI_CONTROL_TRANSMISSION_MODE : Int32
    DCT_DEFAULT = 0
    DCT_FORCE_LOW_POWER = 1
    DCT_FORCE_HIGH_PERFORMANCE = 2
  end

  enum AR_STATE : Int32
    AR_ENABLED = 0
    AR_DISABLED = 1
    AR_SUPPRESSED = 2
    AR_REMOTESESSION = 4
    AR_MULTIMON = 8
    AR_NOSENSOR = 16
    AR_NOT_SUPPORTED = 32
    AR_DOCKED = 64
    AR_LAPTOP = 128
  end

  enum ORIENTATION_PREFERENCE : Int32
    ORIENTATION_PREFERENCE_NONE = 0
    ORIENTATION_PREFERENCE_LANDSCAPE = 1
    ORIENTATION_PREFERENCE_PORTRAIT = 2
    ORIENTATION_PREFERENCE_LANDSCAPE_FLIPPED = 4
    ORIENTATION_PREFERENCE_PORTRAIT_FLIPPED = 8
  end

  union DISPLAYCONFIG_VIDEO_SIGNAL_INFO_Anonymous_e__Union
    additional_signal_info : DISPLAYCONFIG_VIDEO_SIGNAL_INFO_Anonymous_e__Union_AdditionalSignalInfo_e__Struct
    video_standard : UInt32
  end
  union DISPLAYCONFIG_MODE_INFO_Anonymous_e__Union
    target_mode : DISPLAYCONFIG_TARGET_MODE
    source_mode : DISPLAYCONFIG_SOURCE_MODE
    desktop_image_info : DISPLAYCONFIG_DESKTOP_IMAGE_INFO
  end
  union DISPLAYCONFIG_PATH_SOURCE_INFO_Anonymous_e__Union
    mode_info_idx : UInt32
    anonymous : DISPLAYCONFIG_PATH_SOURCE_INFO_Anonymous_e__Union_Anonymous_e__Struct
  end
  union DISPLAYCONFIG_PATH_TARGET_INFO_Anonymous_e__Union
    mode_info_idx : UInt32
    anonymous : DISPLAYCONFIG_PATH_TARGET_INFO_Anonymous_e__Union_Anonymous_e__Struct
  end
  union DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS_Anonymous_e__Union
    anonymous : DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS_Anonymous_e__Union_Anonymous_e__Struct
    value : UInt32
  end
  union DISPLAYCONFIG_SET_TARGET_PERSISTENCE_Anonymous_e__Union
    anonymous : DISPLAYCONFIG_SET_TARGET_PERSISTENCE_Anonymous_e__Union_Anonymous_e__Struct
    value : UInt32
  end
  union DISPLAYCONFIG_SUPPORT_VIRTUAL_RESOLUTION_Anonymous_e__Union
    anonymous : DISPLAYCONFIG_SUPPORT_VIRTUAL_RESOLUTION_Anonymous_e__Union_Anonymous_e__Struct
    value : UInt32
  end
  union DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO_Anonymous_e__Union
    anonymous : DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO_Anonymous_e__Union_Anonymous_e__Struct
    value : UInt32
  end
  union DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE_Anonymous_e__Union
    anonymous : DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE_Anonymous_e__Union_Anonymous_e__Struct
    value : UInt32
  end
  union DISPLAYCONFIG_GET_MONITOR_SPECIALIZATION_Anonymous_e__Union
    anonymous : DISPLAYCONFIG_GET_MONITOR_SPECIALIZATION_Anonymous_e__Union_Anonymous_e__Struct
    value : UInt32
  end
  union DISPLAYCONFIG_SET_MONITOR_SPECIALIZATION_Anonymous_e__Union
    anonymous : DISPLAYCONFIG_SET_MONITOR_SPECIALIZATION_Anonymous_e__Union_Anonymous_e__Struct
    value : UInt32
  end
  union FLOAT_LONG
    e : Float32
    l : Int32
  end
  union GLYPHDEF
    pgb : GLYPHBITS*
    ppo : PATHOBJ*
  end
  union VIDEO_CLUT_Anonymous_e__Union
    rgb_array : VIDEO_CLUTDATA
    rgb_long : UInt32
  end
  union PANEL_QUERY_BRIGHTNESS_CAPS_Anonymous_e__Union
    anonymous : PANEL_QUERY_BRIGHTNESS_CAPS_Anonymous_e__Union_Anonymous_e__Struct
    value : UInt32
  end
  union PANEL_QUERY_BRIGHTNESS_RANGES_Anonymous_e__Union
    brightness_level : BRIGHTNESS_LEVEL
    nit_ranges : BRIGHTNESS_NIT_RANGES
  end
  union PANEL_GET_BRIGHTNESS_Anonymous_e__Union
    level : UInt8
    anonymous : PANEL_GET_BRIGHTNESS_Anonymous_e__Union_Anonymous_e__Struct
  end
  union PANEL_BRIGHTNESS_SENSOR_DATA_Anonymous_e__Union
    anonymous : PANEL_BRIGHTNESS_SENSOR_DATA_Anonymous_e__Union_Anonymous_e__Struct
    value : UInt32
  end
  union PANEL_SET_BRIGHTNESS_Anonymous_e__Union
    level : UInt8
    anonymous : PANEL_SET_BRIGHTNESS_Anonymous_e__Union_Anonymous_e__Struct
  end
  union PANEL_SET_BRIGHTNESS_STATE_Anonymous_e__Union
    anonymous : PANEL_SET_BRIGHTNESS_STATE_Anonymous_e__Union_Anonymous_e__Struct
    value : UInt32
  end
  union COLORSPACE_TRANSFORM_DATA_CAP_Anonymous_e__Union
    anonymous1 : COLORSPACE_TRANSFORM_DATA_CAP_Anonymous_e__Union_Anonymous1_e__Struct
    anonymous2 : COLORSPACE_TRANSFORM_DATA_CAP_Anonymous_e__Union_Anonymous2_e__Struct
    value : UInt32
  end
  union COLORSPACE_TRANSFORM_MATRIX_CAP_Anonymous_e__Union
    anonymous : COLORSPACE_TRANSFORM_MATRIX_CAP_Anonymous_e__Union_Anonymous_e__Struct
    value : UInt32
  end
  union COLORSPACE_TRANSFORM_Data_e__Union
    rgb256x3x16 : GAMMA_RAMP_RGB256x3x16
    dxgi1 : GAMMA_RAMP_DXGI_1
    t3x4 : COLORSPACE_TRANSFORM_3x4
    matrix_v2 : COLORSPACE_TRANSFORM_MATRIX_V2
  end
  union MIPI_DSI_PACKET_Anonymous2_e__Union
    anonymous : MIPI_DSI_PACKET_Anonymous2_e__Union_Anonymous_e__Struct
    long_write_word_count : UInt16
  end
  union MIPI_DSI_PACKET_Anonymous1_e__Union
    data_id : UInt8
    anonymous : MIPI_DSI_PACKET_Anonymous1_e__Union_Anonymous_e__Struct
  end
  union MIPI_DSI_RESET_Anonymous_e__Union
    anonymous : MIPI_DSI_RESET_Anonymous_e__Union_Anonymous_e__Struct
    results : UInt32
  end

  struct DISPLAYCONFIG_RATIONAL
    numerator : UInt32
    denominator : UInt32
  end
  struct DISPLAYCONFIG_2DREGION
    cx : UInt32
    cy : UInt32
  end
  struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO
    pixel_rate : UInt64
    h_sync_freq : DISPLAYCONFIG_RATIONAL
    v_sync_freq : DISPLAYCONFIG_RATIONAL
    active_size : DISPLAYCONFIG_2DREGION
    total_size : DISPLAYCONFIG_2DREGION
    anonymous : DISPLAYCONFIG_VIDEO_SIGNAL_INFO_Anonymous_e__Union
    scan_line_ordering : DISPLAYCONFIG_SCANLINE_ORDERING
  end
  struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO_Anonymous_e__Union_AdditionalSignalInfo_e__Struct
    _bitfield : UInt32
  end
  struct DISPLAYCONFIG_SOURCE_MODE
    width : UInt32
    height : UInt32
    pixel_format : DISPLAYCONFIG_PIXELFORMAT
    position : POINTL
  end
  struct DISPLAYCONFIG_TARGET_MODE
    target_video_signal_info : DISPLAYCONFIG_VIDEO_SIGNAL_INFO
  end
  struct DISPLAYCONFIG_DESKTOP_IMAGE_INFO
    path_source_size : POINTL
    desktop_image_region : RECTL
    desktop_image_clip : RECTL
  end
  struct DISPLAYCONFIG_MODE_INFO
    info_type : DISPLAYCONFIG_MODE_INFO_TYPE
    id : UInt32
    adapter_id : LUID
    anonymous : DISPLAYCONFIG_MODE_INFO_Anonymous_e__Union
  end
  struct DISPLAYCONFIG_PATH_SOURCE_INFO
    adapter_id : LUID
    id : UInt32
    anonymous : DISPLAYCONFIG_PATH_SOURCE_INFO_Anonymous_e__Union
    status_flags : UInt32
  end
  struct DISPLAYCONFIG_PATH_SOURCE_INFO_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt32
  end
  struct DISPLAYCONFIG_PATH_TARGET_INFO
    adapter_id : LUID
    id : UInt32
    anonymous : DISPLAYCONFIG_PATH_TARGET_INFO_Anonymous_e__Union
    output_technology : DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY
    rotation : DISPLAYCONFIG_ROTATION
    scaling : DISPLAYCONFIG_SCALING
    refresh_rate : DISPLAYCONFIG_RATIONAL
    scan_line_ordering : DISPLAYCONFIG_SCANLINE_ORDERING
    target_available : LibC::BOOL
    status_flags : UInt32
  end
  struct DISPLAYCONFIG_PATH_TARGET_INFO_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt32
  end
  struct DISPLAYCONFIG_PATH_INFO
    source_info : DISPLAYCONFIG_PATH_SOURCE_INFO
    target_info : DISPLAYCONFIG_PATH_TARGET_INFO
    flags : UInt32
  end
  struct DISPLAYCONFIG_DEVICE_INFO_HEADER
    type : DISPLAYCONFIG_DEVICE_INFO_TYPE
    size : UInt32
    adapter_id : LUID
    id : UInt32
  end
  struct DISPLAYCONFIG_SOURCE_DEVICE_NAME
    header : DISPLAYCONFIG_DEVICE_INFO_HEADER
    view_gdi_device_name : Char[32]*
  end
  struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS
    anonymous : DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS_Anonymous_e__Union
  end
  struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt32
  end
  struct DISPLAYCONFIG_TARGET_DEVICE_NAME
    header : DISPLAYCONFIG_DEVICE_INFO_HEADER
    flags : DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS
    output_technology : DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY
    edid_manufacture_id : UInt16
    edid_product_code_id : UInt16
    connector_instance : UInt32
    monitor_friendly_device_name : Char[64]*
    monitor_device_path : Char[128]*
  end
  struct DISPLAYCONFIG_TARGET_PREFERRED_MODE
    header : DISPLAYCONFIG_DEVICE_INFO_HEADER
    width : UInt32
    height : UInt32
    target_mode : DISPLAYCONFIG_TARGET_MODE
  end
  struct DISPLAYCONFIG_ADAPTER_NAME
    header : DISPLAYCONFIG_DEVICE_INFO_HEADER
    adapter_device_path : Char[128]*
  end
  struct DISPLAYCONFIG_TARGET_BASE_TYPE
    header : DISPLAYCONFIG_DEVICE_INFO_HEADER
    base_output_technology : DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY
  end
  struct DISPLAYCONFIG_SET_TARGET_PERSISTENCE
    header : DISPLAYCONFIG_DEVICE_INFO_HEADER
    anonymous : DISPLAYCONFIG_SET_TARGET_PERSISTENCE_Anonymous_e__Union
  end
  struct DISPLAYCONFIG_SET_TARGET_PERSISTENCE_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt32
  end
  struct DISPLAYCONFIG_SUPPORT_VIRTUAL_RESOLUTION
    header : DISPLAYCONFIG_DEVICE_INFO_HEADER
    anonymous : DISPLAYCONFIG_SUPPORT_VIRTUAL_RESOLUTION_Anonymous_e__Union
  end
  struct DISPLAYCONFIG_SUPPORT_VIRTUAL_RESOLUTION_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt32
  end
  struct DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO
    header : DISPLAYCONFIG_DEVICE_INFO_HEADER
    anonymous : DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO_Anonymous_e__Union
    color_encoding : DISPLAYCONFIG_COLOR_ENCODING
    bits_per_color_channel : UInt32
  end
  struct DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt32
  end
  struct DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE
    header : DISPLAYCONFIG_DEVICE_INFO_HEADER
    anonymous : DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE_Anonymous_e__Union
  end
  struct DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt32
  end
  struct DISPLAYCONFIG_SDR_WHITE_LEVEL
    header : DISPLAYCONFIG_DEVICE_INFO_HEADER
    sdr_white_level : UInt32
  end
  struct DISPLAYCONFIG_GET_MONITOR_SPECIALIZATION
    header : DISPLAYCONFIG_DEVICE_INFO_HEADER
    anonymous : DISPLAYCONFIG_GET_MONITOR_SPECIALIZATION_Anonymous_e__Union
  end
  struct DISPLAYCONFIG_GET_MONITOR_SPECIALIZATION_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt32
  end
  struct DISPLAYCONFIG_SET_MONITOR_SPECIALIZATION
    header : DISPLAYCONFIG_DEVICE_INFO_HEADER
    anonymous : DISPLAYCONFIG_SET_MONITOR_SPECIALIZATION_Anonymous_e__Union
    specialization_type : Guid
    specialization_sub_type : Guid
    specialization_application_name : Char[128]*
  end
  struct DISPLAYCONFIG_SET_MONITOR_SPECIALIZATION_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt32
  end
  struct PHYSICAL_MONITOR
    h_physical_monitor : LibC::HANDLE
    sz_physical_monitor_description : Char[128]*
  end
  struct MC_TIMING_REPORT
    dw_horizontal_frequency_in_hz : UInt32
    dw_vertical_frequency_in_hz : UInt32
    b_timing_status_byte : UInt8
  end
  struct Sources
    source_id : UInt32
    num_targets : Int32
    a_targets : UInt32[0]*
  end
  struct Adapter
    adapter_name : Char[128]*
    num_sources : Int32
    sources : Sources[0]*
  end
  struct Adapters
    num_adapters : Int32
    adapter : Adapter[0]*
  end
  struct DisplayMode
    device_name : Char[32]*
    dev_mode : DEVMODEW
  end
  struct DisplayModes
    num_display_modes : Int32
    display_mode : DisplayMode[0]*
  end
  struct VIDEOPARAMETERS
    guid : Guid
    dw_offset : UInt32
    dw_command : UInt32
    dw_flags : UInt32
    dw_mode : UInt32
    dw_tv_standard : UInt32
    dw_available_modes : UInt32
    dw_available_tv_standard : UInt32
    dw_flicker_filter : UInt32
    dw_over_scan_x : UInt32
    dw_over_scan_y : UInt32
    dw_max_unscaled_x : UInt32
    dw_max_unscaled_y : UInt32
    dw_position_x : UInt32
    dw_position_y : UInt32
    dw_brightness : UInt32
    dw_contrast : UInt32
    dw_cp_type : UInt32
    dw_cp_command : UInt32
    dw_cp_standard : UInt32
    dw_cp_key : UInt32
    b_cp_aps_trigger_bits : UInt32
    b_oem_copy_protection : UInt8[256]*
  end
  struct POINTE
    x : Float32
    y : Float32
  end
  struct POINTFIX
    x : Int32
    y : Int32
  end
  struct RECTFX
    x_left : Int32
    y_top : Int32
    x_right : Int32
    y_bottom : Int32
  end
  struct FD_XFORM
    e_xx : Float32
    e_xy : Float32
    e_yx : Float32
    e_yy : Float32
  end
  struct FD_DEVICEMETRICS
    fl_realized_type : UInt32
    pte_base : POINTE
    pte_side : POINTE
    l_d : Int32
    fx_max_ascender : Int32
    fx_max_descender : Int32
    ptl_underline1 : POINTL
    ptl_strike_out : POINTL
    ptl_ul_thickness : POINTL
    ptl_so_thickness : POINTL
    cx_max : UInt32
    cy_max : UInt32
    cj_glyph_max : UInt32
    fdx_quantized : FD_XFORM
    l_non_linear_ext_leading : Int32
    l_non_linear_int_leading : Int32
    l_non_linear_max_char_width : Int32
    l_non_linear_avg_char_width : Int32
    l_min_a : Int32
    l_min_c : Int32
    l_min_d : Int32
    al_reserved : Int32[0]*
  end
  struct LIGATURE
    cul_size : UInt32
    pwsz : LibC::LPWSTR
    chglyph : UInt32
    ahglyph : UInt32[0]*
  end
  struct FD_LIGATURE
    cul_this : UInt32
    ul_type : UInt32
    c_ligatures : UInt32
    alig : LIGATURE[0]*
  end
  struct POINTQF
    x : LARGE_INTEGER
    y : LARGE_INTEGER
  end
  struct WCRUN
    wc_low : Char
    c_glyphs : UInt16
    phg : UInt32*
  end
  struct FD_GLYPHSET
    cj_this : UInt32
    fl_accel : UInt32
    c_glyphs_supported : UInt32
    c_runs : UInt32
    awcrun : WCRUN[0]*
  end
  struct FD_GLYPHATTR
    cj_this : UInt32
    c_glyphs : UInt32
    i_mode : UInt32
    a_glyph_attr : UInt8[0]*
  end
  struct FD_KERNINGPAIR
    wc_first : Char
    wc_second : Char
    fwd_kern : Int16
  end
  struct FONTDIFF
    j_reserved1 : UInt8
    j_reserved2 : UInt8
    j_reserved3 : UInt8
    b_weight : UInt8
    us_win_weight : UInt16
    fs_selection : UInt16
    fwd_ave_char_width : Int16
    fwd_max_char_inc : Int16
    ptl_caret : POINTL
  end
  struct FONTSIM
    dp_bold : Int32
    dp_italic : Int32
    dp_bold_italic : Int32
  end
  struct IFIMETRICS
    cj_this : UInt32
    cj_ifi_extra : UInt32
    dpwsz_family_name : Int32
    dpwsz_style_name : Int32
    dpwsz_face_name : Int32
    dpwsz_unique_name : Int32
    dp_font_sim : Int32
    l_embed_id : Int32
    l_italic_angle : Int32
    l_char_bias : Int32
    dp_char_sets : Int32
    j_win_char_set : UInt8
    j_win_pitch_and_family : UInt8
    us_win_weight : UInt16
    fl_info : UInt32
    fs_selection : UInt16
    fs_type : UInt16
    fwd_units_per_em : Int16
    fwd_lowest_pp_em : Int16
    fwd_win_ascender : Int16
    fwd_win_descender : Int16
    fwd_mac_ascender : Int16
    fwd_mac_descender : Int16
    fwd_mac_line_gap : Int16
    fwd_typo_ascender : Int16
    fwd_typo_descender : Int16
    fwd_typo_line_gap : Int16
    fwd_ave_char_width : Int16
    fwd_max_char_inc : Int16
    fwd_cap_height : Int16
    fwd_x_height : Int16
    fwd_subscript_x_size : Int16
    fwd_subscript_y_size : Int16
    fwd_subscript_x_offset : Int16
    fwd_subscript_y_offset : Int16
    fwd_superscript_x_size : Int16
    fwd_superscript_y_size : Int16
    fwd_superscript_x_offset : Int16
    fwd_superscript_y_offset : Int16
    fwd_underscore_size : Int16
    fwd_underscore_position : Int16
    fwd_strikeout_size : Int16
    fwd_strikeout_position : Int16
    ch_first_char : UInt8
    ch_last_char : UInt8
    ch_default_char : UInt8
    ch_break_char : UInt8
    wc_first_char : Char
    wc_last_char : Char
    wc_default_char : Char
    wc_break_char : Char
    ptl_baseline : POINTL
    ptl_aspect : POINTL
    ptl_caret : POINTL
    rcl_font_box : RECTL
    ach_vend_id : UInt8[4]*
    c_kerning_pairs : UInt32
    ul_panose_culture : UInt32
    panose : PANOSE
    align : Void*
  end
  struct IFIEXTRA
    ul_identifier : UInt32
    dp_font_sig : Int32
    cig : UInt32
    dp_design_vector : Int32
    dp_axes_info_w : Int32
    aul_reserved : UInt32[0]*
  end
  struct DRVFN
    i_func : UInt32
    pfn : PFN
  end
  struct DRVENABLEDATA
    i_driver_version : UInt32
    c : UInt32
    pdrvfn : DRVFN*
  end
  struct DEVINFO
    fl_graphics_caps : UInt32
    lf_default_font : LOGFONTW
    lf_ansi_var_font : LOGFONTW
    lf_ansi_fix_font : LOGFONTW
    c_fonts : UInt32
    i_dither_format : UInt32
    cx_dither : UInt16
    cy_dither : UInt16
    hpal_default : HPALETTE
    fl_graphics_caps2 : UInt32
  end
  struct LINEATTRS
    fl : UInt32
    i_join : UInt32
    i_end_cap : UInt32
    el_width : FLOAT_LONG
    e_miter_limit : Float32
    cstyle : UInt32
    pstyle : FLOAT_LONG*
    el_style_state : FLOAT_LONG
  end
  struct XFORML
    e_m11 : Float32
    e_m12 : Float32
    e_m21 : Float32
    e_m22 : Float32
    e_dx : Float32
    e_dy : Float32
  end
  struct CIECHROMA
    x : Int32
    y : Int32
    y : Int32
  end
  struct COLORINFO
    red : CIECHROMA
    green : CIECHROMA
    blue : CIECHROMA
    cyan : CIECHROMA
    magenta : CIECHROMA
    yellow : CIECHROMA
    alignment_white : CIECHROMA
    red_gamma : Int32
    green_gamma : Int32
    blue_gamma : Int32
    magenta_in_cyan_dye : Int32
    yellow_in_cyan_dye : Int32
    cyan_in_magenta_dye : Int32
    yellow_in_magenta_dye : Int32
    cyan_in_yellow_dye : Int32
    magenta_in_yellow_dye : Int32
  end
  struct CDDDXGK_REDIRBITMAPPRESENTINFO
    num_dirty_rects : UInt32
    dirty_rect : RECT*
    num_contexts : UInt32
    h_context : LibC::HANDLE[65]*
    b_do_not_synchronize_with_dx_content : BOOLEAN
  end
  struct GDIINFO
    ul_version : UInt32
    ul_technology : UInt32
    ul_horz_size : UInt32
    ul_vert_size : UInt32
    ul_horz_res : UInt32
    ul_vert_res : UInt32
    c_bits_pixel : UInt32
    c_planes : UInt32
    ul_num_colors : UInt32
    fl_raster : UInt32
    ul_log_pixels_x : UInt32
    ul_log_pixels_y : UInt32
    fl_text_caps : UInt32
    ul_dac_red : UInt32
    ul_dac_green : UInt32
    ul_dac_blue : UInt32
    ul_aspect_x : UInt32
    ul_aspect_y : UInt32
    ul_aspect_xy : UInt32
    x_style_step : Int32
    y_style_step : Int32
    den_style_step : Int32
    ptl_phys_offset : POINTL
    szl_phys_size : SIZE
    ul_num_pal_reg : UInt32
    ci_device : COLORINFO
    ul_device_pels_dpi : UInt32
    ul_primary_order : UInt32
    ul_ht_pattern_size : UInt32
    ul_ht_output_format : UInt32
    fl_ht_flags : UInt32
    ul_v_refresh : UInt32
    ul_blt_alignment : UInt32
    ul_panning_horz_res : UInt32
    ul_panning_vert_res : UInt32
    x_panning_alignment : UInt32
    y_panning_alignment : UInt32
    cx_ht_pat : UInt32
    cy_ht_pat : UInt32
    p_ht_pat_a : UInt8*
    p_ht_pat_b : UInt8*
    p_ht_pat_c : UInt8*
    fl_shade_blend : UInt32
    ul_physical_pixel_characteristics : UInt32
    ul_physical_pixel_gamma : UInt32
  end
  struct BRUSHOBJ
    i_solid_color : UInt32
    pv_rbrush : Void*
    fl_color_type : UInt32
  end
  struct CLIPOBJ
    i_uniq : UInt32
    rcl_bounds : RECTL
    i_d_complexity : UInt8
    i_f_complexity : UInt8
    i_mode : UInt8
    fj_options : UInt8
  end
  struct DRIVEROBJ
    pv_obj : Void*
    p_free_proc : FREEOBJPROC
    hdev : HDEV
    dhpdev : DHPDEV
  end
  struct FONTOBJ
    i_uniq : UInt32
    i_face : UInt32
    cx_max : UInt32
    fl_font_type : UInt32
    i_tt_uniq : LibC::UINT_PTR
    i_file : LibC::UINT_PTR
    siz_log_res_ppi : SIZE
    ul_style_size : UInt32
    pv_consumer : Void*
    pv_producer : Void*
  end
  struct BLENDOBJ
    blend_function : BLENDFUNCTION
  end
  struct PALOBJ
    ul_reserved : UInt32
  end
  struct PATHOBJ
    fl : UInt32
    c_curves : UInt32
  end
  struct SURFOBJ
    dhsurf : DHSURF
    hsurf : HSURF
    dhpdev : DHPDEV
    hdev : HDEV
    sizl_bitmap : SIZE
    cj_bits : UInt32
    pv_bits : Void*
    pv_scan0 : Void*
    l_delta : Int32
    i_uniq : UInt32
    i_bitmap_format : UInt32
    i_type : UInt16
    fj_bitmap : UInt16
  end
  struct WNDOBJ
    co_client : CLIPOBJ
    pv_consumer : Void*
    rcl_client : RECTL
    pso_owner : SURFOBJ*
  end
  struct XFORMOBJ
    ul_reserved : UInt32
  end
  struct XLATEOBJ
    i_uniq : UInt32
    fl_xlate : UInt32
    i_src_type : UInt16
    i_dst_type : UInt16
    c_entries : UInt32
    pul_xlate : UInt32*
  end
  struct ENUMRECTS
    c : UInt32
    arcl : RECTL[0]*
  end
  struct GLYPHBITS
    ptl_origin : POINTL
    sizl_bitmap : SIZE
    aj : UInt8[0]*
  end
  struct GLYPHPOS
    hg : UInt32
    pgdf : GLYPHDEF*
    ptl : POINTL
  end
  struct GLYPHDATA
    gdf : GLYPHDEF
    hg : UInt32
    fx_d : Int32
    fx_a : Int32
    fx_ab : Int32
    fx_ink_top : Int32
    fx_ink_bottom : Int32
    rcl_ink : RECTL
    ptq_d : POINTQF
  end
  struct STROBJ
    c_glyphs : UInt32
    fl_accel : UInt32
    ul_char_inc : UInt32
    rcl_bk_ground : RECTL
    pgp : GLYPHPOS*
    pwsz_org : LibC::LPWSTR
  end
  struct FONTINFO
    cj_this : UInt32
    fl_caps : UInt32
    c_glyphs_supported : UInt32
    cj_max_glyph1 : UInt32
    cj_max_glyph4 : UInt32
    cj_max_glyph8 : UInt32
    cj_max_glyph32 : UInt32
  end
  struct PATHDATA
    flags : UInt32
    count : UInt32
    pptfx : POINTFIX*
  end
  struct RUN
    i_start : Int32
    i_stop : Int32
  end
  struct CLIPLINE
    ptfx_a : POINTFIX
    ptfx_b : POINTFIX
    l_style_state : Int32
    c : UInt32
    arun : RUN[0]*
  end
  struct PERBANDINFO
    b_repeat_this_band : LibC::BOOL
    szl_band : SIZE
    ul_horz_res : UInt32
    ul_vert_res : UInt32
  end
  struct GAMMARAMP
    red : UInt16[256]*
    green : UInt16[256]*
    blue : UInt16[256]*
  end
  struct DEVHTINFO
    ht_flags : UInt32
    ht_pattern_size : UInt32
    dev_pels_dpi : UInt32
    color_info : COLORINFO
  end
  struct DEVHTADJDATA
    device_flags : UInt32
    device_xdpi : UInt32
    device_ydpi : UInt32
    p_def_ht_info : DEVHTINFO*
    p_adj_ht_info : DEVHTINFO*
  end
  struct TYPE1_FONT
    h_pfm : LibC::HANDLE
    h_pfb : LibC::HANDLE
    ul_identifier : UInt32
  end
  struct ENGSAFESEMAPHORE
    hsem : HSEMAPHORE
    l_count : Int32
  end
  struct FLOATOBJ_XFORM
    e_m11 : Float32
    e_m12 : Float32
    e_m21 : Float32
    e_m22 : Float32
    e_dx : Float32
    e_dy : Float32
  end
  struct ENG_TIME_FIELDS
    us_year : UInt16
    us_month : UInt16
    us_day : UInt16
    us_hour : UInt16
    us_minute : UInt16
    us_second : UInt16
    us_milliseconds : UInt16
    us_weekday : UInt16
  end
  struct EMFINFO
    n_size : UInt32
    hdc : HDC
    pv_emf : UInt8*
    pv_current_record : UInt8*
  end
  struct DRH_APIBITMAPDATA
    pso : SURFOBJ*
    b : LibC::BOOL
  end
  struct INDIRECT_DISPLAY_INFO
    display_adapter_luid : LUID
    flags : UInt32
    num_monitors : UInt32
    display_adapter_target_base : UInt32
  end
  struct VIDEO_VDM
    process_handle : LibC::HANDLE
  end
  struct VIDEO_REGISTER_VDM
    minimum_state_size : UInt32
  end
  struct VIDEO_MONITOR_DESCRIPTOR
    descriptor_size : UInt32
    descriptor : UInt8[0]*
  end
  struct DXGK_WIN32K_PARAM_DATA
    paths_array : Void*
    modes_array : Void*
    num_path_array_elements : UInt32
    num_mode_array_elements : UInt32
    sdc_flags : UInt32
  end
  struct VIDEO_WIN32K_CALLBACKS_PARAMS
    callout_type : VIDEO_WIN32K_CALLBACKS_PARAMS_TYPE
    phys_disp : Void*
    param : LibC::UINT_PTR
    status : Int32
    lock_user_session : BOOLEAN
    is_post_device : BOOLEAN
    surprise_removal : BOOLEAN
    wait_for_queue_ready : BOOLEAN
  end
  struct VIDEO_WIN32K_CALLBACKS
    phys_disp : Void*
    callout : PVIDEO_WIN32K_CALLOUT
    b_acpi : UInt32
    p_phys_device_object : LibC::HANDLE
    dualview_flags : UInt32
  end
  struct VIDEO_DEVICE_SESSION_STATUS
    b_enable : UInt32
    b_success : UInt32
  end
  struct VIDEO_HARDWARE_STATE_HEADER
    length : UInt32
    port_value : UInt8[48]*
    attrib_index_data_state : UInt32
    basic_sequencer_offset : UInt32
    basic_crt_cont_offset : UInt32
    basic_graph_cont_offset : UInt32
    basic_attrib_cont_offset : UInt32
    basic_dac_offset : UInt32
    basic_latches_offset : UInt32
    extended_sequencer_offset : UInt32
    extended_crt_cont_offset : UInt32
    extended_graph_cont_offset : UInt32
    extended_attrib_cont_offset : UInt32
    extended_dac_offset : UInt32
    extended_validator_state_offset : UInt32
    extended_misc_data_offset : UInt32
    plane_length : UInt32
    plane1_offset : UInt32
    plane2_offset : UInt32
    plane3_offset : UInt32
    plane4_offset : UInt32
    vga_state_flags : UInt32
    dib_offset : UInt32
    dib_bits_per_pixel : UInt32
    dibx_resolution : UInt32
    diby_resolution : UInt32
    dib_xlat_offset : UInt32
    dib_xlat_length : UInt32
    vesa_info_offset : UInt32
    frame_buffer_data : Void*
  end
  struct VIDEO_HARDWARE_STATE
    state_header : VIDEO_HARDWARE_STATE_HEADER*
    state_length : UInt32
  end
  struct VIDEO_NUM_MODES
    num_modes : UInt32
    mode_information_length : UInt32
  end
  struct VIDEO_MODE
    requested_mode : UInt32
  end
  struct VIDEO_MODE_INFORMATION
    length : UInt32
    mode_index : UInt32
    vis_screen_width : UInt32
    vis_screen_height : UInt32
    screen_stride : UInt32
    number_of_planes : UInt32
    bits_per_plane : UInt32
    frequency : UInt32
    x_millimeter : UInt32
    y_millimeter : UInt32
    number_red_bits : UInt32
    number_green_bits : UInt32
    number_blue_bits : UInt32
    red_mask : UInt32
    green_mask : UInt32
    blue_mask : UInt32
    attribute_flags : UInt32
    video_memory_bitmap_width : UInt32
    video_memory_bitmap_height : UInt32
    driver_specific_attribute_flags : UInt32
  end
  struct VIDEO_LOAD_FONT_INFORMATION
    width_in_pixels : UInt16
    height_in_pixels : UInt16
    font_size : UInt32
    font : UInt8[0]*
  end
  struct VIDEO_PALETTE_DATA
    num_entries : UInt16
    first_entry : UInt16
    colors : UInt16[0]*
  end
  struct VIDEO_CLUTDATA
    red : UInt8
    green : UInt8
    blue : UInt8
    unused : UInt8
  end
  struct VIDEO_CLUT
    num_entries : UInt16
    first_entry : UInt16
    lookup_table : VIDEO_CLUT_Anonymous_e__Union[0]*
  end
  struct VIDEO_CURSOR_POSITION
    column : Int16
    row : Int16
  end
  struct VIDEO_CURSOR_ATTRIBUTES
    width : UInt16
    height : UInt16
    column : Int16
    row : Int16
    rate : UInt8
    enable : UInt8
  end
  struct VIDEO_POINTER_POSITION
    column : Int16
    row : Int16
  end
  struct VIDEO_POINTER_ATTRIBUTES
    flags : UInt32
    width : UInt32
    height : UInt32
    width_in_bytes : UInt32
    enable : UInt32
    column : Int16
    row : Int16
    pixels : UInt8[0]*
  end
  struct VIDEO_POINTER_CAPABILITIES
    flags : UInt32
    max_width : UInt32
    max_height : UInt32
    hw_ptr_bitmap_start : UInt32
    hw_ptr_bitmap_end : UInt32
  end
  struct VIDEO_BANK_SELECT
    length : UInt32
    size : UInt32
    banking_flags : UInt32
    banking_type : UInt32
    planar_hc_banking_type : UInt32
    bitmap_width_in_bytes : UInt32
    bitmap_size : UInt32
    granularity : UInt32
    planar_hc_granularity : UInt32
    code_offset : UInt32
    planar_hc_bank_code_offset : UInt32
    planar_hc_enable_code_offset : UInt32
    planar_hc_disable_code_offset : UInt32
  end
  struct VIDEO_MEMORY
    requested_virtual_address : Void*
  end
  struct VIDEO_SHARE_MEMORY
    process_handle : LibC::HANDLE
    view_offset : UInt32
    view_size : UInt32
    requested_virtual_address : Void*
  end
  struct VIDEO_SHARE_MEMORY_INFORMATION
    shared_view_offset : UInt32
    shared_view_size : UInt32
    virtual_address : Void*
  end
  struct VIDEO_MEMORY_INFORMATION
    video_ram_base : Void*
    video_ram_length : UInt32
    frame_buffer_base : Void*
    frame_buffer_length : UInt32
  end
  struct VIDEO_PUBLIC_ACCESS_RANGES
    in_io_space : UInt32
    mapped_in_io_space : UInt32
    virtual_address : Void*
  end
  struct VIDEO_COLOR_CAPABILITIES
    length : UInt32
    attribute_flags : UInt32
    red_phosphore_decay : Int32
    green_phosphore_decay : Int32
    blue_phosphore_decay : Int32
    white_chromaticity_x : Int32
    white_chromaticity_y : Int32
    white_chromaticity_y : Int32
    red_chromaticity_x : Int32
    red_chromaticity_y : Int32
    green_chromaticity_x : Int32
    green_chromaticity_y : Int32
    blue_chromaticity_x : Int32
    blue_chromaticity_y : Int32
    white_gamma : Int32
    red_gamma : Int32
    green_gamma : Int32
    blue_gamma : Int32
  end
  struct VIDEO_POWER_MANAGEMENT
    length : UInt32
    dpms_version : UInt32
    power_state : UInt32
  end
  struct VIDEO_COLOR_LUT_DATA
    length : UInt32
    lut_data_format : UInt32
    lut_data : UInt8[0]*
  end
  struct VIDEO_LUT_RGB256WORDS
    red : UInt16[256]*
    green : UInt16[256]*
    blue : UInt16[256]*
  end
  struct BANK_POSITION
    read_bank_position : UInt32
    write_bank_position : UInt32
  end
  struct DISPLAY_BRIGHTNESS
    uc_display_policy : UInt8
    uc_ac_brightness : UInt8
    uc_dc_brightness : UInt8
  end
  struct VIDEO_BRIGHTNESS_POLICY
    default_to_bios_policy : BOOLEAN
    level_count : UInt8
    level : VIDEO_BRIGHTNESS_POLICY_Anonymous_e__Struct[0]*
  end
  struct VIDEO_BRIGHTNESS_POLICY_Anonymous_e__Struct
    battery_level : UInt8
    brightness : UInt8
  end
  struct FSCNTL_SCREEN_INFO
    position : COORD
    screen_size : COORD
    n_number_of_chars : UInt32
  end
  struct FONT_IMAGE_INFO
    font_size : COORD
    image_bits : UInt8*
  end
  struct CHAR_IMAGE_INFO
    char_info : CHAR_INFO
    font_image_info : FONT_IMAGE_INFO
  end
  struct VGA_CHAR
    char : CHAR
    attributes : CHAR
  end
  struct FSVIDEO_COPY_FRAME_BUFFER
    src_screen : FSCNTL_SCREEN_INFO
    dest_screen : FSCNTL_SCREEN_INFO
  end
  struct FSVIDEO_WRITE_TO_FRAME_BUFFER
    src_buffer : CHAR_IMAGE_INFO*
    dest_screen : FSCNTL_SCREEN_INFO
  end
  struct FSVIDEO_REVERSE_MOUSE_POINTER
    screen : FSCNTL_SCREEN_INFO
    dw_type : UInt32
  end
  struct FSVIDEO_MODE_INFORMATION
    video_mode : VIDEO_MODE_INFORMATION
    video_memory : VIDEO_MEMORY_INFORMATION
  end
  struct FSVIDEO_SCREEN_INFORMATION
    screen_size : COORD
    font_size : COORD
  end
  struct FSVIDEO_CURSOR_POSITION
    coord : VIDEO_CURSOR_POSITION
    dw_type : UInt32
  end
  struct ENG_EVENT
    p_k_event : Void*
    f_flags : UInt32
  end
  struct VIDEO_PERFORMANCE_COUNTER
    nb_of_allocation_evicted : UInt64[10]*
    nb_of_allocation_marked : UInt64[10]*
    nb_of_allocation_restored : UInt64[10]*
    k_bytes_evicted : UInt64[10]*
    k_bytes_marked : UInt64[10]*
    k_bytes_restored : UInt64[10]*
    nb_process_commited : UInt64
    nb_allocation_commited : UInt64
    nb_allocation_marked : UInt64
    k_bytes_allocated : UInt64
    k_bytes_available : UInt64
    k_bytes_cur_marked : UInt64
    reference : UInt64
    unreference : UInt64
    true_reference : UInt64
    nb_of_page_in : UInt64
    k_bytes_page_in : UInt64
    nb_of_page_out : UInt64
    k_bytes_page_out : UInt64
    nb_of_rotate_out : UInt64
    k_bytes_rotate_out : UInt64
  end
  struct VIDEO_QUERY_PERFORMANCE_COUNTER
    buffer_size : UInt32
    buffer : VIDEO_PERFORMANCE_COUNTER*
  end
  struct PANEL_QUERY_BRIGHTNESS_CAPS
    version : BRIGHTNESS_INTERFACE_VERSION
    anonymous : PANEL_QUERY_BRIGHTNESS_CAPS_Anonymous_e__Union
  end
  struct PANEL_QUERY_BRIGHTNESS_CAPS_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt32
  end
  struct BRIGHTNESS_LEVEL
    count : UInt8
    level : UInt8[103]*
  end
  struct BRIGHTNESS_NIT_RANGE
    min_level_in_millinit : UInt32
    max_level_in_millinit : UInt32
    step_size_in_millinit : UInt32
  end
  struct BRIGHTNESS_NIT_RANGES
    normal_range_count : UInt32
    range_count : UInt32
    preferred_maximum_brightness : UInt32
    supported_ranges : BRIGHTNESS_NIT_RANGE[16]*
  end
  struct PANEL_QUERY_BRIGHTNESS_RANGES
    version : BRIGHTNESS_INTERFACE_VERSION
    anonymous : PANEL_QUERY_BRIGHTNESS_RANGES_Anonymous_e__Union
  end
  struct PANEL_GET_BRIGHTNESS
    version : BRIGHTNESS_INTERFACE_VERSION
    anonymous : PANEL_GET_BRIGHTNESS_Anonymous_e__Union
  end
  struct PANEL_GET_BRIGHTNESS_Anonymous_e__Union_Anonymous_e__Struct
    current_in_millinits : UInt32
    target_in_millinits : UInt32
  end
  struct CHROMATICITY_COORDINATE
    x : Float32
    y : Float32
  end
  struct PANEL_BRIGHTNESS_SENSOR_DATA
    anonymous : PANEL_BRIGHTNESS_SENSOR_DATA_Anonymous_e__Union
    als_reading : Float32
    chromaticity_coordinate : CHROMATICITY_COORDINATE
    color_temperature : Float32
  end
  struct PANEL_BRIGHTNESS_SENSOR_DATA_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt32
  end
  struct PANEL_SET_BRIGHTNESS
    version : BRIGHTNESS_INTERFACE_VERSION
    anonymous : PANEL_SET_BRIGHTNESS_Anonymous_e__Union
  end
  struct PANEL_SET_BRIGHTNESS_Anonymous_e__Union_Anonymous_e__Struct
    millinits : UInt32
    transition_time_in_ms : UInt32
    sensor_data : PANEL_BRIGHTNESS_SENSOR_DATA
  end
  struct PANEL_SET_BRIGHTNESS_STATE
    anonymous : PANEL_SET_BRIGHTNESS_STATE_Anonymous_e__Union
  end
  struct PANEL_SET_BRIGHTNESS_STATE_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt32
  end
  struct PANEL_SET_BACKLIGHT_OPTIMIZATION
    level : BACKLIGHT_OPTIMIZATION_LEVEL
  end
  struct BACKLIGHT_REDUCTION_GAMMA_RAMP
    r : UInt16[256]*
    g : UInt16[256]*
    b : UInt16[256]*
  end
  struct PANEL_GET_BACKLIGHT_REDUCTION
    backlight_usersetting : UInt16
    backlight_effective : UInt16
    gamma_ramp : BACKLIGHT_REDUCTION_GAMMA_RAMP
  end
  struct COLORSPACE_TRANSFORM_DATA_CAP
    data_type : COLORSPACE_TRANSFORM_DATA_TYPE
    anonymous : COLORSPACE_TRANSFORM_DATA_CAP_Anonymous_e__Union
    numeric_range_min : Float32
    numeric_range_max : Float32
  end
  struct COLORSPACE_TRANSFORM_DATA_CAP_Anonymous_e__Union_Anonymous2_e__Struct
    _bitfield : UInt32
  end
  struct COLORSPACE_TRANSFORM_DATA_CAP_Anonymous_e__Union_Anonymous1_e__Struct
    _bitfield : UInt32
  end
  struct COLORSPACE_TRANSFORM_1DLUT_CAP
    number_of_lut_entries : UInt32
    data_cap : COLORSPACE_TRANSFORM_DATA_CAP
  end
  struct COLORSPACE_TRANSFORM_MATRIX_CAP
    anonymous : COLORSPACE_TRANSFORM_MATRIX_CAP_Anonymous_e__Union
    data_cap : COLORSPACE_TRANSFORM_DATA_CAP
  end
  struct COLORSPACE_TRANSFORM_MATRIX_CAP_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt32
  end
  struct COLORSPACE_TRANSFORM_TARGET_CAPS
    version : COLORSPACE_TRANSFORM_TARGET_CAPS_VERSION
    lookup_table1_d_degamma_cap : COLORSPACE_TRANSFORM_1DLUT_CAP
    color_matrix3x3_cap : COLORSPACE_TRANSFORM_MATRIX_CAP
    lookup_table1_d_regamma_cap : COLORSPACE_TRANSFORM_1DLUT_CAP
  end
  struct GAMMA_RAMP_RGB256x3x16
    red : UInt16[256]*
    green : UInt16[256]*
    blue : UInt16[256]*
  end
  struct GAMMA_RAMP_RGB
    red : Float32
    green : Float32
    blue : Float32
  end
  struct GAMMA_RAMP_DXGI_1
    scale : GAMMA_RAMP_RGB
    offset : GAMMA_RAMP_RGB
    gamma_curve : GAMMA_RAMP_RGB[1025]*
  end
  struct COLORSPACE_TRANSFORM_3x4
    color_matrix3x4 : Float32[12]*
    scalar_multiplier : Float32
    lookup_table1_d : GAMMA_RAMP_RGB[4096]*
  end
  struct OUTPUT_WIRE_FORMAT
    color_encoding : OUTPUT_COLOR_ENCODING
    bits_per_pixel : UInt32
  end
  struct COLORSPACE_TRANSFORM_MATRIX_V2
    stage_control_lookup_table1_d_degamma : COLORSPACE_TRANSFORM_STAGE_CONTROL
    lookup_table1_d_degamma : GAMMA_RAMP_RGB[4096]*
    stage_control_color_matrix3x3 : COLORSPACE_TRANSFORM_STAGE_CONTROL
    color_matrix3x3 : Float32[9]*
    stage_control_lookup_table1_d_regamma : COLORSPACE_TRANSFORM_STAGE_CONTROL
    lookup_table1_d_regamma : GAMMA_RAMP_RGB[4096]*
  end
  struct COLORSPACE_TRANSFORM
    type : COLORSPACE_TRANSFORM_TYPE
    data : COLORSPACE_TRANSFORM_Data_e__Union
  end
  struct COLORSPACE_TRANSFORM_SET_INPUT
    output_wire_color_space_expected : OUTPUT_WIRE_COLOR_SPACE_TYPE
    output_wire_format_expected : OUTPUT_WIRE_FORMAT
    color_space_transform : COLORSPACE_TRANSFORM
  end
  struct SET_ACTIVE_COLOR_PROFILE_NAME
    color_profile_name : Char[0]*
  end
  struct MIPI_DSI_CAPS
    dsi_type_major : UInt8
    dsi_type_minor : UInt8
    spec_version_major : UInt8
    spec_version_minor : UInt8
    spec_version_patch : UInt8
    target_maximum_return_packet_size : UInt16
    result_code_flags : UInt8
    result_code_status : UInt8
    revision : UInt8
    level : UInt8
    device_class_hi : UInt8
    device_class_lo : UInt8
    manufacturer_hi : UInt8
    manufacturer_lo : UInt8
    product_hi : UInt8
    product_lo : UInt8
    length_hi : UInt8
    length_lo : UInt8
  end
  struct MIPI_DSI_PACKET
    anonymous1 : MIPI_DSI_PACKET_Anonymous1_e__Union
    anonymous2 : MIPI_DSI_PACKET_Anonymous2_e__Union
    ecc_filler : UInt8
    payload : UInt8[8]*
  end
  struct MIPI_DSI_PACKET_Anonymous2_e__Union_Anonymous_e__Struct
    data0 : UInt8
    data1 : UInt8
  end
  struct MIPI_DSI_PACKET_Anonymous1_e__Union_Anonymous_e__Struct
    _bitfield : UInt8
  end
  struct MIPI_DSI_TRANSMISSION
    total_buffer_size : UInt32
    packet_count : UInt8
    failed_packet : UInt8
    anonymous : MIPI_DSI_TRANSMISSION_Anonymous_e__Struct
    read_word_count : UInt16
    final_command_extra_payload : UInt16
    mipi_errors : UInt16
    host_errors : UInt16
    packets : MIPI_DSI_PACKET[0]*
  end
  struct MIPI_DSI_TRANSMISSION_Anonymous_e__Struct
    _bitfield : UInt16
  end
  struct MIPI_DSI_RESET
    flags : UInt32
    anonymous : MIPI_DSI_RESET_Anonymous_e__Union
  end
  struct MIPI_DSI_RESET_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt32
  end


  struct ICloneViewHelperVTbl
    query_interface : Proc(ICloneViewHelper*, Guid*, Void**, HRESULT)
    add_ref : Proc(ICloneViewHelper*, UInt32)
    release : Proc(ICloneViewHelper*, UInt32)
    get_connected_i_ds : Proc(ICloneViewHelper*, LibC::LPWSTR, UInt32*, UInt32*, UInt32, HRESULT)
    get_active_topology : Proc(ICloneViewHelper*, LibC::LPWSTR, UInt32, UInt32*, UInt32*, HRESULT)
    set_active_topology : Proc(ICloneViewHelper*, LibC::LPWSTR, UInt32, UInt32, UInt32*, HRESULT)
    commit : Proc(ICloneViewHelper*, LibC::BOOL, HRESULT)
  end

  ICloneViewHelper_GUID = LibC::GUID.new("f6a3d4c4-5632-4d83-b0a1-fb88712b1eb7")
  CLSID_ICloneViewHelper = "f6a3d4c4-5632-4d83-b0a1-fb88712b1eb7"
  struct ICloneViewHelper
    lpVtbl : ICloneViewHelperVTbl*
  end

  struct IViewHelperVTbl
    query_interface : Proc(IViewHelper*, Guid*, Void**, HRESULT)
    add_ref : Proc(IViewHelper*, UInt32)
    release : Proc(IViewHelper*, UInt32)
    get_connected_i_ds : Proc(IViewHelper*, LibC::LPWSTR, UInt32*, UInt32*, UInt32, HRESULT)
    get_active_topology : Proc(IViewHelper*, LibC::LPWSTR, UInt32, UInt32*, UInt32*, HRESULT)
    set_active_topology : Proc(IViewHelper*, LibC::LPWSTR, UInt32, UInt32, UInt32*, HRESULT)
    commit : Proc(IViewHelper*, HRESULT)
    set_configuration : Proc(IViewHelper*, IStream, UInt32*, HRESULT)
    get_proceed_on_new_configuration : Proc(IViewHelper*, HRESULT)
  end

  IViewHelper_GUID = LibC::GUID.new("e85ccef5-aaaa-47f0-b5e3-61f7aecdc4c1")
  CLSID_IViewHelper = "e85ccef5-aaaa-47f0-b5e3-61f7aecdc4c1"
  struct IViewHelper
    lpVtbl : IViewHelperVTbl*
  end


  # Params # hmonitor : HMONITOR [In],pdwnumberofphysicalmonitors : UInt32* [In]
  fun GetNumberOfPhysicalMonitorsFromHMONITOR(hmonitor : HMONITOR, pdwnumberofphysicalmonitors : UInt32*) : Int32

  # Params # pdirect3ddevice9 : IDirect3DDevice9 [In],pdwnumberofphysicalmonitors : UInt32* [In]
  fun GetNumberOfPhysicalMonitorsFromIDirect3DDevice9(pdirect3ddevice9 : IDirect3DDevice9, pdwnumberofphysicalmonitors : UInt32*) : HRESULT

  # Params # hmonitor : HMONITOR [In],dwphysicalmonitorarraysize : UInt32 [In],pphysicalmonitorarray : PHYSICAL_MONITOR* [In]
  fun GetPhysicalMonitorsFromHMONITOR(hmonitor : HMONITOR, dwphysicalmonitorarraysize : UInt32, pphysicalmonitorarray : PHYSICAL_MONITOR*) : Int32

  # Params # pdirect3ddevice9 : IDirect3DDevice9 [In],dwphysicalmonitorarraysize : UInt32 [In],pphysicalmonitorarray : PHYSICAL_MONITOR* [In]
  fun GetPhysicalMonitorsFromIDirect3DDevice9(pdirect3ddevice9 : IDirect3DDevice9, dwphysicalmonitorarraysize : UInt32, pphysicalmonitorarray : PHYSICAL_MONITOR*) : HRESULT

  # Params # hmonitor : LibC::HANDLE [In]
  fun DestroyPhysicalMonitor(hmonitor : LibC::HANDLE) : Int32

  # Params # dwphysicalmonitorarraysize : UInt32 [In],pphysicalmonitorarray : PHYSICAL_MONITOR* [In]
  fun DestroyPhysicalMonitors(dwphysicalmonitorarraysize : UInt32, pphysicalmonitorarray : PHYSICAL_MONITOR*) : Int32

  # Params # hmonitor : LibC::HANDLE [In],bvcpcode : UInt8 [In],pvct : MC_VCP_CODE_TYPE* [In],pdwcurrentvalue : UInt32* [In],pdwmaximumvalue : UInt32* [In]
  fun GetVCPFeatureAndVCPFeatureReply(hmonitor : LibC::HANDLE, bvcpcode : UInt8, pvct : MC_VCP_CODE_TYPE*, pdwcurrentvalue : UInt32*, pdwmaximumvalue : UInt32*) : Int32

  # Params # hmonitor : LibC::HANDLE [In],bvcpcode : UInt8 [In],dwnewvalue : UInt32 [In]
  fun SetVCPFeature(hmonitor : LibC::HANDLE, bvcpcode : UInt8, dwnewvalue : UInt32) : Int32

  # Params # hmonitor : LibC::HANDLE [In]
  fun SaveCurrentSettings(hmonitor : LibC::HANDLE) : Int32

  # Params # hmonitor : LibC::HANDLE [In],pdwcapabilitiesstringlengthincharacters : UInt32* [In]
  fun GetCapabilitiesStringLength(hmonitor : LibC::HANDLE, pdwcapabilitiesstringlengthincharacters : UInt32*) : Int32

  # Params # hmonitor : LibC::HANDLE [In],pszasciicapabilitiesstring : UInt8* [In],dwcapabilitiesstringlengthincharacters : UInt32 [In]
  fun CapabilitiesRequestAndCapabilitiesReply(hmonitor : LibC::HANDLE, pszasciicapabilitiesstring : UInt8*, dwcapabilitiesstringlengthincharacters : UInt32) : Int32

  # Params # hmonitor : LibC::HANDLE [In],pmtrmonitortimingreport : MC_TIMING_REPORT* [In]
  fun GetTimingReport(hmonitor : LibC::HANDLE, pmtrmonitortimingreport : MC_TIMING_REPORT*) : Int32

  # Params # hmonitor : LibC::HANDLE [In],pdwmonitorcapabilities : UInt32* [In],pdwsupportedcolortemperatures : UInt32* [In]
  fun GetMonitorCapabilities(hmonitor : LibC::HANDLE, pdwmonitorcapabilities : UInt32*, pdwsupportedcolortemperatures : UInt32*) : Int32

  # Params # hmonitor : LibC::HANDLE [In]
  fun SaveCurrentMonitorSettings(hmonitor : LibC::HANDLE) : Int32

  # Params # hmonitor : LibC::HANDLE [In],pdtydisplaytechnologytype : MC_DISPLAY_TECHNOLOGY_TYPE* [In]
  fun GetMonitorTechnologyType(hmonitor : LibC::HANDLE, pdtydisplaytechnologytype : MC_DISPLAY_TECHNOLOGY_TYPE*) : Int32

  # Params # hmonitor : LibC::HANDLE [In],pdwminimumbrightness : UInt32* [In],pdwcurrentbrightness : UInt32* [In],pdwmaximumbrightness : UInt32* [In]
  fun GetMonitorBrightness(hmonitor : LibC::HANDLE, pdwminimumbrightness : UInt32*, pdwcurrentbrightness : UInt32*, pdwmaximumbrightness : UInt32*) : Int32

  # Params # hmonitor : LibC::HANDLE [In],pdwminimumcontrast : UInt32* [In],pdwcurrentcontrast : UInt32* [In],pdwmaximumcontrast : UInt32* [In]
  fun GetMonitorContrast(hmonitor : LibC::HANDLE, pdwminimumcontrast : UInt32*, pdwcurrentcontrast : UInt32*, pdwmaximumcontrast : UInt32*) : Int32

  # Params # hmonitor : LibC::HANDLE [In],pctcurrentcolortemperature : MC_COLOR_TEMPERATURE* [In]
  fun GetMonitorColorTemperature(hmonitor : LibC::HANDLE, pctcurrentcolortemperature : MC_COLOR_TEMPERATURE*) : Int32

  # Params # hmonitor : LibC::HANDLE [In],dtdrivetype : MC_DRIVE_TYPE [In],pdwminimumdrive : UInt32* [In],pdwcurrentdrive : UInt32* [In],pdwmaximumdrive : UInt32* [In]
  fun GetMonitorRedGreenOrBlueDrive(hmonitor : LibC::HANDLE, dtdrivetype : MC_DRIVE_TYPE, pdwminimumdrive : UInt32*, pdwcurrentdrive : UInt32*, pdwmaximumdrive : UInt32*) : Int32

  # Params # hmonitor : LibC::HANDLE [In],gtgaintype : MC_GAIN_TYPE [In],pdwminimumgain : UInt32* [In],pdwcurrentgain : UInt32* [In],pdwmaximumgain : UInt32* [In]
  fun GetMonitorRedGreenOrBlueGain(hmonitor : LibC::HANDLE, gtgaintype : MC_GAIN_TYPE, pdwminimumgain : UInt32*, pdwcurrentgain : UInt32*, pdwmaximumgain : UInt32*) : Int32

  # Params # hmonitor : LibC::HANDLE [In],dwnewbrightness : UInt32 [In]
  fun SetMonitorBrightness(hmonitor : LibC::HANDLE, dwnewbrightness : UInt32) : Int32

  # Params # hmonitor : LibC::HANDLE [In],dwnewcontrast : UInt32 [In]
  fun SetMonitorContrast(hmonitor : LibC::HANDLE, dwnewcontrast : UInt32) : Int32

  # Params # hmonitor : LibC::HANDLE [In],ctcurrentcolortemperature : MC_COLOR_TEMPERATURE [In]
  fun SetMonitorColorTemperature(hmonitor : LibC::HANDLE, ctcurrentcolortemperature : MC_COLOR_TEMPERATURE) : Int32

  # Params # hmonitor : LibC::HANDLE [In],dtdrivetype : MC_DRIVE_TYPE [In],dwnewdrive : UInt32 [In]
  fun SetMonitorRedGreenOrBlueDrive(hmonitor : LibC::HANDLE, dtdrivetype : MC_DRIVE_TYPE, dwnewdrive : UInt32) : Int32

  # Params # hmonitor : LibC::HANDLE [In],gtgaintype : MC_GAIN_TYPE [In],dwnewgain : UInt32 [In]
  fun SetMonitorRedGreenOrBlueGain(hmonitor : LibC::HANDLE, gtgaintype : MC_GAIN_TYPE, dwnewgain : UInt32) : Int32

  # Params # hmonitor : LibC::HANDLE [In]
  fun DegaussMonitor(hmonitor : LibC::HANDLE) : Int32

  # Params # hmonitor : LibC::HANDLE [In],stsizetype : MC_SIZE_TYPE [In],pdwminimumwidthorheight : UInt32* [In],pdwcurrentwidthorheight : UInt32* [In],pdwmaximumwidthorheight : UInt32* [In]
  fun GetMonitorDisplayAreaSize(hmonitor : LibC::HANDLE, stsizetype : MC_SIZE_TYPE, pdwminimumwidthorheight : UInt32*, pdwcurrentwidthorheight : UInt32*, pdwmaximumwidthorheight : UInt32*) : Int32

  # Params # hmonitor : LibC::HANDLE [In],ptpositiontype : MC_POSITION_TYPE [In],pdwminimumposition : UInt32* [In],pdwcurrentposition : UInt32* [In],pdwmaximumposition : UInt32* [In]
  fun GetMonitorDisplayAreaPosition(hmonitor : LibC::HANDLE, ptpositiontype : MC_POSITION_TYPE, pdwminimumposition : UInt32*, pdwcurrentposition : UInt32*, pdwmaximumposition : UInt32*) : Int32

  # Params # hmonitor : LibC::HANDLE [In],stsizetype : MC_SIZE_TYPE [In],dwnewdisplayareawidthorheight : UInt32 [In]
  fun SetMonitorDisplayAreaSize(hmonitor : LibC::HANDLE, stsizetype : MC_SIZE_TYPE, dwnewdisplayareawidthorheight : UInt32) : Int32

  # Params # hmonitor : LibC::HANDLE [In],ptpositiontype : MC_POSITION_TYPE [In],dwnewposition : UInt32 [In]
  fun SetMonitorDisplayAreaPosition(hmonitor : LibC::HANDLE, ptpositiontype : MC_POSITION_TYPE, dwnewposition : UInt32) : Int32

  # Params # hmonitor : LibC::HANDLE [In]
  fun RestoreMonitorFactoryColorDefaults(hmonitor : LibC::HANDLE) : Int32

  # Params # hmonitor : LibC::HANDLE [In]
  fun RestoreMonitorFactoryDefaults(hmonitor : LibC::HANDLE) : Int32

  # Params # pbo : BRUSHOBJ* [In],cj : UInt32 [In]
  fun BRUSHOBJ_pvAllocRbrush(pbo : BRUSHOBJ*, cj : UInt32) : Void*

  # Params # pbo : BRUSHOBJ* [In]
  fun BRUSHOBJ_pvGetRbrush(pbo : BRUSHOBJ*) : Void*

  # Params # pbo : BRUSHOBJ* [In]
  fun BRUSHOBJ_ulGetBrushColor(pbo : BRUSHOBJ*) : UInt32

  # Params # pbo : BRUSHOBJ* [In]
  fun BRUSHOBJ_hGetColorTransform(pbo : BRUSHOBJ*) : LibC::HANDLE

  # Params # pco : CLIPOBJ* [In],ball : LibC::BOOL [In],itype : UInt32 [In],idirection : UInt32 [In],climit : UInt32 [In]
  fun CLIPOBJ_cEnumStart(pco : CLIPOBJ*, ball : LibC::BOOL, itype : UInt32, idirection : UInt32, climit : UInt32) : UInt32

  # Params # pco : CLIPOBJ* [In],cj : UInt32 [In],pul : UInt32* [In]
  fun CLIPOBJ_bEnum(pco : CLIPOBJ*, cj : UInt32, pul : UInt32*) : LibC::BOOL

  # Params # pco : CLIPOBJ* [In]
  fun CLIPOBJ_ppoGetPath(pco : CLIPOBJ*) : PATHOBJ*

  # Params # pfo : FONTOBJ* [In],phg : UInt32* [In]
  fun FONTOBJ_cGetAllGlyphHandles(pfo : FONTOBJ*, phg : UInt32*) : UInt32

  # Params # pfo : FONTOBJ* [In],cjsize : UInt32 [In],pfi : FONTINFO* [In]
  fun FONTOBJ_vGetInfo(pfo : FONTOBJ*, cjsize : UInt32, pfi : FONTINFO*)

  # Params # pfo : FONTOBJ* [In],imode : UInt32 [In],cglyph : UInt32 [In],phg : UInt32* [In],ppvglyph : Void** [In]
  fun FONTOBJ_cGetGlyphs(pfo : FONTOBJ*, imode : UInt32, cglyph : UInt32, phg : UInt32*, ppvglyph : Void**) : UInt32

  # Params # pfo : FONTOBJ* [In]
  fun FONTOBJ_pxoGetXform(pfo : FONTOBJ*) : XFORMOBJ*

  # Params # pfo : FONTOBJ* [In]
  fun FONTOBJ_pifi(pfo : FONTOBJ*) : IFIMETRICS*

  # Params # pfo : FONTOBJ* [In]
  fun FONTOBJ_pfdg(pfo : FONTOBJ*) : FD_GLYPHSET*

  # Params # pfo : FONTOBJ* [In],pcjfile : UInt32* [In]
  fun FONTOBJ_pvTrueTypeFontFile(pfo : FONTOBJ*, pcjfile : UInt32*) : Void*

  # Params # pfo : FONTOBJ* [In],imode : UInt32 [In]
  fun FONTOBJ_pQueryGlyphAttrs(pfo : FONTOBJ*, imode : UInt32) : FD_GLYPHATTR*

  # Params # ppo : PATHOBJ* [In]
  fun PATHOBJ_vEnumStart(ppo : PATHOBJ*)

  # Params # ppo : PATHOBJ* [In],ppd : PATHDATA* [In]
  fun PATHOBJ_bEnum(ppo : PATHOBJ*, ppd : PATHDATA*) : LibC::BOOL

  # Params # ppo : PATHOBJ* [In],pco : CLIPOBJ* [In],pso : SURFOBJ* [In],pla : LINEATTRS* [In]
  fun PATHOBJ_vEnumStartClipLines(ppo : PATHOBJ*, pco : CLIPOBJ*, pso : SURFOBJ*, pla : LINEATTRS*)

  # Params # ppo : PATHOBJ* [In],cb : UInt32 [In],pcl : CLIPLINE* [In]
  fun PATHOBJ_bEnumClipLines(ppo : PATHOBJ*, cb : UInt32, pcl : CLIPLINE*) : LibC::BOOL

  # Params # ppo : PATHOBJ* [In],prectfx : RECTFX* [In]
  fun PATHOBJ_vGetBounds(ppo : PATHOBJ*, prectfx : RECTFX*)

  # Params # pstro : STROBJ* [In]
  fun STROBJ_vEnumStart(pstro : STROBJ*)

  # Params # pstro : STROBJ* [In],pc : UInt32* [In],ppgpos : GLYPHPOS** [In]
  fun STROBJ_bEnum(pstro : STROBJ*, pc : UInt32*, ppgpos : GLYPHPOS**) : LibC::BOOL

  # Params # pstro : STROBJ* [In],pc : UInt32* [In],ppgpos : GLYPHPOS** [In]
  fun STROBJ_bEnumPositionsOnly(pstro : STROBJ*, pc : UInt32*, ppgpos : GLYPHPOS**) : LibC::BOOL

  # Params # pstro : STROBJ* [In]
  fun STROBJ_dwGetCodePage(pstro : STROBJ*) : UInt32

  # Params # pso : STROBJ* [In],ifirst : UInt32 [In],c : UInt32 [In],pptqd : POINTQF* [In]
  fun STROBJ_bGetAdvanceWidths(pso : STROBJ*, ifirst : UInt32, c : UInt32, pptqd : POINTQF*) : LibC::BOOL

  # Params # pxo : XFORMOBJ* [In],pxform : XFORML* [In]
  fun XFORMOBJ_iGetXform(pxo : XFORMOBJ*, pxform : XFORML*) : UInt32

  # Params # pxo : XFORMOBJ* [In],imode : UInt32 [In],cpoints : UInt32 [In],pvin : Void* [In],pvout : Void* [In]
  fun XFORMOBJ_bApplyXform(pxo : XFORMOBJ*, imode : UInt32, cpoints : UInt32, pvin : Void*, pvout : Void*) : LibC::BOOL

  # Params # pxlo : XLATEOBJ* [In],icolor : UInt32 [In]
  fun XLATEOBJ_iXlate(pxlo : XLATEOBJ*, icolor : UInt32) : UInt32

  # Params # pxlo : XLATEOBJ* [In]
  fun XLATEOBJ_piVector(pxlo : XLATEOBJ*) : UInt32*

  # Params # pxlo : XLATEOBJ* [In],ipal : UInt32 [In],cpal : UInt32 [In],ppal : UInt32* [In]
  fun XLATEOBJ_cGetPalette(pxlo : XLATEOBJ*, ipal : UInt32, cpal : UInt32, ppal : UInt32*) : UInt32

  # Params # pxlo : XLATEOBJ* [In]
  fun XLATEOBJ_hGetColorTransform(pxlo : XLATEOBJ*) : LibC::HANDLE

  # Params # sizl : SIZE [In],lwidth : Int32 [In],iformat : UInt32 [In],fl : UInt32 [In],pvbits : Void* [In]
  fun EngCreateBitmap(sizl : SIZE, lwidth : Int32, iformat : UInt32, fl : UInt32, pvbits : Void*) : HBITMAP

  # Params # dhsurf : DHSURF [In],sizl : SIZE [In],iformatcompat : UInt32 [In]
  fun EngCreateDeviceSurface(dhsurf : DHSURF, sizl : SIZE, iformatcompat : UInt32) : HSURF

  # Params # dhsurf : DHSURF [In],sizl : SIZE [In],iformatcompat : UInt32 [In]
  fun EngCreateDeviceBitmap(dhsurf : DHSURF, sizl : SIZE, iformatcompat : UInt32) : HBITMAP

  # Params # hsurf : HSURF [In]
  fun EngDeleteSurface(hsurf : HSURF) : LibC::BOOL

  # Params # hsurf : HSURF [In]
  fun EngLockSurface(hsurf : HSURF) : SURFOBJ*

  # Params # pso : SURFOBJ* [In]
  fun EngUnlockSurface(pso : SURFOBJ*)

  # Params # pso : SURFOBJ* [In],prcl : RECTL* [In],icolor : UInt32 [In]
  fun EngEraseSurface(pso : SURFOBJ*, prcl : RECTL*, icolor : UInt32) : LibC::BOOL

  # Params # hsurf : HSURF [In],hdev : HDEV [In],flhooks : UInt32 [In]
  fun EngAssociateSurface(hsurf : HSURF, hdev : HDEV, flhooks : UInt32) : LibC::BOOL

  # Params # hsurf : HSURF [In]
  fun EngMarkBandingSurface(hsurf : HSURF) : LibC::BOOL

  # Params # pso : SURFOBJ* [In]
  fun EngCheckAbort(pso : SURFOBJ*) : LibC::BOOL

  # Params # ppo : PATHOBJ* [In]
  fun EngDeletePath(ppo : PATHOBJ*)

  # Params # imode : UInt32 [In],ccolors : UInt32 [In],pulcolors : UInt32* [In],flred : UInt32 [In],flgreen : UInt32 [In],flblue : UInt32 [In]
  fun EngCreatePalette(imode : UInt32, ccolors : UInt32, pulcolors : UInt32*, flred : UInt32, flgreen : UInt32, flblue : UInt32) : HPALETTE

  # Params # hpal : HPALETTE [In]
  fun EngDeletePalette(hpal : HPALETTE) : LibC::BOOL

  # Params # 
  fun EngCreateClip : CLIPOBJ*

  # Params # pco : CLIPOBJ* [In]
  fun EngDeleteClip(pco : CLIPOBJ*)

  # Params # psotrg : SURFOBJ* [In],psosrc : SURFOBJ* [In],psomask : SURFOBJ* [In],pco : CLIPOBJ* [In],pxlo : XLATEOBJ* [In],prcltrg : RECTL* [In],pptlsrc : POINTL* [In],pptlmask : POINTL* [In],pbo : BRUSHOBJ* [In],pptlbrush : POINTL* [In],rop4 : UInt32 [In]
  fun EngBitBlt(psotrg : SURFOBJ*, psosrc : SURFOBJ*, psomask : SURFOBJ*, pco : CLIPOBJ*, pxlo : XLATEOBJ*, prcltrg : RECTL*, pptlsrc : POINTL*, pptlmask : POINTL*, pbo : BRUSHOBJ*, pptlbrush : POINTL*, rop4 : UInt32) : LibC::BOOL

  # Params # pso : SURFOBJ* [In],pco : CLIPOBJ* [In],pbo : BRUSHOBJ* [In],x1 : Int32 [In],y1 : Int32 [In],x2 : Int32 [In],y2 : Int32 [In],prclbounds : RECTL* [In],mix : UInt32 [In]
  fun EngLineTo(pso : SURFOBJ*, pco : CLIPOBJ*, pbo : BRUSHOBJ*, x1 : Int32, y1 : Int32, x2 : Int32, y2 : Int32, prclbounds : RECTL*, mix : UInt32) : LibC::BOOL

  # Params # psodest : SURFOBJ* [In],psosrc : SURFOBJ* [In],psomask : SURFOBJ* [In],pco : CLIPOBJ* [In],pxlo : XLATEOBJ* [In],pca : COLORADJUSTMENT* [In],pptlhtorg : POINTL* [In],prcldest : RECTL* [In],prclsrc : RECTL* [In],pptlmask : POINTL* [In],imode : UInt32 [In]
  fun EngStretchBlt(psodest : SURFOBJ*, psosrc : SURFOBJ*, psomask : SURFOBJ*, pco : CLIPOBJ*, pxlo : XLATEOBJ*, pca : COLORADJUSTMENT*, pptlhtorg : POINTL*, prcldest : RECTL*, prclsrc : RECTL*, pptlmask : POINTL*, imode : UInt32) : LibC::BOOL

  # Params # psodest : SURFOBJ* [In],psosrc : SURFOBJ* [In],psomask : SURFOBJ* [In],pco : CLIPOBJ* [In],pxlo : XLATEOBJ* [In],pca : COLORADJUSTMENT* [In],pptlhtorg : POINTL* [In],prcldest : RECTL* [In],prclsrc : RECTL* [In],pptlmask : POINTL* [In],imode : UInt32 [In],pbo : BRUSHOBJ* [In],rop4 : UInt32 [In]
  fun EngStretchBltROP(psodest : SURFOBJ*, psosrc : SURFOBJ*, psomask : SURFOBJ*, pco : CLIPOBJ*, pxlo : XLATEOBJ*, pca : COLORADJUSTMENT*, pptlhtorg : POINTL*, prcldest : RECTL*, prclsrc : RECTL*, pptlmask : POINTL*, imode : UInt32, pbo : BRUSHOBJ*, rop4 : UInt32) : LibC::BOOL

  # Params # psodest : SURFOBJ* [In],psosrc : SURFOBJ* [In],pco : CLIPOBJ* [In],pxlo : XLATEOBJ* [In],prcldest : RECTL* [In],prclsrc : RECTL* [In],pblendobj : BLENDOBJ* [In]
  fun EngAlphaBlend(psodest : SURFOBJ*, psosrc : SURFOBJ*, pco : CLIPOBJ*, pxlo : XLATEOBJ*, prcldest : RECTL*, prclsrc : RECTL*, pblendobj : BLENDOBJ*) : LibC::BOOL

  # Params # psodest : SURFOBJ* [In],pco : CLIPOBJ* [In],pxlo : XLATEOBJ* [In],pvertex : TRIVERTEX* [In],nvertex : UInt32 [In],pmesh : Void* [In],nmesh : UInt32 [In],prclextents : RECTL* [In],pptlditherorg : POINTL* [In],ulmode : UInt32 [In]
  fun EngGradientFill(psodest : SURFOBJ*, pco : CLIPOBJ*, pxlo : XLATEOBJ*, pvertex : TRIVERTEX*, nvertex : UInt32, pmesh : Void*, nmesh : UInt32, prclextents : RECTL*, pptlditherorg : POINTL*, ulmode : UInt32) : LibC::BOOL

  # Params # psodst : SURFOBJ* [In],psosrc : SURFOBJ* [In],pco : CLIPOBJ* [In],pxlo : XLATEOBJ* [In],prcldst : RECTL* [In],prclsrc : RECTL* [In],transcolor : UInt32 [In],bcalledfrombitblt : UInt32 [In]
  fun EngTransparentBlt(psodst : SURFOBJ*, psosrc : SURFOBJ*, pco : CLIPOBJ*, pxlo : XLATEOBJ*, prcldst : RECTL*, prclsrc : RECTL*, transcolor : UInt32, bcalledfrombitblt : UInt32) : LibC::BOOL

  # Params # pso : SURFOBJ* [In],pstro : STROBJ* [In],pfo : FONTOBJ* [In],pco : CLIPOBJ* [In],prclextra : RECTL* [In],prclopaque : RECTL* [In],pbofore : BRUSHOBJ* [In],pboopaque : BRUSHOBJ* [In],pptlorg : POINTL* [In],mix : UInt32 [In]
  fun EngTextOut(pso : SURFOBJ*, pstro : STROBJ*, pfo : FONTOBJ*, pco : CLIPOBJ*, prclextra : RECTL*, prclopaque : RECTL*, pbofore : BRUSHOBJ*, pboopaque : BRUSHOBJ*, pptlorg : POINTL*, mix : UInt32) : LibC::BOOL

  # Params # pso : SURFOBJ* [In],ppo : PATHOBJ* [In],pco : CLIPOBJ* [In],pxo : XFORMOBJ* [In],pbo : BRUSHOBJ* [In],pptlbrushorg : POINTL* [In],plineattrs : LINEATTRS* [In],mix : UInt32 [In]
  fun EngStrokePath(pso : SURFOBJ*, ppo : PATHOBJ*, pco : CLIPOBJ*, pxo : XFORMOBJ*, pbo : BRUSHOBJ*, pptlbrushorg : POINTL*, plineattrs : LINEATTRS*, mix : UInt32) : LibC::BOOL

  # Params # pso : SURFOBJ* [In],ppo : PATHOBJ* [In],pco : CLIPOBJ* [In],pbo : BRUSHOBJ* [In],pptlbrushorg : POINTL* [In],mix : UInt32 [In],floptions : UInt32 [In]
  fun EngFillPath(pso : SURFOBJ*, ppo : PATHOBJ*, pco : CLIPOBJ*, pbo : BRUSHOBJ*, pptlbrushorg : POINTL*, mix : UInt32, floptions : UInt32) : LibC::BOOL

  # Params # pso : SURFOBJ* [In],ppo : PATHOBJ* [In],pco : CLIPOBJ* [In],pxo : XFORMOBJ* [In],pbostroke : BRUSHOBJ* [In],plineattrs : LINEATTRS* [In],pbofill : BRUSHOBJ* [In],pptlbrushorg : POINTL* [In],mixfill : UInt32 [In],floptions : UInt32 [In]
  fun EngStrokeAndFillPath(pso : SURFOBJ*, ppo : PATHOBJ*, pco : CLIPOBJ*, pxo : XFORMOBJ*, pbostroke : BRUSHOBJ*, plineattrs : LINEATTRS*, pbofill : BRUSHOBJ*, pptlbrushorg : POINTL*, mixfill : UInt32, floptions : UInt32) : LibC::BOOL

  # Params # pso : SURFOBJ* [In],pco : CLIPOBJ* [In],pbo : BRUSHOBJ* [In],pptlbrushorg : POINTL* [In],mix : UInt32 [In]
  fun EngPaint(pso : SURFOBJ*, pco : CLIPOBJ*, pbo : BRUSHOBJ*, pptlbrushorg : POINTL*, mix : UInt32) : LibC::BOOL

  # Params # psodest : SURFOBJ* [In],psosrc : SURFOBJ* [In],pco : CLIPOBJ* [In],pxlo : XLATEOBJ* [In],prcldest : RECTL* [In],pptlsrc : POINTL* [In]
  fun EngCopyBits(psodest : SURFOBJ*, psosrc : SURFOBJ*, pco : CLIPOBJ*, pxlo : XLATEOBJ*, prcldest : RECTL*, pptlsrc : POINTL*) : LibC::BOOL

  # Params # psotrg : SURFOBJ* [In],psosrc : SURFOBJ* [In],psomsk : SURFOBJ* [In],pco : CLIPOBJ* [In],pxlo : XLATEOBJ* [In],pca : COLORADJUSTMENT* [In],pptlbrushorg : POINTL* [In],pptfx : POINTFIX* [In],prcl : RECTL* [In],pptl : POINTL* [In],imode : UInt32 [In]
  fun EngPlgBlt(psotrg : SURFOBJ*, psosrc : SURFOBJ*, psomsk : SURFOBJ*, pco : CLIPOBJ*, pxlo : XLATEOBJ*, pca : COLORADJUSTMENT*, pptlbrushorg : POINTL*, pptfx : POINTFIX*, prcl : RECTL*, pptl : POINTL*, imode : UInt32) : LibC::BOOL

  # Params # ppaletteentry : PALETTEENTRY* [In],redgamma : UInt16 [In],greengamma : UInt16 [In],bluegamma : UInt16 [In]
  fun HT_Get8BPPFormatPalette(ppaletteentry : PALETTEENTRY*, redgamma : UInt16, greengamma : UInt16, bluegamma : UInt16) : Int32

  # Params # ppaletteentry : PALETTEENTRY* [In],use8bppmaskpal : LibC::BOOL [In],cmymask : UInt8 [In],redgamma : UInt16 [In],greengamma : UInt16 [In],bluegamma : UInt16 [In]
  fun HT_Get8BPPMaskPalette(ppaletteentry : PALETTEENTRY*, use8bppmaskpal : LibC::BOOL, cmymask : UInt8, redgamma : UInt16, greengamma : UInt16, bluegamma : UInt16) : Int32

  # Params # hdev : HDEV [In]
  fun EngGetPrinterDataFileName(hdev : HDEV) : LibC::LPWSTR

  # Params # hdev : HDEV [In]
  fun EngGetDriverName(hdev : HDEV) : LibC::LPWSTR

  # Params # pwsz : LibC::LPWSTR [In]
  fun EngLoadModule(pwsz : LibC::LPWSTR) : LibC::HANDLE

  # Params # h : LibC::HANDLE [In],iname : Int32 [In],itype : Int32 [In],pulsize : UInt32* [In]
  fun EngFindResource(h : LibC::HANDLE, iname : Int32, itype : Int32, pulsize : UInt32*) : Void*

  # Params # h : LibC::HANDLE [In]
  fun EngFreeModule(h : LibC::HANDLE)

  # Params # 
  fun EngCreateSemaphore : HSEMAPHORE

  # Params # hsem : HSEMAPHORE [In]
  fun EngAcquireSemaphore(hsem : HSEMAPHORE)

  # Params # hsem : HSEMAPHORE [In]
  fun EngReleaseSemaphore(hsem : HSEMAPHORE)

  # Params # hsem : HSEMAPHORE [In]
  fun EngDeleteSemaphore(hsem : HSEMAPHORE)

  # Params # unicodestring : LibC::LPWSTR [In],maxbytesinunicodestring : UInt32 [In],bytesinunicodestring : UInt32* [In],multibytestring : PSTR [In],bytesinmultibytestring : UInt32 [In]
  fun EngMultiByteToUnicodeN(unicodestring : LibC::LPWSTR, maxbytesinunicodestring : UInt32, bytesinunicodestring : UInt32*, multibytestring : PSTR, bytesinmultibytestring : UInt32)

  # Params # multibytestring : PSTR [In],maxbytesinmultibytestring : UInt32 [In],bytesinmultibytestring : UInt32* [In],unicodestring : LibC::LPWSTR [In],bytesinunicodestring : UInt32 [In]
  fun EngUnicodeToMultiByteN(multibytestring : PSTR, maxbytesinmultibytestring : UInt32, bytesinmultibytestring : UInt32*, unicodestring : LibC::LPWSTR, bytesinunicodestring : UInt32)

  # Params # param0 : ENG_TIME_FIELDS* [In]
  fun EngQueryLocalTime(param0 : ENG_TIME_FIELDS*)

  # Params # ncodepage : Int32 [In],nfirstchar : Int32 [In],cchars : Int32 [In]
  fun EngComputeGlyphSet(ncodepage : Int32, nfirstchar : Int32, cchars : Int32) : FD_GLYPHSET*

  # Params # codepage : UInt32 [In],widecharstring : LibC::LPWSTR [In],bytesinwidecharstring : Int32 [In],multibytestring : PSTR [In],bytesinmultibytestring : Int32 [In]
  fun EngMultiByteToWideChar(codepage : UInt32, widecharstring : LibC::LPWSTR, bytesinwidecharstring : Int32, multibytestring : PSTR, bytesinmultibytestring : Int32) : Int32

  # Params # codepage : UInt32 [In],widecharstring : LibC::LPWSTR [In],bytesinwidecharstring : Int32 [In],multibytestring : PSTR [In],bytesinmultibytestring : Int32 [In]
  fun EngWideCharToMultiByte(codepage : UInt32, widecharstring : LibC::LPWSTR, bytesinwidecharstring : Int32, multibytestring : PSTR, bytesinmultibytestring : Int32) : Int32

  # Params # oemcodepage : UInt16* [In],ansicodepage : UInt16* [In]
  fun EngGetCurrentCodePage(oemcodepage : UInt16*, ansicodepage : UInt16*)

  # Params # hdev : HDEV [In],pemfinfo : EMFINFO* [In]
  fun EngQueryEMFInfo(hdev : HDEV, pemfinfo : EMFINFO*) : LibC::BOOL

  # Params # flags : UInt32 [In],numpatharrayelements : UInt32* [In],nummodeinfoarrayelements : UInt32* [In]
  fun GetDisplayConfigBufferSizes(flags : UInt32, numpatharrayelements : UInt32*, nummodeinfoarrayelements : UInt32*) : Int32

  # Params # numpatharrayelements : UInt32 [In],patharray : DISPLAYCONFIG_PATH_INFO* [In],nummodeinfoarrayelements : UInt32 [In],modeinfoarray : DISPLAYCONFIG_MODE_INFO* [In],flags : UInt32 [In]
  fun SetDisplayConfig(numpatharrayelements : UInt32, patharray : DISPLAYCONFIG_PATH_INFO*, nummodeinfoarrayelements : UInt32, modeinfoarray : DISPLAYCONFIG_MODE_INFO*, flags : UInt32) : Int32

  # Params # flags : UInt32 [In],numpatharrayelements : UInt32* [In],patharray : DISPLAYCONFIG_PATH_INFO* [In],nummodeinfoarrayelements : UInt32* [In],modeinfoarray : DISPLAYCONFIG_MODE_INFO* [In],currenttopologyid : DISPLAYCONFIG_TOPOLOGY_ID* [In]
  fun QueryDisplayConfig(flags : UInt32, numpatharrayelements : UInt32*, patharray : DISPLAYCONFIG_PATH_INFO*, nummodeinfoarrayelements : UInt32*, modeinfoarray : DISPLAYCONFIG_MODE_INFO*, currenttopologyid : DISPLAYCONFIG_TOPOLOGY_ID*) : Int32

  # Params # requestpacket : DISPLAYCONFIG_DEVICE_INFO_HEADER* [In]
  fun DisplayConfigGetDeviceInfo(requestpacket : DISPLAYCONFIG_DEVICE_INFO_HEADER*) : Int32

  # Params # setpacket : DISPLAYCONFIG_DEVICE_INFO_HEADER* [In]
  fun DisplayConfigSetDeviceInfo(setpacket : DISPLAYCONFIG_DEVICE_INFO_HEADER*) : Int32

  # Params # pstate : AR_STATE* [In]
  fun GetAutoRotationState(pstate : AR_STATE*) : LibC::BOOL

  # Params # porientation : ORIENTATION_PREFERENCE* [In]
  fun GetDisplayAutoRotationPreferences(porientation : ORIENTATION_PREFERENCE*) : LibC::BOOL

  # Params # orientation : ORIENTATION_PREFERENCE [In]
  fun SetDisplayAutoRotationPreferences(orientation : ORIENTATION_PREFERENCE) : LibC::BOOL
end
