require "./../foundation.cr"
require "./../system/com.cr"
require "./../system/registry.cr"

module Win32cr::Devices::HumanInterfaceDevice
  alias LPDIENUMEFFECTSINFILECALLBACK = Proc(Win32cr::Devices::HumanInterfaceDevice::DIFILEEFFECT*, Void*, Win32cr::Foundation::BOOL)*

  alias LPDIENUMDEVICEOBJECTSCALLBACKA = Proc(Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEA*, Void*, Win32cr::Foundation::BOOL)*

  alias LPDIENUMDEVICEOBJECTSCALLBACKW = Proc(Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEW*, Void*, Win32cr::Foundation::BOOL)*

  alias LPDIENUMEFFECTSCALLBACKA = Proc(Win32cr::Devices::HumanInterfaceDevice::DIEFFECTINFOA*, Void*, Win32cr::Foundation::BOOL)*

  alias LPDIENUMEFFECTSCALLBACKW = Proc(Win32cr::Devices::HumanInterfaceDevice::DIEFFECTINFOW*, Void*, Win32cr::Foundation::BOOL)*

  alias LPDIENUMCREATEDEFFECTOBJECTSCALLBACK = Proc(Void*, Void*, Win32cr::Foundation::BOOL)*

  alias LPDIENUMDEVICESCALLBACKA = Proc(Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEA*, Void*, Win32cr::Foundation::BOOL)*

  alias LPDIENUMDEVICESCALLBACKW = Proc(Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEW*, Void*, Win32cr::Foundation::BOOL)*

  alias LPDICONFIGUREDEVICESCALLBACK = Proc(Void*, Void*, Win32cr::Foundation::BOOL)*

  alias LPDIENUMDEVICESBYSEMANTICSCBA = Proc(Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEA*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::BOOL)*

  alias LPDIENUMDEVICESBYSEMANTICSCBW = Proc(Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEW*, Void*, UInt32, UInt32, Void*, Win32cr::Foundation::BOOL)*

  alias LPFNSHOWJOYCPL = Proc(Win32cr::Foundation::HWND, Void)*

  alias LPDIJOYTYPECALLBACK = Proc(Win32cr::Foundation::PWSTR, Void*, Win32cr::Foundation::BOOL)*

  alias PHIDP_INSERT_SCANCODES = Proc(Void*, Win32cr::Foundation::PSTR, UInt32, Win32cr::Foundation::BOOLEAN)*

  alias PFN_HidP_GetVersionInternal = Proc(UInt32*, Win32cr::Foundation::NTSTATUS)*

  DIRECTINPUT_VERSION = 2048_u32
  JOY_HW_NONE = 0_u32
  JOY_HW_CUSTOM = 1_u32
  JOY_HW_2A_2B_GENERIC = 2_u32
  JOY_HW_2A_4B_GENERIC = 3_u32
  JOY_HW_2B_GAMEPAD = 4_u32
  JOY_HW_2B_FLIGHTYOKE = 5_u32
  JOY_HW_2B_FLIGHTYOKETHROTTLE = 6_u32
  JOY_HW_3A_2B_GENERIC = 7_u32
  JOY_HW_3A_4B_GENERIC = 8_u32
  JOY_HW_4B_GAMEPAD = 9_u32
  JOY_HW_4B_FLIGHTYOKE = 10_u32
  JOY_HW_4B_FLIGHTYOKETHROTTLE = 11_u32
  JOY_HW_TWO_2A_2B_WITH_Y = 12_u32
  JOY_HW_LASTENTRY = 13_u32
  JOY_ISCAL_XY = 1_i32
  JOY_ISCAL_Z = 2_i32
  JOY_ISCAL_R = 4_i32
  JOY_ISCAL_U = 8_i32
  JOY_ISCAL_V = 16_i32
  JOY_ISCAL_POV = 32_i32
  JOY_POV_NUMDIRS = 4_u32
  JOY_POVVAL_FORWARD = 0_u32
  JOY_POVVAL_BACKWARD = 1_u32
  JOY_POVVAL_LEFT = 2_u32
  JOY_POVVAL_RIGHT = 3_u32
  JOY_HWS_HASZ = 1_i32
  JOY_HWS_HASPOV = 2_i32
  JOY_HWS_POVISBUTTONCOMBOS = 4_i32
  JOY_HWS_POVISPOLL = 8_i32
  JOY_HWS_ISYOKE = 16_i32
  JOY_HWS_ISGAMEPAD = 32_i32
  JOY_HWS_ISCARCTRL = 64_i32
  JOY_HWS_XISJ1Y = 128_i32
  JOY_HWS_XISJ2X = 256_i32
  JOY_HWS_XISJ2Y = 512_i32
  JOY_HWS_YISJ1X = 1024_i32
  JOY_HWS_YISJ2X = 2048_i32
  JOY_HWS_YISJ2Y = 4096_i32
  JOY_HWS_ZISJ1X = 8192_i32
  JOY_HWS_ZISJ1Y = 16384_i32
  JOY_HWS_ZISJ2X = 32768_i32
  JOY_HWS_POVISJ1X = 65536_i32
  JOY_HWS_POVISJ1Y = 131072_i32
  JOY_HWS_POVISJ2X = 262144_i32
  JOY_HWS_HASR = 524288_i32
  JOY_HWS_RISJ1X = 1048576_i32
  JOY_HWS_RISJ1Y = 2097152_i32
  JOY_HWS_RISJ2Y = 4194304_i32
  JOY_HWS_HASU = 8388608_i32
  JOY_HWS_HASV = 16777216_i32
  JOY_US_HASRUDDER = 1_i32
  JOY_US_PRESENT = 2_i32
  JOY_US_ISOEM = 4_i32
  JOY_US_RESERVED = -2147483648_i32
  JOYTYPE_ZEROGAMEENUMOEMDATA = 1_i32
  JOYTYPE_NOAUTODETECTGAMEPORT = 2_i32
  JOYTYPE_NOHIDDIRECT = 4_i32
  JOYTYPE_ANALOGCOMPAT = 8_i32
  JOYTYPE_DEFAULTPROPSHEET = -2147483648_i32
  JOYTYPE_DEVICEHIDE = 65536_i32
  JOYTYPE_MOUSEHIDE = 131072_i32
  JOYTYPE_KEYBHIDE = 262144_i32
  JOYTYPE_GAMEHIDE = 524288_i32
  JOYTYPE_HIDEACTIVE = 1048576_i32
  JOYTYPE_INFOMASK = 14680064_i32
  JOYTYPE_INFODEFAULT = 0_i32
  JOYTYPE_INFOYYPEDALS = 2097152_i32
  JOYTYPE_INFOZYPEDALS = 4194304_i32
  JOYTYPE_INFOYRPEDALS = 6291456_i32
  JOYTYPE_INFOZRPEDALS = 8388608_i32
  JOYTYPE_INFOZISSLIDER = 2097152_i32
  JOYTYPE_INFOZISZ = 4194304_i32
  JOYTYPE_ENABLEINPUTREPORT = 16777216_i32
  MAX_JOYSTRING = 256_u32
  MAX_JOYSTICKOEMVXDNAME = 260_u32
  DITC_REGHWSETTINGS = 1_u32
  DITC_CLSIDCONFIG = 2_u32
  DITC_DISPLAYNAME = 4_u32
  DITC_CALLOUT = 8_u32
  DITC_HARDWAREID = 16_u32
  DITC_FLAGS1 = 32_u32
  DITC_FLAGS2 = 64_u32
  DITC_MAPFILE = 128_u32
  DIJC_GUIDINSTANCE = 1_u32
  DIJC_REGHWCONFIGTYPE = 2_u32
  DIJC_GAIN = 4_u32
  DIJC_CALLOUT = 8_u32
  DIJC_WDMGAMEPORT = 16_u32
  DIJU_USERVALUES = 1_u32
  DIJU_GLOBALDRIVER = 2_u32
  DIJU_GAMEPORTEMULATOR = 4_u32
  GUID_KeyboardClass = "4d36e96b-e325-11ce-bfc1-08002be10318"
  GUID_MediaClass = "4d36e96c-e325-11ce-bfc1-08002be10318"
  GUID_MouseClass = "4d36e96f-e325-11ce-bfc1-08002be10318"
  GUID_HIDClass = "745a17a0-74d3-11d0-b6fe-00a0c90f57da"
  DIRECTINPUT_NOTIFICATION_MSGSTRINGA = "DIRECTINPUT_NOTIFICATION_MSGSTRING"
  DIRECTINPUT_NOTIFICATION_MSGSTRINGW = "DIRECTINPUT_NOTIFICATION_MSGSTRING"
  DIRECTINPUT_NOTIFICATION_MSGSTRING = "DIRECTINPUT_NOTIFICATION_MSGSTRING"
  DIMSGWP_NEWAPPSTART = 1_u32
  DIMSGWP_DX8APPSTART = 2_u32
  DIMSGWP_DX8MAPPERAPPSTART = 3_u32
  DIAPPIDFLAG_NOTIME = 1_u32
  DIAPPIDFLAG_NOSIZE = 2_u32
  DIRECTINPUT_REGSTR_VAL_APPIDFLAGA = "AppIdFlag"
  DIRECTINPUT_REGSTR_KEY_LASTAPPA = "MostRecentApplication"
  DIRECTINPUT_REGSTR_KEY_LASTMAPAPPA = "MostRecentMapperApplication"
  DIRECTINPUT_REGSTR_VAL_VERSIONA = "Version"
  DIRECTINPUT_REGSTR_VAL_NAMEA = "Name"
  DIRECTINPUT_REGSTR_VAL_IDA = "Id"
  DIRECTINPUT_REGSTR_VAL_MAPPERA = "UsesMapper"
  DIRECTINPUT_REGSTR_VAL_LASTSTARTA = "MostRecentStart"
  DIRECTINPUT_REGSTR_VAL_APPIDFLAGW = "AppIdFlag"
  DIRECTINPUT_REGSTR_KEY_LASTAPPW = "MostRecentApplication"
  DIRECTINPUT_REGSTR_KEY_LASTMAPAPPW = "MostRecentMapperApplication"
  DIRECTINPUT_REGSTR_VAL_VERSIONW = "Version"
  DIRECTINPUT_REGSTR_VAL_NAMEW = "Name"
  DIRECTINPUT_REGSTR_VAL_IDW = "Id"
  DIRECTINPUT_REGSTR_VAL_MAPPERW = "UsesMapper"
  DIRECTINPUT_REGSTR_VAL_LASTSTARTW = "MostRecentStart"
  DIRECTINPUT_REGSTR_VAL_APPIDFLAG = "AppIdFlag"
  DIRECTINPUT_REGSTR_KEY_LASTAPP = "MostRecentApplication"
  DIRECTINPUT_REGSTR_KEY_LASTMAPAPP = "MostRecentMapperApplication"
  DIRECTINPUT_REGSTR_VAL_VERSION = "Version"
  DIRECTINPUT_REGSTR_VAL_NAME = "Name"
  DIRECTINPUT_REGSTR_VAL_ID = "Id"
  DIRECTINPUT_REGSTR_VAL_MAPPER = "UsesMapper"
  DIRECTINPUT_REGSTR_VAL_LASTSTART = "MostRecentStart"
  DIERR_NOMOREITEMS = -2147024637_i32
  DIERR_DRIVERFIRST = -2147220736_i32
  DIERR_DRIVERLAST = -2147220481_i32
  DIERR_INVALIDCLASSINSTALLER = -2147220480_i32
  DIERR_CANCELLED = -2147220479_i32
  DIERR_BADINF = -2147220478_i32
  DIDIFT_DELETE = 16777216_u32
  GUID_DEVINTERFACE_HID = "4d1e55b2-f16f-11cf-88cb-001111000030"
  GUID_HID_INTERFACE_NOTIFY = "2c4e2e88-25e6-4c33-882f-3d82e6073681"
  GUID_HID_INTERFACE_HIDPARSE = "f5c315a5-69ac-4bc2-9279-d0b64576f44b"
  DEVPKEY_DeviceInterface_HID_UsagePage = UI::Shell::PropertiesSystem::PROPERTYKEY.new(LibC::GUID.new(0xcbf38310_u32, 0x4a17_u16, 0x4310_u16, StaticArray[0xa1_u8, 0xeb_u8, 0x24_u8, 0x7f_u8, 0xb_u8, 0x67_u8, 0x59_u8, 0x3b_u8]), 2_u32)
  DEVPKEY_DeviceInterface_HID_UsageId = UI::Shell::PropertiesSystem::PROPERTYKEY.new(LibC::GUID.new(0xcbf38310_u32, 0x4a17_u16, 0x4310_u16, StaticArray[0xa1_u8, 0xeb_u8, 0x24_u8, 0x7f_u8, 0xb_u8, 0x67_u8, 0x59_u8, 0x3b_u8]), 3_u32)
  DEVPKEY_DeviceInterface_HID_IsReadOnly = UI::Shell::PropertiesSystem::PROPERTYKEY.new(LibC::GUID.new(0xcbf38310_u32, 0x4a17_u16, 0x4310_u16, StaticArray[0xa1_u8, 0xeb_u8, 0x24_u8, 0x7f_u8, 0xb_u8, 0x67_u8, 0x59_u8, 0x3b_u8]), 4_u32)
  DEVPKEY_DeviceInterface_HID_VendorId = UI::Shell::PropertiesSystem::PROPERTYKEY.new(LibC::GUID.new(0xcbf38310_u32, 0x4a17_u16, 0x4310_u16, StaticArray[0xa1_u8, 0xeb_u8, 0x24_u8, 0x7f_u8, 0xb_u8, 0x67_u8, 0x59_u8, 0x3b_u8]), 5_u32)
  DEVPKEY_DeviceInterface_HID_ProductId = UI::Shell::PropertiesSystem::PROPERTYKEY.new(LibC::GUID.new(0xcbf38310_u32, 0x4a17_u16, 0x4310_u16, StaticArray[0xa1_u8, 0xeb_u8, 0x24_u8, 0x7f_u8, 0xb_u8, 0x67_u8, 0x59_u8, 0x3b_u8]), 6_u32)
  DEVPKEY_DeviceInterface_HID_VersionNumber = UI::Shell::PropertiesSystem::PROPERTYKEY.new(LibC::GUID.new(0xcbf38310_u32, 0x4a17_u16, 0x4310_u16, StaticArray[0xa1_u8, 0xeb_u8, 0x24_u8, 0x7f_u8, 0xb_u8, 0x67_u8, 0x59_u8, 0x3b_u8]), 7_u32)
  DEVPKEY_DeviceInterface_HID_BackgroundAccess = UI::Shell::PropertiesSystem::PROPERTYKEY.new(LibC::GUID.new(0xcbf38310_u32, 0x4a17_u16, 0x4310_u16, StaticArray[0xa1_u8, 0xeb_u8, 0x24_u8, 0x7f_u8, 0xb_u8, 0x67_u8, 0x59_u8, 0x3b_u8]), 8_u32)
  DEVPKEY_DeviceInterface_HID_WakeScreenOnInputCapable = UI::Shell::PropertiesSystem::PROPERTYKEY.new(LibC::GUID.new(0xcbf38310_u32, 0x4a17_u16, 0x4310_u16, StaticArray[0xa1_u8, 0xeb_u8, 0x24_u8, 0x7f_u8, 0xb_u8, 0x67_u8, 0x59_u8, 0x3b_u8]), 9_u32)
  HID_REVISION = 1_u32
  HID_USAGE_PAGE_UNDEFINED = 0_u16
  HID_USAGE_PAGE_GENERIC = 1_u16
  HID_USAGE_PAGE_SIMULATION = 2_u16
  HID_USAGE_PAGE_VR = 3_u16
  HID_USAGE_PAGE_SPORT = 4_u16
  HID_USAGE_PAGE_GAME = 5_u16
  HID_USAGE_PAGE_GENERIC_DEVICE = 6_u16
  HID_USAGE_PAGE_KEYBOARD = 7_u16
  HID_USAGE_PAGE_LED = 8_u16
  HID_USAGE_PAGE_BUTTON = 9_u16
  HID_USAGE_PAGE_ORDINAL = 10_u16
  HID_USAGE_PAGE_TELEPHONY = 11_u16
  HID_USAGE_PAGE_CONSUMER = 12_u16
  HID_USAGE_PAGE_DIGITIZER = 13_u16
  HID_USAGE_PAGE_HAPTICS = 14_u16
  HID_USAGE_PAGE_PID = 15_u16
  HID_USAGE_PAGE_UNICODE = 16_u16
  HID_USAGE_PAGE_ALPHANUMERIC = 20_u16
  HID_USAGE_PAGE_SENSOR = 32_u16
  HID_USAGE_PAGE_LIGHTING_ILLUMINATION = 89_u16
  HID_USAGE_PAGE_BARCODE_SCANNER = 140_u16
  HID_USAGE_PAGE_WEIGHING_DEVICE = 141_u16
  HID_USAGE_PAGE_MAGNETIC_STRIPE_READER = 142_u16
  HID_USAGE_PAGE_CAMERA_CONTROL = 144_u16
  HID_USAGE_PAGE_ARCADE = 145_u16
  HID_USAGE_PAGE_MICROSOFT_BLUETOOTH_HANDSFREE = 65523_u16
  HID_USAGE_PAGE_VENDOR_DEFINED_BEGIN = 65280_u16
  HID_USAGE_PAGE_VENDOR_DEFINED_END = 65535_u16
  HID_USAGE_GENERIC_POINTER = 1_u16
  HID_USAGE_GENERIC_MOUSE = 2_u16
  HID_USAGE_GENERIC_JOYSTICK = 4_u16
  HID_USAGE_GENERIC_GAMEPAD = 5_u16
  HID_USAGE_GENERIC_KEYBOARD = 6_u16
  HID_USAGE_GENERIC_KEYPAD = 7_u16
  HID_USAGE_GENERIC_MULTI_AXIS_CONTROLLER = 8_u16
  HID_USAGE_GENERIC_TABLET_PC_SYSTEM_CTL = 9_u16
  HID_USAGE_GENERIC_PORTABLE_DEVICE_CONTROL = 13_u16
  HID_USAGE_GENERIC_INTERACTIVE_CONTROL = 14_u16
  HID_USAGE_GENERIC_COUNTED_BUFFER = 58_u16
  HID_USAGE_GENERIC_SYSTEM_CTL = 128_u16
  HID_USAGE_GENERIC_X = 48_u16
  HID_USAGE_GENERIC_Y = 49_u16
  HID_USAGE_GENERIC_Z = 50_u16
  HID_USAGE_GENERIC_RX = 51_u16
  HID_USAGE_GENERIC_RY = 52_u16
  HID_USAGE_GENERIC_RZ = 53_u16
  HID_USAGE_GENERIC_SLIDER = 54_u16
  HID_USAGE_GENERIC_DIAL = 55_u16
  HID_USAGE_GENERIC_WHEEL = 56_u16
  HID_USAGE_GENERIC_HATSWITCH = 57_u16
  HID_USAGE_GENERIC_BYTE_COUNT = 59_u16
  HID_USAGE_GENERIC_MOTION_WAKEUP = 60_u16
  HID_USAGE_GENERIC_START = 61_u16
  HID_USAGE_GENERIC_SELECT = 62_u16
  HID_USAGE_GENERIC_VX = 64_u16
  HID_USAGE_GENERIC_VY = 65_u16
  HID_USAGE_GENERIC_VZ = 66_u16
  HID_USAGE_GENERIC_VBRX = 67_u16
  HID_USAGE_GENERIC_VBRY = 68_u16
  HID_USAGE_GENERIC_VBRZ = 69_u16
  HID_USAGE_GENERIC_VNO = 70_u16
  HID_USAGE_GENERIC_FEATURE_NOTIFICATION = 71_u16
  HID_USAGE_GENERIC_RESOLUTION_MULTIPLIER = 72_u16
  HID_USAGE_GENERIC_SYSCTL_POWER = 129_u16
  HID_USAGE_GENERIC_SYSCTL_SLEEP = 130_u16
  HID_USAGE_GENERIC_SYSCTL_WAKE = 131_u16
  HID_USAGE_GENERIC_SYSCTL_CONTEXT_MENU = 132_u16
  HID_USAGE_GENERIC_SYSCTL_MAIN_MENU = 133_u16
  HID_USAGE_GENERIC_SYSCTL_APP_MENU = 134_u16
  HID_USAGE_GENERIC_SYSCTL_HELP_MENU = 135_u16
  HID_USAGE_GENERIC_SYSCTL_MENU_EXIT = 136_u16
  HID_USAGE_GENERIC_SYSCTL_MENU_SELECT = 137_u16
  HID_USAGE_GENERIC_SYSCTL_MENU_RIGHT = 138_u16
  HID_USAGE_GENERIC_SYSCTL_MENU_LEFT = 139_u16
  HID_USAGE_GENERIC_SYSCTL_MENU_UP = 140_u16
  HID_USAGE_GENERIC_SYSCTL_MENU_DOWN = 141_u16
  HID_USAGE_GENERIC_SYSCTL_COLD_RESTART = 142_u16
  HID_USAGE_GENERIC_SYSCTL_WARM_RESTART = 143_u16
  HID_USAGE_GENERIC_DPAD_UP = 144_u16
  HID_USAGE_GENERIC_DPAD_DOWN = 145_u16
  HID_USAGE_GENERIC_DPAD_RIGHT = 146_u16
  HID_USAGE_GENERIC_DPAD_LEFT = 147_u16
  HID_USAGE_GENERIC_SYSCTL_FN = 151_u16
  HID_USAGE_GENERIC_SYSCTL_FN_LOCK = 152_u16
  HID_USAGE_GENERIC_SYSCTL_FN_LOCK_INDICATOR = 153_u16
  HID_USAGE_GENERIC_SYSCTL_DISMISS_NOTIFICATION = 154_u16
  HID_USAGE_GENERIC_SYSCTL_DOCK = 160_u16
  HID_USAGE_GENERIC_SYSCTL_UNDOCK = 161_u16
  HID_USAGE_GENERIC_SYSCTL_SETUP = 162_u16
  HID_USAGE_GENERIC_SYSCTL_SYS_BREAK = 163_u16
  HID_USAGE_GENERIC_SYSCTL_SYS_DBG_BREAK = 164_u16
  HID_USAGE_GENERIC_SYSCTL_APP_BREAK = 165_u16
  HID_USAGE_GENERIC_SYSCTL_APP_DBG_BREAK = 166_u16
  HID_USAGE_GENERIC_SYSCTL_MUTE = 167_u16
  HID_USAGE_GENERIC_SYSCTL_HIBERNATE = 168_u16
  HID_USAGE_GENERIC_SYSCTL_DISP_INVERT = 176_u16
  HID_USAGE_GENERIC_SYSCTL_DISP_INTERNAL = 177_u16
  HID_USAGE_GENERIC_SYSCTL_DISP_EXTERNAL = 178_u16
  HID_USAGE_GENERIC_SYSCTL_DISP_BOTH = 179_u16
  HID_USAGE_GENERIC_SYSCTL_DISP_DUAL = 180_u16
  HID_USAGE_GENERIC_SYSCTL_DISP_TOGGLE = 181_u16
  HID_USAGE_GENERIC_SYSCTL_DISP_SWAP = 182_u16
  HID_USAGE_GENERIC_SYSCTL_DISP_AUTOSCALE = 183_u16
  HID_USAGE_GENERIC_SYSTEM_DISPLAY_ROTATION_LOCK_BUTTON = 201_u16
  HID_USAGE_GENERIC_SYSTEM_DISPLAY_ROTATION_LOCK_SLIDER_SWITCH = 202_u16
  HID_USAGE_GENERIC_CONTROL_ENABLE = 203_u16
  HID_USAGE_SIMULATION_FLIGHT_SIMULATION_DEVICE = 1_u16
  HID_USAGE_SIMULATION_AUTOMOBILE_SIMULATION_DEVICE = 2_u16
  HID_USAGE_SIMULATION_TANK_SIMULATION_DEVICE = 3_u16
  HID_USAGE_SIMULATION_SPACESHIP_SIMULATION_DEVICE = 4_u16
  HID_USAGE_SIMULATION_SUBMARINE_SIMULATION_DEVICE = 5_u16
  HID_USAGE_SIMULATION_SAILING_SIMULATION_DEVICE = 6_u16
  HID_USAGE_SIMULATION_MOTORCYCLE_SIMULATION_DEVICE = 7_u16
  HID_USAGE_SIMULATION_SPORTS_SIMULATION_DEVICE = 8_u16
  HID_USAGE_SIMULATION_AIRPLANE_SIMULATION_DEVICE = 9_u16
  HID_USAGE_SIMULATION_HELICOPTER_SIMULATION_DEVICE = 10_u16
  HID_USAGE_SIMULATION_MAGIC_CARPET_SIMULATION_DEVICE = 11_u16
  HID_USAGE_SIMULATION_BICYCLE_SIMULATION_DEVICE = 12_u16
  HID_USAGE_SIMULATION_FLIGHT_CONTROL_STICK = 32_u16
  HID_USAGE_SIMULATION_FLIGHT_STICK = 33_u16
  HID_USAGE_SIMULATION_CYCLIC_CONTROL = 34_u16
  HID_USAGE_SIMULATION_CYCLIC_TRIM = 35_u16
  HID_USAGE_SIMULATION_FLIGHT_YOKE = 36_u16
  HID_USAGE_SIMULATION_TRACK_CONTROL = 37_u16
  HID_USAGE_SIMULATION_AILERON = 176_u16
  HID_USAGE_SIMULATION_AILERON_TRIM = 177_u16
  HID_USAGE_SIMULATION_ANTI_TORQUE_CONTROL = 178_u16
  HID_USAGE_SIMULATION_AUTOPIOLOT_ENABLE = 179_u16
  HID_USAGE_SIMULATION_CHAFF_RELEASE = 180_u16
  HID_USAGE_SIMULATION_COLLECTIVE_CONTROL = 181_u16
  HID_USAGE_SIMULATION_DIVE_BRAKE = 182_u16
  HID_USAGE_SIMULATION_ELECTRONIC_COUNTERMEASURES = 183_u16
  HID_USAGE_SIMULATION_ELEVATOR = 184_u16
  HID_USAGE_SIMULATION_ELEVATOR_TRIM = 185_u16
  HID_USAGE_SIMULATION_RUDDER = 186_u16
  HID_USAGE_SIMULATION_THROTTLE = 187_u16
  HID_USAGE_SIMULATION_FLIGHT_COMMUNICATIONS = 188_u16
  HID_USAGE_SIMULATION_FLARE_RELEASE = 189_u16
  HID_USAGE_SIMULATION_LANDING_GEAR = 190_u16
  HID_USAGE_SIMULATION_TOE_BRAKE = 191_u16
  HID_USAGE_SIMULATION_TRIGGER = 192_u16
  HID_USAGE_SIMULATION_WEAPONS_ARM = 193_u16
  HID_USAGE_SIMULATION_WEAPONS_SELECT = 194_u16
  HID_USAGE_SIMULATION_WING_FLAPS = 195_u16
  HID_USAGE_SIMULATION_ACCELLERATOR = 196_u16
  HID_USAGE_SIMULATION_BRAKE = 197_u16
  HID_USAGE_SIMULATION_CLUTCH = 198_u16
  HID_USAGE_SIMULATION_SHIFTER = 199_u16
  HID_USAGE_SIMULATION_STEERING = 200_u16
  HID_USAGE_SIMULATION_TURRET_DIRECTION = 201_u16
  HID_USAGE_SIMULATION_BARREL_ELEVATION = 202_u16
  HID_USAGE_SIMULATION_DIVE_PLANE = 203_u16
  HID_USAGE_SIMULATION_BALLAST = 204_u16
  HID_USAGE_SIMULATION_BICYCLE_CRANK = 205_u16
  HID_USAGE_SIMULATION_HANDLE_BARS = 206_u16
  HID_USAGE_SIMULATION_FRONT_BRAKE = 207_u16
  HID_USAGE_SIMULATION_REAR_BRAKE = 208_u16
  HID_USAGE_VR_BELT = 1_u16
  HID_USAGE_VR_BODY_SUIT = 2_u16
  HID_USAGE_VR_FLEXOR = 3_u16
  HID_USAGE_VR_GLOVE = 4_u16
  HID_USAGE_VR_HEAD_TRACKER = 5_u16
  HID_USAGE_VR_HEAD_MOUNTED_DISPLAY = 6_u16
  HID_USAGE_VR_HAND_TRACKER = 7_u16
  HID_USAGE_VR_OCULOMETER = 8_u16
  HID_USAGE_VR_VEST = 9_u16
  HID_USAGE_VR_ANIMATRONIC_DEVICE = 10_u16
  HID_USAGE_VR_STEREO_ENABLE = 32_u16
  HID_USAGE_VR_DISPLAY_ENABLE = 33_u16
  HID_USAGE_SPORT_BASEBALL_BAT = 1_u16
  HID_USAGE_SPORT_GOLF_CLUB = 2_u16
  HID_USAGE_SPORT_ROWING_MACHINE = 3_u16
  HID_USAGE_SPORT_TREADMILL = 4_u16
  HID_USAGE_SPORT_STICK_TYPE = 56_u16
  HID_USAGE_SPORT_OAR = 48_u16
  HID_USAGE_SPORT_SLOPE = 49_u16
  HID_USAGE_SPORT_RATE = 50_u16
  HID_USAGE_SPORT_STICK_SPEED = 51_u16
  HID_USAGE_SPORT_STICK_FACE_ANGLE = 52_u16
  HID_USAGE_SPORT_HEEL_TOE = 53_u16
  HID_USAGE_SPORT_FOLLOW_THROUGH = 54_u16
  HID_USAGE_SPORT_TEMPO = 55_u16
  HID_USAGE_SPORT_HEIGHT = 57_u16
  HID_USAGE_SPORT_PUTTER = 80_u16
  HID_USAGE_SPORT_1_IRON = 81_u16
  HID_USAGE_SPORT_2_IRON = 82_u16
  HID_USAGE_SPORT_3_IRON = 83_u16
  HID_USAGE_SPORT_4_IRON = 84_u16
  HID_USAGE_SPORT_5_IRON = 85_u16
  HID_USAGE_SPORT_6_IRON = 86_u16
  HID_USAGE_SPORT_7_IRON = 87_u16
  HID_USAGE_SPORT_8_IRON = 88_u16
  HID_USAGE_SPORT_9_IRON = 89_u16
  HID_USAGE_SPORT_10_IRON = 90_u16
  HID_USAGE_SPORT_11_IRON = 91_u16
  HID_USAGE_SPORT_SAND_WEDGE = 92_u16
  HID_USAGE_SPORT_LOFT_WEDGE = 93_u16
  HID_USAGE_SPORT_POWER_WEDGE = 94_u16
  HID_USAGE_SPORT_1_WOOD = 95_u16
  HID_USAGE_SPORT_3_WOOD = 96_u16
  HID_USAGE_SPORT_5_WOOD = 97_u16
  HID_USAGE_SPORT_7_WOOD = 98_u16
  HID_USAGE_SPORT_9_WOOD = 99_u16
  HID_USAGE_GAME_3D_GAME_CONTROLLER = 1_u16
  HID_USAGE_GAME_PINBALL_DEVICE = 2_u16
  HID_USAGE_GAME_GUN_DEVICE = 3_u16
  HID_USAGE_GAME_POINT_OF_VIEW = 32_u16
  HID_USAGE_GAME_GUN_SELECTOR = 50_u16
  HID_USAGE_GAME_GAMEPAD_FIRE_JUMP = 55_u16
  HID_USAGE_GAME_GAMEPAD_TRIGGER = 57_u16
  HID_USAGE_GAME_TURN_RIGHT_LEFT = 33_u16
  HID_USAGE_GAME_PITCH_FORWARD_BACK = 34_u16
  HID_USAGE_GAME_ROLL_RIGHT_LEFT = 35_u16
  HID_USAGE_GAME_MOVE_RIGHT_LEFT = 36_u16
  HID_USAGE_GAME_MOVE_FORWARD_BACK = 37_u16
  HID_USAGE_GAME_MOVE_UP_DOWN = 38_u16
  HID_USAGE_GAME_LEAN_RIGHT_LEFT = 39_u16
  HID_USAGE_GAME_LEAN_FORWARD_BACK = 40_u16
  HID_USAGE_GAME_POV_HEIGHT = 41_u16
  HID_USAGE_GAME_FLIPPER = 42_u16
  HID_USAGE_GAME_SECONDARY_FLIPPER = 43_u16
  HID_USAGE_GAME_BUMP = 44_u16
  HID_USAGE_GAME_NEW_GAME = 45_u16
  HID_USAGE_GAME_SHOOT_BALL = 46_u16
  HID_USAGE_GAME_PLAYER = 47_u16
  HID_USAGE_GAME_GUN_BOLT = 48_u16
  HID_USAGE_GAME_GUN_CLIP = 49_u16
  HID_USAGE_GAME_GUN_SINGLE_SHOT = 51_u16
  HID_USAGE_GAME_GUN_BURST = 52_u16
  HID_USAGE_GAME_GUN_AUTOMATIC = 53_u16
  HID_USAGE_GAME_GUN_SAFETY = 54_u16
  HID_USAGE_GENERIC_DEVICE_BATTERY_STRENGTH = 32_u16
  HID_USAGE_GENERIC_DEVICE_WIRELESS_CHANNEL = 33_u16
  HID_USAGE_GENERIC_DEVICE_WIRELESS_ID = 34_u16
  HID_USAGE_GENERIC_DEVICE_DISCOVER_WIRELESS_CONTROL = 35_u16
  HID_USAGE_GENERIC_DEVICE_SECURITY_CODE_CHAR_ENTERED = 36_u16
  HID_USAGE_GENERIC_DEVICE_SECURITY_CODE_CHAR_ERASED = 37_u16
  HID_USAGE_GENERIC_DEVICE_SECURITY_CODE_CLEARED = 38_u16
  HID_USAGE_KEYBOARD_NOEVENT = 0_u16
  HID_USAGE_KEYBOARD_ROLLOVER = 1_u16
  HID_USAGE_KEYBOARD_POSTFAIL = 2_u16
  HID_USAGE_KEYBOARD_UNDEFINED = 3_u16
  HID_USAGE_KEYBOARD_aA = 4_u16
  HID_USAGE_KEYBOARD_zZ = 29_u16
  HID_USAGE_KEYBOARD_ONE = 30_u16
  HID_USAGE_KEYBOARD_ZERO = 39_u16
  HID_USAGE_KEYBOARD_LCTRL = 224_u16
  HID_USAGE_KEYBOARD_LSHFT = 225_u16
  HID_USAGE_KEYBOARD_LALT = 226_u16
  HID_USAGE_KEYBOARD_LGUI = 227_u16
  HID_USAGE_KEYBOARD_RCTRL = 228_u16
  HID_USAGE_KEYBOARD_RSHFT = 229_u16
  HID_USAGE_KEYBOARD_RALT = 230_u16
  HID_USAGE_KEYBOARD_RGUI = 231_u16
  HID_USAGE_KEYBOARD_SCROLL_LOCK = 71_u16
  HID_USAGE_KEYBOARD_NUM_LOCK = 83_u16
  HID_USAGE_KEYBOARD_CAPS_LOCK = 57_u16
  HID_USAGE_KEYBOARD_F1 = 58_u16
  HID_USAGE_KEYBOARD_F2 = 59_u16
  HID_USAGE_KEYBOARD_F3 = 60_u16
  HID_USAGE_KEYBOARD_F4 = 61_u16
  HID_USAGE_KEYBOARD_F5 = 62_u16
  HID_USAGE_KEYBOARD_F6 = 63_u16
  HID_USAGE_KEYBOARD_F7 = 64_u16
  HID_USAGE_KEYBOARD_F8 = 65_u16
  HID_USAGE_KEYBOARD_F9 = 66_u16
  HID_USAGE_KEYBOARD_F10 = 67_u16
  HID_USAGE_KEYBOARD_F11 = 68_u16
  HID_USAGE_KEYBOARD_F12 = 69_u16
  HID_USAGE_KEYBOARD_F13 = 104_u16
  HID_USAGE_KEYBOARD_F14 = 105_u16
  HID_USAGE_KEYBOARD_F15 = 106_u16
  HID_USAGE_KEYBOARD_F16 = 107_u16
  HID_USAGE_KEYBOARD_F17 = 108_u16
  HID_USAGE_KEYBOARD_F18 = 109_u16
  HID_USAGE_KEYBOARD_F19 = 110_u16
  HID_USAGE_KEYBOARD_F20 = 111_u16
  HID_USAGE_KEYBOARD_F21 = 112_u16
  HID_USAGE_KEYBOARD_F22 = 113_u16
  HID_USAGE_KEYBOARD_F23 = 114_u16
  HID_USAGE_KEYBOARD_F24 = 115_u16
  HID_USAGE_KEYBOARD_RETURN = 40_u16
  HID_USAGE_KEYBOARD_ESCAPE = 41_u16
  HID_USAGE_KEYBOARD_DELETE = 42_u16
  HID_USAGE_KEYBOARD_PRINT_SCREEN = 70_u16
  HID_USAGE_KEYBOARD_DELETE_FORWARD = 76_u16
  HID_USAGE_LED_NUM_LOCK = 1_u16
  HID_USAGE_LED_CAPS_LOCK = 2_u16
  HID_USAGE_LED_SCROLL_LOCK = 3_u16
  HID_USAGE_LED_COMPOSE = 4_u16
  HID_USAGE_LED_KANA = 5_u16
  HID_USAGE_LED_POWER = 6_u16
  HID_USAGE_LED_SHIFT = 7_u16
  HID_USAGE_LED_DO_NOT_DISTURB = 8_u16
  HID_USAGE_LED_MUTE = 9_u16
  HID_USAGE_LED_TONE_ENABLE = 10_u16
  HID_USAGE_LED_HIGH_CUT_FILTER = 11_u16
  HID_USAGE_LED_LOW_CUT_FILTER = 12_u16
  HID_USAGE_LED_EQUALIZER_ENABLE = 13_u16
  HID_USAGE_LED_SOUND_FIELD_ON = 14_u16
  HID_USAGE_LED_SURROUND_FIELD_ON = 15_u16
  HID_USAGE_LED_REPEAT = 16_u16
  HID_USAGE_LED_STEREO = 17_u16
  HID_USAGE_LED_SAMPLING_RATE_DETECT = 18_u16
  HID_USAGE_LED_SPINNING = 19_u16
  HID_USAGE_LED_CAV = 20_u16
  HID_USAGE_LED_CLV = 21_u16
  HID_USAGE_LED_RECORDING_FORMAT_DET = 22_u16
  HID_USAGE_LED_OFF_HOOK = 23_u16
  HID_USAGE_LED_RING = 24_u16
  HID_USAGE_LED_MESSAGE_WAITING = 25_u16
  HID_USAGE_LED_DATA_MODE = 26_u16
  HID_USAGE_LED_BATTERY_OPERATION = 27_u16
  HID_USAGE_LED_BATTERY_OK = 28_u16
  HID_USAGE_LED_BATTERY_LOW = 29_u16
  HID_USAGE_LED_SPEAKER = 30_u16
  HID_USAGE_LED_HEAD_SET = 31_u16
  HID_USAGE_LED_HOLD = 32_u16
  HID_USAGE_LED_MICROPHONE = 33_u16
  HID_USAGE_LED_COVERAGE = 34_u16
  HID_USAGE_LED_NIGHT_MODE = 35_u16
  HID_USAGE_LED_SEND_CALLS = 36_u16
  HID_USAGE_LED_CALL_PICKUP = 37_u16
  HID_USAGE_LED_CONFERENCE = 38_u16
  HID_USAGE_LED_STAND_BY = 39_u16
  HID_USAGE_LED_CAMERA_ON = 40_u16
  HID_USAGE_LED_CAMERA_OFF = 41_u16
  HID_USAGE_LED_ON_LINE = 42_u16
  HID_USAGE_LED_OFF_LINE = 43_u16
  HID_USAGE_LED_BUSY = 44_u16
  HID_USAGE_LED_READY = 45_u16
  HID_USAGE_LED_PAPER_OUT = 46_u16
  HID_USAGE_LED_PAPER_JAM = 47_u16
  HID_USAGE_LED_REMOTE = 48_u16
  HID_USAGE_LED_FORWARD = 49_u16
  HID_USAGE_LED_REVERSE = 50_u16
  HID_USAGE_LED_STOP = 51_u16
  HID_USAGE_LED_REWIND = 52_u16
  HID_USAGE_LED_FAST_FORWARD = 53_u16
  HID_USAGE_LED_PLAY = 54_u16
  HID_USAGE_LED_PAUSE = 55_u16
  HID_USAGE_LED_RECORD = 56_u16
  HID_USAGE_LED_ERROR = 57_u16
  HID_USAGE_LED_SELECTED_INDICATOR = 58_u16
  HID_USAGE_LED_IN_USE_INDICATOR = 59_u16
  HID_USAGE_LED_MULTI_MODE_INDICATOR = 60_u16
  HID_USAGE_LED_INDICATOR_ON = 61_u16
  HID_USAGE_LED_INDICATOR_FLASH = 62_u16
  HID_USAGE_LED_INDICATOR_SLOW_BLINK = 63_u16
  HID_USAGE_LED_INDICATOR_FAST_BLINK = 64_u16
  HID_USAGE_LED_INDICATOR_OFF = 65_u16
  HID_USAGE_LED_FLASH_ON_TIME = 66_u16
  HID_USAGE_LED_SLOW_BLINK_ON_TIME = 67_u16
  HID_USAGE_LED_SLOW_BLINK_OFF_TIME = 68_u16
  HID_USAGE_LED_FAST_BLINK_ON_TIME = 69_u16
  HID_USAGE_LED_FAST_BLINK_OFF_TIME = 70_u16
  HID_USAGE_LED_INDICATOR_COLOR = 71_u16
  HID_USAGE_LED_RED = 72_u16
  HID_USAGE_LED_GREEN = 73_u16
  HID_USAGE_LED_AMBER = 74_u16
  HID_USAGE_LED_GENERIC_INDICATOR = 75_u16
  HID_USAGE_LED_SYSTEM_SUSPEND = 76_u16
  HID_USAGE_LED_EXTERNAL_POWER = 77_u16
  HID_USAGE_TELEPHONY_PHONE = 1_u16
  HID_USAGE_TELEPHONY_ANSWERING_MACHINE = 2_u16
  HID_USAGE_TELEPHONY_MESSAGE_CONTROLS = 3_u16
  HID_USAGE_TELEPHONY_HANDSET = 4_u16
  HID_USAGE_TELEPHONY_HEADSET = 5_u16
  HID_USAGE_TELEPHONY_KEYPAD = 6_u16
  HID_USAGE_TELEPHONY_PROGRAMMABLE_BUTTON = 7_u16
  HID_USAGE_TELEPHONY_REDIAL = 36_u16
  HID_USAGE_TELEPHONY_TRANSFER = 37_u16
  HID_USAGE_TELEPHONY_DROP = 38_u16
  HID_USAGE_TELEPHONY_LINE = 42_u16
  HID_USAGE_TELEPHONY_RING_ENABLE = 45_u16
  HID_USAGE_TELEPHONY_SEND = 49_u16
  HID_USAGE_TELEPHONY_KEYPAD_0 = 176_u16
  HID_USAGE_TELEPHONY_KEYPAD_D = 191_u16
  HID_USAGE_TELEPHONY_HOST_AVAILABLE = 241_u16
  HID_USAGE_CONSUMERCTRL = 1_u16
  HID_USAGE_CONSUMER_CHANNEL_INCREMENT = 156_u16
  HID_USAGE_CONSUMER_CHANNEL_DECREMENT = 157_u16
  HID_USAGE_CONSUMER_PLAY = 176_u16
  HID_USAGE_CONSUMER_PAUSE = 177_u16
  HID_USAGE_CONSUMER_RECORD = 178_u16
  HID_USAGE_CONSUMER_FAST_FORWARD = 179_u16
  HID_USAGE_CONSUMER_REWIND = 180_u16
  HID_USAGE_CONSUMER_SCAN_NEXT_TRACK = 181_u16
  HID_USAGE_CONSUMER_SCAN_PREV_TRACK = 182_u16
  HID_USAGE_CONSUMER_STOP = 183_u16
  HID_USAGE_CONSUMER_PLAY_PAUSE = 205_u16
  HID_USAGE_CONSUMER_GAMEDVR_OPEN_GAMEBAR = 208_u16
  HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_RECORD = 209_u16
  HID_USAGE_CONSUMER_GAMEDVR_RECORD_CLIP = 210_u16
  HID_USAGE_CONSUMER_GAMEDVR_SCREENSHOT = 211_u16
  HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_INDICATOR = 212_u16
  HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_MICROPHONE = 213_u16
  HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_CAMERA = 214_u16
  HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_BROADCAST = 215_u16
  HID_USAGE_CONSUMER_VOLUME = 224_u16
  HID_USAGE_CONSUMER_BALANCE = 225_u16
  HID_USAGE_CONSUMER_MUTE = 226_u16
  HID_USAGE_CONSUMER_BASS = 227_u16
  HID_USAGE_CONSUMER_TREBLE = 228_u16
  HID_USAGE_CONSUMER_BASS_BOOST = 229_u16
  HID_USAGE_CONSUMER_SURROUND_MODE = 230_u16
  HID_USAGE_CONSUMER_LOUDNESS = 231_u16
  HID_USAGE_CONSUMER_MPX = 232_u16
  HID_USAGE_CONSUMER_VOLUME_INCREMENT = 233_u16
  HID_USAGE_CONSUMER_VOLUME_DECREMENT = 234_u16
  HID_USAGE_CONSUMER_BASS_INCREMENT = 338_u16
  HID_USAGE_CONSUMER_BASS_DECREMENT = 339_u16
  HID_USAGE_CONSUMER_TREBLE_INCREMENT = 340_u16
  HID_USAGE_CONSUMER_TREBLE_DECREMENT = 341_u16
  HID_USAGE_CONSUMER_AL_CONFIGURATION = 387_u16
  HID_USAGE_CONSUMER_AL_EMAIL = 394_u16
  HID_USAGE_CONSUMER_AL_CALCULATOR = 402_u16
  HID_USAGE_CONSUMER_AL_BROWSER = 404_u16
  HID_USAGE_CONSUMER_AL_SEARCH = 454_u16
  HID_USAGE_CONSUMER_AC_SEARCH = 545_u16
  HID_USAGE_CONSUMER_AC_GOTO = 546_u16
  HID_USAGE_CONSUMER_AC_HOME = 547_u16
  HID_USAGE_CONSUMER_AC_BACK = 548_u16
  HID_USAGE_CONSUMER_AC_FORWARD = 549_u16
  HID_USAGE_CONSUMER_AC_STOP = 550_u16
  HID_USAGE_CONSUMER_AC_REFRESH = 551_u16
  HID_USAGE_CONSUMER_AC_PREVIOUS = 552_u16
  HID_USAGE_CONSUMER_AC_NEXT = 553_u16
  HID_USAGE_CONSUMER_AC_BOOKMARKS = 554_u16
  HID_USAGE_CONSUMER_AC_PAN = 568_u16
  HID_USAGE_CONSUMER_EXTENDED_KEYBOARD_ATTRIBUTES_COLLECTION = 704_u16
  HID_USAGE_CONSUMER_KEYBOARD_FORM_FACTOR = 705_u16
  HID_USAGE_CONSUMER_KEYBOARD_KEY_TYPE = 706_u16
  HID_USAGE_CONSUMER_KEYBOARD_PHYSICAL_LAYOUT = 707_u16
  HID_USAGE_CONSUMER_VENDOR_SPECIFIC_KEYBOARD_PHYSICAL_LAYOUT = 708_u16
  HID_USAGE_CONSUMER_KEYBOARD_IETF_LANGUAGE_TAG_INDEX = 709_u16
  HID_USAGE_CONSUMER_IMPLEMENTED_KEYBOARD_INPUT_ASSIST_CONTROLS = 710_u16
  HID_USAGE_DIGITIZER_DIGITIZER = 1_u16
  HID_USAGE_DIGITIZER_PEN = 2_u16
  HID_USAGE_DIGITIZER_LIGHT_PEN = 3_u16
  HID_USAGE_DIGITIZER_TOUCH_SCREEN = 4_u16
  HID_USAGE_DIGITIZER_TOUCH_PAD = 5_u16
  HID_USAGE_DIGITIZER_WHITE_BOARD = 6_u16
  HID_USAGE_DIGITIZER_COORD_MEASURING = 7_u16
  HID_USAGE_DIGITIZER_3D_DIGITIZER = 8_u16
  HID_USAGE_DIGITIZER_STEREO_PLOTTER = 9_u16
  HID_USAGE_DIGITIZER_ARTICULATED_ARM = 10_u16
  HID_USAGE_DIGITIZER_ARMATURE = 11_u16
  HID_USAGE_DIGITIZER_MULTI_POINT = 12_u16
  HID_USAGE_DIGITIZER_FREE_SPACE_WAND = 13_u16
  HID_USAGE_DIGITIZER_HEAT_MAP = 15_u16
  HID_USAGE_DIGITIZER_STYLUS = 32_u16
  HID_USAGE_DIGITIZER_PUCK = 33_u16
  HID_USAGE_DIGITIZER_FINGER = 34_u16
  HID_USAGE_DIGITIZER_TABLET_FUNC_KEYS = 57_u16
  HID_USAGE_DIGITIZER_PROG_CHANGE_KEYS = 58_u16
  HID_USAGE_DIGITIZER_TIP_PRESSURE = 48_u16
  HID_USAGE_DIGITIZER_BARREL_PRESSURE = 49_u16
  HID_USAGE_DIGITIZER_IN_RANGE = 50_u16
  HID_USAGE_DIGITIZER_TOUCH = 51_u16
  HID_USAGE_DIGITIZER_UNTOUCH = 52_u16
  HID_USAGE_DIGITIZER_TAP = 53_u16
  HID_USAGE_DIGITIZER_QUALITY = 54_u16
  HID_USAGE_DIGITIZER_DATA_VALID = 55_u16
  HID_USAGE_DIGITIZER_TRANSDUCER_INDEX = 56_u16
  HID_USAGE_DIGITIZER_BATTERY_STRENGTH = 59_u16
  HID_USAGE_DIGITIZER_INVERT = 60_u16
  HID_USAGE_DIGITIZER_X_TILT = 61_u16
  HID_USAGE_DIGITIZER_Y_TILT = 62_u16
  HID_USAGE_DIGITIZER_AZIMUTH = 63_u16
  HID_USAGE_DIGITIZER_ALTITUDE = 64_u16
  HID_USAGE_DIGITIZER_TWIST = 65_u16
  HID_USAGE_DIGITIZER_TIP_SWITCH = 66_u16
  HID_USAGE_DIGITIZER_SECONDARY_TIP_SWITCH = 67_u16
  HID_USAGE_DIGITIZER_BARREL_SWITCH = 68_u16
  HID_USAGE_DIGITIZER_ERASER = 69_u16
  HID_USAGE_DIGITIZER_TABLET_PICK = 70_u16
  HID_USAGE_DIGITIZER_TRANSDUCER_SERIAL = 91_u16
  HID_USAGE_DIGITIZER_HEAT_MAP_PROTOCOL_VENDOR_ID = 106_u16
  HID_USAGE_DIGITIZER_HEAT_MAP_PROTOCOL_VERSION = 107_u16
  HID_USAGE_DIGITIZER_HEAT_MAP_FRAME_DATA = 108_u16
  HID_USAGE_DIGITIZER_TRANSDUCER_VENDOR = 145_u16
  HID_USAGE_DIGITIZER_TRANSDUCER_PRODUCT = 146_u16
  HID_USAGE_DIGITIZER_TRANSDUCER_CONNECTED = 162_u16
  HID_USAGE_HAPTICS_SIMPLE_CONTROLLER = 1_u16
  HID_USAGE_HAPTICS_WAVEFORM_LIST = 16_u16
  HID_USAGE_HAPTICS_DURATION_LIST = 17_u16
  HID_USAGE_HAPTICS_AUTO_TRIGGER = 32_u16
  HID_USAGE_HAPTICS_MANUAL_TRIGGER = 33_u16
  HID_USAGE_HAPTICS_AUTO_ASSOCIATED_CONTROL = 34_u16
  HID_USAGE_HAPTICS_INTENSITY = 35_u16
  HID_USAGE_HAPTICS_REPEAT_COUNT = 36_u16
  HID_USAGE_HAPTICS_RETRIGGER_PERIOD = 37_u16
  HID_USAGE_HAPTICS_WAVEFORM_VENDOR_PAGE = 38_u16
  HID_USAGE_HAPTICS_WAVEFORM_VENDOR_ID = 39_u16
  HID_USAGE_HAPTICS_WAVEFORM_CUTOFF_TIME = 40_u16
  HID_USAGE_HAPTICS_WAVEFORM_BEGIN = 4096_u16
  HID_USAGE_HAPTICS_WAVEFORM_STOP = 4097_u16
  HID_USAGE_HAPTICS_WAVEFORM_NULL = 4098_u16
  HID_USAGE_HAPTICS_WAVEFORM_CLICK = 4099_u16
  HID_USAGE_HAPTICS_WAVEFORM_BUZZ = 4100_u16
  HID_USAGE_HAPTICS_WAVEFORM_RUMBLE = 4101_u16
  HID_USAGE_HAPTICS_WAVEFORM_PRESS = 4102_u16
  HID_USAGE_HAPTICS_WAVEFORM_RELEASE = 4103_u16
  HID_USAGE_HAPTICS_WAVEFORM_END = 8191_u16
  HID_USAGE_HAPTICS_WAVEFORM_VENDOR_BEGIN = 8192_u16
  HID_USAGE_HAPTICS_WAVEFORM_VENDOR_END = 12287_u16
  HID_USAGE_ALPHANUMERIC_ALPHANUMERIC_DISPLAY = 1_u16
  HID_USAGE_ALPHANUMERIC_BITMAPPED_DISPLAY = 2_u16
  HID_USAGE_ALPHANUMERIC_DISPLAY_ATTRIBUTES_REPORT = 32_u16
  HID_USAGE_ALPHANUMERIC_DISPLAY_CONTROL_REPORT = 36_u16
  HID_USAGE_ALPHANUMERIC_CHARACTER_REPORT = 43_u16
  HID_USAGE_ALPHANUMERIC_DISPLAY_STATUS = 45_u16
  HID_USAGE_ALPHANUMERIC_CURSOR_POSITION_REPORT = 50_u16
  HID_USAGE_ALPHANUMERIC_FONT_REPORT = 59_u16
  HID_USAGE_ALPHANUMERIC_FONT_DATA = 60_u16
  HID_USAGE_ALPHANUMERIC_CHARACTER_ATTRIBUTE = 72_u16
  HID_USAGE_ALPHANUMERIC_PALETTE_REPORT = 133_u16
  HID_USAGE_ALPHANUMERIC_PALETTE_DATA = 136_u16
  HID_USAGE_ALPHANUMERIC_BLIT_REPORT = 138_u16
  HID_USAGE_ALPHANUMERIC_BLIT_DATA = 143_u16
  HID_USAGE_ALPHANUMERIC_SOFT_BUTTON = 144_u16
  HID_USAGE_ALPHANUMERIC_ASCII_CHARACTER_SET = 33_u16
  HID_USAGE_ALPHANUMERIC_DATA_READ_BACK = 34_u16
  HID_USAGE_ALPHANUMERIC_FONT_READ_BACK = 35_u16
  HID_USAGE_ALPHANUMERIC_CLEAR_DISPLAY = 37_u16
  HID_USAGE_ALPHANUMERIC_DISPLAY_ENABLE = 38_u16
  HID_USAGE_ALPHANUMERIC_SCREEN_SAVER_DELAY = 39_u16
  HID_USAGE_ALPHANUMERIC_SCREEN_SAVER_ENABLE = 40_u16
  HID_USAGE_ALPHANUMERIC_VERTICAL_SCROLL = 41_u16
  HID_USAGE_ALPHANUMERIC_HORIZONTAL_SCROLL = 42_u16
  HID_USAGE_ALPHANUMERIC_DISPLAY_DATA = 44_u16
  HID_USAGE_ALPHANUMERIC_STATUS_NOT_READY = 46_u16
  HID_USAGE_ALPHANUMERIC_STATUS_READY = 47_u16
  HID_USAGE_ALPHANUMERIC_ERR_NOT_A_LOADABLE_CHARACTER = 48_u16
  HID_USAGE_ALPHANUMERIC_ERR_FONT_DATA_CANNOT_BE_READ = 49_u16
  HID_USAGE_ALPHANUMERIC_ROW = 51_u16
  HID_USAGE_ALPHANUMERIC_COLUMN = 52_u16
  HID_USAGE_ALPHANUMERIC_ROWS = 53_u16
  HID_USAGE_ALPHANUMERIC_COLUMNS = 54_u16
  HID_USAGE_ALPHANUMERIC_CURSOR_PIXEL_POSITIONING = 55_u16
  HID_USAGE_ALPHANUMERIC_CURSOR_MODE = 56_u16
  HID_USAGE_ALPHANUMERIC_CURSOR_ENABLE = 57_u16
  HID_USAGE_ALPHANUMERIC_CURSOR_BLINK = 58_u16
  HID_USAGE_ALPHANUMERIC_CHAR_WIDTH = 61_u16
  HID_USAGE_ALPHANUMERIC_CHAR_HEIGHT = 62_u16
  HID_USAGE_ALPHANUMERIC_CHAR_SPACING_HORIZONTAL = 63_u16
  HID_USAGE_ALPHANUMERIC_CHAR_SPACING_VERTICAL = 64_u16
  HID_USAGE_ALPHANUMERIC_UNICODE_CHAR_SET = 65_u16
  HID_USAGE_ALPHANUMERIC_FONT_7_SEGMENT = 66_u16
  HID_USAGE_ALPHANUMERIC_7_SEGMENT_DIRECT_MAP = 67_u16
  HID_USAGE_ALPHANUMERIC_FONT_14_SEGMENT = 68_u16
  HID_USAGE_ALPHANUMERIC_14_SEGMENT_DIRECT_MAP = 69_u16
  HID_USAGE_ALPHANUMERIC_DISPLAY_BRIGHTNESS = 70_u16
  HID_USAGE_ALPHANUMERIC_DISPLAY_CONTRAST = 71_u16
  HID_USAGE_ALPHANUMERIC_ATTRIBUTE_READBACK = 73_u16
  HID_USAGE_ALPHANUMERIC_ATTRIBUTE_DATA = 74_u16
  HID_USAGE_ALPHANUMERIC_CHAR_ATTR_ENHANCE = 75_u16
  HID_USAGE_ALPHANUMERIC_CHAR_ATTR_UNDERLINE = 76_u16
  HID_USAGE_ALPHANUMERIC_CHAR_ATTR_BLINK = 77_u16
  HID_USAGE_ALPHANUMERIC_BITMAP_SIZE_X = 128_u16
  HID_USAGE_ALPHANUMERIC_BITMAP_SIZE_Y = 129_u16
  HID_USAGE_ALPHANUMERIC_BIT_DEPTH_FORMAT = 131_u16
  HID_USAGE_ALPHANUMERIC_DISPLAY_ORIENTATION = 132_u16
  HID_USAGE_ALPHANUMERIC_PALETTE_DATA_SIZE = 134_u16
  HID_USAGE_ALPHANUMERIC_PALETTE_DATA_OFFSET = 135_u16
  HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_X1 = 139_u16
  HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_Y1 = 140_u16
  HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_X2 = 141_u16
  HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_Y2 = 142_u16
  HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_ID = 145_u16
  HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_SIDE = 146_u16
  HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_OFFSET1 = 147_u16
  HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_OFFSET2 = 148_u16
  HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_REPORT = 149_u16
  HID_USAGE_LAMPARRAY = 1_u16
  HID_USAGE_LAMPARRAY_ATTRBIUTES_REPORT = 2_u16
  HID_USAGE_LAMPARRAY_LAMP_COUNT = 3_u16
  HID_USAGE_LAMPARRAY_BOUNDING_BOX_WIDTH_IN_MICROMETERS = 4_u16
  HID_USAGE_LAMPARRAY_BOUNDING_BOX_HEIGHT_IN_MICROMETERS = 5_u16
  HID_USAGE_LAMPARRAY_BOUNDING_BOX_DEPTH_IN_MICROMETERS = 6_u16
  HID_USAGE_LAMPARRAY_KIND = 7_u16
  HID_USAGE_LAMPARRAY_MIN_UPDATE_INTERVAL_IN_MICROSECONDS = 8_u16
  HID_USAGE_LAMPARRAY_LAMP_ATTRIBUTES_REQUEST_REPORT = 32_u16
  HID_USAGE_LAMPARRAY_LAMP_ID = 33_u16
  HID_USAGE_LAMPARRAY_LAMP_ATTRIBUTES_RESPONSE_REPORT = 34_u16
  HID_USAGE_LAMPARRAY_POSITION_X_IN_MICROMETERS = 35_u16
  HID_USAGE_LAMPARRAY_POSITION_Y_IN_MICROMETERS = 36_u16
  HID_USAGE_LAMPARRAY_POSITION_Z_IN_MICROMETERS = 37_u16
  HID_USAGE_LAMPARRAY_LAMP_PURPOSES = 38_u16
  HID_USAGE_LAMPARRAY_UPDATE_LATENCY_IN_MICROSECONDS = 39_u16
  HID_USAGE_LAMPARRAY_RED_LEVEL_COUNT = 40_u16
  HID_USAGE_LAMPARRAY_GREEN_LEVEL_COUNT = 41_u16
  HID_USAGE_LAMPARRAY_BLUE_LEVEL_COUNT = 42_u16
  HID_USAGE_LAMPARRAY_INTENSITY_LEVEL_COUNT = 43_u16
  HID_USAGE_LAMPARRAY_IS_PROGRAMMABLE = 44_u16
  HID_USAGE_LAMPARRAY_INPUT_BINDING = 45_u16
  HID_USAGE_LAMPARRAY_LAMP_MULTI_UPDATE_REPORT = 80_u16
  HID_USAGE_LAMPARRAY_LAMP_RED_UPDATE_CHANNEL = 81_u16
  HID_USAGE_LAMPARRAY_LAMP_GREEN_UPDATE_CHANNEL = 82_u16
  HID_USAGE_LAMPARRAY_LAMP_BLUE_UPDATE_CHANNEL = 83_u16
  HID_USAGE_LAMPARRAY_LAMP_INTENSITY_UPDATE_CHANNEL = 84_u16
  HID_USAGE_LAMPARRAY_LAMP_UPDATE_FLAGS = 85_u16
  HID_USAGE_LAMPARRAY_LAMP_RANGE_UPDATE_REPORT = 96_u16
  HID_USAGE_LAMPARRAY_LAMP_ID_START = 97_u16
  HID_USAGE_LAMPARRAY_LAMP_ID_END = 98_u16
  HID_USAGE_LAMPARRAY_CONTROL_REPORT = 112_u16
  HID_USAGE_LAMPARRAY_AUTONOMOUS_MODE = 113_u16
  HID_USAGE_CAMERA_AUTO_FOCUS = 32_u16
  HID_USAGE_CAMERA_SHUTTER = 33_u16
  HID_USAGE_MS_BTH_HF_DIALNUMBER = 33_u16
  HID_USAGE_MS_BTH_HF_DIALMEMORY = 34_u16
  DD_KEYBOARD_DEVICE_NAME = "\\Device\\KeyboardClass"
  DD_KEYBOARD_DEVICE_NAME_U = "\\Device\\KeyboardClass"
  IOCTL_KEYBOARD_QUERY_ATTRIBUTES = 720896_u32
  IOCTL_KEYBOARD_SET_TYPEMATIC = 720900_u32
  IOCTL_KEYBOARD_SET_INDICATORS = 720904_u32
  IOCTL_KEYBOARD_QUERY_TYPEMATIC = 720928_u32
  IOCTL_KEYBOARD_QUERY_INDICATORS = 720960_u32
  IOCTL_KEYBOARD_QUERY_INDICATOR_TRANSLATION = 721024_u32
  IOCTL_KEYBOARD_INSERT_DATA = 721152_u32
  IOCTL_KEYBOARD_QUERY_EXTENDED_ATTRIBUTES = 721408_u32
  IOCTL_KEYBOARD_QUERY_IME_STATUS = 724992_u32
  IOCTL_KEYBOARD_SET_IME_STATUS = 724996_u32
  GUID_DEVINTERFACE_KEYBOARD = "884b96c3-56ef-11d1-bc8c-00a0c91405dd"
  KEYBOARD_OVERRUN_MAKE_CODE = 255_u32
  KEY_MAKE = 0_u32
  KEY_BREAK = 1_u32
  KEY_E0 = 2_u32
  KEY_E1 = 4_u32
  KEY_TERMSRV_SET_LED = 8_u32
  KEY_TERMSRV_SHADOW = 16_u32
  KEY_TERMSRV_VKPACKET = 32_u32
  KEY_RIM_VKEY = 64_u32
  KEY_FROM_KEYBOARD_OVERRIDER = 128_u32
  KEY_UNICODE_SEQUENCE_ITEM = 256_u32
  KEY_UNICODE_SEQUENCE_END = 512_u32
  KEYBOARD_EXTENDED_ATTRIBUTES_STRUCT_VERSION_1 = 1_u32
  KEYBOARD_LED_INJECTED = 32768_u32
  KEYBOARD_SHADOW = 16384_u32
  KEYBOARD_KANA_LOCK_ON = 8_u32
  KEYBOARD_CAPS_LOCK_ON = 4_u32
  KEYBOARD_NUM_LOCK_ON = 2_u32
  KEYBOARD_SCROLL_LOCK_ON = 1_u32
  KEYBOARD_ERROR_VALUE_BASE = 10000_u32
  DD_MOUSE_DEVICE_NAME = "\\Device\\PointerClass"
  DD_MOUSE_DEVICE_NAME_U = "\\Device\\PointerClass"
  IOCTL_MOUSE_QUERY_ATTRIBUTES = 983040_u32
  IOCTL_MOUSE_INSERT_DATA = 983044_u32
  GUID_DEVINTERFACE_MOUSE = "378de44c-56ef-11d1-bc8c-00a0c91405dd"
  MOUSE_LEFT_BUTTON_DOWN = 1_u32
  MOUSE_LEFT_BUTTON_UP = 2_u32
  MOUSE_RIGHT_BUTTON_DOWN = 4_u32
  MOUSE_RIGHT_BUTTON_UP = 8_u32
  MOUSE_MIDDLE_BUTTON_DOWN = 16_u32
  MOUSE_MIDDLE_BUTTON_UP = 32_u32
  MOUSE_BUTTON_1_DOWN = 1_u32
  MOUSE_BUTTON_1_UP = 2_u32
  MOUSE_BUTTON_2_DOWN = 4_u32
  MOUSE_BUTTON_2_UP = 8_u32
  MOUSE_BUTTON_3_DOWN = 16_u32
  MOUSE_BUTTON_3_UP = 32_u32
  MOUSE_BUTTON_4_DOWN = 64_u32
  MOUSE_BUTTON_4_UP = 128_u32
  MOUSE_BUTTON_5_DOWN = 256_u32
  MOUSE_BUTTON_5_UP = 512_u32
  MOUSE_WHEEL = 1024_u32
  MOUSE_HWHEEL = 2048_u32
  MOUSE_MOVE_RELATIVE = 0_u32
  MOUSE_MOVE_ABSOLUTE = 1_u32
  MOUSE_VIRTUAL_DESKTOP = 2_u32
  MOUSE_ATTRIBUTES_CHANGED = 4_u32
  MOUSE_MOVE_NOCOALESCE = 8_u32
  MOUSE_TERMSRV_SRC_SHADOW = 256_u32
  MOUSE_INPORT_HARDWARE = 1_u32
  MOUSE_I8042_HARDWARE = 2_u32
  MOUSE_SERIAL_HARDWARE = 4_u32
  BALLPOINT_I8042_HARDWARE = 8_u32
  BALLPOINT_SERIAL_HARDWARE = 16_u32
  WHEELMOUSE_I8042_HARDWARE = 32_u32
  WHEELMOUSE_SERIAL_HARDWARE = 64_u32
  MOUSE_HID_HARDWARE = 128_u32
  WHEELMOUSE_HID_HARDWARE = 256_u32
  HORIZONTAL_WHEEL_PRESENT = 32768_u32
  MOUSE_ERROR_VALUE_BASE = 20000_u32
  DIRECTINPUT_HEADER_VERSION = 2048_u32
  CLSID_DirectInput = "25e609e0-b259-11cf-bfc7-444553540000"
  CLSID_DirectInputDevice = "25e609e1-b259-11cf-bfc7-444553540000"
  CLSID_DirectInput8 = "25e609e4-b259-11cf-bfc7-444553540000"
  CLSID_DirectInputDevice8 = "25e609e5-b259-11cf-bfc7-444553540000"
  GUID_XAxis = "a36d02e0-c9f3-11cf-bfc7-444553540000"
  GUID_YAxis = "a36d02e1-c9f3-11cf-bfc7-444553540000"
  GUID_ZAxis = "a36d02e2-c9f3-11cf-bfc7-444553540000"
  GUID_RxAxis = "a36d02f4-c9f3-11cf-bfc7-444553540000"
  GUID_RyAxis = "a36d02f5-c9f3-11cf-bfc7-444553540000"
  GUID_RzAxis = "a36d02e3-c9f3-11cf-bfc7-444553540000"
  GUID_Slider = "a36d02e4-c9f3-11cf-bfc7-444553540000"
  GUID_Button = "a36d02f0-c9f3-11cf-bfc7-444553540000"
  GUID_Key = "55728220-d33c-11cf-bfc7-444553540000"
  GUID_POV = "a36d02f2-c9f3-11cf-bfc7-444553540000"
  GUID_Unknown = "a36d02f3-c9f3-11cf-bfc7-444553540000"
  GUID_SysMouse = "6f1d2b60-d5a0-11cf-bfc7-444553540000"
  GUID_SysKeyboard = "6f1d2b61-d5a0-11cf-bfc7-444553540000"
  GUID_Joystick = "6f1d2b70-d5a0-11cf-bfc7-444553540000"
  GUID_SysMouseEm = "6f1d2b80-d5a0-11cf-bfc7-444553540000"
  GUID_SysMouseEm2 = "6f1d2b81-d5a0-11cf-bfc7-444553540000"
  GUID_SysKeyboardEm = "6f1d2b82-d5a0-11cf-bfc7-444553540000"
  GUID_SysKeyboardEm2 = "6f1d2b83-d5a0-11cf-bfc7-444553540000"
  GUID_ConstantForce = "13541c20-8e33-11d0-9ad0-00a0c9a06e35"
  GUID_RampForce = "13541c21-8e33-11d0-9ad0-00a0c9a06e35"
  GUID_Square = "13541c22-8e33-11d0-9ad0-00a0c9a06e35"
  GUID_Sine = "13541c23-8e33-11d0-9ad0-00a0c9a06e35"
  GUID_Triangle = "13541c24-8e33-11d0-9ad0-00a0c9a06e35"
  GUID_SawtoothUp = "13541c25-8e33-11d0-9ad0-00a0c9a06e35"
  GUID_SawtoothDown = "13541c26-8e33-11d0-9ad0-00a0c9a06e35"
  GUID_Spring = "13541c27-8e33-11d0-9ad0-00a0c9a06e35"
  GUID_Damper = "13541c28-8e33-11d0-9ad0-00a0c9a06e35"
  GUID_Inertia = "13541c29-8e33-11d0-9ad0-00a0c9a06e35"
  GUID_Friction = "13541c2a-8e33-11d0-9ad0-00a0c9a06e35"
  GUID_CustomForce = "13541c2b-8e33-11d0-9ad0-00a0c9a06e35"
  DIEFT_ALL = 0_u32
  DIEFT_CONSTANTFORCE = 1_u32
  DIEFT_RAMPFORCE = 2_u32
  DIEFT_PERIODIC = 3_u32
  DIEFT_CONDITION = 4_u32
  DIEFT_CUSTOMFORCE = 5_u32
  DIEFT_HARDWARE = 255_u32
  DIEFT_FFATTACK = 512_u32
  DIEFT_FFFADE = 1024_u32
  DIEFT_SATURATION = 2048_u32
  DIEFT_POSNEGCOEFFICIENTS = 4096_u32
  DIEFT_POSNEGSATURATION = 8192_u32
  DIEFT_DEADBAND = 16384_u32
  DIEFT_STARTDELAY = 32768_u32
  DI_DEGREES = 100_u32
  DI_FFNOMINALMAX = 10000_u32
  DI_SECONDS = 1000000_u32
  DIEFF_OBJECTIDS = 1_u32
  DIEFF_OBJECTOFFSETS = 2_u32
  DIEFF_CARTESIAN = 16_u32
  DIEFF_POLAR = 32_u32
  DIEFF_SPHERICAL = 64_u32
  DIEP_DURATION = 1_u32
  DIEP_SAMPLEPERIOD = 2_u32
  DIEP_GAIN = 4_u32
  DIEP_TRIGGERBUTTON = 8_u32
  DIEP_TRIGGERREPEATINTERVAL = 16_u32
  DIEP_AXES = 32_u32
  DIEP_DIRECTION = 64_u32
  DIEP_ENVELOPE = 128_u32
  DIEP_TYPESPECIFICPARAMS = 256_u32
  DIEP_STARTDELAY = 512_u32
  DIEP_ALLPARAMS_DX5 = 511_u32
  DIEP_ALLPARAMS = 1023_u32
  DIEP_START = 536870912_u32
  DIEP_NORESTART = 1073741824_u32
  DIEP_NODOWNLOAD = 2147483648_u32
  DIEB_NOTRIGGER = 4294967295_u32
  DIES_SOLO = 1_u32
  DIES_NODOWNLOAD = 2147483648_u32
  DIEGES_PLAYING = 1_u32
  DIEGES_EMULATED = 2_u32
  DIDEVTYPE_DEVICE = 1_u32
  DIDEVTYPE_MOUSE = 2_u32
  DIDEVTYPE_KEYBOARD = 3_u32
  DIDEVTYPE_JOYSTICK = 4_u32
  DI8DEVCLASS_ALL = 0_u32
  DI8DEVCLASS_DEVICE = 1_u32
  DI8DEVCLASS_POINTER = 2_u32
  DI8DEVCLASS_KEYBOARD = 3_u32
  DI8DEVCLASS_GAMECTRL = 4_u32
  DI8DEVTYPE_DEVICE = 17_u32
  DI8DEVTYPE_MOUSE = 18_u32
  DI8DEVTYPE_KEYBOARD = 19_u32
  DI8DEVTYPE_JOYSTICK = 20_u32
  DI8DEVTYPE_GAMEPAD = 21_u32
  DI8DEVTYPE_DRIVING = 22_u32
  DI8DEVTYPE_FLIGHT = 23_u32
  DI8DEVTYPE_1STPERSON = 24_u32
  DI8DEVTYPE_DEVICECTRL = 25_u32
  DI8DEVTYPE_SCREENPOINTER = 26_u32
  DI8DEVTYPE_REMOTE = 27_u32
  DI8DEVTYPE_SUPPLEMENTAL = 28_u32
  DIDEVTYPE_HID = 65536_u32
  DIDEVTYPEMOUSE_UNKNOWN = 1_u32
  DIDEVTYPEMOUSE_TRADITIONAL = 2_u32
  DIDEVTYPEMOUSE_FINGERSTICK = 3_u32
  DIDEVTYPEMOUSE_TOUCHPAD = 4_u32
  DIDEVTYPEMOUSE_TRACKBALL = 5_u32
  DIDEVTYPEKEYBOARD_UNKNOWN = 0_u32
  DIDEVTYPEKEYBOARD_PCXT = 1_u32
  DIDEVTYPEKEYBOARD_OLIVETTI = 2_u32
  DIDEVTYPEKEYBOARD_PCAT = 3_u32
  DIDEVTYPEKEYBOARD_PCENH = 4_u32
  DIDEVTYPEKEYBOARD_NOKIA1050 = 5_u32
  DIDEVTYPEKEYBOARD_NOKIA9140 = 6_u32
  DIDEVTYPEKEYBOARD_NEC98 = 7_u32
  DIDEVTYPEKEYBOARD_NEC98LAPTOP = 8_u32
  DIDEVTYPEKEYBOARD_NEC98106 = 9_u32
  DIDEVTYPEKEYBOARD_JAPAN106 = 10_u32
  DIDEVTYPEKEYBOARD_JAPANAX = 11_u32
  DIDEVTYPEKEYBOARD_J3100 = 12_u32
  DIDEVTYPEJOYSTICK_UNKNOWN = 1_u32
  DIDEVTYPEJOYSTICK_TRADITIONAL = 2_u32
  DIDEVTYPEJOYSTICK_FLIGHTSTICK = 3_u32
  DIDEVTYPEJOYSTICK_GAMEPAD = 4_u32
  DIDEVTYPEJOYSTICK_RUDDER = 5_u32
  DIDEVTYPEJOYSTICK_WHEEL = 6_u32
  DIDEVTYPEJOYSTICK_HEADTRACKER = 7_u32
  DI8DEVTYPEMOUSE_UNKNOWN = 1_u32
  DI8DEVTYPEMOUSE_TRADITIONAL = 2_u32
  DI8DEVTYPEMOUSE_FINGERSTICK = 3_u32
  DI8DEVTYPEMOUSE_TOUCHPAD = 4_u32
  DI8DEVTYPEMOUSE_TRACKBALL = 5_u32
  DI8DEVTYPEMOUSE_ABSOLUTE = 6_u32
  DI8DEVTYPEKEYBOARD_UNKNOWN = 0_u32
  DI8DEVTYPEKEYBOARD_PCXT = 1_u32
  DI8DEVTYPEKEYBOARD_OLIVETTI = 2_u32
  DI8DEVTYPEKEYBOARD_PCAT = 3_u32
  DI8DEVTYPEKEYBOARD_PCENH = 4_u32
  DI8DEVTYPEKEYBOARD_NOKIA1050 = 5_u32
  DI8DEVTYPEKEYBOARD_NOKIA9140 = 6_u32
  DI8DEVTYPEKEYBOARD_NEC98 = 7_u32
  DI8DEVTYPEKEYBOARD_NEC98LAPTOP = 8_u32
  DI8DEVTYPEKEYBOARD_NEC98106 = 9_u32
  DI8DEVTYPEKEYBOARD_JAPAN106 = 10_u32
  DI8DEVTYPEKEYBOARD_JAPANAX = 11_u32
  DI8DEVTYPEKEYBOARD_J3100 = 12_u32
  DI8DEVTYPE_LIMITEDGAMESUBTYPE = 1_u32
  DI8DEVTYPEJOYSTICK_LIMITED = 1_u32
  DI8DEVTYPEJOYSTICK_STANDARD = 2_u32
  DI8DEVTYPEGAMEPAD_LIMITED = 1_u32
  DI8DEVTYPEGAMEPAD_STANDARD = 2_u32
  DI8DEVTYPEGAMEPAD_TILT = 3_u32
  DI8DEVTYPEDRIVING_LIMITED = 1_u32
  DI8DEVTYPEDRIVING_COMBINEDPEDALS = 2_u32
  DI8DEVTYPEDRIVING_DUALPEDALS = 3_u32
  DI8DEVTYPEDRIVING_THREEPEDALS = 4_u32
  DI8DEVTYPEDRIVING_HANDHELD = 5_u32
  DI8DEVTYPEFLIGHT_LIMITED = 1_u32
  DI8DEVTYPEFLIGHT_STICK = 2_u32
  DI8DEVTYPEFLIGHT_YOKE = 3_u32
  DI8DEVTYPEFLIGHT_RC = 4_u32
  DI8DEVTYPE1STPERSON_LIMITED = 1_u32
  DI8DEVTYPE1STPERSON_UNKNOWN = 2_u32
  DI8DEVTYPE1STPERSON_SIXDOF = 3_u32
  DI8DEVTYPE1STPERSON_SHOOTER = 4_u32
  DI8DEVTYPESCREENPTR_UNKNOWN = 2_u32
  DI8DEVTYPESCREENPTR_LIGHTGUN = 3_u32
  DI8DEVTYPESCREENPTR_LIGHTPEN = 4_u32
  DI8DEVTYPESCREENPTR_TOUCH = 5_u32
  DI8DEVTYPEREMOTE_UNKNOWN = 2_u32
  DI8DEVTYPEDEVICECTRL_UNKNOWN = 2_u32
  DI8DEVTYPEDEVICECTRL_COMMSSELECTION = 3_u32
  DI8DEVTYPEDEVICECTRL_COMMSSELECTION_HARDWIRED = 4_u32
  DI8DEVTYPESUPPLEMENTAL_UNKNOWN = 2_u32
  DI8DEVTYPESUPPLEMENTAL_2NDHANDCONTROLLER = 3_u32
  DI8DEVTYPESUPPLEMENTAL_HEADTRACKER = 4_u32
  DI8DEVTYPESUPPLEMENTAL_HANDTRACKER = 5_u32
  DI8DEVTYPESUPPLEMENTAL_SHIFTSTICKGATE = 6_u32
  DI8DEVTYPESUPPLEMENTAL_SHIFTER = 7_u32
  DI8DEVTYPESUPPLEMENTAL_THROTTLE = 8_u32
  DI8DEVTYPESUPPLEMENTAL_SPLITTHROTTLE = 9_u32
  DI8DEVTYPESUPPLEMENTAL_COMBINEDPEDALS = 10_u32
  DI8DEVTYPESUPPLEMENTAL_DUALPEDALS = 11_u32
  DI8DEVTYPESUPPLEMENTAL_THREEPEDALS = 12_u32
  DI8DEVTYPESUPPLEMENTAL_RUDDERPEDALS = 13_u32
  DIDC_ATTACHED = 1_u32
  DIDC_POLLEDDEVICE = 2_u32
  DIDC_EMULATED = 4_u32
  DIDC_POLLEDDATAFORMAT = 8_u32
  DIDC_FORCEFEEDBACK = 256_u32
  DIDC_FFATTACK = 512_u32
  DIDC_FFFADE = 1024_u32
  DIDC_SATURATION = 2048_u32
  DIDC_POSNEGCOEFFICIENTS = 4096_u32
  DIDC_POSNEGSATURATION = 8192_u32
  DIDC_DEADBAND = 16384_u32
  DIDC_STARTDELAY = 32768_u32
  DIDC_ALIAS = 65536_u32
  DIDC_PHANTOM = 131072_u32
  DIDC_HIDDEN = 262144_u32
  DIDFT_ALL = 0_u32
  DIDFT_RELAXIS = 1_u32
  DIDFT_ABSAXIS = 2_u32
  DIDFT_AXIS = 3_u32
  DIDFT_PSHBUTTON = 4_u32
  DIDFT_TGLBUTTON = 8_u32
  DIDFT_BUTTON = 12_u32
  DIDFT_POV = 16_u32
  DIDFT_COLLECTION = 64_u32
  DIDFT_NODATA = 128_u32
  DIDFT_ANYINSTANCE = 16776960_u32
  DIDFT_INSTANCEMASK = 16776960_u32
  DIDFT_FFACTUATOR = 16777216_u32
  DIDFT_FFEFFECTTRIGGER = 33554432_u32
  DIDFT_OUTPUT = 268435456_u32
  DIDFT_VENDORDEFINED = 67108864_u32
  DIDFT_ALIAS = 134217728_u32
  DIDFT_NOCOLLECTION = 16776960_u32
  DIDF_ABSAXIS = 1_u32
  DIDF_RELAXIS = 2_u32
  DIA_FORCEFEEDBACK = 1_u32
  DIA_APPMAPPED = 2_u32
  DIA_APPNOMAP = 4_u32
  DIA_NORANGE = 8_u32
  DIA_APPFIXED = 16_u32
  DIAH_UNMAPPED = 0_u32
  DIAH_USERCONFIG = 1_u32
  DIAH_APPREQUESTED = 2_u32
  DIAH_HWAPP = 4_u32
  DIAH_HWDEFAULT = 8_u32
  DIAH_DEFAULT = 32_u32
  DIAH_ERROR = 2147483648_u32
  DIAFTS_NEWDEVICELOW = 4294967295_u32
  DIAFTS_NEWDEVICEHIGH = 4294967295_u32
  DIAFTS_UNUSEDDEVICELOW = 0_u32
  DIAFTS_UNUSEDDEVICEHIGH = 0_u32
  DIDBAM_DEFAULT = 0_u32
  DIDBAM_PRESERVE = 1_u32
  DIDBAM_INITIALIZE = 2_u32
  DIDBAM_HWDEFAULTS = 4_u32
  DIDSAM_DEFAULT = 0_u32
  DIDSAM_NOUSER = 1_u32
  DIDSAM_FORCESAVE = 2_u32
  DICD_DEFAULT = 0_u32
  DICD_EDIT = 1_u32
  DIDIFT_CONFIGURATION = 1_u32
  DIDIFT_OVERLAY = 2_u32
  DIDAL_CENTERED = 0_u32
  DIDAL_LEFTALIGNED = 1_u32
  DIDAL_RIGHTALIGNED = 2_u32
  DIDAL_MIDDLE = 0_u32
  DIDAL_TOPALIGNED = 4_u32
  DIDAL_BOTTOMALIGNED = 8_u32
  DIDOI_FFACTUATOR = 1_u32
  DIDOI_FFEFFECTTRIGGER = 2_u32
  DIDOI_POLLED = 32768_u32
  DIDOI_ASPECTPOSITION = 256_u32
  DIDOI_ASPECTVELOCITY = 512_u32
  DIDOI_ASPECTACCEL = 768_u32
  DIDOI_ASPECTFORCE = 1024_u32
  DIDOI_ASPECTMASK = 3840_u32
  DIDOI_GUIDISUSAGE = 65536_u32
  DIPH_DEVICE = 0_u32
  DIPH_BYOFFSET = 1_u32
  DIPH_BYID = 2_u32
  DIPH_BYUSAGE = 3_u32
  MAXCPOINTSNUM = 8_u32
  DIPROPAXISMODE_ABS = 0_u32
  DIPROPAXISMODE_REL = 1_u32
  DIPROPAUTOCENTER_OFF = 0_u32
  DIPROPAUTOCENTER_ON = 1_u32
  DIPROPCALIBRATIONMODE_COOKED = 0_u32
  DIPROPCALIBRATIONMODE_RAW = 1_u32
  DIGDD_PEEK = 1_u32
  DISCL_EXCLUSIVE = 1_u32
  DISCL_NONEXCLUSIVE = 2_u32
  DISCL_FOREGROUND = 4_u32
  DISCL_BACKGROUND = 8_u32
  DISCL_NOWINKEY = 16_u32
  DISFFC_RESET = 1_u32
  DISFFC_STOPALL = 2_u32
  DISFFC_PAUSE = 4_u32
  DISFFC_CONTINUE = 8_u32
  DISFFC_SETACTUATORSON = 16_u32
  DISFFC_SETACTUATORSOFF = 32_u32
  DIGFFS_EMPTY = 1_u32
  DIGFFS_STOPPED = 2_u32
  DIGFFS_PAUSED = 4_u32
  DIGFFS_ACTUATORSON = 16_u32
  DIGFFS_ACTUATORSOFF = 32_u32
  DIGFFS_POWERON = 64_u32
  DIGFFS_POWEROFF = 128_u32
  DIGFFS_SAFETYSWITCHON = 256_u32
  DIGFFS_SAFETYSWITCHOFF = 512_u32
  DIGFFS_USERFFSWITCHON = 1024_u32
  DIGFFS_USERFFSWITCHOFF = 2048_u32
  DIGFFS_DEVICELOST = 2147483648_u32
  DISDD_CONTINUE = 1_u32
  DIFEF_DEFAULT = 0_u32
  DIFEF_INCLUDENONSTANDARD = 1_u32
  DIFEF_MODIFYIFNEEDED = 16_u32
  DIK_ESCAPE = 1_u32
  DIK_1 = 2_u32
  DIK_2 = 3_u32
  DIK_3 = 4_u32
  DIK_4 = 5_u32
  DIK_5 = 6_u32
  DIK_6 = 7_u32
  DIK_7 = 8_u32
  DIK_8 = 9_u32
  DIK_9 = 10_u32
  DIK_0 = 11_u32
  DIK_MINUS = 12_u32
  DIK_EQUALS = 13_u32
  DIK_BACK = 14_u32
  DIK_TAB = 15_u32
  DIK_Q = 16_u32
  DIK_W = 17_u32
  DIK_E = 18_u32
  DIK_R = 19_u32
  DIK_T = 20_u32
  DIK_Y = 21_u32
  DIK_U = 22_u32
  DIK_I = 23_u32
  DIK_O = 24_u32
  DIK_P = 25_u32
  DIK_LBRACKET = 26_u32
  DIK_RBRACKET = 27_u32
  DIK_RETURN = 28_u32
  DIK_LCONTROL = 29_u32
  DIK_A = 30_u32
  DIK_S = 31_u32
  DIK_D = 32_u32
  DIK_F = 33_u32
  DIK_G = 34_u32
  DIK_H = 35_u32
  DIK_J = 36_u32
  DIK_K = 37_u32
  DIK_L = 38_u32
  DIK_SEMICOLON = 39_u32
  DIK_APOSTROPHE = 40_u32
  DIK_GRAVE = 41_u32
  DIK_LSHIFT = 42_u32
  DIK_BACKSLASH = 43_u32
  DIK_Z = 44_u32
  DIK_X = 45_u32
  DIK_C = 46_u32
  DIK_V = 47_u32
  DIK_B = 48_u32
  DIK_N = 49_u32
  DIK_M = 50_u32
  DIK_COMMA = 51_u32
  DIK_PERIOD = 52_u32
  DIK_SLASH = 53_u32
  DIK_RSHIFT = 54_u32
  DIK_MULTIPLY = 55_u32
  DIK_LMENU = 56_u32
  DIK_SPACE = 57_u32
  DIK_CAPITAL = 58_u32
  DIK_F1 = 59_u32
  DIK_F2 = 60_u32
  DIK_F3 = 61_u32
  DIK_F4 = 62_u32
  DIK_F5 = 63_u32
  DIK_F6 = 64_u32
  DIK_F7 = 65_u32
  DIK_F8 = 66_u32
  DIK_F9 = 67_u32
  DIK_F10 = 68_u32
  DIK_NUMLOCK = 69_u32
  DIK_SCROLL = 70_u32
  DIK_NUMPAD7 = 71_u32
  DIK_NUMPAD8 = 72_u32
  DIK_NUMPAD9 = 73_u32
  DIK_SUBTRACT = 74_u32
  DIK_NUMPAD4 = 75_u32
  DIK_NUMPAD5 = 76_u32
  DIK_NUMPAD6 = 77_u32
  DIK_ADD = 78_u32
  DIK_NUMPAD1 = 79_u32
  DIK_NUMPAD2 = 80_u32
  DIK_NUMPAD3 = 81_u32
  DIK_NUMPAD0 = 82_u32
  DIK_DECIMAL = 83_u32
  DIK_OEM_102 = 86_u32
  DIK_F11 = 87_u32
  DIK_F12 = 88_u32
  DIK_F13 = 100_u32
  DIK_F14 = 101_u32
  DIK_F15 = 102_u32
  DIK_KANA = 112_u32
  DIK_ABNT_C1 = 115_u32
  DIK_CONVERT = 121_u32
  DIK_NOCONVERT = 123_u32
  DIK_YEN = 125_u32
  DIK_ABNT_C2 = 126_u32
  DIK_NUMPADEQUALS = 141_u32
  DIK_PREVTRACK = 144_u32
  DIK_AT = 145_u32
  DIK_COLON = 146_u32
  DIK_UNDERLINE = 147_u32
  DIK_KANJI = 148_u32
  DIK_STOP = 149_u32
  DIK_AX = 150_u32
  DIK_UNLABELED = 151_u32
  DIK_NEXTTRACK = 153_u32
  DIK_NUMPADENTER = 156_u32
  DIK_RCONTROL = 157_u32
  DIK_MUTE = 160_u32
  DIK_CALCULATOR = 161_u32
  DIK_PLAYPAUSE = 162_u32
  DIK_MEDIASTOP = 164_u32
  DIK_VOLUMEDOWN = 174_u32
  DIK_VOLUMEUP = 176_u32
  DIK_WEBHOME = 178_u32
  DIK_NUMPADCOMMA = 179_u32
  DIK_DIVIDE = 181_u32
  DIK_SYSRQ = 183_u32
  DIK_RMENU = 184_u32
  DIK_PAUSE = 197_u32
  DIK_HOME = 199_u32
  DIK_UP = 200_u32
  DIK_PRIOR = 201_u32
  DIK_LEFT = 203_u32
  DIK_RIGHT = 205_u32
  DIK_END = 207_u32
  DIK_DOWN = 208_u32
  DIK_NEXT = 209_u32
  DIK_INSERT = 210_u32
  DIK_DELETE = 211_u32
  DIK_LWIN = 219_u32
  DIK_RWIN = 220_u32
  DIK_APPS = 221_u32
  DIK_POWER = 222_u32
  DIK_SLEEP = 223_u32
  DIK_WAKE = 227_u32
  DIK_WEBSEARCH = 229_u32
  DIK_WEBFAVORITES = 230_u32
  DIK_WEBREFRESH = 231_u32
  DIK_WEBSTOP = 232_u32
  DIK_WEBFORWARD = 233_u32
  DIK_WEBBACK = 234_u32
  DIK_MYCOMPUTER = 235_u32
  DIK_MAIL = 236_u32
  DIK_MEDIASELECT = 237_u32
  DIK_BACKSPACE = 14_u32
  DIK_NUMPADSTAR = 55_u32
  DIK_LALT = 56_u32
  DIK_CAPSLOCK = 58_u32
  DIK_NUMPADMINUS = 74_u32
  DIK_NUMPADPLUS = 78_u32
  DIK_NUMPADPERIOD = 83_u32
  DIK_NUMPADSLASH = 181_u32
  DIK_RALT = 184_u32
  DIK_UPARROW = 200_u32
  DIK_PGUP = 201_u32
  DIK_LEFTARROW = 203_u32
  DIK_RIGHTARROW = 205_u32
  DIK_DOWNARROW = 208_u32
  DIK_PGDN = 209_u32
  DIK_CIRCUMFLEX = 144_u32
  DIENUM_STOP = 0_u32
  DIENUM_CONTINUE = 1_u32
  DIEDFL_ALLDEVICES = 0_u32
  DIEDFL_ATTACHEDONLY = 1_u32
  DIEDFL_FORCEFEEDBACK = 256_u32
  DIEDFL_INCLUDEALIASES = 65536_u32
  DIEDFL_INCLUDEPHANTOMS = 131072_u32
  DIEDFL_INCLUDEHIDDEN = 262144_u32
  DIEDBS_MAPPEDPRI1 = 1_u32
  DIEDBS_MAPPEDPRI2 = 2_u32
  DIEDBS_RECENTDEVICE = 16_u32
  DIEDBS_NEWDEVICE = 32_u32
  DIEDBSFL_ATTACHEDONLY = 0_u32
  DIEDBSFL_THISUSER = 16_u32
  DIEDBSFL_FORCEFEEDBACK = 256_u32
  DIEDBSFL_AVAILABLEDEVICES = 4096_u32
  DIEDBSFL_MULTIMICEKEYBOARDS = 8192_u32
  DIEDBSFL_NONGAMINGDEVICES = 16384_u32
  DIEDBSFL_VALID = 28944_u32
  DI_OK = 0_i32
  DI_NOTATTACHED = 1_i32
  DI_BUFFEROVERFLOW = 1_i32
  DI_PROPNOEFFECT = 1_i32
  DI_NOEFFECT = 1_i32
  DI_POLLEDDEVICE = 2_i32
  DI_DOWNLOADSKIPPED = 3_i32
  DI_EFFECTRESTARTED = 4_i32
  DI_TRUNCATED = 8_i32
  DI_SETTINGSNOTSAVED = 11_i32
  DI_TRUNCATEDANDRESTARTED = 12_i32
  DI_WRITEPROTECT = 19_i32
  DIERR_OLDDIRECTINPUTVERSION = -2147023746_i32
  DIERR_BETADIRECTINPUTVERSION = -2147023743_i32
  DIERR_BADDRIVERVER = -2147024777_i32
  DIERR_DEVICENOTREG = -2147221164_i32
  DIERR_NOTFOUND = -2147024894_i32
  DIERR_OBJECTNOTFOUND = -2147024894_i32
  DIERR_INVALIDPARAM = -2147024809_i32
  DIERR_NOINTERFACE = -2147467262_i32
  DIERR_GENERIC = -2147467259_i32
  DIERR_OUTOFMEMORY = -2147024882_i32
  DIERR_UNSUPPORTED = -2147467263_i32
  DIERR_NOTINITIALIZED = -2147024875_i32
  DIERR_ALREADYINITIALIZED = -2147023649_i32
  DIERR_NOAGGREGATION = -2147221232_i32
  DIERR_OTHERAPPHASPRIO = -2147024891_i32
  DIERR_INPUTLOST = -2147024866_i32
  DIERR_ACQUIRED = -2147024726_i32
  DIERR_NOTACQUIRED = -2147024884_i32
  DIERR_READONLY = -2147024891_i32
  DIERR_HANDLEEXISTS = -2147024891_i32
  DIERR_INSUFFICIENTPRIVS = -2147220992_i32
  DIERR_DEVICEFULL = -2147220991_i32
  DIERR_MOREDATA = -2147220990_i32
  DIERR_NOTDOWNLOADED = -2147220989_i32
  DIERR_HASEFFECTS = -2147220988_i32
  DIERR_NOTEXCLUSIVEACQUIRED = -2147220987_i32
  DIERR_INCOMPLETEEFFECT = -2147220986_i32
  DIERR_NOTBUFFERED = -2147220985_i32
  DIERR_EFFECTPLAYING = -2147220984_i32
  DIERR_UNPLUGGED = -2147220983_i32
  DIERR_REPORTFULL = -2147220982_i32
  DIERR_MAPFILEFAIL = -2147220981_i32
  DIKEYBOARD_ESCAPE = 2164261889_u32
  DIKEYBOARD_1 = 2164261890_u32
  DIKEYBOARD_2 = 2164261891_u32
  DIKEYBOARD_3 = 2164261892_u32
  DIKEYBOARD_4 = 2164261893_u32
  DIKEYBOARD_5 = 2164261894_u32
  DIKEYBOARD_6 = 2164261895_u32
  DIKEYBOARD_7 = 2164261896_u32
  DIKEYBOARD_8 = 2164261897_u32
  DIKEYBOARD_9 = 2164261898_u32
  DIKEYBOARD_0 = 2164261899_u32
  DIKEYBOARD_MINUS = 2164261900_u32
  DIKEYBOARD_EQUALS = 2164261901_u32
  DIKEYBOARD_BACK = 2164261902_u32
  DIKEYBOARD_TAB = 2164261903_u32
  DIKEYBOARD_Q = 2164261904_u32
  DIKEYBOARD_W = 2164261905_u32
  DIKEYBOARD_E = 2164261906_u32
  DIKEYBOARD_R = 2164261907_u32
  DIKEYBOARD_T = 2164261908_u32
  DIKEYBOARD_Y = 2164261909_u32
  DIKEYBOARD_U = 2164261910_u32
  DIKEYBOARD_I = 2164261911_u32
  DIKEYBOARD_O = 2164261912_u32
  DIKEYBOARD_P = 2164261913_u32
  DIKEYBOARD_LBRACKET = 2164261914_u32
  DIKEYBOARD_RBRACKET = 2164261915_u32
  DIKEYBOARD_RETURN = 2164261916_u32
  DIKEYBOARD_LCONTROL = 2164261917_u32
  DIKEYBOARD_A = 2164261918_u32
  DIKEYBOARD_S = 2164261919_u32
  DIKEYBOARD_D = 2164261920_u32
  DIKEYBOARD_F = 2164261921_u32
  DIKEYBOARD_G = 2164261922_u32
  DIKEYBOARD_H = 2164261923_u32
  DIKEYBOARD_J = 2164261924_u32
  DIKEYBOARD_K = 2164261925_u32
  DIKEYBOARD_L = 2164261926_u32
  DIKEYBOARD_SEMICOLON = 2164261927_u32
  DIKEYBOARD_APOSTROPHE = 2164261928_u32
  DIKEYBOARD_GRAVE = 2164261929_u32
  DIKEYBOARD_LSHIFT = 2164261930_u32
  DIKEYBOARD_BACKSLASH = 2164261931_u32
  DIKEYBOARD_Z = 2164261932_u32
  DIKEYBOARD_X = 2164261933_u32
  DIKEYBOARD_C = 2164261934_u32
  DIKEYBOARD_V = 2164261935_u32
  DIKEYBOARD_B = 2164261936_u32
  DIKEYBOARD_N = 2164261937_u32
  DIKEYBOARD_M = 2164261938_u32
  DIKEYBOARD_COMMA = 2164261939_u32
  DIKEYBOARD_PERIOD = 2164261940_u32
  DIKEYBOARD_SLASH = 2164261941_u32
  DIKEYBOARD_RSHIFT = 2164261942_u32
  DIKEYBOARD_MULTIPLY = 2164261943_u32
  DIKEYBOARD_LMENU = 2164261944_u32
  DIKEYBOARD_SPACE = 2164261945_u32
  DIKEYBOARD_CAPITAL = 2164261946_u32
  DIKEYBOARD_F1 = 2164261947_u32
  DIKEYBOARD_F2 = 2164261948_u32
  DIKEYBOARD_F3 = 2164261949_u32
  DIKEYBOARD_F4 = 2164261950_u32
  DIKEYBOARD_F5 = 2164261951_u32
  DIKEYBOARD_F6 = 2164261952_u32
  DIKEYBOARD_F7 = 2164261953_u32
  DIKEYBOARD_F8 = 2164261954_u32
  DIKEYBOARD_F9 = 2164261955_u32
  DIKEYBOARD_F10 = 2164261956_u32
  DIKEYBOARD_NUMLOCK = 2164261957_u32
  DIKEYBOARD_SCROLL = 2164261958_u32
  DIKEYBOARD_NUMPAD7 = 2164261959_u32
  DIKEYBOARD_NUMPAD8 = 2164261960_u32
  DIKEYBOARD_NUMPAD9 = 2164261961_u32
  DIKEYBOARD_SUBTRACT = 2164261962_u32
  DIKEYBOARD_NUMPAD4 = 2164261963_u32
  DIKEYBOARD_NUMPAD5 = 2164261964_u32
  DIKEYBOARD_NUMPAD6 = 2164261965_u32
  DIKEYBOARD_ADD = 2164261966_u32
  DIKEYBOARD_NUMPAD1 = 2164261967_u32
  DIKEYBOARD_NUMPAD2 = 2164261968_u32
  DIKEYBOARD_NUMPAD3 = 2164261969_u32
  DIKEYBOARD_NUMPAD0 = 2164261970_u32
  DIKEYBOARD_DECIMAL = 2164261971_u32
  DIKEYBOARD_OEM_102 = 2164261974_u32
  DIKEYBOARD_F11 = 2164261975_u32
  DIKEYBOARD_F12 = 2164261976_u32
  DIKEYBOARD_F13 = 2164261988_u32
  DIKEYBOARD_F14 = 2164261989_u32
  DIKEYBOARD_F15 = 2164261990_u32
  DIKEYBOARD_KANA = 2164262000_u32
  DIKEYBOARD_ABNT_C1 = 2164262003_u32
  DIKEYBOARD_CONVERT = 2164262009_u32
  DIKEYBOARD_NOCONVERT = 2164262011_u32
  DIKEYBOARD_YEN = 2164262013_u32
  DIKEYBOARD_ABNT_C2 = 2164262014_u32
  DIKEYBOARD_NUMPADEQUALS = 2164262029_u32
  DIKEYBOARD_PREVTRACK = 2164262032_u32
  DIKEYBOARD_AT = 2164262033_u32
  DIKEYBOARD_COLON = 2164262034_u32
  DIKEYBOARD_UNDERLINE = 2164262035_u32
  DIKEYBOARD_KANJI = 2164262036_u32
  DIKEYBOARD_STOP = 2164262037_u32
  DIKEYBOARD_AX = 2164262038_u32
  DIKEYBOARD_UNLABELED = 2164262039_u32
  DIKEYBOARD_NEXTTRACK = 2164262041_u32
  DIKEYBOARD_NUMPADENTER = 2164262044_u32
  DIKEYBOARD_RCONTROL = 2164262045_u32
  DIKEYBOARD_MUTE = 2164262048_u32
  DIKEYBOARD_CALCULATOR = 2164262049_u32
  DIKEYBOARD_PLAYPAUSE = 2164262050_u32
  DIKEYBOARD_MEDIASTOP = 2164262052_u32
  DIKEYBOARD_VOLUMEDOWN = 2164262062_u32
  DIKEYBOARD_VOLUMEUP = 2164262064_u32
  DIKEYBOARD_WEBHOME = 2164262066_u32
  DIKEYBOARD_NUMPADCOMMA = 2164262067_u32
  DIKEYBOARD_DIVIDE = 2164262069_u32
  DIKEYBOARD_SYSRQ = 2164262071_u32
  DIKEYBOARD_RMENU = 2164262072_u32
  DIKEYBOARD_PAUSE = 2164262085_u32
  DIKEYBOARD_HOME = 2164262087_u32
  DIKEYBOARD_UP = 2164262088_u32
  DIKEYBOARD_PRIOR = 2164262089_u32
  DIKEYBOARD_LEFT = 2164262091_u32
  DIKEYBOARD_RIGHT = 2164262093_u32
  DIKEYBOARD_END = 2164262095_u32
  DIKEYBOARD_DOWN = 2164262096_u32
  DIKEYBOARD_NEXT = 2164262097_u32
  DIKEYBOARD_INSERT = 2164262098_u32
  DIKEYBOARD_DELETE = 2164262099_u32
  DIKEYBOARD_LWIN = 2164262107_u32
  DIKEYBOARD_RWIN = 2164262108_u32
  DIKEYBOARD_APPS = 2164262109_u32
  DIKEYBOARD_POWER = 2164262110_u32
  DIKEYBOARD_SLEEP = 2164262111_u32
  DIKEYBOARD_WAKE = 2164262115_u32
  DIKEYBOARD_WEBSEARCH = 2164262117_u32
  DIKEYBOARD_WEBFAVORITES = 2164262118_u32
  DIKEYBOARD_WEBREFRESH = 2164262119_u32
  DIKEYBOARD_WEBSTOP = 2164262120_u32
  DIKEYBOARD_WEBFORWARD = 2164262121_u32
  DIKEYBOARD_WEBBACK = 2164262122_u32
  DIKEYBOARD_MYCOMPUTER = 2164262123_u32
  DIKEYBOARD_MAIL = 2164262124_u32
  DIKEYBOARD_MEDIASELECT = 2164262125_u32
  DIVOICE_CHANNEL1 = 2197816321_u32
  DIVOICE_CHANNEL2 = 2197816322_u32
  DIVOICE_CHANNEL3 = 2197816323_u32
  DIVOICE_CHANNEL4 = 2197816324_u32
  DIVOICE_CHANNEL5 = 2197816325_u32
  DIVOICE_CHANNEL6 = 2197816326_u32
  DIVOICE_CHANNEL7 = 2197816327_u32
  DIVOICE_CHANNEL8 = 2197816328_u32
  DIVOICE_TEAM = 2197816329_u32
  DIVOICE_ALL = 2197816330_u32
  DIVOICE_RECORDMUTE = 2197816331_u32
  DIVOICE_PLAYBACKMUTE = 2197816332_u32
  DIVOICE_TRANSMIT = 2197816333_u32
  DIVOICE_VOICECOMMAND = 2197816336_u32
  DIVIRTUAL_DRIVING_RACE = 16777216_u32
  DIAXIS_DRIVINGR_STEER = 16812545_u32
  DIAXIS_DRIVINGR_ACCELERATE = 17011202_u32
  DIAXIS_DRIVINGR_BRAKE = 17043971_u32
  DIBUTTON_DRIVINGR_SHIFTUP = 16780289_u32
  DIBUTTON_DRIVINGR_SHIFTDOWN = 16780290_u32
  DIBUTTON_DRIVINGR_VIEW = 16784387_u32
  DIBUTTON_DRIVINGR_MENU = 16778493_u32
  DIAXIS_DRIVINGR_ACCEL_AND_BRAKE = 16861700_u32
  DIHATSWITCH_DRIVINGR_GLANCE = 16795137_u32
  DIBUTTON_DRIVINGR_BRAKE = 16796676_u32
  DIBUTTON_DRIVINGR_DASHBOARD = 16794629_u32
  DIBUTTON_DRIVINGR_AIDS = 16794630_u32
  DIBUTTON_DRIVINGR_MAP = 16794631_u32
  DIBUTTON_DRIVINGR_BOOST = 16794632_u32
  DIBUTTON_DRIVINGR_PIT = 16794633_u32
  DIBUTTON_DRIVINGR_ACCELERATE_LINK = 17028320_u32
  DIBUTTON_DRIVINGR_STEER_LEFT_LINK = 16829668_u32
  DIBUTTON_DRIVINGR_STEER_RIGHT_LINK = 16829676_u32
  DIBUTTON_DRIVINGR_GLANCE_LEFT_LINK = 17286372_u32
  DIBUTTON_DRIVINGR_GLANCE_RIGHT_LINK = 17286380_u32
  DIBUTTON_DRIVINGR_DEVICE = 16794878_u32
  DIBUTTON_DRIVINGR_PAUSE = 16794876_u32
  DIVIRTUAL_DRIVING_COMBAT = 33554432_u32
  DIAXIS_DRIVINGC_STEER = 33589761_u32
  DIAXIS_DRIVINGC_ACCELERATE = 33788418_u32
  DIAXIS_DRIVINGC_BRAKE = 33821187_u32
  DIBUTTON_DRIVINGC_FIRE = 33557505_u32
  DIBUTTON_DRIVINGC_WEAPONS = 33557506_u32
  DIBUTTON_DRIVINGC_TARGET = 33557507_u32
  DIBUTTON_DRIVINGC_MENU = 33555709_u32
  DIAXIS_DRIVINGC_ACCEL_AND_BRAKE = 33638916_u32
  DIHATSWITCH_DRIVINGC_GLANCE = 33572353_u32
  DIBUTTON_DRIVINGC_SHIFTUP = 33573892_u32
  DIBUTTON_DRIVINGC_SHIFTDOWN = 33573893_u32
  DIBUTTON_DRIVINGC_DASHBOARD = 33571846_u32
  DIBUTTON_DRIVINGC_AIDS = 33571847_u32
  DIBUTTON_DRIVINGC_BRAKE = 33573896_u32
  DIBUTTON_DRIVINGC_FIRESECONDARY = 33573897_u32
  DIBUTTON_DRIVINGC_ACCELERATE_LINK = 33805536_u32
  DIBUTTON_DRIVINGC_STEER_LEFT_LINK = 33606884_u32
  DIBUTTON_DRIVINGC_STEER_RIGHT_LINK = 33606892_u32
  DIBUTTON_DRIVINGC_GLANCE_LEFT_LINK = 34063588_u32
  DIBUTTON_DRIVINGC_GLANCE_RIGHT_LINK = 34063596_u32
  DIBUTTON_DRIVINGC_DEVICE = 33572094_u32
  DIBUTTON_DRIVINGC_PAUSE = 33572092_u32
  DIVIRTUAL_DRIVING_TANK = 50331648_u32
  DIAXIS_DRIVINGT_STEER = 50366977_u32
  DIAXIS_DRIVINGT_BARREL = 50397698_u32
  DIAXIS_DRIVINGT_ACCELERATE = 50565635_u32
  DIAXIS_DRIVINGT_ROTATE = 50463236_u32
  DIBUTTON_DRIVINGT_FIRE = 50334721_u32
  DIBUTTON_DRIVINGT_WEAPONS = 50334722_u32
  DIBUTTON_DRIVINGT_TARGET = 50334723_u32
  DIBUTTON_DRIVINGT_MENU = 50332925_u32
  DIHATSWITCH_DRIVINGT_GLANCE = 50349569_u32
  DIAXIS_DRIVINGT_BRAKE = 50614789_u32
  DIAXIS_DRIVINGT_ACCEL_AND_BRAKE = 50416134_u32
  DIBUTTON_DRIVINGT_VIEW = 50355204_u32
  DIBUTTON_DRIVINGT_DASHBOARD = 50355205_u32
  DIBUTTON_DRIVINGT_BRAKE = 50351110_u32
  DIBUTTON_DRIVINGT_FIRESECONDARY = 50351111_u32
  DIBUTTON_DRIVINGT_ACCELERATE_LINK = 50582752_u32
  DIBUTTON_DRIVINGT_STEER_LEFT_LINK = 50384100_u32
  DIBUTTON_DRIVINGT_STEER_RIGHT_LINK = 50384108_u32
  DIBUTTON_DRIVINGT_BARREL_UP_LINK = 50414816_u32
  DIBUTTON_DRIVINGT_BARREL_DOWN_LINK = 50414824_u32
  DIBUTTON_DRIVINGT_ROTATE_LEFT_LINK = 50480356_u32
  DIBUTTON_DRIVINGT_ROTATE_RIGHT_LINK = 50480364_u32
  DIBUTTON_DRIVINGT_GLANCE_LEFT_LINK = 50840804_u32
  DIBUTTON_DRIVINGT_GLANCE_RIGHT_LINK = 50840812_u32
  DIBUTTON_DRIVINGT_DEVICE = 50349310_u32
  DIBUTTON_DRIVINGT_PAUSE = 50349308_u32
  DIVIRTUAL_FLYING_CIVILIAN = 67108864_u32
  DIAXIS_FLYINGC_BANK = 67144193_u32
  DIAXIS_FLYINGC_PITCH = 67176962_u32
  DIAXIS_FLYINGC_THROTTLE = 67342851_u32
  DIBUTTON_FLYINGC_VIEW = 67118081_u32
  DIBUTTON_FLYINGC_DISPLAY = 67118082_u32
  DIBUTTON_FLYINGC_GEAR = 67120131_u32
  DIBUTTON_FLYINGC_MENU = 67110141_u32
  DIHATSWITCH_FLYINGC_GLANCE = 67126785_u32
  DIAXIS_FLYINGC_BRAKE = 67398148_u32
  DIAXIS_FLYINGC_RUDDER = 67260933_u32
  DIAXIS_FLYINGC_FLAPS = 67459590_u32
  DIBUTTON_FLYINGC_FLAPSUP = 67134468_u32
  DIBUTTON_FLYINGC_FLAPSDOWN = 67134469_u32
  DIBUTTON_FLYINGC_BRAKE_LINK = 67398880_u32
  DIBUTTON_FLYINGC_FASTER_LINK = 67359968_u32
  DIBUTTON_FLYINGC_SLOWER_LINK = 67359976_u32
  DIBUTTON_FLYINGC_GLANCE_LEFT_LINK = 67618020_u32
  DIBUTTON_FLYINGC_GLANCE_RIGHT_LINK = 67618028_u32
  DIBUTTON_FLYINGC_GLANCE_UP_LINK = 67618016_u32
  DIBUTTON_FLYINGC_GLANCE_DOWN_LINK = 67618024_u32
  DIBUTTON_FLYINGC_DEVICE = 67126526_u32
  DIBUTTON_FLYINGC_PAUSE = 67126524_u32
  DIVIRTUAL_FLYING_MILITARY = 83886080_u32
  DIAXIS_FLYINGM_BANK = 83921409_u32
  DIAXIS_FLYINGM_PITCH = 83954178_u32
  DIAXIS_FLYINGM_THROTTLE = 84120067_u32
  DIBUTTON_FLYINGM_FIRE = 83889153_u32
  DIBUTTON_FLYINGM_WEAPONS = 83889154_u32
  DIBUTTON_FLYINGM_TARGET = 83889155_u32
  DIBUTTON_FLYINGM_MENU = 83887357_u32
  DIHATSWITCH_FLYINGM_GLANCE = 83904001_u32
  DIBUTTON_FLYINGM_COUNTER = 83909636_u32
  DIAXIS_FLYINGM_RUDDER = 84036100_u32
  DIAXIS_FLYINGM_BRAKE = 84173317_u32
  DIBUTTON_FLYINGM_VIEW = 83911685_u32
  DIBUTTON_FLYINGM_DISPLAY = 83911686_u32
  DIAXIS_FLYINGM_FLAPS = 84234758_u32
  DIBUTTON_FLYINGM_FLAPSUP = 83907591_u32
  DIBUTTON_FLYINGM_FLAPSDOWN = 83907592_u32
  DIBUTTON_FLYINGM_FIRESECONDARY = 83905545_u32
  DIBUTTON_FLYINGM_GEAR = 83911690_u32
  DIBUTTON_FLYINGM_BRAKE_LINK = 84174048_u32
  DIBUTTON_FLYINGM_FASTER_LINK = 84137184_u32
  DIBUTTON_FLYINGM_SLOWER_LINK = 84137192_u32
  DIBUTTON_FLYINGM_GLANCE_LEFT_LINK = 84395236_u32
  DIBUTTON_FLYINGM_GLANCE_RIGHT_LINK = 84395244_u32
  DIBUTTON_FLYINGM_GLANCE_UP_LINK = 84395232_u32
  DIBUTTON_FLYINGM_GLANCE_DOWN_LINK = 84395240_u32
  DIBUTTON_FLYINGM_DEVICE = 83903742_u32
  DIBUTTON_FLYINGM_PAUSE = 83903740_u32
  DIVIRTUAL_FLYING_HELICOPTER = 100663296_u32
  DIAXIS_FLYINGH_BANK = 100698625_u32
  DIAXIS_FLYINGH_PITCH = 100731394_u32
  DIAXIS_FLYINGH_COLLECTIVE = 100764163_u32
  DIBUTTON_FLYINGH_FIRE = 100668417_u32
  DIBUTTON_FLYINGH_WEAPONS = 100668418_u32
  DIBUTTON_FLYINGH_TARGET = 100668419_u32
  DIBUTTON_FLYINGH_MENU = 100664573_u32
  DIHATSWITCH_FLYINGH_GLANCE = 100681217_u32
  DIAXIS_FLYINGH_TORQUE = 100817412_u32
  DIAXIS_FLYINGH_THROTTLE = 100915717_u32
  DIBUTTON_FLYINGH_COUNTER = 100684804_u32
  DIBUTTON_FLYINGH_VIEW = 100688901_u32
  DIBUTTON_FLYINGH_GEAR = 100688902_u32
  DIBUTTON_FLYINGH_FIRESECONDARY = 100682759_u32
  DIBUTTON_FLYINGH_FASTER_LINK = 100916448_u32
  DIBUTTON_FLYINGH_SLOWER_LINK = 100916456_u32
  DIBUTTON_FLYINGH_GLANCE_LEFT_LINK = 101172452_u32
  DIBUTTON_FLYINGH_GLANCE_RIGHT_LINK = 101172460_u32
  DIBUTTON_FLYINGH_GLANCE_UP_LINK = 101172448_u32
  DIBUTTON_FLYINGH_GLANCE_DOWN_LINK = 101172456_u32
  DIBUTTON_FLYINGH_DEVICE = 100680958_u32
  DIBUTTON_FLYINGH_PAUSE = 100680956_u32
  DIVIRTUAL_SPACESIM = 117440512_u32
  DIAXIS_SPACESIM_LATERAL = 117473793_u32
  DIAXIS_SPACESIM_MOVE = 117506562_u32
  DIAXIS_SPACESIM_THROTTLE = 117670403_u32
  DIBUTTON_SPACESIM_FIRE = 117441537_u32
  DIBUTTON_SPACESIM_WEAPONS = 117441538_u32
  DIBUTTON_SPACESIM_TARGET = 117441539_u32
  DIBUTTON_SPACESIM_MENU = 117441789_u32
  DIHATSWITCH_SPACESIM_GLANCE = 117458433_u32
  DIAXIS_SPACESIM_CLIMB = 117555716_u32
  DIAXIS_SPACESIM_ROTATE = 117588485_u32
  DIBUTTON_SPACESIM_VIEW = 117457924_u32
  DIBUTTON_SPACESIM_DISPLAY = 117457925_u32
  DIBUTTON_SPACESIM_RAISE = 117457926_u32
  DIBUTTON_SPACESIM_LOWER = 117457927_u32
  DIBUTTON_SPACESIM_GEAR = 117457928_u32
  DIBUTTON_SPACESIM_FIRESECONDARY = 117457929_u32
  DIBUTTON_SPACESIM_LEFT_LINK = 117490916_u32
  DIBUTTON_SPACESIM_RIGHT_LINK = 117490924_u32
  DIBUTTON_SPACESIM_FORWARD_LINK = 117523680_u32
  DIBUTTON_SPACESIM_BACKWARD_LINK = 117523688_u32
  DIBUTTON_SPACESIM_FASTER_LINK = 117687520_u32
  DIBUTTON_SPACESIM_SLOWER_LINK = 117687528_u32
  DIBUTTON_SPACESIM_TURN_LEFT_LINK = 117589220_u32
  DIBUTTON_SPACESIM_TURN_RIGHT_LINK = 117589228_u32
  DIBUTTON_SPACESIM_GLANCE_LEFT_LINK = 117949668_u32
  DIBUTTON_SPACESIM_GLANCE_RIGHT_LINK = 117949676_u32
  DIBUTTON_SPACESIM_GLANCE_UP_LINK = 117949664_u32
  DIBUTTON_SPACESIM_GLANCE_DOWN_LINK = 117949672_u32
  DIBUTTON_SPACESIM_DEVICE = 117458174_u32
  DIBUTTON_SPACESIM_PAUSE = 117458172_u32
  DIVIRTUAL_FIGHTING_HAND2HAND = 134217728_u32
  DIAXIS_FIGHTINGH_LATERAL = 134251009_u32
  DIAXIS_FIGHTINGH_MOVE = 134283778_u32
  DIBUTTON_FIGHTINGH_PUNCH = 134218753_u32
  DIBUTTON_FIGHTINGH_KICK = 134218754_u32
  DIBUTTON_FIGHTINGH_BLOCK = 134218755_u32
  DIBUTTON_FIGHTINGH_CROUCH = 134218756_u32
  DIBUTTON_FIGHTINGH_JUMP = 134218757_u32
  DIBUTTON_FIGHTINGH_SPECIAL1 = 134218758_u32
  DIBUTTON_FIGHTINGH_SPECIAL2 = 134218759_u32
  DIBUTTON_FIGHTINGH_MENU = 134219005_u32
  DIBUTTON_FIGHTINGH_SELECT = 134235144_u32
  DIHATSWITCH_FIGHTINGH_SLIDE = 134235649_u32
  DIBUTTON_FIGHTINGH_DISPLAY = 134235145_u32
  DIAXIS_FIGHTINGH_ROTATE = 134365699_u32
  DIBUTTON_FIGHTINGH_DODGE = 134235146_u32
  DIBUTTON_FIGHTINGH_LEFT_LINK = 134268132_u32
  DIBUTTON_FIGHTINGH_RIGHT_LINK = 134268140_u32
  DIBUTTON_FIGHTINGH_FORWARD_LINK = 134300896_u32
  DIBUTTON_FIGHTINGH_BACKWARD_LINK = 134300904_u32
  DIBUTTON_FIGHTINGH_DEVICE = 134235390_u32
  DIBUTTON_FIGHTINGH_PAUSE = 134235388_u32
  DIVIRTUAL_FIGHTING_FPS = 150994944_u32
  DIAXIS_FPS_ROTATE = 151028225_u32
  DIAXIS_FPS_MOVE = 151060994_u32
  DIBUTTON_FPS_FIRE = 150995969_u32
  DIBUTTON_FPS_WEAPONS = 150995970_u32
  DIBUTTON_FPS_APPLY = 150995971_u32
  DIBUTTON_FPS_SELECT = 150995972_u32
  DIBUTTON_FPS_CROUCH = 150995973_u32
  DIBUTTON_FPS_JUMP = 150995974_u32
  DIAXIS_FPS_LOOKUPDOWN = 151093763_u32
  DIBUTTON_FPS_STRAFE = 150995975_u32
  DIBUTTON_FPS_MENU = 150996221_u32
  DIHATSWITCH_FPS_GLANCE = 151012865_u32
  DIBUTTON_FPS_DISPLAY = 151012360_u32
  DIAXIS_FPS_SIDESTEP = 151142916_u32
  DIBUTTON_FPS_DODGE = 151012361_u32
  DIBUTTON_FPS_GLANCEL = 151012362_u32
  DIBUTTON_FPS_GLANCER = 151012363_u32
  DIBUTTON_FPS_FIRESECONDARY = 151012364_u32
  DIBUTTON_FPS_ROTATE_LEFT_LINK = 151045348_u32
  DIBUTTON_FPS_ROTATE_RIGHT_LINK = 151045356_u32
  DIBUTTON_FPS_FORWARD_LINK = 151078112_u32
  DIBUTTON_FPS_BACKWARD_LINK = 151078120_u32
  DIBUTTON_FPS_GLANCE_UP_LINK = 151110880_u32
  DIBUTTON_FPS_GLANCE_DOWN_LINK = 151110888_u32
  DIBUTTON_FPS_STEP_LEFT_LINK = 151143652_u32
  DIBUTTON_FPS_STEP_RIGHT_LINK = 151143660_u32
  DIBUTTON_FPS_DEVICE = 151012606_u32
  DIBUTTON_FPS_PAUSE = 151012604_u32
  DIVIRTUAL_FIGHTING_THIRDPERSON = 167772160_u32
  DIAXIS_TPS_TURN = 167903745_u32
  DIAXIS_TPS_MOVE = 167838210_u32
  DIBUTTON_TPS_RUN = 167773185_u32
  DIBUTTON_TPS_ACTION = 167773186_u32
  DIBUTTON_TPS_SELECT = 167773187_u32
  DIBUTTON_TPS_USE = 167773188_u32
  DIBUTTON_TPS_JUMP = 167773189_u32
  DIBUTTON_TPS_MENU = 167773437_u32
  DIHATSWITCH_TPS_GLANCE = 167790081_u32
  DIBUTTON_TPS_VIEW = 167789574_u32
  DIBUTTON_TPS_STEPLEFT = 167789575_u32
  DIBUTTON_TPS_STEPRIGHT = 167789576_u32
  DIAXIS_TPS_STEP = 167821827_u32
  DIBUTTON_TPS_DODGE = 167789577_u32
  DIBUTTON_TPS_INVENTORY = 167789578_u32
  DIBUTTON_TPS_TURN_LEFT_LINK = 167920868_u32
  DIBUTTON_TPS_TURN_RIGHT_LINK = 167920876_u32
  DIBUTTON_TPS_FORWARD_LINK = 167855328_u32
  DIBUTTON_TPS_BACKWARD_LINK = 167855336_u32
  DIBUTTON_TPS_GLANCE_UP_LINK = 168281312_u32
  DIBUTTON_TPS_GLANCE_DOWN_LINK = 168281320_u32
  DIBUTTON_TPS_GLANCE_LEFT_LINK = 168281316_u32
  DIBUTTON_TPS_GLANCE_RIGHT_LINK = 168281324_u32
  DIBUTTON_TPS_DEVICE = 167789822_u32
  DIBUTTON_TPS_PAUSE = 167789820_u32
  DIVIRTUAL_STRATEGY_ROLEPLAYING = 184549376_u32
  DIAXIS_STRATEGYR_LATERAL = 184582657_u32
  DIAXIS_STRATEGYR_MOVE = 184615426_u32
  DIBUTTON_STRATEGYR_GET = 184550401_u32
  DIBUTTON_STRATEGYR_APPLY = 184550402_u32
  DIBUTTON_STRATEGYR_SELECT = 184550403_u32
  DIBUTTON_STRATEGYR_ATTACK = 184550404_u32
  DIBUTTON_STRATEGYR_CAST = 184550405_u32
  DIBUTTON_STRATEGYR_CROUCH = 184550406_u32
  DIBUTTON_STRATEGYR_JUMP = 184550407_u32
  DIBUTTON_STRATEGYR_MENU = 184550653_u32
  DIHATSWITCH_STRATEGYR_GLANCE = 184567297_u32
  DIBUTTON_STRATEGYR_MAP = 184566792_u32
  DIBUTTON_STRATEGYR_DISPLAY = 184566793_u32
  DIAXIS_STRATEGYR_ROTATE = 184697347_u32
  DIBUTTON_STRATEGYR_LEFT_LINK = 184599780_u32
  DIBUTTON_STRATEGYR_RIGHT_LINK = 184599788_u32
  DIBUTTON_STRATEGYR_FORWARD_LINK = 184632544_u32
  DIBUTTON_STRATEGYR_BACK_LINK = 184632552_u32
  DIBUTTON_STRATEGYR_ROTATE_LEFT_LINK = 184698084_u32
  DIBUTTON_STRATEGYR_ROTATE_RIGHT_LINK = 184698092_u32
  DIBUTTON_STRATEGYR_DEVICE = 184567038_u32
  DIBUTTON_STRATEGYR_PAUSE = 184567036_u32
  DIVIRTUAL_STRATEGY_TURN = 201326592_u32
  DIAXIS_STRATEGYT_LATERAL = 201359873_u32
  DIAXIS_STRATEGYT_MOVE = 201392642_u32
  DIBUTTON_STRATEGYT_SELECT = 201327617_u32
  DIBUTTON_STRATEGYT_INSTRUCT = 201327618_u32
  DIBUTTON_STRATEGYT_APPLY = 201327619_u32
  DIBUTTON_STRATEGYT_TEAM = 201327620_u32
  DIBUTTON_STRATEGYT_TURN = 201327621_u32
  DIBUTTON_STRATEGYT_MENU = 201327869_u32
  DIBUTTON_STRATEGYT_ZOOM = 201344006_u32
  DIBUTTON_STRATEGYT_MAP = 201344007_u32
  DIBUTTON_STRATEGYT_DISPLAY = 201344008_u32
  DIBUTTON_STRATEGYT_LEFT_LINK = 201376996_u32
  DIBUTTON_STRATEGYT_RIGHT_LINK = 201377004_u32
  DIBUTTON_STRATEGYT_FORWARD_LINK = 201409760_u32
  DIBUTTON_STRATEGYT_BACK_LINK = 201409768_u32
  DIBUTTON_STRATEGYT_DEVICE = 201344254_u32
  DIBUTTON_STRATEGYT_PAUSE = 201344252_u32
  DIVIRTUAL_SPORTS_HUNTING = 218103808_u32
  DIAXIS_HUNTING_LATERAL = 218137089_u32
  DIAXIS_HUNTING_MOVE = 218169858_u32
  DIBUTTON_HUNTING_FIRE = 218104833_u32
  DIBUTTON_HUNTING_AIM = 218104834_u32
  DIBUTTON_HUNTING_WEAPON = 218104835_u32
  DIBUTTON_HUNTING_BINOCULAR = 218104836_u32
  DIBUTTON_HUNTING_CALL = 218104837_u32
  DIBUTTON_HUNTING_MAP = 218104838_u32
  DIBUTTON_HUNTING_SPECIAL = 218104839_u32
  DIBUTTON_HUNTING_MENU = 218105085_u32
  DIHATSWITCH_HUNTING_GLANCE = 218121729_u32
  DIBUTTON_HUNTING_DISPLAY = 218121224_u32
  DIAXIS_HUNTING_ROTATE = 218251779_u32
  DIBUTTON_HUNTING_CROUCH = 218121225_u32
  DIBUTTON_HUNTING_JUMP = 218121226_u32
  DIBUTTON_HUNTING_FIRESECONDARY = 218121227_u32
  DIBUTTON_HUNTING_LEFT_LINK = 218154212_u32
  DIBUTTON_HUNTING_RIGHT_LINK = 218154220_u32
  DIBUTTON_HUNTING_FORWARD_LINK = 218186976_u32
  DIBUTTON_HUNTING_BACK_LINK = 218186984_u32
  DIBUTTON_HUNTING_ROTATE_LEFT_LINK = 218252516_u32
  DIBUTTON_HUNTING_ROTATE_RIGHT_LINK = 218252524_u32
  DIBUTTON_HUNTING_DEVICE = 218121470_u32
  DIBUTTON_HUNTING_PAUSE = 218121468_u32
  DIVIRTUAL_SPORTS_FISHING = 234881024_u32
  DIAXIS_FISHING_LATERAL = 234914305_u32
  DIAXIS_FISHING_MOVE = 234947074_u32
  DIBUTTON_FISHING_CAST = 234882049_u32
  DIBUTTON_FISHING_TYPE = 234882050_u32
  DIBUTTON_FISHING_BINOCULAR = 234882051_u32
  DIBUTTON_FISHING_BAIT = 234882052_u32
  DIBUTTON_FISHING_MAP = 234882053_u32
  DIBUTTON_FISHING_MENU = 234882301_u32
  DIHATSWITCH_FISHING_GLANCE = 234898945_u32
  DIBUTTON_FISHING_DISPLAY = 234898438_u32
  DIAXIS_FISHING_ROTATE = 235028995_u32
  DIBUTTON_FISHING_CROUCH = 234898439_u32
  DIBUTTON_FISHING_JUMP = 234898440_u32
  DIBUTTON_FISHING_LEFT_LINK = 234931428_u32
  DIBUTTON_FISHING_RIGHT_LINK = 234931436_u32
  DIBUTTON_FISHING_FORWARD_LINK = 234964192_u32
  DIBUTTON_FISHING_BACK_LINK = 234964200_u32
  DIBUTTON_FISHING_ROTATE_LEFT_LINK = 235029732_u32
  DIBUTTON_FISHING_ROTATE_RIGHT_LINK = 235029740_u32
  DIBUTTON_FISHING_DEVICE = 234898686_u32
  DIBUTTON_FISHING_PAUSE = 234898684_u32
  DIVIRTUAL_SPORTS_BASEBALL_BAT = 251658240_u32
  DIAXIS_BASEBALLB_LATERAL = 251691521_u32
  DIAXIS_BASEBALLB_MOVE = 251724290_u32
  DIBUTTON_BASEBALLB_SELECT = 251659265_u32
  DIBUTTON_BASEBALLB_NORMAL = 251659266_u32
  DIBUTTON_BASEBALLB_POWER = 251659267_u32
  DIBUTTON_BASEBALLB_BUNT = 251659268_u32
  DIBUTTON_BASEBALLB_STEAL = 251659269_u32
  DIBUTTON_BASEBALLB_BURST = 251659270_u32
  DIBUTTON_BASEBALLB_SLIDE = 251659271_u32
  DIBUTTON_BASEBALLB_CONTACT = 251659272_u32
  DIBUTTON_BASEBALLB_MENU = 251659517_u32
  DIBUTTON_BASEBALLB_NOSTEAL = 251675657_u32
  DIBUTTON_BASEBALLB_BOX = 251675658_u32
  DIBUTTON_BASEBALLB_LEFT_LINK = 251708644_u32
  DIBUTTON_BASEBALLB_RIGHT_LINK = 251708652_u32
  DIBUTTON_BASEBALLB_FORWARD_LINK = 251741408_u32
  DIBUTTON_BASEBALLB_BACK_LINK = 251741416_u32
  DIBUTTON_BASEBALLB_DEVICE = 251675902_u32
  DIBUTTON_BASEBALLB_PAUSE = 251675900_u32
  DIVIRTUAL_SPORTS_BASEBALL_PITCH = 268435456_u32
  DIAXIS_BASEBALLP_LATERAL = 268468737_u32
  DIAXIS_BASEBALLP_MOVE = 268501506_u32
  DIBUTTON_BASEBALLP_SELECT = 268436481_u32
  DIBUTTON_BASEBALLP_PITCH = 268436482_u32
  DIBUTTON_BASEBALLP_BASE = 268436483_u32
  DIBUTTON_BASEBALLP_THROW = 268436484_u32
  DIBUTTON_BASEBALLP_FAKE = 268436485_u32
  DIBUTTON_BASEBALLP_MENU = 268436733_u32
  DIBUTTON_BASEBALLP_WALK = 268452870_u32
  DIBUTTON_BASEBALLP_LOOK = 268452871_u32
  DIBUTTON_BASEBALLP_LEFT_LINK = 268485860_u32
  DIBUTTON_BASEBALLP_RIGHT_LINK = 268485868_u32
  DIBUTTON_BASEBALLP_FORWARD_LINK = 268518624_u32
  DIBUTTON_BASEBALLP_BACK_LINK = 268518632_u32
  DIBUTTON_BASEBALLP_DEVICE = 268453118_u32
  DIBUTTON_BASEBALLP_PAUSE = 268453116_u32
  DIVIRTUAL_SPORTS_BASEBALL_FIELD = 285212672_u32
  DIAXIS_BASEBALLF_LATERAL = 285245953_u32
  DIAXIS_BASEBALLF_MOVE = 285278722_u32
  DIBUTTON_BASEBALLF_NEAREST = 285213697_u32
  DIBUTTON_BASEBALLF_THROW1 = 285213698_u32
  DIBUTTON_BASEBALLF_THROW2 = 285213699_u32
  DIBUTTON_BASEBALLF_BURST = 285213700_u32
  DIBUTTON_BASEBALLF_JUMP = 285213701_u32
  DIBUTTON_BASEBALLF_DIVE = 285213702_u32
  DIBUTTON_BASEBALLF_MENU = 285213949_u32
  DIBUTTON_BASEBALLF_SHIFTIN = 285230087_u32
  DIBUTTON_BASEBALLF_SHIFTOUT = 285230088_u32
  DIBUTTON_BASEBALLF_AIM_LEFT_LINK = 285263076_u32
  DIBUTTON_BASEBALLF_AIM_RIGHT_LINK = 285263084_u32
  DIBUTTON_BASEBALLF_FORWARD_LINK = 285295840_u32
  DIBUTTON_BASEBALLF_BACK_LINK = 285295848_u32
  DIBUTTON_BASEBALLF_DEVICE = 285230334_u32
  DIBUTTON_BASEBALLF_PAUSE = 285230332_u32
  DIVIRTUAL_SPORTS_BASKETBALL_OFFENSE = 301989888_u32
  DIAXIS_BBALLO_LATERAL = 302023169_u32
  DIAXIS_BBALLO_MOVE = 302055938_u32
  DIBUTTON_BBALLO_SHOOT = 301990913_u32
  DIBUTTON_BBALLO_DUNK = 301990914_u32
  DIBUTTON_BBALLO_PASS = 301990915_u32
  DIBUTTON_BBALLO_FAKE = 301990916_u32
  DIBUTTON_BBALLO_SPECIAL = 301990917_u32
  DIBUTTON_BBALLO_PLAYER = 301990918_u32
  DIBUTTON_BBALLO_BURST = 301990919_u32
  DIBUTTON_BBALLO_CALL = 301990920_u32
  DIBUTTON_BBALLO_MENU = 301991165_u32
  DIHATSWITCH_BBALLO_GLANCE = 302007809_u32
  DIBUTTON_BBALLO_SCREEN = 302007305_u32
  DIBUTTON_BBALLO_PLAY = 302007306_u32
  DIBUTTON_BBALLO_JAB = 302007307_u32
  DIBUTTON_BBALLO_POST = 302007308_u32
  DIBUTTON_BBALLO_TIMEOUT = 302007309_u32
  DIBUTTON_BBALLO_SUBSTITUTE = 302007310_u32
  DIBUTTON_BBALLO_LEFT_LINK = 302040292_u32
  DIBUTTON_BBALLO_RIGHT_LINK = 302040300_u32
  DIBUTTON_BBALLO_FORWARD_LINK = 302073056_u32
  DIBUTTON_BBALLO_BACK_LINK = 302073064_u32
  DIBUTTON_BBALLO_DEVICE = 302007550_u32
  DIBUTTON_BBALLO_PAUSE = 302007548_u32
  DIVIRTUAL_SPORTS_BASKETBALL_DEFENSE = 318767104_u32
  DIAXIS_BBALLD_LATERAL = 318800385_u32
  DIAXIS_BBALLD_MOVE = 318833154_u32
  DIBUTTON_BBALLD_JUMP = 318768129_u32
  DIBUTTON_BBALLD_STEAL = 318768130_u32
  DIBUTTON_BBALLD_FAKE = 318768131_u32
  DIBUTTON_BBALLD_SPECIAL = 318768132_u32
  DIBUTTON_BBALLD_PLAYER = 318768133_u32
  DIBUTTON_BBALLD_BURST = 318768134_u32
  DIBUTTON_BBALLD_PLAY = 318768135_u32
  DIBUTTON_BBALLD_MENU = 318768381_u32
  DIHATSWITCH_BBALLD_GLANCE = 318785025_u32
  DIBUTTON_BBALLD_TIMEOUT = 318784520_u32
  DIBUTTON_BBALLD_SUBSTITUTE = 318784521_u32
  DIBUTTON_BBALLD_LEFT_LINK = 318817508_u32
  DIBUTTON_BBALLD_RIGHT_LINK = 318817516_u32
  DIBUTTON_BBALLD_FORWARD_LINK = 318850272_u32
  DIBUTTON_BBALLD_BACK_LINK = 318850280_u32
  DIBUTTON_BBALLD_DEVICE = 318784766_u32
  DIBUTTON_BBALLD_PAUSE = 318784764_u32
  DIVIRTUAL_SPORTS_FOOTBALL_FIELD = 335544320_u32
  DIBUTTON_FOOTBALLP_PLAY = 335545345_u32
  DIBUTTON_FOOTBALLP_SELECT = 335545346_u32
  DIBUTTON_FOOTBALLP_HELP = 335545347_u32
  DIBUTTON_FOOTBALLP_MENU = 335545597_u32
  DIBUTTON_FOOTBALLP_DEVICE = 335561982_u32
  DIBUTTON_FOOTBALLP_PAUSE = 335561980_u32
  DIVIRTUAL_SPORTS_FOOTBALL_QBCK = 352321536_u32
  DIAXIS_FOOTBALLQ_LATERAL = 352354817_u32
  DIAXIS_FOOTBALLQ_MOVE = 352387586_u32
  DIBUTTON_FOOTBALLQ_SELECT = 352322561_u32
  DIBUTTON_FOOTBALLQ_SNAP = 352322562_u32
  DIBUTTON_FOOTBALLQ_JUMP = 352322563_u32
  DIBUTTON_FOOTBALLQ_SLIDE = 352322564_u32
  DIBUTTON_FOOTBALLQ_PASS = 352322565_u32
  DIBUTTON_FOOTBALLQ_FAKE = 352322566_u32
  DIBUTTON_FOOTBALLQ_MENU = 352322813_u32
  DIBUTTON_FOOTBALLQ_FAKESNAP = 352338951_u32
  DIBUTTON_FOOTBALLQ_MOTION = 352338952_u32
  DIBUTTON_FOOTBALLQ_AUDIBLE = 352338953_u32
  DIBUTTON_FOOTBALLQ_LEFT_LINK = 352371940_u32
  DIBUTTON_FOOTBALLQ_RIGHT_LINK = 352371948_u32
  DIBUTTON_FOOTBALLQ_FORWARD_LINK = 352404704_u32
  DIBUTTON_FOOTBALLQ_BACK_LINK = 352404712_u32
  DIBUTTON_FOOTBALLQ_DEVICE = 352339198_u32
  DIBUTTON_FOOTBALLQ_PAUSE = 352339196_u32
  DIVIRTUAL_SPORTS_FOOTBALL_OFFENSE = 369098752_u32
  DIAXIS_FOOTBALLO_LATERAL = 369132033_u32
  DIAXIS_FOOTBALLO_MOVE = 369164802_u32
  DIBUTTON_FOOTBALLO_JUMP = 369099777_u32
  DIBUTTON_FOOTBALLO_LEFTARM = 369099778_u32
  DIBUTTON_FOOTBALLO_RIGHTARM = 369099779_u32
  DIBUTTON_FOOTBALLO_THROW = 369099780_u32
  DIBUTTON_FOOTBALLO_SPIN = 369099781_u32
  DIBUTTON_FOOTBALLO_MENU = 369100029_u32
  DIBUTTON_FOOTBALLO_JUKE = 369116166_u32
  DIBUTTON_FOOTBALLO_SHOULDER = 369116167_u32
  DIBUTTON_FOOTBALLO_TURBO = 369116168_u32
  DIBUTTON_FOOTBALLO_DIVE = 369116169_u32
  DIBUTTON_FOOTBALLO_ZOOM = 369116170_u32
  DIBUTTON_FOOTBALLO_SUBSTITUTE = 369116171_u32
  DIBUTTON_FOOTBALLO_LEFT_LINK = 369149156_u32
  DIBUTTON_FOOTBALLO_RIGHT_LINK = 369149164_u32
  DIBUTTON_FOOTBALLO_FORWARD_LINK = 369181920_u32
  DIBUTTON_FOOTBALLO_BACK_LINK = 369181928_u32
  DIBUTTON_FOOTBALLO_DEVICE = 369116414_u32
  DIBUTTON_FOOTBALLO_PAUSE = 369116412_u32
  DIVIRTUAL_SPORTS_FOOTBALL_DEFENSE = 385875968_u32
  DIAXIS_FOOTBALLD_LATERAL = 385909249_u32
  DIAXIS_FOOTBALLD_MOVE = 385942018_u32
  DIBUTTON_FOOTBALLD_PLAY = 385876993_u32
  DIBUTTON_FOOTBALLD_SELECT = 385876994_u32
  DIBUTTON_FOOTBALLD_JUMP = 385876995_u32
  DIBUTTON_FOOTBALLD_TACKLE = 385876996_u32
  DIBUTTON_FOOTBALLD_FAKE = 385876997_u32
  DIBUTTON_FOOTBALLD_SUPERTACKLE = 385876998_u32
  DIBUTTON_FOOTBALLD_MENU = 385877245_u32
  DIBUTTON_FOOTBALLD_SPIN = 385893383_u32
  DIBUTTON_FOOTBALLD_SWIM = 385893384_u32
  DIBUTTON_FOOTBALLD_BULLRUSH = 385893385_u32
  DIBUTTON_FOOTBALLD_RIP = 385893386_u32
  DIBUTTON_FOOTBALLD_AUDIBLE = 385893387_u32
  DIBUTTON_FOOTBALLD_ZOOM = 385893388_u32
  DIBUTTON_FOOTBALLD_SUBSTITUTE = 385893389_u32
  DIBUTTON_FOOTBALLD_LEFT_LINK = 385926372_u32
  DIBUTTON_FOOTBALLD_RIGHT_LINK = 385926380_u32
  DIBUTTON_FOOTBALLD_FORWARD_LINK = 385959136_u32
  DIBUTTON_FOOTBALLD_BACK_LINK = 385959144_u32
  DIBUTTON_FOOTBALLD_DEVICE = 385893630_u32
  DIBUTTON_FOOTBALLD_PAUSE = 385893628_u32
  DIVIRTUAL_SPORTS_GOLF = 402653184_u32
  DIAXIS_GOLF_LATERAL = 402686465_u32
  DIAXIS_GOLF_MOVE = 402719234_u32
  DIBUTTON_GOLF_SWING = 402654209_u32
  DIBUTTON_GOLF_SELECT = 402654210_u32
  DIBUTTON_GOLF_UP = 402654211_u32
  DIBUTTON_GOLF_DOWN = 402654212_u32
  DIBUTTON_GOLF_TERRAIN = 402654213_u32
  DIBUTTON_GOLF_FLYBY = 402654214_u32
  DIBUTTON_GOLF_MENU = 402654461_u32
  DIHATSWITCH_GOLF_SCROLL = 402671105_u32
  DIBUTTON_GOLF_ZOOM = 402670599_u32
  DIBUTTON_GOLF_TIMEOUT = 402670600_u32
  DIBUTTON_GOLF_SUBSTITUTE = 402670601_u32
  DIBUTTON_GOLF_LEFT_LINK = 402703588_u32
  DIBUTTON_GOLF_RIGHT_LINK = 402703596_u32
  DIBUTTON_GOLF_FORWARD_LINK = 402736352_u32
  DIBUTTON_GOLF_BACK_LINK = 402736360_u32
  DIBUTTON_GOLF_DEVICE = 402670846_u32
  DIBUTTON_GOLF_PAUSE = 402670844_u32
  DIVIRTUAL_SPORTS_HOCKEY_OFFENSE = 419430400_u32
  DIAXIS_HOCKEYO_LATERAL = 419463681_u32
  DIAXIS_HOCKEYO_MOVE = 419496450_u32
  DIBUTTON_HOCKEYO_SHOOT = 419431425_u32
  DIBUTTON_HOCKEYO_PASS = 419431426_u32
  DIBUTTON_HOCKEYO_BURST = 419431427_u32
  DIBUTTON_HOCKEYO_SPECIAL = 419431428_u32
  DIBUTTON_HOCKEYO_FAKE = 419431429_u32
  DIBUTTON_HOCKEYO_MENU = 419431677_u32
  DIHATSWITCH_HOCKEYO_SCROLL = 419448321_u32
  DIBUTTON_HOCKEYO_ZOOM = 419447814_u32
  DIBUTTON_HOCKEYO_STRATEGY = 419447815_u32
  DIBUTTON_HOCKEYO_TIMEOUT = 419447816_u32
  DIBUTTON_HOCKEYO_SUBSTITUTE = 419447817_u32
  DIBUTTON_HOCKEYO_LEFT_LINK = 419480804_u32
  DIBUTTON_HOCKEYO_RIGHT_LINK = 419480812_u32
  DIBUTTON_HOCKEYO_FORWARD_LINK = 419513568_u32
  DIBUTTON_HOCKEYO_BACK_LINK = 419513576_u32
  DIBUTTON_HOCKEYO_DEVICE = 419448062_u32
  DIBUTTON_HOCKEYO_PAUSE = 419448060_u32
  DIVIRTUAL_SPORTS_HOCKEY_DEFENSE = 436207616_u32
  DIAXIS_HOCKEYD_LATERAL = 436240897_u32
  DIAXIS_HOCKEYD_MOVE = 436273666_u32
  DIBUTTON_HOCKEYD_PLAYER = 436208641_u32
  DIBUTTON_HOCKEYD_STEAL = 436208642_u32
  DIBUTTON_HOCKEYD_BURST = 436208643_u32
  DIBUTTON_HOCKEYD_BLOCK = 436208644_u32
  DIBUTTON_HOCKEYD_FAKE = 436208645_u32
  DIBUTTON_HOCKEYD_MENU = 436208893_u32
  DIHATSWITCH_HOCKEYD_SCROLL = 436225537_u32
  DIBUTTON_HOCKEYD_ZOOM = 436225030_u32
  DIBUTTON_HOCKEYD_STRATEGY = 436225031_u32
  DIBUTTON_HOCKEYD_TIMEOUT = 436225032_u32
  DIBUTTON_HOCKEYD_SUBSTITUTE = 436225033_u32
  DIBUTTON_HOCKEYD_LEFT_LINK = 436258020_u32
  DIBUTTON_HOCKEYD_RIGHT_LINK = 436258028_u32
  DIBUTTON_HOCKEYD_FORWARD_LINK = 436290784_u32
  DIBUTTON_HOCKEYD_BACK_LINK = 436290792_u32
  DIBUTTON_HOCKEYD_DEVICE = 436225278_u32
  DIBUTTON_HOCKEYD_PAUSE = 436225276_u32
  DIVIRTUAL_SPORTS_HOCKEY_GOALIE = 452984832_u32
  DIAXIS_HOCKEYG_LATERAL = 453018113_u32
  DIAXIS_HOCKEYG_MOVE = 453050882_u32
  DIBUTTON_HOCKEYG_PASS = 452985857_u32
  DIBUTTON_HOCKEYG_POKE = 452985858_u32
  DIBUTTON_HOCKEYG_STEAL = 452985859_u32
  DIBUTTON_HOCKEYG_BLOCK = 452985860_u32
  DIBUTTON_HOCKEYG_MENU = 452986109_u32
  DIHATSWITCH_HOCKEYG_SCROLL = 453002753_u32
  DIBUTTON_HOCKEYG_ZOOM = 453002245_u32
  DIBUTTON_HOCKEYG_STRATEGY = 453002246_u32
  DIBUTTON_HOCKEYG_TIMEOUT = 453002247_u32
  DIBUTTON_HOCKEYG_SUBSTITUTE = 453002248_u32
  DIBUTTON_HOCKEYG_LEFT_LINK = 453035236_u32
  DIBUTTON_HOCKEYG_RIGHT_LINK = 453035244_u32
  DIBUTTON_HOCKEYG_FORWARD_LINK = 453068000_u32
  DIBUTTON_HOCKEYG_BACK_LINK = 453068008_u32
  DIBUTTON_HOCKEYG_DEVICE = 453002494_u32
  DIBUTTON_HOCKEYG_PAUSE = 453002492_u32
  DIVIRTUAL_SPORTS_BIKING_MOUNTAIN = 469762048_u32
  DIAXIS_BIKINGM_TURN = 469795329_u32
  DIAXIS_BIKINGM_PEDAL = 469828098_u32
  DIBUTTON_BIKINGM_JUMP = 469763073_u32
  DIBUTTON_BIKINGM_CAMERA = 469763074_u32
  DIBUTTON_BIKINGM_SPECIAL1 = 469763075_u32
  DIBUTTON_BIKINGM_SELECT = 469763076_u32
  DIBUTTON_BIKINGM_SPECIAL2 = 469763077_u32
  DIBUTTON_BIKINGM_MENU = 469763325_u32
  DIHATSWITCH_BIKINGM_SCROLL = 469779969_u32
  DIBUTTON_BIKINGM_ZOOM = 469779462_u32
  DIAXIS_BIKINGM_BRAKE = 470041091_u32
  DIBUTTON_BIKINGM_LEFT_LINK = 469812452_u32
  DIBUTTON_BIKINGM_RIGHT_LINK = 469812460_u32
  DIBUTTON_BIKINGM_FASTER_LINK = 469845216_u32
  DIBUTTON_BIKINGM_SLOWER_LINK = 469845224_u32
  DIBUTTON_BIKINGM_BRAKE_BUTTON_LINK = 470041832_u32
  DIBUTTON_BIKINGM_DEVICE = 469779710_u32
  DIBUTTON_BIKINGM_PAUSE = 469779708_u32
  DIVIRTUAL_SPORTS_SKIING = 486539264_u32
  DIAXIS_SKIING_TURN = 486572545_u32
  DIAXIS_SKIING_SPEED = 486605314_u32
  DIBUTTON_SKIING_JUMP = 486540289_u32
  DIBUTTON_SKIING_CROUCH = 486540290_u32
  DIBUTTON_SKIING_CAMERA = 486540291_u32
  DIBUTTON_SKIING_SPECIAL1 = 486540292_u32
  DIBUTTON_SKIING_SELECT = 486540293_u32
  DIBUTTON_SKIING_SPECIAL2 = 486540294_u32
  DIBUTTON_SKIING_MENU = 486540541_u32
  DIHATSWITCH_SKIING_GLANCE = 486557185_u32
  DIBUTTON_SKIING_ZOOM = 486556679_u32
  DIBUTTON_SKIING_LEFT_LINK = 486589668_u32
  DIBUTTON_SKIING_RIGHT_LINK = 486589676_u32
  DIBUTTON_SKIING_FASTER_LINK = 486622432_u32
  DIBUTTON_SKIING_SLOWER_LINK = 486622440_u32
  DIBUTTON_SKIING_DEVICE = 486556926_u32
  DIBUTTON_SKIING_PAUSE = 486556924_u32
  DIVIRTUAL_SPORTS_SOCCER_OFFENSE = 503316480_u32
  DIAXIS_SOCCERO_LATERAL = 503349761_u32
  DIAXIS_SOCCERO_MOVE = 503382530_u32
  DIAXIS_SOCCERO_BEND = 503415299_u32
  DIBUTTON_SOCCERO_SHOOT = 503317505_u32
  DIBUTTON_SOCCERO_PASS = 503317506_u32
  DIBUTTON_SOCCERO_FAKE = 503317507_u32
  DIBUTTON_SOCCERO_PLAYER = 503317508_u32
  DIBUTTON_SOCCERO_SPECIAL1 = 503317509_u32
  DIBUTTON_SOCCERO_SELECT = 503317510_u32
  DIBUTTON_SOCCERO_MENU = 503317757_u32
  DIHATSWITCH_SOCCERO_GLANCE = 503334401_u32
  DIBUTTON_SOCCERO_SUBSTITUTE = 503333895_u32
  DIBUTTON_SOCCERO_SHOOTLOW = 503333896_u32
  DIBUTTON_SOCCERO_SHOOTHIGH = 503333897_u32
  DIBUTTON_SOCCERO_PASSTHRU = 503333898_u32
  DIBUTTON_SOCCERO_SPRINT = 503333899_u32
  DIBUTTON_SOCCERO_CONTROL = 503333900_u32
  DIBUTTON_SOCCERO_HEAD = 503333901_u32
  DIBUTTON_SOCCERO_LEFT_LINK = 503366884_u32
  DIBUTTON_SOCCERO_RIGHT_LINK = 503366892_u32
  DIBUTTON_SOCCERO_FORWARD_LINK = 503399648_u32
  DIBUTTON_SOCCERO_BACK_LINK = 503399656_u32
  DIBUTTON_SOCCERO_DEVICE = 503334142_u32
  DIBUTTON_SOCCERO_PAUSE = 503334140_u32
  DIVIRTUAL_SPORTS_SOCCER_DEFENSE = 520093696_u32
  DIAXIS_SOCCERD_LATERAL = 520126977_u32
  DIAXIS_SOCCERD_MOVE = 520159746_u32
  DIBUTTON_SOCCERD_BLOCK = 520094721_u32
  DIBUTTON_SOCCERD_STEAL = 520094722_u32
  DIBUTTON_SOCCERD_FAKE = 520094723_u32
  DIBUTTON_SOCCERD_PLAYER = 520094724_u32
  DIBUTTON_SOCCERD_SPECIAL = 520094725_u32
  DIBUTTON_SOCCERD_SELECT = 520094726_u32
  DIBUTTON_SOCCERD_SLIDE = 520094727_u32
  DIBUTTON_SOCCERD_MENU = 520094973_u32
  DIHATSWITCH_SOCCERD_GLANCE = 520111617_u32
  DIBUTTON_SOCCERD_FOUL = 520111112_u32
  DIBUTTON_SOCCERD_HEAD = 520111113_u32
  DIBUTTON_SOCCERD_CLEAR = 520111114_u32
  DIBUTTON_SOCCERD_GOALIECHARGE = 520111115_u32
  DIBUTTON_SOCCERD_SUBSTITUTE = 520111116_u32
  DIBUTTON_SOCCERD_LEFT_LINK = 520144100_u32
  DIBUTTON_SOCCERD_RIGHT_LINK = 520144108_u32
  DIBUTTON_SOCCERD_FORWARD_LINK = 520176864_u32
  DIBUTTON_SOCCERD_BACK_LINK = 520176872_u32
  DIBUTTON_SOCCERD_DEVICE = 520111358_u32
  DIBUTTON_SOCCERD_PAUSE = 520111356_u32
  DIVIRTUAL_SPORTS_RACQUET = 536870912_u32
  DIAXIS_RACQUET_LATERAL = 536904193_u32
  DIAXIS_RACQUET_MOVE = 536936962_u32
  DIBUTTON_RACQUET_SWING = 536871937_u32
  DIBUTTON_RACQUET_BACKSWING = 536871938_u32
  DIBUTTON_RACQUET_SMASH = 536871939_u32
  DIBUTTON_RACQUET_SPECIAL = 536871940_u32
  DIBUTTON_RACQUET_SELECT = 536871941_u32
  DIBUTTON_RACQUET_MENU = 536872189_u32
  DIHATSWITCH_RACQUET_GLANCE = 536888833_u32
  DIBUTTON_RACQUET_TIMEOUT = 536888326_u32
  DIBUTTON_RACQUET_SUBSTITUTE = 536888327_u32
  DIBUTTON_RACQUET_LEFT_LINK = 536921316_u32
  DIBUTTON_RACQUET_RIGHT_LINK = 536921324_u32
  DIBUTTON_RACQUET_FORWARD_LINK = 536954080_u32
  DIBUTTON_RACQUET_BACK_LINK = 536954088_u32
  DIBUTTON_RACQUET_DEVICE = 536888574_u32
  DIBUTTON_RACQUET_PAUSE = 536888572_u32
  DIVIRTUAL_ARCADE_SIDE2SIDE = 553648128_u32
  DIAXIS_ARCADES_LATERAL = 553681409_u32
  DIAXIS_ARCADES_MOVE = 553714178_u32
  DIBUTTON_ARCADES_THROW = 553649153_u32
  DIBUTTON_ARCADES_CARRY = 553649154_u32
  DIBUTTON_ARCADES_ATTACK = 553649155_u32
  DIBUTTON_ARCADES_SPECIAL = 553649156_u32
  DIBUTTON_ARCADES_SELECT = 553649157_u32
  DIBUTTON_ARCADES_MENU = 553649405_u32
  DIHATSWITCH_ARCADES_VIEW = 553666049_u32
  DIBUTTON_ARCADES_LEFT_LINK = 553698532_u32
  DIBUTTON_ARCADES_RIGHT_LINK = 553698540_u32
  DIBUTTON_ARCADES_FORWARD_LINK = 553731296_u32
  DIBUTTON_ARCADES_BACK_LINK = 553731304_u32
  DIBUTTON_ARCADES_VIEW_UP_LINK = 554157280_u32
  DIBUTTON_ARCADES_VIEW_DOWN_LINK = 554157288_u32
  DIBUTTON_ARCADES_VIEW_LEFT_LINK = 554157284_u32
  DIBUTTON_ARCADES_VIEW_RIGHT_LINK = 554157292_u32
  DIBUTTON_ARCADES_DEVICE = 553665790_u32
  DIBUTTON_ARCADES_PAUSE = 553665788_u32
  DIVIRTUAL_ARCADE_PLATFORM = 570425344_u32
  DIAXIS_ARCADEP_LATERAL = 570458625_u32
  DIAXIS_ARCADEP_MOVE = 570491394_u32
  DIBUTTON_ARCADEP_JUMP = 570426369_u32
  DIBUTTON_ARCADEP_FIRE = 570426370_u32
  DIBUTTON_ARCADEP_CROUCH = 570426371_u32
  DIBUTTON_ARCADEP_SPECIAL = 570426372_u32
  DIBUTTON_ARCADEP_SELECT = 570426373_u32
  DIBUTTON_ARCADEP_MENU = 570426621_u32
  DIHATSWITCH_ARCADEP_VIEW = 570443265_u32
  DIBUTTON_ARCADEP_FIRESECONDARY = 570442758_u32
  DIBUTTON_ARCADEP_LEFT_LINK = 570475748_u32
  DIBUTTON_ARCADEP_RIGHT_LINK = 570475756_u32
  DIBUTTON_ARCADEP_FORWARD_LINK = 570508512_u32
  DIBUTTON_ARCADEP_BACK_LINK = 570508520_u32
  DIBUTTON_ARCADEP_VIEW_UP_LINK = 570934496_u32
  DIBUTTON_ARCADEP_VIEW_DOWN_LINK = 570934504_u32
  DIBUTTON_ARCADEP_VIEW_LEFT_LINK = 570934500_u32
  DIBUTTON_ARCADEP_VIEW_RIGHT_LINK = 570934508_u32
  DIBUTTON_ARCADEP_DEVICE = 570443006_u32
  DIBUTTON_ARCADEP_PAUSE = 570443004_u32
  DIVIRTUAL_CAD_2DCONTROL = 587202560_u32
  DIAXIS_2DCONTROL_LATERAL = 587235841_u32
  DIAXIS_2DCONTROL_MOVE = 587268610_u32
  DIAXIS_2DCONTROL_INOUT = 587301379_u32
  DIBUTTON_2DCONTROL_SELECT = 587203585_u32
  DIBUTTON_2DCONTROL_SPECIAL1 = 587203586_u32
  DIBUTTON_2DCONTROL_SPECIAL = 587203587_u32
  DIBUTTON_2DCONTROL_SPECIAL2 = 587203588_u32
  DIBUTTON_2DCONTROL_MENU = 587203837_u32
  DIHATSWITCH_2DCONTROL_HATSWITCH = 587220481_u32
  DIAXIS_2DCONTROL_ROTATEZ = 587350532_u32
  DIBUTTON_2DCONTROL_DISPLAY = 587219973_u32
  DIBUTTON_2DCONTROL_DEVICE = 587220222_u32
  DIBUTTON_2DCONTROL_PAUSE = 587220220_u32
  DIVIRTUAL_CAD_3DCONTROL = 603979776_u32
  DIAXIS_3DCONTROL_LATERAL = 604013057_u32
  DIAXIS_3DCONTROL_MOVE = 604045826_u32
  DIAXIS_3DCONTROL_INOUT = 604078595_u32
  DIBUTTON_3DCONTROL_SELECT = 603980801_u32
  DIBUTTON_3DCONTROL_SPECIAL1 = 603980802_u32
  DIBUTTON_3DCONTROL_SPECIAL = 603980803_u32
  DIBUTTON_3DCONTROL_SPECIAL2 = 603980804_u32
  DIBUTTON_3DCONTROL_MENU = 603981053_u32
  DIHATSWITCH_3DCONTROL_HATSWITCH = 603997697_u32
  DIAXIS_3DCONTROL_ROTATEX = 604193284_u32
  DIAXIS_3DCONTROL_ROTATEY = 604160517_u32
  DIAXIS_3DCONTROL_ROTATEZ = 604127750_u32
  DIBUTTON_3DCONTROL_DISPLAY = 603997189_u32
  DIBUTTON_3DCONTROL_DEVICE = 603997438_u32
  DIBUTTON_3DCONTROL_PAUSE = 603997436_u32
  DIVIRTUAL_CAD_FLYBY = 620756992_u32
  DIAXIS_CADF_LATERAL = 620790273_u32
  DIAXIS_CADF_MOVE = 620823042_u32
  DIAXIS_CADF_INOUT = 620855811_u32
  DIBUTTON_CADF_SELECT = 620758017_u32
  DIBUTTON_CADF_SPECIAL1 = 620758018_u32
  DIBUTTON_CADF_SPECIAL = 620758019_u32
  DIBUTTON_CADF_SPECIAL2 = 620758020_u32
  DIBUTTON_CADF_MENU = 620758269_u32
  DIHATSWITCH_CADF_HATSWITCH = 620774913_u32
  DIAXIS_CADF_ROTATEX = 620970500_u32
  DIAXIS_CADF_ROTATEY = 620937733_u32
  DIAXIS_CADF_ROTATEZ = 620904966_u32
  DIBUTTON_CADF_DISPLAY = 620774405_u32
  DIBUTTON_CADF_DEVICE = 620774654_u32
  DIBUTTON_CADF_PAUSE = 620774652_u32
  DIVIRTUAL_CAD_MODEL = 637534208_u32
  DIAXIS_CADM_LATERAL = 637567489_u32
  DIAXIS_CADM_MOVE = 637600258_u32
  DIAXIS_CADM_INOUT = 637633027_u32
  DIBUTTON_CADM_SELECT = 637535233_u32
  DIBUTTON_CADM_SPECIAL1 = 637535234_u32
  DIBUTTON_CADM_SPECIAL = 637535235_u32
  DIBUTTON_CADM_SPECIAL2 = 637535236_u32
  DIBUTTON_CADM_MENU = 637535485_u32
  DIHATSWITCH_CADM_HATSWITCH = 637552129_u32
  DIAXIS_CADM_ROTATEX = 637747716_u32
  DIAXIS_CADM_ROTATEY = 637714949_u32
  DIAXIS_CADM_ROTATEZ = 637682182_u32
  DIBUTTON_CADM_DISPLAY = 637551621_u32
  DIBUTTON_CADM_DEVICE = 637551870_u32
  DIBUTTON_CADM_PAUSE = 637551868_u32
  DIVIRTUAL_REMOTE_CONTROL = 654311424_u32
  DIAXIS_REMOTE_SLIDER = 654639617_u32
  DIBUTTON_REMOTE_MUTE = 654312449_u32
  DIBUTTON_REMOTE_SELECT = 654312450_u32
  DIBUTTON_REMOTE_PLAY = 654320643_u32
  DIBUTTON_REMOTE_CUE = 654320644_u32
  DIBUTTON_REMOTE_REVIEW = 654320645_u32
  DIBUTTON_REMOTE_CHANGE = 654320646_u32
  DIBUTTON_REMOTE_RECORD = 654320647_u32
  DIBUTTON_REMOTE_MENU = 654312701_u32
  DIAXIS_REMOTE_SLIDER2 = 654656002_u32
  DIBUTTON_REMOTE_TV = 654334984_u32
  DIBUTTON_REMOTE_CABLE = 654334985_u32
  DIBUTTON_REMOTE_CD = 654334986_u32
  DIBUTTON_REMOTE_VCR = 654334987_u32
  DIBUTTON_REMOTE_TUNER = 654334988_u32
  DIBUTTON_REMOTE_DVD = 654334989_u32
  DIBUTTON_REMOTE_ADJUST = 654334990_u32
  DIBUTTON_REMOTE_DIGIT0 = 654332943_u32
  DIBUTTON_REMOTE_DIGIT1 = 654332944_u32
  DIBUTTON_REMOTE_DIGIT2 = 654332945_u32
  DIBUTTON_REMOTE_DIGIT3 = 654332946_u32
  DIBUTTON_REMOTE_DIGIT4 = 654332947_u32
  DIBUTTON_REMOTE_DIGIT5 = 654332948_u32
  DIBUTTON_REMOTE_DIGIT6 = 654332949_u32
  DIBUTTON_REMOTE_DIGIT7 = 654332950_u32
  DIBUTTON_REMOTE_DIGIT8 = 654332951_u32
  DIBUTTON_REMOTE_DIGIT9 = 654332952_u32
  DIBUTTON_REMOTE_DEVICE = 654329086_u32
  DIBUTTON_REMOTE_PAUSE = 654329084_u32
  DIVIRTUAL_BROWSER_CONTROL = 671088640_u32
  DIAXIS_BROWSER_LATERAL = 671121921_u32
  DIAXIS_BROWSER_MOVE = 671154690_u32
  DIBUTTON_BROWSER_SELECT = 671089665_u32
  DIAXIS_BROWSER_VIEW = 671187459_u32
  DIBUTTON_BROWSER_REFRESH = 671089666_u32
  DIBUTTON_BROWSER_MENU = 671089917_u32
  DIBUTTON_BROWSER_SEARCH = 671106051_u32
  DIBUTTON_BROWSER_STOP = 671106052_u32
  DIBUTTON_BROWSER_HOME = 671106053_u32
  DIBUTTON_BROWSER_FAVORITES = 671106054_u32
  DIBUTTON_BROWSER_NEXT = 671106055_u32
  DIBUTTON_BROWSER_PREVIOUS = 671106056_u32
  DIBUTTON_BROWSER_HISTORY = 671106057_u32
  DIBUTTON_BROWSER_PRINT = 671106058_u32
  DIBUTTON_BROWSER_DEVICE = 671106302_u32
  DIBUTTON_BROWSER_PAUSE = 671106300_u32
  DIVIRTUAL_DRIVING_MECHA = 687865856_u32
  DIAXIS_MECHA_STEER = 687899137_u32
  DIAXIS_MECHA_TORSO = 687931906_u32
  DIAXIS_MECHA_ROTATE = 687997443_u32
  DIAXIS_MECHA_THROTTLE = 688095748_u32
  DIBUTTON_MECHA_FIRE = 687866881_u32
  DIBUTTON_MECHA_WEAPONS = 687866882_u32
  DIBUTTON_MECHA_TARGET = 687866883_u32
  DIBUTTON_MECHA_REVERSE = 687866884_u32
  DIBUTTON_MECHA_ZOOM = 687866885_u32
  DIBUTTON_MECHA_JUMP = 687866886_u32
  DIBUTTON_MECHA_MENU = 687867133_u32
  DIBUTTON_MECHA_CENTER = 687883271_u32
  DIHATSWITCH_MECHA_GLANCE = 687883777_u32
  DIBUTTON_MECHA_VIEW = 687883272_u32
  DIBUTTON_MECHA_FIRESECONDARY = 687883273_u32
  DIBUTTON_MECHA_LEFT_LINK = 687916260_u32
  DIBUTTON_MECHA_RIGHT_LINK = 687916268_u32
  DIBUTTON_MECHA_FORWARD_LINK = 687949024_u32
  DIBUTTON_MECHA_BACK_LINK = 687949032_u32
  DIBUTTON_MECHA_ROTATE_LEFT_LINK = 688014564_u32
  DIBUTTON_MECHA_ROTATE_RIGHT_LINK = 688014572_u32
  DIBUTTON_MECHA_FASTER_LINK = 688112864_u32
  DIBUTTON_MECHA_SLOWER_LINK = 688112872_u32
  DIBUTTON_MECHA_DEVICE = 687883518_u32
  DIBUTTON_MECHA_PAUSE = 687883516_u32
  DIAXIS_ANY_X_1 = 4278239745_u32
  DIAXIS_ANY_X_2 = 4278239746_u32
  DIAXIS_ANY_Y_1 = 4278272513_u32
  DIAXIS_ANY_Y_2 = 4278272514_u32
  DIAXIS_ANY_Z_1 = 4278305281_u32
  DIAXIS_ANY_Z_2 = 4278305282_u32
  DIAXIS_ANY_R_1 = 4278338049_u32
  DIAXIS_ANY_R_2 = 4278338050_u32
  DIAXIS_ANY_U_1 = 4278370817_u32
  DIAXIS_ANY_U_2 = 4278370818_u32
  DIAXIS_ANY_V_1 = 4278403585_u32
  DIAXIS_ANY_V_2 = 4278403586_u32
  DIAXIS_ANY_A_1 = 4278436353_u32
  DIAXIS_ANY_A_2 = 4278436354_u32
  DIAXIS_ANY_B_1 = 4278469121_u32
  DIAXIS_ANY_B_2 = 4278469122_u32
  DIAXIS_ANY_C_1 = 4278501889_u32
  DIAXIS_ANY_C_2 = 4278501890_u32
  DIAXIS_ANY_S_1 = 4278534657_u32
  DIAXIS_ANY_S_2 = 4278534658_u32
  DIAXIS_ANY_1 = 4278206977_u32
  DIAXIS_ANY_2 = 4278206978_u32
  DIAXIS_ANY_3 = 4278206979_u32
  DIAXIS_ANY_4 = 4278206980_u32
  DIPOV_ANY_1 = 4278208001_u32
  DIPOV_ANY_2 = 4278208002_u32
  DIPOV_ANY_3 = 4278208003_u32
  DIPOV_ANY_4 = 4278208004_u32
  JOY_PASSDRIVERDATA = 268435456_i32
  JOY_HWS_ISHEADTRACKER = 33554432_i32
  JOY_HWS_ISGAMEPORTDRIVER = 67108864_i32
  JOY_HWS_ISANALOGPORTDRIVER = 134217728_i32
  JOY_HWS_AUTOLOAD = 268435456_i32
  JOY_HWS_NODEVNODE = 536870912_i32
  JOY_HWS_ISGAMEPORTBUS = -2147483648_i32
  JOY_HWS_GAMEPORTBUSBUSY = 1_i32
  JOY_US_VOLATILE = 8_i32
  JOY_OEMPOLL_PASSDRIVERDATA = 7_u32
  BUTTON_BIT_POWER = 1_u32
  BUTTON_BIT_WINDOWS = 2_u32
  BUTTON_BIT_VOLUMEUP = 4_u32
  BUTTON_BIT_VOLUMEDOWN = 8_u32
  BUTTON_BIT_ROTATION_LOCK = 16_u32
  BUTTON_BIT_BACK = 32_u32
  BUTTON_BIT_SEARCH = 64_u32
  BUTTON_BIT_CAMERAFOCUS = 128_u32
  BUTTON_BIT_CAMERASHUTTER = 256_u32
  BUTTON_BIT_RINGERTOGGLE = 512_u32
  BUTTON_BIT_HEADSET = 1024_u32
  BUTTON_BIT_HWKBDEPLOY = 2048_u32
  BUTTON_BIT_CAMERALENS = 4096_u32
  BUTTON_BIT_OEMCUSTOM = 8192_u32
  BUTTON_BIT_OEMCUSTOM2 = 16384_u32
  BUTTON_BIT_OEMCUSTOM3 = 32768_u32
  BUTTON_BIT_ALLBUTTONSMASK = 16383_u32
  IOCTL_BUTTON_SET_ENABLED_ON_IDLE = 721576_u32
  IOCTL_BUTTON_GET_ENABLED_ON_IDLE = 721580_u32

  enum HIDP_REPORT_TYPE
    HidP_Input = 0_i32
    HidP_Output = 1_i32
    HidP_Feature = 2_i32
  end
  enum HIDP_KEYBOARD_DIRECTION
    HidP_Keyboard_Break = 0_i32
    HidP_Keyboard_Make = 1_i32
  end
  enum GPIOBUTTONS_BUTTON_TYPE
    GPIO_BUTTON_POWER = 0_i32
    GPIO_BUTTON_WINDOWS = 1_i32
    GPIO_BUTTON_VOLUME_UP = 2_i32
    GPIO_BUTTON_VOLUME_DOWN = 3_i32
    GPIO_BUTTON_ROTATION_LOCK = 4_i32
    GPIO_BUTTON_BACK = 5_i32
    GPIO_BUTTON_SEARCH = 6_i32
    GPIO_BUTTON_CAMERA_FOCUS = 7_i32
    GPIO_BUTTON_CAMERA_SHUTTER = 8_i32
    GPIO_BUTTON_RINGER_TOGGLE = 9_i32
    GPIO_BUTTON_HEADSET = 10_i32
    GPIO_BUTTON_HWKB_DEPLOY = 11_i32
    GPIO_BUTTON_CAMERA_LENS = 12_i32
    GPIO_BUTTON_OEM_CUSTOM = 13_i32
    GPIO_BUTTON_OEM_CUSTOM2 = 14_i32
    GPIO_BUTTON_OEM_CUSTOM3 = 15_i32
    GPIO_BUTTON_COUNT_MIN = 5_i32
    GPIO_BUTTON_COUNT = 16_i32
  end

  @[Extern]
  record DICONSTANTFORCE,
    lMagnitude : Int32

  @[Extern]
  record DIRAMPFORCE,
    lStart : Int32,
    lEnd : Int32

  @[Extern]
  record DIPERIODIC,
    dwMagnitude : UInt32,
    lOffset : Int32,
    dwPhase : UInt32,
    dwPeriod : UInt32

  @[Extern]
  record DICONDITION,
    lOffset : Int32,
    lPositiveCoefficient : Int32,
    lNegativeCoefficient : Int32,
    dwPositiveSaturation : UInt32,
    dwNegativeSaturation : UInt32,
    lDeadBand : Int32

  @[Extern]
  record DICUSTOMFORCE,
    cChannels : UInt32,
    dwSamplePeriod : UInt32,
    cSamples : UInt32,
    rglForceData : Int32*

  @[Extern]
  record DIENVELOPE,
    dwSize : UInt32,
    dwAttackLevel : UInt32,
    dwAttackTime : UInt32,
    dwFadeLevel : UInt32,
    dwFadeTime : UInt32

  @[Extern]
  record DIEFFECT_DX5,
    dwSize : UInt32,
    dwFlags : UInt32,
    dwDuration : UInt32,
    dwSamplePeriod : UInt32,
    dwGain : UInt32,
    dwTriggerButton : UInt32,
    dwTriggerRepeatInterval : UInt32,
    cAxes : UInt32,
    rgdwAxes : UInt32*,
    rglDirection : Int32*,
    lpEnvelope : Win32cr::Devices::HumanInterfaceDevice::DIENVELOPE*,
    cbTypeSpecificParams : UInt32,
    lpvTypeSpecificParams : Void*

  @[Extern]
  record DIEFFECT,
    dwSize : UInt32,
    dwFlags : UInt32,
    dwDuration : UInt32,
    dwSamplePeriod : UInt32,
    dwGain : UInt32,
    dwTriggerButton : UInt32,
    dwTriggerRepeatInterval : UInt32,
    cAxes : UInt32,
    rgdwAxes : UInt32*,
    rglDirection : Int32*,
    lpEnvelope : Win32cr::Devices::HumanInterfaceDevice::DIENVELOPE*,
    cbTypeSpecificParams : UInt32,
    lpvTypeSpecificParams : Void*,
    dwStartDelay : UInt32

  @[Extern]
  record DIFILEEFFECT,
    dwSize : UInt32,
    guid_effect : LibC::GUID,
    lpDiEffect : Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*,
    szFriendlyName : Win32cr::Foundation::CHAR[260]

  @[Extern]
  record DIEFFESCAPE,
    dwSize : UInt32,
    dwCommand : UInt32,
    lpvInBuffer : Void*,
    cbInBuffer : UInt32,
    lpvOutBuffer : Void*,
    cbOutBuffer : UInt32

  @[Extern]
  record DIDEVCAPS_DX3,
    dwSize : UInt32,
    dwFlags : UInt32,
    dwDevType : UInt32,
    dwAxes : UInt32,
    dwButtons : UInt32,
    dwPOVs : UInt32

  @[Extern]
  record DIDEVCAPS,
    dwSize : UInt32,
    dwFlags : UInt32,
    dwDevType : UInt32,
    dwAxes : UInt32,
    dwButtons : UInt32,
    dwPOVs : UInt32,
    dwFFSamplePeriod : UInt32,
    dwFFMinTimeResolution : UInt32,
    dwFirmwareRevision : UInt32,
    dwHardwareRevision : UInt32,
    dwFFDriverVersion : UInt32

  @[Extern]
  record DIOBJECTDATAFORMAT,
    pguid : LibC::GUID*,
    dwOfs : UInt32,
    dwType : UInt32,
    dwFlags : UInt32

  @[Extern]
  record DIDATAFORMAT,
    dwSize : UInt32,
    dwObjSize : UInt32,
    dwFlags : UInt32,
    dwDataSize : UInt32,
    dwNumObjs : UInt32,
    rgodf : Win32cr::Devices::HumanInterfaceDevice::DIOBJECTDATAFORMAT*

  @[Extern]
  record DIACTIONA,
    uAppData : LibC::UIntPtrT,
    dwSemantic : UInt32,
    dwFlags : UInt32,
    anonymous : Anonymous_e__Union,
    guidInstance : LibC::GUID,
    dwObjID : UInt32,
    dwHow : UInt32 do

    # Nested Type Anonymous_e__Union
    @[Extern(union: true)]
    record Anonymous_e__Union,
      lptszActionName : Win32cr::Foundation::PSTR,
      uResIdString : UInt32

  end

  @[Extern]
  record DIACTIONW,
    uAppData : LibC::UIntPtrT,
    dwSemantic : UInt32,
    dwFlags : UInt32,
    anonymous : Anonymous_e__Union,
    guidInstance : LibC::GUID,
    dwObjID : UInt32,
    dwHow : UInt32 do

    # Nested Type Anonymous_e__Union
    @[Extern(union: true)]
    record Anonymous_e__Union,
      lptszActionName : Win32cr::Foundation::PWSTR,
      uResIdString : UInt32

  end

  @[Extern]
  record DIACTIONFORMATA,
    dwSize : UInt32,
    dwActionSize : UInt32,
    dwDataSize : UInt32,
    dwNumActions : UInt32,
    rgoAction : Win32cr::Devices::HumanInterfaceDevice::DIACTIONA*,
    guidActionMap : LibC::GUID,
    dwGenre : UInt32,
    dwBufferSize : UInt32,
    lAxisMin : Int32,
    lAxisMax : Int32,
    hInstString : Win32cr::Foundation::HINSTANCE,
    ftTimeStamp : Win32cr::Foundation::FILETIME,
    dwCRC : UInt32,
    tszActionMap : Win32cr::Foundation::CHAR[260]

  @[Extern]
  record DIACTIONFORMATW,
    dwSize : UInt32,
    dwActionSize : UInt32,
    dwDataSize : UInt32,
    dwNumActions : UInt32,
    rgoAction : Win32cr::Devices::HumanInterfaceDevice::DIACTIONW*,
    guidActionMap : LibC::GUID,
    dwGenre : UInt32,
    dwBufferSize : UInt32,
    lAxisMin : Int32,
    lAxisMax : Int32,
    hInstString : Win32cr::Foundation::HINSTANCE,
    ftTimeStamp : Win32cr::Foundation::FILETIME,
    dwCRC : UInt32,
    tszActionMap : UInt16[260]

  @[Extern]
  record DICOLORSET,
    dwSize : UInt32,
    cTextFore : UInt32,
    cTextHighlight : UInt32,
    cCalloutLine : UInt32,
    cCalloutHighlight : UInt32,
    cBorder : UInt32,
    cControlFill : UInt32,
    cHighlightFill : UInt32,
    cAreaFill : UInt32

  @[Extern]
  record DICONFIGUREDEVICESPARAMSA,
    dwSize : UInt32,
    dwcUsers : UInt32,
    lptszUserNames : Win32cr::Foundation::PSTR,
    dwcFormats : UInt32,
    lprgFormats : Win32cr::Devices::HumanInterfaceDevice::DIACTIONFORMATA*,
    hwnd : Win32cr::Foundation::HWND,
    dics : Win32cr::Devices::HumanInterfaceDevice::DICOLORSET,
    lpUnkDDSTarget : Void*

  @[Extern]
  record DICONFIGUREDEVICESPARAMSW,
    dwSize : UInt32,
    dwcUsers : UInt32,
    lptszUserNames : Win32cr::Foundation::PWSTR,
    dwcFormats : UInt32,
    lprgFormats : Win32cr::Devices::HumanInterfaceDevice::DIACTIONFORMATW*,
    hwnd : Win32cr::Foundation::HWND,
    dics : Win32cr::Devices::HumanInterfaceDevice::DICOLORSET,
    lpUnkDDSTarget : Void*

  @[Extern]
  record DIDEVICEIMAGEINFOA,
    tszImagePath : Win32cr::Foundation::CHAR[260],
    dwFlags : UInt32,
    dwViewID : UInt32,
    rcOverlay : Win32cr::Foundation::RECT,
    dwObjID : UInt32,
    dwcValidPts : UInt32,
    rgptCalloutLine : Win32cr::Foundation::POINT[5],
    rcCalloutRect : Win32cr::Foundation::RECT,
    dwTextAlign : UInt32

  @[Extern]
  record DIDEVICEIMAGEINFOW,
    tszImagePath : UInt16[260],
    dwFlags : UInt32,
    dwViewID : UInt32,
    rcOverlay : Win32cr::Foundation::RECT,
    dwObjID : UInt32,
    dwcValidPts : UInt32,
    rgptCalloutLine : Win32cr::Foundation::POINT[5],
    rcCalloutRect : Win32cr::Foundation::RECT,
    dwTextAlign : UInt32

  @[Extern]
  record DIDEVICEIMAGEINFOHEADERA,
    dwSize : UInt32,
    dwSizeImageInfo : UInt32,
    dwcViews : UInt32,
    dwcButtons : UInt32,
    dwcAxes : UInt32,
    dwcPOVs : UInt32,
    dwBufferSize : UInt32,
    dwBufferUsed : UInt32,
    lprgImageInfoArray : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEIMAGEINFOA*

  @[Extern]
  record DIDEVICEIMAGEINFOHEADERW,
    dwSize : UInt32,
    dwSizeImageInfo : UInt32,
    dwcViews : UInt32,
    dwcButtons : UInt32,
    dwcAxes : UInt32,
    dwcPOVs : UInt32,
    dwBufferSize : UInt32,
    dwBufferUsed : UInt32,
    lprgImageInfoArray : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEIMAGEINFOW*

  @[Extern]
  record DIDEVICEOBJECTINSTANCE_DX3A,
    dwSize : UInt32,
    guidType : LibC::GUID,
    dwOfs : UInt32,
    dwType : UInt32,
    dwFlags : UInt32,
    tszName : Win32cr::Foundation::CHAR[260]

  @[Extern]
  record DIDEVICEOBJECTINSTANCE_DX3W,
    dwSize : UInt32,
    guidType : LibC::GUID,
    dwOfs : UInt32,
    dwType : UInt32,
    dwFlags : UInt32,
    tszName : UInt16[260]

  @[Extern]
  record DIDEVICEOBJECTINSTANCEA,
    dwSize : UInt32,
    guidType : LibC::GUID,
    dwOfs : UInt32,
    dwType : UInt32,
    dwFlags : UInt32,
    tszName : Win32cr::Foundation::CHAR[260],
    dwFFMaxForce : UInt32,
    dwFFForceResolution : UInt32,
    wCollectionNumber : UInt16,
    wDesignatorIndex : UInt16,
    wUsagePage : UInt16,
    wUsage : UInt16,
    dwDimension : UInt32,
    wExponent : UInt16,
    wReportId : UInt16

  @[Extern]
  record DIDEVICEOBJECTINSTANCEW,
    dwSize : UInt32,
    guidType : LibC::GUID,
    dwOfs : UInt32,
    dwType : UInt32,
    dwFlags : UInt32,
    tszName : UInt16[260],
    dwFFMaxForce : UInt32,
    dwFFForceResolution : UInt32,
    wCollectionNumber : UInt16,
    wDesignatorIndex : UInt16,
    wUsagePage : UInt16,
    wUsage : UInt16,
    dwDimension : UInt32,
    wExponent : UInt16,
    wReportId : UInt16

  @[Extern]
  record DIPROPHEADER,
    dwSize : UInt32,
    dwHeaderSize : UInt32,
    dwObj : UInt32,
    dwHow : UInt32

  @[Extern]
  record DIPROPDWORD,
    diph : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER,
    dwData : UInt32

  @[Extern]
  record DIPROPPOINTER,
    diph : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER,
    uData : LibC::UIntPtrT

  @[Extern]
  record DIPROPRANGE,
    diph : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER,
    lMin : Int32,
    lMax : Int32

  @[Extern]
  record DIPROPCAL,
    diph : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER,
    lMin : Int32,
    lCenter : Int32,
    lMax : Int32

  @[Extern]
  record DIPROPCALPOV,
    diph : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER,
    lMin : Int32[5],
    lMax : Int32[5]

  @[Extern]
  record DIPROPGUIDANDPATH,
    diph : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER,
    guidClass : LibC::GUID,
    wszPath : UInt16[260]

  @[Extern]
  record DIPROPSTRING,
    diph : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER,
    wsz : UInt16[260]

  @[Extern]
  record CPOINT,
    lP : Int32,
    dwLog : UInt32

  @[Extern]
  record DIPROPCPOINTS,
    diph : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER,
    dwCPointsNum : UInt32,
    cp : Win32cr::Devices::HumanInterfaceDevice::CPOINT[8]

  @[Extern]
  record DIDEVICEOBJECTDATA_DX3,
    dwOfs : UInt32,
    dwData : UInt32,
    dwTimeStamp : UInt32,
    dwSequence : UInt32

  @[Extern]
  record DIDEVICEOBJECTDATA,
    dwOfs : UInt32,
    dwData : UInt32,
    dwTimeStamp : UInt32,
    dwSequence : UInt32,
    uAppData : LibC::UIntPtrT

  @[Extern]
  record DIDEVICEINSTANCE_DX3A,
    dwSize : UInt32,
    guidInstance : LibC::GUID,
    guidProduct : LibC::GUID,
    dwDevType : UInt32,
    tszInstanceName : Win32cr::Foundation::CHAR[260],
    tszProductName : Win32cr::Foundation::CHAR[260]

  @[Extern]
  record DIDEVICEINSTANCE_DX3W,
    dwSize : UInt32,
    guidInstance : LibC::GUID,
    guidProduct : LibC::GUID,
    dwDevType : UInt32,
    tszInstanceName : UInt16[260],
    tszProductName : UInt16[260]

  @[Extern]
  record DIDEVICEINSTANCEA,
    dwSize : UInt32,
    guidInstance : LibC::GUID,
    guidProduct : LibC::GUID,
    dwDevType : UInt32,
    tszInstanceName : Win32cr::Foundation::CHAR[260],
    tszProductName : Win32cr::Foundation::CHAR[260],
    guidFFDriver : LibC::GUID,
    wUsagePage : UInt16,
    wUsage : UInt16

  @[Extern]
  record DIDEVICEINSTANCEW,
    dwSize : UInt32,
    guidInstance : LibC::GUID,
    guidProduct : LibC::GUID,
    dwDevType : UInt32,
    tszInstanceName : UInt16[260],
    tszProductName : UInt16[260],
    guidFFDriver : LibC::GUID,
    wUsagePage : UInt16,
    wUsage : UInt16

  @[Extern]
  record DIEFFECTINFOA,
    dwSize : UInt32,
    guid : LibC::GUID,
    dwEffType : UInt32,
    dwStaticParams : UInt32,
    dwDynamicParams : UInt32,
    tszName : Win32cr::Foundation::CHAR[260]

  @[Extern]
  record DIEFFECTINFOW,
    dwSize : UInt32,
    guid : LibC::GUID,
    dwEffType : UInt32,
    dwStaticParams : UInt32,
    dwDynamicParams : UInt32,
    tszName : UInt16[260]

  @[Extern]
  record DIMOUSESTATE,
    lX : Int32,
    lY : Int32,
    lZ : Int32,
    rgbButtons : UInt8[4]

  @[Extern]
  record DIMOUSESTATE2,
    lX : Int32,
    lY : Int32,
    lZ : Int32,
    rgbButtons : UInt8[8]

  @[Extern]
  record DIJOYSTATE,
    lX : Int32,
    lY : Int32,
    lZ : Int32,
    lRx : Int32,
    lRy : Int32,
    lRz : Int32,
    rglSlider : Int32[2],
    rgdwPOV : UInt32[4],
    rgbButtons : UInt8[32]

  @[Extern]
  record DIJOYSTATE2,
    lX : Int32,
    lY : Int32,
    lZ : Int32,
    lRx : Int32,
    lRy : Int32,
    lRz : Int32,
    rglSlider : Int32[2],
    rgdwPOV : UInt32[4],
    rgbButtons : UInt8[128],
    lVX : Int32,
    lVY : Int32,
    lVZ : Int32,
    lVRx : Int32,
    lVRy : Int32,
    lVRz : Int32,
    rglVSlider : Int32[2],
    lAX : Int32,
    lAY : Int32,
    lAZ : Int32,
    lARx : Int32,
    lARy : Int32,
    lARz : Int32,
    rglASlider : Int32[2],
    lFX : Int32,
    lFY : Int32,
    lFZ : Int32,
    lFRx : Int32,
    lFRy : Int32,
    lFRz : Int32,
    rglFSlider : Int32[2]

  @[Extern]
  record DIOBJECTATTRIBUTES,
    dwFlags : UInt32,
    wUsagePage : UInt16,
    wUsage : UInt16

  @[Extern]
  record DIFFOBJECTATTRIBUTES,
    dwFFMaxForce : UInt32,
    dwFFForceResolution : UInt32

  @[Extern]
  record DIOBJECTCALIBRATION,
    lMin : Int32,
    lCenter : Int32,
    lMax : Int32

  @[Extern]
  record DIPOVCALIBRATION,
    lMin : Int32[5],
    lMax : Int32[5]

  @[Extern]
  record DIEFFECTATTRIBUTES,
    dwEffectId : UInt32,
    dwEffType : UInt32,
    dwStaticParams : UInt32,
    dwDynamicParams : UInt32,
    dwCoords : UInt32

  @[Extern]
  record DIFFDEVICEATTRIBUTES,
    dwFlags : UInt32,
    dwFFSamplePeriod : UInt32,
    dwFFMinTimeResolution : UInt32

  @[Extern]
  record DIDRIVERVERSIONS,
    dwSize : UInt32,
    dwFirmwareRevision : UInt32,
    dwHardwareRevision : UInt32,
    dwFFDriverVersion : UInt32

  @[Extern]
  record DIDEVICESTATE,
    dwSize : UInt32,
    dwState : UInt32,
    dwLoad : UInt32

  @[Extern]
  record DIHIDFFINITINFO,
    dwSize : UInt32,
    pwszDeviceInterface : Win32cr::Foundation::PWSTR,
    guid_instance : LibC::GUID

  @[Extern]
  record JOYPOS,
    dwX : UInt32,
    dwY : UInt32,
    dwZ : UInt32,
    dwR : UInt32,
    dwU : UInt32,
    dwV : UInt32

  @[Extern]
  record JOYRANGE,
    jpMin : Win32cr::Devices::HumanInterfaceDevice::JOYPOS,
    jpMax : Win32cr::Devices::HumanInterfaceDevice::JOYPOS,
    jpCenter : Win32cr::Devices::HumanInterfaceDevice::JOYPOS

  @[Extern]
  record JOYREGUSERVALUES,
    dwTimeOut : UInt32,
    jrvRanges : Win32cr::Devices::HumanInterfaceDevice::JOYRANGE,
    jpDeadZone : Win32cr::Devices::HumanInterfaceDevice::JOYPOS

  @[Extern]
  record JOYREGHWSETTINGS,
    dwFlags : UInt32,
    dwNumButtons : UInt32

  @[Extern]
  record JOYREGHWVALUES,
    jrvHardware : Win32cr::Devices::HumanInterfaceDevice::JOYRANGE,
    dwPOVValues : UInt32[4],
    dwCalFlags : UInt32

  @[Extern]
  record JOYREGHWCONFIG,
    hws : Win32cr::Devices::HumanInterfaceDevice::JOYREGHWSETTINGS,
    dwUsageSettings : UInt32,
    hwv : Win32cr::Devices::HumanInterfaceDevice::JOYREGHWVALUES,
    dwType : UInt32,
    dwReserved : UInt32

  @[Extern]
  record JOYCALIBRATE,
    wXbase : UInt32,
    wXdelta : UInt32,
    wYbase : UInt32,
    wYdelta : UInt32,
    wZbase : UInt32,
    wZdelta : UInt32

  @[Extern]
  record DIJOYTYPEINFO_DX5,
    dwSize : UInt32,
    hws : Win32cr::Devices::HumanInterfaceDevice::JOYREGHWSETTINGS,
    clsidConfig : LibC::GUID,
    wszDisplayName : UInt16[256],
    wszCallout : UInt16[260]

  @[Extern]
  record DIJOYTYPEINFO_DX6,
    dwSize : UInt32,
    hws : Win32cr::Devices::HumanInterfaceDevice::JOYREGHWSETTINGS,
    clsidConfig : LibC::GUID,
    wszDisplayName : UInt16[256],
    wszCallout : UInt16[260],
    wszHardwareId : UInt16[256],
    dwFlags1 : UInt32

  @[Extern]
  record DIJOYTYPEINFO,
    dwSize : UInt32,
    hws : Win32cr::Devices::HumanInterfaceDevice::JOYREGHWSETTINGS,
    clsidConfig : LibC::GUID,
    wszDisplayName : UInt16[256],
    wszCallout : UInt16[260],
    wszHardwareId : UInt16[256],
    dwFlags1 : UInt32,
    dwFlags2 : UInt32,
    wszMapFile : UInt16[256]

  @[Extern]
  record DIJOYCONFIG_DX5,
    dwSize : UInt32,
    guidInstance : LibC::GUID,
    hwc : Win32cr::Devices::HumanInterfaceDevice::JOYREGHWCONFIG,
    dwGain : UInt32,
    wszType : UInt16[256],
    wszCallout : UInt16[256]

  @[Extern]
  record DIJOYCONFIG,
    dwSize : UInt32,
    guidInstance : LibC::GUID,
    hwc : Win32cr::Devices::HumanInterfaceDevice::JOYREGHWCONFIG,
    dwGain : UInt32,
    wszType : UInt16[256],
    wszCallout : UInt16[256],
    guidGameport : LibC::GUID

  @[Extern]
  record DIJOYUSERVALUES,
    dwSize : UInt32,
    ruv : Win32cr::Devices::HumanInterfaceDevice::JOYREGUSERVALUES,
    wszGlobalDriver : UInt16[256],
    wszGameportEmulator : UInt16[256]

  @[Extern]
  record KEYBOARD_INPUT_DATA,
    unit_id : UInt16,
    make_code : UInt16,
    flags : UInt16,
    reserved : UInt16,
    extra_information : UInt32

  @[Extern]
  record KEYBOARD_TYPEMATIC_PARAMETERS,
    unit_id : UInt16,
    rate : UInt16,
    delay : UInt16

  @[Extern]
  record KEYBOARD_ID,
    type__ : UInt8,
    subtype : UInt8

  @[Extern]
  record KEYBOARD_ATTRIBUTES,
    keyboard_identifier : Win32cr::Devices::HumanInterfaceDevice::KEYBOARD_ID,
    keyboard_mode : UInt16,
    number_of_function_keys : UInt16,
    number_of_indicators : UInt16,
    number_of_keys_total : UInt16,
    input_data_queue_length : UInt32,
    key_repeat_minimum : Win32cr::Devices::HumanInterfaceDevice::KEYBOARD_TYPEMATIC_PARAMETERS,
    key_repeat_maximum : Win32cr::Devices::HumanInterfaceDevice::KEYBOARD_TYPEMATIC_PARAMETERS

  @[Extern]
  record KEYBOARD_EXTENDED_ATTRIBUTES,
    version : UInt8,
    form_factor : UInt8,
    key_type : UInt8,
    physical_layout : UInt8,
    vendor_specific_physical_layout : UInt8,
    ietf_language_tag_index : UInt8,
    implemented_input_assist_controls : UInt8

  @[Extern]
  record KEYBOARD_INDICATOR_PARAMETERS,
    unit_id : UInt16,
    led_flags : UInt16

  @[Extern]
  record INDICATOR_LIST,
    make_code : UInt16,
    indicator_flags : UInt16

  @[Extern]
  record KEYBOARD_INDICATOR_TRANSLATION,
    number_of_indicator_keys : UInt16,
    indicator_list : Win32cr::Devices::HumanInterfaceDevice::INDICATOR_LIST*

  @[Extern]
  record KEYBOARD_UNIT_ID_PARAMETER,
    unit_id : UInt16

  @[Extern]
  record KEYBOARD_IME_STATUS,
    unit_id : UInt16,
    ime_open : UInt32,
    ime_conv_mode : UInt32

  @[Extern]
  record MOUSE_INPUT_DATA,
    unit_id : UInt16,
    flags : UInt16,
    anonymous : Anonymous_e__Union,
    raw_buttons : UInt32,
    last_x : Int32,
    last_y : Int32,
    extra_information : UInt32 do

    # Nested Type Anonymous_e__Union
    @[Extern(union: true)]
    record Anonymous_e__Union,
      buttons : UInt32,
      anonymous : Anonymous_e__Struct do

      # Nested Type Anonymous_e__Struct
      @[Extern]
      record Anonymous_e__Struct,
        button_flags : UInt16,
        button_data : UInt16

    end

  end

  @[Extern]
  record MOUSE_ATTRIBUTES,
    mouse_identifier : UInt16,
    number_of_buttons : UInt16,
    sample_rate : UInt16,
    input_data_queue_length : UInt32

  @[Extern]
  record MOUSE_UNIT_ID_PARAMETER,
    unit_id : UInt16

  @[Extern]
  record USAGE_AND_PAGE,
    usage : UInt16,
    usage_page : UInt16

  @[Extern]
  record HIDP_BUTTON_CAPS,
    usage_page : UInt16,
    report_id : UInt8,
    is_alias : Win32cr::Foundation::BOOLEAN,
    bit_field : UInt16,
    link_collection : UInt16,
    link_usage : UInt16,
    link_usage_page : UInt16,
    is_range : Win32cr::Foundation::BOOLEAN,
    is_string_range : Win32cr::Foundation::BOOLEAN,
    is_designator_range : Win32cr::Foundation::BOOLEAN,
    is_absolute : Win32cr::Foundation::BOOLEAN,
    report_count : UInt16,
    reserved2 : UInt16,
    reserved : UInt32[9],
    anonymous : Anonymous_e__Union do

    # Nested Type Anonymous_e__Union
    @[Extern(union: true)]
    record Anonymous_e__Union,
      range : Range_e__Struct,
      not_range : NotRange_e__Struct do

      # Nested Type Range_e__Struct
      @[Extern]
      record Range_e__Struct,
        usage_min : UInt16,
        usage_max : UInt16,
        string_min : UInt16,
        string_max : UInt16,
        designator_min : UInt16,
        designator_max : UInt16,
        data_index_min : UInt16,
        data_index_max : UInt16


      # Nested Type NotRange_e__Struct
      @[Extern]
      record NotRange_e__Struct,
        usage : UInt16,
        reserved1 : UInt16,
        string_index : UInt16,
        reserved2 : UInt16,
        designator_index : UInt16,
        reserved3 : UInt16,
        data_index : UInt16,
        reserved4 : UInt16

    end

  end

  @[Extern]
  record HIDP_VALUE_CAPS,
    usage_page : UInt16,
    report_id : UInt8,
    is_alias : Win32cr::Foundation::BOOLEAN,
    bit_field : UInt16,
    link_collection : UInt16,
    link_usage : UInt16,
    link_usage_page : UInt16,
    is_range : Win32cr::Foundation::BOOLEAN,
    is_string_range : Win32cr::Foundation::BOOLEAN,
    is_designator_range : Win32cr::Foundation::BOOLEAN,
    is_absolute : Win32cr::Foundation::BOOLEAN,
    has_null : Win32cr::Foundation::BOOLEAN,
    reserved : UInt8,
    bit_size : UInt16,
    report_count : UInt16,
    reserved2 : UInt16[5],
    units_exp : UInt32,
    units : UInt32,
    logical_min : Int32,
    logical_max : Int32,
    physical_min : Int32,
    physical_max : Int32,
    anonymous : Anonymous_e__Union do

    # Nested Type Anonymous_e__Union
    @[Extern(union: true)]
    record Anonymous_e__Union,
      range : Range_e__Struct,
      not_range : NotRange_e__Struct do

      # Nested Type Range_e__Struct
      @[Extern]
      record Range_e__Struct,
        usage_min : UInt16,
        usage_max : UInt16,
        string_min : UInt16,
        string_max : UInt16,
        designator_min : UInt16,
        designator_max : UInt16,
        data_index_min : UInt16,
        data_index_max : UInt16


      # Nested Type NotRange_e__Struct
      @[Extern]
      record NotRange_e__Struct,
        usage : UInt16,
        reserved1 : UInt16,
        string_index : UInt16,
        reserved2 : UInt16,
        designator_index : UInt16,
        reserved3 : UInt16,
        data_index : UInt16,
        reserved4 : UInt16

    end

  end

  @[Extern]
  record HIDP_LINK_COLLECTION_NODE,
    link_usage : UInt16,
    link_usage_page : UInt16,
    parent : UInt16,
    number_of_children : UInt16,
    next_sibling : UInt16,
    first_child : UInt16,
    _bitfield : UInt32,
    user_context : Void*

  @[Extern]
  record HIDP_PREPARSED_DATA
  @[Extern]
  record HIDP_CAPS,
    usage : UInt16,
    usage_page : UInt16,
    input_report_byte_length : UInt16,
    output_report_byte_length : UInt16,
    feature_report_byte_length : UInt16,
    reserved : UInt16[17],
    number_link_collection_nodes : UInt16,
    number_input_button_caps : UInt16,
    number_input_value_caps : UInt16,
    number_input_data_indices : UInt16,
    number_output_button_caps : UInt16,
    number_output_value_caps : UInt16,
    number_output_data_indices : UInt16,
    number_feature_button_caps : UInt16,
    number_feature_value_caps : UInt16,
    number_feature_data_indices : UInt16

  @[Extern]
  record HIDP_DATA,
    data_index : UInt16,
    reserved : UInt16,
    anonymous : Anonymous_e__Union do

    # Nested Type Anonymous_e__Union
    @[Extern(union: true)]
    record Anonymous_e__Union,
      raw_value : UInt32,
      on : Win32cr::Foundation::BOOLEAN

  end

  @[Extern]
  record HIDP_UNKNOWN_TOKEN,
    token : UInt8,
    reserved : UInt8[3],
    bit_field : UInt32

  @[Extern]
  record HIDP_EXTENDED_ATTRIBUTES,
    num_global_unknowns : UInt8,
    reserved : UInt8[3],
    global_unknowns : Win32cr::Devices::HumanInterfaceDevice::HIDP_UNKNOWN_TOKEN*,
    data : UInt32*

  @[Extern]
  record HIDP_BUTTON_ARRAY_DATA,
    array_index : UInt16,
    on : Win32cr::Foundation::BOOLEAN

  @[Extern]
  record HIDP_KEYBOARD_MODIFIER_STATE,
    anonymous : Anonymous_e__Union do

    # Nested Type Anonymous_e__Union
    @[Extern(union: true)]
    record Anonymous_e__Union,
      anonymous : Anonymous_e__Struct,
      ul : UInt32 do

      # Nested Type Anonymous_e__Struct
      @[Extern]
      record Anonymous_e__Struct,
        _bitfield : UInt32

    end

  end

  @[Extern]
  record HIDD_CONFIGURATION,
    cookie : Void*,
    size : UInt32,
    ring_buffer_size : UInt32

  @[Extern]
  record HIDD_ATTRIBUTES,
    size : UInt32,
    vendor_id : UInt16,
    product_id : UInt16,
    version_number : UInt16

  @[Extern]
  record HID_XFER_PACKET,
    reportBuffer : UInt8*,
    reportBufferLen : UInt32,
    reportId : UInt8

  @[Extern]
  record HID_COLLECTION_INFORMATION,
    descriptor_size : UInt32,
    polled : Win32cr::Foundation::BOOLEAN,
    reserved1 : UInt8*,
    vendor_id : UInt16,
    product_id : UInt16,
    version_number : UInt16

  @[Extern]
  record HID_DRIVER_CONFIG,
    size : UInt32,
    ring_buffer_size : UInt32

  @[Extern]
  record INPUT_BUTTON_ENABLE_INFO,
    button_type : Win32cr::Devices::HumanInterfaceDevice::GPIOBUTTONS_BUTTON_TYPE,
    enabled : Win32cr::Foundation::BOOLEAN

  @[Extern]
  record IDirectInputEffectVtbl,
    query_interface : Proc(IDirectInputEffect*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInputEffect*, UInt32),
    release : Proc(IDirectInputEffect*, UInt32),
    initialize__ : Proc(IDirectInputEffect*, Win32cr::Foundation::HINSTANCE, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_effect_guid : Proc(IDirectInputEffect*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_parameters : Proc(IDirectInputEffect*, Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, UInt32, Win32cr::Foundation::HRESULT),
    set_parameters : Proc(IDirectInputEffect*, Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, UInt32, Win32cr::Foundation::HRESULT),
    start : Proc(IDirectInputEffect*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    stop : Proc(IDirectInputEffect*, Win32cr::Foundation::HRESULT),
    get_effect_status : Proc(IDirectInputEffect*, UInt32*, Win32cr::Foundation::HRESULT),
    download : Proc(IDirectInputEffect*, Win32cr::Foundation::HRESULT),
    unload : Proc(IDirectInputEffect*, Win32cr::Foundation::HRESULT),
    escape : Proc(IDirectInputEffect*, Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("e7e1f7c0-88d2-11d0-9ad0-00a0c9a06e35")]
  record IDirectInputEffect, lpVtbl : IDirectInputEffectVtbl* do
    GUID = LibC::GUID.new(0xe7e1f7c0_u32, 0x88d2_u16, 0x11d0_u16, StaticArray[0x9a_u8, 0xd0_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa0_u8, 0x6e_u8, 0x35_u8])
    def query_interface(this : IDirectInputEffect*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInputEffect*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInputEffect*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def initialize__(this : IDirectInputEffect*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32, param2 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1, param2)
    end
    def get_effect_guid(this : IDirectInputEffect*, param0 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_effect_guid.call(this, param0)
    end
    def get_parameters(this : IDirectInputEffect*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_parameters.call(this, param0, param1)
    end
    def set_parameters(this : IDirectInputEffect*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_parameters.call(this, param0, param1)
    end
    def start(this : IDirectInputEffect*, param0 : UInt32, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start.call(this, param0, param1)
    end
    def stop(this : IDirectInputEffect*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop.call(this)
    end
    def get_effect_status(this : IDirectInputEffect*, param0 : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_effect_status.call(this, param0)
    end
    def download(this : IDirectInputEffect*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.download.call(this)
    end
    def unload(this : IDirectInputEffect*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unload.call(this)
    end
    def escape(this : IDirectInputEffect*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.escape.call(this, param0)
    end

  end

  @[Extern]
  record IDirectInputDeviceWVtbl,
    query_interface : Proc(IDirectInputDeviceW*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInputDeviceW*, UInt32),
    release : Proc(IDirectInputDeviceW*, UInt32),
    get_capabilities : Proc(IDirectInputDeviceW*, Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*, Win32cr::Foundation::HRESULT),
    enum_objects : Proc(IDirectInputDeviceW*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKW, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_property : Proc(IDirectInputDeviceW*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    set_property : Proc(IDirectInputDeviceW*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    acquire : Proc(IDirectInputDeviceW*, Win32cr::Foundation::HRESULT),
    unacquire : Proc(IDirectInputDeviceW*, Win32cr::Foundation::HRESULT),
    get_device_state : Proc(IDirectInputDeviceW*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    get_device_data : Proc(IDirectInputDeviceW*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    set_data_format : Proc(IDirectInputDeviceW*, Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*, Win32cr::Foundation::HRESULT),
    set_event_notification : Proc(IDirectInputDeviceW*, Win32cr::Foundation::HANDLE, Win32cr::Foundation::HRESULT),
    set_cooperative_level : Proc(IDirectInputDeviceW*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    get_object_info : Proc(IDirectInputDeviceW*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEW*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_device_info : Proc(IDirectInputDeviceW*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEW*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInputDeviceW*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInputDeviceW*, Win32cr::Foundation::HINSTANCE, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("5944e681-c92e-11cf-bfc7-444553540000")]
  record IDirectInputDeviceW, lpVtbl : IDirectInputDeviceWVtbl* do
    GUID = LibC::GUID.new(0x5944e681_u32, 0xc92e_u16, 0x11cf_u16, StaticArray[0xbf_u8, 0xc7_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : IDirectInputDeviceW*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInputDeviceW*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInputDeviceW*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_capabilities(this : IDirectInputDeviceW*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_capabilities.call(this, param0)
    end
    def enum_objects(this : IDirectInputDeviceW*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKW, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_objects.call(this, param0, param1, param2)
    end
    def get_property(this : IDirectInputDeviceW*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property.call(this, param0, param1)
    end
    def set_property(this : IDirectInputDeviceW*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_property.call(this, param0, param1)
    end
    def acquire(this : IDirectInputDeviceW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.acquire.call(this)
    end
    def unacquire(this : IDirectInputDeviceW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unacquire.call(this)
    end
    def get_device_state(this : IDirectInputDeviceW*, param0 : UInt32, param1 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_state.call(this, param0, param1)
    end
    def get_device_data(this : IDirectInputDeviceW*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, param2 : UInt32*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_data.call(this, param0, param1, param2, param3)
    end
    def set_data_format(this : IDirectInputDeviceW*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_data_format.call(this, param0)
    end
    def set_event_notification(this : IDirectInputDeviceW*, param0 : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_event_notification.call(this, param0)
    end
    def set_cooperative_level(this : IDirectInputDeviceW*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cooperative_level.call(this, param0, param1)
    end
    def get_object_info(this : IDirectInputDeviceW*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEW*, param1 : UInt32, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object_info.call(this, param0, param1, param2)
    end
    def get_device_info(this : IDirectInputDeviceW*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_info.call(this, param0)
    end
    def run_control_panel(this : IDirectInputDeviceW*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInputDeviceW*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32, param2 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1, param2)
    end

  end

  @[Extern]
  record IDirectInputDeviceAVtbl,
    query_interface : Proc(IDirectInputDeviceA*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInputDeviceA*, UInt32),
    release : Proc(IDirectInputDeviceA*, UInt32),
    get_capabilities : Proc(IDirectInputDeviceA*, Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*, Win32cr::Foundation::HRESULT),
    enum_objects : Proc(IDirectInputDeviceA*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKA, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_property : Proc(IDirectInputDeviceA*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    set_property : Proc(IDirectInputDeviceA*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    acquire : Proc(IDirectInputDeviceA*, Win32cr::Foundation::HRESULT),
    unacquire : Proc(IDirectInputDeviceA*, Win32cr::Foundation::HRESULT),
    get_device_state : Proc(IDirectInputDeviceA*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    get_device_data : Proc(IDirectInputDeviceA*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    set_data_format : Proc(IDirectInputDeviceA*, Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*, Win32cr::Foundation::HRESULT),
    set_event_notification : Proc(IDirectInputDeviceA*, Win32cr::Foundation::HANDLE, Win32cr::Foundation::HRESULT),
    set_cooperative_level : Proc(IDirectInputDeviceA*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    get_object_info : Proc(IDirectInputDeviceA*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEA*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_device_info : Proc(IDirectInputDeviceA*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEA*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInputDeviceA*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInputDeviceA*, Win32cr::Foundation::HINSTANCE, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("5944e680-c92e-11cf-bfc7-444553540000")]
  record IDirectInputDeviceA, lpVtbl : IDirectInputDeviceAVtbl* do
    GUID = LibC::GUID.new(0x5944e680_u32, 0xc92e_u16, 0x11cf_u16, StaticArray[0xbf_u8, 0xc7_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : IDirectInputDeviceA*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInputDeviceA*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInputDeviceA*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_capabilities(this : IDirectInputDeviceA*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_capabilities.call(this, param0)
    end
    def enum_objects(this : IDirectInputDeviceA*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKA, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_objects.call(this, param0, param1, param2)
    end
    def get_property(this : IDirectInputDeviceA*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property.call(this, param0, param1)
    end
    def set_property(this : IDirectInputDeviceA*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_property.call(this, param0, param1)
    end
    def acquire(this : IDirectInputDeviceA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.acquire.call(this)
    end
    def unacquire(this : IDirectInputDeviceA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unacquire.call(this)
    end
    def get_device_state(this : IDirectInputDeviceA*, param0 : UInt32, param1 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_state.call(this, param0, param1)
    end
    def get_device_data(this : IDirectInputDeviceA*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, param2 : UInt32*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_data.call(this, param0, param1, param2, param3)
    end
    def set_data_format(this : IDirectInputDeviceA*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_data_format.call(this, param0)
    end
    def set_event_notification(this : IDirectInputDeviceA*, param0 : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_event_notification.call(this, param0)
    end
    def set_cooperative_level(this : IDirectInputDeviceA*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cooperative_level.call(this, param0, param1)
    end
    def get_object_info(this : IDirectInputDeviceA*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEA*, param1 : UInt32, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object_info.call(this, param0, param1, param2)
    end
    def get_device_info(this : IDirectInputDeviceA*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_info.call(this, param0)
    end
    def run_control_panel(this : IDirectInputDeviceA*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInputDeviceA*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32, param2 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1, param2)
    end

  end

  @[Extern]
  record IDirectInputDevice2WVtbl,
    query_interface : Proc(IDirectInputDevice2W*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInputDevice2W*, UInt32),
    release : Proc(IDirectInputDevice2W*, UInt32),
    get_capabilities : Proc(IDirectInputDevice2W*, Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*, Win32cr::Foundation::HRESULT),
    enum_objects : Proc(IDirectInputDevice2W*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKW, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_property : Proc(IDirectInputDevice2W*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    set_property : Proc(IDirectInputDevice2W*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    acquire : Proc(IDirectInputDevice2W*, Win32cr::Foundation::HRESULT),
    unacquire : Proc(IDirectInputDevice2W*, Win32cr::Foundation::HRESULT),
    get_device_state : Proc(IDirectInputDevice2W*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    get_device_data : Proc(IDirectInputDevice2W*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    set_data_format : Proc(IDirectInputDevice2W*, Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*, Win32cr::Foundation::HRESULT),
    set_event_notification : Proc(IDirectInputDevice2W*, Win32cr::Foundation::HANDLE, Win32cr::Foundation::HRESULT),
    set_cooperative_level : Proc(IDirectInputDevice2W*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    get_object_info : Proc(IDirectInputDevice2W*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEW*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_device_info : Proc(IDirectInputDevice2W*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEW*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInputDevice2W*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInputDevice2W*, Win32cr::Foundation::HINSTANCE, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT),
    create_effect : Proc(IDirectInputDevice2W*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, Void**, Void*, Win32cr::Foundation::HRESULT),
    enum_effects : Proc(IDirectInputDevice2W*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSCALLBACKW, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_effect_info : Proc(IDirectInputDevice2W*, Win32cr::Devices::HumanInterfaceDevice::DIEFFECTINFOW*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_force_feedback_state : Proc(IDirectInputDevice2W*, UInt32*, Win32cr::Foundation::HRESULT),
    send_force_feedback_command : Proc(IDirectInputDevice2W*, UInt32, Win32cr::Foundation::HRESULT),
    enum_created_effect_objects : Proc(IDirectInputDevice2W*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, Void*, UInt32, Win32cr::Foundation::HRESULT),
    escape : Proc(IDirectInputDevice2W*, Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*, Win32cr::Foundation::HRESULT),
    poll : Proc(IDirectInputDevice2W*, Win32cr::Foundation::HRESULT),
    send_device_data : Proc(IDirectInputDevice2W*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, UInt32*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("5944e683-c92e-11cf-bfc7-444553540000")]
  record IDirectInputDevice2W, lpVtbl : IDirectInputDevice2WVtbl* do
    GUID = LibC::GUID.new(0x5944e683_u32, 0xc92e_u16, 0x11cf_u16, StaticArray[0xbf_u8, 0xc7_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : IDirectInputDevice2W*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInputDevice2W*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInputDevice2W*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_capabilities(this : IDirectInputDevice2W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_capabilities.call(this, param0)
    end
    def enum_objects(this : IDirectInputDevice2W*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKW, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_objects.call(this, param0, param1, param2)
    end
    def get_property(this : IDirectInputDevice2W*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property.call(this, param0, param1)
    end
    def set_property(this : IDirectInputDevice2W*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_property.call(this, param0, param1)
    end
    def acquire(this : IDirectInputDevice2W*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.acquire.call(this)
    end
    def unacquire(this : IDirectInputDevice2W*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unacquire.call(this)
    end
    def get_device_state(this : IDirectInputDevice2W*, param0 : UInt32, param1 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_state.call(this, param0, param1)
    end
    def get_device_data(this : IDirectInputDevice2W*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, param2 : UInt32*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_data.call(this, param0, param1, param2, param3)
    end
    def set_data_format(this : IDirectInputDevice2W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_data_format.call(this, param0)
    end
    def set_event_notification(this : IDirectInputDevice2W*, param0 : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_event_notification.call(this, param0)
    end
    def set_cooperative_level(this : IDirectInputDevice2W*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cooperative_level.call(this, param0, param1)
    end
    def get_object_info(this : IDirectInputDevice2W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEW*, param1 : UInt32, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object_info.call(this, param0, param1, param2)
    end
    def get_device_info(this : IDirectInputDevice2W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_info.call(this, param0)
    end
    def run_control_panel(this : IDirectInputDevice2W*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInputDevice2W*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32, param2 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1, param2)
    end
    def create_effect(this : IDirectInputDevice2W*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, param2 : Void**, param3 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_effect.call(this, param0, param1, param2, param3)
    end
    def enum_effects(this : IDirectInputDevice2W*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSCALLBACKW, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_effects.call(this, param0, param1, param2)
    end
    def get_effect_info(this : IDirectInputDevice2W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIEFFECTINFOW*, param1 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_effect_info.call(this, param0, param1)
    end
    def get_force_feedback_state(this : IDirectInputDevice2W*, param0 : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_force_feedback_state.call(this, param0)
    end
    def send_force_feedback_command(this : IDirectInputDevice2W*, param0 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_force_feedback_command.call(this, param0)
    end
    def enum_created_effect_objects(this : IDirectInputDevice2W*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_created_effect_objects.call(this, param0, param1, param2)
    end
    def escape(this : IDirectInputDevice2W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.escape.call(this, param0)
    end
    def poll(this : IDirectInputDevice2W*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.poll.call(this)
    end
    def send_device_data(this : IDirectInputDevice2W*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, param2 : UInt32*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_device_data.call(this, param0, param1, param2, param3)
    end

  end

  @[Extern]
  record IDirectInputDevice2AVtbl,
    query_interface : Proc(IDirectInputDevice2A*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInputDevice2A*, UInt32),
    release : Proc(IDirectInputDevice2A*, UInt32),
    get_capabilities : Proc(IDirectInputDevice2A*, Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*, Win32cr::Foundation::HRESULT),
    enum_objects : Proc(IDirectInputDevice2A*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKA, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_property : Proc(IDirectInputDevice2A*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    set_property : Proc(IDirectInputDevice2A*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    acquire : Proc(IDirectInputDevice2A*, Win32cr::Foundation::HRESULT),
    unacquire : Proc(IDirectInputDevice2A*, Win32cr::Foundation::HRESULT),
    get_device_state : Proc(IDirectInputDevice2A*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    get_device_data : Proc(IDirectInputDevice2A*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    set_data_format : Proc(IDirectInputDevice2A*, Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*, Win32cr::Foundation::HRESULT),
    set_event_notification : Proc(IDirectInputDevice2A*, Win32cr::Foundation::HANDLE, Win32cr::Foundation::HRESULT),
    set_cooperative_level : Proc(IDirectInputDevice2A*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    get_object_info : Proc(IDirectInputDevice2A*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEA*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_device_info : Proc(IDirectInputDevice2A*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEA*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInputDevice2A*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInputDevice2A*, Win32cr::Foundation::HINSTANCE, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT),
    create_effect : Proc(IDirectInputDevice2A*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, Void**, Void*, Win32cr::Foundation::HRESULT),
    enum_effects : Proc(IDirectInputDevice2A*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSCALLBACKA, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_effect_info : Proc(IDirectInputDevice2A*, Win32cr::Devices::HumanInterfaceDevice::DIEFFECTINFOA*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_force_feedback_state : Proc(IDirectInputDevice2A*, UInt32*, Win32cr::Foundation::HRESULT),
    send_force_feedback_command : Proc(IDirectInputDevice2A*, UInt32, Win32cr::Foundation::HRESULT),
    enum_created_effect_objects : Proc(IDirectInputDevice2A*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, Void*, UInt32, Win32cr::Foundation::HRESULT),
    escape : Proc(IDirectInputDevice2A*, Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*, Win32cr::Foundation::HRESULT),
    poll : Proc(IDirectInputDevice2A*, Win32cr::Foundation::HRESULT),
    send_device_data : Proc(IDirectInputDevice2A*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, UInt32*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("5944e682-c92e-11cf-bfc7-444553540000")]
  record IDirectInputDevice2A, lpVtbl : IDirectInputDevice2AVtbl* do
    GUID = LibC::GUID.new(0x5944e682_u32, 0xc92e_u16, 0x11cf_u16, StaticArray[0xbf_u8, 0xc7_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : IDirectInputDevice2A*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInputDevice2A*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInputDevice2A*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_capabilities(this : IDirectInputDevice2A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_capabilities.call(this, param0)
    end
    def enum_objects(this : IDirectInputDevice2A*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKA, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_objects.call(this, param0, param1, param2)
    end
    def get_property(this : IDirectInputDevice2A*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property.call(this, param0, param1)
    end
    def set_property(this : IDirectInputDevice2A*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_property.call(this, param0, param1)
    end
    def acquire(this : IDirectInputDevice2A*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.acquire.call(this)
    end
    def unacquire(this : IDirectInputDevice2A*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unacquire.call(this)
    end
    def get_device_state(this : IDirectInputDevice2A*, param0 : UInt32, param1 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_state.call(this, param0, param1)
    end
    def get_device_data(this : IDirectInputDevice2A*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, param2 : UInt32*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_data.call(this, param0, param1, param2, param3)
    end
    def set_data_format(this : IDirectInputDevice2A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_data_format.call(this, param0)
    end
    def set_event_notification(this : IDirectInputDevice2A*, param0 : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_event_notification.call(this, param0)
    end
    def set_cooperative_level(this : IDirectInputDevice2A*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cooperative_level.call(this, param0, param1)
    end
    def get_object_info(this : IDirectInputDevice2A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEA*, param1 : UInt32, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object_info.call(this, param0, param1, param2)
    end
    def get_device_info(this : IDirectInputDevice2A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_info.call(this, param0)
    end
    def run_control_panel(this : IDirectInputDevice2A*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInputDevice2A*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32, param2 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1, param2)
    end
    def create_effect(this : IDirectInputDevice2A*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, param2 : Void**, param3 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_effect.call(this, param0, param1, param2, param3)
    end
    def enum_effects(this : IDirectInputDevice2A*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSCALLBACKA, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_effects.call(this, param0, param1, param2)
    end
    def get_effect_info(this : IDirectInputDevice2A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIEFFECTINFOA*, param1 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_effect_info.call(this, param0, param1)
    end
    def get_force_feedback_state(this : IDirectInputDevice2A*, param0 : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_force_feedback_state.call(this, param0)
    end
    def send_force_feedback_command(this : IDirectInputDevice2A*, param0 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_force_feedback_command.call(this, param0)
    end
    def enum_created_effect_objects(this : IDirectInputDevice2A*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_created_effect_objects.call(this, param0, param1, param2)
    end
    def escape(this : IDirectInputDevice2A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.escape.call(this, param0)
    end
    def poll(this : IDirectInputDevice2A*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.poll.call(this)
    end
    def send_device_data(this : IDirectInputDevice2A*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, param2 : UInt32*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_device_data.call(this, param0, param1, param2, param3)
    end

  end

  @[Extern]
  record IDirectInputDevice7WVtbl,
    query_interface : Proc(IDirectInputDevice7W*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInputDevice7W*, UInt32),
    release : Proc(IDirectInputDevice7W*, UInt32),
    get_capabilities : Proc(IDirectInputDevice7W*, Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*, Win32cr::Foundation::HRESULT),
    enum_objects : Proc(IDirectInputDevice7W*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKW, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_property : Proc(IDirectInputDevice7W*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    set_property : Proc(IDirectInputDevice7W*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    acquire : Proc(IDirectInputDevice7W*, Win32cr::Foundation::HRESULT),
    unacquire : Proc(IDirectInputDevice7W*, Win32cr::Foundation::HRESULT),
    get_device_state : Proc(IDirectInputDevice7W*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    get_device_data : Proc(IDirectInputDevice7W*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    set_data_format : Proc(IDirectInputDevice7W*, Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*, Win32cr::Foundation::HRESULT),
    set_event_notification : Proc(IDirectInputDevice7W*, Win32cr::Foundation::HANDLE, Win32cr::Foundation::HRESULT),
    set_cooperative_level : Proc(IDirectInputDevice7W*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    get_object_info : Proc(IDirectInputDevice7W*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEW*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_device_info : Proc(IDirectInputDevice7W*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEW*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInputDevice7W*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInputDevice7W*, Win32cr::Foundation::HINSTANCE, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT),
    create_effect : Proc(IDirectInputDevice7W*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, Void**, Void*, Win32cr::Foundation::HRESULT),
    enum_effects : Proc(IDirectInputDevice7W*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSCALLBACKW, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_effect_info : Proc(IDirectInputDevice7W*, Win32cr::Devices::HumanInterfaceDevice::DIEFFECTINFOW*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_force_feedback_state : Proc(IDirectInputDevice7W*, UInt32*, Win32cr::Foundation::HRESULT),
    send_force_feedback_command : Proc(IDirectInputDevice7W*, UInt32, Win32cr::Foundation::HRESULT),
    enum_created_effect_objects : Proc(IDirectInputDevice7W*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, Void*, UInt32, Win32cr::Foundation::HRESULT),
    escape : Proc(IDirectInputDevice7W*, Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*, Win32cr::Foundation::HRESULT),
    poll : Proc(IDirectInputDevice7W*, Win32cr::Foundation::HRESULT),
    send_device_data : Proc(IDirectInputDevice7W*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    enum_effects_in_file : Proc(IDirectInputDevice7W*, Win32cr::Foundation::PWSTR, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSINFILECALLBACK, Void*, UInt32, Win32cr::Foundation::HRESULT),
    write_effect_to_file : Proc(IDirectInputDevice7W*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIFILEEFFECT*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("57d7c6bd-2356-11d3-8e9d-00c04f6844ae")]
  record IDirectInputDevice7W, lpVtbl : IDirectInputDevice7WVtbl* do
    GUID = LibC::GUID.new(0x57d7c6bd_u32, 0x2356_u16, 0x11d3_u16, StaticArray[0x8e_u8, 0x9d_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x68_u8, 0x44_u8, 0xae_u8])
    def query_interface(this : IDirectInputDevice7W*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInputDevice7W*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInputDevice7W*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_capabilities(this : IDirectInputDevice7W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_capabilities.call(this, param0)
    end
    def enum_objects(this : IDirectInputDevice7W*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKW, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_objects.call(this, param0, param1, param2)
    end
    def get_property(this : IDirectInputDevice7W*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property.call(this, param0, param1)
    end
    def set_property(this : IDirectInputDevice7W*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_property.call(this, param0, param1)
    end
    def acquire(this : IDirectInputDevice7W*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.acquire.call(this)
    end
    def unacquire(this : IDirectInputDevice7W*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unacquire.call(this)
    end
    def get_device_state(this : IDirectInputDevice7W*, param0 : UInt32, param1 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_state.call(this, param0, param1)
    end
    def get_device_data(this : IDirectInputDevice7W*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, param2 : UInt32*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_data.call(this, param0, param1, param2, param3)
    end
    def set_data_format(this : IDirectInputDevice7W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_data_format.call(this, param0)
    end
    def set_event_notification(this : IDirectInputDevice7W*, param0 : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_event_notification.call(this, param0)
    end
    def set_cooperative_level(this : IDirectInputDevice7W*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cooperative_level.call(this, param0, param1)
    end
    def get_object_info(this : IDirectInputDevice7W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEW*, param1 : UInt32, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object_info.call(this, param0, param1, param2)
    end
    def get_device_info(this : IDirectInputDevice7W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_info.call(this, param0)
    end
    def run_control_panel(this : IDirectInputDevice7W*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInputDevice7W*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32, param2 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1, param2)
    end
    def create_effect(this : IDirectInputDevice7W*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, param2 : Void**, param3 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_effect.call(this, param0, param1, param2, param3)
    end
    def enum_effects(this : IDirectInputDevice7W*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSCALLBACKW, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_effects.call(this, param0, param1, param2)
    end
    def get_effect_info(this : IDirectInputDevice7W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIEFFECTINFOW*, param1 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_effect_info.call(this, param0, param1)
    end
    def get_force_feedback_state(this : IDirectInputDevice7W*, param0 : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_force_feedback_state.call(this, param0)
    end
    def send_force_feedback_command(this : IDirectInputDevice7W*, param0 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_force_feedback_command.call(this, param0)
    end
    def enum_created_effect_objects(this : IDirectInputDevice7W*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_created_effect_objects.call(this, param0, param1, param2)
    end
    def escape(this : IDirectInputDevice7W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.escape.call(this, param0)
    end
    def poll(this : IDirectInputDevice7W*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.poll.call(this)
    end
    def send_device_data(this : IDirectInputDevice7W*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, param2 : UInt32*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_device_data.call(this, param0, param1, param2, param3)
    end
    def enum_effects_in_file(this : IDirectInputDevice7W*, param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSINFILECALLBACK, param2 : Void*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_effects_in_file.call(this, param0, param1, param2, param3)
    end
    def write_effect_to_file(this : IDirectInputDevice7W*, param0 : Win32cr::Foundation::PWSTR, param1 : UInt32, param2 : Win32cr::Devices::HumanInterfaceDevice::DIFILEEFFECT*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_effect_to_file.call(this, param0, param1, param2, param3)
    end

  end

  @[Extern]
  record IDirectInputDevice7AVtbl,
    query_interface : Proc(IDirectInputDevice7A*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInputDevice7A*, UInt32),
    release : Proc(IDirectInputDevice7A*, UInt32),
    get_capabilities : Proc(IDirectInputDevice7A*, Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*, Win32cr::Foundation::HRESULT),
    enum_objects : Proc(IDirectInputDevice7A*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKA, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_property : Proc(IDirectInputDevice7A*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    set_property : Proc(IDirectInputDevice7A*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    acquire : Proc(IDirectInputDevice7A*, Win32cr::Foundation::HRESULT),
    unacquire : Proc(IDirectInputDevice7A*, Win32cr::Foundation::HRESULT),
    get_device_state : Proc(IDirectInputDevice7A*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    get_device_data : Proc(IDirectInputDevice7A*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    set_data_format : Proc(IDirectInputDevice7A*, Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*, Win32cr::Foundation::HRESULT),
    set_event_notification : Proc(IDirectInputDevice7A*, Win32cr::Foundation::HANDLE, Win32cr::Foundation::HRESULT),
    set_cooperative_level : Proc(IDirectInputDevice7A*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    get_object_info : Proc(IDirectInputDevice7A*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEA*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_device_info : Proc(IDirectInputDevice7A*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEA*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInputDevice7A*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInputDevice7A*, Win32cr::Foundation::HINSTANCE, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT),
    create_effect : Proc(IDirectInputDevice7A*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, Void**, Void*, Win32cr::Foundation::HRESULT),
    enum_effects : Proc(IDirectInputDevice7A*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSCALLBACKA, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_effect_info : Proc(IDirectInputDevice7A*, Win32cr::Devices::HumanInterfaceDevice::DIEFFECTINFOA*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_force_feedback_state : Proc(IDirectInputDevice7A*, UInt32*, Win32cr::Foundation::HRESULT),
    send_force_feedback_command : Proc(IDirectInputDevice7A*, UInt32, Win32cr::Foundation::HRESULT),
    enum_created_effect_objects : Proc(IDirectInputDevice7A*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, Void*, UInt32, Win32cr::Foundation::HRESULT),
    escape : Proc(IDirectInputDevice7A*, Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*, Win32cr::Foundation::HRESULT),
    poll : Proc(IDirectInputDevice7A*, Win32cr::Foundation::HRESULT),
    send_device_data : Proc(IDirectInputDevice7A*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    enum_effects_in_file : Proc(IDirectInputDevice7A*, Win32cr::Foundation::PSTR, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSINFILECALLBACK, Void*, UInt32, Win32cr::Foundation::HRESULT),
    write_effect_to_file : Proc(IDirectInputDevice7A*, Win32cr::Foundation::PSTR, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIFILEEFFECT*, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("57d7c6bc-2356-11d3-8e9d-00c04f6844ae")]
  record IDirectInputDevice7A, lpVtbl : IDirectInputDevice7AVtbl* do
    GUID = LibC::GUID.new(0x57d7c6bc_u32, 0x2356_u16, 0x11d3_u16, StaticArray[0x8e_u8, 0x9d_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x68_u8, 0x44_u8, 0xae_u8])
    def query_interface(this : IDirectInputDevice7A*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInputDevice7A*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInputDevice7A*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_capabilities(this : IDirectInputDevice7A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_capabilities.call(this, param0)
    end
    def enum_objects(this : IDirectInputDevice7A*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKA, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_objects.call(this, param0, param1, param2)
    end
    def get_property(this : IDirectInputDevice7A*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property.call(this, param0, param1)
    end
    def set_property(this : IDirectInputDevice7A*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_property.call(this, param0, param1)
    end
    def acquire(this : IDirectInputDevice7A*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.acquire.call(this)
    end
    def unacquire(this : IDirectInputDevice7A*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unacquire.call(this)
    end
    def get_device_state(this : IDirectInputDevice7A*, param0 : UInt32, param1 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_state.call(this, param0, param1)
    end
    def get_device_data(this : IDirectInputDevice7A*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, param2 : UInt32*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_data.call(this, param0, param1, param2, param3)
    end
    def set_data_format(this : IDirectInputDevice7A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_data_format.call(this, param0)
    end
    def set_event_notification(this : IDirectInputDevice7A*, param0 : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_event_notification.call(this, param0)
    end
    def set_cooperative_level(this : IDirectInputDevice7A*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cooperative_level.call(this, param0, param1)
    end
    def get_object_info(this : IDirectInputDevice7A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEA*, param1 : UInt32, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object_info.call(this, param0, param1, param2)
    end
    def get_device_info(this : IDirectInputDevice7A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_info.call(this, param0)
    end
    def run_control_panel(this : IDirectInputDevice7A*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInputDevice7A*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32, param2 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1, param2)
    end
    def create_effect(this : IDirectInputDevice7A*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, param2 : Void**, param3 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_effect.call(this, param0, param1, param2, param3)
    end
    def enum_effects(this : IDirectInputDevice7A*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSCALLBACKA, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_effects.call(this, param0, param1, param2)
    end
    def get_effect_info(this : IDirectInputDevice7A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIEFFECTINFOA*, param1 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_effect_info.call(this, param0, param1)
    end
    def get_force_feedback_state(this : IDirectInputDevice7A*, param0 : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_force_feedback_state.call(this, param0)
    end
    def send_force_feedback_command(this : IDirectInputDevice7A*, param0 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_force_feedback_command.call(this, param0)
    end
    def enum_created_effect_objects(this : IDirectInputDevice7A*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_created_effect_objects.call(this, param0, param1, param2)
    end
    def escape(this : IDirectInputDevice7A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.escape.call(this, param0)
    end
    def poll(this : IDirectInputDevice7A*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.poll.call(this)
    end
    def send_device_data(this : IDirectInputDevice7A*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, param2 : UInt32*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_device_data.call(this, param0, param1, param2, param3)
    end
    def enum_effects_in_file(this : IDirectInputDevice7A*, param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSINFILECALLBACK, param2 : Void*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_effects_in_file.call(this, param0, param1, param2, param3)
    end
    def write_effect_to_file(this : IDirectInputDevice7A*, param0 : Win32cr::Foundation::PSTR, param1 : UInt32, param2 : Win32cr::Devices::HumanInterfaceDevice::DIFILEEFFECT*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_effect_to_file.call(this, param0, param1, param2, param3)
    end

  end

  @[Extern]
  record IDirectInputDevice8WVtbl,
    query_interface : Proc(IDirectInputDevice8W*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInputDevice8W*, UInt32),
    release : Proc(IDirectInputDevice8W*, UInt32),
    get_capabilities : Proc(IDirectInputDevice8W*, Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*, Win32cr::Foundation::HRESULT),
    enum_objects : Proc(IDirectInputDevice8W*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKW, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_property : Proc(IDirectInputDevice8W*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    set_property : Proc(IDirectInputDevice8W*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    acquire : Proc(IDirectInputDevice8W*, Win32cr::Foundation::HRESULT),
    unacquire : Proc(IDirectInputDevice8W*, Win32cr::Foundation::HRESULT),
    get_device_state : Proc(IDirectInputDevice8W*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    get_device_data : Proc(IDirectInputDevice8W*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    set_data_format : Proc(IDirectInputDevice8W*, Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*, Win32cr::Foundation::HRESULT),
    set_event_notification : Proc(IDirectInputDevice8W*, Win32cr::Foundation::HANDLE, Win32cr::Foundation::HRESULT),
    set_cooperative_level : Proc(IDirectInputDevice8W*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    get_object_info : Proc(IDirectInputDevice8W*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEW*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_device_info : Proc(IDirectInputDevice8W*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEW*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInputDevice8W*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInputDevice8W*, Win32cr::Foundation::HINSTANCE, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT),
    create_effect : Proc(IDirectInputDevice8W*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, Void**, Void*, Win32cr::Foundation::HRESULT),
    enum_effects : Proc(IDirectInputDevice8W*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSCALLBACKW, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_effect_info : Proc(IDirectInputDevice8W*, Win32cr::Devices::HumanInterfaceDevice::DIEFFECTINFOW*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_force_feedback_state : Proc(IDirectInputDevice8W*, UInt32*, Win32cr::Foundation::HRESULT),
    send_force_feedback_command : Proc(IDirectInputDevice8W*, UInt32, Win32cr::Foundation::HRESULT),
    enum_created_effect_objects : Proc(IDirectInputDevice8W*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, Void*, UInt32, Win32cr::Foundation::HRESULT),
    escape : Proc(IDirectInputDevice8W*, Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*, Win32cr::Foundation::HRESULT),
    poll : Proc(IDirectInputDevice8W*, Win32cr::Foundation::HRESULT),
    send_device_data : Proc(IDirectInputDevice8W*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    enum_effects_in_file : Proc(IDirectInputDevice8W*, Win32cr::Foundation::PWSTR, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSINFILECALLBACK, Void*, UInt32, Win32cr::Foundation::HRESULT),
    write_effect_to_file : Proc(IDirectInputDevice8W*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIFILEEFFECT*, UInt32, Win32cr::Foundation::HRESULT),
    build_action_map : Proc(IDirectInputDevice8W*, Win32cr::Devices::HumanInterfaceDevice::DIACTIONFORMATW*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    set_action_map : Proc(IDirectInputDevice8W*, Win32cr::Devices::HumanInterfaceDevice::DIACTIONFORMATW*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_image_info : Proc(IDirectInputDevice8W*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEIMAGEINFOHEADERW*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("54d41081-dc15-4833-a41b-748f73a38179")]
  record IDirectInputDevice8W, lpVtbl : IDirectInputDevice8WVtbl* do
    GUID = LibC::GUID.new(0x54d41081_u32, 0xdc15_u16, 0x4833_u16, StaticArray[0xa4_u8, 0x1b_u8, 0x74_u8, 0x8f_u8, 0x73_u8, 0xa3_u8, 0x81_u8, 0x79_u8])
    def query_interface(this : IDirectInputDevice8W*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInputDevice8W*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInputDevice8W*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_capabilities(this : IDirectInputDevice8W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_capabilities.call(this, param0)
    end
    def enum_objects(this : IDirectInputDevice8W*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKW, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_objects.call(this, param0, param1, param2)
    end
    def get_property(this : IDirectInputDevice8W*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property.call(this, param0, param1)
    end
    def set_property(this : IDirectInputDevice8W*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_property.call(this, param0, param1)
    end
    def acquire(this : IDirectInputDevice8W*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.acquire.call(this)
    end
    def unacquire(this : IDirectInputDevice8W*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unacquire.call(this)
    end
    def get_device_state(this : IDirectInputDevice8W*, param0 : UInt32, param1 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_state.call(this, param0, param1)
    end
    def get_device_data(this : IDirectInputDevice8W*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, param2 : UInt32*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_data.call(this, param0, param1, param2, param3)
    end
    def set_data_format(this : IDirectInputDevice8W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_data_format.call(this, param0)
    end
    def set_event_notification(this : IDirectInputDevice8W*, param0 : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_event_notification.call(this, param0)
    end
    def set_cooperative_level(this : IDirectInputDevice8W*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cooperative_level.call(this, param0, param1)
    end
    def get_object_info(this : IDirectInputDevice8W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEW*, param1 : UInt32, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object_info.call(this, param0, param1, param2)
    end
    def get_device_info(this : IDirectInputDevice8W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_info.call(this, param0)
    end
    def run_control_panel(this : IDirectInputDevice8W*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInputDevice8W*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32, param2 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1, param2)
    end
    def create_effect(this : IDirectInputDevice8W*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, param2 : Void**, param3 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_effect.call(this, param0, param1, param2, param3)
    end
    def enum_effects(this : IDirectInputDevice8W*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSCALLBACKW, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_effects.call(this, param0, param1, param2)
    end
    def get_effect_info(this : IDirectInputDevice8W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIEFFECTINFOW*, param1 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_effect_info.call(this, param0, param1)
    end
    def get_force_feedback_state(this : IDirectInputDevice8W*, param0 : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_force_feedback_state.call(this, param0)
    end
    def send_force_feedback_command(this : IDirectInputDevice8W*, param0 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_force_feedback_command.call(this, param0)
    end
    def enum_created_effect_objects(this : IDirectInputDevice8W*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_created_effect_objects.call(this, param0, param1, param2)
    end
    def escape(this : IDirectInputDevice8W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.escape.call(this, param0)
    end
    def poll(this : IDirectInputDevice8W*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.poll.call(this)
    end
    def send_device_data(this : IDirectInputDevice8W*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, param2 : UInt32*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_device_data.call(this, param0, param1, param2, param3)
    end
    def enum_effects_in_file(this : IDirectInputDevice8W*, param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSINFILECALLBACK, param2 : Void*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_effects_in_file.call(this, param0, param1, param2, param3)
    end
    def write_effect_to_file(this : IDirectInputDevice8W*, param0 : Win32cr::Foundation::PWSTR, param1 : UInt32, param2 : Win32cr::Devices::HumanInterfaceDevice::DIFILEEFFECT*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_effect_to_file.call(this, param0, param1, param2, param3)
    end
    def build_action_map(this : IDirectInputDevice8W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIACTIONFORMATW*, param1 : Win32cr::Foundation::PWSTR, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.build_action_map.call(this, param0, param1, param2)
    end
    def set_action_map(this : IDirectInputDevice8W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIACTIONFORMATW*, param1 : Win32cr::Foundation::PWSTR, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_action_map.call(this, param0, param1, param2)
    end
    def get_image_info(this : IDirectInputDevice8W*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEIMAGEINFOHEADERW*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_image_info.call(this, param0)
    end

  end

  @[Extern]
  record IDirectInputDevice8AVtbl,
    query_interface : Proc(IDirectInputDevice8A*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInputDevice8A*, UInt32),
    release : Proc(IDirectInputDevice8A*, UInt32),
    get_capabilities : Proc(IDirectInputDevice8A*, Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*, Win32cr::Foundation::HRESULT),
    enum_objects : Proc(IDirectInputDevice8A*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKA, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_property : Proc(IDirectInputDevice8A*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    set_property : Proc(IDirectInputDevice8A*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*, Win32cr::Foundation::HRESULT),
    acquire : Proc(IDirectInputDevice8A*, Win32cr::Foundation::HRESULT),
    unacquire : Proc(IDirectInputDevice8A*, Win32cr::Foundation::HRESULT),
    get_device_state : Proc(IDirectInputDevice8A*, UInt32, Void*, Win32cr::Foundation::HRESULT),
    get_device_data : Proc(IDirectInputDevice8A*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    set_data_format : Proc(IDirectInputDevice8A*, Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*, Win32cr::Foundation::HRESULT),
    set_event_notification : Proc(IDirectInputDevice8A*, Win32cr::Foundation::HANDLE, Win32cr::Foundation::HRESULT),
    set_cooperative_level : Proc(IDirectInputDevice8A*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    get_object_info : Proc(IDirectInputDevice8A*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEA*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_device_info : Proc(IDirectInputDevice8A*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEA*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInputDevice8A*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInputDevice8A*, Win32cr::Foundation::HINSTANCE, UInt32, LibC::GUID*, Win32cr::Foundation::HRESULT),
    create_effect : Proc(IDirectInputDevice8A*, LibC::GUID*, Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, Void**, Void*, Win32cr::Foundation::HRESULT),
    enum_effects : Proc(IDirectInputDevice8A*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSCALLBACKA, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_effect_info : Proc(IDirectInputDevice8A*, Win32cr::Devices::HumanInterfaceDevice::DIEFFECTINFOA*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    get_force_feedback_state : Proc(IDirectInputDevice8A*, UInt32*, Win32cr::Foundation::HRESULT),
    send_force_feedback_command : Proc(IDirectInputDevice8A*, UInt32, Win32cr::Foundation::HRESULT),
    enum_created_effect_objects : Proc(IDirectInputDevice8A*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, Void*, UInt32, Win32cr::Foundation::HRESULT),
    escape : Proc(IDirectInputDevice8A*, Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*, Win32cr::Foundation::HRESULT),
    poll : Proc(IDirectInputDevice8A*, Win32cr::Foundation::HRESULT),
    send_device_data : Proc(IDirectInputDevice8A*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, UInt32*, UInt32, Win32cr::Foundation::HRESULT),
    enum_effects_in_file : Proc(IDirectInputDevice8A*, Win32cr::Foundation::PSTR, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSINFILECALLBACK, Void*, UInt32, Win32cr::Foundation::HRESULT),
    write_effect_to_file : Proc(IDirectInputDevice8A*, Win32cr::Foundation::PSTR, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIFILEEFFECT*, UInt32, Win32cr::Foundation::HRESULT),
    build_action_map : Proc(IDirectInputDevice8A*, Win32cr::Devices::HumanInterfaceDevice::DIACTIONFORMATA*, Win32cr::Foundation::PSTR, UInt32, Win32cr::Foundation::HRESULT),
    set_action_map : Proc(IDirectInputDevice8A*, Win32cr::Devices::HumanInterfaceDevice::DIACTIONFORMATA*, Win32cr::Foundation::PSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_image_info : Proc(IDirectInputDevice8A*, Win32cr::Devices::HumanInterfaceDevice::DIDEVICEIMAGEINFOHEADERA*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("54d41080-dc15-4833-a41b-748f73a38179")]
  record IDirectInputDevice8A, lpVtbl : IDirectInputDevice8AVtbl* do
    GUID = LibC::GUID.new(0x54d41080_u32, 0xdc15_u16, 0x4833_u16, StaticArray[0xa4_u8, 0x1b_u8, 0x74_u8, 0x8f_u8, 0x73_u8, 0xa3_u8, 0x81_u8, 0x79_u8])
    def query_interface(this : IDirectInputDevice8A*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInputDevice8A*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInputDevice8A*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_capabilities(this : IDirectInputDevice8A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVCAPS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_capabilities.call(this, param0)
    end
    def enum_objects(this : IDirectInputDevice8A*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICEOBJECTSCALLBACKA, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_objects.call(this, param0, param1, param2)
    end
    def get_property(this : IDirectInputDevice8A*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_property.call(this, param0, param1)
    end
    def set_property(this : IDirectInputDevice8A*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIPROPHEADER*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_property.call(this, param0, param1)
    end
    def acquire(this : IDirectInputDevice8A*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.acquire.call(this)
    end
    def unacquire(this : IDirectInputDevice8A*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unacquire.call(this)
    end
    def get_device_state(this : IDirectInputDevice8A*, param0 : UInt32, param1 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_state.call(this, param0, param1)
    end
    def get_device_data(this : IDirectInputDevice8A*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, param2 : UInt32*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_data.call(this, param0, param1, param2, param3)
    end
    def set_data_format(this : IDirectInputDevice8A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDATAFORMAT*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_data_format.call(this, param0)
    end
    def set_event_notification(this : IDirectInputDevice8A*, param0 : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_event_notification.call(this, param0)
    end
    def set_cooperative_level(this : IDirectInputDevice8A*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cooperative_level.call(this, param0, param1)
    end
    def get_object_info(this : IDirectInputDevice8A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTINSTANCEA*, param1 : UInt32, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_object_info.call(this, param0, param1, param2)
    end
    def get_device_info(this : IDirectInputDevice8A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEINSTANCEA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_info.call(this, param0)
    end
    def run_control_panel(this : IDirectInputDevice8A*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInputDevice8A*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32, param2 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1, param2)
    end
    def create_effect(this : IDirectInputDevice8A*, param0 : LibC::GUID*, param1 : Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, param2 : Void**, param3 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_effect.call(this, param0, param1, param2, param3)
    end
    def enum_effects(this : IDirectInputDevice8A*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSCALLBACKA, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_effects.call(this, param0, param1, param2)
    end
    def get_effect_info(this : IDirectInputDevice8A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIEFFECTINFOA*, param1 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_effect_info.call(this, param0, param1)
    end
    def get_force_feedback_state(this : IDirectInputDevice8A*, param0 : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_force_feedback_state.call(this, param0)
    end
    def send_force_feedback_command(this : IDirectInputDevice8A*, param0 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_force_feedback_command.call(this, param0)
    end
    def enum_created_effect_objects(this : IDirectInputDevice8A*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, param1 : Void*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_created_effect_objects.call(this, param0, param1, param2)
    end
    def escape(this : IDirectInputDevice8A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.escape.call(this, param0)
    end
    def poll(this : IDirectInputDevice8A*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.poll.call(this)
    end
    def send_device_data(this : IDirectInputDevice8A*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEOBJECTDATA*, param2 : UInt32*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_device_data.call(this, param0, param1, param2, param3)
    end
    def enum_effects_in_file(this : IDirectInputDevice8A*, param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMEFFECTSINFILECALLBACK, param2 : Void*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_effects_in_file.call(this, param0, param1, param2, param3)
    end
    def write_effect_to_file(this : IDirectInputDevice8A*, param0 : Win32cr::Foundation::PSTR, param1 : UInt32, param2 : Win32cr::Devices::HumanInterfaceDevice::DIFILEEFFECT*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.write_effect_to_file.call(this, param0, param1, param2, param3)
    end
    def build_action_map(this : IDirectInputDevice8A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIACTIONFORMATA*, param1 : Win32cr::Foundation::PSTR, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.build_action_map.call(this, param0, param1, param2)
    end
    def set_action_map(this : IDirectInputDevice8A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIACTIONFORMATA*, param1 : Win32cr::Foundation::PSTR, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_action_map.call(this, param0, param1, param2)
    end
    def get_image_info(this : IDirectInputDevice8A*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICEIMAGEINFOHEADERA*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_image_info.call(this, param0)
    end

  end

  @[Extern]
  record IDirectInputWVtbl,
    query_interface : Proc(IDirectInputW*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInputW*, UInt32),
    release : Proc(IDirectInputW*, UInt32),
    create_device : Proc(IDirectInputW*, LibC::GUID*, Void**, Void*, Win32cr::Foundation::HRESULT),
    enum_devices : Proc(IDirectInputW*, UInt32, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKW, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_device_status : Proc(IDirectInputW*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInputW*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInputW*, Win32cr::Foundation::HINSTANCE, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("89521361-aa8a-11cf-bfc7-444553540000")]
  record IDirectInputW, lpVtbl : IDirectInputWVtbl* do
    GUID = LibC::GUID.new(0x89521361_u32, 0xaa8a_u16, 0x11cf_u16, StaticArray[0xbf_u8, 0xc7_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : IDirectInputW*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInputW*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInputW*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_device(this : IDirectInputW*, param0 : LibC::GUID*, param1 : Void**, param2 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device.call(this, param0, param1, param2)
    end
    def enum_devices(this : IDirectInputW*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKW, param2 : Void*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_devices.call(this, param0, param1, param2, param3)
    end
    def get_device_status(this : IDirectInputW*, param0 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_status.call(this, param0)
    end
    def run_control_panel(this : IDirectInputW*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInputW*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1)
    end

  end

  @[Extern]
  record IDirectInputAVtbl,
    query_interface : Proc(IDirectInputA*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInputA*, UInt32),
    release : Proc(IDirectInputA*, UInt32),
    create_device : Proc(IDirectInputA*, LibC::GUID*, Void**, Void*, Win32cr::Foundation::HRESULT),
    enum_devices : Proc(IDirectInputA*, UInt32, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKA, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_device_status : Proc(IDirectInputA*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInputA*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInputA*, Win32cr::Foundation::HINSTANCE, UInt32, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("89521360-aa8a-11cf-bfc7-444553540000")]
  record IDirectInputA, lpVtbl : IDirectInputAVtbl* do
    GUID = LibC::GUID.new(0x89521360_u32, 0xaa8a_u16, 0x11cf_u16, StaticArray[0xbf_u8, 0xc7_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : IDirectInputA*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInputA*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInputA*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_device(this : IDirectInputA*, param0 : LibC::GUID*, param1 : Void**, param2 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device.call(this, param0, param1, param2)
    end
    def enum_devices(this : IDirectInputA*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKA, param2 : Void*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_devices.call(this, param0, param1, param2, param3)
    end
    def get_device_status(this : IDirectInputA*, param0 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_status.call(this, param0)
    end
    def run_control_panel(this : IDirectInputA*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInputA*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1)
    end

  end

  @[Extern]
  record IDirectInput2WVtbl,
    query_interface : Proc(IDirectInput2W*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInput2W*, UInt32),
    release : Proc(IDirectInput2W*, UInt32),
    create_device : Proc(IDirectInput2W*, LibC::GUID*, Void**, Void*, Win32cr::Foundation::HRESULT),
    enum_devices : Proc(IDirectInput2W*, UInt32, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKW, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_device_status : Proc(IDirectInput2W*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInput2W*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInput2W*, Win32cr::Foundation::HINSTANCE, UInt32, Win32cr::Foundation::HRESULT),
    find_device : Proc(IDirectInput2W*, LibC::GUID*, Win32cr::Foundation::PWSTR, LibC::GUID*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("5944e663-aa8a-11cf-bfc7-444553540000")]
  record IDirectInput2W, lpVtbl : IDirectInput2WVtbl* do
    GUID = LibC::GUID.new(0x5944e663_u32, 0xaa8a_u16, 0x11cf_u16, StaticArray[0xbf_u8, 0xc7_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : IDirectInput2W*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInput2W*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInput2W*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_device(this : IDirectInput2W*, param0 : LibC::GUID*, param1 : Void**, param2 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device.call(this, param0, param1, param2)
    end
    def enum_devices(this : IDirectInput2W*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKW, param2 : Void*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_devices.call(this, param0, param1, param2, param3)
    end
    def get_device_status(this : IDirectInput2W*, param0 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_status.call(this, param0)
    end
    def run_control_panel(this : IDirectInput2W*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInput2W*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1)
    end
    def find_device(this : IDirectInput2W*, param0 : LibC::GUID*, param1 : Win32cr::Foundation::PWSTR, param2 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_device.call(this, param0, param1, param2)
    end

  end

  @[Extern]
  record IDirectInput2AVtbl,
    query_interface : Proc(IDirectInput2A*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInput2A*, UInt32),
    release : Proc(IDirectInput2A*, UInt32),
    create_device : Proc(IDirectInput2A*, LibC::GUID*, Void**, Void*, Win32cr::Foundation::HRESULT),
    enum_devices : Proc(IDirectInput2A*, UInt32, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKA, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_device_status : Proc(IDirectInput2A*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInput2A*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInput2A*, Win32cr::Foundation::HINSTANCE, UInt32, Win32cr::Foundation::HRESULT),
    find_device : Proc(IDirectInput2A*, LibC::GUID*, Win32cr::Foundation::PSTR, LibC::GUID*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("5944e662-aa8a-11cf-bfc7-444553540000")]
  record IDirectInput2A, lpVtbl : IDirectInput2AVtbl* do
    GUID = LibC::GUID.new(0x5944e662_u32, 0xaa8a_u16, 0x11cf_u16, StaticArray[0xbf_u8, 0xc7_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : IDirectInput2A*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInput2A*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInput2A*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_device(this : IDirectInput2A*, param0 : LibC::GUID*, param1 : Void**, param2 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device.call(this, param0, param1, param2)
    end
    def enum_devices(this : IDirectInput2A*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKA, param2 : Void*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_devices.call(this, param0, param1, param2, param3)
    end
    def get_device_status(this : IDirectInput2A*, param0 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_status.call(this, param0)
    end
    def run_control_panel(this : IDirectInput2A*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInput2A*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1)
    end
    def find_device(this : IDirectInput2A*, param0 : LibC::GUID*, param1 : Win32cr::Foundation::PSTR, param2 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_device.call(this, param0, param1, param2)
    end

  end

  @[Extern]
  record IDirectInput7WVtbl,
    query_interface : Proc(IDirectInput7W*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInput7W*, UInt32),
    release : Proc(IDirectInput7W*, UInt32),
    create_device : Proc(IDirectInput7W*, LibC::GUID*, Void**, Void*, Win32cr::Foundation::HRESULT),
    enum_devices : Proc(IDirectInput7W*, UInt32, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKW, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_device_status : Proc(IDirectInput7W*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInput7W*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInput7W*, Win32cr::Foundation::HINSTANCE, UInt32, Win32cr::Foundation::HRESULT),
    find_device : Proc(IDirectInput7W*, LibC::GUID*, Win32cr::Foundation::PWSTR, LibC::GUID*, Win32cr::Foundation::HRESULT),
    create_device_ex : Proc(IDirectInput7W*, LibC::GUID*, LibC::GUID*, Void**, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("9a4cb685-236d-11d3-8e9d-00c04f6844ae")]
  record IDirectInput7W, lpVtbl : IDirectInput7WVtbl* do
    GUID = LibC::GUID.new(0x9a4cb685_u32, 0x236d_u16, 0x11d3_u16, StaticArray[0x8e_u8, 0x9d_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x68_u8, 0x44_u8, 0xae_u8])
    def query_interface(this : IDirectInput7W*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInput7W*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInput7W*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_device(this : IDirectInput7W*, param0 : LibC::GUID*, param1 : Void**, param2 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device.call(this, param0, param1, param2)
    end
    def enum_devices(this : IDirectInput7W*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKW, param2 : Void*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_devices.call(this, param0, param1, param2, param3)
    end
    def get_device_status(this : IDirectInput7W*, param0 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_status.call(this, param0)
    end
    def run_control_panel(this : IDirectInput7W*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInput7W*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1)
    end
    def find_device(this : IDirectInput7W*, param0 : LibC::GUID*, param1 : Win32cr::Foundation::PWSTR, param2 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_device.call(this, param0, param1, param2)
    end
    def create_device_ex(this : IDirectInput7W*, param0 : LibC::GUID*, param1 : LibC::GUID*, param2 : Void**, param3 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device_ex.call(this, param0, param1, param2, param3)
    end

  end

  @[Extern]
  record IDirectInput7AVtbl,
    query_interface : Proc(IDirectInput7A*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInput7A*, UInt32),
    release : Proc(IDirectInput7A*, UInt32),
    create_device : Proc(IDirectInput7A*, LibC::GUID*, Void**, Void*, Win32cr::Foundation::HRESULT),
    enum_devices : Proc(IDirectInput7A*, UInt32, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKA, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_device_status : Proc(IDirectInput7A*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInput7A*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInput7A*, Win32cr::Foundation::HINSTANCE, UInt32, Win32cr::Foundation::HRESULT),
    find_device : Proc(IDirectInput7A*, LibC::GUID*, Win32cr::Foundation::PSTR, LibC::GUID*, Win32cr::Foundation::HRESULT),
    create_device_ex : Proc(IDirectInput7A*, LibC::GUID*, LibC::GUID*, Void**, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("9a4cb684-236d-11d3-8e9d-00c04f6844ae")]
  record IDirectInput7A, lpVtbl : IDirectInput7AVtbl* do
    GUID = LibC::GUID.new(0x9a4cb684_u32, 0x236d_u16, 0x11d3_u16, StaticArray[0x8e_u8, 0x9d_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x68_u8, 0x44_u8, 0xae_u8])
    def query_interface(this : IDirectInput7A*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInput7A*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInput7A*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_device(this : IDirectInput7A*, param0 : LibC::GUID*, param1 : Void**, param2 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device.call(this, param0, param1, param2)
    end
    def enum_devices(this : IDirectInput7A*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKA, param2 : Void*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_devices.call(this, param0, param1, param2, param3)
    end
    def get_device_status(this : IDirectInput7A*, param0 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_status.call(this, param0)
    end
    def run_control_panel(this : IDirectInput7A*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInput7A*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1)
    end
    def find_device(this : IDirectInput7A*, param0 : LibC::GUID*, param1 : Win32cr::Foundation::PSTR, param2 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_device.call(this, param0, param1, param2)
    end
    def create_device_ex(this : IDirectInput7A*, param0 : LibC::GUID*, param1 : LibC::GUID*, param2 : Void**, param3 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device_ex.call(this, param0, param1, param2, param3)
    end

  end

  @[Extern]
  record IDirectInput8WVtbl,
    query_interface : Proc(IDirectInput8W*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInput8W*, UInt32),
    release : Proc(IDirectInput8W*, UInt32),
    create_device : Proc(IDirectInput8W*, LibC::GUID*, Void**, Void*, Win32cr::Foundation::HRESULT),
    enum_devices : Proc(IDirectInput8W*, UInt32, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKW, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_device_status : Proc(IDirectInput8W*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInput8W*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInput8W*, Win32cr::Foundation::HINSTANCE, UInt32, Win32cr::Foundation::HRESULT),
    find_device : Proc(IDirectInput8W*, LibC::GUID*, Win32cr::Foundation::PWSTR, LibC::GUID*, Win32cr::Foundation::HRESULT),
    enum_devices_by_semantics : Proc(IDirectInput8W*, Win32cr::Foundation::PWSTR, Win32cr::Devices::HumanInterfaceDevice::DIACTIONFORMATW*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESBYSEMANTICSCBW, Void*, UInt32, Win32cr::Foundation::HRESULT),
    configure_devices : Proc(IDirectInput8W*, Win32cr::Devices::HumanInterfaceDevice::LPDICONFIGUREDEVICESCALLBACK, Win32cr::Devices::HumanInterfaceDevice::DICONFIGUREDEVICESPARAMSW*, UInt32, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("bf798031-483a-4da2-aa99-5d64ed369700")]
  record IDirectInput8W, lpVtbl : IDirectInput8WVtbl* do
    GUID = LibC::GUID.new(0xbf798031_u32, 0x483a_u16, 0x4da2_u16, StaticArray[0xaa_u8, 0x99_u8, 0x5d_u8, 0x64_u8, 0xed_u8, 0x36_u8, 0x97_u8, 0x0_u8])
    def query_interface(this : IDirectInput8W*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInput8W*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInput8W*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_device(this : IDirectInput8W*, param0 : LibC::GUID*, param1 : Void**, param2 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device.call(this, param0, param1, param2)
    end
    def enum_devices(this : IDirectInput8W*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKW, param2 : Void*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_devices.call(this, param0, param1, param2, param3)
    end
    def get_device_status(this : IDirectInput8W*, param0 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_status.call(this, param0)
    end
    def run_control_panel(this : IDirectInput8W*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInput8W*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1)
    end
    def find_device(this : IDirectInput8W*, param0 : LibC::GUID*, param1 : Win32cr::Foundation::PWSTR, param2 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_device.call(this, param0, param1, param2)
    end
    def enum_devices_by_semantics(this : IDirectInput8W*, param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Devices::HumanInterfaceDevice::DIACTIONFORMATW*, param2 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESBYSEMANTICSCBW, param3 : Void*, param4 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_devices_by_semantics.call(this, param0, param1, param2, param3, param4)
    end
    def configure_devices(this : IDirectInput8W*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDICONFIGUREDEVICESCALLBACK, param1 : Win32cr::Devices::HumanInterfaceDevice::DICONFIGUREDEVICESPARAMSW*, param2 : UInt32, param3 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.configure_devices.call(this, param0, param1, param2, param3)
    end

  end

  @[Extern]
  record IDirectInput8AVtbl,
    query_interface : Proc(IDirectInput8A*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInput8A*, UInt32),
    release : Proc(IDirectInput8A*, UInt32),
    create_device : Proc(IDirectInput8A*, LibC::GUID*, Void**, Void*, Win32cr::Foundation::HRESULT),
    enum_devices : Proc(IDirectInput8A*, UInt32, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKA, Void*, UInt32, Win32cr::Foundation::HRESULT),
    get_device_status : Proc(IDirectInput8A*, LibC::GUID*, Win32cr::Foundation::HRESULT),
    run_control_panel : Proc(IDirectInput8A*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDirectInput8A*, Win32cr::Foundation::HINSTANCE, UInt32, Win32cr::Foundation::HRESULT),
    find_device : Proc(IDirectInput8A*, LibC::GUID*, Win32cr::Foundation::PSTR, LibC::GUID*, Win32cr::Foundation::HRESULT),
    enum_devices_by_semantics : Proc(IDirectInput8A*, Win32cr::Foundation::PSTR, Win32cr::Devices::HumanInterfaceDevice::DIACTIONFORMATA*, Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESBYSEMANTICSCBA, Void*, UInt32, Win32cr::Foundation::HRESULT),
    configure_devices : Proc(IDirectInput8A*, Win32cr::Devices::HumanInterfaceDevice::LPDICONFIGUREDEVICESCALLBACK, Win32cr::Devices::HumanInterfaceDevice::DICONFIGUREDEVICESPARAMSA*, UInt32, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("bf798030-483a-4da2-aa99-5d64ed369700")]
  record IDirectInput8A, lpVtbl : IDirectInput8AVtbl* do
    GUID = LibC::GUID.new(0xbf798030_u32, 0x483a_u16, 0x4da2_u16, StaticArray[0xaa_u8, 0x99_u8, 0x5d_u8, 0x64_u8, 0xed_u8, 0x36_u8, 0x97_u8, 0x0_u8])
    def query_interface(this : IDirectInput8A*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInput8A*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInput8A*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def create_device(this : IDirectInput8A*, param0 : LibC::GUID*, param1 : Void**, param2 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_device.call(this, param0, param1, param2)
    end
    def enum_devices(this : IDirectInput8A*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESCALLBACKA, param2 : Void*, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_devices.call(this, param0, param1, param2, param3)
    end
    def get_device_status(this : IDirectInput8A*, param0 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_device_status.call(this, param0)
    end
    def run_control_panel(this : IDirectInput8A*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.run_control_panel.call(this, param0, param1)
    end
    def initialize__(this : IDirectInput8A*, param0 : Win32cr::Foundation::HINSTANCE, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, param0, param1)
    end
    def find_device(this : IDirectInput8A*, param0 : LibC::GUID*, param1 : Win32cr::Foundation::PSTR, param2 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_device.call(this, param0, param1, param2)
    end
    def enum_devices_by_semantics(this : IDirectInput8A*, param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Devices::HumanInterfaceDevice::DIACTIONFORMATA*, param2 : Win32cr::Devices::HumanInterfaceDevice::LPDIENUMDEVICESBYSEMANTICSCBA, param3 : Void*, param4 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_devices_by_semantics.call(this, param0, param1, param2, param3, param4)
    end
    def configure_devices(this : IDirectInput8A*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDICONFIGUREDEVICESCALLBACK, param1 : Win32cr::Devices::HumanInterfaceDevice::DICONFIGUREDEVICESPARAMSA*, param2 : UInt32, param3 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.configure_devices.call(this, param0, param1, param2, param3)
    end

  end

  @[Extern]
  record IDirectInputEffectDriverVtbl,
    query_interface : Proc(IDirectInputEffectDriver*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInputEffectDriver*, UInt32),
    release : Proc(IDirectInputEffectDriver*, UInt32),
    device_id : Proc(IDirectInputEffectDriver*, UInt32, UInt32, UInt32, UInt32, Void*, Win32cr::Foundation::HRESULT),
    get_versions : Proc(IDirectInputEffectDriver*, Win32cr::Devices::HumanInterfaceDevice::DIDRIVERVERSIONS*, Win32cr::Foundation::HRESULT),
    escape : Proc(IDirectInputEffectDriver*, UInt32, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*, Win32cr::Foundation::HRESULT),
    set_gain : Proc(IDirectInputEffectDriver*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    send_force_feedback_command : Proc(IDirectInputEffectDriver*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_force_feedback_state : Proc(IDirectInputEffectDriver*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIDEVICESTATE*, Win32cr::Foundation::HRESULT),
    download_effect : Proc(IDirectInputEffectDriver*, UInt32, UInt32, UInt32*, Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, UInt32, Win32cr::Foundation::HRESULT),
    destroy_effect : Proc(IDirectInputEffectDriver*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    start_effect : Proc(IDirectInputEffectDriver*, UInt32, UInt32, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    stop_effect : Proc(IDirectInputEffectDriver*, UInt32, UInt32, Win32cr::Foundation::HRESULT),
    get_effect_status : Proc(IDirectInputEffectDriver*, UInt32, UInt32, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("02538130-898f-11d0-9ad0-00a0c9a06e35")]
  record IDirectInputEffectDriver, lpVtbl : IDirectInputEffectDriverVtbl* do
    GUID = LibC::GUID.new(0x2538130_u32, 0x898f_u16, 0x11d0_u16, StaticArray[0x9a_u8, 0xd0_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa0_u8, 0x6e_u8, 0x35_u8])
    def query_interface(this : IDirectInputEffectDriver*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInputEffectDriver*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInputEffectDriver*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def device_id(this : IDirectInputEffectDriver*, param0 : UInt32, param1 : UInt32, param2 : UInt32, param3 : UInt32, param4 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.device_id.call(this, param0, param1, param2, param3, param4)
    end
    def get_versions(this : IDirectInputEffectDriver*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIDRIVERVERSIONS*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_versions.call(this, param0)
    end
    def escape(this : IDirectInputEffectDriver*, param0 : UInt32, param1 : UInt32, param2 : Win32cr::Devices::HumanInterfaceDevice::DIEFFESCAPE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.escape.call(this, param0, param1, param2)
    end
    def set_gain(this : IDirectInputEffectDriver*, param0 : UInt32, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_gain.call(this, param0, param1)
    end
    def send_force_feedback_command(this : IDirectInputEffectDriver*, param0 : UInt32, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_force_feedback_command.call(this, param0, param1)
    end
    def get_force_feedback_state(this : IDirectInputEffectDriver*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIDEVICESTATE*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_force_feedback_state.call(this, param0, param1)
    end
    def download_effect(this : IDirectInputEffectDriver*, param0 : UInt32, param1 : UInt32, param2 : UInt32*, param3 : Win32cr::Devices::HumanInterfaceDevice::DIEFFECT*, param4 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.download_effect.call(this, param0, param1, param2, param3, param4)
    end
    def destroy_effect(this : IDirectInputEffectDriver*, param0 : UInt32, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.destroy_effect.call(this, param0, param1)
    end
    def start_effect(this : IDirectInputEffectDriver*, param0 : UInt32, param1 : UInt32, param2 : UInt32, param3 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.start_effect.call(this, param0, param1, param2, param3)
    end
    def stop_effect(this : IDirectInputEffectDriver*, param0 : UInt32, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.stop_effect.call(this, param0, param1)
    end
    def get_effect_status(this : IDirectInputEffectDriver*, param0 : UInt32, param1 : UInt32, param2 : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_effect_status.call(this, param0, param1, param2)
    end

  end

  @[Extern]
  record IDirectInputJoyConfigVtbl,
    query_interface : Proc(IDirectInputJoyConfig*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInputJoyConfig*, UInt32),
    release : Proc(IDirectInputJoyConfig*, UInt32),
    acquire : Proc(IDirectInputJoyConfig*, Win32cr::Foundation::HRESULT),
    unacquire : Proc(IDirectInputJoyConfig*, Win32cr::Foundation::HRESULT),
    set_cooperative_level : Proc(IDirectInputJoyConfig*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    send_notify : Proc(IDirectInputJoyConfig*, Win32cr::Foundation::HRESULT),
    enum_types : Proc(IDirectInputJoyConfig*, Win32cr::Devices::HumanInterfaceDevice::LPDIJOYTYPECALLBACK, Void*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IDirectInputJoyConfig*, Win32cr::Foundation::PWSTR, Win32cr::Devices::HumanInterfaceDevice::DIJOYTYPEINFO*, UInt32, Win32cr::Foundation::HRESULT),
    set_type_info : Proc(IDirectInputJoyConfig*, Win32cr::Foundation::PWSTR, Win32cr::Devices::HumanInterfaceDevice::DIJOYTYPEINFO*, UInt32, Win32cr::Foundation::HRESULT),
    delete_type : Proc(IDirectInputJoyConfig*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_config : Proc(IDirectInputJoyConfig*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIJOYCONFIG*, UInt32, Win32cr::Foundation::HRESULT),
    set_config : Proc(IDirectInputJoyConfig*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIJOYCONFIG*, UInt32, Win32cr::Foundation::HRESULT),
    delete_config : Proc(IDirectInputJoyConfig*, UInt32, Win32cr::Foundation::HRESULT),
    get_user_values : Proc(IDirectInputJoyConfig*, Win32cr::Devices::HumanInterfaceDevice::DIJOYUSERVALUES*, UInt32, Win32cr::Foundation::HRESULT),
    set_user_values : Proc(IDirectInputJoyConfig*, Win32cr::Devices::HumanInterfaceDevice::DIJOYUSERVALUES*, UInt32, Win32cr::Foundation::HRESULT),
    add_new_hardware : Proc(IDirectInputJoyConfig*, Win32cr::Foundation::HWND, LibC::GUID*, Win32cr::Foundation::HRESULT),
    open_type_key : Proc(IDirectInputJoyConfig*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::System::Registry::HKEY*, Win32cr::Foundation::HRESULT),
    open_config_key : Proc(IDirectInputJoyConfig*, UInt32, UInt32, Win32cr::System::Registry::HKEY*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("1de12ab1-c9f5-11cf-bfc7-444553540000")]
  record IDirectInputJoyConfig, lpVtbl : IDirectInputJoyConfigVtbl* do
    GUID = LibC::GUID.new(0x1de12ab1_u32, 0xc9f5_u16, 0x11cf_u16, StaticArray[0xbf_u8, 0xc7_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
    def query_interface(this : IDirectInputJoyConfig*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInputJoyConfig*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInputJoyConfig*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def acquire(this : IDirectInputJoyConfig*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.acquire.call(this)
    end
    def unacquire(this : IDirectInputJoyConfig*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unacquire.call(this)
    end
    def set_cooperative_level(this : IDirectInputJoyConfig*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cooperative_level.call(this, param0, param1)
    end
    def send_notify(this : IDirectInputJoyConfig*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_notify.call(this)
    end
    def enum_types(this : IDirectInputJoyConfig*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIJOYTYPECALLBACK, param1 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_types.call(this, param0, param1)
    end
    def get_type_info(this : IDirectInputJoyConfig*, param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Devices::HumanInterfaceDevice::DIJOYTYPEINFO*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, param0, param1, param2)
    end
    def set_type_info(this : IDirectInputJoyConfig*, param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Devices::HumanInterfaceDevice::DIJOYTYPEINFO*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_type_info.call(this, param0, param1, param2)
    end
    def delete_type(this : IDirectInputJoyConfig*, param0 : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_type.call(this, param0)
    end
    def get_config(this : IDirectInputJoyConfig*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIJOYCONFIG*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_config.call(this, param0, param1, param2)
    end
    def set_config(this : IDirectInputJoyConfig*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIJOYCONFIG*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_config.call(this, param0, param1, param2)
    end
    def delete_config(this : IDirectInputJoyConfig*, param0 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_config.call(this, param0)
    end
    def get_user_values(this : IDirectInputJoyConfig*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIJOYUSERVALUES*, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_user_values.call(this, param0, param1)
    end
    def set_user_values(this : IDirectInputJoyConfig*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIJOYUSERVALUES*, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_user_values.call(this, param0, param1)
    end
    def add_new_hardware(this : IDirectInputJoyConfig*, param0 : Win32cr::Foundation::HWND, param1 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_new_hardware.call(this, param0, param1)
    end
    def open_type_key(this : IDirectInputJoyConfig*, param0 : Win32cr::Foundation::PWSTR, param1 : UInt32, param2 : Win32cr::System::Registry::HKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_type_key.call(this, param0, param1, param2)
    end
    def open_config_key(this : IDirectInputJoyConfig*, param0 : UInt32, param1 : UInt32, param2 : Win32cr::System::Registry::HKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_config_key.call(this, param0, param1, param2)
    end

  end

  @[Extern]
  record IDirectInputJoyConfig8Vtbl,
    query_interface : Proc(IDirectInputJoyConfig8*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDirectInputJoyConfig8*, UInt32),
    release : Proc(IDirectInputJoyConfig8*, UInt32),
    acquire : Proc(IDirectInputJoyConfig8*, Win32cr::Foundation::HRESULT),
    unacquire : Proc(IDirectInputJoyConfig8*, Win32cr::Foundation::HRESULT),
    set_cooperative_level : Proc(IDirectInputJoyConfig8*, Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::HRESULT),
    send_notify : Proc(IDirectInputJoyConfig8*, Win32cr::Foundation::HRESULT),
    enum_types : Proc(IDirectInputJoyConfig8*, Win32cr::Devices::HumanInterfaceDevice::LPDIJOYTYPECALLBACK, Void*, Win32cr::Foundation::HRESULT),
    get_type_info : Proc(IDirectInputJoyConfig8*, Win32cr::Foundation::PWSTR, Win32cr::Devices::HumanInterfaceDevice::DIJOYTYPEINFO*, UInt32, Win32cr::Foundation::HRESULT),
    set_type_info : Proc(IDirectInputJoyConfig8*, Win32cr::Foundation::PWSTR, Win32cr::Devices::HumanInterfaceDevice::DIJOYTYPEINFO*, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    delete_type : Proc(IDirectInputJoyConfig8*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::HRESULT),
    get_config : Proc(IDirectInputJoyConfig8*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIJOYCONFIG*, UInt32, Win32cr::Foundation::HRESULT),
    set_config : Proc(IDirectInputJoyConfig8*, UInt32, Win32cr::Devices::HumanInterfaceDevice::DIJOYCONFIG*, UInt32, Win32cr::Foundation::HRESULT),
    delete_config : Proc(IDirectInputJoyConfig8*, UInt32, Win32cr::Foundation::HRESULT),
    get_user_values : Proc(IDirectInputJoyConfig8*, Win32cr::Devices::HumanInterfaceDevice::DIJOYUSERVALUES*, UInt32, Win32cr::Foundation::HRESULT),
    set_user_values : Proc(IDirectInputJoyConfig8*, Win32cr::Devices::HumanInterfaceDevice::DIJOYUSERVALUES*, UInt32, Win32cr::Foundation::HRESULT),
    add_new_hardware : Proc(IDirectInputJoyConfig8*, Win32cr::Foundation::HWND, LibC::GUID*, Win32cr::Foundation::HRESULT),
    open_type_key : Proc(IDirectInputJoyConfig8*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::System::Registry::HKEY*, Win32cr::Foundation::HRESULT),
    open_app_status_key : Proc(IDirectInputJoyConfig8*, Win32cr::System::Registry::HKEY*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("eb0d7dfa-1990-4f27-b4d6-edf2eec4a44c")]
  record IDirectInputJoyConfig8, lpVtbl : IDirectInputJoyConfig8Vtbl* do
    GUID = LibC::GUID.new(0xeb0d7dfa_u32, 0x1990_u16, 0x4f27_u16, StaticArray[0xb4_u8, 0xd6_u8, 0xed_u8, 0xf2_u8, 0xee_u8, 0xc4_u8, 0xa4_u8, 0x4c_u8])
    def query_interface(this : IDirectInputJoyConfig8*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDirectInputJoyConfig8*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDirectInputJoyConfig8*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def acquire(this : IDirectInputJoyConfig8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.acquire.call(this)
    end
    def unacquire(this : IDirectInputJoyConfig8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.unacquire.call(this)
    end
    def set_cooperative_level(this : IDirectInputJoyConfig8*, param0 : Win32cr::Foundation::HWND, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_cooperative_level.call(this, param0, param1)
    end
    def send_notify(this : IDirectInputJoyConfig8*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.send_notify.call(this)
    end
    def enum_types(this : IDirectInputJoyConfig8*, param0 : Win32cr::Devices::HumanInterfaceDevice::LPDIJOYTYPECALLBACK, param1 : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_types.call(this, param0, param1)
    end
    def get_type_info(this : IDirectInputJoyConfig8*, param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Devices::HumanInterfaceDevice::DIJOYTYPEINFO*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_type_info.call(this, param0, param1, param2)
    end
    def set_type_info(this : IDirectInputJoyConfig8*, param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Devices::HumanInterfaceDevice::DIJOYTYPEINFO*, param2 : UInt32, param3 : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_type_info.call(this, param0, param1, param2, param3)
    end
    def delete_type(this : IDirectInputJoyConfig8*, param0 : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_type.call(this, param0)
    end
    def get_config(this : IDirectInputJoyConfig8*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIJOYCONFIG*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_config.call(this, param0, param1, param2)
    end
    def set_config(this : IDirectInputJoyConfig8*, param0 : UInt32, param1 : Win32cr::Devices::HumanInterfaceDevice::DIJOYCONFIG*, param2 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_config.call(this, param0, param1, param2)
    end
    def delete_config(this : IDirectInputJoyConfig8*, param0 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_config.call(this, param0)
    end
    def get_user_values(this : IDirectInputJoyConfig8*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIJOYUSERVALUES*, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_user_values.call(this, param0, param1)
    end
    def set_user_values(this : IDirectInputJoyConfig8*, param0 : Win32cr::Devices::HumanInterfaceDevice::DIJOYUSERVALUES*, param1 : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_user_values.call(this, param0, param1)
    end
    def add_new_hardware(this : IDirectInputJoyConfig8*, param0 : Win32cr::Foundation::HWND, param1 : LibC::GUID*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_new_hardware.call(this, param0, param1)
    end
    def open_type_key(this : IDirectInputJoyConfig8*, param0 : Win32cr::Foundation::PWSTR, param1 : UInt32, param2 : Win32cr::System::Registry::HKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_type_key.call(this, param0, param1, param2)
    end
    def open_app_status_key(this : IDirectInputJoyConfig8*, param0 : Win32cr::System::Registry::HKEY*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.open_app_status_key.call(this, param0)
    end

  end

  @[Link("dinput8")]
  @[Link("winmm")]
  @[Link("hid")]
  lib C
    fun DirectInput8Create(hinst : Win32cr::Foundation::HINSTANCE, dwVersion : UInt32, riidltf : LibC::GUID*, ppvOut : Void**, punkOuter : Void*) : Win32cr::Foundation::HRESULT

    fun joyConfigChanged(dwFlags : UInt32) : UInt32

    fun HidP_GetCaps(preparsed_data : LibC::IntPtrT, capabilities : Win32cr::Devices::HumanInterfaceDevice::HIDP_CAPS*) : Win32cr::Foundation::NTSTATUS

    fun HidP_GetLinkCollectionNodes(link_collection_nodes : Win32cr::Devices::HumanInterfaceDevice::HIDP_LINK_COLLECTION_NODE*, link_collection_nodes_length : UInt32*, preparsed_data : LibC::IntPtrT) : Win32cr::Foundation::NTSTATUS

    fun HidP_GetSpecificButtonCaps(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, usage_page : UInt16, link_collection : UInt16, usage : UInt16, button_caps : Win32cr::Devices::HumanInterfaceDevice::HIDP_BUTTON_CAPS*, button_caps_length : UInt16*, preparsed_data : LibC::IntPtrT) : Win32cr::Foundation::NTSTATUS

    fun HidP_GetButtonCaps(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, button_caps : Win32cr::Devices::HumanInterfaceDevice::HIDP_BUTTON_CAPS*, button_caps_length : UInt16*, preparsed_data : LibC::IntPtrT) : Win32cr::Foundation::NTSTATUS

    fun HidP_GetSpecificValueCaps(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, usage_page : UInt16, link_collection : UInt16, usage : UInt16, value_caps : Win32cr::Devices::HumanInterfaceDevice::HIDP_VALUE_CAPS*, value_caps_length : UInt16*, preparsed_data : LibC::IntPtrT) : Win32cr::Foundation::NTSTATUS

    fun HidP_GetValueCaps(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, value_caps : Win32cr::Devices::HumanInterfaceDevice::HIDP_VALUE_CAPS*, value_caps_length : UInt16*, preparsed_data : LibC::IntPtrT) : Win32cr::Foundation::NTSTATUS

    fun HidP_GetExtendedAttributes(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, data_index : UInt16, preparsed_data : LibC::IntPtrT, attributes : Win32cr::Devices::HumanInterfaceDevice::HIDP_EXTENDED_ATTRIBUTES*, length_attributes : UInt32*) : Win32cr::Foundation::NTSTATUS

    fun HidP_InitializeReportForID(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, report_id : UInt8, preparsed_data : LibC::IntPtrT, report : Win32cr::Foundation::PSTR, report_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_SetData(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, data_list : Win32cr::Devices::HumanInterfaceDevice::HIDP_DATA*, data_length : UInt32*, preparsed_data : LibC::IntPtrT, report : Win32cr::Foundation::PSTR, report_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_GetData(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, data_list : Win32cr::Devices::HumanInterfaceDevice::HIDP_DATA*, data_length : UInt32*, preparsed_data : LibC::IntPtrT, report : Win32cr::Foundation::PSTR, report_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_MaxDataListLength(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, preparsed_data : LibC::IntPtrT) : UInt32

    fun HidP_SetUsages(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, usage_page : UInt16, link_collection : UInt16, usage_list : UInt16*, usage_length : UInt32*, preparsed_data : LibC::IntPtrT, report : Win32cr::Foundation::PSTR, report_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_UnsetUsages(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, usage_page : UInt16, link_collection : UInt16, usage_list : UInt16*, usage_length : UInt32*, preparsed_data : LibC::IntPtrT, report : Win32cr::Foundation::PSTR, report_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_GetUsages(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, usage_page : UInt16, link_collection : UInt16, usage_list : UInt16*, usage_length : UInt32*, preparsed_data : LibC::IntPtrT, report : Win32cr::Foundation::PSTR, report_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_GetUsagesEx(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, link_collection : UInt16, button_list : Win32cr::Devices::HumanInterfaceDevice::USAGE_AND_PAGE*, usage_length : UInt32*, preparsed_data : LibC::IntPtrT, report : Win32cr::Foundation::PSTR, report_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_MaxUsageListLength(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, usage_page : UInt16, preparsed_data : LibC::IntPtrT) : UInt32

    fun HidP_SetUsageValue(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, usage_page : UInt16, link_collection : UInt16, usage : UInt16, usage_value : UInt32, preparsed_data : LibC::IntPtrT, report : Win32cr::Foundation::PSTR, report_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_SetScaledUsageValue(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, usage_page : UInt16, link_collection : UInt16, usage : UInt16, usage_value : Int32, preparsed_data : LibC::IntPtrT, report : Win32cr::Foundation::PSTR, report_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_SetUsageValueArray(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, usage_page : UInt16, link_collection : UInt16, usage : UInt16, usage_value : Win32cr::Foundation::PSTR, usage_value_byte_length : UInt16, preparsed_data : LibC::IntPtrT, report : Win32cr::Foundation::PSTR, report_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_GetUsageValue(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, usage_page : UInt16, link_collection : UInt16, usage : UInt16, usage_value : UInt32*, preparsed_data : LibC::IntPtrT, report : Win32cr::Foundation::PSTR, report_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_GetScaledUsageValue(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, usage_page : UInt16, link_collection : UInt16, usage : UInt16, usage_value : Int32*, preparsed_data : LibC::IntPtrT, report : Win32cr::Foundation::PSTR, report_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_GetUsageValueArray(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, usage_page : UInt16, link_collection : UInt16, usage : UInt16, usage_value : Win32cr::Foundation::PSTR, usage_value_byte_length : UInt16, preparsed_data : LibC::IntPtrT, report : Win32cr::Foundation::PSTR, report_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_UsageListDifference(previous_usage_list : UInt16*, current_usage_list : UInt16*, break_usage_list : UInt16*, make_usage_list : UInt16*, usage_list_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_GetButtonArray(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, usage_page : UInt16, link_collection : UInt16, usage : UInt16, button_data : Win32cr::Devices::HumanInterfaceDevice::HIDP_BUTTON_ARRAY_DATA*, button_data_length : UInt16*, preparsed_data : LibC::IntPtrT, report : Win32cr::Foundation::PSTR, report_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_SetButtonArray(report_type : Win32cr::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE, usage_page : UInt16, link_collection : UInt16, usage : UInt16, button_data : Win32cr::Devices::HumanInterfaceDevice::HIDP_BUTTON_ARRAY_DATA*, button_data_length : UInt16, preparsed_data : LibC::IntPtrT, report : Win32cr::Foundation::PSTR, report_length : UInt32) : Win32cr::Foundation::NTSTATUS

    fun HidP_TranslateUsagesToI8042ScanCodes(changed_usage_list : UInt16*, usage_list_length : UInt32, key_action : Win32cr::Devices::HumanInterfaceDevice::HIDP_KEYBOARD_DIRECTION, modifier_state : Win32cr::Devices::HumanInterfaceDevice::HIDP_KEYBOARD_MODIFIER_STATE*, insert_codes_procedure : Win32cr::Devices::HumanInterfaceDevice::PHIDP_INSERT_SCANCODES, insert_codes_context : Void*) : Win32cr::Foundation::NTSTATUS

    fun HidD_GetAttributes(hid_device_object : Win32cr::Foundation::HANDLE, attributes : Win32cr::Devices::HumanInterfaceDevice::HIDD_ATTRIBUTES*) : Win32cr::Foundation::BOOLEAN

    fun HidD_GetHidGuid(hid_guid : LibC::GUID*) : Void

    fun HidD_GetPreparsedData(hid_device_object : Win32cr::Foundation::HANDLE, preparsed_data : LibC::IntPtrT*) : Win32cr::Foundation::BOOLEAN

    fun HidD_FreePreparsedData(preparsed_data : LibC::IntPtrT) : Win32cr::Foundation::BOOLEAN

    fun HidD_FlushQueue(hid_device_object : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOLEAN

    fun HidD_GetConfiguration(hid_device_object : Win32cr::Foundation::HANDLE, configuration : Win32cr::Devices::HumanInterfaceDevice::HIDD_CONFIGURATION*, configuration_length : UInt32) : Win32cr::Foundation::BOOLEAN

    fun HidD_SetConfiguration(hid_device_object : Win32cr::Foundation::HANDLE, configuration : Win32cr::Devices::HumanInterfaceDevice::HIDD_CONFIGURATION*, configuration_length : UInt32) : Win32cr::Foundation::BOOLEAN

    fun HidD_GetFeature(hid_device_object : Win32cr::Foundation::HANDLE, report_buffer : Void*, report_buffer_length : UInt32) : Win32cr::Foundation::BOOLEAN

    fun HidD_SetFeature(hid_device_object : Win32cr::Foundation::HANDLE, report_buffer : Void*, report_buffer_length : UInt32) : Win32cr::Foundation::BOOLEAN

    fun HidD_GetInputReport(hid_device_object : Win32cr::Foundation::HANDLE, report_buffer : Void*, report_buffer_length : UInt32) : Win32cr::Foundation::BOOLEAN

    fun HidD_SetOutputReport(hid_device_object : Win32cr::Foundation::HANDLE, report_buffer : Void*, report_buffer_length : UInt32) : Win32cr::Foundation::BOOLEAN

    fun HidD_GetNumInputBuffers(hid_device_object : Win32cr::Foundation::HANDLE, number_buffers : UInt32*) : Win32cr::Foundation::BOOLEAN

    fun HidD_SetNumInputBuffers(hid_device_object : Win32cr::Foundation::HANDLE, number_buffers : UInt32) : Win32cr::Foundation::BOOLEAN

    fun HidD_GetPhysicalDescriptor(hid_device_object : Win32cr::Foundation::HANDLE, buffer : Void*, buffer_length : UInt32) : Win32cr::Foundation::BOOLEAN

    fun HidD_GetManufacturerString(hid_device_object : Win32cr::Foundation::HANDLE, buffer : Void*, buffer_length : UInt32) : Win32cr::Foundation::BOOLEAN

    fun HidD_GetProductString(hid_device_object : Win32cr::Foundation::HANDLE, buffer : Void*, buffer_length : UInt32) : Win32cr::Foundation::BOOLEAN

    fun HidD_GetIndexedString(hid_device_object : Win32cr::Foundation::HANDLE, string_index : UInt32, buffer : Void*, buffer_length : UInt32) : Win32cr::Foundation::BOOLEAN

    fun HidD_GetSerialNumberString(hid_device_object : Win32cr::Foundation::HANDLE, buffer : Void*, buffer_length : UInt32) : Win32cr::Foundation::BOOLEAN

    fun HidD_GetMsGenreDescriptor(hid_device_object : Win32cr::Foundation::HANDLE, buffer : Void*, buffer_length : UInt32) : Win32cr::Foundation::BOOLEAN

  end
end