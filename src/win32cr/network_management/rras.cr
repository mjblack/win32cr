require "./../networking/win_sock.cr"
require "./../foundation.cr"
require "./../security/cryptography.cr"
require "./ip_helper.cr"

module Win32cr::NetworkManagement::Rras
  extend self
  alias HRASCONN = LibC::IntPtrT
  alias RASDIALFUNC = Proc(UInt32, Win32cr::NetworkManagement::Rras::RASCONNSTATE, UInt32, Void)

  alias RASDIALFUNC1 = Proc(Win32cr::NetworkManagement::Rras::HRASCONN, UInt32, Win32cr::NetworkManagement::Rras::RASCONNSTATE, UInt32, UInt32, Void)

  alias RASDIALFUNC2 = Proc(LibC::UIntPtrT, UInt32, Win32cr::NetworkManagement::Rras::HRASCONN, UInt32, Win32cr::NetworkManagement::Rras::RASCONNSTATE, UInt32, UInt32, UInt32)

  alias ORASADFUNC = Proc(Win32cr::Foundation::HWND, Win32cr::Foundation::PSTR, UInt32, UInt32*, Win32cr::Foundation::BOOL)

  alias RASADFUNCA = Proc(Win32cr::Foundation::PSTR, Win32cr::Foundation::PSTR, Win32cr::NetworkManagement::Rras::RASADPARAMS*, UInt32*, Win32cr::Foundation::BOOL)

  alias RASADFUNCW = Proc(Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::NetworkManagement::Rras::RASADPARAMS*, UInt32*, Win32cr::Foundation::BOOL)

  alias PFNRASGETBUFFER = Proc(UInt8**, UInt32*, UInt32)

  alias PFNRASFREEBUFFER = Proc(UInt8*, UInt32)

  alias PFNRASSENDBUFFER = Proc(Win32cr::Foundation::HANDLE, UInt8*, UInt32, UInt32)

  alias PFNRASRECEIVEBUFFER = Proc(Win32cr::Foundation::HANDLE, UInt8*, UInt32*, UInt32, Win32cr::Foundation::HANDLE, UInt32)

  alias PFNRASRETRIEVEBUFFER = Proc(Win32cr::Foundation::HANDLE, UInt8*, UInt32*, UInt32)

  alias RasCustomScriptExecuteFn = Proc(Win32cr::Foundation::HANDLE, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::NetworkManagement::Rras::PFNRASGETBUFFER, Win32cr::NetworkManagement::Rras::PFNRASFREEBUFFER, Win32cr::NetworkManagement::Rras::PFNRASSENDBUFFER, Win32cr::NetworkManagement::Rras::PFNRASRECEIVEBUFFER, Win32cr::NetworkManagement::Rras::PFNRASRETRIEVEBUFFER, Win32cr::Foundation::HWND, Win32cr::NetworkManagement::Rras::RASDIALPARAMSA*, Void*, UInt32)

  alias PFNRASSETCOMMSETTINGS = Proc(Win32cr::Foundation::HANDLE, Win32cr::NetworkManagement::Rras::RASCOMMSETTINGS*, Void*, UInt32)

  alias RasCustomHangUpFn = Proc(Win32cr::NetworkManagement::Rras::HRASCONN, UInt32)

  alias RasCustomDialFn = Proc(Win32cr::Foundation::HINSTANCE, Win32cr::NetworkManagement::Rras::RASDIALEXTENSIONS*, Win32cr::Foundation::PWSTR, Win32cr::NetworkManagement::Rras::RASDIALPARAMSA*, UInt32, Void*, Win32cr::NetworkManagement::Rras::HRASCONN*, UInt32, UInt32)

  alias RasCustomDeleteEntryNotifyFn = Proc(Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, UInt32)

  alias RASPBDLGFUNCW = Proc(LibC::UIntPtrT, UInt32, Win32cr::Foundation::PWSTR, Void*, Void)

  alias RASPBDLGFUNCA = Proc(LibC::UIntPtrT, UInt32, Win32cr::Foundation::PSTR, Void*, Void)

  alias RasCustomDialDlgFn = Proc(Win32cr::Foundation::HINSTANCE, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::NetworkManagement::Rras::RASDIALDLG*, Void*, Win32cr::Foundation::BOOL)

  alias RasCustomEntryDlgFn = Proc(Win32cr::Foundation::HINSTANCE, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::NetworkManagement::Rras::RASENTRYDLGA*, UInt32, Win32cr::Foundation::BOOL)

  alias PMPRADMINGETIPADDRESSFORUSER = Proc(Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32*, Win32cr::Foundation::BOOL*, UInt32)

  alias PMPRADMINRELEASEIPADRESS = Proc(Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32*, Void)

  alias PMPRADMINGETIPV6ADDRESSFORUSER = Proc(Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Networking::WinSock::IN6_ADDR*, Win32cr::Foundation::BOOL*, UInt32)

  alias PMPRADMINRELEASEIPV6ADDRESSFORUSER = Proc(Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Networking::WinSock::IN6_ADDR*, Void)

  alias PMPRADMINACCEPTNEWCONNECTION = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_0*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_1*, Win32cr::Foundation::BOOL)

  alias PMPRADMINACCEPTNEWCONNECTION2 = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_0*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_1*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_2*, Win32cr::Foundation::BOOL)

  alias PMPRADMINACCEPTNEWCONNECTION3 = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_0*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_1*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_2*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_3*, Win32cr::Foundation::BOOL)

  alias PMPRADMINACCEPTNEWLINK = Proc(Win32cr::NetworkManagement::Rras::RAS_PORT_0*, Win32cr::NetworkManagement::Rras::RAS_PORT_1*, Win32cr::Foundation::BOOL)

  alias PMPRADMINCONNECTIONHANGUPNOTIFICATION = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_0*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_1*, Void)

  alias PMPRADMINCONNECTIONHANGUPNOTIFICATION2 = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_0*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_1*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_2*, Void)

  alias PMPRADMINCONNECTIONHANGUPNOTIFICATION3 = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_0*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_1*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_2*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_3, Void)

  alias PMPRADMINLINKHANGUPNOTIFICATION = Proc(Win32cr::NetworkManagement::Rras::RAS_PORT_0*, Win32cr::NetworkManagement::Rras::RAS_PORT_1*, Void)

  alias PMPRADMINTERMINATEDLL = Proc(UInt32)

  alias PMPRADMINACCEPTREAUTHENTICATION = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_0*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_1*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_2*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_3*, Win32cr::Foundation::BOOL)

  alias PMPRADMINACCEPTNEWCONNECTIONEX = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_EX*, Win32cr::Foundation::BOOL)

  alias PMPRADMINACCEPTREAUTHENTICATIONEX = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_EX*, Win32cr::Foundation::BOOL)

  alias PMPRADMINACCEPTTUNNELENDPOINTCHANGEEX = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_EX*, Win32cr::Foundation::BOOL)

  alias PMPRADMINCONNECTIONHANGUPNOTIFICATIONEX = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_EX*, Void)

  alias PMPRADMINRASVALIDATEPREAUTHENTICATEDCONNECTIONEX = Proc(Win32cr::NetworkManagement::Rras::AUTH_VALIDATION_EX*, UInt32)

  alias RASSECURITYPROC = Proc(UInt32)

  alias PMGM_RPF_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32*, UInt32*, UInt32*, UInt32, UInt8*, UInt8*, UInt32)

  alias PMGM_CREATION_ALERT_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, Win32cr::NetworkManagement::Rras::MGM_IF_ENTRY*, UInt32)

  alias PMGM_PRUNE_ALERT_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, Win32cr::Foundation::BOOL, UInt32*, UInt32)

  alias PMGM_JOIN_ALERT_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, Win32cr::Foundation::BOOL, UInt32)

  alias PMGM_WRONG_IF_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32, UInt8*, UInt32)

  alias PMGM_LOCAL_JOIN_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, UInt32)

  alias PMGM_LOCAL_LEAVE_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, UInt32)

  alias PMGM_DISABLE_IGMP_CALLBACK = Proc(UInt32, UInt32, UInt32)

  alias PMGM_ENABLE_IGMP_CALLBACK = Proc(UInt32, UInt32, UInt32)

  alias RTM_EVENT_CALLBACK = Proc(LibC::IntPtrT, Win32cr::NetworkManagement::Rras::RTM_EVENT_TYPE, Void*, Void*, UInt32)

  alias RTM_ENTITY_EXPORT_METHOD = Proc(LibC::IntPtrT, LibC::IntPtrT, Win32cr::NetworkManagement::Rras::RTM_ENTITY_METHOD_INPUT*, Win32cr::NetworkManagement::Rras::RTM_ENTITY_METHOD_OUTPUT*, Void)

  RASNAP_ProbationTime = 1_u32
  RASTUNNELENDPOINT_UNKNOWN = 0_u32
  RASTUNNELENDPOINT_IPv4 = 1_u32
  RASTUNNELENDPOINT_IPv6 = 2_u32
  RAS_MaxDeviceType = 16_u32
  RAS_MaxPhoneNumber = 128_u32
  RAS_MaxIpAddress = 15_u32
  RAS_MaxIpxAddress = 21_u32
  RAS_MaxEntryName = 256_u32
  RAS_MaxDeviceName = 128_u32
  RAS_MaxCallbackNumber = 128_u32
  RAS_MaxAreaCode = 10_u32
  RAS_MaxPadType = 32_u32
  RAS_MaxX25Address = 200_u32
  RAS_MaxFacilities = 200_u32
  RAS_MaxUserData = 200_u32
  RAS_MaxReplyMessage = 1024_u32
  RAS_MaxDnsSuffix = 256_u32
  RASCF_AllUsers = 1_u32
  RASCF_GlobalCreds = 2_u32
  RASCF_OwnerKnown = 4_u32
  RASCF_OwnerMatch = 8_u32
  RAS_MaxIDSize = 256_u32
  RASCS_PAUSED = 4096_u32
  RASCS_DONE = 8192_u32
  RASCSS_DONE = 8192_u32
  RDEOPT_UsePrefixSuffix = 1_u32
  RDEOPT_PausedStates = 2_u32
  RDEOPT_IgnoreModemSpeaker = 4_u32
  RDEOPT_SetModemSpeaker = 8_u32
  RDEOPT_IgnoreSoftwareCompression = 16_u32
  RDEOPT_SetSoftwareCompression = 32_u32
  RDEOPT_DisableConnectedUI = 64_u32
  RDEOPT_DisableReconnectUI = 128_u32
  RDEOPT_DisableReconnect = 256_u32
  RDEOPT_NoUser = 512_u32
  RDEOPT_PauseOnScript = 1024_u32
  RDEOPT_Router = 2048_u32
  RDEOPT_CustomDial = 4096_u32
  RDEOPT_UseCustomScripting = 8192_u32
  RDEOPT_InvokeAutoTriggerCredentialUI = 16384_u32
  RDEOPT_EapInfoCryptInCapable = 32768_u32
  REN_User = 0_u32
  REN_AllUsers = 1_u32
  RASIPO_VJ = 1_u32
  RASLCPO_PFC = 1_u32
  RASLCPO_ACFC = 2_u32
  RASLCPO_SSHF = 4_u32
  RASLCPO_DES_56 = 8_u32
  RASLCPO_3_DES = 16_u32
  RASLCPO_AES_128 = 32_u32
  RASLCPO_AES_256 = 64_u32
  RASLCPO_AES_192 = 128_u32
  RASLCPO_GCM_AES_128 = 256_u32
  RASLCPO_GCM_AES_192 = 512_u32
  RASLCPO_GCM_AES_256 = 1024_u32
  RASCCPCA_MPPC = 6_u32
  RASCCPCA_STAC = 5_u32
  RASCCPO_Compression = 1_u32
  RASCCPO_HistoryLess = 2_u32
  RASCCPO_Encryption56bit = 16_u32
  RASCCPO_Encryption40bit = 32_u32
  RASCCPO_Encryption128bit = 64_u32
  RASIKEv2_AUTH_MACHINECERTIFICATES = 1_u32
  RASIKEv2_AUTH_EAP = 2_u32
  RASIKEv2_AUTH_PSK = 3_u32
  RASDIALEVENT = "RasDialEvent"
  WM_RASDIALEVENT = 52429_u32
  ET_None = 0_u32
  ET_Require = 1_u32
  ET_RequireMax = 2_u32
  ET_Optional = 3_u32
  VS_Default = 0_u32
  VS_PptpOnly = 1_u32
  VS_PptpFirst = 2_u32
  VS_L2tpOnly = 3_u32
  VS_L2tpFirst = 4_u32
  VS_SstpOnly = 5_u32
  VS_SstpFirst = 6_u32
  VS_Ikev2Only = 7_u32
  VS_Ikev2First = 8_u32
  VS_GREOnly = 9_u32
  VS_PptpSstp = 12_u32
  VS_L2tpSstp = 13_u32
  VS_Ikev2Sstp = 14_u32
  VS_ProtocolList = 15_u32
  RASEO_UseCountryAndAreaCodes = 1_u32
  RASEO_SpecificIpAddr = 2_u32
  RASEO_SpecificNameServers = 4_u32
  RASEO_IpHeaderCompression = 8_u32
  RASEO_RemoteDefaultGateway = 16_u32
  RASEO_DisableLcpExtensions = 32_u32
  RASEO_TerminalBeforeDial = 64_u32
  RASEO_TerminalAfterDial = 128_u32
  RASEO_ModemLights = 256_u32
  RASEO_SwCompression = 512_u32
  RASEO_RequireEncryptedPw = 1024_u32
  RASEO_RequireMsEncryptedPw = 2048_u32
  RASEO_RequireDataEncryption = 4096_u32
  RASEO_NetworkLogon = 8192_u32
  RASEO_UseLogonCredentials = 16384_u32
  RASEO_PromoteAlternates = 32768_u32
  RASEO_SecureLocalFiles = 65536_u32
  RASEO_RequireEAP = 131072_u32
  RASEO_RequirePAP = 262144_u32
  RASEO_RequireSPAP = 524288_u32
  RASEO_Custom = 1048576_u32
  RASEO_PreviewPhoneNumber = 2097152_u32
  RASEO_SharedPhoneNumbers = 8388608_u32
  RASEO_PreviewUserPw = 16777216_u32
  RASEO_PreviewDomain = 33554432_u32
  RASEO_ShowDialingProgress = 67108864_u32
  RASEO_RequireCHAP = 134217728_u32
  RASEO_RequireMsCHAP = 268435456_u32
  RASEO_RequireMsCHAP2 = 536870912_u32
  RASEO_RequireW95MSCHAP = 1073741824_u32
  RASEO_CustomScript = 2147483648_u32
  RASEO2_SecureFileAndPrint = 1_u32
  RASEO2_SecureClientForMSNet = 2_u32
  RASEO2_DontNegotiateMultilink = 4_u32
  RASEO2_DontUseRasCredentials = 8_u32
  RASEO2_UsePreSharedKey = 16_u32
  RASEO2_Internet = 32_u32
  RASEO2_DisableNbtOverIP = 64_u32
  RASEO2_UseGlobalDeviceSettings = 128_u32
  RASEO2_ReconnectIfDropped = 256_u32
  RASEO2_SharePhoneNumbers = 512_u32
  RASEO2_SecureRoutingCompartment = 1024_u32
  RASEO2_UseTypicalSettings = 2048_u32
  RASEO2_IPv6SpecificNameServers = 4096_u32
  RASEO2_IPv6RemoteDefaultGateway = 8192_u32
  RASEO2_RegisterIpWithDNS = 16384_u32
  RASEO2_UseDNSSuffixForRegistration = 32768_u32
  RASEO2_IPv4ExplicitMetric = 65536_u32
  RASEO2_IPv6ExplicitMetric = 131072_u32
  RASEO2_DisableIKENameEkuCheck = 262144_u32
  RASEO2_DisableClassBasedStaticRoute = 524288_u32
  RASEO2_SpecificIPv6Addr = 1048576_u32
  RASEO2_DisableMobility = 2097152_u32
  RASEO2_RequireMachineCertificates = 4194304_u32
  RASEO2_UsePreSharedKeyForIkev2Initiator = 8388608_u32
  RASEO2_UsePreSharedKeyForIkev2Responder = 16777216_u32
  RASEO2_CacheCredentials = 33554432_u32
  RASEO2_AutoTriggerCapable = 67108864_u32
  RASEO2_IsThirdPartyProfile = 134217728_u32
  RASEO2_AuthTypeIsOtp = 268435456_u32
  RASEO2_IsAlwaysOn = 536870912_u32
  RASEO2_IsPrivateNetwork = 1073741824_u32
  RASEO2_PlumbIKEv2TSAsRoutes = 2147483648_u32
  RASNP_NetBEUI = 1_u32
  RASNP_Ipx = 2_u32
  RASNP_Ip = 4_u32
  RASNP_Ipv6 = 8_u32
  RASFP_Ppp = 1_u32
  RASFP_Slip = 2_u32
  RASFP_Ras = 4_u32
  RASDT_Modem = "modem"
  RASDT_Isdn = "isdn"
  RASDT_X25 = "x25"
  RASDT_Vpn = "vpn"
  RASDT_Pad = "pad"
  RASDT_Generic = "GENERIC"
  RASDT_Serial = "SERIAL"
  RASDT_FrameRelay = "FRAMERELAY"
  RASDT_Atm = "ATM"
  RASDT_Sonet = "SONET"
  RASDT_SW56 = "SW56"
  RASDT_Irda = "IRDA"
  RASDT_Parallel = "PARALLEL"
  RASDT_PPPoE = "PPPoE"
  RASET_Phone = 1_u32
  RASET_Vpn = 2_u32
  RASET_Direct = 3_u32
  RASET_Internet = 4_u32
  RASET_Broadband = 5_u32
  RASCN_Connection = 1_u32
  RASCN_Disconnection = 2_u32
  RASCN_BandwidthAdded = 4_u32
  RASCN_BandwidthRemoved = 8_u32
  RASCN_Dormant = 16_u32
  RASCN_ReConnection = 32_u32
  RASCN_EPDGPacketArrival = 64_u32
  RASIDS_Disabled = 4294967295_u32
  RASIDS_UseGlobalValue = 0_u32
  RASADFLG_PositionDlg = 1_u32
  RASCM_UserName = 1_u32
  RASCM_Password = 2_u32
  RASCM_Domain = 4_u32
  RASCM_DefaultCreds = 8_u32
  RASCM_PreSharedKey = 16_u32
  RASCM_ServerPreSharedKey = 32_u32
  RASCM_DDMPreSharedKey = 64_u32
  RASADP_DisableConnectionQuery = 0_u32
  RASADP_LoginSessionDisable = 1_u32
  RASADP_SavedAddressesLimit = 2_u32
  RASADP_FailedConnectionTimeout = 3_u32
  RASADP_ConnectionQueryTimeout = 4_u32
  RASEAPF_NonInteractive = 2_u32
  RASEAPF_Logon = 4_u32
  RASEAPF_Preview = 8_u32
  RCD_SingleUser = 0_u32
  RCD_AllUsers = 1_u32
  RCD_Eap = 2_u32
  RCD_Logon = 4_u32
  RASPBDEVENT_AddEntry = 1_u32
  RASPBDEVENT_EditEntry = 2_u32
  RASPBDEVENT_RemoveEntry = 3_u32
  RASPBDEVENT_DialEntry = 4_u32
  RASPBDEVENT_EditGlobals = 5_u32
  RASPBDEVENT_NoUser = 6_u32
  RASPBDEVENT_NoUserEdit = 7_u32
  RASNOUSER_SmartCard = 1_u32
  RASPBDFLAG_PositionDlg = 1_u32
  RASPBDFLAG_ForceCloseOnDial = 2_u32
  RASPBDFLAG_NoUser = 16_u32
  RASPBDFLAG_UpdateDefaults = 2147483648_u32
  RASEDFLAG_PositionDlg = 1_u32
  RASEDFLAG_NewEntry = 2_u32
  RASEDFLAG_CloneEntry = 4_u32
  RASEDFLAG_NoRename = 8_u32
  RASEDFLAG_ShellOwned = 1073741824_u32
  RASEDFLAG_NewPhoneEntry = 16_u32
  RASEDFLAG_NewTunnelEntry = 32_u32
  RASEDFLAG_NewDirectEntry = 64_u32
  RASEDFLAG_NewBroadbandEntry = 128_u32
  RASEDFLAG_InternetEntry = 256_u32
  RASEDFLAG_NAT = 512_u32
  RASEDFLAG_IncomingConnection = 1024_u32
  RASDDFLAG_PositionDlg = 1_u32
  RASDDFLAG_NoPrompt = 2_u32
  RASDDFLAG_AoacRedial = 4_u32
  RASDDFLAG_LinkFailure = 2147483648_u32
  RRAS_SERVICE_NAME = "RemoteAccess"
  PID_IPX = 43_u32
  PID_IP = 33_u32
  PID_IPV6 = 87_u32
  PID_NBF = 63_u32
  PID_ATALK = 41_u32
  MPR_INTERFACE_OUT_OF_RESOURCES = 1_u32
  MPR_INTERFACE_ADMIN_DISABLED = 2_u32
  MPR_INTERFACE_CONNECTION_FAILURE = 4_u32
  MPR_INTERFACE_SERVICE_PAUSED = 8_u32
  MPR_INTERFACE_DIALOUT_HOURS_RESTRICTION = 16_u32
  MPR_INTERFACE_NO_MEDIA_SENSE = 32_u32
  MPR_INTERFACE_NO_DEVICE = 64_u32
  MPR_MaxDeviceType = 16_u32
  MPR_MaxPhoneNumber = 128_u32
  MPR_MaxIpAddress = 15_u32
  MPR_MaxIpxAddress = 21_u32
  MPR_MaxEntryName = 256_u32
  MPR_MaxDeviceName = 128_u32
  MPR_MaxCallbackNumber = 128_u32
  MPR_MaxAreaCode = 10_u32
  MPR_MaxPadType = 32_u32
  MPR_MaxX25Address = 200_u32
  MPR_MaxFacilities = 200_u32
  MPR_MaxUserData = 200_u32
  MPRIO_SpecificIpAddr = 2_u32
  MPRIO_SpecificNameServers = 4_u32
  MPRIO_IpHeaderCompression = 8_u32
  MPRIO_RemoteDefaultGateway = 16_u32
  MPRIO_DisableLcpExtensions = 32_u32
  MPRIO_SwCompression = 512_u32
  MPRIO_RequireEncryptedPw = 1024_u32
  MPRIO_RequireMsEncryptedPw = 2048_u32
  MPRIO_RequireDataEncryption = 4096_u32
  MPRIO_NetworkLogon = 8192_u32
  MPRIO_PromoteAlternates = 32768_u32
  MPRIO_SecureLocalFiles = 65536_u32
  MPRIO_RequireEAP = 131072_u32
  MPRIO_RequirePAP = 262144_u32
  MPRIO_RequireSPAP = 524288_u32
  MPRIO_SharedPhoneNumbers = 8388608_u32
  MPRIO_RequireCHAP = 134217728_u32
  MPRIO_RequireMsCHAP = 268435456_u32
  MPRIO_RequireMsCHAP2 = 536870912_u32
  MPRIO_IpSecPreSharedKey = 2147483648_u32
  MPRIO_RequireMachineCertificates = 16777216_u32
  MPRIO_UsePreSharedKeyForIkev2Initiator = 33554432_u32
  MPRIO_UsePreSharedKeyForIkev2Responder = 67108864_u32
  MPRNP_Ipx = 2_u32
  MPRNP_Ip = 4_u32
  MPRNP_Ipv6 = 8_u32
  MPRDT_Modem = "modem"
  MPRDT_Isdn = "isdn"
  MPRDT_X25 = "x25"
  MPRDT_Vpn = "vpn"
  MPRDT_Pad = "pad"
  MPRDT_Generic = "GENERIC"
  MPRDT_Serial = "SERIAL"
  MPRDT_FrameRelay = "FRAMERELAY"
  MPRDT_Atm = "ATM"
  MPRDT_Sonet = "SONET"
  MPRDT_SW56 = "SW56"
  MPRDT_Irda = "IRDA"
  MPRDT_Parallel = "PARALLEL"
  MPRET_Phone = 1_u32
  MPRET_Vpn = 2_u32
  MPRET_Direct = 3_u32
  MPRIDS_Disabled = 4294967295_u32
  MPRIDS_UseGlobalValue = 0_u32
  MPR_VS_Ikev2Only = 7_u32
  MPR_VS_Ikev2First = 8_u32
  MPR_ENABLE_RAS_ON_DEVICE = 1_u32
  MPR_ENABLE_ROUTING_ON_DEVICE = 2_u32
  IPADDRESSLEN = 15_u32
  IPXADDRESSLEN = 22_u32
  ATADDRESSLEN = 32_u32
  MAXIPADRESSLEN = 64_u32
  PPP_IPCP_VJ = 1_u32
  PPP_CCP_COMPRESSION = 1_u32
  PPP_CCP_ENCRYPTION40BITOLD = 16_u32
  PPP_CCP_ENCRYPTION40BIT = 32_u32
  PPP_CCP_ENCRYPTION128BIT = 64_u32
  PPP_CCP_ENCRYPTION56BIT = 128_u32
  PPP_CCP_HISTORYLESS = 16777216_u32
  PPP_LCP_MULTILINK_FRAMING = 1_u32
  PPP_LCP_PFC = 2_u32
  PPP_LCP_ACFC = 4_u32
  PPP_LCP_SSHF = 8_u32
  PPP_LCP_DES_56 = 16_u32
  PPP_LCP_3_DES = 32_u32
  PPP_LCP_AES_128 = 64_u32
  PPP_LCP_AES_256 = 128_u32
  PPP_LCP_AES_192 = 256_u32
  PPP_LCP_GCM_AES_128 = 512_u32
  PPP_LCP_GCM_AES_192 = 1024_u32
  PPP_LCP_GCM_AES_256 = 2048_u32
  RAS_FLAGS_RAS_CONNECTION = 4_u32
  RASPRIV_NoCallback = 1_u32
  RASPRIV_AdminSetCallback = 2_u32
  RASPRIV_CallerSetCallback = 4_u32
  RASPRIV_DialinPrivilege = 8_u32
  RASPRIV2_DialinPolicy = 1_u32
  MPRAPI_IKEV2_AUTH_USING_CERT = 1_u32
  MPRAPI_IKEV2_AUTH_USING_EAP = 2_u32
  MPRAPI_PPP_PROJECTION_INFO_TYPE = 1_u32
  MPRAPI_IKEV2_PROJECTION_INFO_TYPE = 2_u32
  MPRAPI_RAS_CONNECTION_OBJECT_REVISION_1 = 1_u32
  MPRAPI_MPR_IF_CUSTOM_CONFIG_OBJECT_REVISION_1 = 1_u32
  MPRAPI_IF_CUSTOM_CONFIG_FOR_IKEV2 = 1_u32
  MPRAPI_MPR_IF_CUSTOM_CONFIG_OBJECT_REVISION_3 = 3_u32
  MPRAPI_MPR_IF_CUSTOM_CONFIG_OBJECT_REVISION_2 = 2_u32
  MPRAPI_IKEV2_SET_TUNNEL_CONFIG_PARAMS = 1_u32
  MPRAPI_L2TP_SET_TUNNEL_CONFIG_PARAMS = 1_u32
  MAX_SSTP_HASH_SIZE = 32_u32
  MPRAPI_MPR_SERVER_OBJECT_REVISION_1 = 1_u32
  MPRAPI_MPR_SERVER_OBJECT_REVISION_2 = 2_u32
  MPRAPI_MPR_SERVER_OBJECT_REVISION_3 = 3_u32
  MPRAPI_MPR_SERVER_OBJECT_REVISION_4 = 4_u32
  MPRAPI_MPR_SERVER_OBJECT_REVISION_5 = 5_u32
  MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_1 = 1_u32
  MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_2 = 2_u32
  MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_3 = 3_u32
  MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_4 = 4_u32
  MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_5 = 5_u32
  MPRAPI_SET_CONFIG_PROTOCOL_FOR_PPTP = 1_u32
  MPRAPI_SET_CONFIG_PROTOCOL_FOR_L2TP = 2_u32
  MPRAPI_SET_CONFIG_PROTOCOL_FOR_SSTP = 4_u32
  MPRAPI_SET_CONFIG_PROTOCOL_FOR_IKEV2 = 8_u32
  MPRAPI_SET_CONFIG_PROTOCOL_FOR_GRE = 16_u32
  ALLOW_NO_AUTH = 1_u32
  DO_NOT_ALLOW_NO_AUTH = 0_u32
  MPRAPI_RAS_UPDATE_CONNECTION_OBJECT_REVISION_1 = 1_u32
  MPRAPI_ADMIN_DLL_VERSION_1 = 1_u32
  MPRAPI_ADMIN_DLL_VERSION_2 = 2_u32
  MGM_JOIN_STATE_FLAG = 1_u32
  MGM_FORWARD_STATE_FLAG = 2_u32
  MGM_MFE_STATS_0 = 1_u32
  MGM_MFE_STATS_1 = 2_u32
  RTM_MAX_ADDRESS_SIZE = 16_u32
  RTM_MAX_VIEWS = 32_u32
  RTM_VIEW_ID_UCAST = 0_u32
  RTM_VIEW_ID_MCAST = 1_u32
  RTM_VIEW_MASK_SIZE = 32_u32
  RTM_VIEW_MASK_NONE = 0_u32
  RTM_VIEW_MASK_ANY = 0_u32
  RTM_VIEW_MASK_UCAST = 1_u32
  RTM_VIEW_MASK_MCAST = 2_u32
  RTM_VIEW_MASK_ALL = 4294967295_u32
  IPV6_ADDRESS_LEN_IN_BYTES = 16_u32
  RTM_DEST_FLAG_NATURAL_NET = 1_u32
  RTM_DEST_FLAG_FWD_ENGIN_ADD = 2_u32
  RTM_DEST_FLAG_DONT_FORWARD = 4_u32
  RTM_ROUTE_STATE_CREATED = 0_u32
  RTM_ROUTE_STATE_DELETING = 1_u32
  RTM_ROUTE_STATE_DELETED = 2_u32
  RTM_ROUTE_FLAGS_MARTIAN = 1_u32
  RTM_ROUTE_FLAGS_BLACKHOLE = 2_u32
  RTM_ROUTE_FLAGS_DISCARD = 4_u32
  RTM_ROUTE_FLAGS_INACTIVE = 8_u32
  RTM_ROUTE_FLAGS_LOCAL = 16_u32
  RTM_ROUTE_FLAGS_REMOTE = 32_u32
  RTM_ROUTE_FLAGS_MYSELF = 64_u32
  RTM_ROUTE_FLAGS_LOOPBACK = 128_u32
  RTM_ROUTE_FLAGS_MCAST = 256_u32
  RTM_ROUTE_FLAGS_LOCAL_MCAST = 512_u32
  RTM_ROUTE_FLAGS_LIMITED_BC = 1024_u32
  RTM_ROUTE_FLAGS_ZEROS_NETBC = 4096_u32
  RTM_ROUTE_FLAGS_ZEROS_SUBNETBC = 8192_u32
  RTM_ROUTE_FLAGS_ONES_NETBC = 16384_u32
  RTM_ROUTE_FLAGS_ONES_SUBNETBC = 32768_u32
  RTM_NEXTHOP_STATE_CREATED = 0_u32
  RTM_NEXTHOP_STATE_DELETED = 1_u32
  RTM_NEXTHOP_FLAGS_REMOTE = 1_u32
  RTM_NEXTHOP_FLAGS_DOWN = 2_u32
  METHOD_TYPE_ALL_METHODS = 4294967295_u32
  METHOD_RIP2_NEIGHBOUR_ADDR = 1_u32
  METHOD_RIP2_OUTBOUND_INTF = 2_u32
  METHOD_RIP2_ROUTE_TAG = 4_u32
  METHOD_RIP2_ROUTE_TIMESTAMP = 8_u32
  METHOD_BGP4_AS_PATH = 1_u32
  METHOD_BGP4_PEER_ID = 2_u32
  METHOD_BGP4_PA_ORIGIN = 4_u32
  METHOD_BGP4_NEXTHOP_ATTR = 8_u32
  RTM_RESUME_METHODS = 0_u32
  RTM_BLOCK_METHODS = 1_u32
  RTM_ROUTE_CHANGE_FIRST = 1_u32
  RTM_ROUTE_CHANGE_NEW = 2_u32
  RTM_ROUTE_CHANGE_BEST = 65536_u32
  RTM_NEXTHOP_CHANGE_NEW = 1_u32
  RTM_MATCH_NONE = 0_u32
  RTM_MATCH_OWNER = 1_u32
  RTM_MATCH_NEIGHBOUR = 2_u32
  RTM_MATCH_PREF = 4_u32
  RTM_MATCH_NEXTHOP = 8_u32
  RTM_MATCH_INTERFACE = 16_u32
  RTM_MATCH_FULL = 65535_u32
  RTM_ENUM_START = 0_u32
  RTM_ENUM_NEXT = 1_u32
  RTM_ENUM_RANGE = 2_u32
  RTM_ENUM_ALL_DESTS = 0_u32
  RTM_ENUM_OWN_DESTS = 16777216_u32
  RTM_ENUM_ALL_ROUTES = 0_u32
  RTM_ENUM_OWN_ROUTES = 65536_u32
  RTM_NUM_CHANGE_TYPES = 3_u32
  RTM_CHANGE_TYPE_ALL = 1_u32
  RTM_CHANGE_TYPE_BEST = 2_u32
  RTM_CHANGE_TYPE_FORWARDING = 4_u32
  RTM_NOTIFY_ONLY_MARKED_DESTS = 65536_u32
  RASBASE = 600_u32
  PENDING = 600_u32
  ERROR_INVALID_PORT_HANDLE = 601_u32
  ERROR_PORT_ALREADY_OPEN = 602_u32
  ERROR_BUFFER_TOO_SMALL = 603_u32
  ERROR_WRONG_INFO_SPECIFIED = 604_u32
  ERROR_CANNOT_SET_PORT_INFO = 605_u32
  ERROR_PORT_NOT_CONNECTED = 606_u32
  ERROR_EVENT_INVALID = 607_u32
  ERROR_DEVICE_DOES_NOT_EXIST = 608_u32
  ERROR_DEVICETYPE_DOES_NOT_EXIST = 609_u32
  ERROR_BUFFER_INVALID = 610_u32
  ERROR_ROUTE_NOT_AVAILABLE = 611_u32
  ERROR_ROUTE_NOT_ALLOCATED = 612_u32
  ERROR_INVALID_COMPRESSION_SPECIFIED = 613_u32
  ERROR_OUT_OF_BUFFERS = 614_u32
  ERROR_PORT_NOT_FOUND = 615_u32
  ERROR_ASYNC_REQUEST_PENDING = 616_u32
  ERROR_ALREADY_DISCONNECTING = 617_u32
  ERROR_PORT_NOT_OPEN = 618_u32
  ERROR_PORT_DISCONNECTED = 619_u32
  ERROR_NO_ENDPOINTS = 620_u32
  ERROR_CANNOT_OPEN_PHONEBOOK = 621_u32
  ERROR_CANNOT_LOAD_PHONEBOOK = 622_u32
  ERROR_CANNOT_FIND_PHONEBOOK_ENTRY = 623_u32
  ERROR_CANNOT_WRITE_PHONEBOOK = 624_u32
  ERROR_CORRUPT_PHONEBOOK = 625_u32
  ERROR_CANNOT_LOAD_STRING = 626_u32
  ERROR_KEY_NOT_FOUND = 627_u32
  ERROR_DISCONNECTION = 628_u32
  ERROR_REMOTE_DISCONNECTION = 629_u32
  ERROR_HARDWARE_FAILURE = 630_u32
  ERROR_USER_DISCONNECTION = 631_u32
  ERROR_INVALID_SIZE = 632_u32
  ERROR_PORT_NOT_AVAILABLE = 633_u32
  ERROR_CANNOT_PROJECT_CLIENT = 634_u32
  ERROR_UNKNOWN = 635_u32
  ERROR_WRONG_DEVICE_ATTACHED = 636_u32
  ERROR_BAD_STRING = 637_u32
  ERROR_REQUEST_TIMEOUT = 638_u32
  ERROR_CANNOT_GET_LANA = 639_u32
  ERROR_NETBIOS_ERROR = 640_u32
  ERROR_SERVER_OUT_OF_RESOURCES = 641_u32
  ERROR_NAME_EXISTS_ON_NET = 642_u32
  ERROR_SERVER_GENERAL_NET_FAILURE = 643_u32
  WARNING_MSG_ALIAS_NOT_ADDED = 644_u32
  ERROR_AUTH_INTERNAL = 645_u32
  ERROR_RESTRICTED_LOGON_HOURS = 646_u32
  ERROR_ACCT_DISABLED = 647_u32
  ERROR_PASSWD_EXPIRED = 648_u32
  ERROR_NO_DIALIN_PERMISSION = 649_u32
  ERROR_SERVER_NOT_RESPONDING = 650_u32
  ERROR_FROM_DEVICE = 651_u32
  ERROR_UNRECOGNIZED_RESPONSE = 652_u32
  ERROR_MACRO_NOT_FOUND = 653_u32
  ERROR_MACRO_NOT_DEFINED = 654_u32
  ERROR_MESSAGE_MACRO_NOT_FOUND = 655_u32
  ERROR_DEFAULTOFF_MACRO_NOT_FOUND = 656_u32
  ERROR_FILE_COULD_NOT_BE_OPENED = 657_u32
  ERROR_DEVICENAME_TOO_LONG = 658_u32
  ERROR_DEVICENAME_NOT_FOUND = 659_u32
  ERROR_NO_RESPONSES = 660_u32
  ERROR_NO_COMMAND_FOUND = 661_u32
  ERROR_WRONG_KEY_SPECIFIED = 662_u32
  ERROR_UNKNOWN_DEVICE_TYPE = 663_u32
  ERROR_ALLOCATING_MEMORY = 664_u32
  ERROR_PORT_NOT_CONFIGURED = 665_u32
  ERROR_DEVICE_NOT_READY = 666_u32
  ERROR_READING_INI_FILE = 667_u32
  ERROR_NO_CONNECTION = 668_u32
  ERROR_BAD_USAGE_IN_INI_FILE = 669_u32
  ERROR_READING_SECTIONNAME = 670_u32
  ERROR_READING_DEVICETYPE = 671_u32
  ERROR_READING_DEVICENAME = 672_u32
  ERROR_READING_USAGE = 673_u32
  ERROR_READING_MAXCONNECTBPS = 674_u32
  ERROR_READING_MAXCARRIERBPS = 675_u32
  ERROR_LINE_BUSY = 676_u32
  ERROR_VOICE_ANSWER = 677_u32
  ERROR_NO_ANSWER = 678_u32
  ERROR_NO_CARRIER = 679_u32
  ERROR_NO_DIALTONE = 680_u32
  ERROR_IN_COMMAND = 681_u32
  ERROR_WRITING_SECTIONNAME = 682_u32
  ERROR_WRITING_DEVICETYPE = 683_u32
  ERROR_WRITING_DEVICENAME = 684_u32
  ERROR_WRITING_MAXCONNECTBPS = 685_u32
  ERROR_WRITING_MAXCARRIERBPS = 686_u32
  ERROR_WRITING_USAGE = 687_u32
  ERROR_WRITING_DEFAULTOFF = 688_u32
  ERROR_READING_DEFAULTOFF = 689_u32
  ERROR_EMPTY_INI_FILE = 690_u32
  ERROR_AUTHENTICATION_FAILURE = 691_u32
  ERROR_PORT_OR_DEVICE = 692_u32
  ERROR_NOT_BINARY_MACRO = 693_u32
  ERROR_DCB_NOT_FOUND = 694_u32
  ERROR_STATE_MACHINES_NOT_STARTED = 695_u32
  ERROR_STATE_MACHINES_ALREADY_STARTED = 696_u32
  ERROR_PARTIAL_RESPONSE_LOOPING = 697_u32
  ERROR_UNKNOWN_RESPONSE_KEY = 698_u32
  ERROR_RECV_BUF_FULL = 699_u32
  ERROR_CMD_TOO_LONG = 700_u32
  ERROR_UNSUPPORTED_BPS = 701_u32
  ERROR_UNEXPECTED_RESPONSE = 702_u32
  ERROR_INTERACTIVE_MODE = 703_u32
  ERROR_BAD_CALLBACK_NUMBER = 704_u32
  ERROR_INVALID_AUTH_STATE = 705_u32
  ERROR_WRITING_INITBPS = 706_u32
  ERROR_X25_DIAGNOSTIC = 707_u32
  ERROR_ACCT_EXPIRED = 708_u32
  ERROR_CHANGING_PASSWORD = 709_u32
  ERROR_OVERRUN = 710_u32
  ERROR_RASMAN_CANNOT_INITIALIZE = 711_u32
  ERROR_BIPLEX_PORT_NOT_AVAILABLE = 712_u32
  ERROR_NO_ACTIVE_ISDN_LINES = 713_u32
  ERROR_NO_ISDN_CHANNELS_AVAILABLE = 714_u32
  ERROR_TOO_MANY_LINE_ERRORS = 715_u32
  ERROR_IP_CONFIGURATION = 716_u32
  ERROR_NO_IP_ADDRESSES = 717_u32
  ERROR_PPP_TIMEOUT = 718_u32
  ERROR_PPP_REMOTE_TERMINATED = 719_u32
  ERROR_PPP_NO_PROTOCOLS_CONFIGURED = 720_u32
  ERROR_PPP_NO_RESPONSE = 721_u32
  ERROR_PPP_INVALID_PACKET = 722_u32
  ERROR_PHONE_NUMBER_TOO_LONG = 723_u32
  ERROR_IPXCP_NO_DIALOUT_CONFIGURED = 724_u32
  ERROR_IPXCP_NO_DIALIN_CONFIGURED = 725_u32
  ERROR_IPXCP_DIALOUT_ALREADY_ACTIVE = 726_u32
  ERROR_ACCESSING_TCPCFGDLL = 727_u32
  ERROR_NO_IP_RAS_ADAPTER = 728_u32
  ERROR_SLIP_REQUIRES_IP = 729_u32
  ERROR_PROJECTION_NOT_COMPLETE = 730_u32
  ERROR_PROTOCOL_NOT_CONFIGURED = 731_u32
  ERROR_PPP_NOT_CONVERGING = 732_u32
  ERROR_PPP_CP_REJECTED = 733_u32
  ERROR_PPP_LCP_TERMINATED = 734_u32
  ERROR_PPP_REQUIRED_ADDRESS_REJECTED = 735_u32
  ERROR_PPP_NCP_TERMINATED = 736_u32
  ERROR_PPP_LOOPBACK_DETECTED = 737_u32
  ERROR_PPP_NO_ADDRESS_ASSIGNED = 738_u32
  ERROR_CANNOT_USE_LOGON_CREDENTIALS = 739_u32
  ERROR_TAPI_CONFIGURATION = 740_u32
  ERROR_NO_LOCAL_ENCRYPTION = 741_u32
  ERROR_NO_REMOTE_ENCRYPTION = 742_u32
  ERROR_REMOTE_REQUIRES_ENCRYPTION = 743_u32
  ERROR_IPXCP_NET_NUMBER_CONFLICT = 744_u32
  ERROR_INVALID_SMM = 745_u32
  ERROR_SMM_UNINITIALIZED = 746_u32
  ERROR_NO_MAC_FOR_PORT = 747_u32
  ERROR_SMM_TIMEOUT = 748_u32
  ERROR_BAD_PHONE_NUMBER = 749_u32
  ERROR_WRONG_MODULE = 750_u32
  ERROR_INVALID_CALLBACK_NUMBER = 751_u32
  ERROR_SCRIPT_SYNTAX = 752_u32
  ERROR_HANGUP_FAILED = 753_u32
  ERROR_BUNDLE_NOT_FOUND = 754_u32
  ERROR_CANNOT_DO_CUSTOMDIAL = 755_u32
  ERROR_DIAL_ALREADY_IN_PROGRESS = 756_u32
  ERROR_RASAUTO_CANNOT_INITIALIZE = 757_u32
  ERROR_CONNECTION_ALREADY_SHARED = 758_u32
  ERROR_SHARING_CHANGE_FAILED = 759_u32
  ERROR_SHARING_ROUTER_INSTALL = 760_u32
  ERROR_SHARE_CONNECTION_FAILED = 761_u32
  ERROR_SHARING_PRIVATE_INSTALL = 762_u32
  ERROR_CANNOT_SHARE_CONNECTION = 763_u32
  ERROR_NO_SMART_CARD_READER = 764_u32
  ERROR_SHARING_ADDRESS_EXISTS = 765_u32
  ERROR_NO_CERTIFICATE = 766_u32
  ERROR_SHARING_MULTIPLE_ADDRESSES = 767_u32
  ERROR_FAILED_TO_ENCRYPT = 768_u32
  ERROR_BAD_ADDRESS_SPECIFIED = 769_u32
  ERROR_CONNECTION_REJECT = 770_u32
  ERROR_CONGESTION = 771_u32
  ERROR_INCOMPATIBLE = 772_u32
  ERROR_NUMBERCHANGED = 773_u32
  ERROR_TEMPFAILURE = 774_u32
  ERROR_BLOCKED = 775_u32
  ERROR_DONOTDISTURB = 776_u32
  ERROR_OUTOFORDER = 777_u32
  ERROR_UNABLE_TO_AUTHENTICATE_SERVER = 778_u32
  ERROR_SMART_CARD_REQUIRED = 779_u32
  ERROR_INVALID_FUNCTION_FOR_ENTRY = 780_u32
  ERROR_CERT_FOR_ENCRYPTION_NOT_FOUND = 781_u32
  ERROR_SHARING_RRAS_CONFLICT = 782_u32
  ERROR_SHARING_NO_PRIVATE_LAN = 783_u32
  ERROR_NO_DIFF_USER_AT_LOGON = 784_u32
  ERROR_NO_REG_CERT_AT_LOGON = 785_u32
  ERROR_OAKLEY_NO_CERT = 786_u32
  ERROR_OAKLEY_AUTH_FAIL = 787_u32
  ERROR_OAKLEY_ATTRIB_FAIL = 788_u32
  ERROR_OAKLEY_GENERAL_PROCESSING = 789_u32
  ERROR_OAKLEY_NO_PEER_CERT = 790_u32
  ERROR_OAKLEY_NO_POLICY = 791_u32
  ERROR_OAKLEY_TIMED_OUT = 792_u32
  ERROR_OAKLEY_ERROR = 793_u32
  ERROR_UNKNOWN_FRAMED_PROTOCOL = 794_u32
  ERROR_WRONG_TUNNEL_TYPE = 795_u32
  ERROR_UNKNOWN_SERVICE_TYPE = 796_u32
  ERROR_CONNECTING_DEVICE_NOT_FOUND = 797_u32
  ERROR_NO_EAPTLS_CERTIFICATE = 798_u32
  ERROR_SHARING_HOST_ADDRESS_CONFLICT = 799_u32
  ERROR_AUTOMATIC_VPN_FAILED = 800_u32
  ERROR_VALIDATING_SERVER_CERT = 801_u32
  ERROR_READING_SCARD = 802_u32
  ERROR_INVALID_PEAP_COOKIE_CONFIG = 803_u32
  ERROR_INVALID_PEAP_COOKIE_USER = 804_u32
  ERROR_INVALID_MSCHAPV2_CONFIG = 805_u32
  ERROR_VPN_GRE_BLOCKED = 806_u32
  ERROR_VPN_DISCONNECT = 807_u32
  ERROR_VPN_REFUSED = 808_u32
  ERROR_VPN_TIMEOUT = 809_u32
  ERROR_VPN_BAD_CERT = 810_u32
  ERROR_VPN_BAD_PSK = 811_u32
  ERROR_SERVER_POLICY = 812_u32
  ERROR_BROADBAND_ACTIVE = 813_u32
  ERROR_BROADBAND_NO_NIC = 814_u32
  ERROR_BROADBAND_TIMEOUT = 815_u32
  ERROR_FEATURE_DEPRECATED = 816_u32
  ERROR_CANNOT_DELETE = 817_u32
  ERROR_RASQEC_RESOURCE_CREATION_FAILED = 818_u32
  ERROR_RASQEC_NAPAGENT_NOT_ENABLED = 819_u32
  ERROR_RASQEC_NAPAGENT_NOT_CONNECTED = 820_u32
  ERROR_RASQEC_CONN_DOESNOTEXIST = 821_u32
  ERROR_RASQEC_TIMEOUT = 822_u32
  ERROR_PEAP_CRYPTOBINDING_INVALID = 823_u32
  ERROR_PEAP_CRYPTOBINDING_NOTRECEIVED = 824_u32
  ERROR_INVALID_VPNSTRATEGY = 825_u32
  ERROR_EAPTLS_CACHE_CREDENTIALS_INVALID = 826_u32
  ERROR_IPSEC_SERVICE_STOPPED = 827_u32
  ERROR_IDLE_TIMEOUT = 828_u32
  ERROR_LINK_FAILURE = 829_u32
  ERROR_USER_LOGOFF = 830_u32
  ERROR_FAST_USER_SWITCH = 831_u32
  ERROR_HIBERNATION = 832_u32
  ERROR_SYSTEM_SUSPENDED = 833_u32
  ERROR_RASMAN_SERVICE_STOPPED = 834_u32
  ERROR_INVALID_SERVER_CERT = 835_u32
  ERROR_NOT_NAP_CAPABLE = 836_u32
  ERROR_INVALID_TUNNELID = 837_u32
  ERROR_UPDATECONNECTION_REQUEST_IN_PROCESS = 838_u32
  ERROR_PROTOCOL_ENGINE_DISABLED = 839_u32
  ERROR_INTERNAL_ADDRESS_FAILURE = 840_u32
  ERROR_FAILED_CP_REQUIRED = 841_u32
  ERROR_TS_UNACCEPTABLE = 842_u32
  ERROR_MOBIKE_DISABLED = 843_u32
  ERROR_CANNOT_INITIATE_MOBIKE_UPDATE = 844_u32
  ERROR_PEAP_SERVER_REJECTED_CLIENT_TLV = 845_u32
  ERROR_INVALID_PREFERENCES = 846_u32
  ERROR_EAPTLS_SCARD_CACHE_CREDENTIALS_INVALID = 847_u32
  ERROR_SSTP_COOKIE_SET_FAILURE = 848_u32
  ERROR_INVALID_PEAP_COOKIE_ATTRIBUTES = 849_u32
  ERROR_EAP_METHOD_NOT_INSTALLED = 850_u32
  ERROR_EAP_METHOD_DOES_NOT_SUPPORT_SSO = 851_u32
  ERROR_EAP_METHOD_OPERATION_NOT_SUPPORTED = 852_u32
  ERROR_EAP_USER_CERT_INVALID = 853_u32
  ERROR_EAP_USER_CERT_EXPIRED = 854_u32
  ERROR_EAP_USER_CERT_REVOKED = 855_u32
  ERROR_EAP_USER_CERT_OTHER_ERROR = 856_u32
  ERROR_EAP_SERVER_CERT_INVALID = 857_u32
  ERROR_EAP_SERVER_CERT_EXPIRED = 858_u32
  ERROR_EAP_SERVER_CERT_REVOKED = 859_u32
  ERROR_EAP_SERVER_CERT_OTHER_ERROR = 860_u32
  ERROR_EAP_USER_ROOT_CERT_NOT_FOUND = 861_u32
  ERROR_EAP_USER_ROOT_CERT_INVALID = 862_u32
  ERROR_EAP_USER_ROOT_CERT_EXPIRED = 863_u32
  ERROR_EAP_SERVER_ROOT_CERT_NOT_FOUND = 864_u32
  ERROR_EAP_SERVER_ROOT_CERT_INVALID = 865_u32
  ERROR_EAP_SERVER_ROOT_CERT_NAME_REQUIRED = 866_u32
  ERROR_PEAP_IDENTITY_MISMATCH = 867_u32
  ERROR_DNSNAME_NOT_RESOLVABLE = 868_u32
  ERROR_EAPTLS_PASSWD_INVALID = 869_u32
  ERROR_IKEV2_PSK_INTERFACE_ALREADY_EXISTS = 870_u32
  ERROR_INVALID_DESTINATION_IP = 871_u32
  ERROR_INVALID_INTERFACE_CONFIG = 872_u32
  ERROR_VPN_PLUGIN_GENERIC = 873_u32
  ERROR_SSO_CERT_MISSING = 874_u32
  ERROR_DEVICE_COMPLIANCE = 875_u32
  ERROR_PLUGIN_NOT_INSTALLED = 876_u32
  ERROR_ACTION_REQUIRED = 877_u32
  RASBASEEND = 877_u32

  enum MPR_INTERFACE_DIAL_MODE : UInt32
    MPRDM_DialFirst = 0_u32
    MPRDM_DialAll = 1_u32
    MPRDM_DialAsNeeded = 2_u32
  end
  enum RASENTRY_DIAL_MODE : UInt32
    RASEDM_DialAll = 1_u32
    RASEDM_DialAsNeeded = 2_u32
  end
  enum RAS_FLAGS : UInt32
    RAS_FLAGS_PPP_CONNECTION = 1_u32
    RAS_FLAGS_MESSENGER_PRESENT = 2_u32
    RAS_FLAGS_QUARANTINE_PRESENT = 8_u32
    RAS_FLAGS_ARAP_CONNECTION = 16_u32
    RAS_FLAGS_IKEV2_CONNECTION = 16_u32
    RAS_FLAGS_DORMANT = 32_u32
  end
  enum MPR_ET : UInt32
    MPR_ET_None = 0_u32
    MPR_ET_Require = 1_u32
    MPR_ET_RequireMax = 2_u32
    MPR_ET_Optional = 3_u32
  end
  enum RASPPP_PROJECTION_INFO_SERVER_AUTH_DATA : UInt32
    RASLCPAD_CHAP_MD5 = 5_u32
    RASLCPAD_CHAP_MS = 128_u32
    RASLCPAD_CHAP_MSV2 = 129_u32
  end
  enum PPP_LCP : UInt32
    PPP_LCP_PAP = 49187_u32
    PPP_LCP_CHAP = 49699_u32
    PPP_LCP_EAP = 49703_u32
    PPP_LCP_SPAP = 49191_u32
  end
  enum RASPPP_PROJECTION_INFO_SERVER_AUTH_PROTOCOL : UInt32
    RASLCPAP_PAP = 49187_u32
    RASLCPAP_SPAP = 49191_u32
    RASLCPAP_CHAP = 49699_u32
    RASLCPAP_EAP = 49703_u32
  end
  enum PPP_LCP_INFO_AUTH_DATA : UInt32
    PPP_LCP_CHAP_MD5 = 5_u32
    PPP_LCP_CHAP_MS = 128_u32
    PPP_LCP_CHAP_MSV2 = 129_u32
  end
  @[Flags]
  enum RASIKEV_PROJECTION_INFO_FLAGS : UInt32
    RASIKEv2_FLAGS_MOBIKESUPPORTED = 1_u32
    RASIKEv2_FLAGS_BEHIND_NAT = 2_u32
    RASIKEv2_FLAGS_SERVERBEHIND_NAT = 4_u32
  end
  enum MPR_VS : UInt32
    MPR_VS_Default = 0_u32
    MPR_VS_PptpOnly = 1_u32
    MPR_VS_PptpFirst = 2_u32
    MPR_VS_L2tpOnly = 3_u32
    MPR_VS_L2tpFirst = 4_u32
  end
  enum SECURITY_MESSAGE_MSG_ID : UInt32
    SECURITYMSG_SUCCESS = 1_u32
    SECURITYMSG_FAILURE = 2_u32
    SECURITYMSG_ERROR = 3_u32
  end
  enum RASAPIVERSION
    RASAPIVERSION_500 = 1_i32
    RASAPIVERSION_501 = 2_i32
    RASAPIVERSION_600 = 3_i32
    RASAPIVERSION_601 = 4_i32
  end
  enum RASCONNSTATE
    RASCS_OpenPort = 0_i32
    RASCS_PortOpened = 1_i32
    RASCS_ConnectDevice = 2_i32
    RASCS_DeviceConnected = 3_i32
    RASCS_AllDevicesConnected = 4_i32
    RASCS_Authenticate = 5_i32
    RASCS_AuthNotify = 6_i32
    RASCS_AuthRetry = 7_i32
    RASCS_AuthCallback = 8_i32
    RASCS_AuthChangePassword = 9_i32
    RASCS_AuthProject = 10_i32
    RASCS_AuthLinkSpeed = 11_i32
    RASCS_AuthAck = 12_i32
    RASCS_ReAuthenticate = 13_i32
    RASCS_Authenticated = 14_i32
    RASCS_PrepareForCallback = 15_i32
    RASCS_WaitForModemReset = 16_i32
    RASCS_WaitForCallback = 17_i32
    RASCS_Projected = 18_i32
    RASCS_StartAuthentication = 19_i32
    RASCS_CallbackComplete = 20_i32
    RASCS_LogonNetwork = 21_i32
    RASCS_SubEntryConnected = 22_i32
    RASCS_SubEntryDisconnected = 23_i32
    RASCS_ApplySettings = 24_i32
    RASCS_Interactive = 4096_i32
    RASCS_RetryAuthentication = 4097_i32
    RASCS_CallbackSetByCaller = 4098_i32
    RASCS_PasswordExpired = 4099_i32
    RASCS_InvokeEapUI = 4100_i32
    RASCS_Connected = 8192_i32
    RASCS_Disconnected = 8193_i32
  end
  enum RASCONNSUBSTATE
    RASCSS_None = 0_i32
    RASCSS_Dormant = 1_i32
    RASCSS_Reconnecting = 2_i32
    RASCSS_Reconnected = 8192_i32
  end
  enum RASPROJECTION
    RASP_Amb = 65536_i32
    RASP_PppNbf = 32831_i32
    RASP_PppIpx = 32811_i32
    RASP_PppIp = 32801_i32
    RASP_PppCcp = 33021_i32
    RASP_PppLcp = 49185_i32
    RASP_PppIpv6 = 32855_i32
  end
  enum RASPROJECTION_INFO_TYPE
    PROJECTION_INFO_TYPE_PPP = 1_i32
    PROJECTION_INFO_TYPE_IKEv2 = 2_i32
  end
  enum IKEV2_ID_PAYLOAD_TYPE
    IKEV2_ID_PAYLOAD_TYPE_INVALID = 0_i32
    IKEV2_ID_PAYLOAD_TYPE_IPV4_ADDR = 1_i32
    IKEV2_ID_PAYLOAD_TYPE_FQDN = 2_i32
    IKEV2_ID_PAYLOAD_TYPE_RFC822_ADDR = 3_i32
    IKEV2_ID_PAYLOAD_TYPE_RESERVED1 = 4_i32
    IKEV2_ID_PAYLOAD_TYPE_ID_IPV6_ADDR = 5_i32
    IKEV2_ID_PAYLOAD_TYPE_RESERVED2 = 6_i32
    IKEV2_ID_PAYLOAD_TYPE_RESERVED3 = 7_i32
    IKEV2_ID_PAYLOAD_TYPE_RESERVED4 = 8_i32
    IKEV2_ID_PAYLOAD_TYPE_DER_ASN1_DN = 9_i32
    IKEV2_ID_PAYLOAD_TYPE_DER_ASN1_GN = 10_i32
    IKEV2_ID_PAYLOAD_TYPE_KEY_ID = 11_i32
    IKEV2_ID_PAYLOAD_TYPE_MAX = 12_i32
  end
  enum ROUTER_INTERFACE_TYPE
    ROUTER_IF_TYPE_CLIENT = 0_i32
    ROUTER_IF_TYPE_HOME_ROUTER = 1_i32
    ROUTER_IF_TYPE_FULL_ROUTER = 2_i32
    ROUTER_IF_TYPE_DEDICATED = 3_i32
    ROUTER_IF_TYPE_INTERNAL = 4_i32
    ROUTER_IF_TYPE_LOOPBACK = 5_i32
    ROUTER_IF_TYPE_TUNNEL1 = 6_i32
    ROUTER_IF_TYPE_DIALOUT = 7_i32
    ROUTER_IF_TYPE_MAX = 8_i32
  end
  enum ROUTER_CONNECTION_STATE
    ROUTER_IF_STATE_UNREACHABLE = 0_i32
    ROUTER_IF_STATE_DISCONNECTED = 1_i32
    ROUTER_IF_STATE_CONNECTING = 2_i32
    ROUTER_IF_STATE_CONNECTED = 3_i32
  end
  enum RAS_PORT_CONDITION
    RAS_PORT_NON_OPERATIONAL = 0_i32
    RAS_PORT_DISCONNECTED = 1_i32
    RAS_PORT_CALLING_BACK = 2_i32
    RAS_PORT_LISTENING = 3_i32
    RAS_PORT_AUTHENTICATING = 4_i32
    RAS_PORT_AUTHENTICATED = 5_i32
    RAS_PORT_INITIALIZING = 6_i32
  end
  enum RAS_HARDWARE_CONDITION
    RAS_HARDWARE_OPERATIONAL = 0_i32
    RAS_HARDWARE_FAILURE = 1_i32
  end
  enum RAS_QUARANTINE_STATE
    RAS_QUAR_STATE_NORMAL = 0_i32
    RAS_QUAR_STATE_QUARANTINE = 1_i32
    RAS_QUAR_STATE_PROBATION = 2_i32
    RAS_QUAR_STATE_NOT_CAPABLE = 3_i32
  end
  enum MPRAPI_OBJECT_TYPE
    MPRAPI_OBJECT_TYPE_RAS_CONNECTION_OBJECT = 1_i32
    MPRAPI_OBJECT_TYPE_MPR_SERVER_OBJECT = 2_i32
    MPRAPI_OBJECT_TYPE_MPR_SERVER_SET_CONFIG_OBJECT = 3_i32
    MPRAPI_OBJECT_TYPE_AUTH_VALIDATION_OBJECT = 4_i32
    MPRAPI_OBJECT_TYPE_UPDATE_CONNECTION_OBJECT = 5_i32
    MPRAPI_OBJECT_TYPE_IF_CUSTOM_CONFIG_OBJECT = 6_i32
  end
  enum MPR_VPN_TS_TYPE
    MPR_VPN_TS_IPv4_ADDR_RANGE = 7_i32
    MPR_VPN_TS_IPv6_ADDR_RANGE = 8_i32
  end
  enum MGM_ENUM_TYPES
    ANY_SOURCE = 0_i32
    ALL_SOURCES = 1_i32
  end
  enum RTM_EVENT_TYPE
    RTM_ENTITY_REGISTERED = 0_i32
    RTM_ENTITY_DEREGISTERED = 1_i32
    RTM_ROUTE_EXPIRED = 2_i32
    RTM_CHANGE_NOTIFICATION = 3_i32
  end

  @[Extern]
  struct RASIPADDR
    property a : UInt8
    property b : UInt8
    property c : UInt8
    property d : UInt8
    def initialize(@a : UInt8, @b : UInt8, @c : UInt8, @d : UInt8)
    end
  end

  @[Extern]
  struct RASTUNNELENDPOINT
    property dwType : UInt32
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property ipv4 : Win32cr::Networking::WinSock::IN_ADDR
    property ipv6 : Win32cr::Networking::WinSock::IN6_ADDR
    def initialize(@ipv4 : Win32cr::Networking::WinSock::IN_ADDR, @ipv6 : Win32cr::Networking::WinSock::IN6_ADDR)
    end
    end

    def initialize(@dwType : UInt32, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct RASCONNW
    property dwSize : UInt32
    property hrasconn : Win32cr::NetworkManagement::Rras::HRASCONN
    property szEntryName : UInt16[257]
    property szDeviceType : UInt16[17]
    property szDeviceName : UInt16[129]
    property szPhonebook : UInt16[260]
    property dwSubEntry : UInt32
    property guidEntry : LibC::GUID
    property dwFlags : UInt32
    property luid : Win32cr::Foundation::LUID
    property guidCorrelationId : LibC::GUID
    def initialize(@dwSize : UInt32, @hrasconn : Win32cr::NetworkManagement::Rras::HRASCONN, @szEntryName : UInt16[257], @szDeviceType : UInt16[17], @szDeviceName : UInt16[129], @szPhonebook : UInt16[260], @dwSubEntry : UInt32, @guidEntry : LibC::GUID, @dwFlags : UInt32, @luid : Win32cr::Foundation::LUID, @guidCorrelationId : LibC::GUID)
    end
  end

  @[Extern]
  struct RASCONNA
    property dwSize : UInt32
    property hrasconn : Win32cr::NetworkManagement::Rras::HRASCONN
    property szEntryName : Win32cr::Foundation::CHAR[257]
    property szDeviceType : Win32cr::Foundation::CHAR[17]
    property szDeviceName : Win32cr::Foundation::CHAR[129]
    property szPhonebook : Win32cr::Foundation::CHAR[260]
    property dwSubEntry : UInt32
    property guidEntry : LibC::GUID
    property dwFlags : UInt32
    property luid : Win32cr::Foundation::LUID
    property guidCorrelationId : LibC::GUID
    def initialize(@dwSize : UInt32, @hrasconn : Win32cr::NetworkManagement::Rras::HRASCONN, @szEntryName : Win32cr::Foundation::CHAR[257], @szDeviceType : Win32cr::Foundation::CHAR[17], @szDeviceName : Win32cr::Foundation::CHAR[129], @szPhonebook : Win32cr::Foundation::CHAR[260], @dwSubEntry : UInt32, @guidEntry : LibC::GUID, @dwFlags : UInt32, @luid : Win32cr::Foundation::LUID, @guidCorrelationId : LibC::GUID)
    end
  end

  @[Extern]
  struct RASCONNSTATUSW
    property dwSize : UInt32
    property rasconnstate : Win32cr::NetworkManagement::Rras::RASCONNSTATE
    property dwError : UInt32
    property szDeviceType : UInt16[17]
    property szDeviceName : UInt16[129]
    property szPhoneNumber : UInt16[129]
    property localEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT
    property remoteEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT
    property rasconnsubstate : Win32cr::NetworkManagement::Rras::RASCONNSUBSTATE
    def initialize(@dwSize : UInt32, @rasconnstate : Win32cr::NetworkManagement::Rras::RASCONNSTATE, @dwError : UInt32, @szDeviceType : UInt16[17], @szDeviceName : UInt16[129], @szPhoneNumber : UInt16[129], @localEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT, @remoteEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT, @rasconnsubstate : Win32cr::NetworkManagement::Rras::RASCONNSUBSTATE)
    end
  end

  @[Extern]
  struct RASCONNSTATUSA
    property dwSize : UInt32
    property rasconnstate : Win32cr::NetworkManagement::Rras::RASCONNSTATE
    property dwError : UInt32
    property szDeviceType : Win32cr::Foundation::CHAR[17]
    property szDeviceName : Win32cr::Foundation::CHAR[129]
    property szPhoneNumber : Win32cr::Foundation::CHAR[129]
    property localEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT
    property remoteEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT
    property rasconnsubstate : Win32cr::NetworkManagement::Rras::RASCONNSUBSTATE
    def initialize(@dwSize : UInt32, @rasconnstate : Win32cr::NetworkManagement::Rras::RASCONNSTATE, @dwError : UInt32, @szDeviceType : Win32cr::Foundation::CHAR[17], @szDeviceName : Win32cr::Foundation::CHAR[129], @szPhoneNumber : Win32cr::Foundation::CHAR[129], @localEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT, @remoteEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT, @rasconnsubstate : Win32cr::NetworkManagement::Rras::RASCONNSUBSTATE)
    end
  end

  @[Extern]
  struct RASDIALPARAMSW
    property dwSize : UInt32
    property szEntryName : UInt16[257]
    property szPhoneNumber : UInt16[129]
    property szCallbackNumber : UInt16[129]
    property szUserName : UInt16[257]
    property szPassword : UInt16[257]
    property szDomain : UInt16[16]
    property dwSubEntry : UInt32
    property dwCallbackId : LibC::UIntPtrT
    property dwIfIndex : UInt32
    property szEncPassword : Win32cr::Foundation::PWSTR
    def initialize(@dwSize : UInt32, @szEntryName : UInt16[257], @szPhoneNumber : UInt16[129], @szCallbackNumber : UInt16[129], @szUserName : UInt16[257], @szPassword : UInt16[257], @szDomain : UInt16[16], @dwSubEntry : UInt32, @dwCallbackId : LibC::UIntPtrT, @dwIfIndex : UInt32, @szEncPassword : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct RASDIALPARAMSA
    property dwSize : UInt32
    property szEntryName : Win32cr::Foundation::CHAR[257]
    property szPhoneNumber : Win32cr::Foundation::CHAR[129]
    property szCallbackNumber : Win32cr::Foundation::CHAR[129]
    property szUserName : Win32cr::Foundation::CHAR[257]
    property szPassword : Win32cr::Foundation::CHAR[257]
    property szDomain : Win32cr::Foundation::CHAR[16]
    property dwSubEntry : UInt32
    property dwCallbackId : LibC::UIntPtrT
    property dwIfIndex : UInt32
    property szEncPassword : Win32cr::Foundation::PSTR
    def initialize(@dwSize : UInt32, @szEntryName : Win32cr::Foundation::CHAR[257], @szPhoneNumber : Win32cr::Foundation::CHAR[129], @szCallbackNumber : Win32cr::Foundation::CHAR[129], @szUserName : Win32cr::Foundation::CHAR[257], @szPassword : Win32cr::Foundation::CHAR[257], @szDomain : Win32cr::Foundation::CHAR[16], @dwSubEntry : UInt32, @dwCallbackId : LibC::UIntPtrT, @dwIfIndex : UInt32, @szEncPassword : Win32cr::Foundation::PSTR)
    end
  end

  @[Extern]
  struct RASEAPINFO
    property dwSizeofEapInfo : UInt32
    property pbEapInfo : UInt8*
    def initialize(@dwSizeofEapInfo : UInt32, @pbEapInfo : UInt8*)
    end
  end

  @[Extern]
  struct RASDEVSPECIFICINFO
    property dwSize : UInt32
    property pbDevSpecificInfo : UInt8*
    def initialize(@dwSize : UInt32, @pbDevSpecificInfo : UInt8*)
    end
  end

  @[Extern]
  struct RASDIALEXTENSIONS
    property dwSize : UInt32
    property dwfOptions : UInt32
    property hwndParent : Win32cr::Foundation::HWND
    property reserved : LibC::UIntPtrT
    property reserved1 : LibC::UIntPtrT
    property ras_eap_info : Win32cr::NetworkManagement::Rras::RASEAPINFO
    property fSkipPppAuth : Win32cr::Foundation::BOOL
    property ras_dev_specific_info : Win32cr::NetworkManagement::Rras::RASDEVSPECIFICINFO
    def initialize(@dwSize : UInt32, @dwfOptions : UInt32, @hwndParent : Win32cr::Foundation::HWND, @reserved : LibC::UIntPtrT, @reserved1 : LibC::UIntPtrT, @ras_eap_info : Win32cr::NetworkManagement::Rras::RASEAPINFO, @fSkipPppAuth : Win32cr::Foundation::BOOL, @ras_dev_specific_info : Win32cr::NetworkManagement::Rras::RASDEVSPECIFICINFO)
    end
  end

  @[Extern]
  struct RASENTRYNAMEW
    property dwSize : UInt32
    property szEntryName : UInt16[257]
    property dwFlags : UInt32
    property szPhonebookPath : UInt16[261]
    def initialize(@dwSize : UInt32, @szEntryName : UInt16[257], @dwFlags : UInt32, @szPhonebookPath : UInt16[261])
    end
  end

  @[Extern]
  struct RASENTRYNAMEA
    property dwSize : UInt32
    property szEntryName : Win32cr::Foundation::CHAR[257]
    property dwFlags : UInt32
    property szPhonebookPath : Win32cr::Foundation::CHAR[261]
    def initialize(@dwSize : UInt32, @szEntryName : Win32cr::Foundation::CHAR[257], @dwFlags : UInt32, @szPhonebookPath : Win32cr::Foundation::CHAR[261])
    end
  end

  @[Extern]
  struct RASAMBW
    property dwSize : UInt32
    property dwError : UInt32
    property szNetBiosError : UInt16[17]
    property bLana : UInt8
    def initialize(@dwSize : UInt32, @dwError : UInt32, @szNetBiosError : UInt16[17], @bLana : UInt8)
    end
  end

  @[Extern]
  struct RASAMBA
    property dwSize : UInt32
    property dwError : UInt32
    property szNetBiosError : Win32cr::Foundation::CHAR[17]
    property bLana : UInt8
    def initialize(@dwSize : UInt32, @dwError : UInt32, @szNetBiosError : Win32cr::Foundation::CHAR[17], @bLana : UInt8)
    end
  end

  @[Extern]
  struct RASPPPNBFW
    property dwSize : UInt32
    property dwError : UInt32
    property dwNetBiosError : UInt32
    property szNetBiosError : UInt16[17]
    property szWorkstationName : UInt16[17]
    property bLana : UInt8
    def initialize(@dwSize : UInt32, @dwError : UInt32, @dwNetBiosError : UInt32, @szNetBiosError : UInt16[17], @szWorkstationName : UInt16[17], @bLana : UInt8)
    end
  end

  @[Extern]
  struct RASPPPNBFA
    property dwSize : UInt32
    property dwError : UInt32
    property dwNetBiosError : UInt32
    property szNetBiosError : Win32cr::Foundation::CHAR[17]
    property szWorkstationName : Win32cr::Foundation::CHAR[17]
    property bLana : UInt8
    def initialize(@dwSize : UInt32, @dwError : UInt32, @dwNetBiosError : UInt32, @szNetBiosError : Win32cr::Foundation::CHAR[17], @szWorkstationName : Win32cr::Foundation::CHAR[17], @bLana : UInt8)
    end
  end

  @[Extern]
  struct RASIPXW
    property dwSize : UInt32
    property dwError : UInt32
    property szIpxAddress : UInt16[22]
    def initialize(@dwSize : UInt32, @dwError : UInt32, @szIpxAddress : UInt16[22])
    end
  end

  @[Extern]
  struct RASPPPIPXA
    property dwSize : UInt32
    property dwError : UInt32
    property szIpxAddress : Win32cr::Foundation::CHAR[22]
    def initialize(@dwSize : UInt32, @dwError : UInt32, @szIpxAddress : Win32cr::Foundation::CHAR[22])
    end
  end

  @[Extern]
  struct RASPPPIPW
    property dwSize : UInt32
    property dwError : UInt32
    property szIpAddress : UInt16[16]
    property szServerIpAddress : UInt16[16]
    property dwOptions : UInt32
    property dwServerOptions : UInt32
    def initialize(@dwSize : UInt32, @dwError : UInt32, @szIpAddress : UInt16[16], @szServerIpAddress : UInt16[16], @dwOptions : UInt32, @dwServerOptions : UInt32)
    end
  end

  @[Extern]
  struct RASPPPIPA
    property dwSize : UInt32
    property dwError : UInt32
    property szIpAddress : Win32cr::Foundation::CHAR[16]
    property szServerIpAddress : Win32cr::Foundation::CHAR[16]
    property dwOptions : UInt32
    property dwServerOptions : UInt32
    def initialize(@dwSize : UInt32, @dwError : UInt32, @szIpAddress : Win32cr::Foundation::CHAR[16], @szServerIpAddress : Win32cr::Foundation::CHAR[16], @dwOptions : UInt32, @dwServerOptions : UInt32)
    end
  end

  @[Extern]
  struct RASPPPIPV6
    property dwSize : UInt32
    property dwError : UInt32
    property bLocalInterfaceIdentifier : UInt8[8]
    property bPeerInterfaceIdentifier : UInt8[8]
    property bLocalCompressionProtocol : UInt8[2]
    property bPeerCompressionProtocol : UInt8[2]
    def initialize(@dwSize : UInt32, @dwError : UInt32, @bLocalInterfaceIdentifier : UInt8[8], @bPeerInterfaceIdentifier : UInt8[8], @bLocalCompressionProtocol : UInt8[2], @bPeerCompressionProtocol : UInt8[2])
    end
  end

  @[Extern]
  struct RASPPPLCPW
    property dwSize : UInt32
    property fBundled : Win32cr::Foundation::BOOL
    property dwError : UInt32
    property dwAuthenticationProtocol : UInt32
    property dwAuthenticationData : UInt32
    property dwEapTypeId : UInt32
    property dwServerAuthenticationProtocol : UInt32
    property dwServerAuthenticationData : UInt32
    property dwServerEapTypeId : UInt32
    property fMultilink : Win32cr::Foundation::BOOL
    property dwTerminateReason : UInt32
    property dwServerTerminateReason : UInt32
    property szReplyMessage : UInt16[1024]
    property dwOptions : UInt32
    property dwServerOptions : UInt32
    def initialize(@dwSize : UInt32, @fBundled : Win32cr::Foundation::BOOL, @dwError : UInt32, @dwAuthenticationProtocol : UInt32, @dwAuthenticationData : UInt32, @dwEapTypeId : UInt32, @dwServerAuthenticationProtocol : UInt32, @dwServerAuthenticationData : UInt32, @dwServerEapTypeId : UInt32, @fMultilink : Win32cr::Foundation::BOOL, @dwTerminateReason : UInt32, @dwServerTerminateReason : UInt32, @szReplyMessage : UInt16[1024], @dwOptions : UInt32, @dwServerOptions : UInt32)
    end
  end

  @[Extern]
  struct RASPPPLCPA
    property dwSize : UInt32
    property fBundled : Win32cr::Foundation::BOOL
    property dwError : UInt32
    property dwAuthenticationProtocol : UInt32
    property dwAuthenticationData : UInt32
    property dwEapTypeId : UInt32
    property dwServerAuthenticationProtocol : UInt32
    property dwServerAuthenticationData : UInt32
    property dwServerEapTypeId : UInt32
    property fMultilink : Win32cr::Foundation::BOOL
    property dwTerminateReason : UInt32
    property dwServerTerminateReason : UInt32
    property szReplyMessage : Win32cr::Foundation::CHAR[1024]
    property dwOptions : UInt32
    property dwServerOptions : UInt32
    def initialize(@dwSize : UInt32, @fBundled : Win32cr::Foundation::BOOL, @dwError : UInt32, @dwAuthenticationProtocol : UInt32, @dwAuthenticationData : UInt32, @dwEapTypeId : UInt32, @dwServerAuthenticationProtocol : UInt32, @dwServerAuthenticationData : UInt32, @dwServerEapTypeId : UInt32, @fMultilink : Win32cr::Foundation::BOOL, @dwTerminateReason : UInt32, @dwServerTerminateReason : UInt32, @szReplyMessage : Win32cr::Foundation::CHAR[1024], @dwOptions : UInt32, @dwServerOptions : UInt32)
    end
  end

  @[Extern]
  struct RASPPPCCP
    property dwSize : UInt32
    property dwError : UInt32
    property dwCompressionAlgorithm : UInt32
    property dwOptions : UInt32
    property dwServerCompressionAlgorithm : UInt32
    property dwServerOptions : UInt32
    def initialize(@dwSize : UInt32, @dwError : UInt32, @dwCompressionAlgorithm : UInt32, @dwOptions : UInt32, @dwServerCompressionAlgorithm : UInt32, @dwServerOptions : UInt32)
    end
  end

  @[Extern]
  struct RASPPP_PROJECTION_INFO
    property dwIPv4NegotiationError : UInt32
    property ipv4Address : Win32cr::Networking::WinSock::IN_ADDR
    property ipv4ServerAddress : Win32cr::Networking::WinSock::IN_ADDR
    property dwIPv4Options : UInt32
    property dwIPv4ServerOptions : UInt32
    property dwIPv6NegotiationError : UInt32
    property bInterfaceIdentifier : UInt8[8]
    property bServerInterfaceIdentifier : UInt8[8]
    property fBundled : Win32cr::Foundation::BOOL
    property fMultilink : Win32cr::Foundation::BOOL
    property dwAuthenticationProtocol : Win32cr::NetworkManagement::Rras::RASPPP_PROJECTION_INFO_SERVER_AUTH_PROTOCOL
    property dwAuthenticationData : Win32cr::NetworkManagement::Rras::RASPPP_PROJECTION_INFO_SERVER_AUTH_DATA
    property dwServerAuthenticationProtocol : Win32cr::NetworkManagement::Rras::RASPPP_PROJECTION_INFO_SERVER_AUTH_PROTOCOL
    property dwServerAuthenticationData : Win32cr::NetworkManagement::Rras::RASPPP_PROJECTION_INFO_SERVER_AUTH_DATA
    property dwEapTypeId : UInt32
    property dwServerEapTypeId : UInt32
    property dwLcpOptions : UInt32
    property dwLcpServerOptions : UInt32
    property dwCcpError : UInt32
    property dwCcpCompressionAlgorithm : UInt32
    property dwCcpServerCompressionAlgorithm : UInt32
    property dwCcpOptions : UInt32
    property dwCcpServerOptions : UInt32
    def initialize(@dwIPv4NegotiationError : UInt32, @ipv4Address : Win32cr::Networking::WinSock::IN_ADDR, @ipv4ServerAddress : Win32cr::Networking::WinSock::IN_ADDR, @dwIPv4Options : UInt32, @dwIPv4ServerOptions : UInt32, @dwIPv6NegotiationError : UInt32, @bInterfaceIdentifier : UInt8[8], @bServerInterfaceIdentifier : UInt8[8], @fBundled : Win32cr::Foundation::BOOL, @fMultilink : Win32cr::Foundation::BOOL, @dwAuthenticationProtocol : Win32cr::NetworkManagement::Rras::RASPPP_PROJECTION_INFO_SERVER_AUTH_PROTOCOL, @dwAuthenticationData : Win32cr::NetworkManagement::Rras::RASPPP_PROJECTION_INFO_SERVER_AUTH_DATA, @dwServerAuthenticationProtocol : Win32cr::NetworkManagement::Rras::RASPPP_PROJECTION_INFO_SERVER_AUTH_PROTOCOL, @dwServerAuthenticationData : Win32cr::NetworkManagement::Rras::RASPPP_PROJECTION_INFO_SERVER_AUTH_DATA, @dwEapTypeId : UInt32, @dwServerEapTypeId : UInt32, @dwLcpOptions : UInt32, @dwLcpServerOptions : UInt32, @dwCcpError : UInt32, @dwCcpCompressionAlgorithm : UInt32, @dwCcpServerCompressionAlgorithm : UInt32, @dwCcpOptions : UInt32, @dwCcpServerOptions : UInt32)
    end
  end

  @[Extern]
  struct RASIKEV2_PROJECTION_INFO
    property dwIPv4NegotiationError : UInt32
    property ipv4Address : Win32cr::Networking::WinSock::IN_ADDR
    property ipv4ServerAddress : Win32cr::Networking::WinSock::IN_ADDR
    property dwIPv6NegotiationError : UInt32
    property ipv6Address : Win32cr::Networking::WinSock::IN6_ADDR
    property ipv6ServerAddress : Win32cr::Networking::WinSock::IN6_ADDR
    property dwPrefixLength : UInt32
    property dwAuthenticationProtocol : UInt32
    property dwEapTypeId : UInt32
    property dwFlags : Win32cr::NetworkManagement::Rras::RASIKEV_PROJECTION_INFO_FLAGS
    property dwEncryptionMethod : UInt32
    property numIPv4ServerAddresses : UInt32
    property ipv4ServerAddresses : Win32cr::Networking::WinSock::IN_ADDR*
    property numIPv6ServerAddresses : UInt32
    property ipv6ServerAddresses : Win32cr::Networking::WinSock::IN6_ADDR*
    def initialize(@dwIPv4NegotiationError : UInt32, @ipv4Address : Win32cr::Networking::WinSock::IN_ADDR, @ipv4ServerAddress : Win32cr::Networking::WinSock::IN_ADDR, @dwIPv6NegotiationError : UInt32, @ipv6Address : Win32cr::Networking::WinSock::IN6_ADDR, @ipv6ServerAddress : Win32cr::Networking::WinSock::IN6_ADDR, @dwPrefixLength : UInt32, @dwAuthenticationProtocol : UInt32, @dwEapTypeId : UInt32, @dwFlags : Win32cr::NetworkManagement::Rras::RASIKEV_PROJECTION_INFO_FLAGS, @dwEncryptionMethod : UInt32, @numIPv4ServerAddresses : UInt32, @ipv4ServerAddresses : Win32cr::Networking::WinSock::IN_ADDR*, @numIPv6ServerAddresses : UInt32, @ipv6ServerAddresses : Win32cr::Networking::WinSock::IN6_ADDR*)
    end
  end

  @[Extern]
  struct RAS_PROJECTION_INFO
    property version : Win32cr::NetworkManagement::Rras::RASAPIVERSION
    property type__ : Win32cr::NetworkManagement::Rras::RASPROJECTION_INFO_TYPE
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property ppp : Win32cr::NetworkManagement::Rras::RASPPP_PROJECTION_INFO
    property ikev2 : Win32cr::NetworkManagement::Rras::RASIKEV2_PROJECTION_INFO
    def initialize(@ppp : Win32cr::NetworkManagement::Rras::RASPPP_PROJECTION_INFO, @ikev2 : Win32cr::NetworkManagement::Rras::RASIKEV2_PROJECTION_INFO)
    end
    end

    def initialize(@version : Win32cr::NetworkManagement::Rras::RASAPIVERSION, @type__ : Win32cr::NetworkManagement::Rras::RASPROJECTION_INFO_TYPE, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct RASDEVINFOW
    property dwSize : UInt32
    property szDeviceType : UInt16[17]
    property szDeviceName : UInt16[129]
    def initialize(@dwSize : UInt32, @szDeviceType : UInt16[17], @szDeviceName : UInt16[129])
    end
  end

  @[Extern]
  struct RASDEVINFOA
    property dwSize : UInt32
    property szDeviceType : Win32cr::Foundation::CHAR[17]
    property szDeviceName : Win32cr::Foundation::CHAR[129]
    def initialize(@dwSize : UInt32, @szDeviceType : Win32cr::Foundation::CHAR[17], @szDeviceName : Win32cr::Foundation::CHAR[129])
    end
  end

  @[Extern]
  struct RASCTRYINFO
    property dwSize : UInt32
    property dwCountryID : UInt32
    property dwNextCountryID : UInt32
    property dwCountryCode : UInt32
    property dwCountryNameOffset : UInt32
    def initialize(@dwSize : UInt32, @dwCountryID : UInt32, @dwNextCountryID : UInt32, @dwCountryCode : UInt32, @dwCountryNameOffset : UInt32)
    end
  end

  @[Extern]
  struct RASENTRYA
    property dwSize : UInt32
    property dwfOptions : UInt32
    property dwCountryID : UInt32
    property dwCountryCode : UInt32
    property szAreaCode : Win32cr::Foundation::CHAR[11]
    property szLocalPhoneNumber : Win32cr::Foundation::CHAR[129]
    property dwAlternateOffset : UInt32
    property ipaddr : Win32cr::NetworkManagement::Rras::RASIPADDR
    property ipaddrDns : Win32cr::NetworkManagement::Rras::RASIPADDR
    property ipaddrDnsAlt : Win32cr::NetworkManagement::Rras::RASIPADDR
    property ipaddrWins : Win32cr::NetworkManagement::Rras::RASIPADDR
    property ipaddrWinsAlt : Win32cr::NetworkManagement::Rras::RASIPADDR
    property dwFrameSize : UInt32
    property dwfNetProtocols : UInt32
    property dwFramingProtocol : UInt32
    property szScript : Win32cr::Foundation::CHAR[260]
    property szAutodialDll : Win32cr::Foundation::CHAR[260]
    property szAutodialFunc : Win32cr::Foundation::CHAR[260]
    property szDeviceType : Win32cr::Foundation::CHAR[17]
    property szDeviceName : Win32cr::Foundation::CHAR[129]
    property szX25PadType : Win32cr::Foundation::CHAR[33]
    property szX25Address : Win32cr::Foundation::CHAR[201]
    property szX25Facilities : Win32cr::Foundation::CHAR[201]
    property szX25UserData : Win32cr::Foundation::CHAR[201]
    property dwChannels : UInt32
    property dwReserved1 : UInt32
    property dwReserved2 : UInt32
    property dwSubEntries : UInt32
    property dwDialMode : Win32cr::NetworkManagement::Rras::RASENTRY_DIAL_MODE
    property dwDialExtraPercent : UInt32
    property dwDialExtraSampleSeconds : UInt32
    property dwHangUpExtraPercent : UInt32
    property dwHangUpExtraSampleSeconds : UInt32
    property dwIdleDisconnectSeconds : UInt32
    property dwType : UInt32
    property dwEncryptionType : UInt32
    property dwCustomAuthKey : UInt32
    property guidId : LibC::GUID
    property szCustomDialDll : Win32cr::Foundation::CHAR[260]
    property dwVpnStrategy : UInt32
    property dwfOptions2 : UInt32
    property dwfOptions3 : UInt32
    property szDnsSuffix : Win32cr::Foundation::CHAR[256]
    property dwTcpWindowSize : UInt32
    property szPrerequisitePbk : Win32cr::Foundation::CHAR[260]
    property szPrerequisiteEntry : Win32cr::Foundation::CHAR[257]
    property dwRedialCount : UInt32
    property dwRedialPause : UInt32
    property ipv6addrDns : Win32cr::Networking::WinSock::IN6_ADDR
    property ipv6addrDnsAlt : Win32cr::Networking::WinSock::IN6_ADDR
    property dwIPv4InterfaceMetric : UInt32
    property dwIPv6InterfaceMetric : UInt32
    property ipv6addr : Win32cr::Networking::WinSock::IN6_ADDR
    property dwIPv6PrefixLength : UInt32
    property dwNetworkOutageTime : UInt32
    property szIDi : Win32cr::Foundation::CHAR[257]
    property szIDr : Win32cr::Foundation::CHAR[257]
    property fIsImsConfig : Win32cr::Foundation::BOOL
    property idi_type : Win32cr::NetworkManagement::Rras::IKEV2_ID_PAYLOAD_TYPE
    property idr_type : Win32cr::NetworkManagement::Rras::IKEV2_ID_PAYLOAD_TYPE
    property fDisableIKEv2Fragmentation : Win32cr::Foundation::BOOL
    def initialize(@dwSize : UInt32, @dwfOptions : UInt32, @dwCountryID : UInt32, @dwCountryCode : UInt32, @szAreaCode : Win32cr::Foundation::CHAR[11], @szLocalPhoneNumber : Win32cr::Foundation::CHAR[129], @dwAlternateOffset : UInt32, @ipaddr : Win32cr::NetworkManagement::Rras::RASIPADDR, @ipaddrDns : Win32cr::NetworkManagement::Rras::RASIPADDR, @ipaddrDnsAlt : Win32cr::NetworkManagement::Rras::RASIPADDR, @ipaddrWins : Win32cr::NetworkManagement::Rras::RASIPADDR, @ipaddrWinsAlt : Win32cr::NetworkManagement::Rras::RASIPADDR, @dwFrameSize : UInt32, @dwfNetProtocols : UInt32, @dwFramingProtocol : UInt32, @szScript : Win32cr::Foundation::CHAR[260], @szAutodialDll : Win32cr::Foundation::CHAR[260], @szAutodialFunc : Win32cr::Foundation::CHAR[260], @szDeviceType : Win32cr::Foundation::CHAR[17], @szDeviceName : Win32cr::Foundation::CHAR[129], @szX25PadType : Win32cr::Foundation::CHAR[33], @szX25Address : Win32cr::Foundation::CHAR[201], @szX25Facilities : Win32cr::Foundation::CHAR[201], @szX25UserData : Win32cr::Foundation::CHAR[201], @dwChannels : UInt32, @dwReserved1 : UInt32, @dwReserved2 : UInt32, @dwSubEntries : UInt32, @dwDialMode : Win32cr::NetworkManagement::Rras::RASENTRY_DIAL_MODE, @dwDialExtraPercent : UInt32, @dwDialExtraSampleSeconds : UInt32, @dwHangUpExtraPercent : UInt32, @dwHangUpExtraSampleSeconds : UInt32, @dwIdleDisconnectSeconds : UInt32, @dwType : UInt32, @dwEncryptionType : UInt32, @dwCustomAuthKey : UInt32, @guidId : LibC::GUID, @szCustomDialDll : Win32cr::Foundation::CHAR[260], @dwVpnStrategy : UInt32, @dwfOptions2 : UInt32, @dwfOptions3 : UInt32, @szDnsSuffix : Win32cr::Foundation::CHAR[256], @dwTcpWindowSize : UInt32, @szPrerequisitePbk : Win32cr::Foundation::CHAR[260], @szPrerequisiteEntry : Win32cr::Foundation::CHAR[257], @dwRedialCount : UInt32, @dwRedialPause : UInt32, @ipv6addrDns : Win32cr::Networking::WinSock::IN6_ADDR, @ipv6addrDnsAlt : Win32cr::Networking::WinSock::IN6_ADDR, @dwIPv4InterfaceMetric : UInt32, @dwIPv6InterfaceMetric : UInt32, @ipv6addr : Win32cr::Networking::WinSock::IN6_ADDR, @dwIPv6PrefixLength : UInt32, @dwNetworkOutageTime : UInt32, @szIDi : Win32cr::Foundation::CHAR[257], @szIDr : Win32cr::Foundation::CHAR[257], @fIsImsConfig : Win32cr::Foundation::BOOL, @idi_type : Win32cr::NetworkManagement::Rras::IKEV2_ID_PAYLOAD_TYPE, @idr_type : Win32cr::NetworkManagement::Rras::IKEV2_ID_PAYLOAD_TYPE, @fDisableIKEv2Fragmentation : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct RASENTRYW
    property dwSize : UInt32
    property dwfOptions : UInt32
    property dwCountryID : UInt32
    property dwCountryCode : UInt32
    property szAreaCode : UInt16[11]
    property szLocalPhoneNumber : UInt16[129]
    property dwAlternateOffset : UInt32
    property ipaddr : Win32cr::NetworkManagement::Rras::RASIPADDR
    property ipaddrDns : Win32cr::NetworkManagement::Rras::RASIPADDR
    property ipaddrDnsAlt : Win32cr::NetworkManagement::Rras::RASIPADDR
    property ipaddrWins : Win32cr::NetworkManagement::Rras::RASIPADDR
    property ipaddrWinsAlt : Win32cr::NetworkManagement::Rras::RASIPADDR
    property dwFrameSize : UInt32
    property dwfNetProtocols : UInt32
    property dwFramingProtocol : UInt32
    property szScript : UInt16[260]
    property szAutodialDll : UInt16[260]
    property szAutodialFunc : UInt16[260]
    property szDeviceType : UInt16[17]
    property szDeviceName : UInt16[129]
    property szX25PadType : UInt16[33]
    property szX25Address : UInt16[201]
    property szX25Facilities : UInt16[201]
    property szX25UserData : UInt16[201]
    property dwChannels : UInt32
    property dwReserved1 : UInt32
    property dwReserved2 : UInt32
    property dwSubEntries : UInt32
    property dwDialMode : Win32cr::NetworkManagement::Rras::RASENTRY_DIAL_MODE
    property dwDialExtraPercent : UInt32
    property dwDialExtraSampleSeconds : UInt32
    property dwHangUpExtraPercent : UInt32
    property dwHangUpExtraSampleSeconds : UInt32
    property dwIdleDisconnectSeconds : UInt32
    property dwType : UInt32
    property dwEncryptionType : UInt32
    property dwCustomAuthKey : UInt32
    property guidId : LibC::GUID
    property szCustomDialDll : UInt16[260]
    property dwVpnStrategy : UInt32
    property dwfOptions2 : UInt32
    property dwfOptions3 : UInt32
    property szDnsSuffix : UInt16[256]
    property dwTcpWindowSize : UInt32
    property szPrerequisitePbk : UInt16[260]
    property szPrerequisiteEntry : UInt16[257]
    property dwRedialCount : UInt32
    property dwRedialPause : UInt32
    property ipv6addrDns : Win32cr::Networking::WinSock::IN6_ADDR
    property ipv6addrDnsAlt : Win32cr::Networking::WinSock::IN6_ADDR
    property dwIPv4InterfaceMetric : UInt32
    property dwIPv6InterfaceMetric : UInt32
    property ipv6addr : Win32cr::Networking::WinSock::IN6_ADDR
    property dwIPv6PrefixLength : UInt32
    property dwNetworkOutageTime : UInt32
    property szIDi : UInt16[257]
    property szIDr : UInt16[257]
    property fIsImsConfig : Win32cr::Foundation::BOOL
    property idi_type : Win32cr::NetworkManagement::Rras::IKEV2_ID_PAYLOAD_TYPE
    property idr_type : Win32cr::NetworkManagement::Rras::IKEV2_ID_PAYLOAD_TYPE
    property fDisableIKEv2Fragmentation : Win32cr::Foundation::BOOL
    def initialize(@dwSize : UInt32, @dwfOptions : UInt32, @dwCountryID : UInt32, @dwCountryCode : UInt32, @szAreaCode : UInt16[11], @szLocalPhoneNumber : UInt16[129], @dwAlternateOffset : UInt32, @ipaddr : Win32cr::NetworkManagement::Rras::RASIPADDR, @ipaddrDns : Win32cr::NetworkManagement::Rras::RASIPADDR, @ipaddrDnsAlt : Win32cr::NetworkManagement::Rras::RASIPADDR, @ipaddrWins : Win32cr::NetworkManagement::Rras::RASIPADDR, @ipaddrWinsAlt : Win32cr::NetworkManagement::Rras::RASIPADDR, @dwFrameSize : UInt32, @dwfNetProtocols : UInt32, @dwFramingProtocol : UInt32, @szScript : UInt16[260], @szAutodialDll : UInt16[260], @szAutodialFunc : UInt16[260], @szDeviceType : UInt16[17], @szDeviceName : UInt16[129], @szX25PadType : UInt16[33], @szX25Address : UInt16[201], @szX25Facilities : UInt16[201], @szX25UserData : UInt16[201], @dwChannels : UInt32, @dwReserved1 : UInt32, @dwReserved2 : UInt32, @dwSubEntries : UInt32, @dwDialMode : Win32cr::NetworkManagement::Rras::RASENTRY_DIAL_MODE, @dwDialExtraPercent : UInt32, @dwDialExtraSampleSeconds : UInt32, @dwHangUpExtraPercent : UInt32, @dwHangUpExtraSampleSeconds : UInt32, @dwIdleDisconnectSeconds : UInt32, @dwType : UInt32, @dwEncryptionType : UInt32, @dwCustomAuthKey : UInt32, @guidId : LibC::GUID, @szCustomDialDll : UInt16[260], @dwVpnStrategy : UInt32, @dwfOptions2 : UInt32, @dwfOptions3 : UInt32, @szDnsSuffix : UInt16[256], @dwTcpWindowSize : UInt32, @szPrerequisitePbk : UInt16[260], @szPrerequisiteEntry : UInt16[257], @dwRedialCount : UInt32, @dwRedialPause : UInt32, @ipv6addrDns : Win32cr::Networking::WinSock::IN6_ADDR, @ipv6addrDnsAlt : Win32cr::Networking::WinSock::IN6_ADDR, @dwIPv4InterfaceMetric : UInt32, @dwIPv6InterfaceMetric : UInt32, @ipv6addr : Win32cr::Networking::WinSock::IN6_ADDR, @dwIPv6PrefixLength : UInt32, @dwNetworkOutageTime : UInt32, @szIDi : UInt16[257], @szIDr : UInt16[257], @fIsImsConfig : Win32cr::Foundation::BOOL, @idi_type : Win32cr::NetworkManagement::Rras::IKEV2_ID_PAYLOAD_TYPE, @idr_type : Win32cr::NetworkManagement::Rras::IKEV2_ID_PAYLOAD_TYPE, @fDisableIKEv2Fragmentation : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct RASADPARAMS
    property dwSize : UInt32
    property hwndOwner : Win32cr::Foundation::HWND
    property dwFlags : UInt32
    property xDlg : Int32
    property yDlg : Int32
    def initialize(@dwSize : UInt32, @hwndOwner : Win32cr::Foundation::HWND, @dwFlags : UInt32, @xDlg : Int32, @yDlg : Int32)
    end
  end

  @[Extern]
  struct RASSUBENTRYA
    property dwSize : UInt32
    property dwfFlags : UInt32
    property szDeviceType : Win32cr::Foundation::CHAR[17]
    property szDeviceName : Win32cr::Foundation::CHAR[129]
    property szLocalPhoneNumber : Win32cr::Foundation::CHAR[129]
    property dwAlternateOffset : UInt32
    def initialize(@dwSize : UInt32, @dwfFlags : UInt32, @szDeviceType : Win32cr::Foundation::CHAR[17], @szDeviceName : Win32cr::Foundation::CHAR[129], @szLocalPhoneNumber : Win32cr::Foundation::CHAR[129], @dwAlternateOffset : UInt32)
    end
  end

  @[Extern]
  struct RASSUBENTRYW
    property dwSize : UInt32
    property dwfFlags : UInt32
    property szDeviceType : UInt16[17]
    property szDeviceName : UInt16[129]
    property szLocalPhoneNumber : UInt16[129]
    property dwAlternateOffset : UInt32
    def initialize(@dwSize : UInt32, @dwfFlags : UInt32, @szDeviceType : UInt16[17], @szDeviceName : UInt16[129], @szLocalPhoneNumber : UInt16[129], @dwAlternateOffset : UInt32)
    end
  end

  @[Extern]
  struct RASCREDENTIALSA
    property dwSize : UInt32
    property dwMask : UInt32
    property szUserName : Win32cr::Foundation::CHAR[257]
    property szPassword : Win32cr::Foundation::CHAR[257]
    property szDomain : Win32cr::Foundation::CHAR[16]
    def initialize(@dwSize : UInt32, @dwMask : UInt32, @szUserName : Win32cr::Foundation::CHAR[257], @szPassword : Win32cr::Foundation::CHAR[257], @szDomain : Win32cr::Foundation::CHAR[16])
    end
  end

  @[Extern]
  struct RASCREDENTIALSW
    property dwSize : UInt32
    property dwMask : UInt32
    property szUserName : UInt16[257]
    property szPassword : UInt16[257]
    property szDomain : UInt16[16]
    def initialize(@dwSize : UInt32, @dwMask : UInt32, @szUserName : UInt16[257], @szPassword : UInt16[257], @szDomain : UInt16[16])
    end
  end

  @[Extern]
  struct RASAUTODIALENTRYA
    property dwSize : UInt32
    property dwFlags : UInt32
    property dwDialingLocation : UInt32
    property szEntry : Win32cr::Foundation::CHAR[257]
    def initialize(@dwSize : UInt32, @dwFlags : UInt32, @dwDialingLocation : UInt32, @szEntry : Win32cr::Foundation::CHAR[257])
    end
  end

  @[Extern]
  struct RASAUTODIALENTRYW
    property dwSize : UInt32
    property dwFlags : UInt32
    property dwDialingLocation : UInt32
    property szEntry : UInt16[257]
    def initialize(@dwSize : UInt32, @dwFlags : UInt32, @dwDialingLocation : UInt32, @szEntry : UInt16[257])
    end
  end

  @[Extern]
  struct RASEAPUSERIDENTITYA
    property szUserName : Win32cr::Foundation::CHAR[257]
    property dwSizeofEapInfo : UInt32
    property pbEapInfo : UInt8*
    def initialize(@szUserName : Win32cr::Foundation::CHAR[257], @dwSizeofEapInfo : UInt32, @pbEapInfo : UInt8*)
    end
  end

  @[Extern]
  struct RASEAPUSERIDENTITYW
    property szUserName : UInt16[257]
    property dwSizeofEapInfo : UInt32
    property pbEapInfo : UInt8*
    def initialize(@szUserName : UInt16[257], @dwSizeofEapInfo : UInt32, @pbEapInfo : UInt8*)
    end
  end

  @[Extern]
  struct RASCOMMSETTINGS
    property dwSize : UInt32
    property bParity : UInt8
    property bStop : UInt8
    property bByteSize : UInt8
    property bAlign : UInt8
    def initialize(@dwSize : UInt32, @bParity : UInt8, @bStop : UInt8, @bByteSize : UInt8, @bAlign : UInt8)
    end
  end

  @[Extern]
  struct RASCUSTOMSCRIPTEXTENSIONS
    property dwSize : UInt32
    property pfnRasSetCommSettings : Win32cr::NetworkManagement::Rras::PFNRASSETCOMMSETTINGS
    def initialize(@dwSize : UInt32, @pfnRasSetCommSettings : Win32cr::NetworkManagement::Rras::PFNRASSETCOMMSETTINGS)
    end
  end

  @[Extern]
  struct RAS_STATS
    property dwSize : UInt32
    property dwBytesXmited : UInt32
    property dwBytesRcved : UInt32
    property dwFramesXmited : UInt32
    property dwFramesRcved : UInt32
    property dwCrcErr : UInt32
    property dwTimeoutErr : UInt32
    property dwAlignmentErr : UInt32
    property dwHardwareOverrunErr : UInt32
    property dwFramingErr : UInt32
    property dwBufferOverrunErr : UInt32
    property dwCompressionRatioIn : UInt32
    property dwCompressionRatioOut : UInt32
    property dwBps : UInt32
    property dwConnectDuration : UInt32
    def initialize(@dwSize : UInt32, @dwBytesXmited : UInt32, @dwBytesRcved : UInt32, @dwFramesXmited : UInt32, @dwFramesRcved : UInt32, @dwCrcErr : UInt32, @dwTimeoutErr : UInt32, @dwAlignmentErr : UInt32, @dwHardwareOverrunErr : UInt32, @dwFramingErr : UInt32, @dwBufferOverrunErr : UInt32, @dwCompressionRatioIn : UInt32, @dwCompressionRatioOut : UInt32, @dwBps : UInt32, @dwConnectDuration : UInt32)
    end
  end

  @[Extern]
  struct RASUPDATECONN
    property version : Win32cr::NetworkManagement::Rras::RASAPIVERSION
    property dwSize : UInt32
    property dwFlags : UInt32
    property dwIfIndex : UInt32
    property localEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT
    property remoteEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT
    def initialize(@version : Win32cr::NetworkManagement::Rras::RASAPIVERSION, @dwSize : UInt32, @dwFlags : UInt32, @dwIfIndex : UInt32, @localEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT, @remoteEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT)
    end
  end

  @[Extern]
  struct RASNOUSERW
    property dwSize : UInt32
    property dwFlags : UInt32
    property dwTimeoutMs : UInt32
    property szUserName : UInt16[257]
    property szPassword : UInt16[257]
    property szDomain : UInt16[16]
    def initialize(@dwSize : UInt32, @dwFlags : UInt32, @dwTimeoutMs : UInt32, @szUserName : UInt16[257], @szPassword : UInt16[257], @szDomain : UInt16[16])
    end
  end

  @[Extern]
  struct RASNOUSERA
    property dwSize : UInt32
    property dwFlags : UInt32
    property dwTimeoutMs : UInt32
    property szUserName : Win32cr::Foundation::CHAR[257]
    property szPassword : Win32cr::Foundation::CHAR[257]
    property szDomain : Win32cr::Foundation::CHAR[16]
    def initialize(@dwSize : UInt32, @dwFlags : UInt32, @dwTimeoutMs : UInt32, @szUserName : Win32cr::Foundation::CHAR[257], @szPassword : Win32cr::Foundation::CHAR[257], @szDomain : Win32cr::Foundation::CHAR[16])
    end
  end

  @[Extern]
  struct RASPBDLGW
    property dwSize : UInt32
    property hwndOwner : Win32cr::Foundation::HWND
    property dwFlags : UInt32
    property xDlg : Int32
    property yDlg : Int32
    property dwCallbackId : LibC::UIntPtrT
    property pCallback : Win32cr::NetworkManagement::Rras::RASPBDLGFUNCW
    property dwError : UInt32
    property reserved : LibC::UIntPtrT
    property reserved2 : LibC::UIntPtrT
    def initialize(@dwSize : UInt32, @hwndOwner : Win32cr::Foundation::HWND, @dwFlags : UInt32, @xDlg : Int32, @yDlg : Int32, @dwCallbackId : LibC::UIntPtrT, @pCallback : Win32cr::NetworkManagement::Rras::RASPBDLGFUNCW, @dwError : UInt32, @reserved : LibC::UIntPtrT, @reserved2 : LibC::UIntPtrT)
    end
  end

  @[Extern]
  struct RASPBDLGA
    property dwSize : UInt32
    property hwndOwner : Win32cr::Foundation::HWND
    property dwFlags : UInt32
    property xDlg : Int32
    property yDlg : Int32
    property dwCallbackId : LibC::UIntPtrT
    property pCallback : Win32cr::NetworkManagement::Rras::RASPBDLGFUNCA
    property dwError : UInt32
    property reserved : LibC::UIntPtrT
    property reserved2 : LibC::UIntPtrT
    def initialize(@dwSize : UInt32, @hwndOwner : Win32cr::Foundation::HWND, @dwFlags : UInt32, @xDlg : Int32, @yDlg : Int32, @dwCallbackId : LibC::UIntPtrT, @pCallback : Win32cr::NetworkManagement::Rras::RASPBDLGFUNCA, @dwError : UInt32, @reserved : LibC::UIntPtrT, @reserved2 : LibC::UIntPtrT)
    end
  end

  @[Extern]
  struct RASENTRYDLGW
    property dwSize : UInt32
    property hwndOwner : Win32cr::Foundation::HWND
    property dwFlags : UInt32
    property xDlg : Int32
    property yDlg : Int32
    property szEntry : UInt16[257]
    property dwError : UInt32
    property reserved : LibC::UIntPtrT
    property reserved2 : LibC::UIntPtrT
    def initialize(@dwSize : UInt32, @hwndOwner : Win32cr::Foundation::HWND, @dwFlags : UInt32, @xDlg : Int32, @yDlg : Int32, @szEntry : UInt16[257], @dwError : UInt32, @reserved : LibC::UIntPtrT, @reserved2 : LibC::UIntPtrT)
    end
  end

  @[Extern]
  struct RASENTRYDLGA
    property dwSize : UInt32
    property hwndOwner : Win32cr::Foundation::HWND
    property dwFlags : UInt32
    property xDlg : Int32
    property yDlg : Int32
    property szEntry : Win32cr::Foundation::CHAR[257]
    property dwError : UInt32
    property reserved : LibC::UIntPtrT
    property reserved2 : LibC::UIntPtrT
    def initialize(@dwSize : UInt32, @hwndOwner : Win32cr::Foundation::HWND, @dwFlags : UInt32, @xDlg : Int32, @yDlg : Int32, @szEntry : Win32cr::Foundation::CHAR[257], @dwError : UInt32, @reserved : LibC::UIntPtrT, @reserved2 : LibC::UIntPtrT)
    end
  end

  @[Extern]
  struct RASDIALDLG
    property dwSize : UInt32
    property hwndOwner : Win32cr::Foundation::HWND
    property dwFlags : UInt32
    property xDlg : Int32
    property yDlg : Int32
    property dwSubEntry : UInt32
    property dwError : UInt32
    property reserved : LibC::UIntPtrT
    property reserved2 : LibC::UIntPtrT
    def initialize(@dwSize : UInt32, @hwndOwner : Win32cr::Foundation::HWND, @dwFlags : UInt32, @xDlg : Int32, @yDlg : Int32, @dwSubEntry : UInt32, @dwError : UInt32, @reserved : LibC::UIntPtrT, @reserved2 : LibC::UIntPtrT)
    end
  end

  @[Extern]
  struct MPR_INTERFACE_0
    property wszInterfaceName : UInt16[257]
    property hInterface : Win32cr::Foundation::HANDLE
    property fEnabled : Win32cr::Foundation::BOOL
    property dwIfType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE
    property dwConnectionState : Win32cr::NetworkManagement::Rras::ROUTER_CONNECTION_STATE
    property fUnReachabilityReasons : UInt32
    property dwLastError : UInt32
    def initialize(@wszInterfaceName : UInt16[257], @hInterface : Win32cr::Foundation::HANDLE, @fEnabled : Win32cr::Foundation::BOOL, @dwIfType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE, @dwConnectionState : Win32cr::NetworkManagement::Rras::ROUTER_CONNECTION_STATE, @fUnReachabilityReasons : UInt32, @dwLastError : UInt32)
    end
  end

  @[Extern]
  struct MPR_IPINIP_INTERFACE_0
    property wszFriendlyName : UInt16[257]
    property guid : LibC::GUID
    def initialize(@wszFriendlyName : UInt16[257], @guid : LibC::GUID)
    end
  end

  @[Extern]
  struct MPR_INTERFACE_1
    property wszInterfaceName : UInt16[257]
    property hInterface : Win32cr::Foundation::HANDLE
    property fEnabled : Win32cr::Foundation::BOOL
    property dwIfType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE
    property dwConnectionState : Win32cr::NetworkManagement::Rras::ROUTER_CONNECTION_STATE
    property fUnReachabilityReasons : UInt32
    property dwLastError : UInt32
    property lpwsDialoutHoursRestriction : Win32cr::Foundation::PWSTR
    def initialize(@wszInterfaceName : UInt16[257], @hInterface : Win32cr::Foundation::HANDLE, @fEnabled : Win32cr::Foundation::BOOL, @dwIfType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE, @dwConnectionState : Win32cr::NetworkManagement::Rras::ROUTER_CONNECTION_STATE, @fUnReachabilityReasons : UInt32, @dwLastError : UInt32, @lpwsDialoutHoursRestriction : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct MPR_INTERFACE_2
    property wszInterfaceName : UInt16[257]
    property hInterface : Win32cr::Foundation::HANDLE
    property fEnabled : Win32cr::Foundation::BOOL
    property dwIfType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE
    property dwConnectionState : Win32cr::NetworkManagement::Rras::ROUTER_CONNECTION_STATE
    property fUnReachabilityReasons : UInt32
    property dwLastError : UInt32
    property dwfOptions : UInt32
    property szLocalPhoneNumber : UInt16[129]
    property szAlternates : Win32cr::Foundation::PWSTR
    property ipaddr : UInt32
    property ipaddrDns : UInt32
    property ipaddrDnsAlt : UInt32
    property ipaddrWins : UInt32
    property ipaddrWinsAlt : UInt32
    property dwfNetProtocols : UInt32
    property szDeviceType : UInt16[17]
    property szDeviceName : UInt16[129]
    property szX25PadType : UInt16[33]
    property szX25Address : UInt16[201]
    property szX25Facilities : UInt16[201]
    property szX25UserData : UInt16[201]
    property dwChannels : UInt32
    property dwSubEntries : UInt32
    property dwDialMode : Win32cr::NetworkManagement::Rras::MPR_INTERFACE_DIAL_MODE
    property dwDialExtraPercent : UInt32
    property dwDialExtraSampleSeconds : UInt32
    property dwHangUpExtraPercent : UInt32
    property dwHangUpExtraSampleSeconds : UInt32
    property dwIdleDisconnectSeconds : UInt32
    property dwType : UInt32
    property dwEncryptionType : Win32cr::NetworkManagement::Rras::MPR_ET
    property dwCustomAuthKey : UInt32
    property dwCustomAuthDataSize : UInt32
    property lpbCustomAuthData : UInt8*
    property guidId : LibC::GUID
    property dwVpnStrategy : Win32cr::NetworkManagement::Rras::MPR_VS
    def initialize(@wszInterfaceName : UInt16[257], @hInterface : Win32cr::Foundation::HANDLE, @fEnabled : Win32cr::Foundation::BOOL, @dwIfType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE, @dwConnectionState : Win32cr::NetworkManagement::Rras::ROUTER_CONNECTION_STATE, @fUnReachabilityReasons : UInt32, @dwLastError : UInt32, @dwfOptions : UInt32, @szLocalPhoneNumber : UInt16[129], @szAlternates : Win32cr::Foundation::PWSTR, @ipaddr : UInt32, @ipaddrDns : UInt32, @ipaddrDnsAlt : UInt32, @ipaddrWins : UInt32, @ipaddrWinsAlt : UInt32, @dwfNetProtocols : UInt32, @szDeviceType : UInt16[17], @szDeviceName : UInt16[129], @szX25PadType : UInt16[33], @szX25Address : UInt16[201], @szX25Facilities : UInt16[201], @szX25UserData : UInt16[201], @dwChannels : UInt32, @dwSubEntries : UInt32, @dwDialMode : Win32cr::NetworkManagement::Rras::MPR_INTERFACE_DIAL_MODE, @dwDialExtraPercent : UInt32, @dwDialExtraSampleSeconds : UInt32, @dwHangUpExtraPercent : UInt32, @dwHangUpExtraSampleSeconds : UInt32, @dwIdleDisconnectSeconds : UInt32, @dwType : UInt32, @dwEncryptionType : Win32cr::NetworkManagement::Rras::MPR_ET, @dwCustomAuthKey : UInt32, @dwCustomAuthDataSize : UInt32, @lpbCustomAuthData : UInt8*, @guidId : LibC::GUID, @dwVpnStrategy : Win32cr::NetworkManagement::Rras::MPR_VS)
    end
  end

  @[Extern]
  struct MPR_INTERFACE_3
    property wszInterfaceName : UInt16[257]
    property hInterface : Win32cr::Foundation::HANDLE
    property fEnabled : Win32cr::Foundation::BOOL
    property dwIfType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE
    property dwConnectionState : Win32cr::NetworkManagement::Rras::ROUTER_CONNECTION_STATE
    property fUnReachabilityReasons : UInt32
    property dwLastError : UInt32
    property dwfOptions : UInt32
    property szLocalPhoneNumber : UInt16[129]
    property szAlternates : Win32cr::Foundation::PWSTR
    property ipaddr : UInt32
    property ipaddrDns : UInt32
    property ipaddrDnsAlt : UInt32
    property ipaddrWins : UInt32
    property ipaddrWinsAlt : UInt32
    property dwfNetProtocols : UInt32
    property szDeviceType : UInt16[17]
    property szDeviceName : UInt16[129]
    property szX25PadType : UInt16[33]
    property szX25Address : UInt16[201]
    property szX25Facilities : UInt16[201]
    property szX25UserData : UInt16[201]
    property dwChannels : UInt32
    property dwSubEntries : UInt32
    property dwDialMode : Win32cr::NetworkManagement::Rras::MPR_INTERFACE_DIAL_MODE
    property dwDialExtraPercent : UInt32
    property dwDialExtraSampleSeconds : UInt32
    property dwHangUpExtraPercent : UInt32
    property dwHangUpExtraSampleSeconds : UInt32
    property dwIdleDisconnectSeconds : UInt32
    property dwType : UInt32
    property dwEncryptionType : Win32cr::NetworkManagement::Rras::MPR_ET
    property dwCustomAuthKey : UInt32
    property dwCustomAuthDataSize : UInt32
    property lpbCustomAuthData : UInt8*
    property guidId : LibC::GUID
    property dwVpnStrategy : Win32cr::NetworkManagement::Rras::MPR_VS
    property address_count : UInt32
    property ipv6addrDns : Win32cr::Networking::WinSock::IN6_ADDR
    property ipv6addrDnsAlt : Win32cr::Networking::WinSock::IN6_ADDR
    property ipv6addr : Win32cr::Networking::WinSock::IN6_ADDR*
    def initialize(@wszInterfaceName : UInt16[257], @hInterface : Win32cr::Foundation::HANDLE, @fEnabled : Win32cr::Foundation::BOOL, @dwIfType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE, @dwConnectionState : Win32cr::NetworkManagement::Rras::ROUTER_CONNECTION_STATE, @fUnReachabilityReasons : UInt32, @dwLastError : UInt32, @dwfOptions : UInt32, @szLocalPhoneNumber : UInt16[129], @szAlternates : Win32cr::Foundation::PWSTR, @ipaddr : UInt32, @ipaddrDns : UInt32, @ipaddrDnsAlt : UInt32, @ipaddrWins : UInt32, @ipaddrWinsAlt : UInt32, @dwfNetProtocols : UInt32, @szDeviceType : UInt16[17], @szDeviceName : UInt16[129], @szX25PadType : UInt16[33], @szX25Address : UInt16[201], @szX25Facilities : UInt16[201], @szX25UserData : UInt16[201], @dwChannels : UInt32, @dwSubEntries : UInt32, @dwDialMode : Win32cr::NetworkManagement::Rras::MPR_INTERFACE_DIAL_MODE, @dwDialExtraPercent : UInt32, @dwDialExtraSampleSeconds : UInt32, @dwHangUpExtraPercent : UInt32, @dwHangUpExtraSampleSeconds : UInt32, @dwIdleDisconnectSeconds : UInt32, @dwType : UInt32, @dwEncryptionType : Win32cr::NetworkManagement::Rras::MPR_ET, @dwCustomAuthKey : UInt32, @dwCustomAuthDataSize : UInt32, @lpbCustomAuthData : UInt8*, @guidId : LibC::GUID, @dwVpnStrategy : Win32cr::NetworkManagement::Rras::MPR_VS, @address_count : UInt32, @ipv6addrDns : Win32cr::Networking::WinSock::IN6_ADDR, @ipv6addrDnsAlt : Win32cr::Networking::WinSock::IN6_ADDR, @ipv6addr : Win32cr::Networking::WinSock::IN6_ADDR*)
    end
  end

  @[Extern]
  struct MPR_DEVICE_0
    property szDeviceType : UInt16[17]
    property szDeviceName : UInt16[129]
    def initialize(@szDeviceType : UInt16[17], @szDeviceName : UInt16[129])
    end
  end

  @[Extern]
  struct MPR_DEVICE_1
    property szDeviceType : UInt16[17]
    property szDeviceName : UInt16[129]
    property szLocalPhoneNumber : UInt16[129]
    property szAlternates : Win32cr::Foundation::PWSTR
    def initialize(@szDeviceType : UInt16[17], @szDeviceName : UInt16[129], @szLocalPhoneNumber : UInt16[129], @szAlternates : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct MPR_CREDENTIALSEX_0
    property dwSize : UInt32
    property lpbCredentialsInfo : UInt8*
    def initialize(@dwSize : UInt32, @lpbCredentialsInfo : UInt8*)
    end
  end

  @[Extern]
  struct MPR_CREDENTIALSEX_1
    property dwSize : UInt32
    property lpbCredentialsInfo : UInt8*
    def initialize(@dwSize : UInt32, @lpbCredentialsInfo : UInt8*)
    end
  end

  @[Extern]
  struct MPR_TRANSPORT_0
    property dwTransportId : UInt32
    property hTransport : Win32cr::Foundation::HANDLE
    property wszTransportName : UInt16[41]
    def initialize(@dwTransportId : UInt32, @hTransport : Win32cr::Foundation::HANDLE, @wszTransportName : UInt16[41])
    end
  end

  @[Extern]
  struct MPR_IFTRANSPORT_0
    property dwTransportId : UInt32
    property hIfTransport : Win32cr::Foundation::HANDLE
    property wszIfTransportName : UInt16[41]
    def initialize(@dwTransportId : UInt32, @hIfTransport : Win32cr::Foundation::HANDLE, @wszIfTransportName : UInt16[41])
    end
  end

  @[Extern]
  struct MPR_SERVER_0
    property fLanOnlyMode : Win32cr::Foundation::BOOL
    property dwUpTime : UInt32
    property dwTotalPorts : UInt32
    property dwPortsInUse : UInt32
    def initialize(@fLanOnlyMode : Win32cr::Foundation::BOOL, @dwUpTime : UInt32, @dwTotalPorts : UInt32, @dwPortsInUse : UInt32)
    end
  end

  @[Extern]
  struct MPR_SERVER_1
    property dwNumPptpPorts : UInt32
    property dwPptpPortFlags : UInt32
    property dwNumL2tpPorts : UInt32
    property dwL2tpPortFlags : UInt32
    def initialize(@dwNumPptpPorts : UInt32, @dwPptpPortFlags : UInt32, @dwNumL2tpPorts : UInt32, @dwL2tpPortFlags : UInt32)
    end
  end

  @[Extern]
  struct MPR_SERVER_2
    property dwNumPptpPorts : UInt32
    property dwPptpPortFlags : UInt32
    property dwNumL2tpPorts : UInt32
    property dwL2tpPortFlags : UInt32
    property dwNumSstpPorts : UInt32
    property dwSstpPortFlags : UInt32
    def initialize(@dwNumPptpPorts : UInt32, @dwPptpPortFlags : UInt32, @dwNumL2tpPorts : UInt32, @dwL2tpPortFlags : UInt32, @dwNumSstpPorts : UInt32, @dwSstpPortFlags : UInt32)
    end
  end

  @[Extern]
  struct RAS_PORT_0
    property hPort : Win32cr::Foundation::HANDLE
    property hConnection : Win32cr::Foundation::HANDLE
    property dwPortCondition : Win32cr::NetworkManagement::Rras::RAS_PORT_CONDITION
    property dwTotalNumberOfCalls : UInt32
    property dwConnectDuration : UInt32
    property wszPortName : UInt16[17]
    property wszMediaName : UInt16[17]
    property wszDeviceName : UInt16[129]
    property wszDeviceType : UInt16[17]
    def initialize(@hPort : Win32cr::Foundation::HANDLE, @hConnection : Win32cr::Foundation::HANDLE, @dwPortCondition : Win32cr::NetworkManagement::Rras::RAS_PORT_CONDITION, @dwTotalNumberOfCalls : UInt32, @dwConnectDuration : UInt32, @wszPortName : UInt16[17], @wszMediaName : UInt16[17], @wszDeviceName : UInt16[129], @wszDeviceType : UInt16[17])
    end
  end

  @[Extern]
  struct RAS_PORT_1
    property hPort : Win32cr::Foundation::HANDLE
    property hConnection : Win32cr::Foundation::HANDLE
    property dwHardwareCondition : Win32cr::NetworkManagement::Rras::RAS_HARDWARE_CONDITION
    property dwLineSpeed : UInt32
    property dwBytesXmited : UInt32
    property dwBytesRcved : UInt32
    property dwFramesXmited : UInt32
    property dwFramesRcved : UInt32
    property dwCrcErr : UInt32
    property dwTimeoutErr : UInt32
    property dwAlignmentErr : UInt32
    property dwHardwareOverrunErr : UInt32
    property dwFramingErr : UInt32
    property dwBufferOverrunErr : UInt32
    property dwCompressionRatioIn : UInt32
    property dwCompressionRatioOut : UInt32
    def initialize(@hPort : Win32cr::Foundation::HANDLE, @hConnection : Win32cr::Foundation::HANDLE, @dwHardwareCondition : Win32cr::NetworkManagement::Rras::RAS_HARDWARE_CONDITION, @dwLineSpeed : UInt32, @dwBytesXmited : UInt32, @dwBytesRcved : UInt32, @dwFramesXmited : UInt32, @dwFramesRcved : UInt32, @dwCrcErr : UInt32, @dwTimeoutErr : UInt32, @dwAlignmentErr : UInt32, @dwHardwareOverrunErr : UInt32, @dwFramingErr : UInt32, @dwBufferOverrunErr : UInt32, @dwCompressionRatioIn : UInt32, @dwCompressionRatioOut : UInt32)
    end
  end

  @[Extern]
  struct RAS_PORT_2
    property hPort : Win32cr::Foundation::HANDLE
    property hConnection : Win32cr::Foundation::HANDLE
    property dwConn_State : UInt32
    property wszPortName : UInt16[17]
    property wszMediaName : UInt16[17]
    property wszDeviceName : UInt16[129]
    property wszDeviceType : UInt16[17]
    property dwHardwareCondition : Win32cr::NetworkManagement::Rras::RAS_HARDWARE_CONDITION
    property dwLineSpeed : UInt32
    property dwCrcErr : UInt32
    property dwSerialOverRunErrs : UInt32
    property dwTimeoutErr : UInt32
    property dwAlignmentErr : UInt32
    property dwHardwareOverrunErr : UInt32
    property dwFramingErr : UInt32
    property dwBufferOverrunErr : UInt32
    property dwCompressionRatioIn : UInt32
    property dwCompressionRatioOut : UInt32
    property dwTotalErrors : UInt32
    property ullBytesXmited : UInt64
    property ullBytesRcved : UInt64
    property ullFramesXmited : UInt64
    property ullFramesRcved : UInt64
    property ullBytesTxUncompressed : UInt64
    property ullBytesTxCompressed : UInt64
    property ullBytesRcvUncompressed : UInt64
    property ullBytesRcvCompressed : UInt64
    def initialize(@hPort : Win32cr::Foundation::HANDLE, @hConnection : Win32cr::Foundation::HANDLE, @dwConn_State : UInt32, @wszPortName : UInt16[17], @wszMediaName : UInt16[17], @wszDeviceName : UInt16[129], @wszDeviceType : UInt16[17], @dwHardwareCondition : Win32cr::NetworkManagement::Rras::RAS_HARDWARE_CONDITION, @dwLineSpeed : UInt32, @dwCrcErr : UInt32, @dwSerialOverRunErrs : UInt32, @dwTimeoutErr : UInt32, @dwAlignmentErr : UInt32, @dwHardwareOverrunErr : UInt32, @dwFramingErr : UInt32, @dwBufferOverrunErr : UInt32, @dwCompressionRatioIn : UInt32, @dwCompressionRatioOut : UInt32, @dwTotalErrors : UInt32, @ullBytesXmited : UInt64, @ullBytesRcved : UInt64, @ullFramesXmited : UInt64, @ullFramesRcved : UInt64, @ullBytesTxUncompressed : UInt64, @ullBytesTxCompressed : UInt64, @ullBytesRcvUncompressed : UInt64, @ullBytesRcvCompressed : UInt64)
    end
  end

  @[Extern]
  struct PPP_NBFCP_INFO
    property dwError : UInt32
    property wszWksta : UInt16[17]
    def initialize(@dwError : UInt32, @wszWksta : UInt16[17])
    end
  end

  @[Extern]
  struct PPP_IPCP_INFO
    property dwError : UInt32
    property wszAddress : UInt16[16]
    property wszRemoteAddress : UInt16[16]
    def initialize(@dwError : UInt32, @wszAddress : UInt16[16], @wszRemoteAddress : UInt16[16])
    end
  end

  @[Extern]
  struct PPP_IPCP_INFO2
    property dwError : UInt32
    property wszAddress : UInt16[16]
    property wszRemoteAddress : UInt16[16]
    property dwOptions : UInt32
    property dwRemoteOptions : UInt32
    def initialize(@dwError : UInt32, @wszAddress : UInt16[16], @wszRemoteAddress : UInt16[16], @dwOptions : UInt32, @dwRemoteOptions : UInt32)
    end
  end

  @[Extern]
  struct PPP_IPXCP_INFO
    property dwError : UInt32
    property wszAddress : UInt16[23]
    def initialize(@dwError : UInt32, @wszAddress : UInt16[23])
    end
  end

  @[Extern]
  struct PPP_ATCP_INFO
    property dwError : UInt32
    property wszAddress : UInt16[33]
    def initialize(@dwError : UInt32, @wszAddress : UInt16[33])
    end
  end

  @[Extern]
  struct PPP_IPV6_CP_INFO
    property dwVersion : UInt32
    property dwSize : UInt32
    property dwError : UInt32
    property bInterfaceIdentifier : UInt8[8]
    property bRemoteInterfaceIdentifier : UInt8[8]
    property dwOptions : UInt32
    property dwRemoteOptions : UInt32
    property bPrefix : UInt8[8]
    property dwPrefixLength : UInt32
    def initialize(@dwVersion : UInt32, @dwSize : UInt32, @dwError : UInt32, @bInterfaceIdentifier : UInt8[8], @bRemoteInterfaceIdentifier : UInt8[8], @dwOptions : UInt32, @dwRemoteOptions : UInt32, @bPrefix : UInt8[8], @dwPrefixLength : UInt32)
    end
  end

  @[Extern]
  struct PPP_INFO
    property nbf : Win32cr::NetworkManagement::Rras::PPP_NBFCP_INFO
    property ip : Win32cr::NetworkManagement::Rras::PPP_IPCP_INFO
    property ipx : Win32cr::NetworkManagement::Rras::PPP_IPXCP_INFO
    property at : Win32cr::NetworkManagement::Rras::PPP_ATCP_INFO
    def initialize(@nbf : Win32cr::NetworkManagement::Rras::PPP_NBFCP_INFO, @ip : Win32cr::NetworkManagement::Rras::PPP_IPCP_INFO, @ipx : Win32cr::NetworkManagement::Rras::PPP_IPXCP_INFO, @at : Win32cr::NetworkManagement::Rras::PPP_ATCP_INFO)
    end
  end

  @[Extern]
  struct PPP_CCP_INFO
    property dwError : UInt32
    property dwCompressionAlgorithm : UInt32
    property dwOptions : UInt32
    property dwRemoteCompressionAlgorithm : UInt32
    property dwRemoteOptions : UInt32
    def initialize(@dwError : UInt32, @dwCompressionAlgorithm : UInt32, @dwOptions : UInt32, @dwRemoteCompressionAlgorithm : UInt32, @dwRemoteOptions : UInt32)
    end
  end

  @[Extern]
  struct PPP_LCP_INFO
    property dwError : UInt32
    property dwAuthenticationProtocol : Win32cr::NetworkManagement::Rras::PPP_LCP
    property dwAuthenticationData : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO_AUTH_DATA
    property dwRemoteAuthenticationProtocol : UInt32
    property dwRemoteAuthenticationData : UInt32
    property dwTerminateReason : UInt32
    property dwRemoteTerminateReason : UInt32
    property dwOptions : UInt32
    property dwRemoteOptions : UInt32
    property dwEapTypeId : UInt32
    property dwRemoteEapTypeId : UInt32
    def initialize(@dwError : UInt32, @dwAuthenticationProtocol : Win32cr::NetworkManagement::Rras::PPP_LCP, @dwAuthenticationData : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO_AUTH_DATA, @dwRemoteAuthenticationProtocol : UInt32, @dwRemoteAuthenticationData : UInt32, @dwTerminateReason : UInt32, @dwRemoteTerminateReason : UInt32, @dwOptions : UInt32, @dwRemoteOptions : UInt32, @dwEapTypeId : UInt32, @dwRemoteEapTypeId : UInt32)
    end
  end

  @[Extern]
  struct PPP_INFO_2
    property nbf : Win32cr::NetworkManagement::Rras::PPP_NBFCP_INFO
    property ip : Win32cr::NetworkManagement::Rras::PPP_IPCP_INFO2
    property ipx : Win32cr::NetworkManagement::Rras::PPP_IPXCP_INFO
    property at : Win32cr::NetworkManagement::Rras::PPP_ATCP_INFO
    property ccp : Win32cr::NetworkManagement::Rras::PPP_CCP_INFO
    property lcp : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO
    def initialize(@nbf : Win32cr::NetworkManagement::Rras::PPP_NBFCP_INFO, @ip : Win32cr::NetworkManagement::Rras::PPP_IPCP_INFO2, @ipx : Win32cr::NetworkManagement::Rras::PPP_IPXCP_INFO, @at : Win32cr::NetworkManagement::Rras::PPP_ATCP_INFO, @ccp : Win32cr::NetworkManagement::Rras::PPP_CCP_INFO, @lcp : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO)
    end
  end

  @[Extern]
  struct PPP_INFO_3
    property nbf : Win32cr::NetworkManagement::Rras::PPP_NBFCP_INFO
    property ip : Win32cr::NetworkManagement::Rras::PPP_IPCP_INFO2
    property ipv6 : Win32cr::NetworkManagement::Rras::PPP_IPV6_CP_INFO
    property ccp : Win32cr::NetworkManagement::Rras::PPP_CCP_INFO
    property lcp : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO
    def initialize(@nbf : Win32cr::NetworkManagement::Rras::PPP_NBFCP_INFO, @ip : Win32cr::NetworkManagement::Rras::PPP_IPCP_INFO2, @ipv6 : Win32cr::NetworkManagement::Rras::PPP_IPV6_CP_INFO, @ccp : Win32cr::NetworkManagement::Rras::PPP_CCP_INFO, @lcp : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO)
    end
  end

  @[Extern]
  struct RAS_CONNECTION_0
    property hConnection : Win32cr::Foundation::HANDLE
    property hInterface : Win32cr::Foundation::HANDLE
    property dwConnectDuration : UInt32
    property dwInterfaceType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE
    property dwConnectionFlags : Win32cr::NetworkManagement::Rras::RAS_FLAGS
    property wszInterfaceName : UInt16[257]
    property wszUserName : UInt16[257]
    property wszLogonDomain : UInt16[16]
    property wszRemoteComputer : UInt16[17]
    def initialize(@hConnection : Win32cr::Foundation::HANDLE, @hInterface : Win32cr::Foundation::HANDLE, @dwConnectDuration : UInt32, @dwInterfaceType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE, @dwConnectionFlags : Win32cr::NetworkManagement::Rras::RAS_FLAGS, @wszInterfaceName : UInt16[257], @wszUserName : UInt16[257], @wszLogonDomain : UInt16[16], @wszRemoteComputer : UInt16[17])
    end
  end

  @[Extern]
  struct RAS_CONNECTION_1
    property hConnection : Win32cr::Foundation::HANDLE
    property hInterface : Win32cr::Foundation::HANDLE
    property ppp_info : Win32cr::NetworkManagement::Rras::PPP_INFO
    property dwBytesXmited : UInt32
    property dwBytesRcved : UInt32
    property dwFramesXmited : UInt32
    property dwFramesRcved : UInt32
    property dwCrcErr : UInt32
    property dwTimeoutErr : UInt32
    property dwAlignmentErr : UInt32
    property dwHardwareOverrunErr : UInt32
    property dwFramingErr : UInt32
    property dwBufferOverrunErr : UInt32
    property dwCompressionRatioIn : UInt32
    property dwCompressionRatioOut : UInt32
    def initialize(@hConnection : Win32cr::Foundation::HANDLE, @hInterface : Win32cr::Foundation::HANDLE, @ppp_info : Win32cr::NetworkManagement::Rras::PPP_INFO, @dwBytesXmited : UInt32, @dwBytesRcved : UInt32, @dwFramesXmited : UInt32, @dwFramesRcved : UInt32, @dwCrcErr : UInt32, @dwTimeoutErr : UInt32, @dwAlignmentErr : UInt32, @dwHardwareOverrunErr : UInt32, @dwFramingErr : UInt32, @dwBufferOverrunErr : UInt32, @dwCompressionRatioIn : UInt32, @dwCompressionRatioOut : UInt32)
    end
  end

  @[Extern]
  struct RAS_CONNECTION_2
    property hConnection : Win32cr::Foundation::HANDLE
    property wszUserName : UInt16[257]
    property dwInterfaceType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE
    property guid : LibC::GUID
    property ppp_info2 : Win32cr::NetworkManagement::Rras::PPP_INFO_2
    def initialize(@hConnection : Win32cr::Foundation::HANDLE, @wszUserName : UInt16[257], @dwInterfaceType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE, @guid : LibC::GUID, @ppp_info2 : Win32cr::NetworkManagement::Rras::PPP_INFO_2)
    end
  end

  @[Extern]
  struct RAS_CONNECTION_3
    property dwVersion : UInt32
    property dwSize : UInt32
    property hConnection : Win32cr::Foundation::HANDLE
    property wszUserName : UInt16[257]
    property dwInterfaceType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE
    property guid : LibC::GUID
    property ppp_info3 : Win32cr::NetworkManagement::Rras::PPP_INFO_3
    property rasQuarState : Win32cr::NetworkManagement::Rras::RAS_QUARANTINE_STATE
    property timer : Win32cr::Foundation::FILETIME
    def initialize(@dwVersion : UInt32, @dwSize : UInt32, @hConnection : Win32cr::Foundation::HANDLE, @wszUserName : UInt16[257], @dwInterfaceType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE, @guid : LibC::GUID, @ppp_info3 : Win32cr::NetworkManagement::Rras::PPP_INFO_3, @rasQuarState : Win32cr::NetworkManagement::Rras::RAS_QUARANTINE_STATE, @timer : Win32cr::Foundation::FILETIME)
    end
  end

  @[Extern]
  struct RAS_USER_0
    property bfPrivilege : UInt8
    property wszPhoneNumber : UInt16[129]
    def initialize(@bfPrivilege : UInt8, @wszPhoneNumber : UInt16[129])
    end
  end

  @[Extern]
  struct RAS_USER_1
    property bfPrivilege : UInt8
    property wszPhoneNumber : UInt16[129]
    property bfPrivilege2 : UInt8
    def initialize(@bfPrivilege : UInt8, @wszPhoneNumber : UInt16[129], @bfPrivilege2 : UInt8)
    end
  end

  @[Extern]
  struct MPR_FILTER_0
    property fEnable : Win32cr::Foundation::BOOL
    def initialize(@fEnable : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct MPRAPI_OBJECT_HEADER
    property revision : UInt8
    property type__ : UInt8
    property size : UInt16
    def initialize(@revision : UInt8, @type__ : UInt8, @size : UInt16)
    end
  end

  @[Extern]
  struct PPP_PROJECTION_INFO
    property dwIPv4NegotiationError : UInt32
    property wszAddress : UInt16[16]
    property wszRemoteAddress : UInt16[16]
    property dwIPv4Options : UInt32
    property dwIPv4RemoteOptions : UInt32
    property i_pv4_sub_interface_index : UInt64
    property dwIPv6NegotiationError : UInt32
    property bInterfaceIdentifier : UInt8[8]
    property bRemoteInterfaceIdentifier : UInt8[8]
    property bPrefix : UInt8[8]
    property dwPrefixLength : UInt32
    property i_pv6_sub_interface_index : UInt64
    property dwLcpError : UInt32
    property dwAuthenticationProtocol : Win32cr::NetworkManagement::Rras::PPP_LCP
    property dwAuthenticationData : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO_AUTH_DATA
    property dwRemoteAuthenticationProtocol : Win32cr::NetworkManagement::Rras::PPP_LCP
    property dwRemoteAuthenticationData : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO_AUTH_DATA
    property dwLcpTerminateReason : UInt32
    property dwLcpRemoteTerminateReason : UInt32
    property dwLcpOptions : UInt32
    property dwLcpRemoteOptions : UInt32
    property dwEapTypeId : UInt32
    property dwRemoteEapTypeId : UInt32
    property dwCcpError : UInt32
    property dwCompressionAlgorithm : UInt32
    property dwCcpOptions : UInt32
    property dwRemoteCompressionAlgorithm : UInt32
    property dwCcpRemoteOptions : UInt32
    def initialize(@dwIPv4NegotiationError : UInt32, @wszAddress : UInt16[16], @wszRemoteAddress : UInt16[16], @dwIPv4Options : UInt32, @dwIPv4RemoteOptions : UInt32, @i_pv4_sub_interface_index : UInt64, @dwIPv6NegotiationError : UInt32, @bInterfaceIdentifier : UInt8[8], @bRemoteInterfaceIdentifier : UInt8[8], @bPrefix : UInt8[8], @dwPrefixLength : UInt32, @i_pv6_sub_interface_index : UInt64, @dwLcpError : UInt32, @dwAuthenticationProtocol : Win32cr::NetworkManagement::Rras::PPP_LCP, @dwAuthenticationData : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO_AUTH_DATA, @dwRemoteAuthenticationProtocol : Win32cr::NetworkManagement::Rras::PPP_LCP, @dwRemoteAuthenticationData : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO_AUTH_DATA, @dwLcpTerminateReason : UInt32, @dwLcpRemoteTerminateReason : UInt32, @dwLcpOptions : UInt32, @dwLcpRemoteOptions : UInt32, @dwEapTypeId : UInt32, @dwRemoteEapTypeId : UInt32, @dwCcpError : UInt32, @dwCompressionAlgorithm : UInt32, @dwCcpOptions : UInt32, @dwRemoteCompressionAlgorithm : UInt32, @dwCcpRemoteOptions : UInt32)
    end
  end

  @[Extern]
  struct PPP_PROJECTION_INFO2
    property dwIPv4NegotiationError : UInt32
    property wszAddress : UInt16[16]
    property wszRemoteAddress : UInt16[16]
    property dwIPv4Options : UInt32
    property dwIPv4RemoteOptions : UInt32
    property i_pv4_sub_interface_index : UInt64
    property dwIPv6NegotiationError : UInt32
    property bInterfaceIdentifier : UInt8[8]
    property bRemoteInterfaceIdentifier : UInt8[8]
    property bPrefix : UInt8[8]
    property dwPrefixLength : UInt32
    property i_pv6_sub_interface_index : UInt64
    property dwLcpError : UInt32
    property dwAuthenticationProtocol : Win32cr::NetworkManagement::Rras::PPP_LCP
    property dwAuthenticationData : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO_AUTH_DATA
    property dwRemoteAuthenticationProtocol : Win32cr::NetworkManagement::Rras::PPP_LCP
    property dwRemoteAuthenticationData : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO_AUTH_DATA
    property dwLcpTerminateReason : UInt32
    property dwLcpRemoteTerminateReason : UInt32
    property dwLcpOptions : UInt32
    property dwLcpRemoteOptions : UInt32
    property dwEapTypeId : UInt32
    property dwEmbeddedEAPTypeId : UInt32
    property dwRemoteEapTypeId : UInt32
    property dwCcpError : UInt32
    property dwCompressionAlgorithm : UInt32
    property dwCcpOptions : UInt32
    property dwRemoteCompressionAlgorithm : UInt32
    property dwCcpRemoteOptions : UInt32
    def initialize(@dwIPv4NegotiationError : UInt32, @wszAddress : UInt16[16], @wszRemoteAddress : UInt16[16], @dwIPv4Options : UInt32, @dwIPv4RemoteOptions : UInt32, @i_pv4_sub_interface_index : UInt64, @dwIPv6NegotiationError : UInt32, @bInterfaceIdentifier : UInt8[8], @bRemoteInterfaceIdentifier : UInt8[8], @bPrefix : UInt8[8], @dwPrefixLength : UInt32, @i_pv6_sub_interface_index : UInt64, @dwLcpError : UInt32, @dwAuthenticationProtocol : Win32cr::NetworkManagement::Rras::PPP_LCP, @dwAuthenticationData : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO_AUTH_DATA, @dwRemoteAuthenticationProtocol : Win32cr::NetworkManagement::Rras::PPP_LCP, @dwRemoteAuthenticationData : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO_AUTH_DATA, @dwLcpTerminateReason : UInt32, @dwLcpRemoteTerminateReason : UInt32, @dwLcpOptions : UInt32, @dwLcpRemoteOptions : UInt32, @dwEapTypeId : UInt32, @dwEmbeddedEAPTypeId : UInt32, @dwRemoteEapTypeId : UInt32, @dwCcpError : UInt32, @dwCompressionAlgorithm : UInt32, @dwCcpOptions : UInt32, @dwRemoteCompressionAlgorithm : UInt32, @dwCcpRemoteOptions : UInt32)
    end
  end

  @[Extern]
  struct IKEV2_PROJECTION_INFO
    property dwIPv4NegotiationError : UInt32
    property wszAddress : UInt16[16]
    property wszRemoteAddress : UInt16[16]
    property i_pv4_sub_interface_index : UInt64
    property dwIPv6NegotiationError : UInt32
    property bInterfaceIdentifier : UInt8[8]
    property bRemoteInterfaceIdentifier : UInt8[8]
    property bPrefix : UInt8[8]
    property dwPrefixLength : UInt32
    property i_pv6_sub_interface_index : UInt64
    property dwOptions : UInt32
    property dwAuthenticationProtocol : UInt32
    property dwEapTypeId : UInt32
    property dwCompressionAlgorithm : UInt32
    property dwEncryptionMethod : UInt32
    def initialize(@dwIPv4NegotiationError : UInt32, @wszAddress : UInt16[16], @wszRemoteAddress : UInt16[16], @i_pv4_sub_interface_index : UInt64, @dwIPv6NegotiationError : UInt32, @bInterfaceIdentifier : UInt8[8], @bRemoteInterfaceIdentifier : UInt8[8], @bPrefix : UInt8[8], @dwPrefixLength : UInt32, @i_pv6_sub_interface_index : UInt64, @dwOptions : UInt32, @dwAuthenticationProtocol : UInt32, @dwEapTypeId : UInt32, @dwCompressionAlgorithm : UInt32, @dwEncryptionMethod : UInt32)
    end
  end

  @[Extern]
  struct IKEV2_PROJECTION_INFO2
    property dwIPv4NegotiationError : UInt32
    property wszAddress : UInt16[16]
    property wszRemoteAddress : UInt16[16]
    property i_pv4_sub_interface_index : UInt64
    property dwIPv6NegotiationError : UInt32
    property bInterfaceIdentifier : UInt8[8]
    property bRemoteInterfaceIdentifier : UInt8[8]
    property bPrefix : UInt8[8]
    property dwPrefixLength : UInt32
    property i_pv6_sub_interface_index : UInt64
    property dwOptions : UInt32
    property dwAuthenticationProtocol : UInt32
    property dwEapTypeId : UInt32
    property dwEmbeddedEAPTypeId : UInt32
    property dwCompressionAlgorithm : UInt32
    property dwEncryptionMethod : UInt32
    def initialize(@dwIPv4NegotiationError : UInt32, @wszAddress : UInt16[16], @wszRemoteAddress : UInt16[16], @i_pv4_sub_interface_index : UInt64, @dwIPv6NegotiationError : UInt32, @bInterfaceIdentifier : UInt8[8], @bRemoteInterfaceIdentifier : UInt8[8], @bPrefix : UInt8[8], @dwPrefixLength : UInt32, @i_pv6_sub_interface_index : UInt64, @dwOptions : UInt32, @dwAuthenticationProtocol : UInt32, @dwEapTypeId : UInt32, @dwEmbeddedEAPTypeId : UInt32, @dwCompressionAlgorithm : UInt32, @dwEncryptionMethod : UInt32)
    end
  end

  @[Extern]
  struct PROJECTION_INFO
    property projectionInfoType : UInt8
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property ppp_projection_info : Win32cr::NetworkManagement::Rras::PPP_PROJECTION_INFO
    property ikev2_projection_info : Win32cr::NetworkManagement::Rras::IKEV2_PROJECTION_INFO
    def initialize(@ppp_projection_info : Win32cr::NetworkManagement::Rras::PPP_PROJECTION_INFO, @ikev2_projection_info : Win32cr::NetworkManagement::Rras::IKEV2_PROJECTION_INFO)
    end
    end

    def initialize(@projectionInfoType : UInt8, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct PROJECTION_INFO2
    property projectionInfoType : UInt8
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property ppp_projection_info : Win32cr::NetworkManagement::Rras::PPP_PROJECTION_INFO2
    property ikev2_projection_info : Win32cr::NetworkManagement::Rras::IKEV2_PROJECTION_INFO2
    def initialize(@ppp_projection_info : Win32cr::NetworkManagement::Rras::PPP_PROJECTION_INFO2, @ikev2_projection_info : Win32cr::NetworkManagement::Rras::IKEV2_PROJECTION_INFO2)
    end
    end

    def initialize(@projectionInfoType : UInt8, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct RAS_CONNECTION_EX
    property header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER
    property dwConnectDuration : UInt32
    property dwInterfaceType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE
    property dwConnectionFlags : Win32cr::NetworkManagement::Rras::RAS_FLAGS
    property wszInterfaceName : UInt16[257]
    property wszUserName : UInt16[257]
    property wszLogonDomain : UInt16[16]
    property wszRemoteComputer : UInt16[17]
    property guid : LibC::GUID
    property rasQuarState : Win32cr::NetworkManagement::Rras::RAS_QUARANTINE_STATE
    property probationTime : Win32cr::Foundation::FILETIME
    property dwBytesXmited : UInt32
    property dwBytesRcved : UInt32
    property dwFramesXmited : UInt32
    property dwFramesRcved : UInt32
    property dwCrcErr : UInt32
    property dwTimeoutErr : UInt32
    property dwAlignmentErr : UInt32
    property dwHardwareOverrunErr : UInt32
    property dwFramingErr : UInt32
    property dwBufferOverrunErr : UInt32
    property dwCompressionRatioIn : UInt32
    property dwCompressionRatioOut : UInt32
    property dwNumSwitchOvers : UInt32
    property wszRemoteEndpointAddress : UInt16[65]
    property wszLocalEndpointAddress : UInt16[65]
    property projection_info : Win32cr::NetworkManagement::Rras::PROJECTION_INFO
    property hConnection : Win32cr::Foundation::HANDLE
    property hInterface : Win32cr::Foundation::HANDLE
    def initialize(@header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER, @dwConnectDuration : UInt32, @dwInterfaceType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE, @dwConnectionFlags : Win32cr::NetworkManagement::Rras::RAS_FLAGS, @wszInterfaceName : UInt16[257], @wszUserName : UInt16[257], @wszLogonDomain : UInt16[16], @wszRemoteComputer : UInt16[17], @guid : LibC::GUID, @rasQuarState : Win32cr::NetworkManagement::Rras::RAS_QUARANTINE_STATE, @probationTime : Win32cr::Foundation::FILETIME, @dwBytesXmited : UInt32, @dwBytesRcved : UInt32, @dwFramesXmited : UInt32, @dwFramesRcved : UInt32, @dwCrcErr : UInt32, @dwTimeoutErr : UInt32, @dwAlignmentErr : UInt32, @dwHardwareOverrunErr : UInt32, @dwFramingErr : UInt32, @dwBufferOverrunErr : UInt32, @dwCompressionRatioIn : UInt32, @dwCompressionRatioOut : UInt32, @dwNumSwitchOvers : UInt32, @wszRemoteEndpointAddress : UInt16[65], @wszLocalEndpointAddress : UInt16[65], @projection_info : Win32cr::NetworkManagement::Rras::PROJECTION_INFO, @hConnection : Win32cr::Foundation::HANDLE, @hInterface : Win32cr::Foundation::HANDLE)
    end
  end

  @[Extern]
  struct RAS_CONNECTION_4
    property dwConnectDuration : UInt32
    property dwInterfaceType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE
    property dwConnectionFlags : Win32cr::NetworkManagement::Rras::RAS_FLAGS
    property wszInterfaceName : UInt16[257]
    property wszUserName : UInt16[257]
    property wszLogonDomain : UInt16[16]
    property wszRemoteComputer : UInt16[17]
    property guid : LibC::GUID
    property rasQuarState : Win32cr::NetworkManagement::Rras::RAS_QUARANTINE_STATE
    property probationTime : Win32cr::Foundation::FILETIME
    property connectionStartTime : Win32cr::Foundation::FILETIME
    property ullBytesXmited : UInt64
    property ullBytesRcved : UInt64
    property dwFramesXmited : UInt32
    property dwFramesRcved : UInt32
    property dwCrcErr : UInt32
    property dwTimeoutErr : UInt32
    property dwAlignmentErr : UInt32
    property dwHardwareOverrunErr : UInt32
    property dwFramingErr : UInt32
    property dwBufferOverrunErr : UInt32
    property dwCompressionRatioIn : UInt32
    property dwCompressionRatioOut : UInt32
    property dwNumSwitchOvers : UInt32
    property wszRemoteEndpointAddress : UInt16[65]
    property wszLocalEndpointAddress : UInt16[65]
    property projection_info : Win32cr::NetworkManagement::Rras::PROJECTION_INFO2
    property hConnection : Win32cr::Foundation::HANDLE
    property hInterface : Win32cr::Foundation::HANDLE
    property dwDeviceType : UInt32
    def initialize(@dwConnectDuration : UInt32, @dwInterfaceType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE, @dwConnectionFlags : Win32cr::NetworkManagement::Rras::RAS_FLAGS, @wszInterfaceName : UInt16[257], @wszUserName : UInt16[257], @wszLogonDomain : UInt16[16], @wszRemoteComputer : UInt16[17], @guid : LibC::GUID, @rasQuarState : Win32cr::NetworkManagement::Rras::RAS_QUARANTINE_STATE, @probationTime : Win32cr::Foundation::FILETIME, @connectionStartTime : Win32cr::Foundation::FILETIME, @ullBytesXmited : UInt64, @ullBytesRcved : UInt64, @dwFramesXmited : UInt32, @dwFramesRcved : UInt32, @dwCrcErr : UInt32, @dwTimeoutErr : UInt32, @dwAlignmentErr : UInt32, @dwHardwareOverrunErr : UInt32, @dwFramingErr : UInt32, @dwBufferOverrunErr : UInt32, @dwCompressionRatioIn : UInt32, @dwCompressionRatioOut : UInt32, @dwNumSwitchOvers : UInt32, @wszRemoteEndpointAddress : UInt16[65], @wszLocalEndpointAddress : UInt16[65], @projection_info : Win32cr::NetworkManagement::Rras::PROJECTION_INFO2, @hConnection : Win32cr::Foundation::HANDLE, @hInterface : Win32cr::Foundation::HANDLE, @dwDeviceType : UInt32)
    end
  end

  @[Extern]
  struct ROUTER_CUSTOM_IKEv2_POLICY0
    property dwIntegrityMethod : UInt32
    property dwEncryptionMethod : UInt32
    property dwCipherTransformConstant : UInt32
    property dwAuthTransformConstant : UInt32
    property dwPfsGroup : UInt32
    property dwDhGroup : UInt32
    def initialize(@dwIntegrityMethod : UInt32, @dwEncryptionMethod : UInt32, @dwCipherTransformConstant : UInt32, @dwAuthTransformConstant : UInt32, @dwPfsGroup : UInt32, @dwDhGroup : UInt32)
    end
  end

  @[Extern]
  struct ROUTER_IKEv2_IF_CUSTOM_CONFIG0
    property dwSaLifeTime : UInt32
    property dwSaDataSize : UInt32
    property certificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB
    property customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*
    def initialize(@dwSaLifeTime : UInt32, @dwSaDataSize : UInt32, @certificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB, @customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*)
    end
  end

  @[Extern]
  struct MPR_IF_CUSTOMINFOEX0
    property header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER
    property dwFlags : UInt32
    property customIkev2Config : Win32cr::NetworkManagement::Rras::ROUTER_IKEv2_IF_CUSTOM_CONFIG0
    def initialize(@header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER, @dwFlags : UInt32, @customIkev2Config : Win32cr::NetworkManagement::Rras::ROUTER_IKEv2_IF_CUSTOM_CONFIG0)
    end
  end

  @[Extern]
  struct MPR_CERT_EKU
    property dwSize : UInt32
    property is_ekuoid : Win32cr::Foundation::BOOL
    property pwszEKU : Win32cr::Foundation::PWSTR
    def initialize(@dwSize : UInt32, @is_ekuoid : Win32cr::Foundation::BOOL, @pwszEKU : Win32cr::Foundation::PWSTR)
    end
  end

  @[Extern]
  struct VPN_TS_IP_ADDRESS
    property type__ : UInt16
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property v4 : Win32cr::Networking::WinSock::IN_ADDR
    property v6 : Win32cr::Networking::WinSock::IN6_ADDR
    def initialize(@v4 : Win32cr::Networking::WinSock::IN_ADDR, @v6 : Win32cr::Networking::WinSock::IN6_ADDR)
    end
    end

    def initialize(@type__ : UInt16, @anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct MPR_VPN_SELECTOR_
    property type__ : Win32cr::NetworkManagement::Rras::MPR_VPN_TS_TYPE
    property protocolId : UInt8
    property portStart : UInt16
    property portEnd : UInt16
    property tsPayloadId : UInt16
    property addrStart : Win32cr::NetworkManagement::Rras::VPN_TS_IP_ADDRESS
    property addrEnd : Win32cr::NetworkManagement::Rras::VPN_TS_IP_ADDRESS
    def initialize(@type__ : Win32cr::NetworkManagement::Rras::MPR_VPN_TS_TYPE, @protocolId : UInt8, @portStart : UInt16, @portEnd : UInt16, @tsPayloadId : UInt16, @addrStart : Win32cr::NetworkManagement::Rras::VPN_TS_IP_ADDRESS, @addrEnd : Win32cr::NetworkManagement::Rras::VPN_TS_IP_ADDRESS)
    end
  end

  @[Extern]
  struct MPR_VPN_TRAFFIC_SELECTORS
    property numTsi : UInt32
    property numTsr : UInt32
    property tsI : Win32cr::NetworkManagement::Rras::MPR_VPN_SELECTOR_*
    property tsR : Win32cr::NetworkManagement::Rras::MPR_VPN_SELECTOR_*
    def initialize(@numTsi : UInt32, @numTsr : UInt32, @tsI : Win32cr::NetworkManagement::Rras::MPR_VPN_SELECTOR_*, @tsR : Win32cr::NetworkManagement::Rras::MPR_VPN_SELECTOR_*)
    end
  end

  @[Extern]
  struct ROUTER_IKEv2_IF_CUSTOM_CONFIG2
    property dwSaLifeTime : UInt32
    property dwSaDataSize : UInt32
    property certificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB
    property customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*
    property certificateHash : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB
    property dwMmSaLifeTime : UInt32
    property vpnTrafficSelectors : Win32cr::NetworkManagement::Rras::MPR_VPN_TRAFFIC_SELECTORS
    def initialize(@dwSaLifeTime : UInt32, @dwSaDataSize : UInt32, @certificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB, @customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*, @certificateHash : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB, @dwMmSaLifeTime : UInt32, @vpnTrafficSelectors : Win32cr::NetworkManagement::Rras::MPR_VPN_TRAFFIC_SELECTORS)
    end
  end

  @[Extern]
  struct MPR_IF_CUSTOMINFOEX2
    property header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER
    property dwFlags : UInt32
    property customIkev2Config : Win32cr::NetworkManagement::Rras::ROUTER_IKEv2_IF_CUSTOM_CONFIG2
    def initialize(@header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER, @dwFlags : UInt32, @customIkev2Config : Win32cr::NetworkManagement::Rras::ROUTER_IKEv2_IF_CUSTOM_CONFIG2)
    end
  end

  @[Extern]
  struct IKEV2_TUNNEL_CONFIG_PARAMS4
    property dwIdleTimeout : UInt32
    property dwNetworkBlackoutTime : UInt32
    property dwSaLifeTime : UInt32
    property dwSaDataSizeForRenegotiation : UInt32
    property dwConfigOptions : UInt32
    property dwTotalCertificates : UInt32
    property certificateNames : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB*
    property machineCertificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB
    property dwEncryptionType : UInt32
    property customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*
    property dwTotalEkus : UInt32
    property certificateEKUs : Win32cr::NetworkManagement::Rras::MPR_CERT_EKU*
    property machineCertificateHash : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB
    property dwMmSaLifeTime : UInt32
    def initialize(@dwIdleTimeout : UInt32, @dwNetworkBlackoutTime : UInt32, @dwSaLifeTime : UInt32, @dwSaDataSizeForRenegotiation : UInt32, @dwConfigOptions : UInt32, @dwTotalCertificates : UInt32, @certificateNames : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB*, @machineCertificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB, @dwEncryptionType : UInt32, @customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*, @dwTotalEkus : UInt32, @certificateEKUs : Win32cr::NetworkManagement::Rras::MPR_CERT_EKU*, @machineCertificateHash : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB, @dwMmSaLifeTime : UInt32)
    end
  end

  @[Extern]
  struct ROUTER_IKEv2_IF_CUSTOM_CONFIG1
    property dwSaLifeTime : UInt32
    property dwSaDataSize : UInt32
    property certificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB
    property customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*
    property certificateHash : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB
    def initialize(@dwSaLifeTime : UInt32, @dwSaDataSize : UInt32, @certificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB, @customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*, @certificateHash : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB)
    end
  end

  @[Extern]
  struct MPR_IF_CUSTOMINFOEX1
    property header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER
    property dwFlags : UInt32
    property customIkev2Config : Win32cr::NetworkManagement::Rras::ROUTER_IKEv2_IF_CUSTOM_CONFIG1
    def initialize(@header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER, @dwFlags : UInt32, @customIkev2Config : Win32cr::NetworkManagement::Rras::ROUTER_IKEv2_IF_CUSTOM_CONFIG1)
    end
  end

  @[Extern]
  struct IKEV2_TUNNEL_CONFIG_PARAMS3
    property dwIdleTimeout : UInt32
    property dwNetworkBlackoutTime : UInt32
    property dwSaLifeTime : UInt32
    property dwSaDataSizeForRenegotiation : UInt32
    property dwConfigOptions : UInt32
    property dwTotalCertificates : UInt32
    property certificateNames : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB*
    property machineCertificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB
    property dwEncryptionType : UInt32
    property customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*
    property dwTotalEkus : UInt32
    property certificateEKUs : Win32cr::NetworkManagement::Rras::MPR_CERT_EKU*
    property machineCertificateHash : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB
    def initialize(@dwIdleTimeout : UInt32, @dwNetworkBlackoutTime : UInt32, @dwSaLifeTime : UInt32, @dwSaDataSizeForRenegotiation : UInt32, @dwConfigOptions : UInt32, @dwTotalCertificates : UInt32, @certificateNames : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB*, @machineCertificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB, @dwEncryptionType : UInt32, @customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*, @dwTotalEkus : UInt32, @certificateEKUs : Win32cr::NetworkManagement::Rras::MPR_CERT_EKU*, @machineCertificateHash : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB)
    end
  end

  @[Extern]
  struct IKEV2_TUNNEL_CONFIG_PARAMS2
    property dwIdleTimeout : UInt32
    property dwNetworkBlackoutTime : UInt32
    property dwSaLifeTime : UInt32
    property dwSaDataSizeForRenegotiation : UInt32
    property dwConfigOptions : UInt32
    property dwTotalCertificates : UInt32
    property certificateNames : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB*
    property machineCertificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB
    property dwEncryptionType : UInt32
    property customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*
    def initialize(@dwIdleTimeout : UInt32, @dwNetworkBlackoutTime : UInt32, @dwSaLifeTime : UInt32, @dwSaDataSizeForRenegotiation : UInt32, @dwConfigOptions : UInt32, @dwTotalCertificates : UInt32, @certificateNames : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB*, @machineCertificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB, @dwEncryptionType : UInt32, @customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*)
    end
  end

  @[Extern]
  struct L2TP_TUNNEL_CONFIG_PARAMS2
    property dwIdleTimeout : UInt32
    property dwEncryptionType : UInt32
    property dwSaLifeTime : UInt32
    property dwSaDataSizeForRenegotiation : UInt32
    property customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*
    property dwMmSaLifeTime : UInt32
    def initialize(@dwIdleTimeout : UInt32, @dwEncryptionType : UInt32, @dwSaLifeTime : UInt32, @dwSaDataSizeForRenegotiation : UInt32, @customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*, @dwMmSaLifeTime : UInt32)
    end
  end

  @[Extern]
  struct L2TP_TUNNEL_CONFIG_PARAMS1
    property dwIdleTimeout : UInt32
    property dwEncryptionType : UInt32
    property dwSaLifeTime : UInt32
    property dwSaDataSizeForRenegotiation : UInt32
    property customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*
    def initialize(@dwIdleTimeout : UInt32, @dwEncryptionType : UInt32, @dwSaLifeTime : UInt32, @dwSaDataSizeForRenegotiation : UInt32, @customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*)
    end
  end

  @[Extern]
  struct IKEV2_CONFIG_PARAMS
    property dwNumPorts : UInt32
    property dwPortFlags : UInt32
    property dwTunnelConfigParamFlags : UInt32
    property tunnel_config_params : Win32cr::NetworkManagement::Rras::IKEV2_TUNNEL_CONFIG_PARAMS4
    def initialize(@dwNumPorts : UInt32, @dwPortFlags : UInt32, @dwTunnelConfigParamFlags : UInt32, @tunnel_config_params : Win32cr::NetworkManagement::Rras::IKEV2_TUNNEL_CONFIG_PARAMS4)
    end
  end

  @[Extern]
  struct PPTP_CONFIG_PARAMS
    property dwNumPorts : UInt32
    property dwPortFlags : UInt32
    def initialize(@dwNumPorts : UInt32, @dwPortFlags : UInt32)
    end
  end

  @[Extern]
  struct L2TP_CONFIG_PARAMS1
    property dwNumPorts : UInt32
    property dwPortFlags : UInt32
    property dwTunnelConfigParamFlags : UInt32
    property tunnel_config_params : Win32cr::NetworkManagement::Rras::L2TP_TUNNEL_CONFIG_PARAMS2
    def initialize(@dwNumPorts : UInt32, @dwPortFlags : UInt32, @dwTunnelConfigParamFlags : UInt32, @tunnel_config_params : Win32cr::NetworkManagement::Rras::L2TP_TUNNEL_CONFIG_PARAMS2)
    end
  end

  @[Extern]
  struct GRE_CONFIG_PARAMS0
    property dwNumPorts : UInt32
    property dwPortFlags : UInt32
    def initialize(@dwNumPorts : UInt32, @dwPortFlags : UInt32)
    end
  end

  @[Extern]
  struct L2TP_CONFIG_PARAMS0
    property dwNumPorts : UInt32
    property dwPortFlags : UInt32
    def initialize(@dwNumPorts : UInt32, @dwPortFlags : UInt32)
    end
  end

  @[Extern]
  struct SSTP_CERT_INFO
    property isDefault : Win32cr::Foundation::BOOL
    property certBlob : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB
    def initialize(@isDefault : Win32cr::Foundation::BOOL, @certBlob : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB)
    end
  end

  @[Extern]
  struct SSTP_CONFIG_PARAMS
    property dwNumPorts : UInt32
    property dwPortFlags : UInt32
    property isUseHttps : Win32cr::Foundation::BOOL
    property certAlgorithm : UInt32
    property sstpCertDetails : Win32cr::NetworkManagement::Rras::SSTP_CERT_INFO
    def initialize(@dwNumPorts : UInt32, @dwPortFlags : UInt32, @isUseHttps : Win32cr::Foundation::BOOL, @certAlgorithm : UInt32, @sstpCertDetails : Win32cr::NetworkManagement::Rras::SSTP_CERT_INFO)
    end
  end

  @[Extern]
  struct MPRAPI_TUNNEL_CONFIG_PARAMS0
    property ike_config_params : Win32cr::NetworkManagement::Rras::IKEV2_CONFIG_PARAMS
    property pptp_config_params : Win32cr::NetworkManagement::Rras::PPTP_CONFIG_PARAMS
    property l2tp_config_params : Win32cr::NetworkManagement::Rras::L2TP_CONFIG_PARAMS1
    property sstp_config_params : Win32cr::NetworkManagement::Rras::SSTP_CONFIG_PARAMS
    def initialize(@ike_config_params : Win32cr::NetworkManagement::Rras::IKEV2_CONFIG_PARAMS, @pptp_config_params : Win32cr::NetworkManagement::Rras::PPTP_CONFIG_PARAMS, @l2tp_config_params : Win32cr::NetworkManagement::Rras::L2TP_CONFIG_PARAMS1, @sstp_config_params : Win32cr::NetworkManagement::Rras::SSTP_CONFIG_PARAMS)
    end
  end

  @[Extern]
  struct MPRAPI_TUNNEL_CONFIG_PARAMS1
    property ike_config_params : Win32cr::NetworkManagement::Rras::IKEV2_CONFIG_PARAMS
    property pptp_config_params : Win32cr::NetworkManagement::Rras::PPTP_CONFIG_PARAMS
    property l2tp_config_params : Win32cr::NetworkManagement::Rras::L2TP_CONFIG_PARAMS1
    property sstp_config_params : Win32cr::NetworkManagement::Rras::SSTP_CONFIG_PARAMS
    property gre_config_params : Win32cr::NetworkManagement::Rras::GRE_CONFIG_PARAMS0
    def initialize(@ike_config_params : Win32cr::NetworkManagement::Rras::IKEV2_CONFIG_PARAMS, @pptp_config_params : Win32cr::NetworkManagement::Rras::PPTP_CONFIG_PARAMS, @l2tp_config_params : Win32cr::NetworkManagement::Rras::L2TP_CONFIG_PARAMS1, @sstp_config_params : Win32cr::NetworkManagement::Rras::SSTP_CONFIG_PARAMS, @gre_config_params : Win32cr::NetworkManagement::Rras::GRE_CONFIG_PARAMS0)
    end
  end

  @[Extern]
  struct MPR_SERVER_EX0
    property header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER
    property fLanOnlyMode : UInt32
    property dwUpTime : UInt32
    property dwTotalPorts : UInt32
    property dwPortsInUse : UInt32
    property reserved : UInt32
    property config_params : Win32cr::NetworkManagement::Rras::MPRAPI_TUNNEL_CONFIG_PARAMS0
    def initialize(@header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER, @fLanOnlyMode : UInt32, @dwUpTime : UInt32, @dwTotalPorts : UInt32, @dwPortsInUse : UInt32, @reserved : UInt32, @config_params : Win32cr::NetworkManagement::Rras::MPRAPI_TUNNEL_CONFIG_PARAMS0)
    end
  end

  @[Extern]
  struct MPR_SERVER_EX1
    property header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER
    property fLanOnlyMode : UInt32
    property dwUpTime : UInt32
    property dwTotalPorts : UInt32
    property dwPortsInUse : UInt32
    property reserved : UInt32
    property config_params : Win32cr::NetworkManagement::Rras::MPRAPI_TUNNEL_CONFIG_PARAMS1
    def initialize(@header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER, @fLanOnlyMode : UInt32, @dwUpTime : UInt32, @dwTotalPorts : UInt32, @dwPortsInUse : UInt32, @reserved : UInt32, @config_params : Win32cr::NetworkManagement::Rras::MPRAPI_TUNNEL_CONFIG_PARAMS1)
    end
  end

  @[Extern]
  struct MPR_SERVER_SET_CONFIG_EX0
    property header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER
    property setConfigForProtocols : UInt32
    property config_params : Win32cr::NetworkManagement::Rras::MPRAPI_TUNNEL_CONFIG_PARAMS0
    def initialize(@header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER, @setConfigForProtocols : UInt32, @config_params : Win32cr::NetworkManagement::Rras::MPRAPI_TUNNEL_CONFIG_PARAMS0)
    end
  end

  @[Extern]
  struct MPR_SERVER_SET_CONFIG_EX1
    property header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER
    property setConfigForProtocols : UInt32
    property config_params : Win32cr::NetworkManagement::Rras::MPRAPI_TUNNEL_CONFIG_PARAMS1
    def initialize(@header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER, @setConfigForProtocols : UInt32, @config_params : Win32cr::NetworkManagement::Rras::MPRAPI_TUNNEL_CONFIG_PARAMS1)
    end
  end

  @[Extern]
  struct AUTH_VALIDATION_EX
    property header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER
    property hRasConnection : Win32cr::Foundation::HANDLE
    property wszUserName : UInt16[257]
    property wszLogonDomain : UInt16[16]
    property auth_info_size : UInt32
    property auth_info : UInt8*
    def initialize(@header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER, @hRasConnection : Win32cr::Foundation::HANDLE, @wszUserName : UInt16[257], @wszLogonDomain : UInt16[16], @auth_info_size : UInt32, @auth_info : UInt8*)
    end
  end

  @[Extern]
  struct RAS_UPDATE_CONNECTION
    property header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER
    property dwIfIndex : UInt32
    property wszLocalEndpointAddress : UInt16[65]
    property wszRemoteEndpointAddress : UInt16[65]
    def initialize(@header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER, @dwIfIndex : UInt32, @wszLocalEndpointAddress : UInt16[65], @wszRemoteEndpointAddress : UInt16[65])
    end
  end

  @[Extern]
  struct MPRAPI_ADMIN_DLL_CALLBACKS
    property revision : UInt8
    property lpfnMprAdminGetIpAddressForUser : Win32cr::NetworkManagement::Rras::PMPRADMINGETIPADDRESSFORUSER
    property lpfnMprAdminReleaseIpAddress : Win32cr::NetworkManagement::Rras::PMPRADMINRELEASEIPADRESS
    property lpfnMprAdminGetIpv6AddressForUser : Win32cr::NetworkManagement::Rras::PMPRADMINGETIPV6ADDRESSFORUSER
    property lpfnMprAdminReleaseIpV6AddressForUser : Win32cr::NetworkManagement::Rras::PMPRADMINRELEASEIPV6ADDRESSFORUSER
    property lpfnRasAdminAcceptNewLink : Win32cr::NetworkManagement::Rras::PMPRADMINACCEPTNEWLINK
    property lpfnRasAdminLinkHangupNotification : Win32cr::NetworkManagement::Rras::PMPRADMINLINKHANGUPNOTIFICATION
    property lpfnRasAdminTerminateDll : Win32cr::NetworkManagement::Rras::PMPRADMINTERMINATEDLL
    property lpfnRasAdminAcceptNewConnectionEx : Win32cr::NetworkManagement::Rras::PMPRADMINACCEPTNEWCONNECTIONEX
    property lpfnRasAdminAcceptEndpointChangeEx : Win32cr::NetworkManagement::Rras::PMPRADMINACCEPTTUNNELENDPOINTCHANGEEX
    property lpfnRasAdminAcceptReauthenticationEx : Win32cr::NetworkManagement::Rras::PMPRADMINACCEPTREAUTHENTICATIONEX
    property lpfnRasAdminConnectionHangupNotificationEx : Win32cr::NetworkManagement::Rras::PMPRADMINCONNECTIONHANGUPNOTIFICATIONEX
    property lpfnRASValidatePreAuthenticatedConnectionEx : Win32cr::NetworkManagement::Rras::PMPRADMINRASVALIDATEPREAUTHENTICATEDCONNECTIONEX
    def initialize(@revision : UInt8, @lpfnMprAdminGetIpAddressForUser : Win32cr::NetworkManagement::Rras::PMPRADMINGETIPADDRESSFORUSER, @lpfnMprAdminReleaseIpAddress : Win32cr::NetworkManagement::Rras::PMPRADMINRELEASEIPADRESS, @lpfnMprAdminGetIpv6AddressForUser : Win32cr::NetworkManagement::Rras::PMPRADMINGETIPV6ADDRESSFORUSER, @lpfnMprAdminReleaseIpV6AddressForUser : Win32cr::NetworkManagement::Rras::PMPRADMINRELEASEIPV6ADDRESSFORUSER, @lpfnRasAdminAcceptNewLink : Win32cr::NetworkManagement::Rras::PMPRADMINACCEPTNEWLINK, @lpfnRasAdminLinkHangupNotification : Win32cr::NetworkManagement::Rras::PMPRADMINLINKHANGUPNOTIFICATION, @lpfnRasAdminTerminateDll : Win32cr::NetworkManagement::Rras::PMPRADMINTERMINATEDLL, @lpfnRasAdminAcceptNewConnectionEx : Win32cr::NetworkManagement::Rras::PMPRADMINACCEPTNEWCONNECTIONEX, @lpfnRasAdminAcceptEndpointChangeEx : Win32cr::NetworkManagement::Rras::PMPRADMINACCEPTTUNNELENDPOINTCHANGEEX, @lpfnRasAdminAcceptReauthenticationEx : Win32cr::NetworkManagement::Rras::PMPRADMINACCEPTREAUTHENTICATIONEX, @lpfnRasAdminConnectionHangupNotificationEx : Win32cr::NetworkManagement::Rras::PMPRADMINCONNECTIONHANGUPNOTIFICATIONEX, @lpfnRASValidatePreAuthenticatedConnectionEx : Win32cr::NetworkManagement::Rras::PMPRADMINRASVALIDATEPREAUTHENTICATEDCONNECTIONEX)
    end
  end

  @[Extern]
  struct SECURITY_MESSAGE
    property dwMsgId : Win32cr::NetworkManagement::Rras::SECURITY_MESSAGE_MSG_ID
    property hPort : LibC::IntPtrT
    property dwError : UInt32
    property user_name : Win32cr::Foundation::CHAR[257]
    property domain : Win32cr::Foundation::CHAR[16]
    def initialize(@dwMsgId : Win32cr::NetworkManagement::Rras::SECURITY_MESSAGE_MSG_ID, @hPort : LibC::IntPtrT, @dwError : UInt32, @user_name : Win32cr::Foundation::CHAR[257], @domain : Win32cr::Foundation::CHAR[16])
    end
  end

  @[Extern]
  struct RAS_SECURITY_INFO
    property last_error : UInt32
    property bytes_received : UInt32
    property device_name : Win32cr::Foundation::CHAR[129]
    def initialize(@last_error : UInt32, @bytes_received : UInt32, @device_name : Win32cr::Foundation::CHAR[129])
    end
  end

  @[Extern]
  struct MGM_IF_ENTRY
    property dwIfIndex : UInt32
    property dwIfNextHopAddr : UInt32
    property bIGMP : Win32cr::Foundation::BOOL
    property bIsEnabled : Win32cr::Foundation::BOOL
    def initialize(@dwIfIndex : UInt32, @dwIfNextHopAddr : UInt32, @bIGMP : Win32cr::Foundation::BOOL, @bIsEnabled : Win32cr::Foundation::BOOL)
    end
  end

  @[Extern]
  struct ROUTING_PROTOCOL_CONFIG
    property dwCallbackFlags : UInt32
    property pfnRpfCallback : Win32cr::NetworkManagement::Rras::PMGM_RPF_CALLBACK
    property pfnCreationAlertCallback : Win32cr::NetworkManagement::Rras::PMGM_CREATION_ALERT_CALLBACK
    property pfnPruneAlertCallback : Win32cr::NetworkManagement::Rras::PMGM_PRUNE_ALERT_CALLBACK
    property pfnJoinAlertCallback : Win32cr::NetworkManagement::Rras::PMGM_JOIN_ALERT_CALLBACK
    property pfnWrongIfCallback : Win32cr::NetworkManagement::Rras::PMGM_WRONG_IF_CALLBACK
    property pfnLocalJoinCallback : Win32cr::NetworkManagement::Rras::PMGM_LOCAL_JOIN_CALLBACK
    property pfnLocalLeaveCallback : Win32cr::NetworkManagement::Rras::PMGM_LOCAL_LEAVE_CALLBACK
    property pfnDisableIgmpCallback : Win32cr::NetworkManagement::Rras::PMGM_DISABLE_IGMP_CALLBACK
    property pfnEnableIgmpCallback : Win32cr::NetworkManagement::Rras::PMGM_ENABLE_IGMP_CALLBACK
    def initialize(@dwCallbackFlags : UInt32, @pfnRpfCallback : Win32cr::NetworkManagement::Rras::PMGM_RPF_CALLBACK, @pfnCreationAlertCallback : Win32cr::NetworkManagement::Rras::PMGM_CREATION_ALERT_CALLBACK, @pfnPruneAlertCallback : Win32cr::NetworkManagement::Rras::PMGM_PRUNE_ALERT_CALLBACK, @pfnJoinAlertCallback : Win32cr::NetworkManagement::Rras::PMGM_JOIN_ALERT_CALLBACK, @pfnWrongIfCallback : Win32cr::NetworkManagement::Rras::PMGM_WRONG_IF_CALLBACK, @pfnLocalJoinCallback : Win32cr::NetworkManagement::Rras::PMGM_LOCAL_JOIN_CALLBACK, @pfnLocalLeaveCallback : Win32cr::NetworkManagement::Rras::PMGM_LOCAL_LEAVE_CALLBACK, @pfnDisableIgmpCallback : Win32cr::NetworkManagement::Rras::PMGM_DISABLE_IGMP_CALLBACK, @pfnEnableIgmpCallback : Win32cr::NetworkManagement::Rras::PMGM_ENABLE_IGMP_CALLBACK)
    end
  end

  @[Extern]
  struct SOURCE_GROUP_ENTRY
    property dwSourceAddr : UInt32
    property dwSourceMask : UInt32
    property dwGroupAddr : UInt32
    property dwGroupMask : UInt32
    def initialize(@dwSourceAddr : UInt32, @dwSourceMask : UInt32, @dwGroupAddr : UInt32, @dwGroupMask : UInt32)
    end
  end

  @[Extern]
  struct RTM_REGN_PROFILE
    property max_next_hops_in_route : UInt32
    property max_handles_in_enum : UInt32
    property views_supported : UInt32
    property number_of_views : UInt32
    def initialize(@max_next_hops_in_route : UInt32, @max_handles_in_enum : UInt32, @views_supported : UInt32, @number_of_views : UInt32)
    end
  end

  @[Extern]
  struct RTM_NET_ADDRESS
    property address_family : UInt16
    property num_bits : UInt16
    property addr_bits : UInt8[16]
    def initialize(@address_family : UInt16, @num_bits : UInt16, @addr_bits : UInt8[16])
    end
  end

  @[Extern]
  struct RTM_PREF_INFO
    property metric : UInt32
    property preference : UInt32
    def initialize(@metric : UInt32, @preference : UInt32)
    end
  end

  @[Extern]
  struct RTM_NEXTHOP_LIST
    property num_next_hops : UInt16
    property next_hops : LibC::IntPtrT*
    def initialize(@num_next_hops : UInt16, @next_hops : LibC::IntPtrT*)
    end
  end

  @[Extern]
  struct RTM_DEST_INFO
    property dest_handle : LibC::IntPtrT
    property dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS
    property last_changed : Win32cr::Foundation::FILETIME
    property belongs_to_views : UInt32
    property number_of_views : UInt32
    property view_info : Anonymous_e__Struct_*

    # Nested Type Anonymous_e__Struct_
    @[Extern]
    struct Anonymous_e__Struct_
    property view_id : Int32
    property num_routes : UInt32
    property route : LibC::IntPtrT
    property owner : LibC::IntPtrT
    property dest_flags : UInt32
    property hold_route : LibC::IntPtrT
    def initialize(@view_id : Int32, @num_routes : UInt32, @route : LibC::IntPtrT, @owner : LibC::IntPtrT, @dest_flags : UInt32, @hold_route : LibC::IntPtrT)
    end
    end

    def initialize(@dest_handle : LibC::IntPtrT, @dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS, @last_changed : Win32cr::Foundation::FILETIME, @belongs_to_views : UInt32, @number_of_views : UInt32, @view_info : Anonymous_e__Struct_*)
    end
  end

  @[Extern]
  struct RTM_ROUTE_INFO
    property dest_handle : LibC::IntPtrT
    property route_owner : LibC::IntPtrT
    property neighbour : LibC::IntPtrT
    property state : UInt8
    property flags1 : UInt8
    property flags : UInt16
    property pref_info : Win32cr::NetworkManagement::Rras::RTM_PREF_INFO
    property belongs_to_views : UInt32
    property entity_specific_info : Void*
    property next_hops_list : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_LIST
    def initialize(@dest_handle : LibC::IntPtrT, @route_owner : LibC::IntPtrT, @neighbour : LibC::IntPtrT, @state : UInt8, @flags1 : UInt8, @flags : UInt16, @pref_info : Win32cr::NetworkManagement::Rras::RTM_PREF_INFO, @belongs_to_views : UInt32, @entity_specific_info : Void*, @next_hops_list : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_LIST)
    end
  end

  @[Extern]
  struct RTM_NEXTHOP_INFO
    property next_hop_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS
    property next_hop_owner : LibC::IntPtrT
    property interface_index : UInt32
    property state : UInt16
    property flags : UInt16
    property entity_specific_info : Void*
    property remote_next_hop : LibC::IntPtrT
    def initialize(@next_hop_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS, @next_hop_owner : LibC::IntPtrT, @interface_index : UInt32, @state : UInt16, @flags : UInt16, @entity_specific_info : Void*, @remote_next_hop : LibC::IntPtrT)
    end
  end

  @[Extern]
  struct RTM_ENTITY_ID
    property anonymous : Anonymous_e__Union_

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    struct Anonymous_e__Union_
    property anonymous : Anonymous_e__Struct_
    property entity_id : UInt64

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      struct Anonymous_e__Struct_
    property entity_protocol_id : UInt32
    property entity_instance_id : UInt32
    def initialize(@entity_protocol_id : UInt32, @entity_instance_id : UInt32)
    end
      end

    def initialize(@anonymous : Anonymous_e__Struct_, @entity_id : UInt64)
    end
    end

    def initialize(@anonymous : Anonymous_e__Union_)
    end
  end

  @[Extern]
  struct RTM_ENTITY_INFO
    property rtm_instance_id : UInt16
    property address_family : UInt16
    property entity_id : Win32cr::NetworkManagement::Rras::RTM_ENTITY_ID
    def initialize(@rtm_instance_id : UInt16, @address_family : UInt16, @entity_id : Win32cr::NetworkManagement::Rras::RTM_ENTITY_ID)
    end
  end

  @[Extern]
  struct RTM_ENTITY_METHOD_INPUT
    property method_type : UInt32
    property input_size : UInt32
    property input_data : UInt8*
    def initialize(@method_type : UInt32, @input_size : UInt32, @input_data : UInt8*)
    end
  end

  @[Extern]
  struct RTM_ENTITY_METHOD_OUTPUT
    property method_type : UInt32
    property method_status : UInt32
    property output_size : UInt32
    property output_data : UInt8*
    def initialize(@method_type : UInt32, @method_status : UInt32, @output_size : UInt32, @output_data : UInt8*)
    end
  end

  @[Extern]
  struct RTM_ENTITY_EXPORT_METHODS
    property num_methods : UInt32
    property methods : Win32cr::NetworkManagement::Rras::RTM_ENTITY_EXPORT_METHOD*
    def initialize(@num_methods : UInt32, @methods : Win32cr::NetworkManagement::Rras::RTM_ENTITY_EXPORT_METHOD*)
    end
  end

  def rasDialA(param0 : Win32cr::NetworkManagement::Rras::RASDIALEXTENSIONS*, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSA*, param3 : UInt32, param4 : Void*, param5 : Win32cr::NetworkManagement::Rras::HRASCONN*) : UInt32
    C.RasDialA(param0, param1, param2, param3, param4, param5)
  end

  def rasDialW(param0 : Win32cr::NetworkManagement::Rras::RASDIALEXTENSIONS*, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSW*, param3 : UInt32, param4 : Void*, param5 : Win32cr::NetworkManagement::Rras::HRASCONN*) : UInt32
    C.RasDialW(param0, param1, param2, param3, param4, param5)
  end

  def rasEnumConnectionsA(param0 : Win32cr::NetworkManagement::Rras::RASCONNA*, param1 : UInt32*, param2 : UInt32*) : UInt32
    C.RasEnumConnectionsA(param0, param1, param2)
  end

  def rasEnumConnectionsW(param0 : Win32cr::NetworkManagement::Rras::RASCONNW*, param1 : UInt32*, param2 : UInt32*) : UInt32
    C.RasEnumConnectionsW(param0, param1, param2)
  end

  def rasEnumEntriesA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYNAMEA*, param3 : UInt32*, param4 : UInt32*) : UInt32
    C.RasEnumEntriesA(param0, param1, param2, param3, param4)
  end

  def rasEnumEntriesW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYNAMEW*, param3 : UInt32*, param4 : UInt32*) : UInt32
    C.RasEnumEntriesW(param0, param1, param2, param3, param4)
  end

  def rasGetConnectStatusA(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::NetworkManagement::Rras::RASCONNSTATUSA*) : UInt32
    C.RasGetConnectStatusA(param0, param1)
  end

  def rasGetConnectStatusW(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::NetworkManagement::Rras::RASCONNSTATUSW*) : UInt32
    C.RasGetConnectStatusW(param0, param1)
  end

  def rasGetErrorStringA(resource_id : UInt32, lpszString : UInt8*, in_buf_size : UInt32) : UInt32
    C.RasGetErrorStringA(resource_id, lpszString, in_buf_size)
  end

  def rasGetErrorStringW(resource_id : UInt32, lpszString : UInt16*, in_buf_size : UInt32) : UInt32
    C.RasGetErrorStringW(resource_id, lpszString, in_buf_size)
  end

  def rasHangUpA(param0 : Win32cr::NetworkManagement::Rras::HRASCONN) : UInt32
    C.RasHangUpA(param0)
  end

  def rasHangUpW(param0 : Win32cr::NetworkManagement::Rras::HRASCONN) : UInt32
    C.RasHangUpW(param0)
  end

  def rasGetProjectionInfoA(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::NetworkManagement::Rras::RASPROJECTION, param2 : Void*, param3 : UInt32*) : UInt32
    C.RasGetProjectionInfoA(param0, param1, param2, param3)
  end

  def rasGetProjectionInfoW(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::NetworkManagement::Rras::RASPROJECTION, param2 : Void*, param3 : UInt32*) : UInt32
    C.RasGetProjectionInfoW(param0, param1, param2, param3)
  end

  def rasCreatePhonebookEntryA(param0 : Win32cr::Foundation::HWND, param1 : Win32cr::Foundation::PSTR) : UInt32
    C.RasCreatePhonebookEntryA(param0, param1)
  end

  def rasCreatePhonebookEntryW(param0 : Win32cr::Foundation::HWND, param1 : Win32cr::Foundation::PWSTR) : UInt32
    C.RasCreatePhonebookEntryW(param0, param1)
  end

  def rasEditPhonebookEntryA(param0 : Win32cr::Foundation::HWND, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::Foundation::PSTR) : UInt32
    C.RasEditPhonebookEntryA(param0, param1, param2)
  end

  def rasEditPhonebookEntryW(param0 : Win32cr::Foundation::HWND, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::Foundation::PWSTR) : UInt32
    C.RasEditPhonebookEntryW(param0, param1, param2)
  end

  def rasSetEntryDialParamsA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSA*, param2 : Win32cr::Foundation::BOOL) : UInt32
    C.RasSetEntryDialParamsA(param0, param1, param2)
  end

  def rasSetEntryDialParamsW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSW*, param2 : Win32cr::Foundation::BOOL) : UInt32
    C.RasSetEntryDialParamsW(param0, param1, param2)
  end

  def rasGetEntryDialParamsA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSA*, param2 : Int32*) : UInt32
    C.RasGetEntryDialParamsA(param0, param1, param2)
  end

  def rasGetEntryDialParamsW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSW*, param2 : Int32*) : UInt32
    C.RasGetEntryDialParamsW(param0, param1, param2)
  end

  def rasEnumDevicesA(param0 : Win32cr::NetworkManagement::Rras::RASDEVINFOA*, param1 : UInt32*, param2 : UInt32*) : UInt32
    C.RasEnumDevicesA(param0, param1, param2)
  end

  def rasEnumDevicesW(param0 : Win32cr::NetworkManagement::Rras::RASDEVINFOW*, param1 : UInt32*, param2 : UInt32*) : UInt32
    C.RasEnumDevicesW(param0, param1, param2)
  end

  def rasGetCountryInfoA(param0 : Win32cr::NetworkManagement::Rras::RASCTRYINFO*, param1 : UInt32*) : UInt32
    C.RasGetCountryInfoA(param0, param1)
  end

  def rasGetCountryInfoW(param0 : Win32cr::NetworkManagement::Rras::RASCTRYINFO*, param1 : UInt32*) : UInt32
    C.RasGetCountryInfoW(param0, param1)
  end

  def rasGetEntryPropertiesA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYA*, param3 : UInt32*, param4 : UInt8*, param5 : UInt32*) : UInt32
    C.RasGetEntryPropertiesA(param0, param1, param2, param3, param4, param5)
  end

  def rasGetEntryPropertiesW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYW*, param3 : UInt32*, param4 : UInt8*, param5 : UInt32*) : UInt32
    C.RasGetEntryPropertiesW(param0, param1, param2, param3, param4, param5)
  end

  def rasSetEntryPropertiesA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYA*, param3 : UInt32, param4 : UInt8*, param5 : UInt32) : UInt32
    C.RasSetEntryPropertiesA(param0, param1, param2, param3, param4, param5)
  end

  def rasSetEntryPropertiesW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYW*, param3 : UInt32, param4 : UInt8*, param5 : UInt32) : UInt32
    C.RasSetEntryPropertiesW(param0, param1, param2, param3, param4, param5)
  end

  def rasRenameEntryA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::Foundation::PSTR) : UInt32
    C.RasRenameEntryA(param0, param1, param2)
  end

  def rasRenameEntryW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::Foundation::PWSTR) : UInt32
    C.RasRenameEntryW(param0, param1, param2)
  end

  def rasDeleteEntryA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR) : UInt32
    C.RasDeleteEntryA(param0, param1)
  end

  def rasDeleteEntryW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR) : UInt32
    C.RasDeleteEntryW(param0, param1)
  end

  def rasValidateEntryNameA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR) : UInt32
    C.RasValidateEntryNameA(param0, param1)
  end

  def rasValidateEntryNameW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR) : UInt32
    C.RasValidateEntryNameW(param0, param1)
  end

  def rasConnectionNotificationA(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::Foundation::HANDLE, param2 : UInt32) : UInt32
    C.RasConnectionNotificationA(param0, param1, param2)
  end

  def rasConnectionNotificationW(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::Foundation::HANDLE, param2 : UInt32) : UInt32
    C.RasConnectionNotificationW(param0, param1, param2)
  end

  def rasGetSubEntryHandleA(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : UInt32, param2 : Win32cr::NetworkManagement::Rras::HRASCONN*) : UInt32
    C.RasGetSubEntryHandleA(param0, param1, param2)
  end

  def rasGetSubEntryHandleW(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : UInt32, param2 : Win32cr::NetworkManagement::Rras::HRASCONN*) : UInt32
    C.RasGetSubEntryHandleW(param0, param1, param2)
  end

  def rasGetCredentialsA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASCREDENTIALSA*) : UInt32
    C.RasGetCredentialsA(param0, param1, param2)
  end

  def rasGetCredentialsW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASCREDENTIALSW*) : UInt32
    C.RasGetCredentialsW(param0, param1, param2)
  end

  def rasSetCredentialsA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASCREDENTIALSA*, param3 : Win32cr::Foundation::BOOL) : UInt32
    C.RasSetCredentialsA(param0, param1, param2, param3)
  end

  def rasSetCredentialsW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASCREDENTIALSW*, param3 : Win32cr::Foundation::BOOL) : UInt32
    C.RasSetCredentialsW(param0, param1, param2, param3)
  end

  def rasGetSubEntryPropertiesA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : UInt32, param3 : Win32cr::NetworkManagement::Rras::RASSUBENTRYA*, param4 : UInt32*, param5 : UInt8*, param6 : UInt32*) : UInt32
    C.RasGetSubEntryPropertiesA(param0, param1, param2, param3, param4, param5, param6)
  end

  def rasGetSubEntryPropertiesW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : UInt32, param3 : Win32cr::NetworkManagement::Rras::RASSUBENTRYW*, param4 : UInt32*, param5 : UInt8*, param6 : UInt32*) : UInt32
    C.RasGetSubEntryPropertiesW(param0, param1, param2, param3, param4, param5, param6)
  end

  def rasSetSubEntryPropertiesA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : UInt32, param3 : Win32cr::NetworkManagement::Rras::RASSUBENTRYA*, param4 : UInt32, param5 : UInt8*, param6 : UInt32) : UInt32
    C.RasSetSubEntryPropertiesA(param0, param1, param2, param3, param4, param5, param6)
  end

  def rasSetSubEntryPropertiesW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : UInt32, param3 : Win32cr::NetworkManagement::Rras::RASSUBENTRYW*, param4 : UInt32, param5 : UInt8*, param6 : UInt32) : UInt32
    C.RasSetSubEntryPropertiesW(param0, param1, param2, param3, param4, param5, param6)
  end

  def rasGetAutodialAddressA(param0 : Win32cr::Foundation::PSTR, param1 : UInt32*, param2 : Win32cr::NetworkManagement::Rras::RASAUTODIALENTRYA*, param3 : UInt32*, param4 : UInt32*) : UInt32
    C.RasGetAutodialAddressA(param0, param1, param2, param3, param4)
  end

  def rasGetAutodialAddressW(param0 : Win32cr::Foundation::PWSTR, param1 : UInt32*, param2 : Win32cr::NetworkManagement::Rras::RASAUTODIALENTRYW*, param3 : UInt32*, param4 : UInt32*) : UInt32
    C.RasGetAutodialAddressW(param0, param1, param2, param3, param4)
  end

  def rasSetAutodialAddressA(param0 : Win32cr::Foundation::PSTR, param1 : UInt32, param2 : Win32cr::NetworkManagement::Rras::RASAUTODIALENTRYA*, param3 : UInt32, param4 : UInt32) : UInt32
    C.RasSetAutodialAddressA(param0, param1, param2, param3, param4)
  end

  def rasSetAutodialAddressW(param0 : Win32cr::Foundation::PWSTR, param1 : UInt32, param2 : Win32cr::NetworkManagement::Rras::RASAUTODIALENTRYW*, param3 : UInt32, param4 : UInt32) : UInt32
    C.RasSetAutodialAddressW(param0, param1, param2, param3, param4)
  end

  def rasEnumAutodialAddressesA(lppRasAutodialAddresses : Win32cr::Foundation::PSTR*, lpdwcbRasAutodialAddresses : UInt32*, lpdwcRasAutodialAddresses : UInt32*) : UInt32
    C.RasEnumAutodialAddressesA(lppRasAutodialAddresses, lpdwcbRasAutodialAddresses, lpdwcRasAutodialAddresses)
  end

  def rasEnumAutodialAddressesW(lppRasAutodialAddresses : Win32cr::Foundation::PWSTR*, lpdwcbRasAutodialAddresses : UInt32*, lpdwcRasAutodialAddresses : UInt32*) : UInt32
    C.RasEnumAutodialAddressesW(lppRasAutodialAddresses, lpdwcbRasAutodialAddresses, lpdwcRasAutodialAddresses)
  end

  def rasGetAutodialEnableA(param0 : UInt32, param1 : Int32*) : UInt32
    C.RasGetAutodialEnableA(param0, param1)
  end

  def rasGetAutodialEnableW(param0 : UInt32, param1 : Int32*) : UInt32
    C.RasGetAutodialEnableW(param0, param1)
  end

  def rasSetAutodialEnableA(param0 : UInt32, param1 : Win32cr::Foundation::BOOL) : UInt32
    C.RasSetAutodialEnableA(param0, param1)
  end

  def rasSetAutodialEnableW(param0 : UInt32, param1 : Win32cr::Foundation::BOOL) : UInt32
    C.RasSetAutodialEnableW(param0, param1)
  end

  def rasGetAutodialParamA(param0 : UInt32, param1 : Void*, param2 : UInt32*) : UInt32
    C.RasGetAutodialParamA(param0, param1, param2)
  end

  def rasGetAutodialParamW(param0 : UInt32, param1 : Void*, param2 : UInt32*) : UInt32
    C.RasGetAutodialParamW(param0, param1, param2)
  end

  def rasSetAutodialParamA(param0 : UInt32, param1 : Void*, param2 : UInt32) : UInt32
    C.RasSetAutodialParamA(param0, param1, param2)
  end

  def rasSetAutodialParamW(param0 : UInt32, param1 : Void*, param2 : UInt32) : UInt32
    C.RasSetAutodialParamW(param0, param1, param2)
  end

  def rasGetPCscf(lpszPCscf : Win32cr::Foundation::PWSTR) : UInt32
    C.RasGetPCscf(lpszPCscf)
  end

  def rasInvokeEapUI(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : UInt32, param2 : Win32cr::NetworkManagement::Rras::RASDIALEXTENSIONS*, param3 : Win32cr::Foundation::HWND) : UInt32
    C.RasInvokeEapUI(param0, param1, param2, param3)
  end

  def rasGetLinkStatistics(hRasConn : Win32cr::NetworkManagement::Rras::HRASCONN, dwSubEntry : UInt32, lpStatistics : Win32cr::NetworkManagement::Rras::RAS_STATS*) : UInt32
    C.RasGetLinkStatistics(hRasConn, dwSubEntry, lpStatistics)
  end

  def rasGetConnectionStatistics(hRasConn : Win32cr::NetworkManagement::Rras::HRASCONN, lpStatistics : Win32cr::NetworkManagement::Rras::RAS_STATS*) : UInt32
    C.RasGetConnectionStatistics(hRasConn, lpStatistics)
  end

  def rasClearLinkStatistics(hRasConn : Win32cr::NetworkManagement::Rras::HRASCONN, dwSubEntry : UInt32) : UInt32
    C.RasClearLinkStatistics(hRasConn, dwSubEntry)
  end

  def rasClearConnectionStatistics(hRasConn : Win32cr::NetworkManagement::Rras::HRASCONN) : UInt32
    C.RasClearConnectionStatistics(hRasConn)
  end

  def rasGetEapUserDataA(hToken : Win32cr::Foundation::HANDLE, pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, pbEapData : UInt8*, pdwSizeofEapData : UInt32*) : UInt32
    C.RasGetEapUserDataA(hToken, pszPhonebook, pszEntry, pbEapData, pdwSizeofEapData)
  end

  def rasGetEapUserDataW(hToken : Win32cr::Foundation::HANDLE, pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, pbEapData : UInt8*, pdwSizeofEapData : UInt32*) : UInt32
    C.RasGetEapUserDataW(hToken, pszPhonebook, pszEntry, pbEapData, pdwSizeofEapData)
  end

  def rasSetEapUserDataA(hToken : Win32cr::Foundation::HANDLE, pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, pbEapData : UInt8*, dwSizeofEapData : UInt32) : UInt32
    C.RasSetEapUserDataA(hToken, pszPhonebook, pszEntry, pbEapData, dwSizeofEapData)
  end

  def rasSetEapUserDataW(hToken : Win32cr::Foundation::HANDLE, pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, pbEapData : UInt8*, dwSizeofEapData : UInt32) : UInt32
    C.RasSetEapUserDataW(hToken, pszPhonebook, pszEntry, pbEapData, dwSizeofEapData)
  end

  def rasGetCustomAuthDataA(pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, pbCustomAuthData : UInt8*, pdwSizeofCustomAuthData : UInt32*) : UInt32
    C.RasGetCustomAuthDataA(pszPhonebook, pszEntry, pbCustomAuthData, pdwSizeofCustomAuthData)
  end

  def rasGetCustomAuthDataW(pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, pbCustomAuthData : UInt8*, pdwSizeofCustomAuthData : UInt32*) : UInt32
    C.RasGetCustomAuthDataW(pszPhonebook, pszEntry, pbCustomAuthData, pdwSizeofCustomAuthData)
  end

  def rasSetCustomAuthDataA(pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, pbCustomAuthData : UInt8*, dwSizeofCustomAuthData : UInt32) : UInt32
    C.RasSetCustomAuthDataA(pszPhonebook, pszEntry, pbCustomAuthData, dwSizeofCustomAuthData)
  end

  def rasSetCustomAuthDataW(pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, pbCustomAuthData : UInt8*, dwSizeofCustomAuthData : UInt32) : UInt32
    C.RasSetCustomAuthDataW(pszPhonebook, pszEntry, pbCustomAuthData, dwSizeofCustomAuthData)
  end

  def rasGetEapUserIdentityW(pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, dwFlags : UInt32, hwnd : Win32cr::Foundation::HWND, ppRasEapUserIdentity : Win32cr::NetworkManagement::Rras::RASEAPUSERIDENTITYW**) : UInt32
    C.RasGetEapUserIdentityW(pszPhonebook, pszEntry, dwFlags, hwnd, ppRasEapUserIdentity)
  end

  def rasGetEapUserIdentityA(pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, dwFlags : UInt32, hwnd : Win32cr::Foundation::HWND, ppRasEapUserIdentity : Win32cr::NetworkManagement::Rras::RASEAPUSERIDENTITYA**) : UInt32
    C.RasGetEapUserIdentityA(pszPhonebook, pszEntry, dwFlags, hwnd, ppRasEapUserIdentity)
  end

  def rasFreeEapUserIdentityW(pRasEapUserIdentity : Win32cr::NetworkManagement::Rras::RASEAPUSERIDENTITYW*) : Void
    C.RasFreeEapUserIdentityW(pRasEapUserIdentity)
  end

  def rasFreeEapUserIdentityA(pRasEapUserIdentity : Win32cr::NetworkManagement::Rras::RASEAPUSERIDENTITYA*) : Void
    C.RasFreeEapUserIdentityA(pRasEapUserIdentity)
  end

  def rasDeleteSubEntryA(pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, dwSubentryId : UInt32) : UInt32
    C.RasDeleteSubEntryA(pszPhonebook, pszEntry, dwSubentryId)
  end

  def rasDeleteSubEntryW(pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, dwSubEntryId : UInt32) : UInt32
    C.RasDeleteSubEntryW(pszPhonebook, pszEntry, dwSubEntryId)
  end

  def rasUpdateConnection(hrasconn : Win32cr::NetworkManagement::Rras::HRASCONN, lprasupdateconn : Win32cr::NetworkManagement::Rras::RASUPDATECONN*) : UInt32
    C.RasUpdateConnection(hrasconn, lprasupdateconn)
  end

  def rasGetProjectionInfoEx(hrasconn : Win32cr::NetworkManagement::Rras::HRASCONN, pRasProjection : Win32cr::NetworkManagement::Rras::RAS_PROJECTION_INFO*, lpdwSize : UInt32*) : UInt32
    C.RasGetProjectionInfoEx(hrasconn, pRasProjection, lpdwSize)
  end

  def rasPhonebookDlgA(lpszPhonebook : Win32cr::Foundation::PSTR, lpszEntry : Win32cr::Foundation::PSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASPBDLGA*) : Win32cr::Foundation::BOOL
    C.RasPhonebookDlgA(lpszPhonebook, lpszEntry, lpInfo)
  end

  def rasPhonebookDlgW(lpszPhonebook : Win32cr::Foundation::PWSTR, lpszEntry : Win32cr::Foundation::PWSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASPBDLGW*) : Win32cr::Foundation::BOOL
    C.RasPhonebookDlgW(lpszPhonebook, lpszEntry, lpInfo)
  end

  def rasEntryDlgA(lpszPhonebook : Win32cr::Foundation::PSTR, lpszEntry : Win32cr::Foundation::PSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASENTRYDLGA*) : Win32cr::Foundation::BOOL
    C.RasEntryDlgA(lpszPhonebook, lpszEntry, lpInfo)
  end

  def rasEntryDlgW(lpszPhonebook : Win32cr::Foundation::PWSTR, lpszEntry : Win32cr::Foundation::PWSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASENTRYDLGW*) : Win32cr::Foundation::BOOL
    C.RasEntryDlgW(lpszPhonebook, lpszEntry, lpInfo)
  end

  def rasDialDlgA(lpszPhonebook : Win32cr::Foundation::PSTR, lpszEntry : Win32cr::Foundation::PSTR, lpszPhoneNumber : Win32cr::Foundation::PSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASDIALDLG*) : Win32cr::Foundation::BOOL
    C.RasDialDlgA(lpszPhonebook, lpszEntry, lpszPhoneNumber, lpInfo)
  end

  def rasDialDlgW(lpszPhonebook : Win32cr::Foundation::PWSTR, lpszEntry : Win32cr::Foundation::PWSTR, lpszPhoneNumber : Win32cr::Foundation::PWSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASDIALDLG*) : Win32cr::Foundation::BOOL
    C.RasDialDlgW(lpszPhonebook, lpszEntry, lpszPhoneNumber, lpInfo)
  end

  def mprAdminConnectionEnumEx(hRasServer : LibC::IntPtrT, pObjectHeader : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER*, dwPreferedMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, ppRasConn : Win32cr::NetworkManagement::Rras::RAS_CONNECTION_EX**, lpdwResumeHandle : UInt32*) : UInt32
    C.MprAdminConnectionEnumEx(hRasServer, pObjectHeader, dwPreferedMaxLen, lpdwEntriesRead, lpdwTotalEntries, ppRasConn, lpdwResumeHandle)
  end

  def mprAdminConnectionGetInfoEx(hRasServer : LibC::IntPtrT, hRasConnection : Win32cr::Foundation::HANDLE, pRasConnection : Win32cr::NetworkManagement::Rras::RAS_CONNECTION_EX*) : UInt32
    C.MprAdminConnectionGetInfoEx(hRasServer, hRasConnection, pRasConnection)
  end

  def mprAdminServerGetInfoEx(hMprServer : LibC::IntPtrT, pServerInfo : Win32cr::NetworkManagement::Rras::MPR_SERVER_EX1*) : UInt32
    C.MprAdminServerGetInfoEx(hMprServer, pServerInfo)
  end

  def mprAdminServerSetInfoEx(hMprServer : LibC::IntPtrT, pServerInfo : Win32cr::NetworkManagement::Rras::MPR_SERVER_SET_CONFIG_EX1*) : UInt32
    C.MprAdminServerSetInfoEx(hMprServer, pServerInfo)
  end

  def mprConfigServerGetInfoEx(hMprConfig : Win32cr::Foundation::HANDLE, pServerInfo : Win32cr::NetworkManagement::Rras::MPR_SERVER_EX1*) : UInt32
    C.MprConfigServerGetInfoEx(hMprConfig, pServerInfo)
  end

  def mprConfigServerSetInfoEx(hMprConfig : Win32cr::Foundation::HANDLE, pSetServerConfig : Win32cr::NetworkManagement::Rras::MPR_SERVER_SET_CONFIG_EX1*) : UInt32
    C.MprConfigServerSetInfoEx(hMprConfig, pSetServerConfig)
  end

  def mprAdminUpdateConnection(hRasServer : LibC::IntPtrT, hRasConnection : Win32cr::Foundation::HANDLE, pRasUpdateConnection : Win32cr::NetworkManagement::Rras::RAS_UPDATE_CONNECTION*) : UInt32
    C.MprAdminUpdateConnection(hRasServer, hRasConnection, pRasUpdateConnection)
  end

  def mprAdminIsServiceInitialized(lpwsServerName : Win32cr::Foundation::PWSTR, fIsServiceInitialized : Win32cr::Foundation::BOOL*) : UInt32
    C.MprAdminIsServiceInitialized(lpwsServerName, fIsServiceInitialized)
  end

  def mprAdminInterfaceSetCustomInfoEx(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, pCustomInfo : Win32cr::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2*) : UInt32
    C.MprAdminInterfaceSetCustomInfoEx(hMprServer, hInterface, pCustomInfo)
  end

  def mprAdminInterfaceGetCustomInfoEx(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, pCustomInfo : Win32cr::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2*) : UInt32
    C.MprAdminInterfaceGetCustomInfoEx(hMprServer, hInterface, pCustomInfo)
  end

  def mprConfigInterfaceGetCustomInfoEx(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, pCustomInfo : Win32cr::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2*) : UInt32
    C.MprConfigInterfaceGetCustomInfoEx(hMprConfig, hRouterInterface, pCustomInfo)
  end

  def mprConfigInterfaceSetCustomInfoEx(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, pCustomInfo : Win32cr::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2*) : UInt32
    C.MprConfigInterfaceSetCustomInfoEx(hMprConfig, hRouterInterface, pCustomInfo)
  end

  def mprAdminConnectionEnum(hRasServer : LibC::IntPtrT, dwLevel : UInt32, lplpbBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32
    C.MprAdminConnectionEnum(hRasServer, dwLevel, lplpbBuffer, dwPrefMaxLen, lpdwEntriesRead, lpdwTotalEntries, lpdwResumeHandle)
  end

  def mprAdminPortEnum(hRasServer : LibC::IntPtrT, dwLevel : UInt32, hRasConnection : Win32cr::Foundation::HANDLE, lplpbBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32
    C.MprAdminPortEnum(hRasServer, dwLevel, hRasConnection, lplpbBuffer, dwPrefMaxLen, lpdwEntriesRead, lpdwTotalEntries, lpdwResumeHandle)
  end

  def mprAdminConnectionGetInfo(hRasServer : LibC::IntPtrT, dwLevel : UInt32, hRasConnection : Win32cr::Foundation::HANDLE, lplpbBuffer : UInt8**) : UInt32
    C.MprAdminConnectionGetInfo(hRasServer, dwLevel, hRasConnection, lplpbBuffer)
  end

  def mprAdminPortGetInfo(hRasServer : LibC::IntPtrT, dwLevel : UInt32, hPort : Win32cr::Foundation::HANDLE, lplpbBuffer : UInt8**) : UInt32
    C.MprAdminPortGetInfo(hRasServer, dwLevel, hPort, lplpbBuffer)
  end

  def mprAdminConnectionClearStats(hRasServer : LibC::IntPtrT, hRasConnection : Win32cr::Foundation::HANDLE) : UInt32
    C.MprAdminConnectionClearStats(hRasServer, hRasConnection)
  end

  def mprAdminPortClearStats(hRasServer : LibC::IntPtrT, hPort : Win32cr::Foundation::HANDLE) : UInt32
    C.MprAdminPortClearStats(hRasServer, hPort)
  end

  def mprAdminPortReset(hRasServer : LibC::IntPtrT, hPort : Win32cr::Foundation::HANDLE) : UInt32
    C.MprAdminPortReset(hRasServer, hPort)
  end

  def mprAdminPortDisconnect(hRasServer : LibC::IntPtrT, hPort : Win32cr::Foundation::HANDLE) : UInt32
    C.MprAdminPortDisconnect(hRasServer, hPort)
  end

  def mprAdminConnectionRemoveQuarantine(hRasServer : Win32cr::Foundation::HANDLE, hRasConnection : Win32cr::Foundation::HANDLE, fIsIpAddress : Win32cr::Foundation::BOOL) : UInt32
    C.MprAdminConnectionRemoveQuarantine(hRasServer, hRasConnection, fIsIpAddress)
  end

  def mprAdminUserGetInfo(lpszServer : Win32cr::Foundation::PWSTR, lpszUser : Win32cr::Foundation::PWSTR, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32
    C.MprAdminUserGetInfo(lpszServer, lpszUser, dwLevel, lpbBuffer)
  end

  def mprAdminUserSetInfo(lpszServer : Win32cr::Foundation::PWSTR, lpszUser : Win32cr::Foundation::PWSTR, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32
    C.MprAdminUserSetInfo(lpszServer, lpszUser, dwLevel, lpbBuffer)
  end

  def mprAdminSendUserMessage(hMprServer : LibC::IntPtrT, hConnection : Win32cr::Foundation::HANDLE, lpwszMessage : Win32cr::Foundation::PWSTR) : UInt32
    C.MprAdminSendUserMessage(hMprServer, hConnection, lpwszMessage)
  end

  def mprAdminGetPDCServer(lpszDomain : Win32cr::Foundation::PWSTR, lpszServer : Win32cr::Foundation::PWSTR, lpszPDCServer : Win32cr::Foundation::PWSTR) : UInt32
    C.MprAdminGetPDCServer(lpszDomain, lpszServer, lpszPDCServer)
  end

  def mprAdminIsServiceRunning(lpwsServerName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL
    C.MprAdminIsServiceRunning(lpwsServerName)
  end

  def mprAdminServerConnect(lpwsServerName : Win32cr::Foundation::PWSTR, phMprServer : LibC::IntPtrT*) : UInt32
    C.MprAdminServerConnect(lpwsServerName, phMprServer)
  end

  def mprAdminServerDisconnect(hMprServer : LibC::IntPtrT) : Void
    C.MprAdminServerDisconnect(hMprServer)
  end

  def mprAdminServerGetCredentials(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lplpbBuffer : UInt8**) : UInt32
    C.MprAdminServerGetCredentials(hMprServer, dwLevel, lplpbBuffer)
  end

  def mprAdminServerSetCredentials(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32
    C.MprAdminServerSetCredentials(hMprServer, dwLevel, lpbBuffer)
  end

  def mprAdminBufferFree(pBuffer : Void*) : UInt32
    C.MprAdminBufferFree(pBuffer)
  end

  def mprAdminGetErrorString(dwError : UInt32, lplpwsErrorString : Win32cr::Foundation::PWSTR*) : UInt32
    C.MprAdminGetErrorString(dwError, lplpwsErrorString)
  end

  def mprAdminServerGetInfo(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lplpbBuffer : UInt8**) : UInt32
    C.MprAdminServerGetInfo(hMprServer, dwLevel, lplpbBuffer)
  end

  def mprAdminServerSetInfo(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32
    C.MprAdminServerSetInfo(hMprServer, dwLevel, lpbBuffer)
  end

  def mprAdminEstablishDomainRasServer(pszDomain : Win32cr::Foundation::PWSTR, pszMachine : Win32cr::Foundation::PWSTR, bEnable : Win32cr::Foundation::BOOL) : UInt32
    C.MprAdminEstablishDomainRasServer(pszDomain, pszMachine, bEnable)
  end

  def mprAdminIsDomainRasServer(pszDomain : Win32cr::Foundation::PWSTR, pszMachine : Win32cr::Foundation::PWSTR, pbIsRasServer : Win32cr::Foundation::BOOL*) : UInt32
    C.MprAdminIsDomainRasServer(pszDomain, pszMachine, pbIsRasServer)
  end

  def mprAdminTransportCreate(hMprServer : LibC::IntPtrT, dwTransportId : UInt32, lpwsTransportName : Win32cr::Foundation::PWSTR, pGlobalInfo : UInt8*, dwGlobalInfoSize : UInt32, pClientInterfaceInfo : UInt8*, dwClientInterfaceInfoSize : UInt32, lpwsDLLPath : Win32cr::Foundation::PWSTR) : UInt32
    C.MprAdminTransportCreate(hMprServer, dwTransportId, lpwsTransportName, pGlobalInfo, dwGlobalInfoSize, pClientInterfaceInfo, dwClientInterfaceInfoSize, lpwsDLLPath)
  end

  def mprAdminTransportSetInfo(hMprServer : LibC::IntPtrT, dwTransportId : UInt32, pGlobalInfo : UInt8*, dwGlobalInfoSize : UInt32, pClientInterfaceInfo : UInt8*, dwClientInterfaceInfoSize : UInt32) : UInt32
    C.MprAdminTransportSetInfo(hMprServer, dwTransportId, pGlobalInfo, dwGlobalInfoSize, pClientInterfaceInfo, dwClientInterfaceInfoSize)
  end

  def mprAdminTransportGetInfo(hMprServer : LibC::IntPtrT, dwTransportId : UInt32, ppGlobalInfo : UInt8**, lpdwGlobalInfoSize : UInt32*, ppClientInterfaceInfo : UInt8**, lpdwClientInterfaceInfoSize : UInt32*) : UInt32
    C.MprAdminTransportGetInfo(hMprServer, dwTransportId, ppGlobalInfo, lpdwGlobalInfoSize, ppClientInterfaceInfo, lpdwClientInterfaceInfoSize)
  end

  def mprAdminDeviceEnum(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lplpbBuffer : UInt8**, lpdwTotalEntries : UInt32*) : UInt32
    C.MprAdminDeviceEnum(hMprServer, dwLevel, lplpbBuffer, lpdwTotalEntries)
  end

  def mprAdminInterfaceGetHandle(hMprServer : LibC::IntPtrT, lpwsInterfaceName : Win32cr::Foundation::PWSTR, phInterface : Win32cr::Foundation::HANDLE*, fIncludeClientInterfaces : Win32cr::Foundation::BOOL) : UInt32
    C.MprAdminInterfaceGetHandle(hMprServer, lpwsInterfaceName, phInterface, fIncludeClientInterfaces)
  end

  def mprAdminInterfaceCreate(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lpbBuffer : UInt8*, phInterface : Win32cr::Foundation::HANDLE*) : UInt32
    C.MprAdminInterfaceCreate(hMprServer, dwLevel, lpbBuffer, phInterface)
  end

  def mprAdminInterfaceGetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpbBuffer : UInt8**) : UInt32
    C.MprAdminInterfaceGetInfo(hMprServer, hInterface, dwLevel, lplpbBuffer)
  end

  def mprAdminInterfaceSetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32
    C.MprAdminInterfaceSetInfo(hMprServer, hInterface, dwLevel, lpbBuffer)
  end

  def mprAdminInterfaceDelete(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE) : UInt32
    C.MprAdminInterfaceDelete(hMprServer, hInterface)
  end

  def mprAdminInterfaceDeviceGetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwIndex : UInt32, dwLevel : UInt32, lplpBuffer : UInt8**) : UInt32
    C.MprAdminInterfaceDeviceGetInfo(hMprServer, hInterface, dwIndex, dwLevel, lplpBuffer)
  end

  def mprAdminInterfaceDeviceSetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwIndex : UInt32, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32
    C.MprAdminInterfaceDeviceSetInfo(hMprServer, hInterface, dwIndex, dwLevel, lpbBuffer)
  end

  def mprAdminInterfaceTransportRemove(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32) : UInt32
    C.MprAdminInterfaceTransportRemove(hMprServer, hInterface, dwTransportId)
  end

  def mprAdminInterfaceTransportAdd(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, pInterfaceInfo : UInt8*, dwInterfaceInfoSize : UInt32) : UInt32
    C.MprAdminInterfaceTransportAdd(hMprServer, hInterface, dwTransportId, pInterfaceInfo, dwInterfaceInfoSize)
  end

  def mprAdminInterfaceTransportGetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, ppInterfaceInfo : UInt8**, lpdwInterfaceInfoSize : UInt32*) : UInt32
    C.MprAdminInterfaceTransportGetInfo(hMprServer, hInterface, dwTransportId, ppInterfaceInfo, lpdwInterfaceInfoSize)
  end

  def mprAdminInterfaceTransportSetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, pInterfaceInfo : UInt8*, dwInterfaceInfoSize : UInt32) : UInt32
    C.MprAdminInterfaceTransportSetInfo(hMprServer, hInterface, dwTransportId, pInterfaceInfo, dwInterfaceInfoSize)
  end

  def mprAdminInterfaceEnum(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lplpbBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32
    C.MprAdminInterfaceEnum(hMprServer, dwLevel, lplpbBuffer, dwPrefMaxLen, lpdwEntriesRead, lpdwTotalEntries, lpdwResumeHandle)
  end

  def mprAdminInterfaceSetCredentials(lpwsServer : Win32cr::Foundation::PWSTR, lpwsInterfaceName : Win32cr::Foundation::PWSTR, lpwsUserName : Win32cr::Foundation::PWSTR, lpwsDomainName : Win32cr::Foundation::PWSTR, lpwsPassword : Win32cr::Foundation::PWSTR) : UInt32
    C.MprAdminInterfaceSetCredentials(lpwsServer, lpwsInterfaceName, lpwsUserName, lpwsDomainName, lpwsPassword)
  end

  def mprAdminInterfaceGetCredentials(lpwsServer : Win32cr::Foundation::PWSTR, lpwsInterfaceName : Win32cr::Foundation::PWSTR, lpwsUserName : Win32cr::Foundation::PWSTR, lpwsPassword : Win32cr::Foundation::PWSTR, lpwsDomainName : Win32cr::Foundation::PWSTR) : UInt32
    C.MprAdminInterfaceGetCredentials(lpwsServer, lpwsInterfaceName, lpwsUserName, lpwsPassword, lpwsDomainName)
  end

  def mprAdminInterfaceSetCredentialsEx(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32
    C.MprAdminInterfaceSetCredentialsEx(hMprServer, hInterface, dwLevel, lpbBuffer)
  end

  def mprAdminInterfaceGetCredentialsEx(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpbBuffer : UInt8**) : UInt32
    C.MprAdminInterfaceGetCredentialsEx(hMprServer, hInterface, dwLevel, lplpbBuffer)
  end

  def mprAdminInterfaceConnect(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, hEvent : Win32cr::Foundation::HANDLE, fSynchronous : Win32cr::Foundation::BOOL) : UInt32
    C.MprAdminInterfaceConnect(hMprServer, hInterface, hEvent, fSynchronous)
  end

  def mprAdminInterfaceDisconnect(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE) : UInt32
    C.MprAdminInterfaceDisconnect(hMprServer, hInterface)
  end

  def mprAdminInterfaceUpdateRoutes(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwProtocolId : UInt32, hEvent : Win32cr::Foundation::HANDLE) : UInt32
    C.MprAdminInterfaceUpdateRoutes(hMprServer, hInterface, dwProtocolId, hEvent)
  end

  def mprAdminInterfaceQueryUpdateResult(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwProtocolId : UInt32, lpdwUpdateResult : UInt32*) : UInt32
    C.MprAdminInterfaceQueryUpdateResult(hMprServer, hInterface, dwProtocolId, lpdwUpdateResult)
  end

  def mprAdminInterfaceUpdatePhonebookInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE) : UInt32
    C.MprAdminInterfaceUpdatePhonebookInfo(hMprServer, hInterface)
  end

  def mprAdminRegisterConnectionNotification(hMprServer : LibC::IntPtrT, hEventNotification : Win32cr::Foundation::HANDLE) : UInt32
    C.MprAdminRegisterConnectionNotification(hMprServer, hEventNotification)
  end

  def mprAdminDeregisterConnectionNotification(hMprServer : LibC::IntPtrT, hEventNotification : Win32cr::Foundation::HANDLE) : UInt32
    C.MprAdminDeregisterConnectionNotification(hMprServer, hEventNotification)
  end

  def mprAdminMIBServerConnect(lpwsServerName : Win32cr::Foundation::PWSTR, phMibServer : LibC::IntPtrT*) : UInt32
    C.MprAdminMIBServerConnect(lpwsServerName, phMibServer)
  end

  def mprAdminMIBServerDisconnect(hMibServer : LibC::IntPtrT) : Void
    C.MprAdminMIBServerDisconnect(hMibServer)
  end

  def mprAdminMIBEntryCreate(hMibServer : LibC::IntPtrT, dwPid : UInt32, dwRoutingPid : UInt32, lpEntry : Void*, dwEntrySize : UInt32) : UInt32
    C.MprAdminMIBEntryCreate(hMibServer, dwPid, dwRoutingPid, lpEntry, dwEntrySize)
  end

  def mprAdminMIBEntryDelete(hMibServer : LibC::IntPtrT, dwProtocolId : UInt32, dwRoutingPid : UInt32, lpEntry : Void*, dwEntrySize : UInt32) : UInt32
    C.MprAdminMIBEntryDelete(hMibServer, dwProtocolId, dwRoutingPid, lpEntry, dwEntrySize)
  end

  def mprAdminMIBEntrySet(hMibServer : LibC::IntPtrT, dwProtocolId : UInt32, dwRoutingPid : UInt32, lpEntry : Void*, dwEntrySize : UInt32) : UInt32
    C.MprAdminMIBEntrySet(hMibServer, dwProtocolId, dwRoutingPid, lpEntry, dwEntrySize)
  end

  def mprAdminMIBEntryGet(hMibServer : LibC::IntPtrT, dwProtocolId : UInt32, dwRoutingPid : UInt32, lpInEntry : Void*, dwInEntrySize : UInt32, lplpOutEntry : Void**, lpOutEntrySize : UInt32*) : UInt32
    C.MprAdminMIBEntryGet(hMibServer, dwProtocolId, dwRoutingPid, lpInEntry, dwInEntrySize, lplpOutEntry, lpOutEntrySize)
  end

  def mprAdminMIBEntryGetFirst(hMibServer : LibC::IntPtrT, dwProtocolId : UInt32, dwRoutingPid : UInt32, lpInEntry : Void*, dwInEntrySize : UInt32, lplpOutEntry : Void**, lpOutEntrySize : UInt32*) : UInt32
    C.MprAdminMIBEntryGetFirst(hMibServer, dwProtocolId, dwRoutingPid, lpInEntry, dwInEntrySize, lplpOutEntry, lpOutEntrySize)
  end

  def mprAdminMIBEntryGetNext(hMibServer : LibC::IntPtrT, dwProtocolId : UInt32, dwRoutingPid : UInt32, lpInEntry : Void*, dwInEntrySize : UInt32, lplpOutEntry : Void**, lpOutEntrySize : UInt32*) : UInt32
    C.MprAdminMIBEntryGetNext(hMibServer, dwProtocolId, dwRoutingPid, lpInEntry, dwInEntrySize, lplpOutEntry, lpOutEntrySize)
  end

  def mprAdminMIBBufferFree(pBuffer : Void*) : UInt32
    C.MprAdminMIBBufferFree(pBuffer)
  end

  def mprConfigServerInstall(dwLevel : UInt32, pBuffer : Void*) : UInt32
    C.MprConfigServerInstall(dwLevel, pBuffer)
  end

  def mprConfigServerConnect(lpwsServerName : Win32cr::Foundation::PWSTR, phMprConfig : Win32cr::Foundation::HANDLE*) : UInt32
    C.MprConfigServerConnect(lpwsServerName, phMprConfig)
  end

  def mprConfigServerDisconnect(hMprConfig : Win32cr::Foundation::HANDLE) : Void
    C.MprConfigServerDisconnect(hMprConfig)
  end

  def mprConfigServerRefresh(hMprConfig : Win32cr::Foundation::HANDLE) : UInt32
    C.MprConfigServerRefresh(hMprConfig)
  end

  def mprConfigBufferFree(pBuffer : Void*) : UInt32
    C.MprConfigBufferFree(pBuffer)
  end

  def mprConfigServerGetInfo(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpbBuffer : UInt8**) : UInt32
    C.MprConfigServerGetInfo(hMprConfig, dwLevel, lplpbBuffer)
  end

  def mprConfigServerSetInfo(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32
    C.MprConfigServerSetInfo(hMprServer, dwLevel, lpbBuffer)
  end

  def mprConfigServerBackup(hMprConfig : Win32cr::Foundation::HANDLE, lpwsPath : Win32cr::Foundation::PWSTR) : UInt32
    C.MprConfigServerBackup(hMprConfig, lpwsPath)
  end

  def mprConfigServerRestore(hMprConfig : Win32cr::Foundation::HANDLE, lpwsPath : Win32cr::Foundation::PWSTR) : UInt32
    C.MprConfigServerRestore(hMprConfig, lpwsPath)
  end

  def mprConfigTransportCreate(hMprConfig : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, lpwsTransportName : Win32cr::Foundation::PWSTR, pGlobalInfo : UInt8*, dwGlobalInfoSize : UInt32, pClientInterfaceInfo : UInt8*, dwClientInterfaceInfoSize : UInt32, lpwsDLLPath : Win32cr::Foundation::PWSTR, phRouterTransport : Win32cr::Foundation::HANDLE*) : UInt32
    C.MprConfigTransportCreate(hMprConfig, dwTransportId, lpwsTransportName, pGlobalInfo, dwGlobalInfoSize, pClientInterfaceInfo, dwClientInterfaceInfoSize, lpwsDLLPath, phRouterTransport)
  end

  def mprConfigTransportDelete(hMprConfig : Win32cr::Foundation::HANDLE, hRouterTransport : Win32cr::Foundation::HANDLE) : UInt32
    C.MprConfigTransportDelete(hMprConfig, hRouterTransport)
  end

  def mprConfigTransportGetHandle(hMprConfig : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, phRouterTransport : Win32cr::Foundation::HANDLE*) : UInt32
    C.MprConfigTransportGetHandle(hMprConfig, dwTransportId, phRouterTransport)
  end

  def mprConfigTransportSetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterTransport : Win32cr::Foundation::HANDLE, pGlobalInfo : UInt8*, dwGlobalInfoSize : UInt32, pClientInterfaceInfo : UInt8*, dwClientInterfaceInfoSize : UInt32, lpwsDLLPath : Win32cr::Foundation::PWSTR) : UInt32
    C.MprConfigTransportSetInfo(hMprConfig, hRouterTransport, pGlobalInfo, dwGlobalInfoSize, pClientInterfaceInfo, dwClientInterfaceInfoSize, lpwsDLLPath)
  end

  def mprConfigTransportGetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterTransport : Win32cr::Foundation::HANDLE, ppGlobalInfo : UInt8**, lpdwGlobalInfoSize : UInt32*, ppClientInterfaceInfo : UInt8**, lpdwClientInterfaceInfoSize : UInt32*, lplpwsDLLPath : Win32cr::Foundation::PWSTR*) : UInt32
    C.MprConfigTransportGetInfo(hMprConfig, hRouterTransport, ppGlobalInfo, lpdwGlobalInfoSize, ppClientInterfaceInfo, lpdwClientInterfaceInfoSize, lplpwsDLLPath)
  end

  def mprConfigTransportEnum(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32
    C.MprConfigTransportEnum(hMprConfig, dwLevel, lplpBuffer, dwPrefMaxLen, lpdwEntriesRead, lpdwTotalEntries, lpdwResumeHandle)
  end

  def mprConfigInterfaceCreate(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lpbBuffer : UInt8*, phRouterInterface : Win32cr::Foundation::HANDLE*) : UInt32
    C.MprConfigInterfaceCreate(hMprConfig, dwLevel, lpbBuffer, phRouterInterface)
  end

  def mprConfigInterfaceDelete(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE) : UInt32
    C.MprConfigInterfaceDelete(hMprConfig, hRouterInterface)
  end

  def mprConfigInterfaceGetHandle(hMprConfig : Win32cr::Foundation::HANDLE, lpwsInterfaceName : Win32cr::Foundation::PWSTR, phRouterInterface : Win32cr::Foundation::HANDLE*) : UInt32
    C.MprConfigInterfaceGetHandle(hMprConfig, lpwsInterfaceName, phRouterInterface)
  end

  def mprConfigInterfaceGetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpBuffer : UInt8**, lpdwBufferSize : UInt32*) : UInt32
    C.MprConfigInterfaceGetInfo(hMprConfig, hRouterInterface, dwLevel, lplpBuffer, lpdwBufferSize)
  end

  def mprConfigInterfaceSetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32
    C.MprConfigInterfaceSetInfo(hMprConfig, hRouterInterface, dwLevel, lpbBuffer)
  end

  def mprConfigInterfaceEnum(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32
    C.MprConfigInterfaceEnum(hMprConfig, dwLevel, lplpBuffer, dwPrefMaxLen, lpdwEntriesRead, lpdwTotalEntries, lpdwResumeHandle)
  end

  def mprConfigInterfaceTransportAdd(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, lpwsTransportName : Win32cr::Foundation::PWSTR, pInterfaceInfo : UInt8*, dwInterfaceInfoSize : UInt32, phRouterIfTransport : Win32cr::Foundation::HANDLE*) : UInt32
    C.MprConfigInterfaceTransportAdd(hMprConfig, hRouterInterface, dwTransportId, lpwsTransportName, pInterfaceInfo, dwInterfaceInfoSize, phRouterIfTransport)
  end

  def mprConfigInterfaceTransportRemove(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, hRouterIfTransport : Win32cr::Foundation::HANDLE) : UInt32
    C.MprConfigInterfaceTransportRemove(hMprConfig, hRouterInterface, hRouterIfTransport)
  end

  def mprConfigInterfaceTransportGetHandle(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, phRouterIfTransport : Win32cr::Foundation::HANDLE*) : UInt32
    C.MprConfigInterfaceTransportGetHandle(hMprConfig, hRouterInterface, dwTransportId, phRouterIfTransport)
  end

  def mprConfigInterfaceTransportGetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, hRouterIfTransport : Win32cr::Foundation::HANDLE, ppInterfaceInfo : UInt8**, lpdwInterfaceInfoSize : UInt32*) : UInt32
    C.MprConfigInterfaceTransportGetInfo(hMprConfig, hRouterInterface, hRouterIfTransport, ppInterfaceInfo, lpdwInterfaceInfoSize)
  end

  def mprConfigInterfaceTransportSetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, hRouterIfTransport : Win32cr::Foundation::HANDLE, pInterfaceInfo : UInt8*, dwInterfaceInfoSize : UInt32) : UInt32
    C.MprConfigInterfaceTransportSetInfo(hMprConfig, hRouterInterface, hRouterIfTransport, pInterfaceInfo, dwInterfaceInfoSize)
  end

  def mprConfigInterfaceTransportEnum(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32
    C.MprConfigInterfaceTransportEnum(hMprConfig, hRouterInterface, dwLevel, lplpBuffer, dwPrefMaxLen, lpdwEntriesRead, lpdwTotalEntries, lpdwResumeHandle)
  end

  def mprConfigGetFriendlyName(hMprConfig : Win32cr::Foundation::HANDLE, pszGuidName : Win32cr::Foundation::PWSTR, pszBuffer : Win32cr::Foundation::PWSTR, dwBufferSize : UInt32) : UInt32
    C.MprConfigGetFriendlyName(hMprConfig, pszGuidName, pszBuffer, dwBufferSize)
  end

  def mprConfigGetGuidName(hMprConfig : Win32cr::Foundation::HANDLE, pszFriendlyName : Win32cr::Foundation::PWSTR, pszBuffer : Win32cr::Foundation::PWSTR, dwBufferSize : UInt32) : UInt32
    C.MprConfigGetGuidName(hMprConfig, pszFriendlyName, pszBuffer, dwBufferSize)
  end

  def mprConfigFilterGetInfo(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, dwTransportId : UInt32, lpBuffer : UInt8*) : UInt32
    C.MprConfigFilterGetInfo(hMprConfig, dwLevel, dwTransportId, lpBuffer)
  end

  def mprConfigFilterSetInfo(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, dwTransportId : UInt32, lpBuffer : UInt8*) : UInt32
    C.MprConfigFilterSetInfo(hMprConfig, dwLevel, dwTransportId, lpBuffer)
  end

  def mprInfoCreate(dwVersion : UInt32, lplpNewHeader : Void**) : UInt32
    C.MprInfoCreate(dwVersion, lplpNewHeader)
  end

  def mprInfoDelete(lpHeader : Void*) : UInt32
    C.MprInfoDelete(lpHeader)
  end

  def mprInfoRemoveAll(lpHeader : Void*, lplpNewHeader : Void**) : UInt32
    C.MprInfoRemoveAll(lpHeader, lplpNewHeader)
  end

  def mprInfoDuplicate(lpHeader : Void*, lplpNewHeader : Void**) : UInt32
    C.MprInfoDuplicate(lpHeader, lplpNewHeader)
  end

  def mprInfoBlockAdd(lpHeader : Void*, dwInfoType : UInt32, dwItemSize : UInt32, dwItemCount : UInt32, lpItemData : UInt8*, lplpNewHeader : Void**) : UInt32
    C.MprInfoBlockAdd(lpHeader, dwInfoType, dwItemSize, dwItemCount, lpItemData, lplpNewHeader)
  end

  def mprInfoBlockRemove(lpHeader : Void*, dwInfoType : UInt32, lplpNewHeader : Void**) : UInt32
    C.MprInfoBlockRemove(lpHeader, dwInfoType, lplpNewHeader)
  end

  def mprInfoBlockSet(lpHeader : Void*, dwInfoType : UInt32, dwItemSize : UInt32, dwItemCount : UInt32, lpItemData : UInt8*, lplpNewHeader : Void**) : UInt32
    C.MprInfoBlockSet(lpHeader, dwInfoType, dwItemSize, dwItemCount, lpItemData, lplpNewHeader)
  end

  def mprInfoBlockFind(lpHeader : Void*, dwInfoType : UInt32, lpdwItemSize : UInt32*, lpdwItemCount : UInt32*, lplpItemData : UInt8**) : UInt32
    C.MprInfoBlockFind(lpHeader, dwInfoType, lpdwItemSize, lpdwItemCount, lplpItemData)
  end

  def mprInfoBlockQuerySize(lpHeader : Void*) : UInt32
    C.MprInfoBlockQuerySize(lpHeader)
  end

  def mgmRegisterMProtocol(prpiInfo : Win32cr::NetworkManagement::Rras::ROUTING_PROTOCOL_CONFIG*, dwProtocolId : UInt32, dwComponentId : UInt32, phProtocol : Win32cr::Foundation::HANDLE*) : UInt32
    C.MgmRegisterMProtocol(prpiInfo, dwProtocolId, dwComponentId, phProtocol)
  end

  def mgmDeRegisterMProtocol(hProtocol : Win32cr::Foundation::HANDLE) : UInt32
    C.MgmDeRegisterMProtocol(hProtocol)
  end

  def mgmTakeInterfaceOwnership(hProtocol : Win32cr::Foundation::HANDLE, dwIfIndex : UInt32, dwIfNextHopAddr : UInt32) : UInt32
    C.MgmTakeInterfaceOwnership(hProtocol, dwIfIndex, dwIfNextHopAddr)
  end

  def mgmReleaseInterfaceOwnership(hProtocol : Win32cr::Foundation::HANDLE, dwIfIndex : UInt32, dwIfNextHopAddr : UInt32) : UInt32
    C.MgmReleaseInterfaceOwnership(hProtocol, dwIfIndex, dwIfNextHopAddr)
  end

  def mgmGetProtocolOnInterface(dwIfIndex : UInt32, dwIfNextHopAddr : UInt32, pdwIfProtocolId : UInt32*, pdwIfComponentId : UInt32*) : UInt32
    C.MgmGetProtocolOnInterface(dwIfIndex, dwIfNextHopAddr, pdwIfProtocolId, pdwIfComponentId)
  end

  def mgmAddGroupMembershipEntry(hProtocol : Win32cr::Foundation::HANDLE, dwSourceAddr : UInt32, dwSourceMask : UInt32, dwGroupAddr : UInt32, dwGroupMask : UInt32, dwIfIndex : UInt32, dwIfNextHopIPAddr : UInt32, dwFlags : UInt32) : UInt32
    C.MgmAddGroupMembershipEntry(hProtocol, dwSourceAddr, dwSourceMask, dwGroupAddr, dwGroupMask, dwIfIndex, dwIfNextHopIPAddr, dwFlags)
  end

  def mgmDeleteGroupMembershipEntry(hProtocol : Win32cr::Foundation::HANDLE, dwSourceAddr : UInt32, dwSourceMask : UInt32, dwGroupAddr : UInt32, dwGroupMask : UInt32, dwIfIndex : UInt32, dwIfNextHopIPAddr : UInt32, dwFlags : UInt32) : UInt32
    C.MgmDeleteGroupMembershipEntry(hProtocol, dwSourceAddr, dwSourceMask, dwGroupAddr, dwGroupMask, dwIfIndex, dwIfNextHopIPAddr, dwFlags)
  end

  def mgmGetMfe(pimm : Win32cr::NetworkManagement::IpHelper::MIB_IPMCAST_MFE*, pdwBufferSize : UInt32*, pbBuffer : UInt8*) : UInt32
    C.MgmGetMfe(pimm, pdwBufferSize, pbBuffer)
  end

  def mgmGetFirstMfe(pdwBufferSize : UInt32*, pbBuffer : UInt8*, pdwNumEntries : UInt32*) : UInt32
    C.MgmGetFirstMfe(pdwBufferSize, pbBuffer, pdwNumEntries)
  end

  def mgmGetNextMfe(pimmStart : Win32cr::NetworkManagement::IpHelper::MIB_IPMCAST_MFE*, pdwBufferSize : UInt32*, pbBuffer : UInt8*, pdwNumEntries : UInt32*) : UInt32
    C.MgmGetNextMfe(pimmStart, pdwBufferSize, pbBuffer, pdwNumEntries)
  end

  def mgmGetMfeStats(pimm : Win32cr::NetworkManagement::IpHelper::MIB_IPMCAST_MFE*, pdwBufferSize : UInt32*, pbBuffer : UInt8*, dwFlags : UInt32) : UInt32
    C.MgmGetMfeStats(pimm, pdwBufferSize, pbBuffer, dwFlags)
  end

  def mgmGetFirstMfeStats(pdwBufferSize : UInt32*, pbBuffer : UInt8*, pdwNumEntries : UInt32*, dwFlags : UInt32) : UInt32
    C.MgmGetFirstMfeStats(pdwBufferSize, pbBuffer, pdwNumEntries, dwFlags)
  end

  def mgmGetNextMfeStats(pimmStart : Win32cr::NetworkManagement::IpHelper::MIB_IPMCAST_MFE*, pdwBufferSize : UInt32*, pbBuffer : UInt8*, pdwNumEntries : UInt32*, dwFlags : UInt32) : UInt32
    C.MgmGetNextMfeStats(pimmStart, pdwBufferSize, pbBuffer, pdwNumEntries, dwFlags)
  end

  def mgmGroupEnumerationStart(hProtocol : Win32cr::Foundation::HANDLE, metEnumType : Win32cr::NetworkManagement::Rras::MGM_ENUM_TYPES, phEnumHandle : Win32cr::Foundation::HANDLE*) : UInt32
    C.MgmGroupEnumerationStart(hProtocol, metEnumType, phEnumHandle)
  end

  def mgmGroupEnumerationGetNext(hEnum : Win32cr::Foundation::HANDLE, pdwBufferSize : UInt32*, pbBuffer : UInt8*, pdwNumEntries : UInt32*) : UInt32
    C.MgmGroupEnumerationGetNext(hEnum, pdwBufferSize, pbBuffer, pdwNumEntries)
  end

  def mgmGroupEnumerationEnd(hEnum : Win32cr::Foundation::HANDLE) : UInt32
    C.MgmGroupEnumerationEnd(hEnum)
  end

  def rtmConvertNetAddressToIpv6AddressAndLength(pNetAddress : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, pAddress : Win32cr::Networking::WinSock::IN6_ADDR*, pLength : UInt32*, dwAddressSize : UInt32) : UInt32
    C.RtmConvertNetAddressToIpv6AddressAndLength(pNetAddress, pAddress, pLength, dwAddressSize)
  end

  def rtmConvertIpv6AddressAndLengthToNetAddress(pNetAddress : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, address : Win32cr::Networking::WinSock::IN6_ADDR, dwLength : UInt32, dwAddressSize : UInt32) : UInt32
    C.RtmConvertIpv6AddressAndLengthToNetAddress(pNetAddress, address, dwLength, dwAddressSize)
  end

  def rtmRegisterEntity(rtm_entity_info : Win32cr::NetworkManagement::Rras::RTM_ENTITY_INFO*, export_methods : Win32cr::NetworkManagement::Rras::RTM_ENTITY_EXPORT_METHODS*, event_callback : Win32cr::NetworkManagement::Rras::RTM_EVENT_CALLBACK, reserve_opaque_pointer : Win32cr::Foundation::BOOL, rtm_reg_profile : Win32cr::NetworkManagement::Rras::RTM_REGN_PROFILE*, rtm_reg_handle : LibC::IntPtrT*) : UInt32
    C.RtmRegisterEntity(rtm_entity_info, export_methods, event_callback, reserve_opaque_pointer, rtm_reg_profile, rtm_reg_handle)
  end

  def rtmDeregisterEntity(rtm_reg_handle : LibC::IntPtrT) : UInt32
    C.RtmDeregisterEntity(rtm_reg_handle)
  end

  def rtmGetRegisteredEntities(rtm_reg_handle : LibC::IntPtrT, num_entities : UInt32*, entity_handles : LibC::IntPtrT*, entity_infos : Win32cr::NetworkManagement::Rras::RTM_ENTITY_INFO*) : UInt32
    C.RtmGetRegisteredEntities(rtm_reg_handle, num_entities, entity_handles, entity_infos)
  end

  def rtmReleaseEntities(rtm_reg_handle : LibC::IntPtrT, num_entities : UInt32, entity_handles : LibC::IntPtrT*) : UInt32
    C.RtmReleaseEntities(rtm_reg_handle, num_entities, entity_handles)
  end

  def rtmLockDestination(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, exclusive : Win32cr::Foundation::BOOL, lock_dest : Win32cr::Foundation::BOOL) : UInt32
    C.RtmLockDestination(rtm_reg_handle, dest_handle, exclusive, lock_dest)
  end

  def rtmGetOpaqueInformationPointer(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, opaque_info_pointer : Void**) : UInt32
    C.RtmGetOpaqueInformationPointer(rtm_reg_handle, dest_handle, opaque_info_pointer)
  end

  def rtmGetEntityMethods(rtm_reg_handle : LibC::IntPtrT, entity_handle : LibC::IntPtrT, num_methods : UInt32*, expt_methods : Win32cr::NetworkManagement::Rras::RTM_ENTITY_EXPORT_METHOD*) : UInt32
    C.RtmGetEntityMethods(rtm_reg_handle, entity_handle, num_methods, expt_methods)
  end

  def rtmInvokeMethod(rtm_reg_handle : LibC::IntPtrT, entity_handle : LibC::IntPtrT, input : Win32cr::NetworkManagement::Rras::RTM_ENTITY_METHOD_INPUT*, output_size : UInt32*, output : Win32cr::NetworkManagement::Rras::RTM_ENTITY_METHOD_OUTPUT*) : UInt32
    C.RtmInvokeMethod(rtm_reg_handle, entity_handle, input, output_size, output)
  end

  def rtmBlockMethods(rtm_reg_handle : LibC::IntPtrT, target_handle : Win32cr::Foundation::HANDLE, target_type : UInt8, blocking_flag : UInt32) : UInt32
    C.RtmBlockMethods(rtm_reg_handle, target_handle, target_type, blocking_flag)
  end

  def rtmGetEntityInfo(rtm_reg_handle : LibC::IntPtrT, entity_handle : LibC::IntPtrT, entity_info : Win32cr::NetworkManagement::Rras::RTM_ENTITY_INFO*) : UInt32
    C.RtmGetEntityInfo(rtm_reg_handle, entity_handle, entity_info)
  end

  def rtmGetDestInfo(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, protocol_id : UInt32, target_views : UInt32, dest_info : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32
    C.RtmGetDestInfo(rtm_reg_handle, dest_handle, protocol_id, target_views, dest_info)
  end

  def rtmGetRouteInfo(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, route_info : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO*, dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*) : UInt32
    C.RtmGetRouteInfo(rtm_reg_handle, route_handle, route_info, dest_address)
  end

  def rtmGetNextHopInfo(rtm_reg_handle : LibC::IntPtrT, next_hop_handle : LibC::IntPtrT, next_hop_info : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO*) : UInt32
    C.RtmGetNextHopInfo(rtm_reg_handle, next_hop_handle, next_hop_info)
  end

  def rtmReleaseEntityInfo(rtm_reg_handle : LibC::IntPtrT, entity_info : Win32cr::NetworkManagement::Rras::RTM_ENTITY_INFO*) : UInt32
    C.RtmReleaseEntityInfo(rtm_reg_handle, entity_info)
  end

  def rtmReleaseDestInfo(rtm_reg_handle : LibC::IntPtrT, dest_info : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32
    C.RtmReleaseDestInfo(rtm_reg_handle, dest_info)
  end

  def rtmReleaseRouteInfo(rtm_reg_handle : LibC::IntPtrT, route_info : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO*) : UInt32
    C.RtmReleaseRouteInfo(rtm_reg_handle, route_info)
  end

  def rtmReleaseNextHopInfo(rtm_reg_handle : LibC::IntPtrT, next_hop_info : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO*) : UInt32
    C.RtmReleaseNextHopInfo(rtm_reg_handle, next_hop_info)
  end

  def rtmAddRouteToDest(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT*, dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, route_info : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO*, time_to_live : UInt32, route_list_handle : LibC::IntPtrT, notify_type : UInt32, notify_handle : LibC::IntPtrT, change_flags : UInt32*) : UInt32
    C.RtmAddRouteToDest(rtm_reg_handle, route_handle, dest_address, route_info, time_to_live, route_list_handle, notify_type, notify_handle, change_flags)
  end

  def rtmDeleteRouteToDest(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, change_flags : UInt32*) : UInt32
    C.RtmDeleteRouteToDest(rtm_reg_handle, route_handle, change_flags)
  end

  def rtmHoldDestination(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, target_views : UInt32, hold_time : UInt32) : UInt32
    C.RtmHoldDestination(rtm_reg_handle, dest_handle, target_views, hold_time)
  end

  def rtmGetRoutePointer(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, route_pointer : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO**) : UInt32
    C.RtmGetRoutePointer(rtm_reg_handle, route_handle, route_pointer)
  end

  def rtmLockRoute(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, exclusive : Win32cr::Foundation::BOOL, lock_route : Win32cr::Foundation::BOOL, route_pointer : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO**) : UInt32
    C.RtmLockRoute(rtm_reg_handle, route_handle, exclusive, lock_route, route_pointer)
  end

  def rtmUpdateAndUnlockRoute(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, time_to_live : UInt32, route_list_handle : LibC::IntPtrT, notify_type : UInt32, notify_handle : LibC::IntPtrT, change_flags : UInt32*) : UInt32
    C.RtmUpdateAndUnlockRoute(rtm_reg_handle, route_handle, time_to_live, route_list_handle, notify_type, notify_handle, change_flags)
  end

  def rtmGetExactMatchDestination(rtm_reg_handle : LibC::IntPtrT, dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, protocol_id : UInt32, target_views : UInt32, dest_info : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32
    C.RtmGetExactMatchDestination(rtm_reg_handle, dest_address, protocol_id, target_views, dest_info)
  end

  def rtmGetMostSpecificDestination(rtm_reg_handle : LibC::IntPtrT, dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, protocol_id : UInt32, target_views : UInt32, dest_info : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32
    C.RtmGetMostSpecificDestination(rtm_reg_handle, dest_address, protocol_id, target_views, dest_info)
  end

  def rtmGetLessSpecificDestination(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, protocol_id : UInt32, target_views : UInt32, dest_info : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32
    C.RtmGetLessSpecificDestination(rtm_reg_handle, dest_handle, protocol_id, target_views, dest_info)
  end

  def rtmGetExactMatchRoute(rtm_reg_handle : LibC::IntPtrT, dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, matching_flags : UInt32, route_info : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO*, interface_index : UInt32, target_views : UInt32, route_handle : LibC::IntPtrT*) : UInt32
    C.RtmGetExactMatchRoute(rtm_reg_handle, dest_address, matching_flags, route_info, interface_index, target_views, route_handle)
  end

  def rtmIsBestRoute(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, best_in_views : UInt32*) : UInt32
    C.RtmIsBestRoute(rtm_reg_handle, route_handle, best_in_views)
  end

  def rtmAddNextHop(rtm_reg_handle : LibC::IntPtrT, next_hop_info : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO*, next_hop_handle : LibC::IntPtrT*, change_flags : UInt32*) : UInt32
    C.RtmAddNextHop(rtm_reg_handle, next_hop_info, next_hop_handle, change_flags)
  end

  def rtmFindNextHop(rtm_reg_handle : LibC::IntPtrT, next_hop_info : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO*, next_hop_handle : LibC::IntPtrT*, next_hop_pointer : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO**) : UInt32
    C.RtmFindNextHop(rtm_reg_handle, next_hop_info, next_hop_handle, next_hop_pointer)
  end

  def rtmDeleteNextHop(rtm_reg_handle : LibC::IntPtrT, next_hop_handle : LibC::IntPtrT, next_hop_info : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO*) : UInt32
    C.RtmDeleteNextHop(rtm_reg_handle, next_hop_handle, next_hop_info)
  end

  def rtmGetNextHopPointer(rtm_reg_handle : LibC::IntPtrT, next_hop_handle : LibC::IntPtrT, next_hop_pointer : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO**) : UInt32
    C.RtmGetNextHopPointer(rtm_reg_handle, next_hop_handle, next_hop_pointer)
  end

  def rtmLockNextHop(rtm_reg_handle : LibC::IntPtrT, next_hop_handle : LibC::IntPtrT, exclusive : Win32cr::Foundation::BOOL, lock_next_hop : Win32cr::Foundation::BOOL, next_hop_pointer : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO**) : UInt32
    C.RtmLockNextHop(rtm_reg_handle, next_hop_handle, exclusive, lock_next_hop, next_hop_pointer)
  end

  def rtmCreateDestEnum(rtm_reg_handle : LibC::IntPtrT, target_views : UInt32, enum_flags : UInt32, net_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, protocol_id : UInt32, rtm_enum_handle : LibC::IntPtrT*) : UInt32
    C.RtmCreateDestEnum(rtm_reg_handle, target_views, enum_flags, net_address, protocol_id, rtm_enum_handle)
  end

  def rtmGetEnumDests(rtm_reg_handle : LibC::IntPtrT, enum_handle : LibC::IntPtrT, num_dests : UInt32*, dest_infos : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32
    C.RtmGetEnumDests(rtm_reg_handle, enum_handle, num_dests, dest_infos)
  end

  def rtmReleaseDests(rtm_reg_handle : LibC::IntPtrT, num_dests : UInt32, dest_infos : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32
    C.RtmReleaseDests(rtm_reg_handle, num_dests, dest_infos)
  end

  def rtmCreateRouteEnum(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, target_views : UInt32, enum_flags : UInt32, start_dest : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, matching_flags : UInt32, criteria_route : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO*, criteria_interface : UInt32, rtm_enum_handle : LibC::IntPtrT*) : UInt32
    C.RtmCreateRouteEnum(rtm_reg_handle, dest_handle, target_views, enum_flags, start_dest, matching_flags, criteria_route, criteria_interface, rtm_enum_handle)
  end

  def rtmGetEnumRoutes(rtm_reg_handle : LibC::IntPtrT, enum_handle : LibC::IntPtrT, num_routes : UInt32*, route_handles : LibC::IntPtrT*) : UInt32
    C.RtmGetEnumRoutes(rtm_reg_handle, enum_handle, num_routes, route_handles)
  end

  def rtmReleaseRoutes(rtm_reg_handle : LibC::IntPtrT, num_routes : UInt32, route_handles : LibC::IntPtrT*) : UInt32
    C.RtmReleaseRoutes(rtm_reg_handle, num_routes, route_handles)
  end

  def rtmCreateNextHopEnum(rtm_reg_handle : LibC::IntPtrT, enum_flags : UInt32, net_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, rtm_enum_handle : LibC::IntPtrT*) : UInt32
    C.RtmCreateNextHopEnum(rtm_reg_handle, enum_flags, net_address, rtm_enum_handle)
  end

  def rtmGetEnumNextHops(rtm_reg_handle : LibC::IntPtrT, enum_handle : LibC::IntPtrT, num_next_hops : UInt32*, next_hop_handles : LibC::IntPtrT*) : UInt32
    C.RtmGetEnumNextHops(rtm_reg_handle, enum_handle, num_next_hops, next_hop_handles)
  end

  def rtmReleaseNextHops(rtm_reg_handle : LibC::IntPtrT, num_next_hops : UInt32, next_hop_handles : LibC::IntPtrT*) : UInt32
    C.RtmReleaseNextHops(rtm_reg_handle, num_next_hops, next_hop_handles)
  end

  def rtmDeleteEnumHandle(rtm_reg_handle : LibC::IntPtrT, enum_handle : LibC::IntPtrT) : UInt32
    C.RtmDeleteEnumHandle(rtm_reg_handle, enum_handle)
  end

  def rtmRegisterForChangeNotification(rtm_reg_handle : LibC::IntPtrT, target_views : UInt32, notify_flags : UInt32, notify_context : Void*, notify_handle : LibC::IntPtrT*) : UInt32
    C.RtmRegisterForChangeNotification(rtm_reg_handle, target_views, notify_flags, notify_context, notify_handle)
  end

  def rtmGetChangedDests(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, num_dests : UInt32*, changed_dests : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32
    C.RtmGetChangedDests(rtm_reg_handle, notify_handle, num_dests, changed_dests)
  end

  def rtmReleaseChangedDests(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, num_dests : UInt32, changed_dests : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32
    C.RtmReleaseChangedDests(rtm_reg_handle, notify_handle, num_dests, changed_dests)
  end

  def rtmIgnoreChangedDests(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, num_dests : UInt32, changed_dests : LibC::IntPtrT*) : UInt32
    C.RtmIgnoreChangedDests(rtm_reg_handle, notify_handle, num_dests, changed_dests)
  end

  def rtmGetChangeStatus(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, change_status : Win32cr::Foundation::BOOL*) : UInt32
    C.RtmGetChangeStatus(rtm_reg_handle, notify_handle, dest_handle, change_status)
  end

  def rtmMarkDestForChangeNotification(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, mark_dest : Win32cr::Foundation::BOOL) : UInt32
    C.RtmMarkDestForChangeNotification(rtm_reg_handle, notify_handle, dest_handle, mark_dest)
  end

  def rtmIsMarkedForChangeNotification(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, dest_marked : Win32cr::Foundation::BOOL*) : UInt32
    C.RtmIsMarkedForChangeNotification(rtm_reg_handle, notify_handle, dest_handle, dest_marked)
  end

  def rtmDeregisterFromChangeNotification(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT) : UInt32
    C.RtmDeregisterFromChangeNotification(rtm_reg_handle, notify_handle)
  end

  def rtmCreateRouteList(rtm_reg_handle : LibC::IntPtrT, route_list_handle : LibC::IntPtrT*) : UInt32
    C.RtmCreateRouteList(rtm_reg_handle, route_list_handle)
  end

  def rtmInsertInRouteList(rtm_reg_handle : LibC::IntPtrT, route_list_handle : LibC::IntPtrT, num_routes : UInt32, route_handles : LibC::IntPtrT*) : UInt32
    C.RtmInsertInRouteList(rtm_reg_handle, route_list_handle, num_routes, route_handles)
  end

  def rtmCreateRouteListEnum(rtm_reg_handle : LibC::IntPtrT, route_list_handle : LibC::IntPtrT, rtm_enum_handle : LibC::IntPtrT*) : UInt32
    C.RtmCreateRouteListEnum(rtm_reg_handle, route_list_handle, rtm_enum_handle)
  end

  def rtmGetListEnumRoutes(rtm_reg_handle : LibC::IntPtrT, enum_handle : LibC::IntPtrT, num_routes : UInt32*, route_handles : LibC::IntPtrT*) : UInt32
    C.RtmGetListEnumRoutes(rtm_reg_handle, enum_handle, num_routes, route_handles)
  end

  def rtmDeleteRouteList(rtm_reg_handle : LibC::IntPtrT, route_list_handle : LibC::IntPtrT) : UInt32
    C.RtmDeleteRouteList(rtm_reg_handle, route_list_handle)
  end

  def rtmReferenceHandles(rtm_reg_handle : LibC::IntPtrT, num_handles : UInt32, rtm_handles : Win32cr::Foundation::HANDLE*) : UInt32
    C.RtmReferenceHandles(rtm_reg_handle, num_handles, rtm_handles)
  end

  @[Link("rasapi32")]
  @[Link("rasdlg")]
  @[Link("mprapi")]
  @[Link("rtm")]
  lib C
    # :nodoc:
    fun RasDialA(param0 : Win32cr::NetworkManagement::Rras::RASDIALEXTENSIONS*, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSA*, param3 : UInt32, param4 : Void*, param5 : Win32cr::NetworkManagement::Rras::HRASCONN*) : UInt32

    # :nodoc:
    fun RasDialW(param0 : Win32cr::NetworkManagement::Rras::RASDIALEXTENSIONS*, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSW*, param3 : UInt32, param4 : Void*, param5 : Win32cr::NetworkManagement::Rras::HRASCONN*) : UInt32

    # :nodoc:
    fun RasEnumConnectionsA(param0 : Win32cr::NetworkManagement::Rras::RASCONNA*, param1 : UInt32*, param2 : UInt32*) : UInt32

    # :nodoc:
    fun RasEnumConnectionsW(param0 : Win32cr::NetworkManagement::Rras::RASCONNW*, param1 : UInt32*, param2 : UInt32*) : UInt32

    # :nodoc:
    fun RasEnumEntriesA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYNAMEA*, param3 : UInt32*, param4 : UInt32*) : UInt32

    # :nodoc:
    fun RasEnumEntriesW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYNAMEW*, param3 : UInt32*, param4 : UInt32*) : UInt32

    # :nodoc:
    fun RasGetConnectStatusA(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::NetworkManagement::Rras::RASCONNSTATUSA*) : UInt32

    # :nodoc:
    fun RasGetConnectStatusW(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::NetworkManagement::Rras::RASCONNSTATUSW*) : UInt32

    # :nodoc:
    fun RasGetErrorStringA(resource_id : UInt32, lpszString : UInt8*, in_buf_size : UInt32) : UInt32

    # :nodoc:
    fun RasGetErrorStringW(resource_id : UInt32, lpszString : UInt16*, in_buf_size : UInt32) : UInt32

    # :nodoc:
    fun RasHangUpA(param0 : Win32cr::NetworkManagement::Rras::HRASCONN) : UInt32

    # :nodoc:
    fun RasHangUpW(param0 : Win32cr::NetworkManagement::Rras::HRASCONN) : UInt32

    # :nodoc:
    fun RasGetProjectionInfoA(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::NetworkManagement::Rras::RASPROJECTION, param2 : Void*, param3 : UInt32*) : UInt32

    # :nodoc:
    fun RasGetProjectionInfoW(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::NetworkManagement::Rras::RASPROJECTION, param2 : Void*, param3 : UInt32*) : UInt32

    # :nodoc:
    fun RasCreatePhonebookEntryA(param0 : Win32cr::Foundation::HWND, param1 : Win32cr::Foundation::PSTR) : UInt32

    # :nodoc:
    fun RasCreatePhonebookEntryW(param0 : Win32cr::Foundation::HWND, param1 : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun RasEditPhonebookEntryA(param0 : Win32cr::Foundation::HWND, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::Foundation::PSTR) : UInt32

    # :nodoc:
    fun RasEditPhonebookEntryW(param0 : Win32cr::Foundation::HWND, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun RasSetEntryDialParamsA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSA*, param2 : Win32cr::Foundation::BOOL) : UInt32

    # :nodoc:
    fun RasSetEntryDialParamsW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSW*, param2 : Win32cr::Foundation::BOOL) : UInt32

    # :nodoc:
    fun RasGetEntryDialParamsA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSA*, param2 : Int32*) : UInt32

    # :nodoc:
    fun RasGetEntryDialParamsW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSW*, param2 : Int32*) : UInt32

    # :nodoc:
    fun RasEnumDevicesA(param0 : Win32cr::NetworkManagement::Rras::RASDEVINFOA*, param1 : UInt32*, param2 : UInt32*) : UInt32

    # :nodoc:
    fun RasEnumDevicesW(param0 : Win32cr::NetworkManagement::Rras::RASDEVINFOW*, param1 : UInt32*, param2 : UInt32*) : UInt32

    # :nodoc:
    fun RasGetCountryInfoA(param0 : Win32cr::NetworkManagement::Rras::RASCTRYINFO*, param1 : UInt32*) : UInt32

    # :nodoc:
    fun RasGetCountryInfoW(param0 : Win32cr::NetworkManagement::Rras::RASCTRYINFO*, param1 : UInt32*) : UInt32

    # :nodoc:
    fun RasGetEntryPropertiesA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYA*, param3 : UInt32*, param4 : UInt8*, param5 : UInt32*) : UInt32

    # :nodoc:
    fun RasGetEntryPropertiesW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYW*, param3 : UInt32*, param4 : UInt8*, param5 : UInt32*) : UInt32

    # :nodoc:
    fun RasSetEntryPropertiesA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYA*, param3 : UInt32, param4 : UInt8*, param5 : UInt32) : UInt32

    # :nodoc:
    fun RasSetEntryPropertiesW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYW*, param3 : UInt32, param4 : UInt8*, param5 : UInt32) : UInt32

    # :nodoc:
    fun RasRenameEntryA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::Foundation::PSTR) : UInt32

    # :nodoc:
    fun RasRenameEntryW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun RasDeleteEntryA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR) : UInt32

    # :nodoc:
    fun RasDeleteEntryW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun RasValidateEntryNameA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR) : UInt32

    # :nodoc:
    fun RasValidateEntryNameW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun RasConnectionNotificationA(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::Foundation::HANDLE, param2 : UInt32) : UInt32

    # :nodoc:
    fun RasConnectionNotificationW(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::Foundation::HANDLE, param2 : UInt32) : UInt32

    # :nodoc:
    fun RasGetSubEntryHandleA(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : UInt32, param2 : Win32cr::NetworkManagement::Rras::HRASCONN*) : UInt32

    # :nodoc:
    fun RasGetSubEntryHandleW(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : UInt32, param2 : Win32cr::NetworkManagement::Rras::HRASCONN*) : UInt32

    # :nodoc:
    fun RasGetCredentialsA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASCREDENTIALSA*) : UInt32

    # :nodoc:
    fun RasGetCredentialsW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASCREDENTIALSW*) : UInt32

    # :nodoc:
    fun RasSetCredentialsA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASCREDENTIALSA*, param3 : Win32cr::Foundation::BOOL) : UInt32

    # :nodoc:
    fun RasSetCredentialsW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASCREDENTIALSW*, param3 : Win32cr::Foundation::BOOL) : UInt32

    # :nodoc:
    fun RasGetSubEntryPropertiesA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : UInt32, param3 : Win32cr::NetworkManagement::Rras::RASSUBENTRYA*, param4 : UInt32*, param5 : UInt8*, param6 : UInt32*) : UInt32

    # :nodoc:
    fun RasGetSubEntryPropertiesW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : UInt32, param3 : Win32cr::NetworkManagement::Rras::RASSUBENTRYW*, param4 : UInt32*, param5 : UInt8*, param6 : UInt32*) : UInt32

    # :nodoc:
    fun RasSetSubEntryPropertiesA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : UInt32, param3 : Win32cr::NetworkManagement::Rras::RASSUBENTRYA*, param4 : UInt32, param5 : UInt8*, param6 : UInt32) : UInt32

    # :nodoc:
    fun RasSetSubEntryPropertiesW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : UInt32, param3 : Win32cr::NetworkManagement::Rras::RASSUBENTRYW*, param4 : UInt32, param5 : UInt8*, param6 : UInt32) : UInt32

    # :nodoc:
    fun RasGetAutodialAddressA(param0 : Win32cr::Foundation::PSTR, param1 : UInt32*, param2 : Win32cr::NetworkManagement::Rras::RASAUTODIALENTRYA*, param3 : UInt32*, param4 : UInt32*) : UInt32

    # :nodoc:
    fun RasGetAutodialAddressW(param0 : Win32cr::Foundation::PWSTR, param1 : UInt32*, param2 : Win32cr::NetworkManagement::Rras::RASAUTODIALENTRYW*, param3 : UInt32*, param4 : UInt32*) : UInt32

    # :nodoc:
    fun RasSetAutodialAddressA(param0 : Win32cr::Foundation::PSTR, param1 : UInt32, param2 : Win32cr::NetworkManagement::Rras::RASAUTODIALENTRYA*, param3 : UInt32, param4 : UInt32) : UInt32

    # :nodoc:
    fun RasSetAutodialAddressW(param0 : Win32cr::Foundation::PWSTR, param1 : UInt32, param2 : Win32cr::NetworkManagement::Rras::RASAUTODIALENTRYW*, param3 : UInt32, param4 : UInt32) : UInt32

    # :nodoc:
    fun RasEnumAutodialAddressesA(lppRasAutodialAddresses : Win32cr::Foundation::PSTR*, lpdwcbRasAutodialAddresses : UInt32*, lpdwcRasAutodialAddresses : UInt32*) : UInt32

    # :nodoc:
    fun RasEnumAutodialAddressesW(lppRasAutodialAddresses : Win32cr::Foundation::PWSTR*, lpdwcbRasAutodialAddresses : UInt32*, lpdwcRasAutodialAddresses : UInt32*) : UInt32

    # :nodoc:
    fun RasGetAutodialEnableA(param0 : UInt32, param1 : Int32*) : UInt32

    # :nodoc:
    fun RasGetAutodialEnableW(param0 : UInt32, param1 : Int32*) : UInt32

    # :nodoc:
    fun RasSetAutodialEnableA(param0 : UInt32, param1 : Win32cr::Foundation::BOOL) : UInt32

    # :nodoc:
    fun RasSetAutodialEnableW(param0 : UInt32, param1 : Win32cr::Foundation::BOOL) : UInt32

    # :nodoc:
    fun RasGetAutodialParamA(param0 : UInt32, param1 : Void*, param2 : UInt32*) : UInt32

    # :nodoc:
    fun RasGetAutodialParamW(param0 : UInt32, param1 : Void*, param2 : UInt32*) : UInt32

    # :nodoc:
    fun RasSetAutodialParamA(param0 : UInt32, param1 : Void*, param2 : UInt32) : UInt32

    # :nodoc:
    fun RasSetAutodialParamW(param0 : UInt32, param1 : Void*, param2 : UInt32) : UInt32

    # :nodoc:
    fun RasGetPCscf(lpszPCscf : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun RasInvokeEapUI(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : UInt32, param2 : Win32cr::NetworkManagement::Rras::RASDIALEXTENSIONS*, param3 : Win32cr::Foundation::HWND) : UInt32

    # :nodoc:
    fun RasGetLinkStatistics(hRasConn : Win32cr::NetworkManagement::Rras::HRASCONN, dwSubEntry : UInt32, lpStatistics : Win32cr::NetworkManagement::Rras::RAS_STATS*) : UInt32

    # :nodoc:
    fun RasGetConnectionStatistics(hRasConn : Win32cr::NetworkManagement::Rras::HRASCONN, lpStatistics : Win32cr::NetworkManagement::Rras::RAS_STATS*) : UInt32

    # :nodoc:
    fun RasClearLinkStatistics(hRasConn : Win32cr::NetworkManagement::Rras::HRASCONN, dwSubEntry : UInt32) : UInt32

    # :nodoc:
    fun RasClearConnectionStatistics(hRasConn : Win32cr::NetworkManagement::Rras::HRASCONN) : UInt32

    # :nodoc:
    fun RasGetEapUserDataA(hToken : Win32cr::Foundation::HANDLE, pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, pbEapData : UInt8*, pdwSizeofEapData : UInt32*) : UInt32

    # :nodoc:
    fun RasGetEapUserDataW(hToken : Win32cr::Foundation::HANDLE, pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, pbEapData : UInt8*, pdwSizeofEapData : UInt32*) : UInt32

    # :nodoc:
    fun RasSetEapUserDataA(hToken : Win32cr::Foundation::HANDLE, pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, pbEapData : UInt8*, dwSizeofEapData : UInt32) : UInt32

    # :nodoc:
    fun RasSetEapUserDataW(hToken : Win32cr::Foundation::HANDLE, pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, pbEapData : UInt8*, dwSizeofEapData : UInt32) : UInt32

    # :nodoc:
    fun RasGetCustomAuthDataA(pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, pbCustomAuthData : UInt8*, pdwSizeofCustomAuthData : UInt32*) : UInt32

    # :nodoc:
    fun RasGetCustomAuthDataW(pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, pbCustomAuthData : UInt8*, pdwSizeofCustomAuthData : UInt32*) : UInt32

    # :nodoc:
    fun RasSetCustomAuthDataA(pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, pbCustomAuthData : UInt8*, dwSizeofCustomAuthData : UInt32) : UInt32

    # :nodoc:
    fun RasSetCustomAuthDataW(pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, pbCustomAuthData : UInt8*, dwSizeofCustomAuthData : UInt32) : UInt32

    # :nodoc:
    fun RasGetEapUserIdentityW(pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, dwFlags : UInt32, hwnd : Win32cr::Foundation::HWND, ppRasEapUserIdentity : Win32cr::NetworkManagement::Rras::RASEAPUSERIDENTITYW**) : UInt32

    # :nodoc:
    fun RasGetEapUserIdentityA(pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, dwFlags : UInt32, hwnd : Win32cr::Foundation::HWND, ppRasEapUserIdentity : Win32cr::NetworkManagement::Rras::RASEAPUSERIDENTITYA**) : UInt32

    # :nodoc:
    fun RasFreeEapUserIdentityW(pRasEapUserIdentity : Win32cr::NetworkManagement::Rras::RASEAPUSERIDENTITYW*) : Void

    # :nodoc:
    fun RasFreeEapUserIdentityA(pRasEapUserIdentity : Win32cr::NetworkManagement::Rras::RASEAPUSERIDENTITYA*) : Void

    # :nodoc:
    fun RasDeleteSubEntryA(pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, dwSubentryId : UInt32) : UInt32

    # :nodoc:
    fun RasDeleteSubEntryW(pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, dwSubEntryId : UInt32) : UInt32

    # :nodoc:
    fun RasUpdateConnection(hrasconn : Win32cr::NetworkManagement::Rras::HRASCONN, lprasupdateconn : Win32cr::NetworkManagement::Rras::RASUPDATECONN*) : UInt32

    # :nodoc:
    fun RasGetProjectionInfoEx(hrasconn : Win32cr::NetworkManagement::Rras::HRASCONN, pRasProjection : Win32cr::NetworkManagement::Rras::RAS_PROJECTION_INFO*, lpdwSize : UInt32*) : UInt32

    # :nodoc:
    fun RasPhonebookDlgA(lpszPhonebook : Win32cr::Foundation::PSTR, lpszEntry : Win32cr::Foundation::PSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASPBDLGA*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun RasPhonebookDlgW(lpszPhonebook : Win32cr::Foundation::PWSTR, lpszEntry : Win32cr::Foundation::PWSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASPBDLGW*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun RasEntryDlgA(lpszPhonebook : Win32cr::Foundation::PSTR, lpszEntry : Win32cr::Foundation::PSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASENTRYDLGA*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun RasEntryDlgW(lpszPhonebook : Win32cr::Foundation::PWSTR, lpszEntry : Win32cr::Foundation::PWSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASENTRYDLGW*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun RasDialDlgA(lpszPhonebook : Win32cr::Foundation::PSTR, lpszEntry : Win32cr::Foundation::PSTR, lpszPhoneNumber : Win32cr::Foundation::PSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASDIALDLG*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun RasDialDlgW(lpszPhonebook : Win32cr::Foundation::PWSTR, lpszEntry : Win32cr::Foundation::PWSTR, lpszPhoneNumber : Win32cr::Foundation::PWSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASDIALDLG*) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun MprAdminConnectionEnumEx(hRasServer : LibC::IntPtrT, pObjectHeader : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER*, dwPreferedMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, ppRasConn : Win32cr::NetworkManagement::Rras::RAS_CONNECTION_EX**, lpdwResumeHandle : UInt32*) : UInt32

    # :nodoc:
    fun MprAdminConnectionGetInfoEx(hRasServer : LibC::IntPtrT, hRasConnection : Win32cr::Foundation::HANDLE, pRasConnection : Win32cr::NetworkManagement::Rras::RAS_CONNECTION_EX*) : UInt32

    # :nodoc:
    fun MprAdminServerGetInfoEx(hMprServer : LibC::IntPtrT, pServerInfo : Win32cr::NetworkManagement::Rras::MPR_SERVER_EX1*) : UInt32

    # :nodoc:
    fun MprAdminServerSetInfoEx(hMprServer : LibC::IntPtrT, pServerInfo : Win32cr::NetworkManagement::Rras::MPR_SERVER_SET_CONFIG_EX1*) : UInt32

    # :nodoc:
    fun MprConfigServerGetInfoEx(hMprConfig : Win32cr::Foundation::HANDLE, pServerInfo : Win32cr::NetworkManagement::Rras::MPR_SERVER_EX1*) : UInt32

    # :nodoc:
    fun MprConfigServerSetInfoEx(hMprConfig : Win32cr::Foundation::HANDLE, pSetServerConfig : Win32cr::NetworkManagement::Rras::MPR_SERVER_SET_CONFIG_EX1*) : UInt32

    # :nodoc:
    fun MprAdminUpdateConnection(hRasServer : LibC::IntPtrT, hRasConnection : Win32cr::Foundation::HANDLE, pRasUpdateConnection : Win32cr::NetworkManagement::Rras::RAS_UPDATE_CONNECTION*) : UInt32

    # :nodoc:
    fun MprAdminIsServiceInitialized(lpwsServerName : Win32cr::Foundation::PWSTR, fIsServiceInitialized : Win32cr::Foundation::BOOL*) : UInt32

    # :nodoc:
    fun MprAdminInterfaceSetCustomInfoEx(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, pCustomInfo : Win32cr::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2*) : UInt32

    # :nodoc:
    fun MprAdminInterfaceGetCustomInfoEx(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, pCustomInfo : Win32cr::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2*) : UInt32

    # :nodoc:
    fun MprConfigInterfaceGetCustomInfoEx(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, pCustomInfo : Win32cr::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2*) : UInt32

    # :nodoc:
    fun MprConfigInterfaceSetCustomInfoEx(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, pCustomInfo : Win32cr::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2*) : UInt32

    # :nodoc:
    fun MprAdminConnectionEnum(hRasServer : LibC::IntPtrT, dwLevel : UInt32, lplpbBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32

    # :nodoc:
    fun MprAdminPortEnum(hRasServer : LibC::IntPtrT, dwLevel : UInt32, hRasConnection : Win32cr::Foundation::HANDLE, lplpbBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32

    # :nodoc:
    fun MprAdminConnectionGetInfo(hRasServer : LibC::IntPtrT, dwLevel : UInt32, hRasConnection : Win32cr::Foundation::HANDLE, lplpbBuffer : UInt8**) : UInt32

    # :nodoc:
    fun MprAdminPortGetInfo(hRasServer : LibC::IntPtrT, dwLevel : UInt32, hPort : Win32cr::Foundation::HANDLE, lplpbBuffer : UInt8**) : UInt32

    # :nodoc:
    fun MprAdminConnectionClearStats(hRasServer : LibC::IntPtrT, hRasConnection : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun MprAdminPortClearStats(hRasServer : LibC::IntPtrT, hPort : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun MprAdminPortReset(hRasServer : LibC::IntPtrT, hPort : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun MprAdminPortDisconnect(hRasServer : LibC::IntPtrT, hPort : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun MprAdminConnectionRemoveQuarantine(hRasServer : Win32cr::Foundation::HANDLE, hRasConnection : Win32cr::Foundation::HANDLE, fIsIpAddress : Win32cr::Foundation::BOOL) : UInt32

    # :nodoc:
    fun MprAdminUserGetInfo(lpszServer : Win32cr::Foundation::PWSTR, lpszUser : Win32cr::Foundation::PWSTR, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    # :nodoc:
    fun MprAdminUserSetInfo(lpszServer : Win32cr::Foundation::PWSTR, lpszUser : Win32cr::Foundation::PWSTR, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    # :nodoc:
    fun MprAdminSendUserMessage(hMprServer : LibC::IntPtrT, hConnection : Win32cr::Foundation::HANDLE, lpwszMessage : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun MprAdminGetPDCServer(lpszDomain : Win32cr::Foundation::PWSTR, lpszServer : Win32cr::Foundation::PWSTR, lpszPDCServer : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun MprAdminIsServiceRunning(lpwsServerName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # :nodoc:
    fun MprAdminServerConnect(lpwsServerName : Win32cr::Foundation::PWSTR, phMprServer : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun MprAdminServerDisconnect(hMprServer : LibC::IntPtrT) : Void

    # :nodoc:
    fun MprAdminServerGetCredentials(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lplpbBuffer : UInt8**) : UInt32

    # :nodoc:
    fun MprAdminServerSetCredentials(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    # :nodoc:
    fun MprAdminBufferFree(pBuffer : Void*) : UInt32

    # :nodoc:
    fun MprAdminGetErrorString(dwError : UInt32, lplpwsErrorString : Win32cr::Foundation::PWSTR*) : UInt32

    # :nodoc:
    fun MprAdminServerGetInfo(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lplpbBuffer : UInt8**) : UInt32

    # :nodoc:
    fun MprAdminServerSetInfo(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    # :nodoc:
    fun MprAdminEstablishDomainRasServer(pszDomain : Win32cr::Foundation::PWSTR, pszMachine : Win32cr::Foundation::PWSTR, bEnable : Win32cr::Foundation::BOOL) : UInt32

    # :nodoc:
    fun MprAdminIsDomainRasServer(pszDomain : Win32cr::Foundation::PWSTR, pszMachine : Win32cr::Foundation::PWSTR, pbIsRasServer : Win32cr::Foundation::BOOL*) : UInt32

    # :nodoc:
    fun MprAdminTransportCreate(hMprServer : LibC::IntPtrT, dwTransportId : UInt32, lpwsTransportName : Win32cr::Foundation::PWSTR, pGlobalInfo : UInt8*, dwGlobalInfoSize : UInt32, pClientInterfaceInfo : UInt8*, dwClientInterfaceInfoSize : UInt32, lpwsDLLPath : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun MprAdminTransportSetInfo(hMprServer : LibC::IntPtrT, dwTransportId : UInt32, pGlobalInfo : UInt8*, dwGlobalInfoSize : UInt32, pClientInterfaceInfo : UInt8*, dwClientInterfaceInfoSize : UInt32) : UInt32

    # :nodoc:
    fun MprAdminTransportGetInfo(hMprServer : LibC::IntPtrT, dwTransportId : UInt32, ppGlobalInfo : UInt8**, lpdwGlobalInfoSize : UInt32*, ppClientInterfaceInfo : UInt8**, lpdwClientInterfaceInfoSize : UInt32*) : UInt32

    # :nodoc:
    fun MprAdminDeviceEnum(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lplpbBuffer : UInt8**, lpdwTotalEntries : UInt32*) : UInt32

    # :nodoc:
    fun MprAdminInterfaceGetHandle(hMprServer : LibC::IntPtrT, lpwsInterfaceName : Win32cr::Foundation::PWSTR, phInterface : Win32cr::Foundation::HANDLE*, fIncludeClientInterfaces : Win32cr::Foundation::BOOL) : UInt32

    # :nodoc:
    fun MprAdminInterfaceCreate(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lpbBuffer : UInt8*, phInterface : Win32cr::Foundation::HANDLE*) : UInt32

    # :nodoc:
    fun MprAdminInterfaceGetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpbBuffer : UInt8**) : UInt32

    # :nodoc:
    fun MprAdminInterfaceSetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    # :nodoc:
    fun MprAdminInterfaceDelete(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun MprAdminInterfaceDeviceGetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwIndex : UInt32, dwLevel : UInt32, lplpBuffer : UInt8**) : UInt32

    # :nodoc:
    fun MprAdminInterfaceDeviceSetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwIndex : UInt32, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    # :nodoc:
    fun MprAdminInterfaceTransportRemove(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32) : UInt32

    # :nodoc:
    fun MprAdminInterfaceTransportAdd(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, pInterfaceInfo : UInt8*, dwInterfaceInfoSize : UInt32) : UInt32

    # :nodoc:
    fun MprAdminInterfaceTransportGetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, ppInterfaceInfo : UInt8**, lpdwInterfaceInfoSize : UInt32*) : UInt32

    # :nodoc:
    fun MprAdminInterfaceTransportSetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, pInterfaceInfo : UInt8*, dwInterfaceInfoSize : UInt32) : UInt32

    # :nodoc:
    fun MprAdminInterfaceEnum(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lplpbBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32

    # :nodoc:
    fun MprAdminInterfaceSetCredentials(lpwsServer : Win32cr::Foundation::PWSTR, lpwsInterfaceName : Win32cr::Foundation::PWSTR, lpwsUserName : Win32cr::Foundation::PWSTR, lpwsDomainName : Win32cr::Foundation::PWSTR, lpwsPassword : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun MprAdminInterfaceGetCredentials(lpwsServer : Win32cr::Foundation::PWSTR, lpwsInterfaceName : Win32cr::Foundation::PWSTR, lpwsUserName : Win32cr::Foundation::PWSTR, lpwsPassword : Win32cr::Foundation::PWSTR, lpwsDomainName : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun MprAdminInterfaceSetCredentialsEx(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    # :nodoc:
    fun MprAdminInterfaceGetCredentialsEx(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpbBuffer : UInt8**) : UInt32

    # :nodoc:
    fun MprAdminInterfaceConnect(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, hEvent : Win32cr::Foundation::HANDLE, fSynchronous : Win32cr::Foundation::BOOL) : UInt32

    # :nodoc:
    fun MprAdminInterfaceDisconnect(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun MprAdminInterfaceUpdateRoutes(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwProtocolId : UInt32, hEvent : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun MprAdminInterfaceQueryUpdateResult(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwProtocolId : UInt32, lpdwUpdateResult : UInt32*) : UInt32

    # :nodoc:
    fun MprAdminInterfaceUpdatePhonebookInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun MprAdminRegisterConnectionNotification(hMprServer : LibC::IntPtrT, hEventNotification : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun MprAdminDeregisterConnectionNotification(hMprServer : LibC::IntPtrT, hEventNotification : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun MprAdminMIBServerConnect(lpwsServerName : Win32cr::Foundation::PWSTR, phMibServer : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun MprAdminMIBServerDisconnect(hMibServer : LibC::IntPtrT) : Void

    # :nodoc:
    fun MprAdminMIBEntryCreate(hMibServer : LibC::IntPtrT, dwPid : UInt32, dwRoutingPid : UInt32, lpEntry : Void*, dwEntrySize : UInt32) : UInt32

    # :nodoc:
    fun MprAdminMIBEntryDelete(hMibServer : LibC::IntPtrT, dwProtocolId : UInt32, dwRoutingPid : UInt32, lpEntry : Void*, dwEntrySize : UInt32) : UInt32

    # :nodoc:
    fun MprAdminMIBEntrySet(hMibServer : LibC::IntPtrT, dwProtocolId : UInt32, dwRoutingPid : UInt32, lpEntry : Void*, dwEntrySize : UInt32) : UInt32

    # :nodoc:
    fun MprAdminMIBEntryGet(hMibServer : LibC::IntPtrT, dwProtocolId : UInt32, dwRoutingPid : UInt32, lpInEntry : Void*, dwInEntrySize : UInt32, lplpOutEntry : Void**, lpOutEntrySize : UInt32*) : UInt32

    # :nodoc:
    fun MprAdminMIBEntryGetFirst(hMibServer : LibC::IntPtrT, dwProtocolId : UInt32, dwRoutingPid : UInt32, lpInEntry : Void*, dwInEntrySize : UInt32, lplpOutEntry : Void**, lpOutEntrySize : UInt32*) : UInt32

    # :nodoc:
    fun MprAdminMIBEntryGetNext(hMibServer : LibC::IntPtrT, dwProtocolId : UInt32, dwRoutingPid : UInt32, lpInEntry : Void*, dwInEntrySize : UInt32, lplpOutEntry : Void**, lpOutEntrySize : UInt32*) : UInt32

    # :nodoc:
    fun MprAdminMIBBufferFree(pBuffer : Void*) : UInt32

    # :nodoc:
    fun MprConfigServerInstall(dwLevel : UInt32, pBuffer : Void*) : UInt32

    # :nodoc:
    fun MprConfigServerConnect(lpwsServerName : Win32cr::Foundation::PWSTR, phMprConfig : Win32cr::Foundation::HANDLE*) : UInt32

    # :nodoc:
    fun MprConfigServerDisconnect(hMprConfig : Win32cr::Foundation::HANDLE) : Void

    # :nodoc:
    fun MprConfigServerRefresh(hMprConfig : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun MprConfigBufferFree(pBuffer : Void*) : UInt32

    # :nodoc:
    fun MprConfigServerGetInfo(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpbBuffer : UInt8**) : UInt32

    # :nodoc:
    fun MprConfigServerSetInfo(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    # :nodoc:
    fun MprConfigServerBackup(hMprConfig : Win32cr::Foundation::HANDLE, lpwsPath : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun MprConfigServerRestore(hMprConfig : Win32cr::Foundation::HANDLE, lpwsPath : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun MprConfigTransportCreate(hMprConfig : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, lpwsTransportName : Win32cr::Foundation::PWSTR, pGlobalInfo : UInt8*, dwGlobalInfoSize : UInt32, pClientInterfaceInfo : UInt8*, dwClientInterfaceInfoSize : UInt32, lpwsDLLPath : Win32cr::Foundation::PWSTR, phRouterTransport : Win32cr::Foundation::HANDLE*) : UInt32

    # :nodoc:
    fun MprConfigTransportDelete(hMprConfig : Win32cr::Foundation::HANDLE, hRouterTransport : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun MprConfigTransportGetHandle(hMprConfig : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, phRouterTransport : Win32cr::Foundation::HANDLE*) : UInt32

    # :nodoc:
    fun MprConfigTransportSetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterTransport : Win32cr::Foundation::HANDLE, pGlobalInfo : UInt8*, dwGlobalInfoSize : UInt32, pClientInterfaceInfo : UInt8*, dwClientInterfaceInfoSize : UInt32, lpwsDLLPath : Win32cr::Foundation::PWSTR) : UInt32

    # :nodoc:
    fun MprConfigTransportGetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterTransport : Win32cr::Foundation::HANDLE, ppGlobalInfo : UInt8**, lpdwGlobalInfoSize : UInt32*, ppClientInterfaceInfo : UInt8**, lpdwClientInterfaceInfoSize : UInt32*, lplpwsDLLPath : Win32cr::Foundation::PWSTR*) : UInt32

    # :nodoc:
    fun MprConfigTransportEnum(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32

    # :nodoc:
    fun MprConfigInterfaceCreate(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lpbBuffer : UInt8*, phRouterInterface : Win32cr::Foundation::HANDLE*) : UInt32

    # :nodoc:
    fun MprConfigInterfaceDelete(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun MprConfigInterfaceGetHandle(hMprConfig : Win32cr::Foundation::HANDLE, lpwsInterfaceName : Win32cr::Foundation::PWSTR, phRouterInterface : Win32cr::Foundation::HANDLE*) : UInt32

    # :nodoc:
    fun MprConfigInterfaceGetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpBuffer : UInt8**, lpdwBufferSize : UInt32*) : UInt32

    # :nodoc:
    fun MprConfigInterfaceSetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    # :nodoc:
    fun MprConfigInterfaceEnum(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32

    # :nodoc:
    fun MprConfigInterfaceTransportAdd(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, lpwsTransportName : Win32cr::Foundation::PWSTR, pInterfaceInfo : UInt8*, dwInterfaceInfoSize : UInt32, phRouterIfTransport : Win32cr::Foundation::HANDLE*) : UInt32

    # :nodoc:
    fun MprConfigInterfaceTransportRemove(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, hRouterIfTransport : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun MprConfigInterfaceTransportGetHandle(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, phRouterIfTransport : Win32cr::Foundation::HANDLE*) : UInt32

    # :nodoc:
    fun MprConfigInterfaceTransportGetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, hRouterIfTransport : Win32cr::Foundation::HANDLE, ppInterfaceInfo : UInt8**, lpdwInterfaceInfoSize : UInt32*) : UInt32

    # :nodoc:
    fun MprConfigInterfaceTransportSetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, hRouterIfTransport : Win32cr::Foundation::HANDLE, pInterfaceInfo : UInt8*, dwInterfaceInfoSize : UInt32) : UInt32

    # :nodoc:
    fun MprConfigInterfaceTransportEnum(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32

    # :nodoc:
    fun MprConfigGetFriendlyName(hMprConfig : Win32cr::Foundation::HANDLE, pszGuidName : Win32cr::Foundation::PWSTR, pszBuffer : Win32cr::Foundation::PWSTR, dwBufferSize : UInt32) : UInt32

    # :nodoc:
    fun MprConfigGetGuidName(hMprConfig : Win32cr::Foundation::HANDLE, pszFriendlyName : Win32cr::Foundation::PWSTR, pszBuffer : Win32cr::Foundation::PWSTR, dwBufferSize : UInt32) : UInt32

    # :nodoc:
    fun MprConfigFilterGetInfo(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, dwTransportId : UInt32, lpBuffer : UInt8*) : UInt32

    # :nodoc:
    fun MprConfigFilterSetInfo(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, dwTransportId : UInt32, lpBuffer : UInt8*) : UInt32

    # :nodoc:
    fun MprInfoCreate(dwVersion : UInt32, lplpNewHeader : Void**) : UInt32

    # :nodoc:
    fun MprInfoDelete(lpHeader : Void*) : UInt32

    # :nodoc:
    fun MprInfoRemoveAll(lpHeader : Void*, lplpNewHeader : Void**) : UInt32

    # :nodoc:
    fun MprInfoDuplicate(lpHeader : Void*, lplpNewHeader : Void**) : UInt32

    # :nodoc:
    fun MprInfoBlockAdd(lpHeader : Void*, dwInfoType : UInt32, dwItemSize : UInt32, dwItemCount : UInt32, lpItemData : UInt8*, lplpNewHeader : Void**) : UInt32

    # :nodoc:
    fun MprInfoBlockRemove(lpHeader : Void*, dwInfoType : UInt32, lplpNewHeader : Void**) : UInt32

    # :nodoc:
    fun MprInfoBlockSet(lpHeader : Void*, dwInfoType : UInt32, dwItemSize : UInt32, dwItemCount : UInt32, lpItemData : UInt8*, lplpNewHeader : Void**) : UInt32

    # :nodoc:
    fun MprInfoBlockFind(lpHeader : Void*, dwInfoType : UInt32, lpdwItemSize : UInt32*, lpdwItemCount : UInt32*, lplpItemData : UInt8**) : UInt32

    # :nodoc:
    fun MprInfoBlockQuerySize(lpHeader : Void*) : UInt32

    # :nodoc:
    fun MgmRegisterMProtocol(prpiInfo : Win32cr::NetworkManagement::Rras::ROUTING_PROTOCOL_CONFIG*, dwProtocolId : UInt32, dwComponentId : UInt32, phProtocol : Win32cr::Foundation::HANDLE*) : UInt32

    # :nodoc:
    fun MgmDeRegisterMProtocol(hProtocol : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun MgmTakeInterfaceOwnership(hProtocol : Win32cr::Foundation::HANDLE, dwIfIndex : UInt32, dwIfNextHopAddr : UInt32) : UInt32

    # :nodoc:
    fun MgmReleaseInterfaceOwnership(hProtocol : Win32cr::Foundation::HANDLE, dwIfIndex : UInt32, dwIfNextHopAddr : UInt32) : UInt32

    # :nodoc:
    fun MgmGetProtocolOnInterface(dwIfIndex : UInt32, dwIfNextHopAddr : UInt32, pdwIfProtocolId : UInt32*, pdwIfComponentId : UInt32*) : UInt32

    # :nodoc:
    fun MgmAddGroupMembershipEntry(hProtocol : Win32cr::Foundation::HANDLE, dwSourceAddr : UInt32, dwSourceMask : UInt32, dwGroupAddr : UInt32, dwGroupMask : UInt32, dwIfIndex : UInt32, dwIfNextHopIPAddr : UInt32, dwFlags : UInt32) : UInt32

    # :nodoc:
    fun MgmDeleteGroupMembershipEntry(hProtocol : Win32cr::Foundation::HANDLE, dwSourceAddr : UInt32, dwSourceMask : UInt32, dwGroupAddr : UInt32, dwGroupMask : UInt32, dwIfIndex : UInt32, dwIfNextHopIPAddr : UInt32, dwFlags : UInt32) : UInt32

    # :nodoc:
    fun MgmGetMfe(pimm : Win32cr::NetworkManagement::IpHelper::MIB_IPMCAST_MFE*, pdwBufferSize : UInt32*, pbBuffer : UInt8*) : UInt32

    # :nodoc:
    fun MgmGetFirstMfe(pdwBufferSize : UInt32*, pbBuffer : UInt8*, pdwNumEntries : UInt32*) : UInt32

    # :nodoc:
    fun MgmGetNextMfe(pimmStart : Win32cr::NetworkManagement::IpHelper::MIB_IPMCAST_MFE*, pdwBufferSize : UInt32*, pbBuffer : UInt8*, pdwNumEntries : UInt32*) : UInt32

    # :nodoc:
    fun MgmGetMfeStats(pimm : Win32cr::NetworkManagement::IpHelper::MIB_IPMCAST_MFE*, pdwBufferSize : UInt32*, pbBuffer : UInt8*, dwFlags : UInt32) : UInt32

    # :nodoc:
    fun MgmGetFirstMfeStats(pdwBufferSize : UInt32*, pbBuffer : UInt8*, pdwNumEntries : UInt32*, dwFlags : UInt32) : UInt32

    # :nodoc:
    fun MgmGetNextMfeStats(pimmStart : Win32cr::NetworkManagement::IpHelper::MIB_IPMCAST_MFE*, pdwBufferSize : UInt32*, pbBuffer : UInt8*, pdwNumEntries : UInt32*, dwFlags : UInt32) : UInt32

    # :nodoc:
    fun MgmGroupEnumerationStart(hProtocol : Win32cr::Foundation::HANDLE, metEnumType : Win32cr::NetworkManagement::Rras::MGM_ENUM_TYPES, phEnumHandle : Win32cr::Foundation::HANDLE*) : UInt32

    # :nodoc:
    fun MgmGroupEnumerationGetNext(hEnum : Win32cr::Foundation::HANDLE, pdwBufferSize : UInt32*, pbBuffer : UInt8*, pdwNumEntries : UInt32*) : UInt32

    # :nodoc:
    fun MgmGroupEnumerationEnd(hEnum : Win32cr::Foundation::HANDLE) : UInt32

    # :nodoc:
    fun RtmConvertNetAddressToIpv6AddressAndLength(pNetAddress : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, pAddress : Win32cr::Networking::WinSock::IN6_ADDR*, pLength : UInt32*, dwAddressSize : UInt32) : UInt32

    # :nodoc:
    fun RtmConvertIpv6AddressAndLengthToNetAddress(pNetAddress : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, address : Win32cr::Networking::WinSock::IN6_ADDR, dwLength : UInt32, dwAddressSize : UInt32) : UInt32

    # :nodoc:
    fun RtmRegisterEntity(rtm_entity_info : Win32cr::NetworkManagement::Rras::RTM_ENTITY_INFO*, export_methods : Win32cr::NetworkManagement::Rras::RTM_ENTITY_EXPORT_METHODS*, event_callback : Win32cr::NetworkManagement::Rras::RTM_EVENT_CALLBACK, reserve_opaque_pointer : Win32cr::Foundation::BOOL, rtm_reg_profile : Win32cr::NetworkManagement::Rras::RTM_REGN_PROFILE*, rtm_reg_handle : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmDeregisterEntity(rtm_reg_handle : LibC::IntPtrT) : UInt32

    # :nodoc:
    fun RtmGetRegisteredEntities(rtm_reg_handle : LibC::IntPtrT, num_entities : UInt32*, entity_handles : LibC::IntPtrT*, entity_infos : Win32cr::NetworkManagement::Rras::RTM_ENTITY_INFO*) : UInt32

    # :nodoc:
    fun RtmReleaseEntities(rtm_reg_handle : LibC::IntPtrT, num_entities : UInt32, entity_handles : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmLockDestination(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, exclusive : Win32cr::Foundation::BOOL, lock_dest : Win32cr::Foundation::BOOL) : UInt32

    # :nodoc:
    fun RtmGetOpaqueInformationPointer(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, opaque_info_pointer : Void**) : UInt32

    # :nodoc:
    fun RtmGetEntityMethods(rtm_reg_handle : LibC::IntPtrT, entity_handle : LibC::IntPtrT, num_methods : UInt32*, expt_methods : Win32cr::NetworkManagement::Rras::RTM_ENTITY_EXPORT_METHOD*) : UInt32

    # :nodoc:
    fun RtmInvokeMethod(rtm_reg_handle : LibC::IntPtrT, entity_handle : LibC::IntPtrT, input : Win32cr::NetworkManagement::Rras::RTM_ENTITY_METHOD_INPUT*, output_size : UInt32*, output : Win32cr::NetworkManagement::Rras::RTM_ENTITY_METHOD_OUTPUT*) : UInt32

    # :nodoc:
    fun RtmBlockMethods(rtm_reg_handle : LibC::IntPtrT, target_handle : Win32cr::Foundation::HANDLE, target_type : UInt8, blocking_flag : UInt32) : UInt32

    # :nodoc:
    fun RtmGetEntityInfo(rtm_reg_handle : LibC::IntPtrT, entity_handle : LibC::IntPtrT, entity_info : Win32cr::NetworkManagement::Rras::RTM_ENTITY_INFO*) : UInt32

    # :nodoc:
    fun RtmGetDestInfo(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, protocol_id : UInt32, target_views : UInt32, dest_info : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    # :nodoc:
    fun RtmGetRouteInfo(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, route_info : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO*, dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*) : UInt32

    # :nodoc:
    fun RtmGetNextHopInfo(rtm_reg_handle : LibC::IntPtrT, next_hop_handle : LibC::IntPtrT, next_hop_info : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO*) : UInt32

    # :nodoc:
    fun RtmReleaseEntityInfo(rtm_reg_handle : LibC::IntPtrT, entity_info : Win32cr::NetworkManagement::Rras::RTM_ENTITY_INFO*) : UInt32

    # :nodoc:
    fun RtmReleaseDestInfo(rtm_reg_handle : LibC::IntPtrT, dest_info : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    # :nodoc:
    fun RtmReleaseRouteInfo(rtm_reg_handle : LibC::IntPtrT, route_info : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO*) : UInt32

    # :nodoc:
    fun RtmReleaseNextHopInfo(rtm_reg_handle : LibC::IntPtrT, next_hop_info : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO*) : UInt32

    # :nodoc:
    fun RtmAddRouteToDest(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT*, dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, route_info : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO*, time_to_live : UInt32, route_list_handle : LibC::IntPtrT, notify_type : UInt32, notify_handle : LibC::IntPtrT, change_flags : UInt32*) : UInt32

    # :nodoc:
    fun RtmDeleteRouteToDest(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, change_flags : UInt32*) : UInt32

    # :nodoc:
    fun RtmHoldDestination(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, target_views : UInt32, hold_time : UInt32) : UInt32

    # :nodoc:
    fun RtmGetRoutePointer(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, route_pointer : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO**) : UInt32

    # :nodoc:
    fun RtmLockRoute(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, exclusive : Win32cr::Foundation::BOOL, lock_route : Win32cr::Foundation::BOOL, route_pointer : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO**) : UInt32

    # :nodoc:
    fun RtmUpdateAndUnlockRoute(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, time_to_live : UInt32, route_list_handle : LibC::IntPtrT, notify_type : UInt32, notify_handle : LibC::IntPtrT, change_flags : UInt32*) : UInt32

    # :nodoc:
    fun RtmGetExactMatchDestination(rtm_reg_handle : LibC::IntPtrT, dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, protocol_id : UInt32, target_views : UInt32, dest_info : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    # :nodoc:
    fun RtmGetMostSpecificDestination(rtm_reg_handle : LibC::IntPtrT, dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, protocol_id : UInt32, target_views : UInt32, dest_info : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    # :nodoc:
    fun RtmGetLessSpecificDestination(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, protocol_id : UInt32, target_views : UInt32, dest_info : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    # :nodoc:
    fun RtmGetExactMatchRoute(rtm_reg_handle : LibC::IntPtrT, dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, matching_flags : UInt32, route_info : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO*, interface_index : UInt32, target_views : UInt32, route_handle : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmIsBestRoute(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, best_in_views : UInt32*) : UInt32

    # :nodoc:
    fun RtmAddNextHop(rtm_reg_handle : LibC::IntPtrT, next_hop_info : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO*, next_hop_handle : LibC::IntPtrT*, change_flags : UInt32*) : UInt32

    # :nodoc:
    fun RtmFindNextHop(rtm_reg_handle : LibC::IntPtrT, next_hop_info : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO*, next_hop_handle : LibC::IntPtrT*, next_hop_pointer : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO**) : UInt32

    # :nodoc:
    fun RtmDeleteNextHop(rtm_reg_handle : LibC::IntPtrT, next_hop_handle : LibC::IntPtrT, next_hop_info : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO*) : UInt32

    # :nodoc:
    fun RtmGetNextHopPointer(rtm_reg_handle : LibC::IntPtrT, next_hop_handle : LibC::IntPtrT, next_hop_pointer : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO**) : UInt32

    # :nodoc:
    fun RtmLockNextHop(rtm_reg_handle : LibC::IntPtrT, next_hop_handle : LibC::IntPtrT, exclusive : Win32cr::Foundation::BOOL, lock_next_hop : Win32cr::Foundation::BOOL, next_hop_pointer : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO**) : UInt32

    # :nodoc:
    fun RtmCreateDestEnum(rtm_reg_handle : LibC::IntPtrT, target_views : UInt32, enum_flags : UInt32, net_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, protocol_id : UInt32, rtm_enum_handle : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmGetEnumDests(rtm_reg_handle : LibC::IntPtrT, enum_handle : LibC::IntPtrT, num_dests : UInt32*, dest_infos : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    # :nodoc:
    fun RtmReleaseDests(rtm_reg_handle : LibC::IntPtrT, num_dests : UInt32, dest_infos : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    # :nodoc:
    fun RtmCreateRouteEnum(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, target_views : UInt32, enum_flags : UInt32, start_dest : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, matching_flags : UInt32, criteria_route : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO*, criteria_interface : UInt32, rtm_enum_handle : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmGetEnumRoutes(rtm_reg_handle : LibC::IntPtrT, enum_handle : LibC::IntPtrT, num_routes : UInt32*, route_handles : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmReleaseRoutes(rtm_reg_handle : LibC::IntPtrT, num_routes : UInt32, route_handles : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmCreateNextHopEnum(rtm_reg_handle : LibC::IntPtrT, enum_flags : UInt32, net_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, rtm_enum_handle : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmGetEnumNextHops(rtm_reg_handle : LibC::IntPtrT, enum_handle : LibC::IntPtrT, num_next_hops : UInt32*, next_hop_handles : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmReleaseNextHops(rtm_reg_handle : LibC::IntPtrT, num_next_hops : UInt32, next_hop_handles : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmDeleteEnumHandle(rtm_reg_handle : LibC::IntPtrT, enum_handle : LibC::IntPtrT) : UInt32

    # :nodoc:
    fun RtmRegisterForChangeNotification(rtm_reg_handle : LibC::IntPtrT, target_views : UInt32, notify_flags : UInt32, notify_context : Void*, notify_handle : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmGetChangedDests(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, num_dests : UInt32*, changed_dests : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    # :nodoc:
    fun RtmReleaseChangedDests(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, num_dests : UInt32, changed_dests : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    # :nodoc:
    fun RtmIgnoreChangedDests(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, num_dests : UInt32, changed_dests : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmGetChangeStatus(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, change_status : Win32cr::Foundation::BOOL*) : UInt32

    # :nodoc:
    fun RtmMarkDestForChangeNotification(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, mark_dest : Win32cr::Foundation::BOOL) : UInt32

    # :nodoc:
    fun RtmIsMarkedForChangeNotification(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, dest_marked : Win32cr::Foundation::BOOL*) : UInt32

    # :nodoc:
    fun RtmDeregisterFromChangeNotification(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT) : UInt32

    # :nodoc:
    fun RtmCreateRouteList(rtm_reg_handle : LibC::IntPtrT, route_list_handle : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmInsertInRouteList(rtm_reg_handle : LibC::IntPtrT, route_list_handle : LibC::IntPtrT, num_routes : UInt32, route_handles : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmCreateRouteListEnum(rtm_reg_handle : LibC::IntPtrT, route_list_handle : LibC::IntPtrT, rtm_enum_handle : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmGetListEnumRoutes(rtm_reg_handle : LibC::IntPtrT, enum_handle : LibC::IntPtrT, num_routes : UInt32*, route_handles : LibC::IntPtrT*) : UInt32

    # :nodoc:
    fun RtmDeleteRouteList(rtm_reg_handle : LibC::IntPtrT, route_list_handle : LibC::IntPtrT) : UInt32

    # :nodoc:
    fun RtmReferenceHandles(rtm_reg_handle : LibC::IntPtrT, num_handles : UInt32, rtm_handles : Win32cr::Foundation::HANDLE*) : UInt32

  end
end