require "./../networking/win_sock.cr"
require "./../foundation.cr"
require "./../security/cryptography.cr"
require "./ip_helper.cr"

module Win32cr::NetworkManagement::Rras
  alias HRASCONN = LibC::IntPtrT
  alias RASDIALFUNC = Proc(UInt32, Win32cr::NetworkManagement::Rras::RASCONNSTATE, UInt32, Void)*

  alias RASDIALFUNC1 = Proc(Win32cr::NetworkManagement::Rras::HRASCONN, UInt32, Win32cr::NetworkManagement::Rras::RASCONNSTATE, UInt32, UInt32, Void)*

  alias RASDIALFUNC2 = Proc(LibC::UIntPtrT, UInt32, Win32cr::NetworkManagement::Rras::HRASCONN, UInt32, Win32cr::NetworkManagement::Rras::RASCONNSTATE, UInt32, UInt32, UInt32)*

  alias ORASADFUNC = Proc(Win32cr::Foundation::HWND, Win32cr::Foundation::PSTR, UInt32, UInt32*, Win32cr::Foundation::BOOL)*

  alias RASADFUNCA = Proc(Win32cr::Foundation::PSTR, Win32cr::Foundation::PSTR, Win32cr::NetworkManagement::Rras::RASADPARAMS*, UInt32*, Win32cr::Foundation::BOOL)*

  alias RASADFUNCW = Proc(Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::NetworkManagement::Rras::RASADPARAMS*, UInt32*, Win32cr::Foundation::BOOL)*

  alias PFNRASGETBUFFER = Proc(UInt8**, UInt32*, UInt32)*

  alias PFNRASFREEBUFFER = Proc(UInt8*, UInt32)*

  alias PFNRASSENDBUFFER = Proc(Win32cr::Foundation::HANDLE, UInt8*, UInt32, UInt32)*

  alias PFNRASRECEIVEBUFFER = Proc(Win32cr::Foundation::HANDLE, UInt8*, UInt32*, UInt32, Win32cr::Foundation::HANDLE, UInt32)*

  alias PFNRASRETRIEVEBUFFER = Proc(Win32cr::Foundation::HANDLE, UInt8*, UInt32*, UInt32)*

  alias RasCustomScriptExecuteFn = Proc(Win32cr::Foundation::HANDLE, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::NetworkManagement::Rras::PFNRASGETBUFFER, Win32cr::NetworkManagement::Rras::PFNRASFREEBUFFER, Win32cr::NetworkManagement::Rras::PFNRASSENDBUFFER, Win32cr::NetworkManagement::Rras::PFNRASRECEIVEBUFFER, Win32cr::NetworkManagement::Rras::PFNRASRETRIEVEBUFFER, Win32cr::Foundation::HWND, Win32cr::NetworkManagement::Rras::RASDIALPARAMSA*, Void*, UInt32)*

  alias PFNRASSETCOMMSETTINGS = Proc(Win32cr::Foundation::HANDLE, Win32cr::NetworkManagement::Rras::RASCOMMSETTINGS*, Void*, UInt32)*

  alias RasCustomHangUpFn = Proc(Win32cr::NetworkManagement::Rras::HRASCONN, UInt32)*

  alias RasCustomDialFn = Proc(Win32cr::Foundation::HINSTANCE, Win32cr::NetworkManagement::Rras::RASDIALEXTENSIONS*, Win32cr::Foundation::PWSTR, Win32cr::NetworkManagement::Rras::RASDIALPARAMSA*, UInt32, Void*, Win32cr::NetworkManagement::Rras::HRASCONN*, UInt32, UInt32)*

  alias RasCustomDeleteEntryNotifyFn = Proc(Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, UInt32)*

  alias RASPBDLGFUNCW = Proc(LibC::UIntPtrT, UInt32, Win32cr::Foundation::PWSTR, Void*, Void)*

  alias RASPBDLGFUNCA = Proc(LibC::UIntPtrT, UInt32, Win32cr::Foundation::PSTR, Void*, Void)*

  alias RasCustomDialDlgFn = Proc(Win32cr::Foundation::HINSTANCE, UInt32, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::NetworkManagement::Rras::RASDIALDLG*, Void*, Win32cr::Foundation::BOOL)*

  alias RasCustomEntryDlgFn = Proc(Win32cr::Foundation::HINSTANCE, Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::NetworkManagement::Rras::RASENTRYDLGA*, UInt32, Win32cr::Foundation::BOOL)*

  alias PMPRADMINGETIPADDRESSFORUSER = Proc(Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32*, Win32cr::Foundation::BOOL*, UInt32)*

  alias PMPRADMINRELEASEIPADRESS = Proc(Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32*, Void)*

  alias PMPRADMINGETIPV6ADDRESSFORUSER = Proc(Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Networking::WinSock::IN6_ADDR*, Win32cr::Foundation::BOOL*, UInt32)*

  alias PMPRADMINRELEASEIPV6ADDRESSFORUSER = Proc(Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, Win32cr::Networking::WinSock::IN6_ADDR*, Void)*

  alias PMPRADMINACCEPTNEWCONNECTION = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_0*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_1*, Win32cr::Foundation::BOOL)*

  alias PMPRADMINACCEPTNEWCONNECTION2 = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_0*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_1*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_2*, Win32cr::Foundation::BOOL)*

  alias PMPRADMINACCEPTNEWCONNECTION3 = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_0*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_1*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_2*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_3*, Win32cr::Foundation::BOOL)*

  alias PMPRADMINACCEPTNEWLINK = Proc(Win32cr::NetworkManagement::Rras::RAS_PORT_0*, Win32cr::NetworkManagement::Rras::RAS_PORT_1*, Win32cr::Foundation::BOOL)*

  alias PMPRADMINCONNECTIONHANGUPNOTIFICATION = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_0*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_1*, Void)*

  alias PMPRADMINCONNECTIONHANGUPNOTIFICATION2 = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_0*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_1*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_2*, Void)*

  alias PMPRADMINCONNECTIONHANGUPNOTIFICATION3 = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_0*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_1*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_2*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_3, Void)*

  alias PMPRADMINLINKHANGUPNOTIFICATION = Proc(Win32cr::NetworkManagement::Rras::RAS_PORT_0*, Win32cr::NetworkManagement::Rras::RAS_PORT_1*, Void)*

  alias PMPRADMINTERMINATEDLL = Proc(UInt32)*

  alias PMPRADMINACCEPTREAUTHENTICATION = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_0*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_1*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_2*, Win32cr::NetworkManagement::Rras::RAS_CONNECTION_3*, Win32cr::Foundation::BOOL)*

  alias PMPRADMINACCEPTNEWCONNECTIONEX = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_EX*, Win32cr::Foundation::BOOL)*

  alias PMPRADMINACCEPTREAUTHENTICATIONEX = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_EX*, Win32cr::Foundation::BOOL)*

  alias PMPRADMINACCEPTTUNNELENDPOINTCHANGEEX = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_EX*, Win32cr::Foundation::BOOL)*

  alias PMPRADMINCONNECTIONHANGUPNOTIFICATIONEX = Proc(Win32cr::NetworkManagement::Rras::RAS_CONNECTION_EX*, Void)*

  alias PMPRADMINRASVALIDATEPREAUTHENTICATEDCONNECTIONEX = Proc(Win32cr::NetworkManagement::Rras::AUTH_VALIDATION_EX*, UInt32)*

  alias RASSECURITYPROC = Proc(UInt32)*

  alias PMGM_RPF_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32*, UInt32*, UInt32*, UInt32, UInt8*, UInt8*, UInt32)*

  alias PMGM_CREATION_ALERT_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, Win32cr::NetworkManagement::Rras::MGM_IF_ENTRY*, UInt32)*

  alias PMGM_PRUNE_ALERT_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, Win32cr::Foundation::BOOL, UInt32*, UInt32)*

  alias PMGM_JOIN_ALERT_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, Win32cr::Foundation::BOOL, UInt32)*

  alias PMGM_WRONG_IF_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32, UInt8*, UInt32)*

  alias PMGM_LOCAL_JOIN_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, UInt32)*

  alias PMGM_LOCAL_LEAVE_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, UInt32)*

  alias PMGM_DISABLE_IGMP_CALLBACK = Proc(UInt32, UInt32, UInt32)*

  alias PMGM_ENABLE_IGMP_CALLBACK = Proc(UInt32, UInt32, UInt32)*

  alias RTM_EVENT_CALLBACK = Proc(LibC::IntPtrT, Win32cr::NetworkManagement::Rras::RTM_EVENT_TYPE, Void*, Void*, UInt32)*

  alias RTM_ENTITY_EXPORT_METHOD = Proc(LibC::IntPtrT, LibC::IntPtrT, Win32cr::NetworkManagement::Rras::RTM_ENTITY_METHOD_INPUT*, Win32cr::NetworkManagement::Rras::RTM_ENTITY_METHOD_OUTPUT*, Void)*

  RASNAP_ProbationTime = 1_u32
  RASTUNNELENDPOINT_UNKNOWN = 0_u32
  RASTUNNELENDPOINT_IPv4 = 1_u32
  RASTUNNELENDPOINT_IPv6 = 2_u32
  RAS_MaxDeviceType = 16_u32
  RAS_MaxPhoneNumber = 128_u32
  RAS_MaxIpAddress = 15_u32
  RAS_MaxIpxAddress = 21_u32
  RAS_MaxEntryName = 256_u32
  RAS_MaxDeviceName = 128_u32
  RAS_MaxCallbackNumber = 128_u32
  RAS_MaxAreaCode = 10_u32
  RAS_MaxPadType = 32_u32
  RAS_MaxX25Address = 200_u32
  RAS_MaxFacilities = 200_u32
  RAS_MaxUserData = 200_u32
  RAS_MaxReplyMessage = 1024_u32
  RAS_MaxDnsSuffix = 256_u32
  RASCF_AllUsers = 1_u32
  RASCF_GlobalCreds = 2_u32
  RASCF_OwnerKnown = 4_u32
  RASCF_OwnerMatch = 8_u32
  RAS_MaxIDSize = 256_u32
  RASCS_PAUSED = 4096_u32
  RASCS_DONE = 8192_u32
  RASCSS_DONE = 8192_u32
  RDEOPT_UsePrefixSuffix = 1_u32
  RDEOPT_PausedStates = 2_u32
  RDEOPT_IgnoreModemSpeaker = 4_u32
  RDEOPT_SetModemSpeaker = 8_u32
  RDEOPT_IgnoreSoftwareCompression = 16_u32
  RDEOPT_SetSoftwareCompression = 32_u32
  RDEOPT_DisableConnectedUI = 64_u32
  RDEOPT_DisableReconnectUI = 128_u32
  RDEOPT_DisableReconnect = 256_u32
  RDEOPT_NoUser = 512_u32
  RDEOPT_PauseOnScript = 1024_u32
  RDEOPT_Router = 2048_u32
  RDEOPT_CustomDial = 4096_u32
  RDEOPT_UseCustomScripting = 8192_u32
  RDEOPT_InvokeAutoTriggerCredentialUI = 16384_u32
  RDEOPT_EapInfoCryptInCapable = 32768_u32
  REN_User = 0_u32
  REN_AllUsers = 1_u32
  RASIPO_VJ = 1_u32
  RASLCPO_PFC = 1_u32
  RASLCPO_ACFC = 2_u32
  RASLCPO_SSHF = 4_u32
  RASLCPO_DES_56 = 8_u32
  RASLCPO_3_DES = 16_u32
  RASLCPO_AES_128 = 32_u32
  RASLCPO_AES_256 = 64_u32
  RASLCPO_AES_192 = 128_u32
  RASLCPO_GCM_AES_128 = 256_u32
  RASLCPO_GCM_AES_192 = 512_u32
  RASLCPO_GCM_AES_256 = 1024_u32
  RASCCPCA_MPPC = 6_u32
  RASCCPCA_STAC = 5_u32
  RASCCPO_Compression = 1_u32
  RASCCPO_HistoryLess = 2_u32
  RASCCPO_Encryption56bit = 16_u32
  RASCCPO_Encryption40bit = 32_u32
  RASCCPO_Encryption128bit = 64_u32
  RASIKEv2_AUTH_MACHINECERTIFICATES = 1_u32
  RASIKEv2_AUTH_EAP = 2_u32
  RASIKEv2_AUTH_PSK = 3_u32
  RASDIALEVENT = "RasDialEvent"
  WM_RASDIALEVENT = 52429_u32
  ET_None = 0_u32
  ET_Require = 1_u32
  ET_RequireMax = 2_u32
  ET_Optional = 3_u32
  VS_Default = 0_u32
  VS_PptpOnly = 1_u32
  VS_PptpFirst = 2_u32
  VS_L2tpOnly = 3_u32
  VS_L2tpFirst = 4_u32
  VS_SstpOnly = 5_u32
  VS_SstpFirst = 6_u32
  VS_Ikev2Only = 7_u32
  VS_Ikev2First = 8_u32
  VS_GREOnly = 9_u32
  VS_PptpSstp = 12_u32
  VS_L2tpSstp = 13_u32
  VS_Ikev2Sstp = 14_u32
  VS_ProtocolList = 15_u32
  RASEO_UseCountryAndAreaCodes = 1_u32
  RASEO_SpecificIpAddr = 2_u32
  RASEO_SpecificNameServers = 4_u32
  RASEO_IpHeaderCompression = 8_u32
  RASEO_RemoteDefaultGateway = 16_u32
  RASEO_DisableLcpExtensions = 32_u32
  RASEO_TerminalBeforeDial = 64_u32
  RASEO_TerminalAfterDial = 128_u32
  RASEO_ModemLights = 256_u32
  RASEO_SwCompression = 512_u32
  RASEO_RequireEncryptedPw = 1024_u32
  RASEO_RequireMsEncryptedPw = 2048_u32
  RASEO_RequireDataEncryption = 4096_u32
  RASEO_NetworkLogon = 8192_u32
  RASEO_UseLogonCredentials = 16384_u32
  RASEO_PromoteAlternates = 32768_u32
  RASEO_SecureLocalFiles = 65536_u32
  RASEO_RequireEAP = 131072_u32
  RASEO_RequirePAP = 262144_u32
  RASEO_RequireSPAP = 524288_u32
  RASEO_Custom = 1048576_u32
  RASEO_PreviewPhoneNumber = 2097152_u32
  RASEO_SharedPhoneNumbers = 8388608_u32
  RASEO_PreviewUserPw = 16777216_u32
  RASEO_PreviewDomain = 33554432_u32
  RASEO_ShowDialingProgress = 67108864_u32
  RASEO_RequireCHAP = 134217728_u32
  RASEO_RequireMsCHAP = 268435456_u32
  RASEO_RequireMsCHAP2 = 536870912_u32
  RASEO_RequireW95MSCHAP = 1073741824_u32
  RASEO_CustomScript = 2147483648_u32
  RASEO2_SecureFileAndPrint = 1_u32
  RASEO2_SecureClientForMSNet = 2_u32
  RASEO2_DontNegotiateMultilink = 4_u32
  RASEO2_DontUseRasCredentials = 8_u32
  RASEO2_UsePreSharedKey = 16_u32
  RASEO2_Internet = 32_u32
  RASEO2_DisableNbtOverIP = 64_u32
  RASEO2_UseGlobalDeviceSettings = 128_u32
  RASEO2_ReconnectIfDropped = 256_u32
  RASEO2_SharePhoneNumbers = 512_u32
  RASEO2_SecureRoutingCompartment = 1024_u32
  RASEO2_UseTypicalSettings = 2048_u32
  RASEO2_IPv6SpecificNameServers = 4096_u32
  RASEO2_IPv6RemoteDefaultGateway = 8192_u32
  RASEO2_RegisterIpWithDNS = 16384_u32
  RASEO2_UseDNSSuffixForRegistration = 32768_u32
  RASEO2_IPv4ExplicitMetric = 65536_u32
  RASEO2_IPv6ExplicitMetric = 131072_u32
  RASEO2_DisableIKENameEkuCheck = 262144_u32
  RASEO2_DisableClassBasedStaticRoute = 524288_u32
  RASEO2_SpecificIPv6Addr = 1048576_u32
  RASEO2_DisableMobility = 2097152_u32
  RASEO2_RequireMachineCertificates = 4194304_u32
  RASEO2_UsePreSharedKeyForIkev2Initiator = 8388608_u32
  RASEO2_UsePreSharedKeyForIkev2Responder = 16777216_u32
  RASEO2_CacheCredentials = 33554432_u32
  RASEO2_AutoTriggerCapable = 67108864_u32
  RASEO2_IsThirdPartyProfile = 134217728_u32
  RASEO2_AuthTypeIsOtp = 268435456_u32
  RASEO2_IsAlwaysOn = 536870912_u32
  RASEO2_IsPrivateNetwork = 1073741824_u32
  RASEO2_PlumbIKEv2TSAsRoutes = 2147483648_u32
  RASNP_NetBEUI = 1_u32
  RASNP_Ipx = 2_u32
  RASNP_Ip = 4_u32
  RASNP_Ipv6 = 8_u32
  RASFP_Ppp = 1_u32
  RASFP_Slip = 2_u32
  RASFP_Ras = 4_u32
  RASDT_Modem = "modem"
  RASDT_Isdn = "isdn"
  RASDT_X25 = "x25"
  RASDT_Vpn = "vpn"
  RASDT_Pad = "pad"
  RASDT_Generic = "GENERIC"
  RASDT_Serial = "SERIAL"
  RASDT_FrameRelay = "FRAMERELAY"
  RASDT_Atm = "ATM"
  RASDT_Sonet = "SONET"
  RASDT_SW56 = "SW56"
  RASDT_Irda = "IRDA"
  RASDT_Parallel = "PARALLEL"
  RASDT_PPPoE = "PPPoE"
  RASET_Phone = 1_u32
  RASET_Vpn = 2_u32
  RASET_Direct = 3_u32
  RASET_Internet = 4_u32
  RASET_Broadband = 5_u32
  RASCN_Connection = 1_u32
  RASCN_Disconnection = 2_u32
  RASCN_BandwidthAdded = 4_u32
  RASCN_BandwidthRemoved = 8_u32
  RASCN_Dormant = 16_u32
  RASCN_ReConnection = 32_u32
  RASCN_EPDGPacketArrival = 64_u32
  RASIDS_Disabled = 4294967295_u32
  RASIDS_UseGlobalValue = 0_u32
  RASADFLG_PositionDlg = 1_u32
  RASCM_UserName = 1_u32
  RASCM_Password = 2_u32
  RASCM_Domain = 4_u32
  RASCM_DefaultCreds = 8_u32
  RASCM_PreSharedKey = 16_u32
  RASCM_ServerPreSharedKey = 32_u32
  RASCM_DDMPreSharedKey = 64_u32
  RASADP_DisableConnectionQuery = 0_u32
  RASADP_LoginSessionDisable = 1_u32
  RASADP_SavedAddressesLimit = 2_u32
  RASADP_FailedConnectionTimeout = 3_u32
  RASADP_ConnectionQueryTimeout = 4_u32
  RASEAPF_NonInteractive = 2_u32
  RASEAPF_Logon = 4_u32
  RASEAPF_Preview = 8_u32
  RCD_SingleUser = 0_u32
  RCD_AllUsers = 1_u32
  RCD_Eap = 2_u32
  RCD_Logon = 4_u32
  RASPBDEVENT_AddEntry = 1_u32
  RASPBDEVENT_EditEntry = 2_u32
  RASPBDEVENT_RemoveEntry = 3_u32
  RASPBDEVENT_DialEntry = 4_u32
  RASPBDEVENT_EditGlobals = 5_u32
  RASPBDEVENT_NoUser = 6_u32
  RASPBDEVENT_NoUserEdit = 7_u32
  RASNOUSER_SmartCard = 1_u32
  RASPBDFLAG_PositionDlg = 1_u32
  RASPBDFLAG_ForceCloseOnDial = 2_u32
  RASPBDFLAG_NoUser = 16_u32
  RASPBDFLAG_UpdateDefaults = 2147483648_u32
  RASEDFLAG_PositionDlg = 1_u32
  RASEDFLAG_NewEntry = 2_u32
  RASEDFLAG_CloneEntry = 4_u32
  RASEDFLAG_NoRename = 8_u32
  RASEDFLAG_ShellOwned = 1073741824_u32
  RASEDFLAG_NewPhoneEntry = 16_u32
  RASEDFLAG_NewTunnelEntry = 32_u32
  RASEDFLAG_NewDirectEntry = 64_u32
  RASEDFLAG_NewBroadbandEntry = 128_u32
  RASEDFLAG_InternetEntry = 256_u32
  RASEDFLAG_NAT = 512_u32
  RASEDFLAG_IncomingConnection = 1024_u32
  RASDDFLAG_PositionDlg = 1_u32
  RASDDFLAG_NoPrompt = 2_u32
  RASDDFLAG_AoacRedial = 4_u32
  RASDDFLAG_LinkFailure = 2147483648_u32
  RRAS_SERVICE_NAME = "RemoteAccess"
  PID_IPX = 43_u32
  PID_IP = 33_u32
  PID_IPV6 = 87_u32
  PID_NBF = 63_u32
  PID_ATALK = 41_u32
  MPR_INTERFACE_OUT_OF_RESOURCES = 1_u32
  MPR_INTERFACE_ADMIN_DISABLED = 2_u32
  MPR_INTERFACE_CONNECTION_FAILURE = 4_u32
  MPR_INTERFACE_SERVICE_PAUSED = 8_u32
  MPR_INTERFACE_DIALOUT_HOURS_RESTRICTION = 16_u32
  MPR_INTERFACE_NO_MEDIA_SENSE = 32_u32
  MPR_INTERFACE_NO_DEVICE = 64_u32
  MPR_MaxDeviceType = 16_u32
  MPR_MaxPhoneNumber = 128_u32
  MPR_MaxIpAddress = 15_u32
  MPR_MaxIpxAddress = 21_u32
  MPR_MaxEntryName = 256_u32
  MPR_MaxDeviceName = 128_u32
  MPR_MaxCallbackNumber = 128_u32
  MPR_MaxAreaCode = 10_u32
  MPR_MaxPadType = 32_u32
  MPR_MaxX25Address = 200_u32
  MPR_MaxFacilities = 200_u32
  MPR_MaxUserData = 200_u32
  MPRIO_SpecificIpAddr = 2_u32
  MPRIO_SpecificNameServers = 4_u32
  MPRIO_IpHeaderCompression = 8_u32
  MPRIO_RemoteDefaultGateway = 16_u32
  MPRIO_DisableLcpExtensions = 32_u32
  MPRIO_SwCompression = 512_u32
  MPRIO_RequireEncryptedPw = 1024_u32
  MPRIO_RequireMsEncryptedPw = 2048_u32
  MPRIO_RequireDataEncryption = 4096_u32
  MPRIO_NetworkLogon = 8192_u32
  MPRIO_PromoteAlternates = 32768_u32
  MPRIO_SecureLocalFiles = 65536_u32
  MPRIO_RequireEAP = 131072_u32
  MPRIO_RequirePAP = 262144_u32
  MPRIO_RequireSPAP = 524288_u32
  MPRIO_SharedPhoneNumbers = 8388608_u32
  MPRIO_RequireCHAP = 134217728_u32
  MPRIO_RequireMsCHAP = 268435456_u32
  MPRIO_RequireMsCHAP2 = 536870912_u32
  MPRIO_IpSecPreSharedKey = 2147483648_u32
  MPRIO_RequireMachineCertificates = 16777216_u32
  MPRIO_UsePreSharedKeyForIkev2Initiator = 33554432_u32
  MPRIO_UsePreSharedKeyForIkev2Responder = 67108864_u32
  MPRNP_Ipx = 2_u32
  MPRNP_Ip = 4_u32
  MPRNP_Ipv6 = 8_u32
  MPRDT_Modem = "modem"
  MPRDT_Isdn = "isdn"
  MPRDT_X25 = "x25"
  MPRDT_Vpn = "vpn"
  MPRDT_Pad = "pad"
  MPRDT_Generic = "GENERIC"
  MPRDT_Serial = "SERIAL"
  MPRDT_FrameRelay = "FRAMERELAY"
  MPRDT_Atm = "ATM"
  MPRDT_Sonet = "SONET"
  MPRDT_SW56 = "SW56"
  MPRDT_Irda = "IRDA"
  MPRDT_Parallel = "PARALLEL"
  MPRET_Phone = 1_u32
  MPRET_Vpn = 2_u32
  MPRET_Direct = 3_u32
  MPRIDS_Disabled = 4294967295_u32
  MPRIDS_UseGlobalValue = 0_u32
  MPR_VS_Ikev2Only = 7_u32
  MPR_VS_Ikev2First = 8_u32
  MPR_ENABLE_RAS_ON_DEVICE = 1_u32
  MPR_ENABLE_ROUTING_ON_DEVICE = 2_u32
  IPADDRESSLEN = 15_u32
  IPXADDRESSLEN = 22_u32
  ATADDRESSLEN = 32_u32
  MAXIPADRESSLEN = 64_u32
  PPP_IPCP_VJ = 1_u32
  PPP_CCP_COMPRESSION = 1_u32
  PPP_CCP_ENCRYPTION40BITOLD = 16_u32
  PPP_CCP_ENCRYPTION40BIT = 32_u32
  PPP_CCP_ENCRYPTION128BIT = 64_u32
  PPP_CCP_ENCRYPTION56BIT = 128_u32
  PPP_CCP_HISTORYLESS = 16777216_u32
  PPP_LCP_MULTILINK_FRAMING = 1_u32
  PPP_LCP_PFC = 2_u32
  PPP_LCP_ACFC = 4_u32
  PPP_LCP_SSHF = 8_u32
  PPP_LCP_DES_56 = 16_u32
  PPP_LCP_3_DES = 32_u32
  PPP_LCP_AES_128 = 64_u32
  PPP_LCP_AES_256 = 128_u32
  PPP_LCP_AES_192 = 256_u32
  PPP_LCP_GCM_AES_128 = 512_u32
  PPP_LCP_GCM_AES_192 = 1024_u32
  PPP_LCP_GCM_AES_256 = 2048_u32
  RAS_FLAGS_RAS_CONNECTION = 4_u32
  RASPRIV_NoCallback = 1_u32
  RASPRIV_AdminSetCallback = 2_u32
  RASPRIV_CallerSetCallback = 4_u32
  RASPRIV_DialinPrivilege = 8_u32
  RASPRIV2_DialinPolicy = 1_u32
  MPRAPI_IKEV2_AUTH_USING_CERT = 1_u32
  MPRAPI_IKEV2_AUTH_USING_EAP = 2_u32
  MPRAPI_PPP_PROJECTION_INFO_TYPE = 1_u32
  MPRAPI_IKEV2_PROJECTION_INFO_TYPE = 2_u32
  MPRAPI_RAS_CONNECTION_OBJECT_REVISION_1 = 1_u32
  MPRAPI_MPR_IF_CUSTOM_CONFIG_OBJECT_REVISION_1 = 1_u32
  MPRAPI_IF_CUSTOM_CONFIG_FOR_IKEV2 = 1_u32
  MPRAPI_MPR_IF_CUSTOM_CONFIG_OBJECT_REVISION_3 = 3_u32
  MPRAPI_MPR_IF_CUSTOM_CONFIG_OBJECT_REVISION_2 = 2_u32
  MPRAPI_IKEV2_SET_TUNNEL_CONFIG_PARAMS = 1_u32
  MPRAPI_L2TP_SET_TUNNEL_CONFIG_PARAMS = 1_u32
  MAX_SSTP_HASH_SIZE = 32_u32
  MPRAPI_MPR_SERVER_OBJECT_REVISION_1 = 1_u32
  MPRAPI_MPR_SERVER_OBJECT_REVISION_2 = 2_u32
  MPRAPI_MPR_SERVER_OBJECT_REVISION_3 = 3_u32
  MPRAPI_MPR_SERVER_OBJECT_REVISION_4 = 4_u32
  MPRAPI_MPR_SERVER_OBJECT_REVISION_5 = 5_u32
  MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_1 = 1_u32
  MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_2 = 2_u32
  MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_3 = 3_u32
  MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_4 = 4_u32
  MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_5 = 5_u32
  MPRAPI_SET_CONFIG_PROTOCOL_FOR_PPTP = 1_u32
  MPRAPI_SET_CONFIG_PROTOCOL_FOR_L2TP = 2_u32
  MPRAPI_SET_CONFIG_PROTOCOL_FOR_SSTP = 4_u32
  MPRAPI_SET_CONFIG_PROTOCOL_FOR_IKEV2 = 8_u32
  MPRAPI_SET_CONFIG_PROTOCOL_FOR_GRE = 16_u32
  ALLOW_NO_AUTH = 1_u32
  DO_NOT_ALLOW_NO_AUTH = 0_u32
  MPRAPI_RAS_UPDATE_CONNECTION_OBJECT_REVISION_1 = 1_u32
  MPRAPI_ADMIN_DLL_VERSION_1 = 1_u32
  MPRAPI_ADMIN_DLL_VERSION_2 = 2_u32
  MGM_JOIN_STATE_FLAG = 1_u32
  MGM_FORWARD_STATE_FLAG = 2_u32
  MGM_MFE_STATS_0 = 1_u32
  MGM_MFE_STATS_1 = 2_u32
  RTM_MAX_ADDRESS_SIZE = 16_u32
  RTM_MAX_VIEWS = 32_u32
  RTM_VIEW_ID_UCAST = 0_u32
  RTM_VIEW_ID_MCAST = 1_u32
  RTM_VIEW_MASK_SIZE = 32_u32
  RTM_VIEW_MASK_NONE = 0_u32
  RTM_VIEW_MASK_ANY = 0_u32
  RTM_VIEW_MASK_UCAST = 1_u32
  RTM_VIEW_MASK_MCAST = 2_u32
  RTM_VIEW_MASK_ALL = 4294967295_u32
  IPV6_ADDRESS_LEN_IN_BYTES = 16_u32
  RTM_DEST_FLAG_NATURAL_NET = 1_u32
  RTM_DEST_FLAG_FWD_ENGIN_ADD = 2_u32
  RTM_DEST_FLAG_DONT_FORWARD = 4_u32
  RTM_ROUTE_STATE_CREATED = 0_u32
  RTM_ROUTE_STATE_DELETING = 1_u32
  RTM_ROUTE_STATE_DELETED = 2_u32
  RTM_ROUTE_FLAGS_MARTIAN = 1_u32
  RTM_ROUTE_FLAGS_BLACKHOLE = 2_u32
  RTM_ROUTE_FLAGS_DISCARD = 4_u32
  RTM_ROUTE_FLAGS_INACTIVE = 8_u32
  RTM_ROUTE_FLAGS_LOCAL = 16_u32
  RTM_ROUTE_FLAGS_REMOTE = 32_u32
  RTM_ROUTE_FLAGS_MYSELF = 64_u32
  RTM_ROUTE_FLAGS_LOOPBACK = 128_u32
  RTM_ROUTE_FLAGS_MCAST = 256_u32
  RTM_ROUTE_FLAGS_LOCAL_MCAST = 512_u32
  RTM_ROUTE_FLAGS_LIMITED_BC = 1024_u32
  RTM_ROUTE_FLAGS_ZEROS_NETBC = 4096_u32
  RTM_ROUTE_FLAGS_ZEROS_SUBNETBC = 8192_u32
  RTM_ROUTE_FLAGS_ONES_NETBC = 16384_u32
  RTM_ROUTE_FLAGS_ONES_SUBNETBC = 32768_u32
  RTM_NEXTHOP_STATE_CREATED = 0_u32
  RTM_NEXTHOP_STATE_DELETED = 1_u32
  RTM_NEXTHOP_FLAGS_REMOTE = 1_u32
  RTM_NEXTHOP_FLAGS_DOWN = 2_u32
  METHOD_TYPE_ALL_METHODS = 4294967295_u32
  METHOD_RIP2_NEIGHBOUR_ADDR = 1_u32
  METHOD_RIP2_OUTBOUND_INTF = 2_u32
  METHOD_RIP2_ROUTE_TAG = 4_u32
  METHOD_RIP2_ROUTE_TIMESTAMP = 8_u32
  METHOD_BGP4_AS_PATH = 1_u32
  METHOD_BGP4_PEER_ID = 2_u32
  METHOD_BGP4_PA_ORIGIN = 4_u32
  METHOD_BGP4_NEXTHOP_ATTR = 8_u32
  RTM_RESUME_METHODS = 0_u32
  RTM_BLOCK_METHODS = 1_u32
  RTM_ROUTE_CHANGE_FIRST = 1_u32
  RTM_ROUTE_CHANGE_NEW = 2_u32
  RTM_ROUTE_CHANGE_BEST = 65536_u32
  RTM_NEXTHOP_CHANGE_NEW = 1_u32
  RTM_MATCH_NONE = 0_u32
  RTM_MATCH_OWNER = 1_u32
  RTM_MATCH_NEIGHBOUR = 2_u32
  RTM_MATCH_PREF = 4_u32
  RTM_MATCH_NEXTHOP = 8_u32
  RTM_MATCH_INTERFACE = 16_u32
  RTM_MATCH_FULL = 65535_u32
  RTM_ENUM_START = 0_u32
  RTM_ENUM_NEXT = 1_u32
  RTM_ENUM_RANGE = 2_u32
  RTM_ENUM_ALL_DESTS = 0_u32
  RTM_ENUM_OWN_DESTS = 16777216_u32
  RTM_ENUM_ALL_ROUTES = 0_u32
  RTM_ENUM_OWN_ROUTES = 65536_u32
  RTM_NUM_CHANGE_TYPES = 3_u32
  RTM_CHANGE_TYPE_ALL = 1_u32
  RTM_CHANGE_TYPE_BEST = 2_u32
  RTM_CHANGE_TYPE_FORWARDING = 4_u32
  RTM_NOTIFY_ONLY_MARKED_DESTS = 65536_u32
  RASBASE = 600_u32
  PENDING = 600_u32
  ERROR_INVALID_PORT_HANDLE = 601_u32
  ERROR_PORT_ALREADY_OPEN = 602_u32
  ERROR_BUFFER_TOO_SMALL = 603_u32
  ERROR_WRONG_INFO_SPECIFIED = 604_u32
  ERROR_CANNOT_SET_PORT_INFO = 605_u32
  ERROR_PORT_NOT_CONNECTED = 606_u32
  ERROR_EVENT_INVALID = 607_u32
  ERROR_DEVICE_DOES_NOT_EXIST = 608_u32
  ERROR_DEVICETYPE_DOES_NOT_EXIST = 609_u32
  ERROR_BUFFER_INVALID = 610_u32
  ERROR_ROUTE_NOT_AVAILABLE = 611_u32
  ERROR_ROUTE_NOT_ALLOCATED = 612_u32
  ERROR_INVALID_COMPRESSION_SPECIFIED = 613_u32
  ERROR_OUT_OF_BUFFERS = 614_u32
  ERROR_PORT_NOT_FOUND = 615_u32
  ERROR_ASYNC_REQUEST_PENDING = 616_u32
  ERROR_ALREADY_DISCONNECTING = 617_u32
  ERROR_PORT_NOT_OPEN = 618_u32
  ERROR_PORT_DISCONNECTED = 619_u32
  ERROR_NO_ENDPOINTS = 620_u32
  ERROR_CANNOT_OPEN_PHONEBOOK = 621_u32
  ERROR_CANNOT_LOAD_PHONEBOOK = 622_u32
  ERROR_CANNOT_FIND_PHONEBOOK_ENTRY = 623_u32
  ERROR_CANNOT_WRITE_PHONEBOOK = 624_u32
  ERROR_CORRUPT_PHONEBOOK = 625_u32
  ERROR_CANNOT_LOAD_STRING = 626_u32
  ERROR_KEY_NOT_FOUND = 627_u32
  ERROR_DISCONNECTION = 628_u32
  ERROR_REMOTE_DISCONNECTION = 629_u32
  ERROR_HARDWARE_FAILURE = 630_u32
  ERROR_USER_DISCONNECTION = 631_u32
  ERROR_INVALID_SIZE = 632_u32
  ERROR_PORT_NOT_AVAILABLE = 633_u32
  ERROR_CANNOT_PROJECT_CLIENT = 634_u32
  ERROR_UNKNOWN = 635_u32
  ERROR_WRONG_DEVICE_ATTACHED = 636_u32
  ERROR_BAD_STRING = 637_u32
  ERROR_REQUEST_TIMEOUT = 638_u32
  ERROR_CANNOT_GET_LANA = 639_u32
  ERROR_NETBIOS_ERROR = 640_u32
  ERROR_SERVER_OUT_OF_RESOURCES = 641_u32
  ERROR_NAME_EXISTS_ON_NET = 642_u32
  ERROR_SERVER_GENERAL_NET_FAILURE = 643_u32
  WARNING_MSG_ALIAS_NOT_ADDED = 644_u32
  ERROR_AUTH_INTERNAL = 645_u32
  ERROR_RESTRICTED_LOGON_HOURS = 646_u32
  ERROR_ACCT_DISABLED = 647_u32
  ERROR_PASSWD_EXPIRED = 648_u32
  ERROR_NO_DIALIN_PERMISSION = 649_u32
  ERROR_SERVER_NOT_RESPONDING = 650_u32
  ERROR_FROM_DEVICE = 651_u32
  ERROR_UNRECOGNIZED_RESPONSE = 652_u32
  ERROR_MACRO_NOT_FOUND = 653_u32
  ERROR_MACRO_NOT_DEFINED = 654_u32
  ERROR_MESSAGE_MACRO_NOT_FOUND = 655_u32
  ERROR_DEFAULTOFF_MACRO_NOT_FOUND = 656_u32
  ERROR_FILE_COULD_NOT_BE_OPENED = 657_u32
  ERROR_DEVICENAME_TOO_LONG = 658_u32
  ERROR_DEVICENAME_NOT_FOUND = 659_u32
  ERROR_NO_RESPONSES = 660_u32
  ERROR_NO_COMMAND_FOUND = 661_u32
  ERROR_WRONG_KEY_SPECIFIED = 662_u32
  ERROR_UNKNOWN_DEVICE_TYPE = 663_u32
  ERROR_ALLOCATING_MEMORY = 664_u32
  ERROR_PORT_NOT_CONFIGURED = 665_u32
  ERROR_DEVICE_NOT_READY = 666_u32
  ERROR_READING_INI_FILE = 667_u32
  ERROR_NO_CONNECTION = 668_u32
  ERROR_BAD_USAGE_IN_INI_FILE = 669_u32
  ERROR_READING_SECTIONNAME = 670_u32
  ERROR_READING_DEVICETYPE = 671_u32
  ERROR_READING_DEVICENAME = 672_u32
  ERROR_READING_USAGE = 673_u32
  ERROR_READING_MAXCONNECTBPS = 674_u32
  ERROR_READING_MAXCARRIERBPS = 675_u32
  ERROR_LINE_BUSY = 676_u32
  ERROR_VOICE_ANSWER = 677_u32
  ERROR_NO_ANSWER = 678_u32
  ERROR_NO_CARRIER = 679_u32
  ERROR_NO_DIALTONE = 680_u32
  ERROR_IN_COMMAND = 681_u32
  ERROR_WRITING_SECTIONNAME = 682_u32
  ERROR_WRITING_DEVICETYPE = 683_u32
  ERROR_WRITING_DEVICENAME = 684_u32
  ERROR_WRITING_MAXCONNECTBPS = 685_u32
  ERROR_WRITING_MAXCARRIERBPS = 686_u32
  ERROR_WRITING_USAGE = 687_u32
  ERROR_WRITING_DEFAULTOFF = 688_u32
  ERROR_READING_DEFAULTOFF = 689_u32
  ERROR_EMPTY_INI_FILE = 690_u32
  ERROR_AUTHENTICATION_FAILURE = 691_u32
  ERROR_PORT_OR_DEVICE = 692_u32
  ERROR_NOT_BINARY_MACRO = 693_u32
  ERROR_DCB_NOT_FOUND = 694_u32
  ERROR_STATE_MACHINES_NOT_STARTED = 695_u32
  ERROR_STATE_MACHINES_ALREADY_STARTED = 696_u32
  ERROR_PARTIAL_RESPONSE_LOOPING = 697_u32
  ERROR_UNKNOWN_RESPONSE_KEY = 698_u32
  ERROR_RECV_BUF_FULL = 699_u32
  ERROR_CMD_TOO_LONG = 700_u32
  ERROR_UNSUPPORTED_BPS = 701_u32
  ERROR_UNEXPECTED_RESPONSE = 702_u32
  ERROR_INTERACTIVE_MODE = 703_u32
  ERROR_BAD_CALLBACK_NUMBER = 704_u32
  ERROR_INVALID_AUTH_STATE = 705_u32
  ERROR_WRITING_INITBPS = 706_u32
  ERROR_X25_DIAGNOSTIC = 707_u32
  ERROR_ACCT_EXPIRED = 708_u32
  ERROR_CHANGING_PASSWORD = 709_u32
  ERROR_OVERRUN = 710_u32
  ERROR_RASMAN_CANNOT_INITIALIZE = 711_u32
  ERROR_BIPLEX_PORT_NOT_AVAILABLE = 712_u32
  ERROR_NO_ACTIVE_ISDN_LINES = 713_u32
  ERROR_NO_ISDN_CHANNELS_AVAILABLE = 714_u32
  ERROR_TOO_MANY_LINE_ERRORS = 715_u32
  ERROR_IP_CONFIGURATION = 716_u32
  ERROR_NO_IP_ADDRESSES = 717_u32
  ERROR_PPP_TIMEOUT = 718_u32
  ERROR_PPP_REMOTE_TERMINATED = 719_u32
  ERROR_PPP_NO_PROTOCOLS_CONFIGURED = 720_u32
  ERROR_PPP_NO_RESPONSE = 721_u32
  ERROR_PPP_INVALID_PACKET = 722_u32
  ERROR_PHONE_NUMBER_TOO_LONG = 723_u32
  ERROR_IPXCP_NO_DIALOUT_CONFIGURED = 724_u32
  ERROR_IPXCP_NO_DIALIN_CONFIGURED = 725_u32
  ERROR_IPXCP_DIALOUT_ALREADY_ACTIVE = 726_u32
  ERROR_ACCESSING_TCPCFGDLL = 727_u32
  ERROR_NO_IP_RAS_ADAPTER = 728_u32
  ERROR_SLIP_REQUIRES_IP = 729_u32
  ERROR_PROJECTION_NOT_COMPLETE = 730_u32
  ERROR_PROTOCOL_NOT_CONFIGURED = 731_u32
  ERROR_PPP_NOT_CONVERGING = 732_u32
  ERROR_PPP_CP_REJECTED = 733_u32
  ERROR_PPP_LCP_TERMINATED = 734_u32
  ERROR_PPP_REQUIRED_ADDRESS_REJECTED = 735_u32
  ERROR_PPP_NCP_TERMINATED = 736_u32
  ERROR_PPP_LOOPBACK_DETECTED = 737_u32
  ERROR_PPP_NO_ADDRESS_ASSIGNED = 738_u32
  ERROR_CANNOT_USE_LOGON_CREDENTIALS = 739_u32
  ERROR_TAPI_CONFIGURATION = 740_u32
  ERROR_NO_LOCAL_ENCRYPTION = 741_u32
  ERROR_NO_REMOTE_ENCRYPTION = 742_u32
  ERROR_REMOTE_REQUIRES_ENCRYPTION = 743_u32
  ERROR_IPXCP_NET_NUMBER_CONFLICT = 744_u32
  ERROR_INVALID_SMM = 745_u32
  ERROR_SMM_UNINITIALIZED = 746_u32
  ERROR_NO_MAC_FOR_PORT = 747_u32
  ERROR_SMM_TIMEOUT = 748_u32
  ERROR_BAD_PHONE_NUMBER = 749_u32
  ERROR_WRONG_MODULE = 750_u32
  ERROR_INVALID_CALLBACK_NUMBER = 751_u32
  ERROR_SCRIPT_SYNTAX = 752_u32
  ERROR_HANGUP_FAILED = 753_u32
  ERROR_BUNDLE_NOT_FOUND = 754_u32
  ERROR_CANNOT_DO_CUSTOMDIAL = 755_u32
  ERROR_DIAL_ALREADY_IN_PROGRESS = 756_u32
  ERROR_RASAUTO_CANNOT_INITIALIZE = 757_u32
  ERROR_CONNECTION_ALREADY_SHARED = 758_u32
  ERROR_SHARING_CHANGE_FAILED = 759_u32
  ERROR_SHARING_ROUTER_INSTALL = 760_u32
  ERROR_SHARE_CONNECTION_FAILED = 761_u32
  ERROR_SHARING_PRIVATE_INSTALL = 762_u32
  ERROR_CANNOT_SHARE_CONNECTION = 763_u32
  ERROR_NO_SMART_CARD_READER = 764_u32
  ERROR_SHARING_ADDRESS_EXISTS = 765_u32
  ERROR_NO_CERTIFICATE = 766_u32
  ERROR_SHARING_MULTIPLE_ADDRESSES = 767_u32
  ERROR_FAILED_TO_ENCRYPT = 768_u32
  ERROR_BAD_ADDRESS_SPECIFIED = 769_u32
  ERROR_CONNECTION_REJECT = 770_u32
  ERROR_CONGESTION = 771_u32
  ERROR_INCOMPATIBLE = 772_u32
  ERROR_NUMBERCHANGED = 773_u32
  ERROR_TEMPFAILURE = 774_u32
  ERROR_BLOCKED = 775_u32
  ERROR_DONOTDISTURB = 776_u32
  ERROR_OUTOFORDER = 777_u32
  ERROR_UNABLE_TO_AUTHENTICATE_SERVER = 778_u32
  ERROR_SMART_CARD_REQUIRED = 779_u32
  ERROR_INVALID_FUNCTION_FOR_ENTRY = 780_u32
  ERROR_CERT_FOR_ENCRYPTION_NOT_FOUND = 781_u32
  ERROR_SHARING_RRAS_CONFLICT = 782_u32
  ERROR_SHARING_NO_PRIVATE_LAN = 783_u32
  ERROR_NO_DIFF_USER_AT_LOGON = 784_u32
  ERROR_NO_REG_CERT_AT_LOGON = 785_u32
  ERROR_OAKLEY_NO_CERT = 786_u32
  ERROR_OAKLEY_AUTH_FAIL = 787_u32
  ERROR_OAKLEY_ATTRIB_FAIL = 788_u32
  ERROR_OAKLEY_GENERAL_PROCESSING = 789_u32
  ERROR_OAKLEY_NO_PEER_CERT = 790_u32
  ERROR_OAKLEY_NO_POLICY = 791_u32
  ERROR_OAKLEY_TIMED_OUT = 792_u32
  ERROR_OAKLEY_ERROR = 793_u32
  ERROR_UNKNOWN_FRAMED_PROTOCOL = 794_u32
  ERROR_WRONG_TUNNEL_TYPE = 795_u32
  ERROR_UNKNOWN_SERVICE_TYPE = 796_u32
  ERROR_CONNECTING_DEVICE_NOT_FOUND = 797_u32
  ERROR_NO_EAPTLS_CERTIFICATE = 798_u32
  ERROR_SHARING_HOST_ADDRESS_CONFLICT = 799_u32
  ERROR_AUTOMATIC_VPN_FAILED = 800_u32
  ERROR_VALIDATING_SERVER_CERT = 801_u32
  ERROR_READING_SCARD = 802_u32
  ERROR_INVALID_PEAP_COOKIE_CONFIG = 803_u32
  ERROR_INVALID_PEAP_COOKIE_USER = 804_u32
  ERROR_INVALID_MSCHAPV2_CONFIG = 805_u32
  ERROR_VPN_GRE_BLOCKED = 806_u32
  ERROR_VPN_DISCONNECT = 807_u32
  ERROR_VPN_REFUSED = 808_u32
  ERROR_VPN_TIMEOUT = 809_u32
  ERROR_VPN_BAD_CERT = 810_u32
  ERROR_VPN_BAD_PSK = 811_u32
  ERROR_SERVER_POLICY = 812_u32
  ERROR_BROADBAND_ACTIVE = 813_u32
  ERROR_BROADBAND_NO_NIC = 814_u32
  ERROR_BROADBAND_TIMEOUT = 815_u32
  ERROR_FEATURE_DEPRECATED = 816_u32
  ERROR_CANNOT_DELETE = 817_u32
  ERROR_RASQEC_RESOURCE_CREATION_FAILED = 818_u32
  ERROR_RASQEC_NAPAGENT_NOT_ENABLED = 819_u32
  ERROR_RASQEC_NAPAGENT_NOT_CONNECTED = 820_u32
  ERROR_RASQEC_CONN_DOESNOTEXIST = 821_u32
  ERROR_RASQEC_TIMEOUT = 822_u32
  ERROR_PEAP_CRYPTOBINDING_INVALID = 823_u32
  ERROR_PEAP_CRYPTOBINDING_NOTRECEIVED = 824_u32
  ERROR_INVALID_VPNSTRATEGY = 825_u32
  ERROR_EAPTLS_CACHE_CREDENTIALS_INVALID = 826_u32
  ERROR_IPSEC_SERVICE_STOPPED = 827_u32
  ERROR_IDLE_TIMEOUT = 828_u32
  ERROR_LINK_FAILURE = 829_u32
  ERROR_USER_LOGOFF = 830_u32
  ERROR_FAST_USER_SWITCH = 831_u32
  ERROR_HIBERNATION = 832_u32
  ERROR_SYSTEM_SUSPENDED = 833_u32
  ERROR_RASMAN_SERVICE_STOPPED = 834_u32
  ERROR_INVALID_SERVER_CERT = 835_u32
  ERROR_NOT_NAP_CAPABLE = 836_u32
  ERROR_INVALID_TUNNELID = 837_u32
  ERROR_UPDATECONNECTION_REQUEST_IN_PROCESS = 838_u32
  ERROR_PROTOCOL_ENGINE_DISABLED = 839_u32
  ERROR_INTERNAL_ADDRESS_FAILURE = 840_u32
  ERROR_FAILED_CP_REQUIRED = 841_u32
  ERROR_TS_UNACCEPTABLE = 842_u32
  ERROR_MOBIKE_DISABLED = 843_u32
  ERROR_CANNOT_INITIATE_MOBIKE_UPDATE = 844_u32
  ERROR_PEAP_SERVER_REJECTED_CLIENT_TLV = 845_u32
  ERROR_INVALID_PREFERENCES = 846_u32
  ERROR_EAPTLS_SCARD_CACHE_CREDENTIALS_INVALID = 847_u32
  ERROR_SSTP_COOKIE_SET_FAILURE = 848_u32
  ERROR_INVALID_PEAP_COOKIE_ATTRIBUTES = 849_u32
  ERROR_EAP_METHOD_NOT_INSTALLED = 850_u32
  ERROR_EAP_METHOD_DOES_NOT_SUPPORT_SSO = 851_u32
  ERROR_EAP_METHOD_OPERATION_NOT_SUPPORTED = 852_u32
  ERROR_EAP_USER_CERT_INVALID = 853_u32
  ERROR_EAP_USER_CERT_EXPIRED = 854_u32
  ERROR_EAP_USER_CERT_REVOKED = 855_u32
  ERROR_EAP_USER_CERT_OTHER_ERROR = 856_u32
  ERROR_EAP_SERVER_CERT_INVALID = 857_u32
  ERROR_EAP_SERVER_CERT_EXPIRED = 858_u32
  ERROR_EAP_SERVER_CERT_REVOKED = 859_u32
  ERROR_EAP_SERVER_CERT_OTHER_ERROR = 860_u32
  ERROR_EAP_USER_ROOT_CERT_NOT_FOUND = 861_u32
  ERROR_EAP_USER_ROOT_CERT_INVALID = 862_u32
  ERROR_EAP_USER_ROOT_CERT_EXPIRED = 863_u32
  ERROR_EAP_SERVER_ROOT_CERT_NOT_FOUND = 864_u32
  ERROR_EAP_SERVER_ROOT_CERT_INVALID = 865_u32
  ERROR_EAP_SERVER_ROOT_CERT_NAME_REQUIRED = 866_u32
  ERROR_PEAP_IDENTITY_MISMATCH = 867_u32
  ERROR_DNSNAME_NOT_RESOLVABLE = 868_u32
  ERROR_EAPTLS_PASSWD_INVALID = 869_u32
  ERROR_IKEV2_PSK_INTERFACE_ALREADY_EXISTS = 870_u32
  ERROR_INVALID_DESTINATION_IP = 871_u32
  ERROR_INVALID_INTERFACE_CONFIG = 872_u32
  ERROR_VPN_PLUGIN_GENERIC = 873_u32
  ERROR_SSO_CERT_MISSING = 874_u32
  ERROR_DEVICE_COMPLIANCE = 875_u32
  ERROR_PLUGIN_NOT_INSTALLED = 876_u32
  ERROR_ACTION_REQUIRED = 877_u32
  RASBASEEND = 877_u32

  enum MPR_INTERFACE_DIAL_MODE : UInt32
    MPRDM_DialFirst = 0_u32
    MPRDM_DialAll = 1_u32
    MPRDM_DialAsNeeded = 2_u32
  end
  enum RASENTRY_DIAL_MODE : UInt32
    RASEDM_DialAll = 1_u32
    RASEDM_DialAsNeeded = 2_u32
  end
  enum RAS_FLAGS : UInt32
    RAS_FLAGS_PPP_CONNECTION = 1_u32
    RAS_FLAGS_MESSENGER_PRESENT = 2_u32
    RAS_FLAGS_QUARANTINE_PRESENT = 8_u32
    RAS_FLAGS_ARAP_CONNECTION = 16_u32
    RAS_FLAGS_IKEV2_CONNECTION = 16_u32
    RAS_FLAGS_DORMANT = 32_u32
  end
  enum MPR_ET : UInt32
    MPR_ET_None = 0_u32
    MPR_ET_Require = 1_u32
    MPR_ET_RequireMax = 2_u32
    MPR_ET_Optional = 3_u32
  end
  enum RASPPP_PROJECTION_INFO_SERVER_AUTH_DATA : UInt32
    RASLCPAD_CHAP_MD5 = 5_u32
    RASLCPAD_CHAP_MS = 128_u32
    RASLCPAD_CHAP_MSV2 = 129_u32
  end
  enum PPP_LCP : UInt32
    PPP_LCP_PAP = 49187_u32
    PPP_LCP_CHAP = 49699_u32
    PPP_LCP_EAP = 49703_u32
    PPP_LCP_SPAP = 49191_u32
  end
  enum RASPPP_PROJECTION_INFO_SERVER_AUTH_PROTOCOL : UInt32
    RASLCPAP_PAP = 49187_u32
    RASLCPAP_SPAP = 49191_u32
    RASLCPAP_CHAP = 49699_u32
    RASLCPAP_EAP = 49703_u32
  end
  enum PPP_LCP_INFO_AUTH_DATA : UInt32
    PPP_LCP_CHAP_MD5 = 5_u32
    PPP_LCP_CHAP_MS = 128_u32
    PPP_LCP_CHAP_MSV2 = 129_u32
  end
  @[Flags]
  enum RASIKEV_PROJECTION_INFO_FLAGS : UInt32
    RASIKEv2_FLAGS_MOBIKESUPPORTED = 1_u32
    RASIKEv2_FLAGS_BEHIND_NAT = 2_u32
    RASIKEv2_FLAGS_SERVERBEHIND_NAT = 4_u32
  end
  enum MPR_VS : UInt32
    MPR_VS_Default = 0_u32
    MPR_VS_PptpOnly = 1_u32
    MPR_VS_PptpFirst = 2_u32
    MPR_VS_L2tpOnly = 3_u32
    MPR_VS_L2tpFirst = 4_u32
  end
  enum SECURITY_MESSAGE_MSG_ID : UInt32
    SECURITYMSG_SUCCESS = 1_u32
    SECURITYMSG_FAILURE = 2_u32
    SECURITYMSG_ERROR = 3_u32
  end
  enum RASAPIVERSION
    RASAPIVERSION_500 = 1_i32
    RASAPIVERSION_501 = 2_i32
    RASAPIVERSION_600 = 3_i32
    RASAPIVERSION_601 = 4_i32
  end
  enum RASCONNSTATE
    RASCS_OpenPort = 0_i32
    RASCS_PortOpened = 1_i32
    RASCS_ConnectDevice = 2_i32
    RASCS_DeviceConnected = 3_i32
    RASCS_AllDevicesConnected = 4_i32
    RASCS_Authenticate = 5_i32
    RASCS_AuthNotify = 6_i32
    RASCS_AuthRetry = 7_i32
    RASCS_AuthCallback = 8_i32
    RASCS_AuthChangePassword = 9_i32
    RASCS_AuthProject = 10_i32
    RASCS_AuthLinkSpeed = 11_i32
    RASCS_AuthAck = 12_i32
    RASCS_ReAuthenticate = 13_i32
    RASCS_Authenticated = 14_i32
    RASCS_PrepareForCallback = 15_i32
    RASCS_WaitForModemReset = 16_i32
    RASCS_WaitForCallback = 17_i32
    RASCS_Projected = 18_i32
    RASCS_StartAuthentication = 19_i32
    RASCS_CallbackComplete = 20_i32
    RASCS_LogonNetwork = 21_i32
    RASCS_SubEntryConnected = 22_i32
    RASCS_SubEntryDisconnected = 23_i32
    RASCS_ApplySettings = 24_i32
    RASCS_Interactive = 4096_i32
    RASCS_RetryAuthentication = 4097_i32
    RASCS_CallbackSetByCaller = 4098_i32
    RASCS_PasswordExpired = 4099_i32
    RASCS_InvokeEapUI = 4100_i32
    RASCS_Connected = 8192_i32
    RASCS_Disconnected = 8193_i32
  end
  enum RASCONNSUBSTATE
    RASCSS_None = 0_i32
    RASCSS_Dormant = 1_i32
    RASCSS_Reconnecting = 2_i32
    RASCSS_Reconnected = 8192_i32
  end
  enum RASPROJECTION
    RASP_Amb = 65536_i32
    RASP_PppNbf = 32831_i32
    RASP_PppIpx = 32811_i32
    RASP_PppIp = 32801_i32
    RASP_PppCcp = 33021_i32
    RASP_PppLcp = 49185_i32
    RASP_PppIpv6 = 32855_i32
  end
  enum RASPROJECTION_INFO_TYPE
    PROJECTION_INFO_TYPE_PPP = 1_i32
    PROJECTION_INFO_TYPE_IKEv2 = 2_i32
  end
  enum IKEV2_ID_PAYLOAD_TYPE
    IKEV2_ID_PAYLOAD_TYPE_INVALID = 0_i32
    IKEV2_ID_PAYLOAD_TYPE_IPV4_ADDR = 1_i32
    IKEV2_ID_PAYLOAD_TYPE_FQDN = 2_i32
    IKEV2_ID_PAYLOAD_TYPE_RFC822_ADDR = 3_i32
    IKEV2_ID_PAYLOAD_TYPE_RESERVED1 = 4_i32
    IKEV2_ID_PAYLOAD_TYPE_ID_IPV6_ADDR = 5_i32
    IKEV2_ID_PAYLOAD_TYPE_RESERVED2 = 6_i32
    IKEV2_ID_PAYLOAD_TYPE_RESERVED3 = 7_i32
    IKEV2_ID_PAYLOAD_TYPE_RESERVED4 = 8_i32
    IKEV2_ID_PAYLOAD_TYPE_DER_ASN1_DN = 9_i32
    IKEV2_ID_PAYLOAD_TYPE_DER_ASN1_GN = 10_i32
    IKEV2_ID_PAYLOAD_TYPE_KEY_ID = 11_i32
    IKEV2_ID_PAYLOAD_TYPE_MAX = 12_i32
  end
  enum ROUTER_INTERFACE_TYPE
    ROUTER_IF_TYPE_CLIENT = 0_i32
    ROUTER_IF_TYPE_HOME_ROUTER = 1_i32
    ROUTER_IF_TYPE_FULL_ROUTER = 2_i32
    ROUTER_IF_TYPE_DEDICATED = 3_i32
    ROUTER_IF_TYPE_INTERNAL = 4_i32
    ROUTER_IF_TYPE_LOOPBACK = 5_i32
    ROUTER_IF_TYPE_TUNNEL1 = 6_i32
    ROUTER_IF_TYPE_DIALOUT = 7_i32
    ROUTER_IF_TYPE_MAX = 8_i32
  end
  enum ROUTER_CONNECTION_STATE
    ROUTER_IF_STATE_UNREACHABLE = 0_i32
    ROUTER_IF_STATE_DISCONNECTED = 1_i32
    ROUTER_IF_STATE_CONNECTING = 2_i32
    ROUTER_IF_STATE_CONNECTED = 3_i32
  end
  enum RAS_PORT_CONDITION
    RAS_PORT_NON_OPERATIONAL = 0_i32
    RAS_PORT_DISCONNECTED = 1_i32
    RAS_PORT_CALLING_BACK = 2_i32
    RAS_PORT_LISTENING = 3_i32
    RAS_PORT_AUTHENTICATING = 4_i32
    RAS_PORT_AUTHENTICATED = 5_i32
    RAS_PORT_INITIALIZING = 6_i32
  end
  enum RAS_HARDWARE_CONDITION
    RAS_HARDWARE_OPERATIONAL = 0_i32
    RAS_HARDWARE_FAILURE = 1_i32
  end
  enum RAS_QUARANTINE_STATE
    RAS_QUAR_STATE_NORMAL = 0_i32
    RAS_QUAR_STATE_QUARANTINE = 1_i32
    RAS_QUAR_STATE_PROBATION = 2_i32
    RAS_QUAR_STATE_NOT_CAPABLE = 3_i32
  end
  enum MPRAPI_OBJECT_TYPE
    MPRAPI_OBJECT_TYPE_RAS_CONNECTION_OBJECT = 1_i32
    MPRAPI_OBJECT_TYPE_MPR_SERVER_OBJECT = 2_i32
    MPRAPI_OBJECT_TYPE_MPR_SERVER_SET_CONFIG_OBJECT = 3_i32
    MPRAPI_OBJECT_TYPE_AUTH_VALIDATION_OBJECT = 4_i32
    MPRAPI_OBJECT_TYPE_UPDATE_CONNECTION_OBJECT = 5_i32
    MPRAPI_OBJECT_TYPE_IF_CUSTOM_CONFIG_OBJECT = 6_i32
  end
  enum MPR_VPN_TS_TYPE
    MPR_VPN_TS_IPv4_ADDR_RANGE = 7_i32
    MPR_VPN_TS_IPv6_ADDR_RANGE = 8_i32
  end
  enum MGM_ENUM_TYPES
    ANY_SOURCE = 0_i32
    ALL_SOURCES = 1_i32
  end
  enum RTM_EVENT_TYPE
    RTM_ENTITY_REGISTERED = 0_i32
    RTM_ENTITY_DEREGISTERED = 1_i32
    RTM_ROUTE_EXPIRED = 2_i32
    RTM_CHANGE_NOTIFICATION = 3_i32
  end

  @[Extern]
  record RASIPADDR,
    a : UInt8,
    b : UInt8,
    c : UInt8,
    d : UInt8

  @[Extern]
  record RASTUNNELENDPOINT,
    dwType : UInt32,
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      ipv4 : Win32cr::Networking::WinSock::IN_ADDR,
      ipv6 : Win32cr::Networking::WinSock::IN6_ADDR

  end

  @[Extern]
  record RASCONNW,
    dwSize : UInt32,
    hrasconn : Win32cr::NetworkManagement::Rras::HRASCONN,
    szEntryName : UInt16[257],
    szDeviceType : UInt16[17],
    szDeviceName : UInt16[129],
    szPhonebook : UInt16[260],
    dwSubEntry : UInt32,
    guidEntry : LibC::GUID,
    dwFlags : UInt32,
    luid : Win32cr::Foundation::LUID,
    guidCorrelationId : LibC::GUID

  @[Extern]
  record RASCONNA,
    dwSize : UInt32,
    hrasconn : Win32cr::NetworkManagement::Rras::HRASCONN,
    szEntryName : Win32cr::Foundation::CHAR[257],
    szDeviceType : Win32cr::Foundation::CHAR[17],
    szDeviceName : Win32cr::Foundation::CHAR[129],
    szPhonebook : Win32cr::Foundation::CHAR[260],
    dwSubEntry : UInt32,
    guidEntry : LibC::GUID,
    dwFlags : UInt32,
    luid : Win32cr::Foundation::LUID,
    guidCorrelationId : LibC::GUID

  @[Extern]
  record RASCONNSTATUSW,
    dwSize : UInt32,
    rasconnstate : Win32cr::NetworkManagement::Rras::RASCONNSTATE,
    dwError : UInt32,
    szDeviceType : UInt16[17],
    szDeviceName : UInt16[129],
    szPhoneNumber : UInt16[129],
    localEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT,
    remoteEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT,
    rasconnsubstate : Win32cr::NetworkManagement::Rras::RASCONNSUBSTATE

  @[Extern]
  record RASCONNSTATUSA,
    dwSize : UInt32,
    rasconnstate : Win32cr::NetworkManagement::Rras::RASCONNSTATE,
    dwError : UInt32,
    szDeviceType : Win32cr::Foundation::CHAR[17],
    szDeviceName : Win32cr::Foundation::CHAR[129],
    szPhoneNumber : Win32cr::Foundation::CHAR[129],
    localEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT,
    remoteEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT,
    rasconnsubstate : Win32cr::NetworkManagement::Rras::RASCONNSUBSTATE

  @[Extern]
  record RASDIALPARAMSW,
    dwSize : UInt32,
    szEntryName : UInt16[257],
    szPhoneNumber : UInt16[129],
    szCallbackNumber : UInt16[129],
    szUserName : UInt16[257],
    szPassword : UInt16[257],
    szDomain : UInt16[16],
    dwSubEntry : UInt32,
    dwCallbackId : LibC::UIntPtrT,
    dwIfIndex : UInt32,
    szEncPassword : Win32cr::Foundation::PWSTR

  @[Extern]
  record RASDIALPARAMSA,
    dwSize : UInt32,
    szEntryName : Win32cr::Foundation::CHAR[257],
    szPhoneNumber : Win32cr::Foundation::CHAR[129],
    szCallbackNumber : Win32cr::Foundation::CHAR[129],
    szUserName : Win32cr::Foundation::CHAR[257],
    szPassword : Win32cr::Foundation::CHAR[257],
    szDomain : Win32cr::Foundation::CHAR[16],
    dwSubEntry : UInt32,
    dwCallbackId : LibC::UIntPtrT,
    dwIfIndex : UInt32,
    szEncPassword : Win32cr::Foundation::PSTR

  @[Extern]
  record RASEAPINFO,
    dwSizeofEapInfo : UInt32,
    pbEapInfo : UInt8*

  @[Extern]
  record RASDEVSPECIFICINFO,
    dwSize : UInt32,
    pbDevSpecificInfo : UInt8*

  @[Extern]
  record RASDIALEXTENSIONS,
    dwSize : UInt32,
    dwfOptions : UInt32,
    hwndParent : Win32cr::Foundation::HWND,
    reserved : LibC::UIntPtrT,
    reserved1 : LibC::UIntPtrT,
    ras_eap_info : Win32cr::NetworkManagement::Rras::RASEAPINFO,
    fSkipPppAuth : Win32cr::Foundation::BOOL,
    ras_dev_specific_info : Win32cr::NetworkManagement::Rras::RASDEVSPECIFICINFO

  @[Extern]
  record RASENTRYNAMEW,
    dwSize : UInt32,
    szEntryName : UInt16[257],
    dwFlags : UInt32,
    szPhonebookPath : UInt16[261]

  @[Extern]
  record RASENTRYNAMEA,
    dwSize : UInt32,
    szEntryName : Win32cr::Foundation::CHAR[257],
    dwFlags : UInt32,
    szPhonebookPath : Win32cr::Foundation::CHAR[261]

  @[Extern]
  record RASAMBW,
    dwSize : UInt32,
    dwError : UInt32,
    szNetBiosError : UInt16[17],
    bLana : UInt8

  @[Extern]
  record RASAMBA,
    dwSize : UInt32,
    dwError : UInt32,
    szNetBiosError : Win32cr::Foundation::CHAR[17],
    bLana : UInt8

  @[Extern]
  record RASPPPNBFW,
    dwSize : UInt32,
    dwError : UInt32,
    dwNetBiosError : UInt32,
    szNetBiosError : UInt16[17],
    szWorkstationName : UInt16[17],
    bLana : UInt8

  @[Extern]
  record RASPPPNBFA,
    dwSize : UInt32,
    dwError : UInt32,
    dwNetBiosError : UInt32,
    szNetBiosError : Win32cr::Foundation::CHAR[17],
    szWorkstationName : Win32cr::Foundation::CHAR[17],
    bLana : UInt8

  @[Extern]
  record RASIPXW,
    dwSize : UInt32,
    dwError : UInt32,
    szIpxAddress : UInt16[22]

  @[Extern]
  record RASPPPIPXA,
    dwSize : UInt32,
    dwError : UInt32,
    szIpxAddress : Win32cr::Foundation::CHAR[22]

  @[Extern]
  record RASPPPIPW,
    dwSize : UInt32,
    dwError : UInt32,
    szIpAddress : UInt16[16],
    szServerIpAddress : UInt16[16],
    dwOptions : UInt32,
    dwServerOptions : UInt32

  @[Extern]
  record RASPPPIPA,
    dwSize : UInt32,
    dwError : UInt32,
    szIpAddress : Win32cr::Foundation::CHAR[16],
    szServerIpAddress : Win32cr::Foundation::CHAR[16],
    dwOptions : UInt32,
    dwServerOptions : UInt32

  @[Extern]
  record RASPPPIPV6,
    dwSize : UInt32,
    dwError : UInt32,
    bLocalInterfaceIdentifier : UInt8[8],
    bPeerInterfaceIdentifier : UInt8[8],
    bLocalCompressionProtocol : UInt8[2],
    bPeerCompressionProtocol : UInt8[2]

  @[Extern]
  record RASPPPLCPW,
    dwSize : UInt32,
    fBundled : Win32cr::Foundation::BOOL,
    dwError : UInt32,
    dwAuthenticationProtocol : UInt32,
    dwAuthenticationData : UInt32,
    dwEapTypeId : UInt32,
    dwServerAuthenticationProtocol : UInt32,
    dwServerAuthenticationData : UInt32,
    dwServerEapTypeId : UInt32,
    fMultilink : Win32cr::Foundation::BOOL,
    dwTerminateReason : UInt32,
    dwServerTerminateReason : UInt32,
    szReplyMessage : UInt16[1024],
    dwOptions : UInt32,
    dwServerOptions : UInt32

  @[Extern]
  record RASPPPLCPA,
    dwSize : UInt32,
    fBundled : Win32cr::Foundation::BOOL,
    dwError : UInt32,
    dwAuthenticationProtocol : UInt32,
    dwAuthenticationData : UInt32,
    dwEapTypeId : UInt32,
    dwServerAuthenticationProtocol : UInt32,
    dwServerAuthenticationData : UInt32,
    dwServerEapTypeId : UInt32,
    fMultilink : Win32cr::Foundation::BOOL,
    dwTerminateReason : UInt32,
    dwServerTerminateReason : UInt32,
    szReplyMessage : Win32cr::Foundation::CHAR[1024],
    dwOptions : UInt32,
    dwServerOptions : UInt32

  @[Extern]
  record RASPPPCCP,
    dwSize : UInt32,
    dwError : UInt32,
    dwCompressionAlgorithm : UInt32,
    dwOptions : UInt32,
    dwServerCompressionAlgorithm : UInt32,
    dwServerOptions : UInt32

  @[Extern]
  record RASPPP_PROJECTION_INFO,
    dwIPv4NegotiationError : UInt32,
    ipv4Address : Win32cr::Networking::WinSock::IN_ADDR,
    ipv4ServerAddress : Win32cr::Networking::WinSock::IN_ADDR,
    dwIPv4Options : UInt32,
    dwIPv4ServerOptions : UInt32,
    dwIPv6NegotiationError : UInt32,
    bInterfaceIdentifier : UInt8[8],
    bServerInterfaceIdentifier : UInt8[8],
    fBundled : Win32cr::Foundation::BOOL,
    fMultilink : Win32cr::Foundation::BOOL,
    dwAuthenticationProtocol : Win32cr::NetworkManagement::Rras::RASPPP_PROJECTION_INFO_SERVER_AUTH_PROTOCOL,
    dwAuthenticationData : Win32cr::NetworkManagement::Rras::RASPPP_PROJECTION_INFO_SERVER_AUTH_DATA,
    dwServerAuthenticationProtocol : Win32cr::NetworkManagement::Rras::RASPPP_PROJECTION_INFO_SERVER_AUTH_PROTOCOL,
    dwServerAuthenticationData : Win32cr::NetworkManagement::Rras::RASPPP_PROJECTION_INFO_SERVER_AUTH_DATA,
    dwEapTypeId : UInt32,
    dwServerEapTypeId : UInt32,
    dwLcpOptions : UInt32,
    dwLcpServerOptions : UInt32,
    dwCcpError : UInt32,
    dwCcpCompressionAlgorithm : UInt32,
    dwCcpServerCompressionAlgorithm : UInt32,
    dwCcpOptions : UInt32,
    dwCcpServerOptions : UInt32

  @[Extern]
  record RASIKEV2_PROJECTION_INFO,
    dwIPv4NegotiationError : UInt32,
    ipv4Address : Win32cr::Networking::WinSock::IN_ADDR,
    ipv4ServerAddress : Win32cr::Networking::WinSock::IN_ADDR,
    dwIPv6NegotiationError : UInt32,
    ipv6Address : Win32cr::Networking::WinSock::IN6_ADDR,
    ipv6ServerAddress : Win32cr::Networking::WinSock::IN6_ADDR,
    dwPrefixLength : UInt32,
    dwAuthenticationProtocol : UInt32,
    dwEapTypeId : UInt32,
    dwFlags : Win32cr::NetworkManagement::Rras::RASIKEV_PROJECTION_INFO_FLAGS,
    dwEncryptionMethod : UInt32,
    numIPv4ServerAddresses : UInt32,
    ipv4ServerAddresses : Win32cr::Networking::WinSock::IN_ADDR*,
    numIPv6ServerAddresses : UInt32,
    ipv6ServerAddresses : Win32cr::Networking::WinSock::IN6_ADDR*

  @[Extern]
  record RAS_PROJECTION_INFO,
    version : Win32cr::NetworkManagement::Rras::RASAPIVERSION,
    type__ : Win32cr::NetworkManagement::Rras::RASPROJECTION_INFO_TYPE,
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      ppp : Win32cr::NetworkManagement::Rras::RASPPP_PROJECTION_INFO,
      ikev2 : Win32cr::NetworkManagement::Rras::RASIKEV2_PROJECTION_INFO

  end

  @[Extern]
  record RASDEVINFOW,
    dwSize : UInt32,
    szDeviceType : UInt16[17],
    szDeviceName : UInt16[129]

  @[Extern]
  record RASDEVINFOA,
    dwSize : UInt32,
    szDeviceType : Win32cr::Foundation::CHAR[17],
    szDeviceName : Win32cr::Foundation::CHAR[129]

  @[Extern]
  record RASCTRYINFO,
    dwSize : UInt32,
    dwCountryID : UInt32,
    dwNextCountryID : UInt32,
    dwCountryCode : UInt32,
    dwCountryNameOffset : UInt32

  @[Extern]
  record RASENTRYA,
    dwSize : UInt32,
    dwfOptions : UInt32,
    dwCountryID : UInt32,
    dwCountryCode : UInt32,
    szAreaCode : Win32cr::Foundation::CHAR[11],
    szLocalPhoneNumber : Win32cr::Foundation::CHAR[129],
    dwAlternateOffset : UInt32,
    ipaddr : Win32cr::NetworkManagement::Rras::RASIPADDR,
    ipaddrDns : Win32cr::NetworkManagement::Rras::RASIPADDR,
    ipaddrDnsAlt : Win32cr::NetworkManagement::Rras::RASIPADDR,
    ipaddrWins : Win32cr::NetworkManagement::Rras::RASIPADDR,
    ipaddrWinsAlt : Win32cr::NetworkManagement::Rras::RASIPADDR,
    dwFrameSize : UInt32,
    dwfNetProtocols : UInt32,
    dwFramingProtocol : UInt32,
    szScript : Win32cr::Foundation::CHAR[260],
    szAutodialDll : Win32cr::Foundation::CHAR[260],
    szAutodialFunc : Win32cr::Foundation::CHAR[260],
    szDeviceType : Win32cr::Foundation::CHAR[17],
    szDeviceName : Win32cr::Foundation::CHAR[129],
    szX25PadType : Win32cr::Foundation::CHAR[33],
    szX25Address : Win32cr::Foundation::CHAR[201],
    szX25Facilities : Win32cr::Foundation::CHAR[201],
    szX25UserData : Win32cr::Foundation::CHAR[201],
    dwChannels : UInt32,
    dwReserved1 : UInt32,
    dwReserved2 : UInt32,
    dwSubEntries : UInt32,
    dwDialMode : Win32cr::NetworkManagement::Rras::RASENTRY_DIAL_MODE,
    dwDialExtraPercent : UInt32,
    dwDialExtraSampleSeconds : UInt32,
    dwHangUpExtraPercent : UInt32,
    dwHangUpExtraSampleSeconds : UInt32,
    dwIdleDisconnectSeconds : UInt32,
    dwType : UInt32,
    dwEncryptionType : UInt32,
    dwCustomAuthKey : UInt32,
    guidId : LibC::GUID,
    szCustomDialDll : Win32cr::Foundation::CHAR[260],
    dwVpnStrategy : UInt32,
    dwfOptions2 : UInt32,
    dwfOptions3 : UInt32,
    szDnsSuffix : Win32cr::Foundation::CHAR[256],
    dwTcpWindowSize : UInt32,
    szPrerequisitePbk : Win32cr::Foundation::CHAR[260],
    szPrerequisiteEntry : Win32cr::Foundation::CHAR[257],
    dwRedialCount : UInt32,
    dwRedialPause : UInt32,
    ipv6addrDns : Win32cr::Networking::WinSock::IN6_ADDR,
    ipv6addrDnsAlt : Win32cr::Networking::WinSock::IN6_ADDR,
    dwIPv4InterfaceMetric : UInt32,
    dwIPv6InterfaceMetric : UInt32,
    ipv6addr : Win32cr::Networking::WinSock::IN6_ADDR,
    dwIPv6PrefixLength : UInt32,
    dwNetworkOutageTime : UInt32,
    szIDi : Win32cr::Foundation::CHAR[257],
    szIDr : Win32cr::Foundation::CHAR[257],
    fIsImsConfig : Win32cr::Foundation::BOOL,
    idi_type : Win32cr::NetworkManagement::Rras::IKEV2_ID_PAYLOAD_TYPE,
    idr_type : Win32cr::NetworkManagement::Rras::IKEV2_ID_PAYLOAD_TYPE,
    fDisableIKEv2Fragmentation : Win32cr::Foundation::BOOL

  @[Extern]
  record RASENTRYW,
    dwSize : UInt32,
    dwfOptions : UInt32,
    dwCountryID : UInt32,
    dwCountryCode : UInt32,
    szAreaCode : UInt16[11],
    szLocalPhoneNumber : UInt16[129],
    dwAlternateOffset : UInt32,
    ipaddr : Win32cr::NetworkManagement::Rras::RASIPADDR,
    ipaddrDns : Win32cr::NetworkManagement::Rras::RASIPADDR,
    ipaddrDnsAlt : Win32cr::NetworkManagement::Rras::RASIPADDR,
    ipaddrWins : Win32cr::NetworkManagement::Rras::RASIPADDR,
    ipaddrWinsAlt : Win32cr::NetworkManagement::Rras::RASIPADDR,
    dwFrameSize : UInt32,
    dwfNetProtocols : UInt32,
    dwFramingProtocol : UInt32,
    szScript : UInt16[260],
    szAutodialDll : UInt16[260],
    szAutodialFunc : UInt16[260],
    szDeviceType : UInt16[17],
    szDeviceName : UInt16[129],
    szX25PadType : UInt16[33],
    szX25Address : UInt16[201],
    szX25Facilities : UInt16[201],
    szX25UserData : UInt16[201],
    dwChannels : UInt32,
    dwReserved1 : UInt32,
    dwReserved2 : UInt32,
    dwSubEntries : UInt32,
    dwDialMode : Win32cr::NetworkManagement::Rras::RASENTRY_DIAL_MODE,
    dwDialExtraPercent : UInt32,
    dwDialExtraSampleSeconds : UInt32,
    dwHangUpExtraPercent : UInt32,
    dwHangUpExtraSampleSeconds : UInt32,
    dwIdleDisconnectSeconds : UInt32,
    dwType : UInt32,
    dwEncryptionType : UInt32,
    dwCustomAuthKey : UInt32,
    guidId : LibC::GUID,
    szCustomDialDll : UInt16[260],
    dwVpnStrategy : UInt32,
    dwfOptions2 : UInt32,
    dwfOptions3 : UInt32,
    szDnsSuffix : UInt16[256],
    dwTcpWindowSize : UInt32,
    szPrerequisitePbk : UInt16[260],
    szPrerequisiteEntry : UInt16[257],
    dwRedialCount : UInt32,
    dwRedialPause : UInt32,
    ipv6addrDns : Win32cr::Networking::WinSock::IN6_ADDR,
    ipv6addrDnsAlt : Win32cr::Networking::WinSock::IN6_ADDR,
    dwIPv4InterfaceMetric : UInt32,
    dwIPv6InterfaceMetric : UInt32,
    ipv6addr : Win32cr::Networking::WinSock::IN6_ADDR,
    dwIPv6PrefixLength : UInt32,
    dwNetworkOutageTime : UInt32,
    szIDi : UInt16[257],
    szIDr : UInt16[257],
    fIsImsConfig : Win32cr::Foundation::BOOL,
    idi_type : Win32cr::NetworkManagement::Rras::IKEV2_ID_PAYLOAD_TYPE,
    idr_type : Win32cr::NetworkManagement::Rras::IKEV2_ID_PAYLOAD_TYPE,
    fDisableIKEv2Fragmentation : Win32cr::Foundation::BOOL

  @[Extern]
  record RASADPARAMS,
    dwSize : UInt32,
    hwndOwner : Win32cr::Foundation::HWND,
    dwFlags : UInt32,
    xDlg : Int32,
    yDlg : Int32

  @[Extern]
  record RASSUBENTRYA,
    dwSize : UInt32,
    dwfFlags : UInt32,
    szDeviceType : Win32cr::Foundation::CHAR[17],
    szDeviceName : Win32cr::Foundation::CHAR[129],
    szLocalPhoneNumber : Win32cr::Foundation::CHAR[129],
    dwAlternateOffset : UInt32

  @[Extern]
  record RASSUBENTRYW,
    dwSize : UInt32,
    dwfFlags : UInt32,
    szDeviceType : UInt16[17],
    szDeviceName : UInt16[129],
    szLocalPhoneNumber : UInt16[129],
    dwAlternateOffset : UInt32

  @[Extern]
  record RASCREDENTIALSA,
    dwSize : UInt32,
    dwMask : UInt32,
    szUserName : Win32cr::Foundation::CHAR[257],
    szPassword : Win32cr::Foundation::CHAR[257],
    szDomain : Win32cr::Foundation::CHAR[16]

  @[Extern]
  record RASCREDENTIALSW,
    dwSize : UInt32,
    dwMask : UInt32,
    szUserName : UInt16[257],
    szPassword : UInt16[257],
    szDomain : UInt16[16]

  @[Extern]
  record RASAUTODIALENTRYA,
    dwSize : UInt32,
    dwFlags : UInt32,
    dwDialingLocation : UInt32,
    szEntry : Win32cr::Foundation::CHAR[257]

  @[Extern]
  record RASAUTODIALENTRYW,
    dwSize : UInt32,
    dwFlags : UInt32,
    dwDialingLocation : UInt32,
    szEntry : UInt16[257]

  @[Extern]
  record RASEAPUSERIDENTITYA,
    szUserName : Win32cr::Foundation::CHAR[257],
    dwSizeofEapInfo : UInt32,
    pbEapInfo : UInt8*

  @[Extern]
  record RASEAPUSERIDENTITYW,
    szUserName : UInt16[257],
    dwSizeofEapInfo : UInt32,
    pbEapInfo : UInt8*

  @[Extern]
  record RASCOMMSETTINGS,
    dwSize : UInt32,
    bParity : UInt8,
    bStop : UInt8,
    bByteSize : UInt8,
    bAlign : UInt8

  @[Extern]
  record RASCUSTOMSCRIPTEXTENSIONS,
    dwSize : UInt32,
    pfnRasSetCommSettings : Win32cr::NetworkManagement::Rras::PFNRASSETCOMMSETTINGS

  @[Extern]
  record RAS_STATS,
    dwSize : UInt32,
    dwBytesXmited : UInt32,
    dwBytesRcved : UInt32,
    dwFramesXmited : UInt32,
    dwFramesRcved : UInt32,
    dwCrcErr : UInt32,
    dwTimeoutErr : UInt32,
    dwAlignmentErr : UInt32,
    dwHardwareOverrunErr : UInt32,
    dwFramingErr : UInt32,
    dwBufferOverrunErr : UInt32,
    dwCompressionRatioIn : UInt32,
    dwCompressionRatioOut : UInt32,
    dwBps : UInt32,
    dwConnectDuration : UInt32

  @[Extern]
  record RASUPDATECONN,
    version : Win32cr::NetworkManagement::Rras::RASAPIVERSION,
    dwSize : UInt32,
    dwFlags : UInt32,
    dwIfIndex : UInt32,
    localEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT,
    remoteEndPoint : Win32cr::NetworkManagement::Rras::RASTUNNELENDPOINT

  @[Extern]
  record RASNOUSERW,
    dwSize : UInt32,
    dwFlags : UInt32,
    dwTimeoutMs : UInt32,
    szUserName : UInt16[257],
    szPassword : UInt16[257],
    szDomain : UInt16[16]

  @[Extern]
  record RASNOUSERA,
    dwSize : UInt32,
    dwFlags : UInt32,
    dwTimeoutMs : UInt32,
    szUserName : Win32cr::Foundation::CHAR[257],
    szPassword : Win32cr::Foundation::CHAR[257],
    szDomain : Win32cr::Foundation::CHAR[16]

  @[Extern]
  record RASPBDLGW,
    dwSize : UInt32,
    hwndOwner : Win32cr::Foundation::HWND,
    dwFlags : UInt32,
    xDlg : Int32,
    yDlg : Int32,
    dwCallbackId : LibC::UIntPtrT,
    pCallback : Win32cr::NetworkManagement::Rras::RASPBDLGFUNCW,
    dwError : UInt32,
    reserved : LibC::UIntPtrT,
    reserved2 : LibC::UIntPtrT

  @[Extern]
  record RASPBDLGA,
    dwSize : UInt32,
    hwndOwner : Win32cr::Foundation::HWND,
    dwFlags : UInt32,
    xDlg : Int32,
    yDlg : Int32,
    dwCallbackId : LibC::UIntPtrT,
    pCallback : Win32cr::NetworkManagement::Rras::RASPBDLGFUNCA,
    dwError : UInt32,
    reserved : LibC::UIntPtrT,
    reserved2 : LibC::UIntPtrT

  @[Extern]
  record RASENTRYDLGW,
    dwSize : UInt32,
    hwndOwner : Win32cr::Foundation::HWND,
    dwFlags : UInt32,
    xDlg : Int32,
    yDlg : Int32,
    szEntry : UInt16[257],
    dwError : UInt32,
    reserved : LibC::UIntPtrT,
    reserved2 : LibC::UIntPtrT

  @[Extern]
  record RASENTRYDLGA,
    dwSize : UInt32,
    hwndOwner : Win32cr::Foundation::HWND,
    dwFlags : UInt32,
    xDlg : Int32,
    yDlg : Int32,
    szEntry : Win32cr::Foundation::CHAR[257],
    dwError : UInt32,
    reserved : LibC::UIntPtrT,
    reserved2 : LibC::UIntPtrT

  @[Extern]
  record RASDIALDLG,
    dwSize : UInt32,
    hwndOwner : Win32cr::Foundation::HWND,
    dwFlags : UInt32,
    xDlg : Int32,
    yDlg : Int32,
    dwSubEntry : UInt32,
    dwError : UInt32,
    reserved : LibC::UIntPtrT,
    reserved2 : LibC::UIntPtrT

  @[Extern]
  record MPR_INTERFACE_0,
    wszInterfaceName : UInt16[257],
    hInterface : Win32cr::Foundation::HANDLE,
    fEnabled : Win32cr::Foundation::BOOL,
    dwIfType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE,
    dwConnectionState : Win32cr::NetworkManagement::Rras::ROUTER_CONNECTION_STATE,
    fUnReachabilityReasons : UInt32,
    dwLastError : UInt32

  @[Extern]
  record MPR_IPINIP_INTERFACE_0,
    wszFriendlyName : UInt16[257],
    guid : LibC::GUID

  @[Extern]
  record MPR_INTERFACE_1,
    wszInterfaceName : UInt16[257],
    hInterface : Win32cr::Foundation::HANDLE,
    fEnabled : Win32cr::Foundation::BOOL,
    dwIfType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE,
    dwConnectionState : Win32cr::NetworkManagement::Rras::ROUTER_CONNECTION_STATE,
    fUnReachabilityReasons : UInt32,
    dwLastError : UInt32,
    lpwsDialoutHoursRestriction : Win32cr::Foundation::PWSTR

  @[Extern]
  record MPR_INTERFACE_2,
    wszInterfaceName : UInt16[257],
    hInterface : Win32cr::Foundation::HANDLE,
    fEnabled : Win32cr::Foundation::BOOL,
    dwIfType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE,
    dwConnectionState : Win32cr::NetworkManagement::Rras::ROUTER_CONNECTION_STATE,
    fUnReachabilityReasons : UInt32,
    dwLastError : UInt32,
    dwfOptions : UInt32,
    szLocalPhoneNumber : UInt16[129],
    szAlternates : Win32cr::Foundation::PWSTR,
    ipaddr : UInt32,
    ipaddrDns : UInt32,
    ipaddrDnsAlt : UInt32,
    ipaddrWins : UInt32,
    ipaddrWinsAlt : UInt32,
    dwfNetProtocols : UInt32,
    szDeviceType : UInt16[17],
    szDeviceName : UInt16[129],
    szX25PadType : UInt16[33],
    szX25Address : UInt16[201],
    szX25Facilities : UInt16[201],
    szX25UserData : UInt16[201],
    dwChannels : UInt32,
    dwSubEntries : UInt32,
    dwDialMode : Win32cr::NetworkManagement::Rras::MPR_INTERFACE_DIAL_MODE,
    dwDialExtraPercent : UInt32,
    dwDialExtraSampleSeconds : UInt32,
    dwHangUpExtraPercent : UInt32,
    dwHangUpExtraSampleSeconds : UInt32,
    dwIdleDisconnectSeconds : UInt32,
    dwType : UInt32,
    dwEncryptionType : Win32cr::NetworkManagement::Rras::MPR_ET,
    dwCustomAuthKey : UInt32,
    dwCustomAuthDataSize : UInt32,
    lpbCustomAuthData : UInt8*,
    guidId : LibC::GUID,
    dwVpnStrategy : Win32cr::NetworkManagement::Rras::MPR_VS

  @[Extern]
  record MPR_INTERFACE_3,
    wszInterfaceName : UInt16[257],
    hInterface : Win32cr::Foundation::HANDLE,
    fEnabled : Win32cr::Foundation::BOOL,
    dwIfType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE,
    dwConnectionState : Win32cr::NetworkManagement::Rras::ROUTER_CONNECTION_STATE,
    fUnReachabilityReasons : UInt32,
    dwLastError : UInt32,
    dwfOptions : UInt32,
    szLocalPhoneNumber : UInt16[129],
    szAlternates : Win32cr::Foundation::PWSTR,
    ipaddr : UInt32,
    ipaddrDns : UInt32,
    ipaddrDnsAlt : UInt32,
    ipaddrWins : UInt32,
    ipaddrWinsAlt : UInt32,
    dwfNetProtocols : UInt32,
    szDeviceType : UInt16[17],
    szDeviceName : UInt16[129],
    szX25PadType : UInt16[33],
    szX25Address : UInt16[201],
    szX25Facilities : UInt16[201],
    szX25UserData : UInt16[201],
    dwChannels : UInt32,
    dwSubEntries : UInt32,
    dwDialMode : Win32cr::NetworkManagement::Rras::MPR_INTERFACE_DIAL_MODE,
    dwDialExtraPercent : UInt32,
    dwDialExtraSampleSeconds : UInt32,
    dwHangUpExtraPercent : UInt32,
    dwHangUpExtraSampleSeconds : UInt32,
    dwIdleDisconnectSeconds : UInt32,
    dwType : UInt32,
    dwEncryptionType : Win32cr::NetworkManagement::Rras::MPR_ET,
    dwCustomAuthKey : UInt32,
    dwCustomAuthDataSize : UInt32,
    lpbCustomAuthData : UInt8*,
    guidId : LibC::GUID,
    dwVpnStrategy : Win32cr::NetworkManagement::Rras::MPR_VS,
    address_count : UInt32,
    ipv6addrDns : Win32cr::Networking::WinSock::IN6_ADDR,
    ipv6addrDnsAlt : Win32cr::Networking::WinSock::IN6_ADDR,
    ipv6addr : Win32cr::Networking::WinSock::IN6_ADDR*

  @[Extern]
  record MPR_DEVICE_0,
    szDeviceType : UInt16[17],
    szDeviceName : UInt16[129]

  @[Extern]
  record MPR_DEVICE_1,
    szDeviceType : UInt16[17],
    szDeviceName : UInt16[129],
    szLocalPhoneNumber : UInt16[129],
    szAlternates : Win32cr::Foundation::PWSTR

  @[Extern]
  record MPR_CREDENTIALSEX_0,
    dwSize : UInt32,
    lpbCredentialsInfo : UInt8*

  @[Extern]
  record MPR_CREDENTIALSEX_1,
    dwSize : UInt32,
    lpbCredentialsInfo : UInt8*

  @[Extern]
  record MPR_TRANSPORT_0,
    dwTransportId : UInt32,
    hTransport : Win32cr::Foundation::HANDLE,
    wszTransportName : UInt16[41]

  @[Extern]
  record MPR_IFTRANSPORT_0,
    dwTransportId : UInt32,
    hIfTransport : Win32cr::Foundation::HANDLE,
    wszIfTransportName : UInt16[41]

  @[Extern]
  record MPR_SERVER_0,
    fLanOnlyMode : Win32cr::Foundation::BOOL,
    dwUpTime : UInt32,
    dwTotalPorts : UInt32,
    dwPortsInUse : UInt32

  @[Extern]
  record MPR_SERVER_1,
    dwNumPptpPorts : UInt32,
    dwPptpPortFlags : UInt32,
    dwNumL2tpPorts : UInt32,
    dwL2tpPortFlags : UInt32

  @[Extern]
  record MPR_SERVER_2,
    dwNumPptpPorts : UInt32,
    dwPptpPortFlags : UInt32,
    dwNumL2tpPorts : UInt32,
    dwL2tpPortFlags : UInt32,
    dwNumSstpPorts : UInt32,
    dwSstpPortFlags : UInt32

  @[Extern]
  record RAS_PORT_0,
    hPort : Win32cr::Foundation::HANDLE,
    hConnection : Win32cr::Foundation::HANDLE,
    dwPortCondition : Win32cr::NetworkManagement::Rras::RAS_PORT_CONDITION,
    dwTotalNumberOfCalls : UInt32,
    dwConnectDuration : UInt32,
    wszPortName : UInt16[17],
    wszMediaName : UInt16[17],
    wszDeviceName : UInt16[129],
    wszDeviceType : UInt16[17]

  @[Extern]
  record RAS_PORT_1,
    hPort : Win32cr::Foundation::HANDLE,
    hConnection : Win32cr::Foundation::HANDLE,
    dwHardwareCondition : Win32cr::NetworkManagement::Rras::RAS_HARDWARE_CONDITION,
    dwLineSpeed : UInt32,
    dwBytesXmited : UInt32,
    dwBytesRcved : UInt32,
    dwFramesXmited : UInt32,
    dwFramesRcved : UInt32,
    dwCrcErr : UInt32,
    dwTimeoutErr : UInt32,
    dwAlignmentErr : UInt32,
    dwHardwareOverrunErr : UInt32,
    dwFramingErr : UInt32,
    dwBufferOverrunErr : UInt32,
    dwCompressionRatioIn : UInt32,
    dwCompressionRatioOut : UInt32

  @[Extern]
  record RAS_PORT_2,
    hPort : Win32cr::Foundation::HANDLE,
    hConnection : Win32cr::Foundation::HANDLE,
    dwConn_State : UInt32,
    wszPortName : UInt16[17],
    wszMediaName : UInt16[17],
    wszDeviceName : UInt16[129],
    wszDeviceType : UInt16[17],
    dwHardwareCondition : Win32cr::NetworkManagement::Rras::RAS_HARDWARE_CONDITION,
    dwLineSpeed : UInt32,
    dwCrcErr : UInt32,
    dwSerialOverRunErrs : UInt32,
    dwTimeoutErr : UInt32,
    dwAlignmentErr : UInt32,
    dwHardwareOverrunErr : UInt32,
    dwFramingErr : UInt32,
    dwBufferOverrunErr : UInt32,
    dwCompressionRatioIn : UInt32,
    dwCompressionRatioOut : UInt32,
    dwTotalErrors : UInt32,
    ullBytesXmited : UInt64,
    ullBytesRcved : UInt64,
    ullFramesXmited : UInt64,
    ullFramesRcved : UInt64,
    ullBytesTxUncompressed : UInt64,
    ullBytesTxCompressed : UInt64,
    ullBytesRcvUncompressed : UInt64,
    ullBytesRcvCompressed : UInt64

  @[Extern]
  record PPP_NBFCP_INFO,
    dwError : UInt32,
    wszWksta : UInt16[17]

  @[Extern]
  record PPP_IPCP_INFO,
    dwError : UInt32,
    wszAddress : UInt16[16],
    wszRemoteAddress : UInt16[16]

  @[Extern]
  record PPP_IPCP_INFO2,
    dwError : UInt32,
    wszAddress : UInt16[16],
    wszRemoteAddress : UInt16[16],
    dwOptions : UInt32,
    dwRemoteOptions : UInt32

  @[Extern]
  record PPP_IPXCP_INFO,
    dwError : UInt32,
    wszAddress : UInt16[23]

  @[Extern]
  record PPP_ATCP_INFO,
    dwError : UInt32,
    wszAddress : UInt16[33]

  @[Extern]
  record PPP_IPV6_CP_INFO,
    dwVersion : UInt32,
    dwSize : UInt32,
    dwError : UInt32,
    bInterfaceIdentifier : UInt8[8],
    bRemoteInterfaceIdentifier : UInt8[8],
    dwOptions : UInt32,
    dwRemoteOptions : UInt32,
    bPrefix : UInt8[8],
    dwPrefixLength : UInt32

  @[Extern]
  record PPP_INFO,
    nbf : Win32cr::NetworkManagement::Rras::PPP_NBFCP_INFO,
    ip : Win32cr::NetworkManagement::Rras::PPP_IPCP_INFO,
    ipx : Win32cr::NetworkManagement::Rras::PPP_IPXCP_INFO,
    at : Win32cr::NetworkManagement::Rras::PPP_ATCP_INFO

  @[Extern]
  record PPP_CCP_INFO,
    dwError : UInt32,
    dwCompressionAlgorithm : UInt32,
    dwOptions : UInt32,
    dwRemoteCompressionAlgorithm : UInt32,
    dwRemoteOptions : UInt32

  @[Extern]
  record PPP_LCP_INFO,
    dwError : UInt32,
    dwAuthenticationProtocol : Win32cr::NetworkManagement::Rras::PPP_LCP,
    dwAuthenticationData : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO_AUTH_DATA,
    dwRemoteAuthenticationProtocol : UInt32,
    dwRemoteAuthenticationData : UInt32,
    dwTerminateReason : UInt32,
    dwRemoteTerminateReason : UInt32,
    dwOptions : UInt32,
    dwRemoteOptions : UInt32,
    dwEapTypeId : UInt32,
    dwRemoteEapTypeId : UInt32

  @[Extern]
  record PPP_INFO_2,
    nbf : Win32cr::NetworkManagement::Rras::PPP_NBFCP_INFO,
    ip : Win32cr::NetworkManagement::Rras::PPP_IPCP_INFO2,
    ipx : Win32cr::NetworkManagement::Rras::PPP_IPXCP_INFO,
    at : Win32cr::NetworkManagement::Rras::PPP_ATCP_INFO,
    ccp : Win32cr::NetworkManagement::Rras::PPP_CCP_INFO,
    lcp : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO

  @[Extern]
  record PPP_INFO_3,
    nbf : Win32cr::NetworkManagement::Rras::PPP_NBFCP_INFO,
    ip : Win32cr::NetworkManagement::Rras::PPP_IPCP_INFO2,
    ipv6 : Win32cr::NetworkManagement::Rras::PPP_IPV6_CP_INFO,
    ccp : Win32cr::NetworkManagement::Rras::PPP_CCP_INFO,
    lcp : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO

  @[Extern]
  record RAS_CONNECTION_0,
    hConnection : Win32cr::Foundation::HANDLE,
    hInterface : Win32cr::Foundation::HANDLE,
    dwConnectDuration : UInt32,
    dwInterfaceType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE,
    dwConnectionFlags : Win32cr::NetworkManagement::Rras::RAS_FLAGS,
    wszInterfaceName : UInt16[257],
    wszUserName : UInt16[257],
    wszLogonDomain : UInt16[16],
    wszRemoteComputer : UInt16[17]

  @[Extern]
  record RAS_CONNECTION_1,
    hConnection : Win32cr::Foundation::HANDLE,
    hInterface : Win32cr::Foundation::HANDLE,
    ppp_info : Win32cr::NetworkManagement::Rras::PPP_INFO,
    dwBytesXmited : UInt32,
    dwBytesRcved : UInt32,
    dwFramesXmited : UInt32,
    dwFramesRcved : UInt32,
    dwCrcErr : UInt32,
    dwTimeoutErr : UInt32,
    dwAlignmentErr : UInt32,
    dwHardwareOverrunErr : UInt32,
    dwFramingErr : UInt32,
    dwBufferOverrunErr : UInt32,
    dwCompressionRatioIn : UInt32,
    dwCompressionRatioOut : UInt32

  @[Extern]
  record RAS_CONNECTION_2,
    hConnection : Win32cr::Foundation::HANDLE,
    wszUserName : UInt16[257],
    dwInterfaceType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE,
    guid : LibC::GUID,
    ppp_info2 : Win32cr::NetworkManagement::Rras::PPP_INFO_2

  @[Extern]
  record RAS_CONNECTION_3,
    dwVersion : UInt32,
    dwSize : UInt32,
    hConnection : Win32cr::Foundation::HANDLE,
    wszUserName : UInt16[257],
    dwInterfaceType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE,
    guid : LibC::GUID,
    ppp_info3 : Win32cr::NetworkManagement::Rras::PPP_INFO_3,
    rasQuarState : Win32cr::NetworkManagement::Rras::RAS_QUARANTINE_STATE,
    timer : Win32cr::Foundation::FILETIME

  @[Extern]
  record RAS_USER_0,
    bfPrivilege : UInt8,
    wszPhoneNumber : UInt16[129]

  @[Extern]
  record RAS_USER_1,
    bfPrivilege : UInt8,
    wszPhoneNumber : UInt16[129],
    bfPrivilege2 : UInt8

  @[Extern]
  record MPR_FILTER_0,
    fEnable : Win32cr::Foundation::BOOL

  @[Extern]
  record MPRAPI_OBJECT_HEADER,
    revision : UInt8,
    type__ : UInt8,
    size : UInt16

  @[Extern]
  record PPP_PROJECTION_INFO,
    dwIPv4NegotiationError : UInt32,
    wszAddress : UInt16[16],
    wszRemoteAddress : UInt16[16],
    dwIPv4Options : UInt32,
    dwIPv4RemoteOptions : UInt32,
    i_pv4_sub_interface_index : UInt64,
    dwIPv6NegotiationError : UInt32,
    bInterfaceIdentifier : UInt8[8],
    bRemoteInterfaceIdentifier : UInt8[8],
    bPrefix : UInt8[8],
    dwPrefixLength : UInt32,
    i_pv6_sub_interface_index : UInt64,
    dwLcpError : UInt32,
    dwAuthenticationProtocol : Win32cr::NetworkManagement::Rras::PPP_LCP,
    dwAuthenticationData : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO_AUTH_DATA,
    dwRemoteAuthenticationProtocol : Win32cr::NetworkManagement::Rras::PPP_LCP,
    dwRemoteAuthenticationData : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO_AUTH_DATA,
    dwLcpTerminateReason : UInt32,
    dwLcpRemoteTerminateReason : UInt32,
    dwLcpOptions : UInt32,
    dwLcpRemoteOptions : UInt32,
    dwEapTypeId : UInt32,
    dwRemoteEapTypeId : UInt32,
    dwCcpError : UInt32,
    dwCompressionAlgorithm : UInt32,
    dwCcpOptions : UInt32,
    dwRemoteCompressionAlgorithm : UInt32,
    dwCcpRemoteOptions : UInt32

  @[Extern]
  record PPP_PROJECTION_INFO2,
    dwIPv4NegotiationError : UInt32,
    wszAddress : UInt16[16],
    wszRemoteAddress : UInt16[16],
    dwIPv4Options : UInt32,
    dwIPv4RemoteOptions : UInt32,
    i_pv4_sub_interface_index : UInt64,
    dwIPv6NegotiationError : UInt32,
    bInterfaceIdentifier : UInt8[8],
    bRemoteInterfaceIdentifier : UInt8[8],
    bPrefix : UInt8[8],
    dwPrefixLength : UInt32,
    i_pv6_sub_interface_index : UInt64,
    dwLcpError : UInt32,
    dwAuthenticationProtocol : Win32cr::NetworkManagement::Rras::PPP_LCP,
    dwAuthenticationData : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO_AUTH_DATA,
    dwRemoteAuthenticationProtocol : Win32cr::NetworkManagement::Rras::PPP_LCP,
    dwRemoteAuthenticationData : Win32cr::NetworkManagement::Rras::PPP_LCP_INFO_AUTH_DATA,
    dwLcpTerminateReason : UInt32,
    dwLcpRemoteTerminateReason : UInt32,
    dwLcpOptions : UInt32,
    dwLcpRemoteOptions : UInt32,
    dwEapTypeId : UInt32,
    dwEmbeddedEAPTypeId : UInt32,
    dwRemoteEapTypeId : UInt32,
    dwCcpError : UInt32,
    dwCompressionAlgorithm : UInt32,
    dwCcpOptions : UInt32,
    dwRemoteCompressionAlgorithm : UInt32,
    dwCcpRemoteOptions : UInt32

  @[Extern]
  record IKEV2_PROJECTION_INFO,
    dwIPv4NegotiationError : UInt32,
    wszAddress : UInt16[16],
    wszRemoteAddress : UInt16[16],
    i_pv4_sub_interface_index : UInt64,
    dwIPv6NegotiationError : UInt32,
    bInterfaceIdentifier : UInt8[8],
    bRemoteInterfaceIdentifier : UInt8[8],
    bPrefix : UInt8[8],
    dwPrefixLength : UInt32,
    i_pv6_sub_interface_index : UInt64,
    dwOptions : UInt32,
    dwAuthenticationProtocol : UInt32,
    dwEapTypeId : UInt32,
    dwCompressionAlgorithm : UInt32,
    dwEncryptionMethod : UInt32

  @[Extern]
  record IKEV2_PROJECTION_INFO2,
    dwIPv4NegotiationError : UInt32,
    wszAddress : UInt16[16],
    wszRemoteAddress : UInt16[16],
    i_pv4_sub_interface_index : UInt64,
    dwIPv6NegotiationError : UInt32,
    bInterfaceIdentifier : UInt8[8],
    bRemoteInterfaceIdentifier : UInt8[8],
    bPrefix : UInt8[8],
    dwPrefixLength : UInt32,
    i_pv6_sub_interface_index : UInt64,
    dwOptions : UInt32,
    dwAuthenticationProtocol : UInt32,
    dwEapTypeId : UInt32,
    dwEmbeddedEAPTypeId : UInt32,
    dwCompressionAlgorithm : UInt32,
    dwEncryptionMethod : UInt32

  @[Extern]
  record PROJECTION_INFO,
    projectionInfoType : UInt8,
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      ppp_projection_info : Win32cr::NetworkManagement::Rras::PPP_PROJECTION_INFO,
      ikev2_projection_info : Win32cr::NetworkManagement::Rras::IKEV2_PROJECTION_INFO

  end

  @[Extern]
  record PROJECTION_INFO2,
    projectionInfoType : UInt8,
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      ppp_projection_info : Win32cr::NetworkManagement::Rras::PPP_PROJECTION_INFO2,
      ikev2_projection_info : Win32cr::NetworkManagement::Rras::IKEV2_PROJECTION_INFO2

  end

  @[Extern]
  record RAS_CONNECTION_EX,
    header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER,
    dwConnectDuration : UInt32,
    dwInterfaceType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE,
    dwConnectionFlags : Win32cr::NetworkManagement::Rras::RAS_FLAGS,
    wszInterfaceName : UInt16[257],
    wszUserName : UInt16[257],
    wszLogonDomain : UInt16[16],
    wszRemoteComputer : UInt16[17],
    guid : LibC::GUID,
    rasQuarState : Win32cr::NetworkManagement::Rras::RAS_QUARANTINE_STATE,
    probationTime : Win32cr::Foundation::FILETIME,
    dwBytesXmited : UInt32,
    dwBytesRcved : UInt32,
    dwFramesXmited : UInt32,
    dwFramesRcved : UInt32,
    dwCrcErr : UInt32,
    dwTimeoutErr : UInt32,
    dwAlignmentErr : UInt32,
    dwHardwareOverrunErr : UInt32,
    dwFramingErr : UInt32,
    dwBufferOverrunErr : UInt32,
    dwCompressionRatioIn : UInt32,
    dwCompressionRatioOut : UInt32,
    dwNumSwitchOvers : UInt32,
    wszRemoteEndpointAddress : UInt16[65],
    wszLocalEndpointAddress : UInt16[65],
    projection_info : Win32cr::NetworkManagement::Rras::PROJECTION_INFO,
    hConnection : Win32cr::Foundation::HANDLE,
    hInterface : Win32cr::Foundation::HANDLE

  @[Extern]
  record RAS_CONNECTION_4,
    dwConnectDuration : UInt32,
    dwInterfaceType : Win32cr::NetworkManagement::Rras::ROUTER_INTERFACE_TYPE,
    dwConnectionFlags : Win32cr::NetworkManagement::Rras::RAS_FLAGS,
    wszInterfaceName : UInt16[257],
    wszUserName : UInt16[257],
    wszLogonDomain : UInt16[16],
    wszRemoteComputer : UInt16[17],
    guid : LibC::GUID,
    rasQuarState : Win32cr::NetworkManagement::Rras::RAS_QUARANTINE_STATE,
    probationTime : Win32cr::Foundation::FILETIME,
    connectionStartTime : Win32cr::Foundation::FILETIME,
    ullBytesXmited : UInt64,
    ullBytesRcved : UInt64,
    dwFramesXmited : UInt32,
    dwFramesRcved : UInt32,
    dwCrcErr : UInt32,
    dwTimeoutErr : UInt32,
    dwAlignmentErr : UInt32,
    dwHardwareOverrunErr : UInt32,
    dwFramingErr : UInt32,
    dwBufferOverrunErr : UInt32,
    dwCompressionRatioIn : UInt32,
    dwCompressionRatioOut : UInt32,
    dwNumSwitchOvers : UInt32,
    wszRemoteEndpointAddress : UInt16[65],
    wszLocalEndpointAddress : UInt16[65],
    projection_info : Win32cr::NetworkManagement::Rras::PROJECTION_INFO2,
    hConnection : Win32cr::Foundation::HANDLE,
    hInterface : Win32cr::Foundation::HANDLE,
    dwDeviceType : UInt32

  @[Extern]
  record ROUTER_CUSTOM_IKEv2_POLICY0,
    dwIntegrityMethod : UInt32,
    dwEncryptionMethod : UInt32,
    dwCipherTransformConstant : UInt32,
    dwAuthTransformConstant : UInt32,
    dwPfsGroup : UInt32,
    dwDhGroup : UInt32

  @[Extern]
  record ROUTER_IKEv2_IF_CUSTOM_CONFIG0,
    dwSaLifeTime : UInt32,
    dwSaDataSize : UInt32,
    certificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB,
    customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*

  @[Extern]
  record MPR_IF_CUSTOMINFOEX0,
    header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER,
    dwFlags : UInt32,
    customIkev2Config : Win32cr::NetworkManagement::Rras::ROUTER_IKEv2_IF_CUSTOM_CONFIG0

  @[Extern]
  record MPR_CERT_EKU,
    dwSize : UInt32,
    is_ekuoid : Win32cr::Foundation::BOOL,
    pwszEKU : Win32cr::Foundation::PWSTR

  @[Extern]
  record VPN_TS_IP_ADDRESS,
    type__ : UInt16,
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      v4 : Win32cr::Networking::WinSock::IN_ADDR,
      v6 : Win32cr::Networking::WinSock::IN6_ADDR

  end

  @[Extern]
  record MPR_VPN_SELECTOR_,
    type__ : Win32cr::NetworkManagement::Rras::MPR_VPN_TS_TYPE,
    protocolId : UInt8,
    portStart : UInt16,
    portEnd : UInt16,
    tsPayloadId : UInt16,
    addrStart : Win32cr::NetworkManagement::Rras::VPN_TS_IP_ADDRESS,
    addrEnd : Win32cr::NetworkManagement::Rras::VPN_TS_IP_ADDRESS

  @[Extern]
  record MPR_VPN_TRAFFIC_SELECTORS,
    numTsi : UInt32,
    numTsr : UInt32,
    tsI : Win32cr::NetworkManagement::Rras::MPR_VPN_SELECTOR_*,
    tsR : Win32cr::NetworkManagement::Rras::MPR_VPN_SELECTOR_*

  @[Extern]
  record ROUTER_IKEv2_IF_CUSTOM_CONFIG2,
    dwSaLifeTime : UInt32,
    dwSaDataSize : UInt32,
    certificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB,
    customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*,
    certificateHash : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB,
    dwMmSaLifeTime : UInt32,
    vpnTrafficSelectors : Win32cr::NetworkManagement::Rras::MPR_VPN_TRAFFIC_SELECTORS

  @[Extern]
  record MPR_IF_CUSTOMINFOEX2,
    header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER,
    dwFlags : UInt32,
    customIkev2Config : Win32cr::NetworkManagement::Rras::ROUTER_IKEv2_IF_CUSTOM_CONFIG2

  @[Extern]
  record IKEV2_TUNNEL_CONFIG_PARAMS4,
    dwIdleTimeout : UInt32,
    dwNetworkBlackoutTime : UInt32,
    dwSaLifeTime : UInt32,
    dwSaDataSizeForRenegotiation : UInt32,
    dwConfigOptions : UInt32,
    dwTotalCertificates : UInt32,
    certificateNames : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB*,
    machineCertificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB,
    dwEncryptionType : UInt32,
    customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*,
    dwTotalEkus : UInt32,
    certificateEKUs : Win32cr::NetworkManagement::Rras::MPR_CERT_EKU*,
    machineCertificateHash : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB,
    dwMmSaLifeTime : UInt32

  @[Extern]
  record ROUTER_IKEv2_IF_CUSTOM_CONFIG1,
    dwSaLifeTime : UInt32,
    dwSaDataSize : UInt32,
    certificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB,
    customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*,
    certificateHash : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB

  @[Extern]
  record MPR_IF_CUSTOMINFOEX1,
    header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER,
    dwFlags : UInt32,
    customIkev2Config : Win32cr::NetworkManagement::Rras::ROUTER_IKEv2_IF_CUSTOM_CONFIG1

  @[Extern]
  record IKEV2_TUNNEL_CONFIG_PARAMS3,
    dwIdleTimeout : UInt32,
    dwNetworkBlackoutTime : UInt32,
    dwSaLifeTime : UInt32,
    dwSaDataSizeForRenegotiation : UInt32,
    dwConfigOptions : UInt32,
    dwTotalCertificates : UInt32,
    certificateNames : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB*,
    machineCertificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB,
    dwEncryptionType : UInt32,
    customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*,
    dwTotalEkus : UInt32,
    certificateEKUs : Win32cr::NetworkManagement::Rras::MPR_CERT_EKU*,
    machineCertificateHash : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB

  @[Extern]
  record IKEV2_TUNNEL_CONFIG_PARAMS2,
    dwIdleTimeout : UInt32,
    dwNetworkBlackoutTime : UInt32,
    dwSaLifeTime : UInt32,
    dwSaDataSizeForRenegotiation : UInt32,
    dwConfigOptions : UInt32,
    dwTotalCertificates : UInt32,
    certificateNames : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB*,
    machineCertificateName : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB,
    dwEncryptionType : UInt32,
    customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*

  @[Extern]
  record L2TP_TUNNEL_CONFIG_PARAMS2,
    dwIdleTimeout : UInt32,
    dwEncryptionType : UInt32,
    dwSaLifeTime : UInt32,
    dwSaDataSizeForRenegotiation : UInt32,
    customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*,
    dwMmSaLifeTime : UInt32

  @[Extern]
  record L2TP_TUNNEL_CONFIG_PARAMS1,
    dwIdleTimeout : UInt32,
    dwEncryptionType : UInt32,
    dwSaLifeTime : UInt32,
    dwSaDataSizeForRenegotiation : UInt32,
    customPolicy : Win32cr::NetworkManagement::Rras::ROUTER_CUSTOM_IKEv2_POLICY0*

  @[Extern]
  record IKEV2_CONFIG_PARAMS,
    dwNumPorts : UInt32,
    dwPortFlags : UInt32,
    dwTunnelConfigParamFlags : UInt32,
    tunnel_config_params : Win32cr::NetworkManagement::Rras::IKEV2_TUNNEL_CONFIG_PARAMS4

  @[Extern]
  record PPTP_CONFIG_PARAMS,
    dwNumPorts : UInt32,
    dwPortFlags : UInt32

  @[Extern]
  record L2TP_CONFIG_PARAMS1,
    dwNumPorts : UInt32,
    dwPortFlags : UInt32,
    dwTunnelConfigParamFlags : UInt32,
    tunnel_config_params : Win32cr::NetworkManagement::Rras::L2TP_TUNNEL_CONFIG_PARAMS2

  @[Extern]
  record GRE_CONFIG_PARAMS0,
    dwNumPorts : UInt32,
    dwPortFlags : UInt32

  @[Extern]
  record L2TP_CONFIG_PARAMS0,
    dwNumPorts : UInt32,
    dwPortFlags : UInt32

  @[Extern]
  record SSTP_CERT_INFO,
    isDefault : Win32cr::Foundation::BOOL,
    certBlob : Win32cr::Security::Cryptography::CRYPTOAPI_BLOB

  @[Extern]
  record SSTP_CONFIG_PARAMS,
    dwNumPorts : UInt32,
    dwPortFlags : UInt32,
    isUseHttps : Win32cr::Foundation::BOOL,
    certAlgorithm : UInt32,
    sstpCertDetails : Win32cr::NetworkManagement::Rras::SSTP_CERT_INFO

  @[Extern]
  record MPRAPI_TUNNEL_CONFIG_PARAMS0,
    ike_config_params : Win32cr::NetworkManagement::Rras::IKEV2_CONFIG_PARAMS,
    pptp_config_params : Win32cr::NetworkManagement::Rras::PPTP_CONFIG_PARAMS,
    l2tp_config_params : Win32cr::NetworkManagement::Rras::L2TP_CONFIG_PARAMS1,
    sstp_config_params : Win32cr::NetworkManagement::Rras::SSTP_CONFIG_PARAMS

  @[Extern]
  record MPRAPI_TUNNEL_CONFIG_PARAMS1,
    ike_config_params : Win32cr::NetworkManagement::Rras::IKEV2_CONFIG_PARAMS,
    pptp_config_params : Win32cr::NetworkManagement::Rras::PPTP_CONFIG_PARAMS,
    l2tp_config_params : Win32cr::NetworkManagement::Rras::L2TP_CONFIG_PARAMS1,
    sstp_config_params : Win32cr::NetworkManagement::Rras::SSTP_CONFIG_PARAMS,
    gre_config_params : Win32cr::NetworkManagement::Rras::GRE_CONFIG_PARAMS0

  @[Extern]
  record MPR_SERVER_EX0,
    header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER,
    fLanOnlyMode : UInt32,
    dwUpTime : UInt32,
    dwTotalPorts : UInt32,
    dwPortsInUse : UInt32,
    reserved : UInt32,
    config_params : Win32cr::NetworkManagement::Rras::MPRAPI_TUNNEL_CONFIG_PARAMS0

  @[Extern]
  record MPR_SERVER_EX1,
    header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER,
    fLanOnlyMode : UInt32,
    dwUpTime : UInt32,
    dwTotalPorts : UInt32,
    dwPortsInUse : UInt32,
    reserved : UInt32,
    config_params : Win32cr::NetworkManagement::Rras::MPRAPI_TUNNEL_CONFIG_PARAMS1

  @[Extern]
  record MPR_SERVER_SET_CONFIG_EX0,
    header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER,
    setConfigForProtocols : UInt32,
    config_params : Win32cr::NetworkManagement::Rras::MPRAPI_TUNNEL_CONFIG_PARAMS0

  @[Extern]
  record MPR_SERVER_SET_CONFIG_EX1,
    header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER,
    setConfigForProtocols : UInt32,
    config_params : Win32cr::NetworkManagement::Rras::MPRAPI_TUNNEL_CONFIG_PARAMS1

  @[Extern]
  record AUTH_VALIDATION_EX,
    header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER,
    hRasConnection : Win32cr::Foundation::HANDLE,
    wszUserName : UInt16[257],
    wszLogonDomain : UInt16[16],
    auth_info_size : UInt32,
    auth_info : UInt8*

  @[Extern]
  record RAS_UPDATE_CONNECTION,
    header : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER,
    dwIfIndex : UInt32,
    wszLocalEndpointAddress : UInt16[65],
    wszRemoteEndpointAddress : UInt16[65]

  @[Extern]
  record MPRAPI_ADMIN_DLL_CALLBACKS,
    revision : UInt8,
    lpfnMprAdminGetIpAddressForUser : Win32cr::NetworkManagement::Rras::PMPRADMINGETIPADDRESSFORUSER,
    lpfnMprAdminReleaseIpAddress : Win32cr::NetworkManagement::Rras::PMPRADMINRELEASEIPADRESS,
    lpfnMprAdminGetIpv6AddressForUser : Win32cr::NetworkManagement::Rras::PMPRADMINGETIPV6ADDRESSFORUSER,
    lpfnMprAdminReleaseIpV6AddressForUser : Win32cr::NetworkManagement::Rras::PMPRADMINRELEASEIPV6ADDRESSFORUSER,
    lpfnRasAdminAcceptNewLink : Win32cr::NetworkManagement::Rras::PMPRADMINACCEPTNEWLINK,
    lpfnRasAdminLinkHangupNotification : Win32cr::NetworkManagement::Rras::PMPRADMINLINKHANGUPNOTIFICATION,
    lpfnRasAdminTerminateDll : Win32cr::NetworkManagement::Rras::PMPRADMINTERMINATEDLL,
    lpfnRasAdminAcceptNewConnectionEx : Win32cr::NetworkManagement::Rras::PMPRADMINACCEPTNEWCONNECTIONEX,
    lpfnRasAdminAcceptEndpointChangeEx : Win32cr::NetworkManagement::Rras::PMPRADMINACCEPTTUNNELENDPOINTCHANGEEX,
    lpfnRasAdminAcceptReauthenticationEx : Win32cr::NetworkManagement::Rras::PMPRADMINACCEPTREAUTHENTICATIONEX,
    lpfnRasAdminConnectionHangupNotificationEx : Win32cr::NetworkManagement::Rras::PMPRADMINCONNECTIONHANGUPNOTIFICATIONEX,
    lpfnRASValidatePreAuthenticatedConnectionEx : Win32cr::NetworkManagement::Rras::PMPRADMINRASVALIDATEPREAUTHENTICATEDCONNECTIONEX

  @[Extern]
  record SECURITY_MESSAGE,
    dwMsgId : Win32cr::NetworkManagement::Rras::SECURITY_MESSAGE_MSG_ID,
    hPort : LibC::IntPtrT,
    dwError : UInt32,
    user_name : Win32cr::Foundation::CHAR[257],
    domain : Win32cr::Foundation::CHAR[16]

  @[Extern]
  record RAS_SECURITY_INFO,
    last_error : UInt32,
    bytes_received : UInt32,
    device_name : Win32cr::Foundation::CHAR[129]

  @[Extern]
  record MGM_IF_ENTRY,
    dwIfIndex : UInt32,
    dwIfNextHopAddr : UInt32,
    bIGMP : Win32cr::Foundation::BOOL,
    bIsEnabled : Win32cr::Foundation::BOOL

  @[Extern]
  record ROUTING_PROTOCOL_CONFIG,
    dwCallbackFlags : UInt32,
    pfnRpfCallback : Win32cr::NetworkManagement::Rras::PMGM_RPF_CALLBACK,
    pfnCreationAlertCallback : Win32cr::NetworkManagement::Rras::PMGM_CREATION_ALERT_CALLBACK,
    pfnPruneAlertCallback : Win32cr::NetworkManagement::Rras::PMGM_PRUNE_ALERT_CALLBACK,
    pfnJoinAlertCallback : Win32cr::NetworkManagement::Rras::PMGM_JOIN_ALERT_CALLBACK,
    pfnWrongIfCallback : Win32cr::NetworkManagement::Rras::PMGM_WRONG_IF_CALLBACK,
    pfnLocalJoinCallback : Win32cr::NetworkManagement::Rras::PMGM_LOCAL_JOIN_CALLBACK,
    pfnLocalLeaveCallback : Win32cr::NetworkManagement::Rras::PMGM_LOCAL_LEAVE_CALLBACK,
    pfnDisableIgmpCallback : Win32cr::NetworkManagement::Rras::PMGM_DISABLE_IGMP_CALLBACK,
    pfnEnableIgmpCallback : Win32cr::NetworkManagement::Rras::PMGM_ENABLE_IGMP_CALLBACK

  @[Extern]
  record SOURCE_GROUP_ENTRY,
    dwSourceAddr : UInt32,
    dwSourceMask : UInt32,
    dwGroupAddr : UInt32,
    dwGroupMask : UInt32

  @[Extern]
  record RTM_REGN_PROFILE,
    max_next_hops_in_route : UInt32,
    max_handles_in_enum : UInt32,
    views_supported : UInt32,
    number_of_views : UInt32

  @[Extern]
  record RTM_NET_ADDRESS,
    address_family : UInt16,
    num_bits : UInt16,
    addr_bits : UInt8[16]

  @[Extern]
  record RTM_PREF_INFO,
    metric : UInt32,
    preference : UInt32

  @[Extern]
  record RTM_NEXTHOP_LIST,
    num_next_hops : UInt16,
    next_hops : LibC::IntPtrT*

  @[Extern]
  record RTM_DEST_INFO,
    dest_handle : LibC::IntPtrT,
    dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS,
    last_changed : Win32cr::Foundation::FILETIME,
    belongs_to_views : UInt32,
    number_of_views : UInt32,
    view_info : Anonymous_e__Struct_* do

    # Nested Type Anonymous_e__Struct_
    @[Extern]
    record Anonymous_e__Struct_,
      view_id : Int32,
      num_routes : UInt32,
      route : LibC::IntPtrT,
      owner : LibC::IntPtrT,
      dest_flags : UInt32,
      hold_route : LibC::IntPtrT

  end

  @[Extern]
  record RTM_ROUTE_INFO,
    dest_handle : LibC::IntPtrT,
    route_owner : LibC::IntPtrT,
    neighbour : LibC::IntPtrT,
    state : UInt8,
    flags1 : UInt8,
    flags : UInt16,
    pref_info : Win32cr::NetworkManagement::Rras::RTM_PREF_INFO,
    belongs_to_views : UInt32,
    entity_specific_info : Void*,
    next_hops_list : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_LIST

  @[Extern]
  record RTM_NEXTHOP_INFO,
    next_hop_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS,
    next_hop_owner : LibC::IntPtrT,
    interface_index : UInt32,
    state : UInt16,
    flags : UInt16,
    entity_specific_info : Void*,
    remote_next_hop : LibC::IntPtrT

  @[Extern]
  record RTM_ENTITY_ID,
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      anonymous : Anonymous_e__Struct_,
      entity_id : UInt64 do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        entity_protocol_id : UInt32,
        entity_instance_id : UInt32

    end

  end

  @[Extern]
  record RTM_ENTITY_INFO,
    rtm_instance_id : UInt16,
    address_family : UInt16,
    entity_id : Win32cr::NetworkManagement::Rras::RTM_ENTITY_ID

  @[Extern]
  record RTM_ENTITY_METHOD_INPUT,
    method_type : UInt32,
    input_size : UInt32,
    input_data : UInt8*

  @[Extern]
  record RTM_ENTITY_METHOD_OUTPUT,
    method_type : UInt32,
    method_status : UInt32,
    output_size : UInt32,
    output_data : UInt8*

  @[Extern]
  record RTM_ENTITY_EXPORT_METHODS,
    num_methods : UInt32,
    methods : Win32cr::NetworkManagement::Rras::RTM_ENTITY_EXPORT_METHOD*

  @[Link("rasapi32")]
  @[Link("rasdlg")]
  @[Link("mprapi")]
  @[Link("rtm")]
  lib C
    fun RasDialA(param0 : Win32cr::NetworkManagement::Rras::RASDIALEXTENSIONS*, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSA*, param3 : UInt32, param4 : Void*, param5 : Win32cr::NetworkManagement::Rras::HRASCONN*) : UInt32

    fun RasDialW(param0 : Win32cr::NetworkManagement::Rras::RASDIALEXTENSIONS*, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSW*, param3 : UInt32, param4 : Void*, param5 : Win32cr::NetworkManagement::Rras::HRASCONN*) : UInt32

    fun RasEnumConnectionsA(param0 : Win32cr::NetworkManagement::Rras::RASCONNA*, param1 : UInt32*, param2 : UInt32*) : UInt32

    fun RasEnumConnectionsW(param0 : Win32cr::NetworkManagement::Rras::RASCONNW*, param1 : UInt32*, param2 : UInt32*) : UInt32

    fun RasEnumEntriesA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYNAMEA*, param3 : UInt32*, param4 : UInt32*) : UInt32

    fun RasEnumEntriesW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYNAMEW*, param3 : UInt32*, param4 : UInt32*) : UInt32

    fun RasGetConnectStatusA(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::NetworkManagement::Rras::RASCONNSTATUSA*) : UInt32

    fun RasGetConnectStatusW(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::NetworkManagement::Rras::RASCONNSTATUSW*) : UInt32

    fun RasGetErrorStringA(resource_id : UInt32, lpszString : UInt8*, in_buf_size : UInt32) : UInt32

    fun RasGetErrorStringW(resource_id : UInt32, lpszString : UInt16*, in_buf_size : UInt32) : UInt32

    fun RasHangUpA(param0 : Win32cr::NetworkManagement::Rras::HRASCONN) : UInt32

    fun RasHangUpW(param0 : Win32cr::NetworkManagement::Rras::HRASCONN) : UInt32

    fun RasGetProjectionInfoA(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::NetworkManagement::Rras::RASPROJECTION, param2 : Void*, param3 : UInt32*) : UInt32

    fun RasGetProjectionInfoW(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::NetworkManagement::Rras::RASPROJECTION, param2 : Void*, param3 : UInt32*) : UInt32

    fun RasCreatePhonebookEntryA(param0 : Win32cr::Foundation::HWND, param1 : Win32cr::Foundation::PSTR) : UInt32

    fun RasCreatePhonebookEntryW(param0 : Win32cr::Foundation::HWND, param1 : Win32cr::Foundation::PWSTR) : UInt32

    fun RasEditPhonebookEntryA(param0 : Win32cr::Foundation::HWND, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::Foundation::PSTR) : UInt32

    fun RasEditPhonebookEntryW(param0 : Win32cr::Foundation::HWND, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::Foundation::PWSTR) : UInt32

    fun RasSetEntryDialParamsA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSA*, param2 : Win32cr::Foundation::BOOL) : UInt32

    fun RasSetEntryDialParamsW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSW*, param2 : Win32cr::Foundation::BOOL) : UInt32

    fun RasGetEntryDialParamsA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSA*, param2 : Int32*) : UInt32

    fun RasGetEntryDialParamsW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::NetworkManagement::Rras::RASDIALPARAMSW*, param2 : Int32*) : UInt32

    fun RasEnumDevicesA(param0 : Win32cr::NetworkManagement::Rras::RASDEVINFOA*, param1 : UInt32*, param2 : UInt32*) : UInt32

    fun RasEnumDevicesW(param0 : Win32cr::NetworkManagement::Rras::RASDEVINFOW*, param1 : UInt32*, param2 : UInt32*) : UInt32

    fun RasGetCountryInfoA(param0 : Win32cr::NetworkManagement::Rras::RASCTRYINFO*, param1 : UInt32*) : UInt32

    fun RasGetCountryInfoW(param0 : Win32cr::NetworkManagement::Rras::RASCTRYINFO*, param1 : UInt32*) : UInt32

    fun RasGetEntryPropertiesA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYA*, param3 : UInt32*, param4 : UInt8*, param5 : UInt32*) : UInt32

    fun RasGetEntryPropertiesW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYW*, param3 : UInt32*, param4 : UInt8*, param5 : UInt32*) : UInt32

    fun RasSetEntryPropertiesA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYA*, param3 : UInt32, param4 : UInt8*, param5 : UInt32) : UInt32

    fun RasSetEntryPropertiesW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASENTRYW*, param3 : UInt32, param4 : UInt8*, param5 : UInt32) : UInt32

    fun RasRenameEntryA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::Foundation::PSTR) : UInt32

    fun RasRenameEntryW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::Foundation::PWSTR) : UInt32

    fun RasDeleteEntryA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR) : UInt32

    fun RasDeleteEntryW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR) : UInt32

    fun RasValidateEntryNameA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR) : UInt32

    fun RasValidateEntryNameW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR) : UInt32

    fun RasConnectionNotificationA(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::Foundation::HANDLE, param2 : UInt32) : UInt32

    fun RasConnectionNotificationW(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : Win32cr::Foundation::HANDLE, param2 : UInt32) : UInt32

    fun RasGetSubEntryHandleA(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : UInt32, param2 : Win32cr::NetworkManagement::Rras::HRASCONN*) : UInt32

    fun RasGetSubEntryHandleW(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : UInt32, param2 : Win32cr::NetworkManagement::Rras::HRASCONN*) : UInt32

    fun RasGetCredentialsA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASCREDENTIALSA*) : UInt32

    fun RasGetCredentialsW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASCREDENTIALSW*) : UInt32

    fun RasSetCredentialsA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : Win32cr::NetworkManagement::Rras::RASCREDENTIALSA*, param3 : Win32cr::Foundation::BOOL) : UInt32

    fun RasSetCredentialsW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : Win32cr::NetworkManagement::Rras::RASCREDENTIALSW*, param3 : Win32cr::Foundation::BOOL) : UInt32

    fun RasGetSubEntryPropertiesA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : UInt32, param3 : Win32cr::NetworkManagement::Rras::RASSUBENTRYA*, param4 : UInt32*, param5 : UInt8*, param6 : UInt32*) : UInt32

    fun RasGetSubEntryPropertiesW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : UInt32, param3 : Win32cr::NetworkManagement::Rras::RASSUBENTRYW*, param4 : UInt32*, param5 : UInt8*, param6 : UInt32*) : UInt32

    fun RasSetSubEntryPropertiesA(param0 : Win32cr::Foundation::PSTR, param1 : Win32cr::Foundation::PSTR, param2 : UInt32, param3 : Win32cr::NetworkManagement::Rras::RASSUBENTRYA*, param4 : UInt32, param5 : UInt8*, param6 : UInt32) : UInt32

    fun RasSetSubEntryPropertiesW(param0 : Win32cr::Foundation::PWSTR, param1 : Win32cr::Foundation::PWSTR, param2 : UInt32, param3 : Win32cr::NetworkManagement::Rras::RASSUBENTRYW*, param4 : UInt32, param5 : UInt8*, param6 : UInt32) : UInt32

    fun RasGetAutodialAddressA(param0 : Win32cr::Foundation::PSTR, param1 : UInt32*, param2 : Win32cr::NetworkManagement::Rras::RASAUTODIALENTRYA*, param3 : UInt32*, param4 : UInt32*) : UInt32

    fun RasGetAutodialAddressW(param0 : Win32cr::Foundation::PWSTR, param1 : UInt32*, param2 : Win32cr::NetworkManagement::Rras::RASAUTODIALENTRYW*, param3 : UInt32*, param4 : UInt32*) : UInt32

    fun RasSetAutodialAddressA(param0 : Win32cr::Foundation::PSTR, param1 : UInt32, param2 : Win32cr::NetworkManagement::Rras::RASAUTODIALENTRYA*, param3 : UInt32, param4 : UInt32) : UInt32

    fun RasSetAutodialAddressW(param0 : Win32cr::Foundation::PWSTR, param1 : UInt32, param2 : Win32cr::NetworkManagement::Rras::RASAUTODIALENTRYW*, param3 : UInt32, param4 : UInt32) : UInt32

    fun RasEnumAutodialAddressesA(lppRasAutodialAddresses : Win32cr::Foundation::PSTR*, lpdwcbRasAutodialAddresses : UInt32*, lpdwcRasAutodialAddresses : UInt32*) : UInt32

    fun RasEnumAutodialAddressesW(lppRasAutodialAddresses : Win32cr::Foundation::PWSTR*, lpdwcbRasAutodialAddresses : UInt32*, lpdwcRasAutodialAddresses : UInt32*) : UInt32

    fun RasGetAutodialEnableA(param0 : UInt32, param1 : Int32*) : UInt32

    fun RasGetAutodialEnableW(param0 : UInt32, param1 : Int32*) : UInt32

    fun RasSetAutodialEnableA(param0 : UInt32, param1 : Win32cr::Foundation::BOOL) : UInt32

    fun RasSetAutodialEnableW(param0 : UInt32, param1 : Win32cr::Foundation::BOOL) : UInt32

    fun RasGetAutodialParamA(param0 : UInt32, param1 : Void*, param2 : UInt32*) : UInt32

    fun RasGetAutodialParamW(param0 : UInt32, param1 : Void*, param2 : UInt32*) : UInt32

    fun RasSetAutodialParamA(param0 : UInt32, param1 : Void*, param2 : UInt32) : UInt32

    fun RasSetAutodialParamW(param0 : UInt32, param1 : Void*, param2 : UInt32) : UInt32

    fun RasGetPCscf(lpszPCscf : Win32cr::Foundation::PWSTR) : UInt32

    fun RasInvokeEapUI(param0 : Win32cr::NetworkManagement::Rras::HRASCONN, param1 : UInt32, param2 : Win32cr::NetworkManagement::Rras::RASDIALEXTENSIONS*, param3 : Win32cr::Foundation::HWND) : UInt32

    fun RasGetLinkStatistics(hRasConn : Win32cr::NetworkManagement::Rras::HRASCONN, dwSubEntry : UInt32, lpStatistics : Win32cr::NetworkManagement::Rras::RAS_STATS*) : UInt32

    fun RasGetConnectionStatistics(hRasConn : Win32cr::NetworkManagement::Rras::HRASCONN, lpStatistics : Win32cr::NetworkManagement::Rras::RAS_STATS*) : UInt32

    fun RasClearLinkStatistics(hRasConn : Win32cr::NetworkManagement::Rras::HRASCONN, dwSubEntry : UInt32) : UInt32

    fun RasClearConnectionStatistics(hRasConn : Win32cr::NetworkManagement::Rras::HRASCONN) : UInt32

    fun RasGetEapUserDataA(hToken : Win32cr::Foundation::HANDLE, pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, pbEapData : UInt8*, pdwSizeofEapData : UInt32*) : UInt32

    fun RasGetEapUserDataW(hToken : Win32cr::Foundation::HANDLE, pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, pbEapData : UInt8*, pdwSizeofEapData : UInt32*) : UInt32

    fun RasSetEapUserDataA(hToken : Win32cr::Foundation::HANDLE, pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, pbEapData : UInt8*, dwSizeofEapData : UInt32) : UInt32

    fun RasSetEapUserDataW(hToken : Win32cr::Foundation::HANDLE, pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, pbEapData : UInt8*, dwSizeofEapData : UInt32) : UInt32

    fun RasGetCustomAuthDataA(pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, pbCustomAuthData : UInt8*, pdwSizeofCustomAuthData : UInt32*) : UInt32

    fun RasGetCustomAuthDataW(pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, pbCustomAuthData : UInt8*, pdwSizeofCustomAuthData : UInt32*) : UInt32

    fun RasSetCustomAuthDataA(pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, pbCustomAuthData : UInt8*, dwSizeofCustomAuthData : UInt32) : UInt32

    fun RasSetCustomAuthDataW(pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, pbCustomAuthData : UInt8*, dwSizeofCustomAuthData : UInt32) : UInt32

    fun RasGetEapUserIdentityW(pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, dwFlags : UInt32, hwnd : Win32cr::Foundation::HWND, ppRasEapUserIdentity : Win32cr::NetworkManagement::Rras::RASEAPUSERIDENTITYW**) : UInt32

    fun RasGetEapUserIdentityA(pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, dwFlags : UInt32, hwnd : Win32cr::Foundation::HWND, ppRasEapUserIdentity : Win32cr::NetworkManagement::Rras::RASEAPUSERIDENTITYA**) : UInt32

    fun RasFreeEapUserIdentityW(pRasEapUserIdentity : Win32cr::NetworkManagement::Rras::RASEAPUSERIDENTITYW*) : Void

    fun RasFreeEapUserIdentityA(pRasEapUserIdentity : Win32cr::NetworkManagement::Rras::RASEAPUSERIDENTITYA*) : Void

    fun RasDeleteSubEntryA(pszPhonebook : Win32cr::Foundation::PSTR, pszEntry : Win32cr::Foundation::PSTR, dwSubentryId : UInt32) : UInt32

    fun RasDeleteSubEntryW(pszPhonebook : Win32cr::Foundation::PWSTR, pszEntry : Win32cr::Foundation::PWSTR, dwSubEntryId : UInt32) : UInt32

    fun RasUpdateConnection(hrasconn : Win32cr::NetworkManagement::Rras::HRASCONN, lprasupdateconn : Win32cr::NetworkManagement::Rras::RASUPDATECONN*) : UInt32

    fun RasGetProjectionInfoEx(hrasconn : Win32cr::NetworkManagement::Rras::HRASCONN, pRasProjection : Win32cr::NetworkManagement::Rras::RAS_PROJECTION_INFO*, lpdwSize : UInt32*) : UInt32

    fun RasPhonebookDlgA(lpszPhonebook : Win32cr::Foundation::PSTR, lpszEntry : Win32cr::Foundation::PSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASPBDLGA*) : Win32cr::Foundation::BOOL

    fun RasPhonebookDlgW(lpszPhonebook : Win32cr::Foundation::PWSTR, lpszEntry : Win32cr::Foundation::PWSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASPBDLGW*) : Win32cr::Foundation::BOOL

    fun RasEntryDlgA(lpszPhonebook : Win32cr::Foundation::PSTR, lpszEntry : Win32cr::Foundation::PSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASENTRYDLGA*) : Win32cr::Foundation::BOOL

    fun RasEntryDlgW(lpszPhonebook : Win32cr::Foundation::PWSTR, lpszEntry : Win32cr::Foundation::PWSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASENTRYDLGW*) : Win32cr::Foundation::BOOL

    fun RasDialDlgA(lpszPhonebook : Win32cr::Foundation::PSTR, lpszEntry : Win32cr::Foundation::PSTR, lpszPhoneNumber : Win32cr::Foundation::PSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASDIALDLG*) : Win32cr::Foundation::BOOL

    fun RasDialDlgW(lpszPhonebook : Win32cr::Foundation::PWSTR, lpszEntry : Win32cr::Foundation::PWSTR, lpszPhoneNumber : Win32cr::Foundation::PWSTR, lpInfo : Win32cr::NetworkManagement::Rras::RASDIALDLG*) : Win32cr::Foundation::BOOL

    fun MprAdminConnectionEnumEx(hRasServer : LibC::IntPtrT, pObjectHeader : Win32cr::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER*, dwPreferedMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, ppRasConn : Win32cr::NetworkManagement::Rras::RAS_CONNECTION_EX**, lpdwResumeHandle : UInt32*) : UInt32

    fun MprAdminConnectionGetInfoEx(hRasServer : LibC::IntPtrT, hRasConnection : Win32cr::Foundation::HANDLE, pRasConnection : Win32cr::NetworkManagement::Rras::RAS_CONNECTION_EX*) : UInt32

    fun MprAdminServerGetInfoEx(hMprServer : LibC::IntPtrT, pServerInfo : Win32cr::NetworkManagement::Rras::MPR_SERVER_EX1*) : UInt32

    fun MprAdminServerSetInfoEx(hMprServer : LibC::IntPtrT, pServerInfo : Win32cr::NetworkManagement::Rras::MPR_SERVER_SET_CONFIG_EX1*) : UInt32

    fun MprConfigServerGetInfoEx(hMprConfig : Win32cr::Foundation::HANDLE, pServerInfo : Win32cr::NetworkManagement::Rras::MPR_SERVER_EX1*) : UInt32

    fun MprConfigServerSetInfoEx(hMprConfig : Win32cr::Foundation::HANDLE, pSetServerConfig : Win32cr::NetworkManagement::Rras::MPR_SERVER_SET_CONFIG_EX1*) : UInt32

    fun MprAdminUpdateConnection(hRasServer : LibC::IntPtrT, hRasConnection : Win32cr::Foundation::HANDLE, pRasUpdateConnection : Win32cr::NetworkManagement::Rras::RAS_UPDATE_CONNECTION*) : UInt32

    fun MprAdminIsServiceInitialized(lpwsServerName : Win32cr::Foundation::PWSTR, fIsServiceInitialized : Win32cr::Foundation::BOOL*) : UInt32

    fun MprAdminInterfaceSetCustomInfoEx(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, pCustomInfo : Win32cr::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2*) : UInt32

    fun MprAdminInterfaceGetCustomInfoEx(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, pCustomInfo : Win32cr::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2*) : UInt32

    fun MprConfigInterfaceGetCustomInfoEx(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, pCustomInfo : Win32cr::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2*) : UInt32

    fun MprConfigInterfaceSetCustomInfoEx(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, pCustomInfo : Win32cr::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2*) : UInt32

    fun MprAdminConnectionEnum(hRasServer : LibC::IntPtrT, dwLevel : UInt32, lplpbBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32

    fun MprAdminPortEnum(hRasServer : LibC::IntPtrT, dwLevel : UInt32, hRasConnection : Win32cr::Foundation::HANDLE, lplpbBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32

    fun MprAdminConnectionGetInfo(hRasServer : LibC::IntPtrT, dwLevel : UInt32, hRasConnection : Win32cr::Foundation::HANDLE, lplpbBuffer : UInt8**) : UInt32

    fun MprAdminPortGetInfo(hRasServer : LibC::IntPtrT, dwLevel : UInt32, hPort : Win32cr::Foundation::HANDLE, lplpbBuffer : UInt8**) : UInt32

    fun MprAdminConnectionClearStats(hRasServer : LibC::IntPtrT, hRasConnection : Win32cr::Foundation::HANDLE) : UInt32

    fun MprAdminPortClearStats(hRasServer : LibC::IntPtrT, hPort : Win32cr::Foundation::HANDLE) : UInt32

    fun MprAdminPortReset(hRasServer : LibC::IntPtrT, hPort : Win32cr::Foundation::HANDLE) : UInt32

    fun MprAdminPortDisconnect(hRasServer : LibC::IntPtrT, hPort : Win32cr::Foundation::HANDLE) : UInt32

    fun MprAdminConnectionRemoveQuarantine(hRasServer : Win32cr::Foundation::HANDLE, hRasConnection : Win32cr::Foundation::HANDLE, fIsIpAddress : Win32cr::Foundation::BOOL) : UInt32

    fun MprAdminUserGetInfo(lpszServer : Win32cr::Foundation::PWSTR, lpszUser : Win32cr::Foundation::PWSTR, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    fun MprAdminUserSetInfo(lpszServer : Win32cr::Foundation::PWSTR, lpszUser : Win32cr::Foundation::PWSTR, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    fun MprAdminSendUserMessage(hMprServer : LibC::IntPtrT, hConnection : Win32cr::Foundation::HANDLE, lpwszMessage : Win32cr::Foundation::PWSTR) : UInt32

    fun MprAdminGetPDCServer(lpszDomain : Win32cr::Foundation::PWSTR, lpszServer : Win32cr::Foundation::PWSTR, lpszPDCServer : Win32cr::Foundation::PWSTR) : UInt32

    fun MprAdminIsServiceRunning(lpwsServerName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    fun MprAdminServerConnect(lpwsServerName : Win32cr::Foundation::PWSTR, phMprServer : LibC::IntPtrT*) : UInt32

    fun MprAdminServerDisconnect(hMprServer : LibC::IntPtrT) : Void

    fun MprAdminServerGetCredentials(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lplpbBuffer : UInt8**) : UInt32

    fun MprAdminServerSetCredentials(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    fun MprAdminBufferFree(pBuffer : Void*) : UInt32

    fun MprAdminGetErrorString(dwError : UInt32, lplpwsErrorString : Win32cr::Foundation::PWSTR*) : UInt32

    fun MprAdminServerGetInfo(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lplpbBuffer : UInt8**) : UInt32

    fun MprAdminServerSetInfo(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    fun MprAdminEstablishDomainRasServer(pszDomain : Win32cr::Foundation::PWSTR, pszMachine : Win32cr::Foundation::PWSTR, bEnable : Win32cr::Foundation::BOOL) : UInt32

    fun MprAdminIsDomainRasServer(pszDomain : Win32cr::Foundation::PWSTR, pszMachine : Win32cr::Foundation::PWSTR, pbIsRasServer : Win32cr::Foundation::BOOL*) : UInt32

    fun MprAdminTransportCreate(hMprServer : LibC::IntPtrT, dwTransportId : UInt32, lpwsTransportName : Win32cr::Foundation::PWSTR, pGlobalInfo : UInt8*, dwGlobalInfoSize : UInt32, pClientInterfaceInfo : UInt8*, dwClientInterfaceInfoSize : UInt32, lpwsDLLPath : Win32cr::Foundation::PWSTR) : UInt32

    fun MprAdminTransportSetInfo(hMprServer : LibC::IntPtrT, dwTransportId : UInt32, pGlobalInfo : UInt8*, dwGlobalInfoSize : UInt32, pClientInterfaceInfo : UInt8*, dwClientInterfaceInfoSize : UInt32) : UInt32

    fun MprAdminTransportGetInfo(hMprServer : LibC::IntPtrT, dwTransportId : UInt32, ppGlobalInfo : UInt8**, lpdwGlobalInfoSize : UInt32*, ppClientInterfaceInfo : UInt8**, lpdwClientInterfaceInfoSize : UInt32*) : UInt32

    fun MprAdminDeviceEnum(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lplpbBuffer : UInt8**, lpdwTotalEntries : UInt32*) : UInt32

    fun MprAdminInterfaceGetHandle(hMprServer : LibC::IntPtrT, lpwsInterfaceName : Win32cr::Foundation::PWSTR, phInterface : Win32cr::Foundation::HANDLE*, fIncludeClientInterfaces : Win32cr::Foundation::BOOL) : UInt32

    fun MprAdminInterfaceCreate(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lpbBuffer : UInt8*, phInterface : Win32cr::Foundation::HANDLE*) : UInt32

    fun MprAdminInterfaceGetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpbBuffer : UInt8**) : UInt32

    fun MprAdminInterfaceSetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    fun MprAdminInterfaceDelete(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE) : UInt32

    fun MprAdminInterfaceDeviceGetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwIndex : UInt32, dwLevel : UInt32, lplpBuffer : UInt8**) : UInt32

    fun MprAdminInterfaceDeviceSetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwIndex : UInt32, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    fun MprAdminInterfaceTransportRemove(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32) : UInt32

    fun MprAdminInterfaceTransportAdd(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, pInterfaceInfo : UInt8*, dwInterfaceInfoSize : UInt32) : UInt32

    fun MprAdminInterfaceTransportGetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, ppInterfaceInfo : UInt8**, lpdwInterfaceInfoSize : UInt32*) : UInt32

    fun MprAdminInterfaceTransportSetInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, pInterfaceInfo : UInt8*, dwInterfaceInfoSize : UInt32) : UInt32

    fun MprAdminInterfaceEnum(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lplpbBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32

    fun MprAdminInterfaceSetCredentials(lpwsServer : Win32cr::Foundation::PWSTR, lpwsInterfaceName : Win32cr::Foundation::PWSTR, lpwsUserName : Win32cr::Foundation::PWSTR, lpwsDomainName : Win32cr::Foundation::PWSTR, lpwsPassword : Win32cr::Foundation::PWSTR) : UInt32

    fun MprAdminInterfaceGetCredentials(lpwsServer : Win32cr::Foundation::PWSTR, lpwsInterfaceName : Win32cr::Foundation::PWSTR, lpwsUserName : Win32cr::Foundation::PWSTR, lpwsPassword : Win32cr::Foundation::PWSTR, lpwsDomainName : Win32cr::Foundation::PWSTR) : UInt32

    fun MprAdminInterfaceSetCredentialsEx(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    fun MprAdminInterfaceGetCredentialsEx(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpbBuffer : UInt8**) : UInt32

    fun MprAdminInterfaceConnect(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, hEvent : Win32cr::Foundation::HANDLE, fSynchronous : Win32cr::Foundation::BOOL) : UInt32

    fun MprAdminInterfaceDisconnect(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE) : UInt32

    fun MprAdminInterfaceUpdateRoutes(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwProtocolId : UInt32, hEvent : Win32cr::Foundation::HANDLE) : UInt32

    fun MprAdminInterfaceQueryUpdateResult(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE, dwProtocolId : UInt32, lpdwUpdateResult : UInt32*) : UInt32

    fun MprAdminInterfaceUpdatePhonebookInfo(hMprServer : LibC::IntPtrT, hInterface : Win32cr::Foundation::HANDLE) : UInt32

    fun MprAdminRegisterConnectionNotification(hMprServer : LibC::IntPtrT, hEventNotification : Win32cr::Foundation::HANDLE) : UInt32

    fun MprAdminDeregisterConnectionNotification(hMprServer : LibC::IntPtrT, hEventNotification : Win32cr::Foundation::HANDLE) : UInt32

    fun MprAdminMIBServerConnect(lpwsServerName : Win32cr::Foundation::PWSTR, phMibServer : LibC::IntPtrT*) : UInt32

    fun MprAdminMIBServerDisconnect(hMibServer : LibC::IntPtrT) : Void

    fun MprAdminMIBEntryCreate(hMibServer : LibC::IntPtrT, dwPid : UInt32, dwRoutingPid : UInt32, lpEntry : Void*, dwEntrySize : UInt32) : UInt32

    fun MprAdminMIBEntryDelete(hMibServer : LibC::IntPtrT, dwProtocolId : UInt32, dwRoutingPid : UInt32, lpEntry : Void*, dwEntrySize : UInt32) : UInt32

    fun MprAdminMIBEntrySet(hMibServer : LibC::IntPtrT, dwProtocolId : UInt32, dwRoutingPid : UInt32, lpEntry : Void*, dwEntrySize : UInt32) : UInt32

    fun MprAdminMIBEntryGet(hMibServer : LibC::IntPtrT, dwProtocolId : UInt32, dwRoutingPid : UInt32, lpInEntry : Void*, dwInEntrySize : UInt32, lplpOutEntry : Void**, lpOutEntrySize : UInt32*) : UInt32

    fun MprAdminMIBEntryGetFirst(hMibServer : LibC::IntPtrT, dwProtocolId : UInt32, dwRoutingPid : UInt32, lpInEntry : Void*, dwInEntrySize : UInt32, lplpOutEntry : Void**, lpOutEntrySize : UInt32*) : UInt32

    fun MprAdminMIBEntryGetNext(hMibServer : LibC::IntPtrT, dwProtocolId : UInt32, dwRoutingPid : UInt32, lpInEntry : Void*, dwInEntrySize : UInt32, lplpOutEntry : Void**, lpOutEntrySize : UInt32*) : UInt32

    fun MprAdminMIBBufferFree(pBuffer : Void*) : UInt32

    fun MprConfigServerInstall(dwLevel : UInt32, pBuffer : Void*) : UInt32

    fun MprConfigServerConnect(lpwsServerName : Win32cr::Foundation::PWSTR, phMprConfig : Win32cr::Foundation::HANDLE*) : UInt32

    fun MprConfigServerDisconnect(hMprConfig : Win32cr::Foundation::HANDLE) : Void

    fun MprConfigServerRefresh(hMprConfig : Win32cr::Foundation::HANDLE) : UInt32

    fun MprConfigBufferFree(pBuffer : Void*) : UInt32

    fun MprConfigServerGetInfo(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpbBuffer : UInt8**) : UInt32

    fun MprConfigServerSetInfo(hMprServer : LibC::IntPtrT, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    fun MprConfigServerBackup(hMprConfig : Win32cr::Foundation::HANDLE, lpwsPath : Win32cr::Foundation::PWSTR) : UInt32

    fun MprConfigServerRestore(hMprConfig : Win32cr::Foundation::HANDLE, lpwsPath : Win32cr::Foundation::PWSTR) : UInt32

    fun MprConfigTransportCreate(hMprConfig : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, lpwsTransportName : Win32cr::Foundation::PWSTR, pGlobalInfo : UInt8*, dwGlobalInfoSize : UInt32, pClientInterfaceInfo : UInt8*, dwClientInterfaceInfoSize : UInt32, lpwsDLLPath : Win32cr::Foundation::PWSTR, phRouterTransport : Win32cr::Foundation::HANDLE*) : UInt32

    fun MprConfigTransportDelete(hMprConfig : Win32cr::Foundation::HANDLE, hRouterTransport : Win32cr::Foundation::HANDLE) : UInt32

    fun MprConfigTransportGetHandle(hMprConfig : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, phRouterTransport : Win32cr::Foundation::HANDLE*) : UInt32

    fun MprConfigTransportSetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterTransport : Win32cr::Foundation::HANDLE, pGlobalInfo : UInt8*, dwGlobalInfoSize : UInt32, pClientInterfaceInfo : UInt8*, dwClientInterfaceInfoSize : UInt32, lpwsDLLPath : Win32cr::Foundation::PWSTR) : UInt32

    fun MprConfigTransportGetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterTransport : Win32cr::Foundation::HANDLE, ppGlobalInfo : UInt8**, lpdwGlobalInfoSize : UInt32*, ppClientInterfaceInfo : UInt8**, lpdwClientInterfaceInfoSize : UInt32*, lplpwsDLLPath : Win32cr::Foundation::PWSTR*) : UInt32

    fun MprConfigTransportEnum(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32

    fun MprConfigInterfaceCreate(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lpbBuffer : UInt8*, phRouterInterface : Win32cr::Foundation::HANDLE*) : UInt32

    fun MprConfigInterfaceDelete(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE) : UInt32

    fun MprConfigInterfaceGetHandle(hMprConfig : Win32cr::Foundation::HANDLE, lpwsInterfaceName : Win32cr::Foundation::PWSTR, phRouterInterface : Win32cr::Foundation::HANDLE*) : UInt32

    fun MprConfigInterfaceGetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpBuffer : UInt8**, lpdwBufferSize : UInt32*) : UInt32

    fun MprConfigInterfaceSetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lpbBuffer : UInt8*) : UInt32

    fun MprConfigInterfaceEnum(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32

    fun MprConfigInterfaceTransportAdd(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, lpwsTransportName : Win32cr::Foundation::PWSTR, pInterfaceInfo : UInt8*, dwInterfaceInfoSize : UInt32, phRouterIfTransport : Win32cr::Foundation::HANDLE*) : UInt32

    fun MprConfigInterfaceTransportRemove(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, hRouterIfTransport : Win32cr::Foundation::HANDLE) : UInt32

    fun MprConfigInterfaceTransportGetHandle(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, dwTransportId : UInt32, phRouterIfTransport : Win32cr::Foundation::HANDLE*) : UInt32

    fun MprConfigInterfaceTransportGetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, hRouterIfTransport : Win32cr::Foundation::HANDLE, ppInterfaceInfo : UInt8**, lpdwInterfaceInfoSize : UInt32*) : UInt32

    fun MprConfigInterfaceTransportSetInfo(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, hRouterIfTransport : Win32cr::Foundation::HANDLE, pInterfaceInfo : UInt8*, dwInterfaceInfoSize : UInt32) : UInt32

    fun MprConfigInterfaceTransportEnum(hMprConfig : Win32cr::Foundation::HANDLE, hRouterInterface : Win32cr::Foundation::HANDLE, dwLevel : UInt32, lplpBuffer : UInt8**, dwPrefMaxLen : UInt32, lpdwEntriesRead : UInt32*, lpdwTotalEntries : UInt32*, lpdwResumeHandle : UInt32*) : UInt32

    fun MprConfigGetFriendlyName(hMprConfig : Win32cr::Foundation::HANDLE, pszGuidName : Win32cr::Foundation::PWSTR, pszBuffer : Win32cr::Foundation::PWSTR, dwBufferSize : UInt32) : UInt32

    fun MprConfigGetGuidName(hMprConfig : Win32cr::Foundation::HANDLE, pszFriendlyName : Win32cr::Foundation::PWSTR, pszBuffer : Win32cr::Foundation::PWSTR, dwBufferSize : UInt32) : UInt32

    fun MprConfigFilterGetInfo(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, dwTransportId : UInt32, lpBuffer : UInt8*) : UInt32

    fun MprConfigFilterSetInfo(hMprConfig : Win32cr::Foundation::HANDLE, dwLevel : UInt32, dwTransportId : UInt32, lpBuffer : UInt8*) : UInt32

    fun MprInfoCreate(dwVersion : UInt32, lplpNewHeader : Void**) : UInt32

    fun MprInfoDelete(lpHeader : Void*) : UInt32

    fun MprInfoRemoveAll(lpHeader : Void*, lplpNewHeader : Void**) : UInt32

    fun MprInfoDuplicate(lpHeader : Void*, lplpNewHeader : Void**) : UInt32

    fun MprInfoBlockAdd(lpHeader : Void*, dwInfoType : UInt32, dwItemSize : UInt32, dwItemCount : UInt32, lpItemData : UInt8*, lplpNewHeader : Void**) : UInt32

    fun MprInfoBlockRemove(lpHeader : Void*, dwInfoType : UInt32, lplpNewHeader : Void**) : UInt32

    fun MprInfoBlockSet(lpHeader : Void*, dwInfoType : UInt32, dwItemSize : UInt32, dwItemCount : UInt32, lpItemData : UInt8*, lplpNewHeader : Void**) : UInt32

    fun MprInfoBlockFind(lpHeader : Void*, dwInfoType : UInt32, lpdwItemSize : UInt32*, lpdwItemCount : UInt32*, lplpItemData : UInt8**) : UInt32

    fun MprInfoBlockQuerySize(lpHeader : Void*) : UInt32

    fun MgmRegisterMProtocol(prpiInfo : Win32cr::NetworkManagement::Rras::ROUTING_PROTOCOL_CONFIG*, dwProtocolId : UInt32, dwComponentId : UInt32, phProtocol : Win32cr::Foundation::HANDLE*) : UInt32

    fun MgmDeRegisterMProtocol(hProtocol : Win32cr::Foundation::HANDLE) : UInt32

    fun MgmTakeInterfaceOwnership(hProtocol : Win32cr::Foundation::HANDLE, dwIfIndex : UInt32, dwIfNextHopAddr : UInt32) : UInt32

    fun MgmReleaseInterfaceOwnership(hProtocol : Win32cr::Foundation::HANDLE, dwIfIndex : UInt32, dwIfNextHopAddr : UInt32) : UInt32

    fun MgmGetProtocolOnInterface(dwIfIndex : UInt32, dwIfNextHopAddr : UInt32, pdwIfProtocolId : UInt32*, pdwIfComponentId : UInt32*) : UInt32

    fun MgmAddGroupMembershipEntry(hProtocol : Win32cr::Foundation::HANDLE, dwSourceAddr : UInt32, dwSourceMask : UInt32, dwGroupAddr : UInt32, dwGroupMask : UInt32, dwIfIndex : UInt32, dwIfNextHopIPAddr : UInt32, dwFlags : UInt32) : UInt32

    fun MgmDeleteGroupMembershipEntry(hProtocol : Win32cr::Foundation::HANDLE, dwSourceAddr : UInt32, dwSourceMask : UInt32, dwGroupAddr : UInt32, dwGroupMask : UInt32, dwIfIndex : UInt32, dwIfNextHopIPAddr : UInt32, dwFlags : UInt32) : UInt32

    fun MgmGetMfe(pimm : Win32cr::NetworkManagement::IpHelper::MIB_IPMCAST_MFE*, pdwBufferSize : UInt32*, pbBuffer : UInt8*) : UInt32

    fun MgmGetFirstMfe(pdwBufferSize : UInt32*, pbBuffer : UInt8*, pdwNumEntries : UInt32*) : UInt32

    fun MgmGetNextMfe(pimmStart : Win32cr::NetworkManagement::IpHelper::MIB_IPMCAST_MFE*, pdwBufferSize : UInt32*, pbBuffer : UInt8*, pdwNumEntries : UInt32*) : UInt32

    fun MgmGetMfeStats(pimm : Win32cr::NetworkManagement::IpHelper::MIB_IPMCAST_MFE*, pdwBufferSize : UInt32*, pbBuffer : UInt8*, dwFlags : UInt32) : UInt32

    fun MgmGetFirstMfeStats(pdwBufferSize : UInt32*, pbBuffer : UInt8*, pdwNumEntries : UInt32*, dwFlags : UInt32) : UInt32

    fun MgmGetNextMfeStats(pimmStart : Win32cr::NetworkManagement::IpHelper::MIB_IPMCAST_MFE*, pdwBufferSize : UInt32*, pbBuffer : UInt8*, pdwNumEntries : UInt32*, dwFlags : UInt32) : UInt32

    fun MgmGroupEnumerationStart(hProtocol : Win32cr::Foundation::HANDLE, metEnumType : Win32cr::NetworkManagement::Rras::MGM_ENUM_TYPES, phEnumHandle : Win32cr::Foundation::HANDLE*) : UInt32

    fun MgmGroupEnumerationGetNext(hEnum : Win32cr::Foundation::HANDLE, pdwBufferSize : UInt32*, pbBuffer : UInt8*, pdwNumEntries : UInt32*) : UInt32

    fun MgmGroupEnumerationEnd(hEnum : Win32cr::Foundation::HANDLE) : UInt32

    fun RtmConvertNetAddressToIpv6AddressAndLength(pNetAddress : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, pAddress : Win32cr::Networking::WinSock::IN6_ADDR*, pLength : UInt32*, dwAddressSize : UInt32) : UInt32

    fun RtmConvertIpv6AddressAndLengthToNetAddress(pNetAddress : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, address : Win32cr::Networking::WinSock::IN6_ADDR, dwLength : UInt32, dwAddressSize : UInt32) : UInt32

    fun RtmRegisterEntity(rtm_entity_info : Win32cr::NetworkManagement::Rras::RTM_ENTITY_INFO*, export_methods : Win32cr::NetworkManagement::Rras::RTM_ENTITY_EXPORT_METHODS*, event_callback : Win32cr::NetworkManagement::Rras::RTM_EVENT_CALLBACK, reserve_opaque_pointer : Win32cr::Foundation::BOOL, rtm_reg_profile : Win32cr::NetworkManagement::Rras::RTM_REGN_PROFILE*, rtm_reg_handle : LibC::IntPtrT*) : UInt32

    fun RtmDeregisterEntity(rtm_reg_handle : LibC::IntPtrT) : UInt32

    fun RtmGetRegisteredEntities(rtm_reg_handle : LibC::IntPtrT, num_entities : UInt32*, entity_handles : LibC::IntPtrT*, entity_infos : Win32cr::NetworkManagement::Rras::RTM_ENTITY_INFO*) : UInt32

    fun RtmReleaseEntities(rtm_reg_handle : LibC::IntPtrT, num_entities : UInt32, entity_handles : LibC::IntPtrT*) : UInt32

    fun RtmLockDestination(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, exclusive : Win32cr::Foundation::BOOL, lock_dest : Win32cr::Foundation::BOOL) : UInt32

    fun RtmGetOpaqueInformationPointer(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, opaque_info_pointer : Void**) : UInt32

    fun RtmGetEntityMethods(rtm_reg_handle : LibC::IntPtrT, entity_handle : LibC::IntPtrT, num_methods : UInt32*, expt_methods : Win32cr::NetworkManagement::Rras::RTM_ENTITY_EXPORT_METHOD*) : UInt32

    fun RtmInvokeMethod(rtm_reg_handle : LibC::IntPtrT, entity_handle : LibC::IntPtrT, input : Win32cr::NetworkManagement::Rras::RTM_ENTITY_METHOD_INPUT*, output_size : UInt32*, output : Win32cr::NetworkManagement::Rras::RTM_ENTITY_METHOD_OUTPUT*) : UInt32

    fun RtmBlockMethods(rtm_reg_handle : LibC::IntPtrT, target_handle : Win32cr::Foundation::HANDLE, target_type : UInt8, blocking_flag : UInt32) : UInt32

    fun RtmGetEntityInfo(rtm_reg_handle : LibC::IntPtrT, entity_handle : LibC::IntPtrT, entity_info : Win32cr::NetworkManagement::Rras::RTM_ENTITY_INFO*) : UInt32

    fun RtmGetDestInfo(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, protocol_id : UInt32, target_views : UInt32, dest_info : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    fun RtmGetRouteInfo(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, route_info : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO*, dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*) : UInt32

    fun RtmGetNextHopInfo(rtm_reg_handle : LibC::IntPtrT, next_hop_handle : LibC::IntPtrT, next_hop_info : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO*) : UInt32

    fun RtmReleaseEntityInfo(rtm_reg_handle : LibC::IntPtrT, entity_info : Win32cr::NetworkManagement::Rras::RTM_ENTITY_INFO*) : UInt32

    fun RtmReleaseDestInfo(rtm_reg_handle : LibC::IntPtrT, dest_info : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    fun RtmReleaseRouteInfo(rtm_reg_handle : LibC::IntPtrT, route_info : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO*) : UInt32

    fun RtmReleaseNextHopInfo(rtm_reg_handle : LibC::IntPtrT, next_hop_info : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO*) : UInt32

    fun RtmAddRouteToDest(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT*, dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, route_info : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO*, time_to_live : UInt32, route_list_handle : LibC::IntPtrT, notify_type : UInt32, notify_handle : LibC::IntPtrT, change_flags : UInt32*) : UInt32

    fun RtmDeleteRouteToDest(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, change_flags : UInt32*) : UInt32

    fun RtmHoldDestination(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, target_views : UInt32, hold_time : UInt32) : UInt32

    fun RtmGetRoutePointer(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, route_pointer : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO**) : UInt32

    fun RtmLockRoute(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, exclusive : Win32cr::Foundation::BOOL, lock_route : Win32cr::Foundation::BOOL, route_pointer : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO**) : UInt32

    fun RtmUpdateAndUnlockRoute(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, time_to_live : UInt32, route_list_handle : LibC::IntPtrT, notify_type : UInt32, notify_handle : LibC::IntPtrT, change_flags : UInt32*) : UInt32

    fun RtmGetExactMatchDestination(rtm_reg_handle : LibC::IntPtrT, dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, protocol_id : UInt32, target_views : UInt32, dest_info : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    fun RtmGetMostSpecificDestination(rtm_reg_handle : LibC::IntPtrT, dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, protocol_id : UInt32, target_views : UInt32, dest_info : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    fun RtmGetLessSpecificDestination(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, protocol_id : UInt32, target_views : UInt32, dest_info : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    fun RtmGetExactMatchRoute(rtm_reg_handle : LibC::IntPtrT, dest_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, matching_flags : UInt32, route_info : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO*, interface_index : UInt32, target_views : UInt32, route_handle : LibC::IntPtrT*) : UInt32

    fun RtmIsBestRoute(rtm_reg_handle : LibC::IntPtrT, route_handle : LibC::IntPtrT, best_in_views : UInt32*) : UInt32

    fun RtmAddNextHop(rtm_reg_handle : LibC::IntPtrT, next_hop_info : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO*, next_hop_handle : LibC::IntPtrT*, change_flags : UInt32*) : UInt32

    fun RtmFindNextHop(rtm_reg_handle : LibC::IntPtrT, next_hop_info : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO*, next_hop_handle : LibC::IntPtrT*, next_hop_pointer : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO**) : UInt32

    fun RtmDeleteNextHop(rtm_reg_handle : LibC::IntPtrT, next_hop_handle : LibC::IntPtrT, next_hop_info : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO*) : UInt32

    fun RtmGetNextHopPointer(rtm_reg_handle : LibC::IntPtrT, next_hop_handle : LibC::IntPtrT, next_hop_pointer : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO**) : UInt32

    fun RtmLockNextHop(rtm_reg_handle : LibC::IntPtrT, next_hop_handle : LibC::IntPtrT, exclusive : Win32cr::Foundation::BOOL, lock_next_hop : Win32cr::Foundation::BOOL, next_hop_pointer : Win32cr::NetworkManagement::Rras::RTM_NEXTHOP_INFO**) : UInt32

    fun RtmCreateDestEnum(rtm_reg_handle : LibC::IntPtrT, target_views : UInt32, enum_flags : UInt32, net_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, protocol_id : UInt32, rtm_enum_handle : LibC::IntPtrT*) : UInt32

    fun RtmGetEnumDests(rtm_reg_handle : LibC::IntPtrT, enum_handle : LibC::IntPtrT, num_dests : UInt32*, dest_infos : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    fun RtmReleaseDests(rtm_reg_handle : LibC::IntPtrT, num_dests : UInt32, dest_infos : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    fun RtmCreateRouteEnum(rtm_reg_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, target_views : UInt32, enum_flags : UInt32, start_dest : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, matching_flags : UInt32, criteria_route : Win32cr::NetworkManagement::Rras::RTM_ROUTE_INFO*, criteria_interface : UInt32, rtm_enum_handle : LibC::IntPtrT*) : UInt32

    fun RtmGetEnumRoutes(rtm_reg_handle : LibC::IntPtrT, enum_handle : LibC::IntPtrT, num_routes : UInt32*, route_handles : LibC::IntPtrT*) : UInt32

    fun RtmReleaseRoutes(rtm_reg_handle : LibC::IntPtrT, num_routes : UInt32, route_handles : LibC::IntPtrT*) : UInt32

    fun RtmCreateNextHopEnum(rtm_reg_handle : LibC::IntPtrT, enum_flags : UInt32, net_address : Win32cr::NetworkManagement::Rras::RTM_NET_ADDRESS*, rtm_enum_handle : LibC::IntPtrT*) : UInt32

    fun RtmGetEnumNextHops(rtm_reg_handle : LibC::IntPtrT, enum_handle : LibC::IntPtrT, num_next_hops : UInt32*, next_hop_handles : LibC::IntPtrT*) : UInt32

    fun RtmReleaseNextHops(rtm_reg_handle : LibC::IntPtrT, num_next_hops : UInt32, next_hop_handles : LibC::IntPtrT*) : UInt32

    fun RtmDeleteEnumHandle(rtm_reg_handle : LibC::IntPtrT, enum_handle : LibC::IntPtrT) : UInt32

    fun RtmRegisterForChangeNotification(rtm_reg_handle : LibC::IntPtrT, target_views : UInt32, notify_flags : UInt32, notify_context : Void*, notify_handle : LibC::IntPtrT*) : UInt32

    fun RtmGetChangedDests(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, num_dests : UInt32*, changed_dests : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    fun RtmReleaseChangedDests(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, num_dests : UInt32, changed_dests : Win32cr::NetworkManagement::Rras::RTM_DEST_INFO*) : UInt32

    fun RtmIgnoreChangedDests(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, num_dests : UInt32, changed_dests : LibC::IntPtrT*) : UInt32

    fun RtmGetChangeStatus(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, change_status : Win32cr::Foundation::BOOL*) : UInt32

    fun RtmMarkDestForChangeNotification(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, mark_dest : Win32cr::Foundation::BOOL) : UInt32

    fun RtmIsMarkedForChangeNotification(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT, dest_handle : LibC::IntPtrT, dest_marked : Win32cr::Foundation::BOOL*) : UInt32

    fun RtmDeregisterFromChangeNotification(rtm_reg_handle : LibC::IntPtrT, notify_handle : LibC::IntPtrT) : UInt32

    fun RtmCreateRouteList(rtm_reg_handle : LibC::IntPtrT, route_list_handle : LibC::IntPtrT*) : UInt32

    fun RtmInsertInRouteList(rtm_reg_handle : LibC::IntPtrT, route_list_handle : LibC::IntPtrT, num_routes : UInt32, route_handles : LibC::IntPtrT*) : UInt32

    fun RtmCreateRouteListEnum(rtm_reg_handle : LibC::IntPtrT, route_list_handle : LibC::IntPtrT, rtm_enum_handle : LibC::IntPtrT*) : UInt32

    fun RtmGetListEnumRoutes(rtm_reg_handle : LibC::IntPtrT, enum_handle : LibC::IntPtrT, num_routes : UInt32*, route_handles : LibC::IntPtrT*) : UInt32

    fun RtmDeleteRouteList(rtm_reg_handle : LibC::IntPtrT, route_list_handle : LibC::IntPtrT) : UInt32

    fun RtmReferenceHandles(rtm_reg_handle : LibC::IntPtrT, num_handles : UInt32, rtm_handles : Win32cr::Foundation::HANDLE*) : UInt32

  end
end