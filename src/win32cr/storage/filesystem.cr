require "../foundation.cr"
require "../security.cr"
require "../system/com.cr"
require "../system/io.cr"
require "../system/windowsprogramming.cr"

{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link("delayimp")]
{% end %}
@[Link("user32")]
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/IGNORE:4199")]
{% end %}
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/DELAYLOAD:onecoreuap.dll")]
@[Link(ldflags: "/DELAYLOAD:version.dll")]
@[Link(ldflags: "/DELAYLOAD:clfsw32.dll")]
@[Link(ldflags: "/DELAYLOAD:advapi32.dll")]
@[Link(ldflags: "/DELAYLOAD:wofutil.dll")]
@[Link(ldflags: "/DELAYLOAD:txfw32.dll")]
@[Link(ldflags: "/DELAYLOAD:ktmw32.dll")]
@[Link(ldflags: "/DELAYLOAD:netapi32.dll")]
{% else %}
@[Link("onecoreuap")]
@[Link("version")]
@[Link("clfsw32")]
@[Link("advapi32")]
@[Link("wofutil")]
@[Link("txfw32")]
@[Link("ktmw32")]
@[Link("netapi32")]
{% end %}
lib LibWin32
  alias FindFileHandle = LibC::IntPtrT
  alias FindFileNameHandle = LibC::IntPtrT
  alias FindStreamHandle = LibC::IntPtrT
  alias FindChangeNotificationHandle = LibC::IntPtrT
  alias FindVolumeHandle = LibC::IntPtrT
  alias FindVolumeMointPointHandle = LibC::IntPtrT

  CLFS_FLAG_REENTRANT_FILE_SYSTEM = 8_u32
  CLFS_FLAG_NON_REENTRANT_FILTER = 16_u32
  CLFS_FLAG_REENTRANT_FILTER = 32_u32
  CLFS_FLAG_IGNORE_SHARE_ACCESS = 64_u32
  CLFS_FLAG_READ_IN_PROGRESS = 128_u32
  CLFS_FLAG_MINIFILTER_LEVEL = 256_u32
  CLFS_FLAG_HIDDEN_SYSTEM_LOG = 512_u32
  CLFS_MARSHALLING_FLAG_NONE = 0_u32
  CLFS_MARSHALLING_FLAG_DISABLE_BUFF_INIT = 1_u32
  CLFS_FLAG_FILTER_INTERMEDIATE_LEVEL = 16_u32
  CLFS_FLAG_FILTER_TOP_LEVEL = 32_u32
  TRANSACTION_MANAGER_VOLATILE = 1_u32
  TRANSACTION_MANAGER_COMMIT_DEFAULT = 0_u32
  TRANSACTION_MANAGER_COMMIT_SYSTEM_VOLUME = 2_u32
  TRANSACTION_MANAGER_COMMIT_SYSTEM_HIVES = 4_u32
  TRANSACTION_MANAGER_COMMIT_LOWEST = 8_u32
  TRANSACTION_MANAGER_CORRUPT_FOR_RECOVERY = 16_u32
  TRANSACTION_MANAGER_CORRUPT_FOR_PROGRESS = 32_u32
  TRANSACTION_MANAGER_MAXIMUM_OPTION = 63_u32
  TRANSACTION_DO_NOT_PROMOTE = 1_u32
  TRANSACTION_MAXIMUM_OPTION = 1_u32
  RESOURCE_MANAGER_VOLATILE = 1_u32
  RESOURCE_MANAGER_COMMUNICATION = 2_u32
  RESOURCE_MANAGER_MAXIMUM_OPTION = 3_u32
  CRM_PROTOCOL_EXPLICIT_MARSHAL_ONLY = 1_u32
  CRM_PROTOCOL_DYNAMIC_MARSHAL_INFO = 2_u32
  CRM_PROTOCOL_MAXIMUM_OPTION = 3_u32
  ENLISTMENT_SUPERIOR = 1_u32
  ENLISTMENT_MAXIMUM_OPTION = 1_u32
  TRANSACTION_NOTIFY_MASK = 1073741823_u32
  TRANSACTION_NOTIFY_PREPREPARE = 1_u32
  TRANSACTION_NOTIFY_PREPARE = 2_u32
  TRANSACTION_NOTIFY_COMMIT = 4_u32
  TRANSACTION_NOTIFY_ROLLBACK = 8_u32
  TRANSACTION_NOTIFY_PREPREPARE_COMPLETE = 16_u32
  TRANSACTION_NOTIFY_PREPARE_COMPLETE = 32_u32
  TRANSACTION_NOTIFY_COMMIT_COMPLETE = 64_u32
  TRANSACTION_NOTIFY_ROLLBACK_COMPLETE = 128_u32
  TRANSACTION_NOTIFY_RECOVER = 256_u32
  TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT = 512_u32
  TRANSACTION_NOTIFY_DELEGATE_COMMIT = 1024_u32
  TRANSACTION_NOTIFY_RECOVER_QUERY = 2048_u32
  TRANSACTION_NOTIFY_ENLIST_PREPREPARE = 4096_u32
  TRANSACTION_NOTIFY_LAST_RECOVER = 8192_u32
  TRANSACTION_NOTIFY_INDOUBT = 16384_u32
  TRANSACTION_NOTIFY_PROPAGATE_PULL = 32768_u32
  TRANSACTION_NOTIFY_PROPAGATE_PUSH = 65536_u32
  TRANSACTION_NOTIFY_MARSHAL = 131072_u32
  TRANSACTION_NOTIFY_ENLIST_MASK = 262144_u32
  TRANSACTION_NOTIFY_RM_DISCONNECTED = 16777216_u32
  TRANSACTION_NOTIFY_TM_ONLINE = 33554432_u32
  TRANSACTION_NOTIFY_COMMIT_REQUEST = 67108864_u32
  TRANSACTION_NOTIFY_PROMOTE = 134217728_u32
  TRANSACTION_NOTIFY_PROMOTE_NEW = 268435456_u32
  TRANSACTION_NOTIFY_REQUEST_OUTCOME = 536870912_u32
  TRANSACTION_NOTIFY_COMMIT_FINALIZE = 1073741824_u32
  TRANSACTION_NOTIFICATION_TM_ONLINE_FLAG_IS_CLUSTERED = 1_u32
  KTM_MARSHAL_BLOB_VERSION_MAJOR = 1_u32
  KTM_MARSHAL_BLOB_VERSION_MINOR = 1_u32
  MAX_TRANSACTION_DESCRIPTION_LENGTH = 64_u32
  MAX_RESOURCEMANAGER_DESCRIPTION_LENGTH = 64_u32
  IOCTL_VOLUME_BASE = 86_u32
  IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS = 5636096_u32
  IOCTL_VOLUME_ONLINE = 5685256_u32
  IOCTL_VOLUME_OFFLINE = 5685260_u32
  IOCTL_VOLUME_IS_CLUSTERED = 5636144_u32
  IOCTL_VOLUME_GET_GPT_ATTRIBUTES = 5636152_u32
  IOCTL_VOLUME_SUPPORTS_ONLINE_OFFLINE = 5636100_u32
  IOCTL_VOLUME_IS_OFFLINE = 5636112_u32
  IOCTL_VOLUME_IS_IO_CAPABLE = 5636116_u32
  IOCTL_VOLUME_QUERY_FAILOVER_SET = 5636120_u32
  IOCTL_VOLUME_QUERY_VOLUME_NUMBER = 5636124_u32
  IOCTL_VOLUME_LOGICAL_TO_PHYSICAL = 5636128_u32
  IOCTL_VOLUME_PHYSICAL_TO_LOGICAL = 5636132_u32
  IOCTL_VOLUME_IS_PARTITION = 5636136_u32
  IOCTL_VOLUME_READ_PLEX = 5652526_u32
  IOCTL_VOLUME_SET_GPT_ATTRIBUTES = 5636148_u32
  IOCTL_VOLUME_GET_BC_PROPERTIES = 5652540_u32
  IOCTL_VOLUME_ALLOCATE_BC_STREAM = 5685312_u32
  IOCTL_VOLUME_FREE_BC_STREAM = 5685316_u32
  IOCTL_VOLUME_BC_VERSION = 1_u32
  IOCTL_VOLUME_IS_DYNAMIC = 5636168_u32
  IOCTL_VOLUME_PREPARE_FOR_CRITICAL_IO = 5685324_u32
  IOCTL_VOLUME_QUERY_ALLOCATION_HINT = 5652562_u32
  IOCTL_VOLUME_UPDATE_PROPERTIES = 5636180_u32
  IOCTL_VOLUME_QUERY_MINIMUM_SHRINK_SIZE = 5652568_u32
  IOCTL_VOLUME_PREPARE_FOR_SHRINK = 5685340_u32
  IOCTL_VOLUME_IS_CSV = 5636192_u32
  IOCTL_VOLUME_POST_ONLINE = 5685348_u32
  IOCTL_VOLUME_GET_CSVBLOCKCACHE_CALLBACK = 5685352_u32
  CSV_BLOCK_CACHE_CALLBACK_VERSION = 1_u32
  CSV_BLOCK_AND_FILE_CACHE_CALLBACK_VERSION = 2_u32
  PARTITION_BASIC_DATA_GUID = "ebd0a0a2-b9e5-4433-87c0-68b6b72699c7"
  PARTITION_BSP_GUID = "57434f53-4df9-45b9-8e9e-2370f006457c"
  PARTITION_CLUSTER_GUID = "db97dba9-0840-4bae-97f0-ffb9a327c7e1"
  PARTITION_DPP_GUID = "57434f53-94cb-43f0-a533-d73c10cfa57d"
  PARTITION_ENTRY_UNUSED_GUID = "00000000-0000-0000-0000-000000000000"
  PARTITION_LDM_DATA_GUID = "af9b60a0-1431-4f62-bc68-3311714a69ad"
  PARTITION_LDM_METADATA_GUID = "5808c8aa-7e8f-42e0-85d2-e1e90434cfb3"
  PARTITION_LEGACY_BL_GUID = "424ca0e2-7cb2-4fb9-8143-c52a99398bc6"
  PARTITION_LEGACY_BL_GUID_BACKUP = "424c3e6c-d79f-49cb-935d-36d71467a288"
  PARTITION_MAIN_OS_GUID = "57434f53-8f45-405e-8a23-186d8a4330d3"
  PARTITION_MSFT_RECOVERY_GUID = "de94bba4-06d1-4d40-a16a-bfd50179d6ac"
  PARTITION_MSFT_RESERVED_GUID = "e3c9e316-0b5c-4db8-817d-f92df00215ae"
  PARTITION_MSFT_SNAPSHOT_GUID = "caddebf1-4400-4de8-b103-12117dcf3ccf"
  PARTITION_OS_DATA_GUID = "57434f53-23f2-44d5-a830-67bbdaa609f9"
  PARTITION_PATCH_GUID = "8967a686-96aa-6aa8-9589-a84256541090"
  PARTITION_PRE_INSTALLED_GUID = "57434f53-7fe0-4196-9b42-427b51643484"
  PARTITION_SERVICING_FILES_GUID = "57434f53-432e-4014-ae4c-8deaa9c0006a"
  PARTITION_SERVICING_METADATA_GUID = "57434f53-c691-4a05-bb4e-703dafd229ce"
  PARTITION_SERVICING_RESERVE_GUID = "57434f53-4b81-460b-a319-ffb6fe136d14"
  PARTITION_SERVICING_STAGING_ROOT_GUID = "57434f53-e84d-4e84-aaf3-ecbbbd04b9df"
  PARTITION_SPACES_GUID = "e75caf8f-f680-4cee-afa3-b001e56efc2d"
  PARTITION_SPACES_DATA_GUID = "e7addcb4-dc34-4539-9a76-ebbd07be6f7e"
  PARTITION_SYSTEM_GUID = "c12a7328-f81f-11d2-ba4b-00a0c93ec93b"
  PARTITION_WINDOWS_SYSTEM_GUID = "57434f53-e3e3-4631-a5c5-26d2243873aa"
  FT_TYPES_DEFINITION_ = 1_u32
  CLFS_MGMT_POLICY_VERSION = 1_u32
  LOG_POLICY_OVERWRITE = 1_u32
  LOG_POLICY_PERSIST = 2_u32
  CLFS_MGMT_CLIENT_REGISTRATION_VERSION = 1_u32
  CLSID_DiskQuotaControl = "7988b571-ec89-11cf-9c00-00aa00a14f56"
  DISKQUOTA_STATE_DISABLED = 0_u32
  DISKQUOTA_STATE_TRACK = 1_u32
  DISKQUOTA_STATE_ENFORCE = 2_u32
  DISKQUOTA_STATE_MASK = 3_u32
  DISKQUOTA_FILESTATE_INCOMPLETE = 256_u32
  DISKQUOTA_FILESTATE_REBUILDING = 512_u32
  DISKQUOTA_FILESTATE_MASK = 768_u32
  DISKQUOTA_LOGFLAG_USER_THRESHOLD = 1_u32
  DISKQUOTA_LOGFLAG_USER_LIMIT = 2_u32
  DISKQUOTA_USER_ACCOUNT_RESOLVED = 0_u32
  DISKQUOTA_USER_ACCOUNT_UNAVAILABLE = 1_u32
  DISKQUOTA_USER_ACCOUNT_DELETED = 2_u32
  DISKQUOTA_USER_ACCOUNT_INVALID = 3_u32
  DISKQUOTA_USER_ACCOUNT_UNKNOWN = 4_u32
  DISKQUOTA_USER_ACCOUNT_UNRESOLVED = 5_u32
  INVALID_SET_FILE_POINTER = 4294967295_u32
  INVALID_FILE_ATTRIBUTES = 4294967295_u32
  SHARE_NETNAME_PARMNUM = 1_u32
  SHARE_TYPE_PARMNUM = 3_u32
  SHARE_REMARK_PARMNUM = 4_u32
  SHARE_PERMISSIONS_PARMNUM = 5_u32
  SHARE_MAX_USES_PARMNUM = 6_u32
  SHARE_CURRENT_USES_PARMNUM = 7_u32
  SHARE_PATH_PARMNUM = 8_u32
  SHARE_PASSWD_PARMNUM = 9_u32
  SHARE_FILE_SD_PARMNUM = 501_u32
  SHARE_SERVER_PARMNUM = 503_u32
  SHI1_NUM_ELEMENTS = 4_u32
  SHI2_NUM_ELEMENTS = 10_u32
  STYPE_RESERVED1 = 16777216_u32
  STYPE_RESERVED2 = 33554432_u32
  STYPE_RESERVED3 = 67108864_u32
  STYPE_RESERVED4 = 134217728_u32
  STYPE_RESERVED5 = 1048576_u32
  STYPE_RESERVED_ALL = 1073741568_u32
  SHI_USES_UNLIMITED = 4294967295_u32
  SHI1005_FLAGS_DFS = 1_u32
  SHI1005_FLAGS_DFS_ROOT = 2_u32
  CSC_MASK_EXT = 8240_u32
  CSC_MASK = 48_u32
  CSC_CACHE_MANUAL_REINT = 0_u32
  CSC_CACHE_AUTO_REINT = 16_u32
  CSC_CACHE_VDO = 32_u32
  CSC_CACHE_NONE = 48_u32
  SHI1005_FLAGS_RESTRICT_EXCLUSIVE_OPENS = 256_u32
  SHI1005_FLAGS_FORCE_SHARED_DELETE = 512_u32
  SHI1005_FLAGS_ALLOW_NAMESPACE_CACHING = 1024_u32
  SHI1005_FLAGS_ACCESS_BASED_DIRECTORY_ENUM = 2048_u32
  SHI1005_FLAGS_FORCE_LEVELII_OPLOCK = 4096_u32
  SHI1005_FLAGS_ENABLE_HASH = 8192_u32
  SHI1005_FLAGS_ENABLE_CA = 16384_u32
  SHI1005_FLAGS_ENCRYPT_DATA = 32768_u32
  SHI1005_FLAGS_RESERVED = 65536_u32
  SHI1005_FLAGS_DISABLE_CLIENT_BUFFERING = 131072_u32
  SHI1005_FLAGS_IDENTITY_REMOTING = 262144_u32
  SHI1005_FLAGS_CLUSTER_MANAGED = 524288_u32
  SHI1005_FLAGS_COMPRESS_DATA = 1048576_u32
  SESI1_NUM_ELEMENTS = 8_u32
  SESI2_NUM_ELEMENTS = 9_u32
  STATSOPT_CLR = 1_u32
  LZERROR_BADINHANDLE = -1_i32
  LZERROR_BADOUTHANDLE = -2_i32
  LZERROR_READ = -3_i32
  LZERROR_WRITE = -4_i32
  LZERROR_GLOBALLOC = -5_i32
  LZERROR_GLOBLOCK = -6_i32
  LZERROR_BADVALUE = -7_i32
  LZERROR_UNKNOWNALG = -8_i32
  NTMS_OBJECTNAME_LENGTH = 64_u32
  NTMS_DESCRIPTION_LENGTH = 127_u32
  NTMS_DEVICENAME_LENGTH = 64_u32
  NTMS_SERIALNUMBER_LENGTH = 32_u32
  NTMS_REVISION_LENGTH = 32_u32
  NTMS_BARCODE_LENGTH = 64_u32
  NTMS_SEQUENCE_LENGTH = 32_u32
  NTMS_VENDORNAME_LENGTH = 128_u32
  NTMS_PRODUCTNAME_LENGTH = 128_u32
  NTMS_USERNAME_LENGTH = 64_u32
  NTMS_APPLICATIONNAME_LENGTH = 64_u32
  NTMS_COMPUTERNAME_LENGTH = 64_u32
  NTMS_I1_MESSAGE_LENGTH = 127_u32
  NTMS_MESSAGE_LENGTH = 256_u32
  NTMS_POOLHIERARCHY_LENGTH = 512_u32
  NTMS_OMIDLABELID_LENGTH = 255_u32
  NTMS_OMIDLABELTYPE_LENGTH = 64_u32
  NTMS_OMIDLABELINFO_LENGTH = 256_u32
  NTMS_MAXATTR_LENGTH = 65536_u32
  NTMS_MAXATTR_NAMELEN = 32_u32
  NTMSMLI_MAXTYPE = 64_u32
  NTMSMLI_MAXIDSIZE = 256_u32
  NTMSMLI_MAXAPPDESCR = 256_u32
  TXF_LOG_RECORD_GENERIC_TYPE_COMMIT = 1_u32
  TXF_LOG_RECORD_GENERIC_TYPE_ABORT = 2_u32
  TXF_LOG_RECORD_GENERIC_TYPE_PREPARE = 4_u32
  TXF_LOG_RECORD_GENERIC_TYPE_DATA = 8_u32
  VS_VERSION_INFO = 1_u32
  VS_USER_DEFINED = 100_u32
  VS_FFI_SIGNATURE = -17890115_i32
  VS_FFI_STRUCVERSION = 65536_i32
  VS_FFI_FILEFLAGSMASK = 63_i32
  WINEFS_SETUSERKEY_SET_CAPABILITIES = 1_u32
  EFS_COMPATIBILITY_VERSION_NCRYPT_PROTECTOR = 5_u32
  EFS_COMPATIBILITY_VERSION_PFILE_PROTECTOR = 6_u32
  EFS_SUBVER_UNKNOWN = 0_u32
  EFS_EFS_SUBVER_EFS_CERT = 1_u32
  EFS_PFILE_SUBVER_RMS = 2_u32
  EFS_PFILE_SUBVER_APPX = 3_u32
  MAX_SID_SIZE = 256_u32
  EFS_METADATA_ADD_USER = 1_u32
  EFS_METADATA_REMOVE_USER = 2_u32
  EFS_METADATA_REPLACE_USER = 4_u32
  EFS_METADATA_GENERAL_OP = 8_u32
  WOF_PROVIDER_WIM = 1_u32
  WOF_PROVIDER_FILE = 2_u32
  WIM_PROVIDER_HASH_SIZE = 20_u32
  WIM_BOOT_OS_WIM = 1_u32
  WIM_BOOT_NOT_OS_WIM = 0_u32
  WIM_ENTRY_FLAG_NOT_ACTIVE = 1_u32
  WIM_ENTRY_FLAG_SUSPENDED = 2_u32
  WIM_EXTERNAL_FILE_INFO_FLAG_NOT_ACTIVE = 1_u32
  WIM_EXTERNAL_FILE_INFO_FLAG_SUSPENDED = 2_u32
  FILE_PROVIDER_COMPRESSION_XPRESS4K = 0_u32
  FILE_PROVIDER_COMPRESSION_LZX = 1_u32
  FILE_PROVIDER_COMPRESSION_XPRESS8K = 2_u32
  FILE_PROVIDER_COMPRESSION_XPRESS16K = 3_u32
  ClfsNullRecord = 0_u8
  ClfsDataRecord = 1_u8
  ClfsRestartRecord = 2_u8
  ClfsClientRecord = 3_u8
  ClsContainerInitializing = 1_u32
  ClsContainerInactive = 2_u32
  ClsContainerActive = 4_u32
  ClsContainerActivePendingDelete = 8_u32
  ClsContainerPendingArchive = 16_u32
  ClsContainerPendingArchiveAndDelete = 32_u32
  ClfsContainerInitializing = 1_u32
  ClfsContainerInactive = 2_u32
  ClfsContainerActive = 4_u32
  ClfsContainerActivePendingDelete = 8_u32
  ClfsContainerPendingArchive = 16_u32
  ClfsContainerPendingArchiveAndDelete = 32_u32
  CLFS_MAX_CONTAINER_INFO = 256_u32
  CLFS_SCAN_INIT = 1_u8
  CLFS_SCAN_FORWARD = 2_u8
  CLFS_SCAN_BACKWARD = 4_u8
  CLFS_SCAN_CLOSE = 8_u8
  CLFS_SCAN_INITIALIZED = 16_u8
  CLFS_SCAN_BUFFERED = 32_u8

  alias MAXMEDIALABEL = Proc(UInt32*, UInt32)
  alias CLAIMMEDIALABEL = Proc(UInt8*, UInt32, MediaLabelInfo*, UInt32)
  alias CLAIMMEDIALABELEX = Proc(UInt8*, UInt32, MediaLabelInfo*, Guid*, UInt32)
  alias CLFS_BLOCK_ALLOCATION = Proc(UInt32, Void*, Void*)
  alias CLFS_BLOCK_DEALLOCATION = Proc(Void*, Void*, Void)
  alias PCLFS_COMPLETION_ROUTINE = Proc(Void*, UInt32, Void)
  alias PLOG_TAIL_ADVANCE_CALLBACK = Proc(LibC::HANDLE, CLS_LSN, Void*, Void)
  alias PLOG_FULL_HANDLER_CALLBACK = Proc(LibC::HANDLE, UInt32, LibC::BOOL, Void*, Void)
  alias PLOG_UNPINNED_CALLBACK = Proc(LibC::HANDLE, Void*, Void)
  alias WofEnumEntryProc = Proc(Void*, Void*, LibC::BOOL)
  alias WofEnumFilesProc = Proc(LibC::LPWSTR, Void*, Void*, LibC::BOOL)
  alias PFN_IO_COMPLETION = Proc(FIO_CONTEXT*, FH_OVERLAPPED*, UInt32, UInt32, Void)
  alias FCACHE_CREATE_CALLBACK = Proc(PSTR, Void*, UInt32*, UInt32*, LibC::HANDLE)
  alias FCACHE_RICHCREATE_CALLBACK = Proc(PSTR, Void*, UInt32*, UInt32*, LibC::BOOL*, LibC::BOOL*, LibC::BOOL*, LibC::BOOL*, LibC::HANDLE)
  alias CACHE_KEY_COMPARE = Proc(UInt32, UInt8*, UInt32, UInt8*, Int32)
  alias CACHE_KEY_HASH = Proc(UInt8*, UInt32, UInt32)
  alias CACHE_READ_CALLBACK = Proc(UInt32, UInt8*, Void*, LibC::BOOL)
  alias CACHE_DESTROY_CALLBACK = Proc(UInt32, UInt8*, Void)
  alias CACHE_ACCESS_CHECK = Proc(SECURITY_DESCRIPTOR*, LibC::HANDLE, UInt32, GENERIC_MAPPING*, PRIVILEGE_SET*, UInt32*, UInt32*, Int32*, LibC::BOOL)
  alias PFE_EXPORT_FUNC = Proc(UInt8*, Void*, UInt32, UInt32)
  alias PFE_IMPORT_FUNC = Proc(UInt8*, Void*, UInt32*, UInt32)
  alias LPPROGRESS_ROUTINE = Proc(LARGE_INTEGER, LARGE_INTEGER, LARGE_INTEGER, LARGE_INTEGER, UInt32, LPPROGRESS_ROUTINE_CALLBACK_REASON, LibC::HANDLE, LibC::HANDLE, Void*, UInt32)
  alias PCOPYFILE2_PROGRESS_ROUTINE = Proc(COPYFILE2_MESSAGE*, Void*, COPYFILE2_MESSAGE_ACTION)


  enum FIND_FIRST_EX_FLAGS : UInt32
    FIND_FIRST_EX_CASE_SENSITIVE = 1
    FIND_FIRST_EX_LARGE_FETCH = 2
    FIND_FIRST_EX_ON_DISK_ENTRIES_ONLY = 4
  end

  enum DEFINE_DOS_DEVICE_FLAGS : UInt32
    DDD_RAW_TARGET_PATH = 1
    DDD_REMOVE_DEFINITION = 2
    DDD_EXACT_MATCH_ON_REMOVE = 4
    DDD_NO_BROADCAST_SYSTEM = 8
    DDD_LUID_BROADCAST_DRIVE = 16
  end

  enum FILE_FLAGS_AND_ATTRIBUTES : UInt32
    FILE_ATTRIBUTE_READONLY = 1
    FILE_ATTRIBUTE_HIDDEN = 2
    FILE_ATTRIBUTE_SYSTEM = 4
    FILE_ATTRIBUTE_DIRECTORY = 16
    FILE_ATTRIBUTE_ARCHIVE = 32
    FILE_ATTRIBUTE_DEVICE = 64
    FILE_ATTRIBUTE_NORMAL = 128
    FILE_ATTRIBUTE_TEMPORARY = 256
    FILE_ATTRIBUTE_SPARSE_FILE = 512
    FILE_ATTRIBUTE_REPARSE_POINT = 1024
    FILE_ATTRIBUTE_COMPRESSED = 2048
    FILE_ATTRIBUTE_OFFLINE = 4096
    FILE_ATTRIBUTE_NOT_CONTENT_INDEXED = 8192
    FILE_ATTRIBUTE_ENCRYPTED = 16384
    FILE_ATTRIBUTE_INTEGRITY_STREAM = 32768
    FILE_ATTRIBUTE_VIRTUAL = 65536
    FILE_ATTRIBUTE_NO_SCRUB_DATA = 131072
    FILE_ATTRIBUTE_EA = 262144
    FILE_ATTRIBUTE_PINNED = 524288
    FILE_ATTRIBUTE_UNPINNED = 1048576
    FILE_ATTRIBUTE_RECALL_ON_OPEN = 262144
    FILE_ATTRIBUTE_RECALL_ON_DATA_ACCESS = 4194304
    FILE_FLAG_WRITE_THROUGH = 2147483648
    FILE_FLAG_OVERLAPPED = 1073741824
    FILE_FLAG_NO_BUFFERING = 536870912
    FILE_FLAG_RANDOM_ACCESS = 268435456
    FILE_FLAG_SEQUENTIAL_SCAN = 134217728
    FILE_FLAG_DELETE_ON_CLOSE = 67108864
    FILE_FLAG_BACKUP_SEMANTICS = 33554432
    FILE_FLAG_POSIX_SEMANTICS = 16777216
    FILE_FLAG_SESSION_AWARE = 8388608
    FILE_FLAG_OPEN_REPARSE_POINT = 2097152
    FILE_FLAG_OPEN_NO_RECALL = 1048576
    FILE_FLAG_FIRST_PIPE_INSTANCE = 524288
    PIPE_ACCESS_DUPLEX = 3
    PIPE_ACCESS_INBOUND = 1
    PIPE_ACCESS_OUTBOUND = 2
    SECURITY_ANONYMOUS = 0
    SECURITY_IDENTIFICATION = 65536
    SECURITY_IMPERSONATION = 131072
    SECURITY_DELEGATION = 196608
    SECURITY_CONTEXT_TRACKING = 262144
    SECURITY_EFFECTIVE_ONLY = 524288
    SECURITY_SQOS_PRESENT = 1048576
    SECURITY_VALID_SQOS_FLAGS = 2031616
  end

  enum FILE_ACCESS_FLAGS : UInt32
    FILE_READ_DATA = 1
    FILE_LIST_DIRECTORY = 1
    FILE_WRITE_DATA = 2
    FILE_ADD_FILE = 2
    FILE_APPEND_DATA = 4
    FILE_ADD_SUBDIRECTORY = 4
    FILE_CREATE_PIPE_INSTANCE = 4
    FILE_READ_EA = 8
    FILE_WRITE_EA = 16
    FILE_EXECUTE = 32
    FILE_TRAVERSE = 32
    FILE_DELETE_CHILD = 64
    FILE_READ_ATTRIBUTES = 128
    FILE_WRITE_ATTRIBUTES = 256
    READ_CONTROL = 131072
    SYNCHRONIZE = 1048576
    STANDARD_RIGHTS_REQUIRED = 983040
    STANDARD_RIGHTS_READ = 131072
    STANDARD_RIGHTS_WRITE = 131072
    STANDARD_RIGHTS_EXECUTE = 131072
    STANDARD_RIGHTS_ALL = 2031616
    SPECIFIC_RIGHTS_ALL = 65535
    FILE_ALL_ACCESS = 2032127
    FILE_GENERIC_READ = 1179785
    FILE_GENERIC_WRITE = 1179926
    FILE_GENERIC_EXECUTE = 1179808
  end

  enum GET_FILE_VERSION_INFO_FLAGS : UInt32
    FILE_VER_GET_LOCALISED = 1
    FILE_VER_GET_NEUTRAL = 2
    FILE_VER_GET_PREFETCHED = 4
  end

  enum VER_FIND_FILE_FLAGS : UInt32
    VFFF_ISSHAREDFILE = 1
  end

  enum VER_FIND_FILE_STATUS : UInt32
    VFF_CURNEDEST = 1
    VFF_FILEINUSE = 2
    VFF_BUFFTOOSMALL = 4
  end

  enum VER_INSTALL_FILE_FLAGS : UInt32
    VIFF_FORCEINSTALL = 1
    VIFF_DONTDELETEOLD = 2
  end

  enum VER_INSTALL_FILE_STATUS : UInt32
    VIF_TEMPFILE = 1
    VIF_MISMATCH = 2
    VIF_SRCOLD = 4
    VIF_DIFFLANG = 8
    VIF_DIFFCODEPG = 16
    VIF_DIFFTYPE = 32
    VIF_WRITEPROT = 64
    VIF_FILEINUSE = 128
    VIF_OUTOFSPACE = 256
    VIF_ACCESSVIOLATION = 512
    VIF_SHARINGVIOLATION = 1024
    VIF_CANNOTCREATE = 2048
    VIF_CANNOTDELETE = 4096
    VIF_CANNOTRENAME = 8192
    VIF_CANNOTDELETECUR = 16384
    VIF_OUTOFMEMORY = 32768
    VIF_CANNOTREADSRC = 65536
    VIF_CANNOTREADDST = 131072
    VIF_BUFFTOOSMALL = 262144
    VIF_CANNOTLOADLZ32 = 524288
    VIF_CANNOTLOADCABINET = 1048576
  end

  enum VS_FIXEDFILEINFO_FILE_FLAGS : UInt32
    VS_FF_DEBUG = 1
    VS_FF_PRERELEASE = 2
    VS_FF_PATCHED = 4
    VS_FF_PRIVATEBUILD = 8
    VS_FF_INFOINFERRED = 16
    VS_FF_SPECIALBUILD = 32
  end

  enum VS_FIXEDFILEINFO_FILE_OS : Int32
    VOS_UNKNOWN = 0
    VOS_DOS = 65536
    VOS_OS216 = 131072
    VOS_OS232 = 196608
    VOS_NT = 262144
    VOS_WINCE = 327680
    VOS__BASE = 0
    VOS__WINDOWS16 = 1
    VOS__PM16 = 2
    VOS__PM32 = 3
    VOS__WINDOWS32 = 4
    VOS_DOS_WINDOWS16 = 65537
    VOS_DOS_WINDOWS32 = 65540
    VOS_OS216_PM16 = 131074
    VOS_OS232_PM32 = 196611
    VOS_NT_WINDOWS32 = 262148
  end

  enum VS_FIXEDFILEINFO_FILE_TYPE : Int32
    VFT_UNKNOWN = 0
    VFT_APP = 1
    VFT_DLL = 2
    VFT_DRV = 3
    VFT_FONT = 4
    VFT_VXD = 5
    VFT_STATIC_LIB = 7
  end

  enum VS_FIXEDFILEINFO_FILE_SUBTYPE : Int32
    VFT2_UNKNOWN = 0
    VFT2_DRV_PRINTER = 1
    VFT2_DRV_KEYBOARD = 2
    VFT2_DRV_LANGUAGE = 3
    VFT2_DRV_DISPLAY = 4
    VFT2_DRV_MOUSE = 5
    VFT2_DRV_NETWORK = 6
    VFT2_DRV_SYSTEM = 7
    VFT2_DRV_INSTALLABLE = 8
    VFT2_DRV_SOUND = 9
    VFT2_DRV_COMM = 10
    VFT2_DRV_INPUTMETHOD = 11
    VFT2_DRV_VERSIONED_PRINTER = 12
    VFT2_FONT_RASTER = 1
    VFT2_FONT_VECTOR = 2
    VFT2_FONT_TRUETYPE = 3
  end

  enum FILE_CREATION_DISPOSITION : UInt32
    CREATE_NEW = 1
    CREATE_ALWAYS = 2
    OPEN_EXISTING = 3
    OPEN_ALWAYS = 4
    TRUNCATE_EXISTING = 5
  end

  enum FILE_SHARE_MODE : UInt32
    FILE_SHARE_NONE = 0
    FILE_SHARE_DELETE = 4
    FILE_SHARE_READ = 1
    FILE_SHARE_WRITE = 2
  end

  enum SHARE_TYPE : UInt32
    STYPE_DISKTREE = 0
    STYPE_PRINTQ = 1
    STYPE_DEVICE = 2
    STYPE_IPC = 3
    STYPE_SPECIAL = 2147483648
    STYPE_TEMPORARY = 1073741824
    STYPE_MASK = 255
  end

  enum CLFS_FLAG : UInt32
    CLFS_FLAG_FORCE_APPEND = 1
    CLFS_FLAG_FORCE_FLUSH = 2
    CLFS_FLAG_NO_FLAGS = 0
    CLFS_FLAG_USE_RESERVATION = 4
  end

  enum SET_FILE_POINTER_MOVE_METHOD : UInt32
    FILE_BEGIN = 0
    FILE_CURRENT = 1
    FILE_END = 2
  end

  enum MOVE_FILE_FLAGS : UInt32
    MOVEFILE_COPY_ALLOWED = 2
    MOVEFILE_CREATE_HARDLINK = 16
    MOVEFILE_DELAY_UNTIL_REBOOT = 4
    MOVEFILE_REPLACE_EXISTING = 1
    MOVEFILE_WRITE_THROUGH = 8
    MOVEFILE_FAIL_IF_NOT_TRACKABLE = 32
  end

  enum FILE_NAME : UInt32
    FILE_NAME_NORMALIZED = 0
    FILE_NAME_OPENED = 8
  end

  enum LZOPENFILE_STYLE : UInt32
    OF_CANCEL = 2048
    OF_CREATE = 4096
    OF_DELETE = 512
    OF_EXIST = 16384
    OF_PARSE = 256
    OF_PROMPT = 8192
    OF_READ = 0
    OF_READWRITE = 2
    OF_REOPEN = 32768
    OF_SHARE_DENY_NONE = 64
    OF_SHARE_DENY_READ = 48
    OF_SHARE_DENY_WRITE = 32
    OF_SHARE_EXCLUSIVE = 16
    OF_WRITE = 1
    OF_SHARE_COMPAT = 0
    OF_VERIFY = 1024
  end

  enum FILE_NOTIFY_CHANGE : UInt32
    FILE_NOTIFY_CHANGE_FILE_NAME = 1
    FILE_NOTIFY_CHANGE_DIR_NAME = 2
    FILE_NOTIFY_CHANGE_ATTRIBUTES = 4
    FILE_NOTIFY_CHANGE_SIZE = 8
    FILE_NOTIFY_CHANGE_LAST_WRITE = 16
    FILE_NOTIFY_CHANGE_LAST_ACCESS = 32
    FILE_NOTIFY_CHANGE_CREATION = 64
    FILE_NOTIFY_CHANGE_SECURITY = 256
  end

  enum TXFS_MINIVERSION : UInt32
    TXFS_MINIVERSION_COMMITTED_VIEW = 0
    TXFS_MINIVERSION_DIRTY_VIEW = 65535
    TXFS_MINIVERSION_DEFAULT_VIEW = 65534
  end

  enum TAPE_POSITION_TYPE : Int32
    TAPE_ABSOLUTE_POSITION = 0
    TAPE_LOGICAL_POSITION = 1
  end

  enum CREATE_TAPE_PARTITION_METHOD : Int32
    TAPE_FIXED_PARTITIONS = 0
    TAPE_INITIATOR_PARTITIONS = 2
    TAPE_SELECT_PARTITIONS = 1
  end

  enum REPLACE_FILE_FLAGS : UInt32
    REPLACEFILE_WRITE_THROUGH = 1
    REPLACEFILE_IGNORE_MERGE_ERRORS = 2
    REPLACEFILE_IGNORE_ACL_ERRORS = 4
  end

  enum TAPEMARK_TYPE : Int32
    TAPE_FILEMARKS = 1
    TAPE_LONG_FILEMARKS = 3
    TAPE_SETMARKS = 0
    TAPE_SHORT_FILEMARKS = 2
  end

  enum DISKQUOTA_USERNAME_RESOLVE : UInt32
    DISKQUOTA_USERNAME_RESOLVE_ASYNC = 2
    DISKQUOTA_USERNAME_RESOLVE_NONE = 0
    DISKQUOTA_USERNAME_RESOLVE_SYNC = 1
  end

  enum TAPE_POSITION_METHOD : Int32
    TAPE_ABSOLUTE_BLOCK = 1
    TAPE_LOGICAL_BLOCK = 2
    TAPE_REWIND = 0
    TAPE_SPACE_END_OF_DATA = 4
    TAPE_SPACE_FILEMARKS = 6
    TAPE_SPACE_RELATIVE_BLOCKS = 5
    TAPE_SPACE_SEQUENTIAL_FMKS = 7
    TAPE_SPACE_SEQUENTIAL_SMKS = 9
    TAPE_SPACE_SETMARKS = 8
  end

  enum NT_CREATE_FILE_DISPOSITION : UInt32
    FILE_SUPERSEDE = 0
    FILE_CREATE = 2
    FILE_OPEN = 1
    FILE_OPEN_IF = 3
    FILE_OVERWRITE = 4
    FILE_OVERWRITE_IF = 5
  end

  enum TAPE_INFORMATION_TYPE : UInt32
    SET_TAPE_DRIVE_INFORMATION = 1
    SET_TAPE_MEDIA_INFORMATION = 0
  end

  enum NTMS_OMID_TYPE : UInt32
    NTMS_OMID_TYPE_FILESYSTEM_INFO = 2
    NTMS_OMID_TYPE_RAW_LABEL = 1
  end

  enum LOCK_FILE_FLAGS : UInt32
    LOCKFILE_EXCLUSIVE_LOCK = 2
    LOCKFILE_FAIL_IMMEDIATELY = 1
  end

  enum LPPROGRESS_ROUTINE_CALLBACK_REASON : UInt32
    CALLBACK_CHUNK_FINISHED = 0
    CALLBACK_STREAM_SWITCH = 1
  end

  enum PREPARE_TAPE_OPERATION : Int32
    TAPE_FORMAT = 5
    TAPE_LOAD = 0
    TAPE_LOCK = 3
    TAPE_TENSION = 2
    TAPE_UNLOAD = 1
    TAPE_UNLOCK = 4
  end

  enum GET_TAPE_DRIVE_PARAMETERS_OPERATION : UInt32
    GET_TAPE_DRIVE_INFORMATION = 1
    GET_TAPE_MEDIA_INFORMATION = 0
  end

  enum ERASE_TAPE_TYPE : Int32
    TAPE_ERASE_LONG = 1
    TAPE_ERASE_SHORT = 0
  end

  enum FILE_ACTION : UInt32
    FILE_ACTION_ADDED = 1
    FILE_ACTION_REMOVED = 2
    FILE_ACTION_MODIFIED = 3
    FILE_ACTION_RENAMED_OLD_NAME = 4
    FILE_ACTION_RENAMED_NEW_NAME = 5
  end

  enum SHARE_INFO_PERMISSIONS : UInt32
    ACCESS_READ = 1
    ACCESS_WRITE = 2
    ACCESS_CREATE = 4
    ACCESS_EXEC = 8
    ACCESS_DELETE = 16
    ACCESS_ATRIB = 32
    ACCESS_PERM = 64
    ACCESS_ALL = 32768
  end

  enum FILE_DEVICE_TYPE : UInt32
    FILE_DEVICE_CD_ROM = 2
    FILE_DEVICE_DISK = 7
    FILE_DEVICE_TAPE = 31
    FILE_DEVICE_DVD = 51
  end

  enum SESSION_INFO_USER_FLAGS : UInt32
    SESS_GUEST = 1
    SESS_NOENCRYPTION = 2
  end

  enum WIN_STREAM_ID : UInt32
    BACKUP_ALTERNATE_DATA = 4
    BACKUP_DATA = 1
    BACKUP_EA_DATA = 2
    BACKUP_LINK = 5
    BACKUP_OBJECT_ID = 7
    BACKUP_PROPERTY_DATA = 6
    BACKUP_REPARSE_DATA = 8
    BACKUP_SECURITY_DATA = 3
    BACKUP_SPARSE_BLOCK = 9
    BACKUP_TXFS_DATA = 10
  end

  enum TXF_LOG_RECORD_TYPE : UInt16
    TXF_LOG_RECORD_TYPE_AFFECTED_FILE = 4
    TXF_LOG_RECORD_TYPE_TRUNCATE = 2
    TXF_LOG_RECORD_TYPE_WRITE = 1
  end

  enum FILE_INFO_FLAGS_PERMISSIONS : UInt32
    PERM_FILE_READ = 1
    PERM_FILE_WRITE = 2
    PERM_FILE_CREATE = 4
  end

  enum SYMBOLIC_LINK_FLAGS : UInt32
    SYMBOLIC_LINK_FLAG_DIRECTORY = 1
    SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE = 2
  end

  enum FINDEX_INFO_LEVELS : Int32
    FindExInfoStandard = 0
    FindExInfoBasic = 1
    FindExInfoMaxInfoLevel = 2
  end

  enum FINDEX_SEARCH_OPS : Int32
    FindExSearchNameMatch = 0
    FindExSearchLimitToDirectories = 1
    FindExSearchLimitToDevices = 2
    FindExSearchMaxSearchOp = 3
  end

  enum READ_DIRECTORY_NOTIFY_INFORMATION_CLASS : Int32
    ReadDirectoryNotifyInformation = 1
    ReadDirectoryNotifyExtendedInformation = 2
  end

  enum GET_FILEEX_INFO_LEVELS : Int32
    GetFileExInfoStandard = 0
    GetFileExMaxInfoLevel = 1
  end

  enum FILE_INFO_BY_HANDLE_CLASS : Int32
    FileBasicInfo = 0
    FileStandardInfo = 1
    FileNameInfo = 2
    FileRenameInfo = 3
    FileDispositionInfo = 4
    FileAllocationInfo = 5
    FileEndOfFileInfo = 6
    FileStreamInfo = 7
    FileCompressionInfo = 8
    FileAttributeTagInfo = 9
    FileIdBothDirectoryInfo = 10
    FileIdBothDirectoryRestartInfo = 11
    FileIoPriorityHintInfo = 12
    FileRemoteProtocolInfo = 13
    FileFullDirectoryInfo = 14
    FileFullDirectoryRestartInfo = 15
    FileStorageInfo = 16
    FileAlignmentInfo = 17
    FileIdInfo = 18
    FileIdExtdDirectoryInfo = 19
    FileIdExtdDirectoryRestartInfo = 20
    FileDispositionInfoEx = 21
    FileRenameInfoEx = 22
    FileCaseSensitiveInfo = 23
    FileNormalizedNameInfo = 24
    MaximumFileInfoByHandleClass = 25
  end

  enum STREAM_INFO_LEVELS : Int32
    FindStreamInfoStandard = 0
    FindStreamInfoMaxInfoLevel = 1
  end

  enum NtmsObjectsTypes : Int32
    NTMS_UNKNOWN = 0
    NTMS_OBJECT = 1
    NTMS_CHANGER = 2
    NTMS_CHANGER_TYPE = 3
    NTMS_COMPUTER = 4
    NTMS_DRIVE = 5
    NTMS_DRIVE_TYPE = 6
    NTMS_IEDOOR = 7
    NTMS_IEPORT = 8
    NTMS_LIBRARY = 9
    NTMS_LIBREQUEST = 10
    NTMS_LOGICAL_MEDIA = 11
    NTMS_MEDIA_POOL = 12
    NTMS_MEDIA_TYPE = 13
    NTMS_PARTITION = 14
    NTMS_PHYSICAL_MEDIA = 15
    NTMS_STORAGESLOT = 16
    NTMS_OPREQUEST = 17
    NTMS_UI_DESTINATION = 18
    NTMS_NUMBER_OF_OBJECT_TYPES = 19
  end

  enum NtmsAsyncStatus : Int32
    NTMS_ASYNCSTATE_QUEUED = 0
    NTMS_ASYNCSTATE_WAIT_RESOURCE = 1
    NTMS_ASYNCSTATE_WAIT_OPERATOR = 2
    NTMS_ASYNCSTATE_INPROCESS = 3
    NTMS_ASYNCSTATE_COMPLETE = 4
  end

  enum NtmsAsyncOperations : Int32
    NTMS_ASYNCOP_MOUNT = 1
  end

  enum NtmsSessionOptions : Int32
    NTMS_SESSION_QUERYEXPEDITE = 1
  end

  enum NtmsMountOptions : Int32
    NTMS_MOUNT_READ = 1
    NTMS_MOUNT_WRITE = 2
    NTMS_MOUNT_ERROR_NOT_AVAILABLE = 4
    NTMS_MOUNT_ERROR_IF_UNAVAILABLE = 4
    NTMS_MOUNT_ERROR_OFFLINE = 8
    NTMS_MOUNT_ERROR_IF_OFFLINE = 8
    NTMS_MOUNT_SPECIFIC_DRIVE = 16
    NTMS_MOUNT_NOWAIT = 32
  end

  enum NtmsDismountOptions : Int32
    NTMS_DISMOUNT_DEFERRED = 1
    NTMS_DISMOUNT_IMMEDIATE = 2
  end

  enum NtmsMountPriority : Int32
    NTMS_PRIORITY_DEFAULT = 0
    NTMS_PRIORITY_HIGHEST = 15
    NTMS_PRIORITY_HIGH = 7
    NTMS_PRIORITY_NORMAL = 0
    NTMS_PRIORITY_LOW = -7
    NTMS_PRIORITY_LOWEST = -15
  end

  enum NtmsAllocateOptions : Int32
    NTMS_ALLOCATE_NEW = 1
    NTMS_ALLOCATE_NEXT = 2
    NTMS_ALLOCATE_ERROR_IF_UNAVAILABLE = 4
  end

  enum NtmsCreateOptions : Int32
    NTMS_OPEN_EXISTING = 1
    NTMS_CREATE_NEW = 2
    NTMS_OPEN_ALWAYS = 3
  end

  enum NtmsDriveState : Int32
    NTMS_DRIVESTATE_DISMOUNTED = 0
    NTMS_DRIVESTATE_MOUNTED = 1
    NTMS_DRIVESTATE_LOADED = 2
    NTMS_DRIVESTATE_UNLOADED = 5
    NTMS_DRIVESTATE_BEING_CLEANED = 6
    NTMS_DRIVESTATE_DISMOUNTABLE = 7
  end

  enum NtmsLibraryType : Int32
    NTMS_LIBRARYTYPE_UNKNOWN = 0
    NTMS_LIBRARYTYPE_OFFLINE = 1
    NTMS_LIBRARYTYPE_ONLINE = 2
    NTMS_LIBRARYTYPE_STANDALONE = 3
  end

  enum NtmsLibraryFlags : Int32
    NTMS_LIBRARYFLAG_FIXEDOFFLINE = 1
    NTMS_LIBRARYFLAG_CLEANERPRESENT = 2
    NTMS_LIBRARYFLAG_AUTODETECTCHANGE = 4
    NTMS_LIBRARYFLAG_IGNORECLEANERUSESREMAINING = 8
    NTMS_LIBRARYFLAG_RECOGNIZECLEANERBARCODE = 16
  end

  enum NtmsInventoryMethod : Int32
    NTMS_INVENTORY_NONE = 0
    NTMS_INVENTORY_FAST = 1
    NTMS_INVENTORY_OMID = 2
    NTMS_INVENTORY_DEFAULT = 3
    NTMS_INVENTORY_SLOT = 4
    NTMS_INVENTORY_STOP = 5
    NTMS_INVENTORY_MAX = 6
  end

  enum NtmsSlotState : Int32
    NTMS_SLOTSTATE_UNKNOWN = 0
    NTMS_SLOTSTATE_FULL = 1
    NTMS_SLOTSTATE_EMPTY = 2
    NTMS_SLOTSTATE_NOTPRESENT = 3
    NTMS_SLOTSTATE_NEEDSINVENTORY = 4
  end

  enum NtmsDoorState : Int32
    NTMS_DOORSTATE_UNKNOWN = 0
    NTMS_DOORSTATE_CLOSED = 1
    NTMS_DOORSTATE_OPEN = 2
  end

  enum NtmsPortPosition : Int32
    NTMS_PORTPOSITION_UNKNOWN = 0
    NTMS_PORTPOSITION_EXTENDED = 1
    NTMS_PORTPOSITION_RETRACTED = 2
  end

  enum NtmsPortContent : Int32
    NTMS_PORTCONTENT_UNKNOWN = 0
    NTMS_PORTCONTENT_FULL = 1
    NTMS_PORTCONTENT_EMPTY = 2
  end

  enum NtmsBarCodeState : Int32
    NTMS_BARCODESTATE_OK = 1
    NTMS_BARCODESTATE_UNREADABLE = 2
  end

  enum NtmsMediaState : Int32
    NTMS_MEDIASTATE_IDLE = 0
    NTMS_MEDIASTATE_INUSE = 1
    NTMS_MEDIASTATE_MOUNTED = 2
    NTMS_MEDIASTATE_LOADED = 3
    NTMS_MEDIASTATE_UNLOADED = 4
    NTMS_MEDIASTATE_OPERROR = 5
    NTMS_MEDIASTATE_OPREQ = 6
  end

  enum NtmsPartitionState : Int32
    NTMS_PARTSTATE_UNKNOWN = 0
    NTMS_PARTSTATE_UNPREPARED = 1
    NTMS_PARTSTATE_INCOMPATIBLE = 2
    NTMS_PARTSTATE_DECOMMISSIONED = 3
    NTMS_PARTSTATE_AVAILABLE = 4
    NTMS_PARTSTATE_ALLOCATED = 5
    NTMS_PARTSTATE_COMPLETE = 6
    NTMS_PARTSTATE_FOREIGN = 7
    NTMS_PARTSTATE_IMPORT = 8
    NTMS_PARTSTATE_RESERVED = 9
  end

  enum NtmsPoolType : Int32
    NTMS_POOLTYPE_UNKNOWN = 0
    NTMS_POOLTYPE_SCRATCH = 1
    NTMS_POOLTYPE_FOREIGN = 2
    NTMS_POOLTYPE_IMPORT = 3
    NTMS_POOLTYPE_APPLICATION = 1000
  end

  enum NtmsAllocationPolicy : Int32
    NTMS_ALLOCATE_FROMSCRATCH = 1
  end

  enum NtmsDeallocationPolicy : Int32
    NTMS_DEALLOCATE_TOSCRATCH = 1
  end

  enum NtmsReadWriteCharacteristics : Int32
    NTMS_MEDIARW_UNKNOWN = 0
    NTMS_MEDIARW_REWRITABLE = 1
    NTMS_MEDIARW_WRITEONCE = 2
    NTMS_MEDIARW_READONLY = 3
  end

  enum NtmsLmOperation : Int32
    NTMS_LM_REMOVE = 0
    NTMS_LM_DISABLECHANGER = 1
    NTMS_LM_DISABLELIBRARY = 1
    NTMS_LM_ENABLECHANGER = 2
    NTMS_LM_ENABLELIBRARY = 2
    NTMS_LM_DISABLEDRIVE = 3
    NTMS_LM_ENABLEDRIVE = 4
    NTMS_LM_DISABLEMEDIA = 5
    NTMS_LM_ENABLEMEDIA = 6
    NTMS_LM_UPDATEOMID = 7
    NTMS_LM_INVENTORY = 8
    NTMS_LM_DOORACCESS = 9
    NTMS_LM_EJECT = 10
    NTMS_LM_EJECTCLEANER = 11
    NTMS_LM_INJECT = 12
    NTMS_LM_INJECTCLEANER = 13
    NTMS_LM_PROCESSOMID = 14
    NTMS_LM_CLEANDRIVE = 15
    NTMS_LM_DISMOUNT = 16
    NTMS_LM_MOUNT = 17
    NTMS_LM_WRITESCRATCH = 18
    NTMS_LM_CLASSIFY = 19
    NTMS_LM_RESERVECLEANER = 20
    NTMS_LM_RELEASECLEANER = 21
    NTMS_LM_MAXWORKITEM = 22
  end

  enum NtmsLmState : Int32
    NTMS_LM_QUEUED = 0
    NTMS_LM_INPROCESS = 1
    NTMS_LM_PASSED = 2
    NTMS_LM_FAILED = 3
    NTMS_LM_INVALID = 4
    NTMS_LM_WAITING = 5
    NTMS_LM_DEFERRED = 6
    NTMS_LM_DEFFERED = 6
    NTMS_LM_CANCELLED = 7
    NTMS_LM_STOPPED = 8
  end

  enum NtmsOpreqCommand : Int32
    NTMS_OPREQ_UNKNOWN = 0
    NTMS_OPREQ_NEWMEDIA = 1
    NTMS_OPREQ_CLEANER = 2
    NTMS_OPREQ_DEVICESERVICE = 3
    NTMS_OPREQ_MOVEMEDIA = 4
    NTMS_OPREQ_MESSAGE = 5
  end

  enum NtmsOpreqState : Int32
    NTMS_OPSTATE_UNKNOWN = 0
    NTMS_OPSTATE_SUBMITTED = 1
    NTMS_OPSTATE_ACTIVE = 2
    NTMS_OPSTATE_INPROGRESS = 3
    NTMS_OPSTATE_REFUSED = 4
    NTMS_OPSTATE_COMPLETE = 5
  end

  enum NtmsLibRequestFlags : Int32
    NTMS_LIBREQFLAGS_NOAUTOPURGE = 1
    NTMS_LIBREQFLAGS_NOFAILEDPURGE = 2
  end

  enum NtmsOpRequestFlags : Int32
    NTMS_OPREQFLAGS_NOAUTOPURGE = 1
    NTMS_OPREQFLAGS_NOFAILEDPURGE = 2
    NTMS_OPREQFLAGS_NOALERTS = 16
    NTMS_OPREQFLAGS_NOTRAYICON = 32
  end

  enum NtmsMediaPoolPolicy : Int32
    NTMS_POOLPOLICY_PURGEOFFLINESCRATCH = 1
    NTMS_POOLPOLICY_KEEPOFFLINEIMPORT = 2
  end

  enum NtmsOperationalState : Int32
    NTMS_READY = 0
    NTMS_INITIALIZING = 10
    NTMS_NEEDS_SERVICE = 20
    NTMS_NOT_PRESENT = 21
  end

  enum NtmsCreateNtmsMediaOptions : Int32
    NTMS_ERROR_ON_DUPLICATE = 1
  end

  enum NtmsEnumerateOption : Int32
    NTMS_ENUM_DEFAULT = 0
    NTMS_ENUM_ROOTPOOL = 1
  end

  enum NtmsEjectOperation : Int32
    NTMS_EJECT_START = 0
    NTMS_EJECT_STOP = 1
    NTMS_EJECT_QUEUE = 2
    NTMS_EJECT_FORCE = 3
    NTMS_EJECT_IMMEDIATE = 4
    NTMS_EJECT_ASK_USER = 5
  end

  enum NtmsInjectOperation : Int32
    NTMS_INJECT_START = 0
    NTMS_INJECT_STOP = 1
    NTMS_INJECT_RETRACT = 2
    NTMS_INJECT_STARTMANY = 3
  end

  enum NtmsDriveType : Int32
    NTMS_UNKNOWN_DRIVE = 0
  end

  enum NtmsAccessMask : Int32
    NTMS_USE_ACCESS = 1
    NTMS_MODIFY_ACCESS = 2
    NTMS_CONTROL_ACCESS = 4
  end

  enum NtmsUITypes : Int32
    NTMS_UITYPE_INVALID = 0
    NTMS_UITYPE_INFO = 1
    NTMS_UITYPE_REQ = 2
    NTMS_UITYPE_ERR = 3
    NTMS_UITYPE_MAX = 4
  end

  enum NtmsUIOperations : Int32
    NTMS_UIDEST_ADD = 1
    NTMS_UIDEST_DELETE = 2
    NTMS_UIDEST_DELETEALL = 3
    NTMS_UIOPERATION_MAX = 4
  end

  enum NtmsNotificationOperations : Int32
    NTMS_OBJ_UPDATE = 1
    NTMS_OBJ_INSERT = 2
    NTMS_OBJ_DELETE = 3
    NTMS_EVENT_SIGNAL = 4
    NTMS_EVENT_COMPLETE = 5
  end

  enum CLS_CONTEXT_MODE : Int32
    ClsContextNone = 0
    ClsContextUndoNext = 1
    ClsContextPrevious = 2
    ClsContextForward = 3
  end

  enum CLFS_CONTEXT_MODE : Int32
    ClfsContextNone = 0
    ClfsContextUndoNext = 1
    ClfsContextPrevious = 2
    ClfsContextForward = 3
  end

  enum CLS_LOG_INFORMATION_CLASS : Int32
    ClfsLogBasicInformation = 0
    ClfsLogBasicInformationPhysical = 1
    ClfsLogPhysicalNameInformation = 2
    ClfsLogStreamIdentifierInformation = 3
    ClfsLogSystemMarkingInformation = 4
    ClfsLogPhysicalLsnInformation = 5
  end

  enum CLS_IOSTATS_CLASS : Int32
    ClsIoStatsDefault = 0
    ClsIoStatsMax = 65535
  end

  enum CLFS_IOSTATS_CLASS : Int32
    ClfsIoStatsDefault = 0
    ClfsIoStatsMax = 65535
  end

  enum CLFS_LOG_ARCHIVE_MODE : Int32
    ClfsLogArchiveEnabled = 1
    ClfsLogArchiveDisabled = 2
  end

  enum CLFS_MGMT_POLICY_TYPE : Int32
    ClfsMgmtPolicyMaximumSize = 0
    ClfsMgmtPolicyMinimumSize = 1
    ClfsMgmtPolicyNewContainerSize = 2
    ClfsMgmtPolicyGrowthRate = 3
    ClfsMgmtPolicyLogTail = 4
    ClfsMgmtPolicyAutoShrink = 5
    ClfsMgmtPolicyAutoGrow = 6
    ClfsMgmtPolicyNewContainerPrefix = 7
    ClfsMgmtPolicyNewContainerSuffix = 8
    ClfsMgmtPolicyNewContainerExtension = 9
    ClfsMgmtPolicyInvalid = 10
  end

  enum CLFS_MGMT_NOTIFICATION_TYPE : Int32
    ClfsMgmtAdvanceTailNotification = 0
    ClfsMgmtLogFullHandlerNotification = 1
    ClfsMgmtLogUnpinnedNotification = 2
    ClfsMgmtLogWriteNotification = 3
  end

  enum SERVER_CERTIFICATE_TYPE : Int32
    QUIC = 0
  end

  enum IORING_VERSION : Int32
    IORING_VERSION_INVALID = 0
    IORING_VERSION_1 = 1
  end

  enum IORING_FEATURE_FLAGS : Int32
    IORING_FEATURE_FLAGS_NONE = 0
    IORING_FEATURE_UM_EMULATION = 1
    IORING_FEATURE_SET_COMPLETION_EVENT = 2
  end

  enum IORING_OP_CODE : Int32
    IORING_OP_NOP = 0
    IORING_OP_READ = 1
    IORING_OP_REGISTER_FILES = 2
    IORING_OP_REGISTER_BUFFERS = 3
    IORING_OP_CANCEL = 4
  end

  enum IORING_SQE_FLAGS : Int32
    IOSQE_FLAGS_NONE = 0
  end

  enum IORING_CREATE_REQUIRED_FLAGS : Int32
    IORING_CREATE_REQUIRED_FLAGS_NONE = 0
  end

  enum IORING_CREATE_ADVISORY_FLAGS : Int32
    IORING_CREATE_ADVISORY_FLAGS_NONE = 0
  end

  enum IORING_REF_KIND : Int32
    IORING_REF_RAW = 0
    IORING_REF_REGISTERED = 1
  end

  enum TRANSACTION_OUTCOME : Int32
    TransactionOutcomeUndetermined = 1
    TransactionOutcomeCommitted = 2
    TransactionOutcomeAborted = 3
  end

  enum STORAGE_BUS_TYPE : Int32
    BusTypeUnknown = 0
    BusTypeScsi = 1
    BusTypeAtapi = 2
    BusTypeAta = 3
    BusType1394 = 4
    BusTypeSsa = 5
    BusTypeFibre = 6
    BusTypeUsb = 7
    BusTypeRAID = 8
    BusTypeiScsi = 9
    BusTypeSas = 10
    BusTypeSata = 11
    BusTypeSd = 12
    BusTypeMmc = 13
    BusTypeVirtual = 14
    BusTypeFileBackedVirtual = 15
    BusTypeSpaces = 16
    BusTypeNvme = 17
    BusTypeSCM = 18
    BusTypeUfs = 19
    BusTypeMax = 20
    BusTypeMaxReserved = 127
  end

  enum COPYFILE2_MESSAGE_TYPE : Int32
    COPYFILE2_CALLBACK_NONE = 0
    COPYFILE2_CALLBACK_CHUNK_STARTED = 1
    COPYFILE2_CALLBACK_CHUNK_FINISHED = 2
    COPYFILE2_CALLBACK_STREAM_STARTED = 3
    COPYFILE2_CALLBACK_STREAM_FINISHED = 4
    COPYFILE2_CALLBACK_POLL_CONTINUE = 5
    COPYFILE2_CALLBACK_ERROR = 6
    COPYFILE2_CALLBACK_MAX = 7
  end

  enum COPYFILE2_MESSAGE_ACTION : Int32
    COPYFILE2_PROGRESS_CONTINUE = 0
    COPYFILE2_PROGRESS_CANCEL = 1
    COPYFILE2_PROGRESS_STOP = 2
    COPYFILE2_PROGRESS_QUIET = 3
    COPYFILE2_PROGRESS_PAUSE = 4
  end

  enum COPYFILE2_COPY_PHASE : Int32
    COPYFILE2_PHASE_NONE = 0
    COPYFILE2_PHASE_PREPARE_SOURCE = 1
    COPYFILE2_PHASE_PREPARE_DEST = 2
    COPYFILE2_PHASE_READ_SOURCE = 3
    COPYFILE2_PHASE_WRITE_DESTINATION = 4
    COPYFILE2_PHASE_SERVER_COPY = 5
    COPYFILE2_PHASE_NAMEGRAFT_COPY = 6
    COPYFILE2_PHASE_MAX = 7
  end

  enum PRIORITY_HINT : Int32
    IoPriorityHintVeryLow = 0
    IoPriorityHintLow = 1
    IoPriorityHintNormal = 2
    MaximumIoPriorityHintType = 3
  end

  enum FILE_ID_TYPE : Int32
    FileIdType = 0
    ObjectIdType = 1
    ExtendedFileIdType = 2
    MaximumFileIdType = 3
  end

  union NTMS_OBJECTINFORMATIONA_Info_e__Union
    drive : NTMS_DRIVEINFORMATIONA
    drive_type : NTMS_DRIVETYPEINFORMATIONA
    library : NTMS_LIBRARYINFORMATION
    changer : NTMS_CHANGERINFORMATIONA
    changer_type : NTMS_CHANGERTYPEINFORMATIONA
    storage_slot : NTMS_STORAGESLOTINFORMATION
    ie_door : NTMS_IEDOORINFORMATION
    ie_port : NTMS_IEPORTINFORMATION
    physical_media : NTMS_PMIDINFORMATIONA
    logical_media : NTMS_LMIDINFORMATION
    partition : NTMS_PARTITIONINFORMATIONA
    media_pool : NTMS_MEDIAPOOLINFORMATION
    media_type : NTMS_MEDIATYPEINFORMATION
    lib_request : NTMS_LIBREQUESTINFORMATIONA
    op_request : NTMS_OPREQUESTINFORMATIONA
    computer : NTMS_COMPUTERINFORMATION
  end
  union NTMS_OBJECTINFORMATIONW_Info_e__Union
    drive : NTMS_DRIVEINFORMATIONW
    drive_type : NTMS_DRIVETYPEINFORMATIONW
    library : NTMS_LIBRARYINFORMATION
    changer : NTMS_CHANGERINFORMATIONW
    changer_type : NTMS_CHANGERTYPEINFORMATIONW
    storage_slot : NTMS_STORAGESLOTINFORMATION
    ie_door : NTMS_IEDOORINFORMATION
    ie_port : NTMS_IEPORTINFORMATION
    physical_media : NTMS_PMIDINFORMATIONW
    logical_media : NTMS_LMIDINFORMATION
    partition : NTMS_PARTITIONINFORMATIONW
    media_pool : NTMS_MEDIAPOOLINFORMATION
    media_type : NTMS_MEDIATYPEINFORMATION
    lib_request : NTMS_LIBREQUESTINFORMATIONW
    op_request : NTMS_OPREQUESTINFORMATIONW
    computer : NTMS_COMPUTERINFORMATION
  end
  union NTMS_I1_OBJECTINFORMATIONA_Info_e__Union
    drive : NTMS_DRIVEINFORMATIONA
    drive_type : NTMS_DRIVETYPEINFORMATIONA
    library : NTMS_I1_LIBRARYINFORMATION
    changer : NTMS_CHANGERINFORMATIONA
    changer_type : NTMS_CHANGERTYPEINFORMATIONA
    storage_slot : NTMS_STORAGESLOTINFORMATION
    ie_door : NTMS_IEDOORINFORMATION
    ie_port : NTMS_IEPORTINFORMATION
    physical_media : NTMS_I1_PMIDINFORMATIONA
    logical_media : NTMS_LMIDINFORMATION
    partition : NTMS_I1_PARTITIONINFORMATIONA
    media_pool : NTMS_MEDIAPOOLINFORMATION
    media_type : NTMS_MEDIATYPEINFORMATION
    lib_request : NTMS_I1_LIBREQUESTINFORMATIONA
    op_request : NTMS_I1_OPREQUESTINFORMATIONA
  end
  union NTMS_I1_OBJECTINFORMATIONW_Info_e__Union
    drive : NTMS_DRIVEINFORMATIONW
    drive_type : NTMS_DRIVETYPEINFORMATIONW
    library : NTMS_I1_LIBRARYINFORMATION
    changer : NTMS_CHANGERINFORMATIONW
    changer_type : NTMS_CHANGERTYPEINFORMATIONW
    storage_slot : NTMS_STORAGESLOTINFORMATION
    ie_door : NTMS_IEDOORINFORMATION
    ie_port : NTMS_IEPORTINFORMATION
    physical_media : NTMS_I1_PMIDINFORMATIONW
    logical_media : NTMS_LMIDINFORMATION
    partition : NTMS_I1_PARTITIONINFORMATIONW
    media_pool : NTMS_MEDIAPOOLINFORMATION
    media_type : NTMS_MEDIATYPEINFORMATION
    lib_request : NTMS_I1_LIBREQUESTINFORMATIONW
    op_request : NTMS_I1_OPREQUESTINFORMATIONW
  end
  union CLFS_MGMT_POLICY_PolicyParameters_e__Union
    maximum_size : CLFS_MGMT_POLICY_PolicyParameters_e__Union_MaximumSize_e__Struct
    minimum_size : CLFS_MGMT_POLICY_PolicyParameters_e__Union_MinimumSize_e__Struct
    new_container_size : CLFS_MGMT_POLICY_PolicyParameters_e__Union_NewContainerSize_e__Struct
    growth_rate : CLFS_MGMT_POLICY_PolicyParameters_e__Union_GrowthRate_e__Struct
    log_tail : CLFS_MGMT_POLICY_PolicyParameters_e__Union_LogTail_e__Struct
    auto_shrink : CLFS_MGMT_POLICY_PolicyParameters_e__Union_AutoShrink_e__Struct
    auto_grow : CLFS_MGMT_POLICY_PolicyParameters_e__Union_AutoGrow_e__Struct
    new_container_prefix : CLFS_MGMT_POLICY_PolicyParameters_e__Union_NewContainerPrefix_e__Struct
    new_container_suffix : CLFS_MGMT_POLICY_PolicyParameters_e__Union_NewContainerSuffix_e__Struct
    new_container_extension : CLFS_MGMT_POLICY_PolicyParameters_e__Union_NewContainerExtension_e__Struct
  end
  union IORING_HANDLE_REF_HandleUnion
    handle : LibC::HANDLE
    index : UInt32
  end
  union IORING_BUFFER_REF_BufferUnion
    address : Void*
    index_and_offset : IORING_REGISTERED_BUFFER
  end
  union FILE_SEGMENT_ELEMENT
    buffer : Void*
    alignment : UInt64
  end
  union COPYFILE2_MESSAGE_Info_e__Union
    chunk_started : COPYFILE2_MESSAGE_Info_e__Union_ChunkStarted_e__Struct
    chunk_finished : COPYFILE2_MESSAGE_Info_e__Union_ChunkFinished_e__Struct
    stream_started : COPYFILE2_MESSAGE_Info_e__Union_StreamStarted_e__Struct
    stream_finished : COPYFILE2_MESSAGE_Info_e__Union_StreamFinished_e__Struct
    poll_continue : COPYFILE2_MESSAGE_Info_e__Union_PollContinue_e__Struct
    error : COPYFILE2_MESSAGE_Info_e__Union_Error_e__Struct
  end
  union FILE_RENAME_INFO_Anonymous_e__Union
    replace_if_exists : BOOLEAN
    flags : UInt32
  end
  union FILE_REMOTE_PROTOCOL_INFO_ProtocolSpecific_e__Union
    smb2 : FILE_REMOTE_PROTOCOL_INFO_ProtocolSpecific_e__Union_Smb2_e__Struct
    reserved : UInt32[16]*
  end
  union FILE_ID_DESCRIPTOR_Anonymous_e__Union
    file_id : LARGE_INTEGER
    object_id : Guid
    extended_file_id : FILE_ID_128
  end

  struct WIN32_FIND_DATAA
    dw_file_attributes : UInt32
    ft_creation_time : FILETIME
    ft_last_access_time : FILETIME
    ft_last_write_time : FILETIME
    n_file_size_high : UInt32
    n_file_size_low : UInt32
    dw_reserved0 : UInt32
    dw_reserved1 : UInt32
    c_file_name : CHAR[260]*
    c_alternate_file_name : CHAR[14]*
  end
  struct WIN32_FIND_DATAW
    dw_file_attributes : UInt32
    ft_creation_time : FILETIME
    ft_last_access_time : FILETIME
    ft_last_write_time : FILETIME
    n_file_size_high : UInt32
    n_file_size_low : UInt32
    dw_reserved0 : UInt32
    dw_reserved1 : UInt32
    c_file_name : Char[260]*
    c_alternate_file_name : Char[14]*
  end
  struct TRANSACTION_NOTIFICATION
    transaction_key : Void*
    transaction_notification : UInt32
    tm_virtual_clock : LARGE_INTEGER
    argument_length : UInt32
  end
  struct TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT
    enlistment_id : Guid
    uow : Guid
  end
  struct TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT
    tm_identity : Guid
    flags : UInt32
  end
  struct TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT
    savepoint_id : UInt32
  end
  struct TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT
    propagation_cookie : UInt32
    uow : Guid
    tm_identity : Guid
    buffer_length : UInt32
  end
  struct TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT
    marshal_cookie : UInt32
    uow : Guid
  end
  struct KCRM_MARSHAL_HEADER
    version_major : UInt32
    version_minor : UInt32
    num_protocols : UInt32
    unused : UInt32
  end
  struct KCRM_TRANSACTION_BLOB
    uow : Guid
    tm_identity : Guid
    isolation_level : UInt32
    isolation_flags : UInt32
    timeout : UInt32
    description : Char[64]*
  end
  struct KCRM_PROTOCOL_BLOB
    protocol_id : Guid
    static_info_length : UInt32
    transaction_id_info_length : UInt32
    unused1 : UInt32
    unused2 : UInt32
  end
  struct DISK_SPACE_INFORMATION
    actual_total_allocation_units : UInt64
    actual_available_allocation_units : UInt64
    actual_pool_unavailable_allocation_units : UInt64
    caller_total_allocation_units : UInt64
    caller_available_allocation_units : UInt64
    caller_pool_unavailable_allocation_units : UInt64
    used_allocation_units : UInt64
    total_reserved_allocation_units : UInt64
    volume_storage_reserve_allocation_units : UInt64
    available_committed_allocation_units : UInt64
    pool_available_allocation_units : UInt64
    sectors_per_allocation_unit : UInt32
    bytes_per_sector : UInt32
  end
  struct WIN32_FILE_ATTRIBUTE_DATA
    dw_file_attributes : UInt32
    ft_creation_time : FILETIME
    ft_last_access_time : FILETIME
    ft_last_write_time : FILETIME
    n_file_size_high : UInt32
    n_file_size_low : UInt32
  end
  struct BY_HANDLE_FILE_INFORMATION
    dw_file_attributes : UInt32
    ft_creation_time : FILETIME
    ft_last_access_time : FILETIME
    ft_last_write_time : FILETIME
    dw_volume_serial_number : UInt32
    n_file_size_high : UInt32
    n_file_size_low : UInt32
    n_number_of_links : UInt32
    n_file_index_high : UInt32
    n_file_index_low : UInt32
  end
  struct CREATEFILE2_EXTENDED_PARAMETERS
    dw_size : UInt32
    dw_file_attributes : UInt32
    dw_file_flags : UInt32
    dw_security_qos_flags : UInt32
    lp_security_attributes : SECURITY_ATTRIBUTES*
    h_template_file : LibC::HANDLE
  end
  struct WIN32_FIND_STREAM_DATA
    stream_size : LARGE_INTEGER
    c_stream_name : Char[296]*
  end
  struct VS_FIXEDFILEINFO
    dw_signature : UInt32
    dw_struc_version : UInt32
    dw_file_version_ms : UInt32
    dw_file_version_ls : UInt32
    dw_product_version_ms : UInt32
    dw_product_version_ls : UInt32
    dw_file_flags_mask : UInt32
    dw_file_flags : VS_FIXEDFILEINFO_FILE_FLAGS
    dw_file_os : VS_FIXEDFILEINFO_FILE_OS
    dw_file_type : VS_FIXEDFILEINFO_FILE_TYPE
    dw_file_subtype : VS_FIXEDFILEINFO_FILE_SUBTYPE
    dw_file_date_ms : UInt32
    dw_file_date_ls : UInt32
  end
  struct NTMS_ASYNC_IO
    operation_id : Guid
    event_id : Guid
    dw_operation_type : UInt32
    dw_result : UInt32
    dw_async_state : UInt32
    h_event : LibC::HANDLE
    b_on_state_change : LibC::BOOL
  end
  struct NTMS_MOUNT_INFORMATION
    dw_size : UInt32
    lp_reserved : Void*
  end
  struct NTMS_ALLOCATION_INFORMATION
    dw_size : UInt32
    lp_reserved : Void*
    allocated_from : Guid
  end
  struct NTMS_DRIVEINFORMATIONA
    number : UInt32
    state : NtmsDriveState
    drive_type : Guid
    sz_device_name : CHAR[64]*
    sz_serial_number : CHAR[32]*
    sz_revision : CHAR[32]*
    scsi_port : UInt16
    scsi_bus : UInt16
    scsi_target : UInt16
    scsi_lun : UInt16
    dw_mount_count : UInt32
    last_cleaned_ts : SYSTEMTIME
    saved_partition_id : Guid
    library : Guid
    reserved : Guid
    dw_defer_dismount_delay : UInt32
  end
  struct NTMS_DRIVEINFORMATIONW
    number : UInt32
    state : NtmsDriveState
    drive_type : Guid
    sz_device_name : Char[64]*
    sz_serial_number : Char[32]*
    sz_revision : Char[32]*
    scsi_port : UInt16
    scsi_bus : UInt16
    scsi_target : UInt16
    scsi_lun : UInt16
    dw_mount_count : UInt32
    last_cleaned_ts : SYSTEMTIME
    saved_partition_id : Guid
    library : Guid
    reserved : Guid
    dw_defer_dismount_delay : UInt32
  end
  struct NTMS_LIBRARYINFORMATION
    library_type : NtmsLibraryType
    cleaner_slot : Guid
    cleaner_slot_default : Guid
    library_supports_drive_cleaning : LibC::BOOL
    bar_code_reader_installed : LibC::BOOL
    inventory_method : NtmsInventoryMethod
    dw_cleaner_uses_remaining : UInt32
    first_drive_number : UInt32
    dw_number_of_drives : UInt32
    first_slot_number : UInt32
    dw_number_of_slots : UInt32
    first_door_number : UInt32
    dw_number_of_doors : UInt32
    first_port_number : UInt32
    dw_number_of_ports : UInt32
    first_changer_number : UInt32
    dw_number_of_changers : UInt32
    dw_number_of_media : UInt32
    dw_number_of_media_types : UInt32
    dw_number_of_lib_requests : UInt32
    reserved : Guid
    auto_recovery : LibC::BOOL
    dw_flags : NtmsLibraryFlags
  end
  struct NTMS_CHANGERINFORMATIONA
    number : UInt32
    changer_type : Guid
    sz_serial_number : CHAR[32]*
    sz_revision : CHAR[32]*
    sz_device_name : CHAR[64]*
    scsi_port : UInt16
    scsi_bus : UInt16
    scsi_target : UInt16
    scsi_lun : UInt16
    library : Guid
  end
  struct NTMS_CHANGERINFORMATIONW
    number : UInt32
    changer_type : Guid
    sz_serial_number : Char[32]*
    sz_revision : Char[32]*
    sz_device_name : Char[64]*
    scsi_port : UInt16
    scsi_bus : UInt16
    scsi_target : UInt16
    scsi_lun : UInt16
    library : Guid
  end
  struct NTMS_STORAGESLOTINFORMATION
    number : UInt32
    state : UInt32
    library : Guid
  end
  struct NTMS_IEDOORINFORMATION
    number : UInt32
    state : NtmsDoorState
    max_open_secs : UInt16
    library : Guid
  end
  struct NTMS_IEPORTINFORMATION
    number : UInt32
    content : NtmsPortContent
    position : NtmsPortPosition
    max_extend_secs : UInt16
    library : Guid
  end
  struct NTMS_PMIDINFORMATIONA
    current_library : Guid
    media_pool : Guid
    location : Guid
    location_type : UInt32
    media_type : Guid
    home_slot : Guid
    sz_bar_code : CHAR[64]*
    bar_code_state : NtmsBarCodeState
    sz_sequence_number : CHAR[32]*
    media_state : NtmsMediaState
    dw_number_of_partitions : UInt32
    dw_media_type_code : UInt32
    dw_density_code : UInt32
    mounted_partition : Guid
  end
  struct NTMS_PMIDINFORMATIONW
    current_library : Guid
    media_pool : Guid
    location : Guid
    location_type : UInt32
    media_type : Guid
    home_slot : Guid
    sz_bar_code : Char[64]*
    bar_code_state : NtmsBarCodeState
    sz_sequence_number : Char[32]*
    media_state : NtmsMediaState
    dw_number_of_partitions : UInt32
    dw_media_type_code : UInt32
    dw_density_code : UInt32
    mounted_partition : Guid
  end
  struct NTMS_LMIDINFORMATION
    media_pool : Guid
    dw_number_of_partitions : UInt32
  end
  struct NTMS_PARTITIONINFORMATIONA
    physical_media : Guid
    logical_media : Guid
    state : NtmsPartitionState
    side : UInt16
    dw_omid_label_id_length : UInt32
    omid_label_id : UInt8[255]*
    sz_omid_label_type : CHAR[64]*
    sz_omid_label_info : CHAR[256]*
    dw_mount_count : UInt32
    dw_allocate_count : UInt32
    capacity : LARGE_INTEGER
  end
  struct NTMS_PARTITIONINFORMATIONW
    physical_media : Guid
    logical_media : Guid
    state : NtmsPartitionState
    side : UInt16
    dw_omid_label_id_length : UInt32
    omid_label_id : UInt8[255]*
    sz_omid_label_type : Char[64]*
    sz_omid_label_info : Char[256]*
    dw_mount_count : UInt32
    dw_allocate_count : UInt32
    capacity : LARGE_INTEGER
  end
  struct NTMS_MEDIAPOOLINFORMATION
    pool_type : UInt32
    media_type : Guid
    parent : Guid
    allocation_policy : UInt32
    deallocation_policy : UInt32
    dw_max_allocates : UInt32
    dw_number_of_physical_media : UInt32
    dw_number_of_logical_media : UInt32
    dw_number_of_media_pools : UInt32
  end
  struct NTMS_MEDIATYPEINFORMATION
    media_type : UInt32
    number_of_sides : UInt32
    read_write_characteristics : NtmsReadWriteCharacteristics
    device_type : FILE_DEVICE_TYPE
  end
  struct NTMS_DRIVETYPEINFORMATIONA
    sz_vendor : CHAR[128]*
    sz_product : CHAR[128]*
    number_of_heads : UInt32
    device_type : FILE_DEVICE_TYPE
  end
  struct NTMS_DRIVETYPEINFORMATIONW
    sz_vendor : Char[128]*
    sz_product : Char[128]*
    number_of_heads : UInt32
    device_type : FILE_DEVICE_TYPE
  end
  struct NTMS_CHANGERTYPEINFORMATIONA
    sz_vendor : CHAR[128]*
    sz_product : CHAR[128]*
    device_type : UInt32
  end
  struct NTMS_CHANGERTYPEINFORMATIONW
    sz_vendor : Char[128]*
    sz_product : Char[128]*
    device_type : UInt32
  end
  struct NTMS_LIBREQUESTINFORMATIONA
    operation_code : NtmsLmOperation
    operation_option : UInt32
    state : NtmsLmState
    partition_id : Guid
    drive_id : Guid
    phys_media_id : Guid
    library : Guid
    slot_id : Guid
    time_queued : SYSTEMTIME
    time_completed : SYSTEMTIME
    sz_application : CHAR[64]*
    sz_user : CHAR[64]*
    sz_computer : CHAR[64]*
    dw_error_code : UInt32
    work_item_id : Guid
    dw_priority : UInt32
  end
  struct NTMS_LIBREQUESTINFORMATIONW
    operation_code : NtmsLmOperation
    operation_option : UInt32
    state : NtmsLmState
    partition_id : Guid
    drive_id : Guid
    phys_media_id : Guid
    library : Guid
    slot_id : Guid
    time_queued : SYSTEMTIME
    time_completed : SYSTEMTIME
    sz_application : Char[64]*
    sz_user : Char[64]*
    sz_computer : Char[64]*
    dw_error_code : UInt32
    work_item_id : Guid
    dw_priority : UInt32
  end
  struct NTMS_OPREQUESTINFORMATIONA
    request : NtmsOpreqCommand
    submitted : SYSTEMTIME
    state : NtmsOpreqState
    sz_message : CHAR[256]*
    arg1_type : NtmsObjectsTypes
    arg1 : Guid
    arg2_type : NtmsObjectsTypes
    arg2 : Guid
    sz_application : CHAR[64]*
    sz_user : CHAR[64]*
    sz_computer : CHAR[64]*
  end
  struct NTMS_OPREQUESTINFORMATIONW
    request : NtmsOpreqCommand
    submitted : SYSTEMTIME
    state : NtmsOpreqState
    sz_message : Char[256]*
    arg1_type : NtmsObjectsTypes
    arg1 : Guid
    arg2_type : NtmsObjectsTypes
    arg2 : Guid
    sz_application : Char[64]*
    sz_user : Char[64]*
    sz_computer : Char[64]*
  end
  struct NTMS_COMPUTERINFORMATION
    dw_lib_request_purge_time : UInt32
    dw_op_request_purge_time : UInt32
    dw_lib_request_flags : UInt32
    dw_op_request_flags : UInt32
    dw_media_pool_policy : UInt32
  end
  struct NTMS_OBJECTINFORMATIONA
    dw_size : UInt32
    dw_type : NtmsObjectsTypes
    created : SYSTEMTIME
    modified : SYSTEMTIME
    object_guid : Guid
    enabled : LibC::BOOL
    dw_operational_state : NtmsOperationalState
    sz_name : CHAR[64]*
    sz_description : CHAR[127]*
    info : NTMS_OBJECTINFORMATIONA_Info_e__Union
  end
  struct NTMS_OBJECTINFORMATIONW
    dw_size : UInt32
    dw_type : NtmsObjectsTypes
    created : SYSTEMTIME
    modified : SYSTEMTIME
    object_guid : Guid
    enabled : LibC::BOOL
    dw_operational_state : NtmsOperationalState
    sz_name : Char[64]*
    sz_description : Char[127]*
    info : NTMS_OBJECTINFORMATIONW_Info_e__Union
  end
  struct NTMS_I1_LIBRARYINFORMATION
    library_type : UInt32
    cleaner_slot : Guid
    cleaner_slot_default : Guid
    library_supports_drive_cleaning : LibC::BOOL
    bar_code_reader_installed : LibC::BOOL
    inventory_method : UInt32
    dw_cleaner_uses_remaining : UInt32
    first_drive_number : UInt32
    dw_number_of_drives : UInt32
    first_slot_number : UInt32
    dw_number_of_slots : UInt32
    first_door_number : UInt32
    dw_number_of_doors : UInt32
    first_port_number : UInt32
    dw_number_of_ports : UInt32
    first_changer_number : UInt32
    dw_number_of_changers : UInt32
    dw_number_of_media : UInt32
    dw_number_of_media_types : UInt32
    dw_number_of_lib_requests : UInt32
    reserved : Guid
  end
  struct NTMS_I1_LIBREQUESTINFORMATIONA
    operation_code : UInt32
    operation_option : UInt32
    state : UInt32
    partition_id : Guid
    drive_id : Guid
    phys_media_id : Guid
    library : Guid
    slot_id : Guid
    time_queued : SYSTEMTIME
    time_completed : SYSTEMTIME
    sz_application : CHAR[64]*
    sz_user : CHAR[64]*
    sz_computer : CHAR[64]*
  end
  struct NTMS_I1_LIBREQUESTINFORMATIONW
    operation_code : UInt32
    operation_option : UInt32
    state : UInt32
    partition_id : Guid
    drive_id : Guid
    phys_media_id : Guid
    library : Guid
    slot_id : Guid
    time_queued : SYSTEMTIME
    time_completed : SYSTEMTIME
    sz_application : Char[64]*
    sz_user : Char[64]*
    sz_computer : Char[64]*
  end
  struct NTMS_I1_PMIDINFORMATIONA
    current_library : Guid
    media_pool : Guid
    location : Guid
    location_type : UInt32
    media_type : Guid
    home_slot : Guid
    sz_bar_code : CHAR[64]*
    bar_code_state : UInt32
    sz_sequence_number : CHAR[32]*
    media_state : UInt32
    dw_number_of_partitions : UInt32
  end
  struct NTMS_I1_PMIDINFORMATIONW
    current_library : Guid
    media_pool : Guid
    location : Guid
    location_type : UInt32
    media_type : Guid
    home_slot : Guid
    sz_bar_code : Char[64]*
    bar_code_state : UInt32
    sz_sequence_number : Char[32]*
    media_state : UInt32
    dw_number_of_partitions : UInt32
  end
  struct NTMS_I1_PARTITIONINFORMATIONA
    physical_media : Guid
    logical_media : Guid
    state : UInt32
    side : UInt16
    dw_omid_label_id_length : UInt32
    omid_label_id : UInt8[255]*
    sz_omid_label_type : CHAR[64]*
    sz_omid_label_info : CHAR[256]*
    dw_mount_count : UInt32
    dw_allocate_count : UInt32
  end
  struct NTMS_I1_PARTITIONINFORMATIONW
    physical_media : Guid
    logical_media : Guid
    state : UInt32
    side : UInt16
    dw_omid_label_id_length : UInt32
    omid_label_id : UInt8[255]*
    sz_omid_label_type : Char[64]*
    sz_omid_label_info : Char[256]*
    dw_mount_count : UInt32
    dw_allocate_count : UInt32
  end
  struct NTMS_I1_OPREQUESTINFORMATIONA
    request : UInt32
    submitted : SYSTEMTIME
    state : UInt32
    sz_message : CHAR[127]*
    arg1_type : UInt32
    arg1 : Guid
    arg2_type : UInt32
    arg2 : Guid
    sz_application : CHAR[64]*
    sz_user : CHAR[64]*
    sz_computer : CHAR[64]*
  end
  struct NTMS_I1_OPREQUESTINFORMATIONW
    request : UInt32
    submitted : SYSTEMTIME
    state : UInt32
    sz_message : Char[127]*
    arg1_type : UInt32
    arg1 : Guid
    arg2_type : UInt32
    arg2 : Guid
    sz_application : Char[64]*
    sz_user : Char[64]*
    sz_computer : Char[64]*
  end
  struct NTMS_I1_OBJECTINFORMATIONA
    dw_size : UInt32
    dw_type : UInt32
    created : SYSTEMTIME
    modified : SYSTEMTIME
    object_guid : Guid
    enabled : LibC::BOOL
    dw_operational_state : UInt32
    sz_name : CHAR[64]*
    sz_description : CHAR[127]*
    info : NTMS_I1_OBJECTINFORMATIONA_Info_e__Union
  end
  struct NTMS_I1_OBJECTINFORMATIONW
    dw_size : UInt32
    dw_type : UInt32
    created : SYSTEMTIME
    modified : SYSTEMTIME
    object_guid : Guid
    enabled : LibC::BOOL
    dw_operational_state : UInt32
    sz_name : Char[64]*
    sz_description : Char[127]*
    info : NTMS_I1_OBJECTINFORMATIONW_Info_e__Union
  end
  struct NTMS_FILESYSTEM_INFO
    file_system_type : Char[64]*
    volume_name : Char[256]*
    serial_number : UInt32
  end
  struct NTMS_NOTIFICATIONINFORMATION
    dw_operation : NtmsNotificationOperations
    object_id : Guid
  end
  struct MediaLabelInfo
    label_type : Char[64]*
    label_id_size : UInt32
    label_id : UInt8[256]*
    label_app_descr : Char[256]*
  end
  struct CLS_LSN
    internal : UInt64
  end
  struct CLFS_NODE_ID
    c_type : UInt32
    cb_node : UInt32
  end
  struct CLS_WRITE_ENTRY
    buffer : Void*
    byte_length : UInt32
  end
  struct CLS_INFORMATION
    total_available : Int64
    current_available : Int64
    total_reservation : Int64
    base_file_size : UInt64
    container_size : UInt64
    total_containers : UInt32
    free_containers : UInt32
    total_clients : UInt32
    attributes : UInt32
    flush_threshold : UInt32
    sector_size : UInt32
    min_archive_tail_lsn : CLS_LSN
    base_lsn : CLS_LSN
    last_flushed_lsn : CLS_LSN
    last_lsn : CLS_LSN
    restart_lsn : CLS_LSN
    identity : Guid
  end
  struct CLFS_LOG_NAME_INFORMATION
    name_length_in_bytes : UInt16
    name : Char[0]*
  end
  struct CLFS_STREAM_ID_INFORMATION
    stream_identifier : UInt8
  end
  struct CLFS_PHYSICAL_LSN_INFORMATION
    stream_identifier : UInt8
    virtual_lsn : CLS_LSN
    physical_lsn : CLS_LSN
  end
  struct CLS_CONTAINER_INFORMATION
    file_attributes : UInt32
    creation_time : UInt64
    last_access_time : UInt64
    last_write_time : UInt64
    container_size : Int64
    file_name_actual_length : UInt32
    file_name_length : UInt32
    file_name : Char[256]*
    state : UInt32
    physical_container_id : UInt32
    logical_container_id : UInt32
  end
  struct CLS_IO_STATISTICS_HEADER
    ub_major_version : UInt8
    ub_minor_version : UInt8
    e_stats_class : CLFS_IOSTATS_CLASS
    cb_length : UInt16
    coff_data : UInt32
  end
  struct CLS_IO_STATISTICS
    hdr_io_stats : CLS_IO_STATISTICS_HEADER
    c_flush : UInt64
    cb_flush : UInt64
    c_meta_flush : UInt64
    cb_meta_flush : UInt64
  end
  struct CLS_SCAN_CONTEXT
    cid_node : CLFS_NODE_ID
    h_log : LibC::HANDLE
    c_index : UInt32
    c_containers : UInt32
    c_containers_returned : UInt32
    e_scan_mode : UInt8
    pinfo_container : CLS_CONTAINER_INFORMATION*
  end
  struct CLS_ARCHIVE_DESCRIPTOR
    coff_low : UInt64
    coff_high : UInt64
    info_container : CLS_CONTAINER_INFORMATION
  end
  struct CLFS_MGMT_POLICY
    version : UInt32
    length_in_bytes : UInt32
    policy_flags : UInt32
    policy_type : CLFS_MGMT_POLICY_TYPE
    policy_parameters : CLFS_MGMT_POLICY_PolicyParameters_e__Union
  end
  struct CLFS_MGMT_POLICY_PolicyParameters_e__Union_NewContainerExtension_e__Struct
    extension_length_in_bytes : UInt16
    extension_string : Char[0]*
  end
  struct CLFS_MGMT_POLICY_PolicyParameters_e__Union_NewContainerPrefix_e__Struct
    prefix_length_in_bytes : UInt16
    prefix_string : Char[0]*
  end
  struct CLFS_MGMT_POLICY_PolicyParameters_e__Union_AutoShrink_e__Struct
    percentage : UInt32
  end
  struct CLFS_MGMT_POLICY_PolicyParameters_e__Union_GrowthRate_e__Struct
    absolute_growth_in_containers : UInt32
    relative_growth_percentage : UInt32
  end
  struct CLFS_MGMT_POLICY_PolicyParameters_e__Union_MinimumSize_e__Struct
    containers : UInt32
  end
  struct CLFS_MGMT_POLICY_PolicyParameters_e__Union_NewContainerSuffix_e__Struct
    next_container_suffix : UInt64
  end
  struct CLFS_MGMT_POLICY_PolicyParameters_e__Union_LogTail_e__Struct
    minimum_available_percentage : UInt32
    minimum_available_containers : UInt32
  end
  struct CLFS_MGMT_POLICY_PolicyParameters_e__Union_MaximumSize_e__Struct
    containers : UInt32
  end
  struct CLFS_MGMT_POLICY_PolicyParameters_e__Union_AutoGrow_e__Struct
    enabled : UInt32
  end
  struct CLFS_MGMT_POLICY_PolicyParameters_e__Union_NewContainerSize_e__Struct
    size_in_bytes : UInt32
  end
  struct CLFS_MGMT_NOTIFICATION
    notification : CLFS_MGMT_NOTIFICATION_TYPE
    lsn : CLS_LSN
    log_is_pinned : UInt16
  end
  struct LOG_MANAGEMENT_CALLBACKS
    callback_context : Void*
    advance_tail_callback : PLOG_TAIL_ADVANCE_CALLBACK
    log_full_handler_callback : PLOG_FULL_HANDLER_CALLBACK
    log_unpinned_callback : PLOG_UNPINNED_CALLBACK
  end
  struct DISKQUOTA_USER_INFORMATION
    quota_used : Int64
    quota_threshold : Int64
    quota_limit : Int64
  end
  struct EFS_CERTIFICATE_BLOB
    dw_cert_encoding_type : UInt32
    cb_data : UInt32
    pb_data : UInt8*
  end
  struct EFS_HASH_BLOB
    cb_data : UInt32
    pb_data : UInt8*
  end
  struct EFS_RPC_BLOB
    cb_data : UInt32
    pb_data : UInt8*
  end
  struct EFS_PIN_BLOB
    cb_padding : UInt32
    cb_data : UInt32
    pb_data : UInt8*
  end
  struct EFS_KEY_INFO
    dw_version : UInt32
    entropy : UInt32
    algorithm : UInt32
    key_length : UInt32
  end
  struct EFS_COMPATIBILITY_INFO
    efs_version : UInt32
  end
  struct EFS_VERSION_INFO
    efs_version : UInt32
    sub_version : UInt32
  end
  struct EFS_DECRYPTION_STATUS_INFO
    dw_decryption_error : UInt32
    dw_hash_offset : UInt32
    cb_hash : UInt32
  end
  struct EFS_ENCRYPTION_STATUS_INFO
    b_has_current_key : LibC::BOOL
    dw_encryption_error : UInt32
  end
  struct ENCRYPTION_CERTIFICATE
    cb_total_length : UInt32
    p_user_sid : SID*
    p_cert_blob : EFS_CERTIFICATE_BLOB*
  end
  struct ENCRYPTION_CERTIFICATE_HASH
    cb_total_length : UInt32
    p_user_sid : SID*
    p_hash : EFS_HASH_BLOB*
    lp_display_information : LibC::LPWSTR
  end
  struct ENCRYPTION_CERTIFICATE_HASH_LIST
    n_cert_hash : UInt32
    p_users : ENCRYPTION_CERTIFICATE_HASH**
  end
  struct ENCRYPTION_CERTIFICATE_LIST
    n_users : UInt32
    p_users : ENCRYPTION_CERTIFICATE**
  end
  struct ENCRYPTED_FILE_METADATA_SIGNATURE
    dw_efs_access_type : UInt32
    p_certificates_added : ENCRYPTION_CERTIFICATE_HASH_LIST*
    p_encryption_certificate : ENCRYPTION_CERTIFICATE*
    p_efs_stream_signature : EFS_RPC_BLOB*
  end
  struct ENCRYPTION_PROTECTOR
    cb_total_length : UInt32
    p_user_sid : SID*
    lp_protector_descriptor : LibC::LPWSTR
  end
  struct ENCRYPTION_PROTECTOR_LIST
    n_protectors : UInt32
    p_protectors : ENCRYPTION_PROTECTOR**
  end
  struct WIM_ENTRY_INFO
    wim_entry_info_size : UInt32
    wim_type : UInt32
    data_source_id : LARGE_INTEGER
    wim_guid : Guid
    wim_path : LibC::LPWSTR
    wim_index : UInt32
    flags : UInt32
  end
  struct WIM_EXTERNAL_FILE_INFO
    data_source_id : LARGE_INTEGER
    resource_hash : UInt8[20]*
    flags : UInt32
  end
  struct WOF_FILE_COMPRESSION_INFO_V0
    algorithm : UInt32
  end
  struct WOF_FILE_COMPRESSION_INFO_V1
    algorithm : UInt32
    flags : UInt32
  end
  struct TXF_ID
    anonymous : TXF_ID_Anonymous_e__Struct
  end
  struct TXF_ID_Anonymous_e__Struct
    low_part : Int64
    high_part : Int64
  end
  struct TXF_LOG_RECORD_BASE
    version : UInt16
    record_type : TXF_LOG_RECORD_TYPE
    record_length : UInt32
  end
  struct TXF_LOG_RECORD_WRITE
    version : UInt16
    record_type : UInt16
    record_length : UInt32
    flags : UInt32
    txf_file_id : TXF_ID
    ktm_guid : Guid
    byte_offset_in_file : Int64
    num_bytes_written : UInt32
    byte_offset_in_structure : UInt32
    file_name_length : UInt32
    file_name_byte_offset_in_structure : UInt32
  end
  struct TXF_LOG_RECORD_TRUNCATE
    version : UInt16
    record_type : UInt16
    record_length : UInt32
    flags : UInt32
    txf_file_id : TXF_ID
    ktm_guid : Guid
    new_file_size : Int64
    file_name_length : UInt32
    file_name_byte_offset_in_structure : UInt32
  end
  struct TXF_LOG_RECORD_AFFECTED_FILE
    version : UInt16
    record_length : UInt32
    flags : UInt32
    txf_file_id : TXF_ID
    ktm_guid : Guid
    file_name_length : UInt32
    file_name_byte_offset_in_structure : UInt32
  end
  struct VOLUME_FAILOVER_SET
    number_of_disks : UInt32
    disk_numbers : UInt32[0]*
  end
  struct VOLUME_NUMBER
    volume_number : UInt32
    volume_manager_name : Char[8]*
  end
  struct VOLUME_LOGICAL_OFFSET
    logical_offset : Int64
  end
  struct VOLUME_PHYSICAL_OFFSET
    disk_number : UInt32
    offset : Int64
  end
  struct VOLUME_PHYSICAL_OFFSETS
    number_of_physical_offsets : UInt32
    physical_offset : VOLUME_PHYSICAL_OFFSET[0]*
  end
  struct VOLUME_READ_PLEX_INPUT
    byte_offset : LARGE_INTEGER
    length : UInt32
    plex_number : UInt32
  end
  struct VOLUME_SET_GPT_ATTRIBUTES_INFORMATION
    gpt_attributes : UInt64
    revert_on_close : BOOLEAN
    apply_to_all_connected_volumes : BOOLEAN
    reserved1 : UInt16
    reserved2 : UInt32
  end
  struct VOLUME_GET_BC_PROPERTIES_INPUT
    version : UInt32
    reserved1 : UInt32
    lowest_byte_offset : UInt64
    highest_byte_offset : UInt64
    access_type : UInt32
    access_mode : UInt32
  end
  struct VOLUME_GET_BC_PROPERTIES_OUTPUT
    maximum_requests_per_period : UInt32
    minimum_period : UInt32
    maximum_request_size : UInt64
    estimated_time_per_request : UInt32
    num_out_standing_requests : UInt32
    request_size : UInt64
  end
  struct VOLUME_ALLOCATE_BC_STREAM_INPUT
    version : UInt32
    requests_per_period : UInt32
    period : UInt32
    retry_failures : BOOLEAN
    discardable : BOOLEAN
    reserved1 : BOOLEAN[2]*
    lowest_byte_offset : UInt64
    highest_byte_offset : UInt64
    access_type : UInt32
    access_mode : UInt32
  end
  struct VOLUME_ALLOCATE_BC_STREAM_OUTPUT
    request_size : UInt64
    num_out_standing_requests : UInt32
  end
  struct FILE_EXTENT
    volume_offset : UInt64
    extent_length : UInt64
  end
  struct VOLUME_CRITICAL_IO
    access_type : UInt32
    extents_count : UInt32
    extents : FILE_EXTENT[0]*
  end
  struct VOLUME_ALLOCATION_HINT_INPUT
    cluster_size : UInt32
    number_of_clusters : UInt32
    starting_cluster_number : Int64
  end
  struct VOLUME_ALLOCATION_HINT_OUTPUT
    bitmap : UInt32[0]*
  end
  struct VOLUME_SHRINK_INFO
    volume_size : UInt64
  end
  struct SHARE_INFO_0
    shi0_netname : LibC::LPWSTR
  end
  struct SHARE_INFO_1
    shi1_netname : LibC::LPWSTR
    shi1_type : SHARE_TYPE
    shi1_remark : LibC::LPWSTR
  end
  struct SHARE_INFO_2
    shi2_netname : LibC::LPWSTR
    shi2_type : SHARE_TYPE
    shi2_remark : LibC::LPWSTR
    shi2_permissions : SHARE_INFO_PERMISSIONS
    shi2_max_uses : UInt32
    shi2_current_uses : UInt32
    shi2_path : LibC::LPWSTR
    shi2_passwd : LibC::LPWSTR
  end
  struct SHARE_INFO_501
    shi501_netname : LibC::LPWSTR
    shi501_type : SHARE_TYPE
    shi501_remark : LibC::LPWSTR
    shi501_flags : UInt32
  end
  struct SHARE_INFO_502
    shi502_netname : LibC::LPWSTR
    shi502_type : SHARE_TYPE
    shi502_remark : LibC::LPWSTR
    shi502_permissions : SHARE_INFO_PERMISSIONS
    shi502_max_uses : UInt32
    shi502_current_uses : UInt32
    shi502_path : LibC::LPWSTR
    shi502_passwd : LibC::LPWSTR
    shi502_reserved : UInt32
    shi502_security_descriptor : SECURITY_DESCRIPTOR*
  end
  struct SHARE_INFO_503
    shi503_netname : LibC::LPWSTR
    shi503_type : SHARE_TYPE
    shi503_remark : LibC::LPWSTR
    shi503_permissions : SHARE_INFO_PERMISSIONS
    shi503_max_uses : UInt32
    shi503_current_uses : UInt32
    shi503_path : LibC::LPWSTR
    shi503_passwd : LibC::LPWSTR
    shi503_servername : LibC::LPWSTR
    shi503_reserved : UInt32
    shi503_security_descriptor : SECURITY_DESCRIPTOR*
  end
  struct SHARE_INFO_1004
    shi1004_remark : LibC::LPWSTR
  end
  struct SHARE_INFO_1005
    shi1005_flags : UInt32
  end
  struct SHARE_INFO_1006
    shi1006_max_uses : UInt32
  end
  struct SHARE_INFO_1501
    shi1501_reserved : UInt32
    shi1501_security_descriptor : SECURITY_DESCRIPTOR*
  end
  struct SHARE_INFO_1503
    shi1503_sharefilter : Guid
  end
  struct SERVER_ALIAS_INFO_0
    srvai0_alias : LibC::LPWSTR
    srvai0_target : LibC::LPWSTR
    srvai0_default : BOOLEAN
    srvai0_reserved : UInt32
  end
  struct SESSION_INFO_0
    sesi0_cname : LibC::LPWSTR
  end
  struct SESSION_INFO_1
    sesi1_cname : LibC::LPWSTR
    sesi1_username : LibC::LPWSTR
    sesi1_num_opens : UInt32
    sesi1_time : UInt32
    sesi1_idle_time : UInt32
    sesi1_user_flags : SESSION_INFO_USER_FLAGS
  end
  struct SESSION_INFO_2
    sesi2_cname : LibC::LPWSTR
    sesi2_username : LibC::LPWSTR
    sesi2_num_opens : UInt32
    sesi2_time : UInt32
    sesi2_idle_time : UInt32
    sesi2_user_flags : SESSION_INFO_USER_FLAGS
    sesi2_cltype_name : LibC::LPWSTR
  end
  struct SESSION_INFO_10
    sesi10_cname : LibC::LPWSTR
    sesi10_username : LibC::LPWSTR
    sesi10_time : UInt32
    sesi10_idle_time : UInt32
  end
  struct SESSION_INFO_502
    sesi502_cname : LibC::LPWSTR
    sesi502_username : LibC::LPWSTR
    sesi502_num_opens : UInt32
    sesi502_time : UInt32
    sesi502_idle_time : UInt32
    sesi502_user_flags : SESSION_INFO_USER_FLAGS
    sesi502_cltype_name : LibC::LPWSTR
    sesi502_transport : LibC::LPWSTR
  end
  struct CONNECTION_INFO_0
    coni0_id : UInt32
  end
  struct CONNECTION_INFO_1
    coni1_id : UInt32
    coni1_type : SHARE_TYPE
    coni1_num_opens : UInt32
    coni1_num_users : UInt32
    coni1_time : UInt32
    coni1_username : LibC::LPWSTR
    coni1_netname : LibC::LPWSTR
  end
  struct FILE_INFO_2
    fi2_id : UInt32
  end
  struct FILE_INFO_3
    fi3_id : UInt32
    fi3_permissions : FILE_INFO_FLAGS_PERMISSIONS
    fi3_num_locks : UInt32
    fi3_pathname : LibC::LPWSTR
    fi3_username : LibC::LPWSTR
  end
  struct SERVER_CERTIFICATE_INFO_0
    srvci0_name : LibC::LPWSTR
    srvci0_subject : LibC::LPWSTR
    srvci0_issuer : LibC::LPWSTR
    srvci0_thumbprint : LibC::LPWSTR
    srvci0_friendlyname : LibC::LPWSTR
    srvci0_notbefore : LibC::LPWSTR
    srvci0_notafter : LibC::LPWSTR
    srvci0_storelocation : LibC::LPWSTR
    srvci0_storename : LibC::LPWSTR
    srvci0_renewalchain : LibC::LPWSTR
    srvci0_type : UInt32
    srvci0_flags : UInt32
  end
  struct STAT_WORKSTATION_0
    statistics_start_time : LARGE_INTEGER
    bytes_received : LARGE_INTEGER
    smbs_received : LARGE_INTEGER
    paging_read_bytes_requested : LARGE_INTEGER
    non_paging_read_bytes_requested : LARGE_INTEGER
    cache_read_bytes_requested : LARGE_INTEGER
    network_read_bytes_requested : LARGE_INTEGER
    bytes_transmitted : LARGE_INTEGER
    smbs_transmitted : LARGE_INTEGER
    paging_write_bytes_requested : LARGE_INTEGER
    non_paging_write_bytes_requested : LARGE_INTEGER
    cache_write_bytes_requested : LARGE_INTEGER
    network_write_bytes_requested : LARGE_INTEGER
    initially_failed_operations : UInt32
    failed_completion_operations : UInt32
    read_operations : UInt32
    random_read_operations : UInt32
    read_smbs : UInt32
    large_read_smbs : UInt32
    small_read_smbs : UInt32
    write_operations : UInt32
    random_write_operations : UInt32
    write_smbs : UInt32
    large_write_smbs : UInt32
    small_write_smbs : UInt32
    raw_reads_denied : UInt32
    raw_writes_denied : UInt32
    network_errors : UInt32
    sessions : UInt32
    failed_sessions : UInt32
    reconnects : UInt32
    core_connects : UInt32
    lanman20_connects : UInt32
    lanman21_connects : UInt32
    lanman_nt_connects : UInt32
    server_disconnects : UInt32
    hung_sessions : UInt32
    use_count : UInt32
    failed_use_count : UInt32
    current_commands : UInt32
  end
  struct STAT_SERVER_0
    sts0_start : UInt32
    sts0_fopens : UInt32
    sts0_devopens : UInt32
    sts0_jobsqueued : UInt32
    sts0_sopens : UInt32
    sts0_stimedout : UInt32
    sts0_serrorout : UInt32
    sts0_pwerrors : UInt32
    sts0_permerrors : UInt32
    sts0_syserrors : UInt32
    sts0_bytessent_low : UInt32
    sts0_bytessent_high : UInt32
    sts0_bytesrcvd_low : UInt32
    sts0_bytesrcvd_high : UInt32
    sts0_avresponse : UInt32
    sts0_reqbufneed : UInt32
    sts0_bigbufneed : UInt32
  end
  struct FH_OVERLAPPED
    internal : LibC::UINT_PTR
    internal_high : LibC::UINT_PTR
    offset : UInt32
    offset_high : UInt32
    h_event : LibC::HANDLE
    pfn_completion : PFN_IO_COMPLETION
    reserved1 : LibC::UINT_PTR
    reserved2 : LibC::UINT_PTR
    reserved3 : LibC::UINT_PTR
    reserved4 : LibC::UINT_PTR
  end
  struct FIO_CONTEXT
    m_dw_temp_hack : UInt32
    m_dw_signature : UInt32
    m_h_file : LibC::HANDLE
    m_dw_lines_offset : UInt32
    m_dw_header_length : UInt32
  end
  struct NAME_CACHE_CONTEXT
    m_dw_signature : UInt32
  end
  struct IORING_BUFFER_INFO
    address : Void*
    length : UInt32
  end
  struct IORING_REGISTERED_BUFFER
    buffer_index : UInt32
    offset : UInt32
  end
  struct HIORING__
    unused : Int32
  end
  struct IORING_CREATE_FLAGS
    required : IORING_CREATE_REQUIRED_FLAGS
    advisory : IORING_CREATE_ADVISORY_FLAGS
  end
  struct IORING_INFO
    io_ring_version : IORING_VERSION
    flags : IORING_CREATE_FLAGS
    submission_queue_size : UInt32
    completion_queue_size : UInt32
  end
  struct IORING_CAPABILITIES
    max_version : IORING_VERSION
    max_submission_queue_size : UInt32
    max_completion_queue_size : UInt32
    feature_flags : IORING_FEATURE_FLAGS
  end
  struct IORING_HANDLE_REF
    kind : IORING_REF_KIND
    handle : IORING_HANDLE_REF_HandleUnion
  end
  struct IORING_BUFFER_REF
    kind : IORING_REF_KIND
    buffer : IORING_BUFFER_REF_BufferUnion
  end
  struct IORING_CQE
    user_data : LibC::UINT_PTR
    result_code : HRESULT
    information : LibC::UINT_PTR
  end
  struct FILE_ID_128
    identifier : UInt8[16]*
  end
  struct FILE_NOTIFY_INFORMATION
    next_entry_offset : UInt32
    action : FILE_ACTION
    file_name_length : UInt32
    file_name : Char[0]*
  end
  struct FILE_NOTIFY_EXTENDED_INFORMATION
    next_entry_offset : UInt32
    action : FILE_ACTION
    creation_time : LARGE_INTEGER
    last_modification_time : LARGE_INTEGER
    last_change_time : LARGE_INTEGER
    last_access_time : LARGE_INTEGER
    allocated_length : LARGE_INTEGER
    file_size : LARGE_INTEGER
    file_attributes : UInt32
    reparse_point_tag : UInt32
    file_id : LARGE_INTEGER
    parent_file_id : LARGE_INTEGER
    file_name_length : UInt32
    file_name : Char[0]*
  end
  struct REPARSE_GUID_DATA_BUFFER
    reparse_tag : UInt32
    reparse_data_length : UInt16
    reserved : UInt16
    reparse_guid : Guid
    generic_reparse_buffer : REPARSE_GUID_DATA_BUFFER_GenericReparseBuffer_e__Struct
  end
  struct REPARSE_GUID_DATA_BUFFER_GenericReparseBuffer_e__Struct
    data_buffer : UInt8[0]*
  end
  struct TAPE_ERASE
    type : ERASE_TAPE_TYPE
    immediate : BOOLEAN
  end
  struct TAPE_PREPARE
    operation : PREPARE_TAPE_OPERATION
    immediate : BOOLEAN
  end
  struct TAPE_WRITE_MARKS
    type : TAPEMARK_TYPE
    count : UInt32
    immediate : BOOLEAN
  end
  struct TAPE_GET_POSITION
    type : TAPE_POSITION_TYPE
    partition : UInt32
    offset : LARGE_INTEGER
  end
  struct TAPE_SET_POSITION
    method : TAPE_POSITION_METHOD
    partition : UInt32
    offset : LARGE_INTEGER
    immediate : BOOLEAN
  end
  struct OFSTRUCT
    c_bytes : UInt8
    f_fixed_disk : UInt8
    n_err_code : UInt16
    reserved1 : UInt16
    reserved2 : UInt16
    sz_path_name : CHAR[128]*
  end
  struct WIN32_STREAM_ID
    dw_stream_id : WIN_STREAM_ID
    dw_stream_attributes : UInt32
    size : LARGE_INTEGER
    dw_stream_name_size : UInt32
    c_stream_name : Char[0]*
  end
  struct COPYFILE2_MESSAGE
    type : COPYFILE2_MESSAGE_TYPE
    dw_padding : UInt32
    info : COPYFILE2_MESSAGE_Info_e__Union
  end
  struct COPYFILE2_MESSAGE_Info_e__Union_Error_e__Struct
    copy_phase : COPYFILE2_COPY_PHASE
    dw_stream_number : UInt32
    hr_failure : HRESULT
    dw_reserved : UInt32
    uli_chunk_number : ULARGE_INTEGER
    uli_stream_size : ULARGE_INTEGER
    uli_stream_bytes_transferred : ULARGE_INTEGER
    uli_total_file_size : ULARGE_INTEGER
    uli_total_bytes_transferred : ULARGE_INTEGER
  end
  struct COPYFILE2_MESSAGE_Info_e__Union_StreamFinished_e__Struct
    dw_stream_number : UInt32
    dw_reserved : UInt32
    h_source_file : LibC::HANDLE
    h_destination_file : LibC::HANDLE
    uli_stream_size : ULARGE_INTEGER
    uli_stream_bytes_transferred : ULARGE_INTEGER
    uli_total_file_size : ULARGE_INTEGER
    uli_total_bytes_transferred : ULARGE_INTEGER
  end
  struct COPYFILE2_MESSAGE_Info_e__Union_ChunkFinished_e__Struct
    dw_stream_number : UInt32
    dw_flags : UInt32
    h_source_file : LibC::HANDLE
    h_destination_file : LibC::HANDLE
    uli_chunk_number : ULARGE_INTEGER
    uli_chunk_size : ULARGE_INTEGER
    uli_stream_size : ULARGE_INTEGER
    uli_stream_bytes_transferred : ULARGE_INTEGER
    uli_total_file_size : ULARGE_INTEGER
    uli_total_bytes_transferred : ULARGE_INTEGER
  end
  struct COPYFILE2_MESSAGE_Info_e__Union_PollContinue_e__Struct
    dw_reserved : UInt32
  end
  struct COPYFILE2_MESSAGE_Info_e__Union_ChunkStarted_e__Struct
    dw_stream_number : UInt32
    dw_reserved : UInt32
    h_source_file : LibC::HANDLE
    h_destination_file : LibC::HANDLE
    uli_chunk_number : ULARGE_INTEGER
    uli_chunk_size : ULARGE_INTEGER
    uli_stream_size : ULARGE_INTEGER
    uli_total_file_size : ULARGE_INTEGER
  end
  struct COPYFILE2_MESSAGE_Info_e__Union_StreamStarted_e__Struct
    dw_stream_number : UInt32
    dw_reserved : UInt32
    h_source_file : LibC::HANDLE
    h_destination_file : LibC::HANDLE
    uli_stream_size : ULARGE_INTEGER
    uli_total_file_size : ULARGE_INTEGER
  end
  struct COPYFILE2_EXTENDED_PARAMETERS
    dw_size : UInt32
    dw_copy_flags : UInt32
    pf_cancel : LibC::BOOL*
    p_progress_routine : PCOPYFILE2_PROGRESS_ROUTINE
    pv_callback_context : Void*
  end
  struct COPYFILE2_EXTENDED_PARAMETERS_V2
    dw_size : UInt32
    dw_copy_flags : UInt32
    pf_cancel : LibC::BOOL*
    p_progress_routine : PCOPYFILE2_PROGRESS_ROUTINE
    pv_callback_context : Void*
    dw_copy_flags_v2 : UInt32
    io_desired_size : UInt32
    io_desired_rate : UInt32
    reserved : Void[8]**
  end
  struct FILE_BASIC_INFO
    creation_time : LARGE_INTEGER
    last_access_time : LARGE_INTEGER
    last_write_time : LARGE_INTEGER
    change_time : LARGE_INTEGER
    file_attributes : UInt32
  end
  struct FILE_STANDARD_INFO
    allocation_size : LARGE_INTEGER
    end_of_file : LARGE_INTEGER
    number_of_links : UInt32
    delete_pending : BOOLEAN
    directory : BOOLEAN
  end
  struct FILE_NAME_INFO
    file_name_length : UInt32
    file_name : Char[0]*
  end
  struct FILE_RENAME_INFO
    anonymous : FILE_RENAME_INFO_Anonymous_e__Union
    root_directory : LibC::HANDLE
    file_name_length : UInt32
    file_name : Char[0]*
  end
  struct FILE_ALLOCATION_INFO
    allocation_size : LARGE_INTEGER
  end
  struct FILE_END_OF_FILE_INFO
    end_of_file : LARGE_INTEGER
  end
  struct FILE_STREAM_INFO
    next_entry_offset : UInt32
    stream_name_length : UInt32
    stream_size : LARGE_INTEGER
    stream_allocation_size : LARGE_INTEGER
    stream_name : Char[0]*
  end
  struct FILE_COMPRESSION_INFO
    compressed_file_size : LARGE_INTEGER
    compression_format : UInt16
    compression_unit_shift : UInt8
    chunk_shift : UInt8
    cluster_shift : UInt8
    reserved : UInt8[3]*
  end
  struct FILE_ATTRIBUTE_TAG_INFO
    file_attributes : UInt32
    reparse_tag : UInt32
  end
  struct FILE_DISPOSITION_INFO
    delete_file_a : BOOLEAN
  end
  struct FILE_ID_BOTH_DIR_INFO
    next_entry_offset : UInt32
    file_index : UInt32
    creation_time : LARGE_INTEGER
    last_access_time : LARGE_INTEGER
    last_write_time : LARGE_INTEGER
    change_time : LARGE_INTEGER
    end_of_file : LARGE_INTEGER
    allocation_size : LARGE_INTEGER
    file_attributes : UInt32
    file_name_length : UInt32
    ea_size : UInt32
    short_name_length : Int8
    short_name : Char[12]*
    file_id : LARGE_INTEGER
    file_name : Char[0]*
  end
  struct FILE_FULL_DIR_INFO
    next_entry_offset : UInt32
    file_index : UInt32
    creation_time : LARGE_INTEGER
    last_access_time : LARGE_INTEGER
    last_write_time : LARGE_INTEGER
    change_time : LARGE_INTEGER
    end_of_file : LARGE_INTEGER
    allocation_size : LARGE_INTEGER
    file_attributes : UInt32
    file_name_length : UInt32
    ea_size : UInt32
    file_name : Char[0]*
  end
  struct FILE_IO_PRIORITY_HINT_INFO
    priority_hint : PRIORITY_HINT
  end
  struct FILE_ALIGNMENT_INFO
    alignment_requirement : UInt32
  end
  struct FILE_STORAGE_INFO
    logical_bytes_per_sector : UInt32
    physical_bytes_per_sector_for_atomicity : UInt32
    physical_bytes_per_sector_for_performance : UInt32
    file_system_effective_physical_bytes_per_sector_for_atomicity : UInt32
    flags : UInt32
    byte_offset_for_sector_alignment : UInt32
    byte_offset_for_partition_alignment : UInt32
  end
  struct FILE_ID_INFO
    volume_serial_number : UInt64
    file_id : FILE_ID_128
  end
  struct FILE_ID_EXTD_DIR_INFO
    next_entry_offset : UInt32
    file_index : UInt32
    creation_time : LARGE_INTEGER
    last_access_time : LARGE_INTEGER
    last_write_time : LARGE_INTEGER
    change_time : LARGE_INTEGER
    end_of_file : LARGE_INTEGER
    allocation_size : LARGE_INTEGER
    file_attributes : UInt32
    file_name_length : UInt32
    ea_size : UInt32
    reparse_point_tag : UInt32
    file_id : FILE_ID_128
    file_name : Char[0]*
  end
  struct FILE_REMOTE_PROTOCOL_INFO
    structure_version : UInt16
    structure_size : UInt16
    protocol : UInt32
    protocol_major_version : UInt16
    protocol_minor_version : UInt16
    protocol_revision : UInt16
    reserved : UInt16
    flags : UInt32
    generic_reserved : FILE_REMOTE_PROTOCOL_INFO_GenericReserved_e__Struct
    protocol_specific : FILE_REMOTE_PROTOCOL_INFO_ProtocolSpecific_e__Union
  end
  struct FILE_REMOTE_PROTOCOL_INFO_ProtocolSpecific_e__Union_Smb2_e__Struct
    server : FILE_REMOTE_PROTOCOL_INFO_ProtocolSpecific_e__Union_Smb2_e__Struct_Server_e__Struct
    share : FILE_REMOTE_PROTOCOL_INFO_ProtocolSpecific_e__Union_Smb2_e__Struct_Share_e__Struct
  end
  struct FILE_REMOTE_PROTOCOL_INFO_ProtocolSpecific_e__Union_Smb2_e__Struct_Server_e__Struct
    capabilities : UInt32
  end
  struct FILE_REMOTE_PROTOCOL_INFO_ProtocolSpecific_e__Union_Smb2_e__Struct_Share_e__Struct
    capabilities : UInt32
    caching_flags : UInt32
  end
  struct FILE_REMOTE_PROTOCOL_INFO_GenericReserved_e__Struct
    reserved : UInt32[8]*
  end
  struct FILE_ID_DESCRIPTOR
    dw_size : UInt32
    type : FILE_ID_TYPE
    anonymous : FILE_ID_DESCRIPTOR_Anonymous_e__Union
  end


  struct IDiskQuotaUserVTbl
    query_interface : Proc(IDiskQuotaUser*, Guid*, Void**, HRESULT)
    add_ref : Proc(IDiskQuotaUser*, UInt32)
    release : Proc(IDiskQuotaUser*, UInt32)
    get_id : Proc(IDiskQuotaUser*, UInt32*, HRESULT)
    get_name : Proc(IDiskQuotaUser*, LibC::LPWSTR, UInt32, LibC::LPWSTR, UInt32, LibC::LPWSTR, UInt32, HRESULT)
    get_sid_length : Proc(IDiskQuotaUser*, UInt32*, HRESULT)
    get_sid : Proc(IDiskQuotaUser*, UInt8*, UInt32, HRESULT)
    get_quota_threshold : Proc(IDiskQuotaUser*, Int64*, HRESULT)
    get_quota_threshold_text : Proc(IDiskQuotaUser*, LibC::LPWSTR, UInt32, HRESULT)
    get_quota_limit : Proc(IDiskQuotaUser*, Int64*, HRESULT)
    get_quota_limit_text : Proc(IDiskQuotaUser*, LibC::LPWSTR, UInt32, HRESULT)
    get_quota_used : Proc(IDiskQuotaUser*, Int64*, HRESULT)
    get_quota_used_text : Proc(IDiskQuotaUser*, LibC::LPWSTR, UInt32, HRESULT)
    get_quota_information : Proc(IDiskQuotaUser*, Void*, UInt32, HRESULT)
    set_quota_threshold : Proc(IDiskQuotaUser*, Int64, LibC::BOOL, HRESULT)
    set_quota_limit : Proc(IDiskQuotaUser*, Int64, LibC::BOOL, HRESULT)
    invalidate : Proc(IDiskQuotaUser*, HRESULT)
    get_account_status : Proc(IDiskQuotaUser*, UInt32*, HRESULT)
  end

  IDiskQuotaUser_GUID = LibC::GUID.new("7988b574-ec89-11cf-9c00-00aa00a14f56")
  CLSID_IDiskQuotaUser = "7988b574-ec89-11cf-9c00-00aa00a14f56"
  struct IDiskQuotaUser
    lpVtbl : IDiskQuotaUserVTbl*
  end

  struct IEnumDiskQuotaUsersVTbl
    query_interface : Proc(IEnumDiskQuotaUsers*, Guid*, Void**, HRESULT)
    add_ref : Proc(IEnumDiskQuotaUsers*, UInt32)
    release : Proc(IEnumDiskQuotaUsers*, UInt32)
    next : Proc(IEnumDiskQuotaUsers*, UInt32, IDiskQuotaUser*, UInt32*, HRESULT)
    skip : Proc(IEnumDiskQuotaUsers*, UInt32, HRESULT)
    reset : Proc(IEnumDiskQuotaUsers*, HRESULT)
    clone : Proc(IEnumDiskQuotaUsers*, IEnumDiskQuotaUsers*, HRESULT)
  end

  IEnumDiskQuotaUsers_GUID = LibC::GUID.new("7988b577-ec89-11cf-9c00-00aa00a14f56")
  CLSID_IEnumDiskQuotaUsers = "7988b577-ec89-11cf-9c00-00aa00a14f56"
  struct IEnumDiskQuotaUsers
    lpVtbl : IEnumDiskQuotaUsersVTbl*
  end

  struct IDiskQuotaUserBatchVTbl
    query_interface : Proc(IDiskQuotaUserBatch*, Guid*, Void**, HRESULT)
    add_ref : Proc(IDiskQuotaUserBatch*, UInt32)
    release : Proc(IDiskQuotaUserBatch*, UInt32)
    add : Proc(IDiskQuotaUserBatch*, IDiskQuotaUser, HRESULT)
    remove : Proc(IDiskQuotaUserBatch*, IDiskQuotaUser, HRESULT)
    remove_all : Proc(IDiskQuotaUserBatch*, HRESULT)
    flush_to_disk : Proc(IDiskQuotaUserBatch*, HRESULT)
  end

  IDiskQuotaUserBatch_GUID = LibC::GUID.new("7988b576-ec89-11cf-9c00-00aa00a14f56")
  CLSID_IDiskQuotaUserBatch = "7988b576-ec89-11cf-9c00-00aa00a14f56"
  struct IDiskQuotaUserBatch
    lpVtbl : IDiskQuotaUserBatchVTbl*
  end

  struct IDiskQuotaControlVTbl
    query_interface : Proc(IDiskQuotaControl*, Guid*, Void**, HRESULT)
    add_ref : Proc(IDiskQuotaControl*, UInt32)
    release : Proc(IDiskQuotaControl*, UInt32)
    enum_connection_points : Proc(IDiskQuotaControl*, IEnumConnectionPoints*, HRESULT)
    find_connection_point : Proc(IDiskQuotaControl*, Guid*, IConnectionPoint*, HRESULT)
    initialize : Proc(IDiskQuotaControl*, LibC::LPWSTR, LibC::BOOL, HRESULT)
    set_quota_state : Proc(IDiskQuotaControl*, UInt32, HRESULT)
    get_quota_state : Proc(IDiskQuotaControl*, UInt32*, HRESULT)
    set_quota_log_flags : Proc(IDiskQuotaControl*, UInt32, HRESULT)
    get_quota_log_flags : Proc(IDiskQuotaControl*, UInt32*, HRESULT)
    set_default_quota_threshold : Proc(IDiskQuotaControl*, Int64, HRESULT)
    get_default_quota_threshold : Proc(IDiskQuotaControl*, Int64*, HRESULT)
    get_default_quota_threshold_text : Proc(IDiskQuotaControl*, LibC::LPWSTR, UInt32, HRESULT)
    set_default_quota_limit : Proc(IDiskQuotaControl*, Int64, HRESULT)
    get_default_quota_limit : Proc(IDiskQuotaControl*, Int64*, HRESULT)
    get_default_quota_limit_text : Proc(IDiskQuotaControl*, LibC::LPWSTR, UInt32, HRESULT)
    add_user_sid : Proc(IDiskQuotaControl*, PSID, DISKQUOTA_USERNAME_RESOLVE, IDiskQuotaUser*, HRESULT)
    add_user_name : Proc(IDiskQuotaControl*, LibC::LPWSTR, DISKQUOTA_USERNAME_RESOLVE, IDiskQuotaUser*, HRESULT)
    delete_user : Proc(IDiskQuotaControl*, IDiskQuotaUser, HRESULT)
    find_user_sid : Proc(IDiskQuotaControl*, PSID, DISKQUOTA_USERNAME_RESOLVE, IDiskQuotaUser*, HRESULT)
    find_user_name : Proc(IDiskQuotaControl*, LibC::LPWSTR, IDiskQuotaUser*, HRESULT)
    create_enum_users : Proc(IDiskQuotaControl*, PSID*, UInt32, DISKQUOTA_USERNAME_RESOLVE, IEnumDiskQuotaUsers*, HRESULT)
    create_user_batch : Proc(IDiskQuotaControl*, IDiskQuotaUserBatch*, HRESULT)
    invalidate_sid_name_cache : Proc(IDiskQuotaControl*, HRESULT)
    give_user_name_resolution_priority : Proc(IDiskQuotaControl*, IDiskQuotaUser, HRESULT)
    shutdown_name_resolution : Proc(IDiskQuotaControl*, HRESULT)
  end

  IDiskQuotaControl_GUID = LibC::GUID.new("7988b572-ec89-11cf-9c00-00aa00a14f56")
  CLSID_IDiskQuotaControl = "7988b572-ec89-11cf-9c00-00aa00a14f56"
  struct IDiskQuotaControl
    lpVtbl : IDiskQuotaControlVTbl*
  end

  struct IDiskQuotaEventsVTbl
    query_interface : Proc(IDiskQuotaEvents*, Guid*, Void**, HRESULT)
    add_ref : Proc(IDiskQuotaEvents*, UInt32)
    release : Proc(IDiskQuotaEvents*, UInt32)
    on_user_name_changed : Proc(IDiskQuotaEvents*, IDiskQuotaUser, HRESULT)
  end

  IDiskQuotaEvents_GUID = LibC::GUID.new("7988b579-ec89-11cf-9c00-00aa00a14f56")
  CLSID_IDiskQuotaEvents = "7988b579-ec89-11cf-9c00-00aa00a14f56"
  struct IDiskQuotaEvents
    lpVtbl : IDiskQuotaEventsVTbl*
  end


  # Params # lppath : LibC::LPWSTR [In],lpfilename : LibC::LPWSTR [In],lpextension : LibC::LPWSTR [In],nbufferlength : UInt32 [In],lpbuffer : Char* [In],lpfilepart : LibC::LPWSTR* [In]
  fun SearchPathW(lppath : LibC::LPWSTR, lpfilename : LibC::LPWSTR, lpextension : LibC::LPWSTR, nbufferlength : UInt32, lpbuffer : Char*, lpfilepart : LibC::LPWSTR*) : UInt32

  # Params # lppath : PSTR [In],lpfilename : PSTR [In],lpextension : PSTR [In],nbufferlength : UInt32 [In],lpbuffer : UInt8* [In],lpfilepart : PSTR* [In]
  fun SearchPathA(lppath : PSTR, lpfilename : PSTR, lpextension : PSTR, nbufferlength : UInt32, lpbuffer : UInt8*, lpfilepart : PSTR*) : UInt32

  # Params # lpfiletime1 : FILETIME* [In],lpfiletime2 : FILETIME* [In]
  fun CompareFileTime(lpfiletime1 : FILETIME*, lpfiletime2 : FILETIME*) : Int32

  # Params # lppathname : PSTR [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In]
  fun CreateDirectoryA(lppathname : PSTR, lpsecurityattributes : SECURITY_ATTRIBUTES*) : LibC::BOOL

  # Params # lppathname : LibC::LPWSTR [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In]
  fun CreateDirectoryW(lppathname : LibC::LPWSTR, lpsecurityattributes : SECURITY_ATTRIBUTES*) : LibC::BOOL

  # Params # lpfilename : PSTR [In],dwdesiredaccess : FILE_ACCESS_FLAGS [In],dwsharemode : FILE_SHARE_MODE [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In],dwcreationdisposition : FILE_CREATION_DISPOSITION [In],dwflagsandattributes : FILE_FLAGS_AND_ATTRIBUTES [In],htemplatefile : LibC::HANDLE [In]
  fun CreateFileA(lpfilename : PSTR, dwdesiredaccess : FILE_ACCESS_FLAGS, dwsharemode : FILE_SHARE_MODE, lpsecurityattributes : SECURITY_ATTRIBUTES*, dwcreationdisposition : FILE_CREATION_DISPOSITION, dwflagsandattributes : FILE_FLAGS_AND_ATTRIBUTES, htemplatefile : LibC::HANDLE) : LibC::HANDLE

  # Params # lpfilename : LibC::LPWSTR [In],dwdesiredaccess : FILE_ACCESS_FLAGS [In],dwsharemode : FILE_SHARE_MODE [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In],dwcreationdisposition : FILE_CREATION_DISPOSITION [In],dwflagsandattributes : FILE_FLAGS_AND_ATTRIBUTES [In],htemplatefile : LibC::HANDLE [In]
  # Commented out because function is part of Lib C
  #fun CreateFileW(lpfilename : LibC::LPWSTR, dwdesiredaccess : FILE_ACCESS_FLAGS, dwsharemode : FILE_SHARE_MODE, lpsecurityattributes : SECURITY_ATTRIBUTES*, dwcreationdisposition : FILE_CREATION_DISPOSITION, dwflagsandattributes : FILE_FLAGS_AND_ATTRIBUTES, htemplatefile : LibC::HANDLE) : LibC::HANDLE

  # Params # dwflags : DEFINE_DOS_DEVICE_FLAGS [In],lpdevicename : LibC::LPWSTR [In],lptargetpath : LibC::LPWSTR [In]
  fun DefineDosDeviceW(dwflags : DEFINE_DOS_DEVICE_FLAGS, lpdevicename : LibC::LPWSTR, lptargetpath : LibC::LPWSTR) : LibC::BOOL

  # Params # lpfilename : PSTR [In]
  fun DeleteFileA(lpfilename : PSTR) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In]
  fun DeleteFileW(lpfilename : LibC::LPWSTR) : LibC::BOOL

  # Params # lpszvolumemountpoint : LibC::LPWSTR [In]
  fun DeleteVolumeMountPointW(lpszvolumemountpoint : LibC::LPWSTR) : LibC::BOOL

  # Params # lpfiletime : FILETIME* [In],lplocalfiletime : FILETIME* [In]
  fun FileTimeToLocalFileTime(lpfiletime : FILETIME*, lplocalfiletime : FILETIME*) : LibC::BOOL

  # Params # hfindfile : FindFileHandle [In]
  # Commented out because function is part of Lib C
  #fun FindClose(hfindfile : FindFileHandle) : LibC::BOOL

  # Params # hchangehandle : FindChangeNotificationHandle [In]
  fun FindCloseChangeNotification(hchangehandle : FindChangeNotificationHandle) : LibC::BOOL

  # Params # lppathname : PSTR [In],bwatchsubtree : LibC::BOOL [In],dwnotifyfilter : FILE_NOTIFY_CHANGE [In]
  fun FindFirstChangeNotificationA(lppathname : PSTR, bwatchsubtree : LibC::BOOL, dwnotifyfilter : FILE_NOTIFY_CHANGE) : FindChangeNotificationHandle

  # Params # lppathname : LibC::LPWSTR [In],bwatchsubtree : LibC::BOOL [In],dwnotifyfilter : FILE_NOTIFY_CHANGE [In]
  fun FindFirstChangeNotificationW(lppathname : LibC::LPWSTR, bwatchsubtree : LibC::BOOL, dwnotifyfilter : FILE_NOTIFY_CHANGE) : FindChangeNotificationHandle

  # Params # lpfilename : PSTR [In],lpfindfiledata : WIN32_FIND_DATAA* [In]
  fun FindFirstFileA(lpfilename : PSTR, lpfindfiledata : WIN32_FIND_DATAA*) : FindFileHandle

  # Params # lpfilename : LibC::LPWSTR [In],lpfindfiledata : WIN32_FIND_DATAW* [In]
  # Commented out because function is part of Lib C
  #fun FindFirstFileW(lpfilename : LibC::LPWSTR, lpfindfiledata : WIN32_FIND_DATAW*) : FindFileHandle

  # Params # lpfilename : PSTR [In],finfolevelid : FINDEX_INFO_LEVELS [In],lpfindfiledata : Void* [In],fsearchop : FINDEX_SEARCH_OPS [In],lpsearchfilter : Void* [In],dwadditionalflags : FIND_FIRST_EX_FLAGS [In]
  fun FindFirstFileExA(lpfilename : PSTR, finfolevelid : FINDEX_INFO_LEVELS, lpfindfiledata : Void*, fsearchop : FINDEX_SEARCH_OPS, lpsearchfilter : Void*, dwadditionalflags : FIND_FIRST_EX_FLAGS) : FindFileHandle

  # Params # lpfilename : LibC::LPWSTR [In],finfolevelid : FINDEX_INFO_LEVELS [In],lpfindfiledata : Void* [In],fsearchop : FINDEX_SEARCH_OPS [In],lpsearchfilter : Void* [In],dwadditionalflags : FIND_FIRST_EX_FLAGS [In]
  fun FindFirstFileExW(lpfilename : LibC::LPWSTR, finfolevelid : FINDEX_INFO_LEVELS, lpfindfiledata : Void*, fsearchop : FINDEX_SEARCH_OPS, lpsearchfilter : Void*, dwadditionalflags : FIND_FIRST_EX_FLAGS) : FindFileHandle

  # Params # lpszvolumename : Char* [In],cchbufferlength : UInt32 [In]
  fun FindFirstVolumeW(lpszvolumename : Char*, cchbufferlength : UInt32) : FindVolumeHandle

  # Params # hchangehandle : FindChangeNotificationHandle [In]
  fun FindNextChangeNotification(hchangehandle : FindChangeNotificationHandle) : LibC::BOOL

  # Params # hfindfile : FindFileHandle [In],lpfindfiledata : WIN32_FIND_DATAA* [In]
  fun FindNextFileA(hfindfile : FindFileHandle, lpfindfiledata : WIN32_FIND_DATAA*) : LibC::BOOL

  # Params # hfindfile : LibC::HANDLE [In],lpfindfiledata : WIN32_FIND_DATAW* [In]
  # Commented out because function is part of Lib C
  #fun FindNextFileW(hfindfile : LibC::HANDLE, lpfindfiledata : WIN32_FIND_DATAW*) : LibC::BOOL

  # Params # hfindvolume : FindVolumeHandle [In],lpszvolumename : Char* [In],cchbufferlength : UInt32 [In]
  fun FindNextVolumeW(hfindvolume : FindVolumeHandle, lpszvolumename : Char*, cchbufferlength : UInt32) : LibC::BOOL

  # Params # hfindvolume : FindVolumeHandle [In]
  fun FindVolumeClose(hfindvolume : FindVolumeHandle) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In]
  fun FlushFileBuffers(hfile : LibC::HANDLE) : LibC::BOOL

  # Params # lprootpathname : PSTR [In],lpsectorspercluster : UInt32* [In],lpbytespersector : UInt32* [In],lpnumberoffreeclusters : UInt32* [In],lptotalnumberofclusters : UInt32* [In]
  fun GetDiskFreeSpaceA(lprootpathname : PSTR, lpsectorspercluster : UInt32*, lpbytespersector : UInt32*, lpnumberoffreeclusters : UInt32*, lptotalnumberofclusters : UInt32*) : LibC::BOOL

  # Params # lprootpathname : LibC::LPWSTR [In],lpsectorspercluster : UInt32* [In],lpbytespersector : UInt32* [In],lpnumberoffreeclusters : UInt32* [In],lptotalnumberofclusters : UInt32* [In]
  fun GetDiskFreeSpaceW(lprootpathname : LibC::LPWSTR, lpsectorspercluster : UInt32*, lpbytespersector : UInt32*, lpnumberoffreeclusters : UInt32*, lptotalnumberofclusters : UInt32*) : LibC::BOOL

  # Params # lpdirectoryname : PSTR [In],lpfreebytesavailabletocaller : ULARGE_INTEGER* [In],lptotalnumberofbytes : ULARGE_INTEGER* [In],lptotalnumberoffreebytes : ULARGE_INTEGER* [In]
  fun GetDiskFreeSpaceExA(lpdirectoryname : PSTR, lpfreebytesavailabletocaller : ULARGE_INTEGER*, lptotalnumberofbytes : ULARGE_INTEGER*, lptotalnumberoffreebytes : ULARGE_INTEGER*) : LibC::BOOL

  # Params # lpdirectoryname : LibC::LPWSTR [In],lpfreebytesavailabletocaller : ULARGE_INTEGER* [In],lptotalnumberofbytes : ULARGE_INTEGER* [In],lptotalnumberoffreebytes : ULARGE_INTEGER* [In]
  fun GetDiskFreeSpaceExW(lpdirectoryname : LibC::LPWSTR, lpfreebytesavailabletocaller : ULARGE_INTEGER*, lptotalnumberofbytes : ULARGE_INTEGER*, lptotalnumberoffreebytes : ULARGE_INTEGER*) : LibC::BOOL

  # Params # rootpath : PSTR [In],diskspaceinfo : DISK_SPACE_INFORMATION* [In]
  fun GetDiskSpaceInformationA(rootpath : PSTR, diskspaceinfo : DISK_SPACE_INFORMATION*) : HRESULT

  # Params # rootpath : LibC::LPWSTR [In],diskspaceinfo : DISK_SPACE_INFORMATION* [In]
  fun GetDiskSpaceInformationW(rootpath : LibC::LPWSTR, diskspaceinfo : DISK_SPACE_INFORMATION*) : HRESULT

  # Params # lprootpathname : PSTR [In]
  fun GetDriveTypeA(lprootpathname : PSTR) : UInt32

  # Params # lprootpathname : LibC::LPWSTR [In]
  fun GetDriveTypeW(lprootpathname : LibC::LPWSTR) : UInt32

  # Params # lpfilename : PSTR [In]
  fun GetFileAttributesA(lpfilename : PSTR) : UInt32

  # Params # lpfilename : LibC::LPWSTR [In]
  # Commented out because function is part of Lib C
  #fun GetFileAttributesW(lpfilename : LibC::LPWSTR) : UInt32

  # Params # lpfilename : PSTR [In],finfolevelid : GET_FILEEX_INFO_LEVELS [In],lpfileinformation : Void* [In]
  fun GetFileAttributesExA(lpfilename : PSTR, finfolevelid : GET_FILEEX_INFO_LEVELS, lpfileinformation : Void*) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],finfolevelid : GET_FILEEX_INFO_LEVELS [In],lpfileinformation : Void* [In]
  # Commented out because function is part of Lib C
  #fun GetFileAttributesExW(lpfilename : LibC::LPWSTR, finfolevelid : GET_FILEEX_INFO_LEVELS, lpfileinformation : Void*) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],lpfileinformation : BY_HANDLE_FILE_INFORMATION* [In]
  # Commented out because function is part of Lib C
  #fun GetFileInformationByHandle(hfile : LibC::HANDLE, lpfileinformation : BY_HANDLE_FILE_INFORMATION*) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],lpfilesizehigh : UInt32* [In]
  fun GetFileSize(hfile : LibC::HANDLE, lpfilesizehigh : UInt32*) : UInt32

  # Params # hfile : LibC::HANDLE [In],lpfilesize : LARGE_INTEGER* [In]
  fun GetFileSizeEx(hfile : LibC::HANDLE, lpfilesize : LARGE_INTEGER*) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In]
  # Commented out because function is part of Lib C
  #fun GetFileType(hfile : LibC::HANDLE) : UInt32

  # Params # hfile : LibC::HANDLE [In],lpszfilepath : UInt8* [In],cchfilepath : UInt32 [In],dwflags : FILE_NAME [In]
  fun GetFinalPathNameByHandleA(hfile : LibC::HANDLE, lpszfilepath : UInt8*, cchfilepath : UInt32, dwflags : FILE_NAME) : UInt32

  # Params # hfile : LibC::HANDLE [In],lpszfilepath : Char* [In],cchfilepath : UInt32 [In],dwflags : FILE_NAME [In]
  fun GetFinalPathNameByHandleW(hfile : LibC::HANDLE, lpszfilepath : Char*, cchfilepath : UInt32, dwflags : FILE_NAME) : UInt32

  # Params # hfile : LibC::HANDLE [In],lpcreationtime : FILETIME* [In],lplastaccesstime : FILETIME* [In],lplastwritetime : FILETIME* [In]
  fun GetFileTime(hfile : LibC::HANDLE, lpcreationtime : FILETIME*, lplastaccesstime : FILETIME*, lplastwritetime : FILETIME*) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],nbufferlength : UInt32 [In],lpbuffer : Char* [In],lpfilepart : LibC::LPWSTR* [In]
  # Commented out because function is part of Lib C
  #fun GetFullPathNameW(lpfilename : LibC::LPWSTR, nbufferlength : UInt32, lpbuffer : Char*, lpfilepart : LibC::LPWSTR*) : UInt32

  # Params # lpfilename : PSTR [In],nbufferlength : UInt32 [In],lpbuffer : UInt8* [In],lpfilepart : PSTR* [In]
  fun GetFullPathNameA(lpfilename : PSTR, nbufferlength : UInt32, lpbuffer : UInt8*, lpfilepart : PSTR*) : UInt32

  # Params # 
  fun GetLogicalDrives : UInt32

  # Params # nbufferlength : UInt32 [In],lpbuffer : Char* [In]
  fun GetLogicalDriveStringsW(nbufferlength : UInt32, lpbuffer : Char*) : UInt32

  # Params # lpszshortpath : PSTR [In],lpszlongpath : UInt8* [In],cchbuffer : UInt32 [In]
  fun GetLongPathNameA(lpszshortpath : PSTR, lpszlongpath : UInt8*, cchbuffer : UInt32) : UInt32

  # Params # lpszshortpath : LibC::LPWSTR [In],lpszlongpath : Char* [In],cchbuffer : UInt32 [In]
  fun GetLongPathNameW(lpszshortpath : LibC::LPWSTR, lpszlongpath : Char*, cchbuffer : UInt32) : UInt32

  # Params # handle : LibC::HANDLE [In],enabled : LibC::BOOL* [In]
  fun AreShortNamesEnabled(handle : LibC::HANDLE, enabled : LibC::BOOL*) : LibC::BOOL

  # Params # lpszlongpath : LibC::LPWSTR [In],lpszshortpath : Char* [In],cchbuffer : UInt32 [In]
  fun GetShortPathNameW(lpszlongpath : LibC::LPWSTR, lpszshortpath : Char*, cchbuffer : UInt32) : UInt32

  # Params # lppathname : LibC::LPWSTR [In],lpprefixstring : LibC::LPWSTR [In],uunique : UInt32 [In],lptempfilename : Char* [In]
  fun GetTempFileNameW(lppathname : LibC::LPWSTR, lpprefixstring : LibC::LPWSTR, uunique : UInt32, lptempfilename : Char*) : UInt32

  # Params # hfile : LibC::HANDLE [In],lpvolumenamebuffer : Char* [In],nvolumenamesize : UInt32 [In],lpvolumeserialnumber : UInt32* [In],lpmaximumcomponentlength : UInt32* [In],lpfilesystemflags : UInt32* [In],lpfilesystemnamebuffer : Char* [In],nfilesystemnamesize : UInt32 [In]
  fun GetVolumeInformationByHandleW(hfile : LibC::HANDLE, lpvolumenamebuffer : Char*, nvolumenamesize : UInt32, lpvolumeserialnumber : UInt32*, lpmaximumcomponentlength : UInt32*, lpfilesystemflags : UInt32*, lpfilesystemnamebuffer : Char*, nfilesystemnamesize : UInt32) : LibC::BOOL

  # Params # lprootpathname : LibC::LPWSTR [In],lpvolumenamebuffer : Char* [In],nvolumenamesize : UInt32 [In],lpvolumeserialnumber : UInt32* [In],lpmaximumcomponentlength : UInt32* [In],lpfilesystemflags : UInt32* [In],lpfilesystemnamebuffer : Char* [In],nfilesystemnamesize : UInt32 [In]
  fun GetVolumeInformationW(lprootpathname : LibC::LPWSTR, lpvolumenamebuffer : Char*, nvolumenamesize : UInt32, lpvolumeserialnumber : UInt32*, lpmaximumcomponentlength : UInt32*, lpfilesystemflags : UInt32*, lpfilesystemnamebuffer : Char*, nfilesystemnamesize : UInt32) : LibC::BOOL

  # Params # lpszfilename : LibC::LPWSTR [In],lpszvolumepathname : Char* [In],cchbufferlength : UInt32 [In]
  fun GetVolumePathNameW(lpszfilename : LibC::LPWSTR, lpszvolumepathname : Char*, cchbufferlength : UInt32) : LibC::BOOL

  # Params # lplocalfiletime : FILETIME* [In],lpfiletime : FILETIME* [In]
  fun LocalFileTimeToFileTime(lplocalfiletime : FILETIME*, lpfiletime : FILETIME*) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],dwfileoffsetlow : UInt32 [In],dwfileoffsethigh : UInt32 [In],nnumberofbytestolocklow : UInt32 [In],nnumberofbytestolockhigh : UInt32 [In]
  fun LockFile(hfile : LibC::HANDLE, dwfileoffsetlow : UInt32, dwfileoffsethigh : UInt32, nnumberofbytestolocklow : UInt32, nnumberofbytestolockhigh : UInt32) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],dwflags : LOCK_FILE_FLAGS [In],dwreserved : UInt32 [In],nnumberofbytestolocklow : UInt32 [In],nnumberofbytestolockhigh : UInt32 [In],lpoverlapped : OVERLAPPED* [In]
  # Commented out because function is part of Lib C
  #fun LockFileEx(hfile : LibC::HANDLE, dwflags : LOCK_FILE_FLAGS, dwreserved : UInt32, nnumberofbytestolocklow : UInt32, nnumberofbytestolockhigh : UInt32, lpoverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # lpdevicename : LibC::LPWSTR [In],lptargetpath : Char* [In],ucchmax : UInt32 [In]
  fun QueryDosDeviceW(lpdevicename : LibC::LPWSTR, lptargetpath : Char*, ucchmax : UInt32) : UInt32

  # Params # hfile : LibC::HANDLE [In],lpbuffer : Void* [In],nnumberofbytestoread : UInt32 [In],lpnumberofbytesread : UInt32* [In],lpoverlapped : OVERLAPPED* [In]
  # Commented out because function is part of Lib C
  #fun ReadFile(hfile : LibC::HANDLE, lpbuffer : Void*, nnumberofbytestoread : UInt32, lpnumberofbytesread : UInt32*, lpoverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],lpbuffer : Void* [In],nnumberofbytestoread : UInt32 [In],lpoverlapped : OVERLAPPED* [In],lpcompletionroutine : LPOVERLAPPED_COMPLETION_ROUTINE [In]
  fun ReadFileEx(hfile : LibC::HANDLE, lpbuffer : Void*, nnumberofbytestoread : UInt32, lpoverlapped : OVERLAPPED*, lpcompletionroutine : LPOVERLAPPED_COMPLETION_ROUTINE) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],asegmentarray : FILE_SEGMENT_ELEMENT* [In],nnumberofbytestoread : UInt32 [In],lpreserved : UInt32* [In],lpoverlapped : OVERLAPPED* [In]
  fun ReadFileScatter(hfile : LibC::HANDLE, asegmentarray : FILE_SEGMENT_ELEMENT*, nnumberofbytestoread : UInt32, lpreserved : UInt32*, lpoverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # lppathname : PSTR [In]
  fun RemoveDirectoryA(lppathname : PSTR) : LibC::BOOL

  # Params # lppathname : LibC::LPWSTR [In]
  fun RemoveDirectoryW(lppathname : LibC::LPWSTR) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In]
  fun SetEndOfFile(hfile : LibC::HANDLE) : LibC::BOOL

  # Params # lpfilename : PSTR [In],dwfileattributes : FILE_FLAGS_AND_ATTRIBUTES [In]
  fun SetFileAttributesA(lpfilename : PSTR, dwfileattributes : FILE_FLAGS_AND_ATTRIBUTES) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],dwfileattributes : FILE_FLAGS_AND_ATTRIBUTES [In]
  # Commented out because function is part of Lib C
  #fun SetFileAttributesW(lpfilename : LibC::LPWSTR, dwfileattributes : FILE_FLAGS_AND_ATTRIBUTES) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],fileinformationclass : FILE_INFO_BY_HANDLE_CLASS [In],lpfileinformation : Void* [In],dwbuffersize : UInt32 [In]
  fun SetFileInformationByHandle(hfile : LibC::HANDLE, fileinformationclass : FILE_INFO_BY_HANDLE_CLASS, lpfileinformation : Void*, dwbuffersize : UInt32) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],ldistancetomove : Int32 [In],lpdistancetomovehigh : Int32* [In],dwmovemethod : SET_FILE_POINTER_MOVE_METHOD [In]
  fun SetFilePointer(hfile : LibC::HANDLE, ldistancetomove : Int32, lpdistancetomovehigh : Int32*, dwmovemethod : SET_FILE_POINTER_MOVE_METHOD) : UInt32

  # Params # hfile : LibC::HANDLE [In],lidistancetomove : LARGE_INTEGER [In],lpnewfilepointer : LARGE_INTEGER* [In],dwmovemethod : SET_FILE_POINTER_MOVE_METHOD [In]
  fun SetFilePointerEx(hfile : LibC::HANDLE, lidistancetomove : LARGE_INTEGER, lpnewfilepointer : LARGE_INTEGER*, dwmovemethod : SET_FILE_POINTER_MOVE_METHOD) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],lpcreationtime : FILETIME* [In],lplastaccesstime : FILETIME* [In],lplastwritetime : FILETIME* [In]
  # Commented out because function is part of Lib C
  #fun SetFileTime(hfile : LibC::HANDLE, lpcreationtime : FILETIME*, lplastaccesstime : FILETIME*, lplastwritetime : FILETIME*) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],validdatalength : Int64 [In]
  fun SetFileValidData(hfile : LibC::HANDLE, validdatalength : Int64) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],dwfileoffsetlow : UInt32 [In],dwfileoffsethigh : UInt32 [In],nnumberofbytestounlocklow : UInt32 [In],nnumberofbytestounlockhigh : UInt32 [In]
  fun UnlockFile(hfile : LibC::HANDLE, dwfileoffsetlow : UInt32, dwfileoffsethigh : UInt32, nnumberofbytestounlocklow : UInt32, nnumberofbytestounlockhigh : UInt32) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],dwreserved : UInt32 [In],nnumberofbytestounlocklow : UInt32 [In],nnumberofbytestounlockhigh : UInt32 [In],lpoverlapped : OVERLAPPED* [In]
  # Commented out because function is part of Lib C
  #fun UnlockFileEx(hfile : LibC::HANDLE, dwreserved : UInt32, nnumberofbytestounlocklow : UInt32, nnumberofbytestounlockhigh : UInt32, lpoverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],lpbuffer : Void* [In],nnumberofbytestowrite : UInt32 [In],lpnumberofbyteswritten : UInt32* [In],lpoverlapped : OVERLAPPED* [In]
  # Commented out because function is part of Lib C
  #fun WriteFile(hfile : LibC::HANDLE, lpbuffer : Void*, nnumberofbytestowrite : UInt32, lpnumberofbyteswritten : UInt32*, lpoverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],lpbuffer : Void* [In],nnumberofbytestowrite : UInt32 [In],lpoverlapped : OVERLAPPED* [In],lpcompletionroutine : LPOVERLAPPED_COMPLETION_ROUTINE [In]
  fun WriteFileEx(hfile : LibC::HANDLE, lpbuffer : Void*, nnumberofbytestowrite : UInt32, lpoverlapped : OVERLAPPED*, lpcompletionroutine : LPOVERLAPPED_COMPLETION_ROUTINE) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],asegmentarray : FILE_SEGMENT_ELEMENT* [In],nnumberofbytestowrite : UInt32 [In],lpreserved : UInt32* [In],lpoverlapped : OVERLAPPED* [In]
  fun WriteFileGather(hfile : LibC::HANDLE, asegmentarray : FILE_SEGMENT_ELEMENT*, nnumberofbytestowrite : UInt32, lpreserved : UInt32*, lpoverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # nbufferlength : UInt32 [In],lpbuffer : Char* [In]
  # Commented out because function is part of Lib C
  #fun GetTempPathW(nbufferlength : UInt32, lpbuffer : Char*) : UInt32

  # Params # lpszvolumemountpoint : LibC::LPWSTR [In],lpszvolumename : Char* [In],cchbufferlength : UInt32 [In]
  fun GetVolumeNameForVolumeMountPointW(lpszvolumemountpoint : LibC::LPWSTR, lpszvolumename : Char*, cchbufferlength : UInt32) : LibC::BOOL

  # Params # lpszvolumename : LibC::LPWSTR [In],lpszvolumepathnames : Char* [In],cchbufferlength : UInt32 [In],lpcchreturnlength : UInt32* [In]
  fun GetVolumePathNamesForVolumeNameW(lpszvolumename : LibC::LPWSTR, lpszvolumepathnames : Char*, cchbufferlength : UInt32, lpcchreturnlength : UInt32*) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],dwdesiredaccess : FILE_ACCESS_FLAGS [In],dwsharemode : FILE_SHARE_MODE [In],dwcreationdisposition : FILE_CREATION_DISPOSITION [In],pcreateexparams : CREATEFILE2_EXTENDED_PARAMETERS* [In]
  fun CreateFile2(lpfilename : LibC::LPWSTR, dwdesiredaccess : FILE_ACCESS_FLAGS, dwsharemode : FILE_SHARE_MODE, dwcreationdisposition : FILE_CREATION_DISPOSITION, pcreateexparams : CREATEFILE2_EXTENDED_PARAMETERS*) : LibC::HANDLE

  # Params # filehandle : LibC::HANDLE [In],overlappedrangestart : UInt8* [In],length : UInt32 [In]
  fun SetFileIoOverlappedRange(filehandle : LibC::HANDLE, overlappedrangestart : UInt8*, length : UInt32) : LibC::BOOL

  # Params # lpfilename : PSTR [In],lpfilesizehigh : UInt32* [In]
  fun GetCompressedFileSizeA(lpfilename : PSTR, lpfilesizehigh : UInt32*) : UInt32

  # Params # lpfilename : LibC::LPWSTR [In],lpfilesizehigh : UInt32* [In]
  fun GetCompressedFileSizeW(lpfilename : LibC::LPWSTR, lpfilesizehigh : UInt32*) : UInt32

  # Params # lpfilename : LibC::LPWSTR [In],infolevel : STREAM_INFO_LEVELS [In],lpfindstreamdata : Void* [In],dwflags : UInt32 [In]
  fun FindFirstStreamW(lpfilename : LibC::LPWSTR, infolevel : STREAM_INFO_LEVELS, lpfindstreamdata : Void*, dwflags : UInt32) : FindStreamHandle

  # Params # hfindstream : FindStreamHandle [In],lpfindstreamdata : Void* [In]
  fun FindNextStreamW(hfindstream : FindStreamHandle, lpfindstreamdata : Void*) : LibC::BOOL

  # Params # 
  fun AreFileApisANSI : LibC::BOOL

  # Params # nbufferlength : UInt32 [In],lpbuffer : UInt8* [In]
  fun GetTempPathA(nbufferlength : UInt32, lpbuffer : UInt8*) : UInt32

  # Params # lpfilename : LibC::LPWSTR [In],dwflags : UInt32 [In],stringlength : UInt32* [In],linkname : Char* [In]
  fun FindFirstFileNameW(lpfilename : LibC::LPWSTR, dwflags : UInt32, stringlength : UInt32*, linkname : Char*) : FindFileNameHandle

  # Params # hfindstream : FindFileNameHandle [In],stringlength : UInt32* [In],linkname : Char* [In]
  fun FindNextFileNameW(hfindstream : FindFileNameHandle, stringlength : UInt32*, linkname : Char*) : LibC::BOOL

  # Params # lprootpathname : PSTR [In],lpvolumenamebuffer : UInt8* [In],nvolumenamesize : UInt32 [In],lpvolumeserialnumber : UInt32* [In],lpmaximumcomponentlength : UInt32* [In],lpfilesystemflags : UInt32* [In],lpfilesystemnamebuffer : UInt8* [In],nfilesystemnamesize : UInt32 [In]
  fun GetVolumeInformationA(lprootpathname : PSTR, lpvolumenamebuffer : UInt8*, nvolumenamesize : UInt32, lpvolumeserialnumber : UInt32*, lpmaximumcomponentlength : UInt32*, lpfilesystemflags : UInt32*, lpfilesystemnamebuffer : UInt8*, nfilesystemnamesize : UInt32) : LibC::BOOL

  # Params # lppathname : PSTR [In],lpprefixstring : PSTR [In],uunique : UInt32 [In],lptempfilename : UInt8* [In]
  fun GetTempFileNameA(lppathname : PSTR, lpprefixstring : PSTR, uunique : UInt32, lptempfilename : UInt8*) : UInt32

  # Params # 
  fun SetFileApisToOEM

  # Params # 
  fun SetFileApisToANSI

  # Params # bufferlength : UInt32 [In],buffer : Char* [In]
  fun GetTempPath2W(bufferlength : UInt32, buffer : Char*) : UInt32

  # Params # bufferlength : UInt32 [In],buffer : UInt8* [In]
  fun GetTempPath2A(bufferlength : UInt32, buffer : UInt8*) : UInt32

  # Params # lpexistingfilename : LibC::LPWSTR [In],lpnewfilename : LibC::LPWSTR [In],bfailifexists : LibC::BOOL [In]
  fun CopyFileFromAppW(lpexistingfilename : LibC::LPWSTR, lpnewfilename : LibC::LPWSTR, bfailifexists : LibC::BOOL) : LibC::BOOL

  # Params # lppathname : LibC::LPWSTR [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In]
  fun CreateDirectoryFromAppW(lppathname : LibC::LPWSTR, lpsecurityattributes : SECURITY_ATTRIBUTES*) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],dwdesiredaccess : UInt32 [In],dwsharemode : UInt32 [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In],dwcreationdisposition : UInt32 [In],dwflagsandattributes : UInt32 [In],htemplatefile : LibC::HANDLE [In]
  fun CreateFileFromAppW(lpfilename : LibC::LPWSTR, dwdesiredaccess : UInt32, dwsharemode : UInt32, lpsecurityattributes : SECURITY_ATTRIBUTES*, dwcreationdisposition : UInt32, dwflagsandattributes : UInt32, htemplatefile : LibC::HANDLE) : LibC::HANDLE

  # Params # lpfilename : LibC::LPWSTR [In],dwdesiredaccess : UInt32 [In],dwsharemode : UInt32 [In],dwcreationdisposition : UInt32 [In],pcreateexparams : CREATEFILE2_EXTENDED_PARAMETERS* [In]
  fun CreateFile2FromAppW(lpfilename : LibC::LPWSTR, dwdesiredaccess : UInt32, dwsharemode : UInt32, dwcreationdisposition : UInt32, pcreateexparams : CREATEFILE2_EXTENDED_PARAMETERS*) : LibC::HANDLE

  # Params # lpfilename : LibC::LPWSTR [In]
  fun DeleteFileFromAppW(lpfilename : LibC::LPWSTR) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],finfolevelid : FINDEX_INFO_LEVELS [In],lpfindfiledata : Void* [In],fsearchop : FINDEX_SEARCH_OPS [In],lpsearchfilter : Void* [In],dwadditionalflags : UInt32 [In]
  fun FindFirstFileExFromAppW(lpfilename : LibC::LPWSTR, finfolevelid : FINDEX_INFO_LEVELS, lpfindfiledata : Void*, fsearchop : FINDEX_SEARCH_OPS, lpsearchfilter : Void*, dwadditionalflags : UInt32) : LibC::HANDLE

  # Params # lpfilename : LibC::LPWSTR [In],finfolevelid : GET_FILEEX_INFO_LEVELS [In],lpfileinformation : Void* [In]
  fun GetFileAttributesExFromAppW(lpfilename : LibC::LPWSTR, finfolevelid : GET_FILEEX_INFO_LEVELS, lpfileinformation : Void*) : LibC::BOOL

  # Params # lpexistingfilename : LibC::LPWSTR [In],lpnewfilename : LibC::LPWSTR [In]
  fun MoveFileFromAppW(lpexistingfilename : LibC::LPWSTR, lpnewfilename : LibC::LPWSTR) : LibC::BOOL

  # Params # lppathname : LibC::LPWSTR [In]
  fun RemoveDirectoryFromAppW(lppathname : LibC::LPWSTR) : LibC::BOOL

  # Params # lpreplacedfilename : LibC::LPWSTR [In],lpreplacementfilename : LibC::LPWSTR [In],lpbackupfilename : LibC::LPWSTR [In],dwreplaceflags : UInt32 [In],lpexclude : Void* [In],lpreserved : Void* [In]
  fun ReplaceFileFromAppW(lpreplacedfilename : LibC::LPWSTR, lpreplacementfilename : LibC::LPWSTR, lpbackupfilename : LibC::LPWSTR, dwreplaceflags : UInt32, lpexclude : Void*, lpreserved : Void*) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],dwfileattributes : UInt32 [In]
  fun SetFileAttributesFromAppW(lpfilename : LibC::LPWSTR, dwfileattributes : UInt32) : LibC::BOOL

  # Params # uflags : VER_FIND_FILE_FLAGS [In],szfilename : PSTR [In],szwindir : PSTR [In],szappdir : PSTR [In],szcurdir : UInt8* [In],pucurdirlen : UInt32* [In],szdestdir : UInt8* [In],pudestdirlen : UInt32* [In]
  fun VerFindFileA(uflags : VER_FIND_FILE_FLAGS, szfilename : PSTR, szwindir : PSTR, szappdir : PSTR, szcurdir : UInt8*, pucurdirlen : UInt32*, szdestdir : UInt8*, pudestdirlen : UInt32*) : VER_FIND_FILE_STATUS

  # Params # uflags : VER_FIND_FILE_FLAGS [In],szfilename : LibC::LPWSTR [In],szwindir : LibC::LPWSTR [In],szappdir : LibC::LPWSTR [In],szcurdir : Char* [In],pucurdirlen : UInt32* [In],szdestdir : Char* [In],pudestdirlen : UInt32* [In]
  fun VerFindFileW(uflags : VER_FIND_FILE_FLAGS, szfilename : LibC::LPWSTR, szwindir : LibC::LPWSTR, szappdir : LibC::LPWSTR, szcurdir : Char*, pucurdirlen : UInt32*, szdestdir : Char*, pudestdirlen : UInt32*) : VER_FIND_FILE_STATUS

  # Params # uflags : VER_INSTALL_FILE_FLAGS [In],szsrcfilename : PSTR [In],szdestfilename : PSTR [In],szsrcdir : PSTR [In],szdestdir : PSTR [In],szcurdir : PSTR [In],sztmpfile : UInt8* [In],putmpfilelen : UInt32* [In]
  fun VerInstallFileA(uflags : VER_INSTALL_FILE_FLAGS, szsrcfilename : PSTR, szdestfilename : PSTR, szsrcdir : PSTR, szdestdir : PSTR, szcurdir : PSTR, sztmpfile : UInt8*, putmpfilelen : UInt32*) : VER_INSTALL_FILE_STATUS

  # Params # uflags : VER_INSTALL_FILE_FLAGS [In],szsrcfilename : LibC::LPWSTR [In],szdestfilename : LibC::LPWSTR [In],szsrcdir : LibC::LPWSTR [In],szdestdir : LibC::LPWSTR [In],szcurdir : LibC::LPWSTR [In],sztmpfile : Char* [In],putmpfilelen : UInt32* [In]
  fun VerInstallFileW(uflags : VER_INSTALL_FILE_FLAGS, szsrcfilename : LibC::LPWSTR, szdestfilename : LibC::LPWSTR, szsrcdir : LibC::LPWSTR, szdestdir : LibC::LPWSTR, szcurdir : LibC::LPWSTR, sztmpfile : Char*, putmpfilelen : UInt32*) : VER_INSTALL_FILE_STATUS

  # Params # lptstrfilename : PSTR [In],lpdwhandle : UInt32* [In]
  fun GetFileVersionInfoSizeA(lptstrfilename : PSTR, lpdwhandle : UInt32*) : UInt32

  # Params # lptstrfilename : LibC::LPWSTR [In],lpdwhandle : UInt32* [In]
  fun GetFileVersionInfoSizeW(lptstrfilename : LibC::LPWSTR, lpdwhandle : UInt32*) : UInt32

  # Params # lptstrfilename : PSTR [In],dwhandle : UInt32 [In],dwlen : UInt32 [In],lpdata : Void* [In]
  fun GetFileVersionInfoA(lptstrfilename : PSTR, dwhandle : UInt32, dwlen : UInt32, lpdata : Void*) : LibC::BOOL

  # Params # lptstrfilename : LibC::LPWSTR [In],dwhandle : UInt32 [In],dwlen : UInt32 [In],lpdata : Void* [In]
  fun GetFileVersionInfoW(lptstrfilename : LibC::LPWSTR, dwhandle : UInt32, dwlen : UInt32, lpdata : Void*) : LibC::BOOL

  # Params # dwflags : GET_FILE_VERSION_INFO_FLAGS [In],lpwstrfilename : PSTR [In],lpdwhandle : UInt32* [In]
  fun GetFileVersionInfoSizeExA(dwflags : GET_FILE_VERSION_INFO_FLAGS, lpwstrfilename : PSTR, lpdwhandle : UInt32*) : UInt32

  # Params # dwflags : GET_FILE_VERSION_INFO_FLAGS [In],lpwstrfilename : LibC::LPWSTR [In],lpdwhandle : UInt32* [In]
  fun GetFileVersionInfoSizeExW(dwflags : GET_FILE_VERSION_INFO_FLAGS, lpwstrfilename : LibC::LPWSTR, lpdwhandle : UInt32*) : UInt32

  # Params # dwflags : GET_FILE_VERSION_INFO_FLAGS [In],lpwstrfilename : PSTR [In],dwhandle : UInt32 [In],dwlen : UInt32 [In],lpdata : Void* [In]
  fun GetFileVersionInfoExA(dwflags : GET_FILE_VERSION_INFO_FLAGS, lpwstrfilename : PSTR, dwhandle : UInt32, dwlen : UInt32, lpdata : Void*) : LibC::BOOL

  # Params # dwflags : GET_FILE_VERSION_INFO_FLAGS [In],lpwstrfilename : LibC::LPWSTR [In],dwhandle : UInt32 [In],dwlen : UInt32 [In],lpdata : Void* [In]
  fun GetFileVersionInfoExW(dwflags : GET_FILE_VERSION_INFO_FLAGS, lpwstrfilename : LibC::LPWSTR, dwhandle : UInt32, dwlen : UInt32, lpdata : Void*) : LibC::BOOL

  # Params # wlang : UInt32 [In],szlang : UInt8* [In],cchlang : UInt32 [In]
  fun VerLanguageNameA(wlang : UInt32, szlang : UInt8*, cchlang : UInt32) : UInt32

  # Params # wlang : UInt32 [In],szlang : Char* [In],cchlang : UInt32 [In]
  fun VerLanguageNameW(wlang : UInt32, szlang : Char*, cchlang : UInt32) : UInt32

  # Params # pblock : Void* [In],lpsubblock : PSTR [In],lplpbuffer : Void** [In],pulen : UInt32* [In]
  fun VerQueryValueA(pblock : Void*, lpsubblock : PSTR, lplpbuffer : Void**, pulen : UInt32*) : LibC::BOOL

  # Params # pblock : Void* [In],lpsubblock : LibC::LPWSTR [In],lplpbuffer : Void** [In],pulen : UInt32* [In]
  fun VerQueryValueW(pblock : Void*, lpsubblock : LibC::LPWSTR, lplpbuffer : Void**, pulen : UInt32*) : LibC::BOOL

  # Params # plsn1 : CLS_LSN* [In],plsn2 : CLS_LSN* [In]
  fun LsnEqual(plsn1 : CLS_LSN*, plsn2 : CLS_LSN*) : BOOLEAN

  # Params # plsn1 : CLS_LSN* [In],plsn2 : CLS_LSN* [In]
  fun LsnLess(plsn1 : CLS_LSN*, plsn2 : CLS_LSN*) : BOOLEAN

  # Params # plsn1 : CLS_LSN* [In],plsn2 : CLS_LSN* [In]
  fun LsnGreater(plsn1 : CLS_LSN*, plsn2 : CLS_LSN*) : BOOLEAN

  # Params # plsn : CLS_LSN* [In]
  fun LsnNull(plsn : CLS_LSN*) : BOOLEAN

  # Params # plsn : CLS_LSN* [In]
  fun LsnContainer(plsn : CLS_LSN*) : UInt32

  # Params # cidcontainer : UInt32 [In],offblock : UInt32 [In],crecord : UInt32 [In]
  fun LsnCreate(cidcontainer : UInt32, offblock : UInt32, crecord : UInt32) : CLS_LSN

  # Params # plsn : CLS_LSN* [In]
  fun LsnBlockOffset(plsn : CLS_LSN*) : UInt32

  # Params # plsn : CLS_LSN* [In]
  fun LsnRecordSequence(plsn : CLS_LSN*) : UInt32

  # Params # plsn : CLS_LSN* [In]
  fun LsnInvalid(plsn : CLS_LSN*) : BOOLEAN

  # Params # plsn : CLS_LSN* [In]
  fun LsnIncrement(plsn : CLS_LSN*) : CLS_LSN

  # Params # pszlogfilename : LibC::LPWSTR [In],fdesiredaccess : FILE_ACCESS_FLAGS [In],dwsharemode : FILE_SHARE_MODE [In],psalogfile : SECURITY_ATTRIBUTES* [In],fcreatedisposition : FILE_CREATION_DISPOSITION [In],fflagsandattributes : FILE_FLAGS_AND_ATTRIBUTES [In]
  fun CreateLogFile(pszlogfilename : LibC::LPWSTR, fdesiredaccess : FILE_ACCESS_FLAGS, dwsharemode : FILE_SHARE_MODE, psalogfile : SECURITY_ATTRIBUTES*, fcreatedisposition : FILE_CREATION_DISPOSITION, fflagsandattributes : FILE_FLAGS_AND_ATTRIBUTES) : LibC::HANDLE

  # Params # hlog : LibC::HANDLE [In]
  fun DeleteLogByHandle(hlog : LibC::HANDLE) : LibC::BOOL

  # Params # pszlogfilename : LibC::LPWSTR [In],pvreserved : Void* [In]
  fun DeleteLogFile(pszlogfilename : LibC::LPWSTR, pvreserved : Void*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],pcbcontainer : UInt64* [In],pwszcontainerpath : LibC::LPWSTR [In],preserved : Void* [In]
  fun AddLogContainer(hlog : LibC::HANDLE, pcbcontainer : UInt64*, pwszcontainerpath : LibC::LPWSTR, preserved : Void*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],ccontainer : UInt16 [In],pcbcontainer : UInt64* [In],rgwszcontainerpath : LibC::LPWSTR* [In],preserved : Void* [In]
  fun AddLogContainerSet(hlog : LibC::HANDLE, ccontainer : UInt16, pcbcontainer : UInt64*, rgwszcontainerpath : LibC::LPWSTR*, preserved : Void*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],pwszcontainerpath : LibC::LPWSTR [In],fforce : LibC::BOOL [In],preserved : Void* [In]
  fun RemoveLogContainer(hlog : LibC::HANDLE, pwszcontainerpath : LibC::LPWSTR, fforce : LibC::BOOL, preserved : Void*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],ccontainer : UInt16 [In],rgwszcontainerpath : LibC::LPWSTR* [In],fforce : LibC::BOOL [In],preserved : Void* [In]
  fun RemoveLogContainerSet(hlog : LibC::HANDLE, ccontainer : UInt16, rgwszcontainerpath : LibC::LPWSTR*, fforce : LibC::BOOL, preserved : Void*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],plsnarchivetail : CLS_LSN* [In],preserved : Void* [In]
  fun SetLogArchiveTail(hlog : LibC::HANDLE, plsnarchivetail : CLS_LSN*, preserved : Void*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],plsnend : CLS_LSN* [In],lpoverlapped : OVERLAPPED* [In]
  fun SetEndOfLog(hlog : LibC::HANDLE, plsnend : CLS_LSN*, lpoverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # pvmarshal : Void* [In],plsnend : CLS_LSN* [In],lpoverlapped : OVERLAPPED* [In]
  fun TruncateLog(pvmarshal : Void*, plsnend : CLS_LSN*, lpoverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],cfromcontainer : UInt32 [In],ccontainers : UInt32 [In],escanmode : UInt8 [In],pcxscan : CLS_SCAN_CONTEXT* [In],poverlapped : OVERLAPPED* [In]
  fun CreateLogContainerScanContext(hlog : LibC::HANDLE, cfromcontainer : UInt32, ccontainers : UInt32, escanmode : UInt8, pcxscan : CLS_SCAN_CONTEXT*, poverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # pcxscan : CLS_SCAN_CONTEXT* [In],escanmode : UInt8 [In],preserved : Void* [In]
  fun ScanLogContainers(pcxscan : CLS_SCAN_CONTEXT*, escanmode : UInt8, preserved : Void*) : LibC::BOOL

  # Params # pvmarshal : Void* [In],creservedrecords : UInt32 [In],rgcbreservation : Int64* [In],pcbalignreservation : Int64* [In]
  fun AlignReservedLog(pvmarshal : Void*, creservedrecords : UInt32, rgcbreservation : Int64*, pcbalignreservation : Int64*) : LibC::BOOL

  # Params # pvmarshal : Void* [In],creservedrecords : UInt32 [In],pcbadjustment : Int64* [In]
  fun AllocReservedLog(pvmarshal : Void*, creservedrecords : UInt32, pcbadjustment : Int64*) : LibC::BOOL

  # Params # pvmarshal : Void* [In],creservedrecords : UInt32 [In],pcbadjustment : Int64* [In]
  fun FreeReservedLog(pvmarshal : Void*, creservedrecords : UInt32, pcbadjustment : Int64*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],pinfobuffer : CLS_INFORMATION* [In],cbbuffer : UInt32* [In]
  fun GetLogFileInformation(hlog : LibC::HANDLE, pinfobuffer : CLS_INFORMATION*, cbbuffer : UInt32*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],emode : CLFS_LOG_ARCHIVE_MODE [In]
  fun SetLogArchiveMode(hlog : LibC::HANDLE, emode : CLFS_LOG_ARCHIVE_MODE) : LibC::BOOL

  # Params # pvmarshal : Void* [In],ppvrestartbuffer : Void** [In],pcbrestartbuffer : UInt32* [In],plsn : CLS_LSN* [In],ppvcontext : Void** [In],poverlapped : OVERLAPPED* [In]
  fun ReadLogRestartArea(pvmarshal : Void*, ppvrestartbuffer : Void**, pcbrestartbuffer : UInt32*, plsn : CLS_LSN*, ppvcontext : Void**, poverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # pvreadcontext : Void* [In],ppvrestartbuffer : Void** [In],pcbrestartbuffer : UInt32* [In],plsnrestart : CLS_LSN* [In],poverlapped : OVERLAPPED* [In]
  fun ReadPreviousLogRestartArea(pvreadcontext : Void*, ppvrestartbuffer : Void**, pcbrestartbuffer : UInt32*, plsnrestart : CLS_LSN*, poverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # pvmarshal : Void* [In],pvrestartbuffer : Void* [In],cbrestartbuffer : UInt32 [In],plsnbase : CLS_LSN* [In],fflags : CLFS_FLAG [In],pcbwritten : UInt32* [In],plsnnext : CLS_LSN* [In],poverlapped : OVERLAPPED* [In]
  fun WriteLogRestartArea(pvmarshal : Void*, pvrestartbuffer : Void*, cbrestartbuffer : UInt32, plsnbase : CLS_LSN*, fflags : CLFS_FLAG, pcbwritten : UInt32*, plsnnext : CLS_LSN*, poverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # pvmarshal : Void* [In],pcbrecordnumber : UInt32* [In],pcbuserreservation : Int64* [In],pcbcommitreservation : Int64* [In]
  fun GetLogReservationInfo(pvmarshal : Void*, pcbrecordnumber : UInt32*, pcbuserreservation : Int64*, pcbcommitreservation : Int64*) : LibC::BOOL

  # Params # pvmarshal : Void* [In],plsnbase : CLS_LSN* [In],fflags : UInt32 [In],poverlapped : OVERLAPPED* [In]
  fun AdvanceLogBase(pvmarshal : Void*, plsnbase : CLS_LSN*, fflags : UInt32, poverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In]
  fun CloseAndResetLogFile(hlog : LibC::HANDLE) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],pfnallocbuffer : CLFS_BLOCK_ALLOCATION [In],pfnfreebuffer : CLFS_BLOCK_DEALLOCATION [In],pvblockalloccontext : Void* [In],cbmarshallingbuffer : UInt32 [In],cmaxwritebuffers : UInt32 [In],cmaxreadbuffers : UInt32 [In],ppvmarshal : Void** [In]
  fun CreateLogMarshallingArea(hlog : LibC::HANDLE, pfnallocbuffer : CLFS_BLOCK_ALLOCATION, pfnfreebuffer : CLFS_BLOCK_DEALLOCATION, pvblockalloccontext : Void*, cbmarshallingbuffer : UInt32, cmaxwritebuffers : UInt32, cmaxreadbuffers : UInt32, ppvmarshal : Void**) : LibC::BOOL

  # Params # pvmarshal : Void* [In]
  fun DeleteLogMarshallingArea(pvmarshal : Void*) : LibC::BOOL

  # Params # pvmarshal : Void* [In],rgwriteentries : CLS_WRITE_ENTRY* [In],cwriteentries : UInt32 [In],plsnundonext : CLS_LSN* [In],plsnprevious : CLS_LSN* [In],creserverecords : UInt32 [In],rgcbreservation : Int64* [In],fflags : CLFS_FLAG [In],plsn : CLS_LSN* [In],poverlapped : OVERLAPPED* [In]
  fun ReserveAndAppendLog(pvmarshal : Void*, rgwriteentries : CLS_WRITE_ENTRY*, cwriteentries : UInt32, plsnundonext : CLS_LSN*, plsnprevious : CLS_LSN*, creserverecords : UInt32, rgcbreservation : Int64*, fflags : CLFS_FLAG, plsn : CLS_LSN*, poverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # pvmarshal : Void* [In],rgwriteentries : CLS_WRITE_ENTRY* [In],cwriteentries : UInt32 [In],cbentryalignment : UInt32 [In],plsnundonext : CLS_LSN* [In],plsnprevious : CLS_LSN* [In],creserverecords : UInt32 [In],rgcbreservation : Int64* [In],fflags : CLFS_FLAG [In],plsn : CLS_LSN* [In],poverlapped : OVERLAPPED* [In]
  fun ReserveAndAppendLogAligned(pvmarshal : Void*, rgwriteentries : CLS_WRITE_ENTRY*, cwriteentries : UInt32, cbentryalignment : UInt32, plsnundonext : CLS_LSN*, plsnprevious : CLS_LSN*, creserverecords : UInt32, rgcbreservation : Int64*, fflags : CLFS_FLAG, plsn : CLS_LSN*, poverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # pvmarshal : Void* [In],poverlapped : OVERLAPPED* [In]
  fun FlushLogBuffers(pvmarshal : Void*, poverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # pvmarshalcontext : Void* [In],plsnflush : CLS_LSN* [In],plsnlastflushed : CLS_LSN* [In],poverlapped : OVERLAPPED* [In]
  fun FlushLogToLsn(pvmarshalcontext : Void*, plsnflush : CLS_LSN*, plsnlastflushed : CLS_LSN*, poverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # pvmarshal : Void* [In],plsnfirst : CLS_LSN* [In],econtextmode : CLFS_CONTEXT_MODE [In],ppvreadbuffer : Void** [In],pcbreadbuffer : UInt32* [In],perecordtype : UInt8* [In],plsnundonext : CLS_LSN* [In],plsnprevious : CLS_LSN* [In],ppvreadcontext : Void** [In],poverlapped : OVERLAPPED* [In]
  fun ReadLogRecord(pvmarshal : Void*, plsnfirst : CLS_LSN*, econtextmode : CLFS_CONTEXT_MODE, ppvreadbuffer : Void**, pcbreadbuffer : UInt32*, perecordtype : UInt8*, plsnundonext : CLS_LSN*, plsnprevious : CLS_LSN*, ppvreadcontext : Void**, poverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # pvreadcontext : Void* [In],ppvbuffer : Void** [In],pcbbuffer : UInt32* [In],perecordtype : UInt8* [In],plsnuser : CLS_LSN* [In],plsnundonext : CLS_LSN* [In],plsnprevious : CLS_LSN* [In],plsnrecord : CLS_LSN* [In],poverlapped : OVERLAPPED* [In]
  fun ReadNextLogRecord(pvreadcontext : Void*, ppvbuffer : Void**, pcbbuffer : UInt32*, perecordtype : UInt8*, plsnuser : CLS_LSN*, plsnundonext : CLS_LSN*, plsnprevious : CLS_LSN*, plsnrecord : CLS_LSN*, poverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # pvcursorcontext : Void* [In]
  fun TerminateReadLog(pvcursorcontext : Void*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],pszbaselogfilename : Char* [In],clen : UInt32 [In],plsnlow : CLS_LSN* [In],plsnhigh : CLS_LSN* [In],pcactuallength : UInt32* [In],poffbaselogfiledata : UInt64* [In],pcbbaselogfilelength : UInt64* [In],plsnbase : CLS_LSN* [In],plsnlast : CLS_LSN* [In],plsncurrentarchivetail : CLS_LSN* [In],ppvarchivecontext : Void** [In]
  fun PrepareLogArchive(hlog : LibC::HANDLE, pszbaselogfilename : Char*, clen : UInt32, plsnlow : CLS_LSN*, plsnhigh : CLS_LSN*, pcactuallength : UInt32*, poffbaselogfiledata : UInt64*, pcbbaselogfilelength : UInt64*, plsnbase : CLS_LSN*, plsnlast : CLS_LSN*, plsncurrentarchivetail : CLS_LSN*, ppvarchivecontext : Void**) : LibC::BOOL

  # Params # pvarchivecontext : Void* [In],cboffset : UInt32 [In],cbbytestoread : UInt32 [In],pbreadbuffer : UInt8* [In],pcbbytesread : UInt32* [In]
  fun ReadLogArchiveMetadata(pvarchivecontext : Void*, cboffset : UInt32, cbbytestoread : UInt32, pbreadbuffer : UInt8*, pcbbytesread : UInt32*) : LibC::BOOL

  # Params # pvarchivecontext : Void* [In],rgadextent : CLS_ARCHIVE_DESCRIPTOR* [In],cdescriptors : UInt32 [In],pcdescriptorsreturned : UInt32* [In]
  fun GetNextLogArchiveExtent(pvarchivecontext : Void*, rgadextent : CLS_ARCHIVE_DESCRIPTOR*, cdescriptors : UInt32, pcdescriptorsreturned : UInt32*) : LibC::BOOL

  # Params # pvarchivecontext : Void* [In]
  fun TerminateLogArchive(pvarchivecontext : Void*) : LibC::BOOL

  # Params # pszlogfilename : LibC::LPWSTR [In],psalogfile : SECURITY_ATTRIBUTES* [In],pinfobuffer : CLS_INFORMATION* [In],pcbbuffer : UInt32* [In]
  fun ValidateLog(pszlogfilename : LibC::LPWSTR, psalogfile : SECURITY_ATTRIBUTES*, pinfobuffer : CLS_INFORMATION*, pcbbuffer : UInt32*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],cidlogicalcontainer : UInt32 [In],pwstrcontainername : LibC::LPWSTR [In],clencontainername : UInt32 [In],pcactuallencontainername : UInt32* [In]
  fun GetLogContainerName(hlog : LibC::HANDLE, cidlogicalcontainer : UInt32, pwstrcontainername : LibC::LPWSTR, clencontainername : UInt32, pcactuallencontainername : UInt32*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],pvstatsbuffer : Void* [In],cbstatsbuffer : UInt32 [In],estatsclass : CLFS_IOSTATS_CLASS [In],pcbstatswritten : UInt32* [In]
  fun GetLogIoStatistics(hlog : LibC::HANDLE, pvstatsbuffer : Void*, cbstatsbuffer : UInt32, estatsclass : CLFS_IOSTATS_CLASS, pcbstatswritten : UInt32*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],pcallbacks : LOG_MANAGEMENT_CALLBACKS* [In]
  fun RegisterManageableLogClient(hlog : LibC::HANDLE, pcallbacks : LOG_MANAGEMENT_CALLBACKS*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In]
  fun DeregisterManageableLogClient(hlog : LibC::HANDLE) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],pnotification : CLFS_MGMT_NOTIFICATION* [In],lpoverlapped : OVERLAPPED* [In]
  fun ReadLogNotification(hlog : LibC::HANDLE, pnotification : CLFS_MGMT_NOTIFICATION*, lpoverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],ppolicy : CLFS_MGMT_POLICY* [In]
  fun InstallLogPolicy(hlog : LibC::HANDLE, ppolicy : CLFS_MGMT_POLICY*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],epolicytype : CLFS_MGMT_POLICY_TYPE [In]
  fun RemoveLogPolicy(hlog : LibC::HANDLE, epolicytype : CLFS_MGMT_POLICY_TYPE) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],epolicytype : CLFS_MGMT_POLICY_TYPE [In],ppolicybuffer : CLFS_MGMT_POLICY* [In],pcbpolicybuffer : UInt32* [In]
  fun QueryLogPolicy(hlog : LibC::HANDLE, epolicytype : CLFS_MGMT_POLICY_TYPE, ppolicybuffer : CLFS_MGMT_POLICY*, pcbpolicybuffer : UInt32*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],pdesiredsize : UInt64* [In],presultingsize : UInt64* [In]
  fun SetLogFileSizeWithPolicy(hlog : LibC::HANDLE, pdesiredsize : UInt64*, presultingsize : UInt64*) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In]
  fun HandleLogFull(hlog : LibC::HANDLE) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],dwreason : UInt32 [In]
  fun LogTailAdvanceFailure(hlog : LibC::HANDLE, dwreason : UInt32) : LibC::BOOL

  # Params # hlog : LibC::HANDLE [In],cbthreshold : UInt32 [In],fenable : LibC::BOOL [In]
  fun RegisterForLogWriteNotification(hlog : LibC::HANDLE, cbthreshold : UInt32, fenable : LibC::BOOL) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],pusers : ENCRYPTION_CERTIFICATE_HASH_LIST** [In]
  fun QueryUsersOnEncryptedFile(lpfilename : LibC::LPWSTR, pusers : ENCRYPTION_CERTIFICATE_HASH_LIST**) : UInt32

  # Params # lpfilename : LibC::LPWSTR [In],precoveryagents : ENCRYPTION_CERTIFICATE_HASH_LIST** [In]
  fun QueryRecoveryAgentsOnEncryptedFile(lpfilename : LibC::LPWSTR, precoveryagents : ENCRYPTION_CERTIFICATE_HASH_LIST**) : UInt32

  # Params # lpfilename : LibC::LPWSTR [In],phashes : ENCRYPTION_CERTIFICATE_HASH_LIST* [In]
  fun RemoveUsersFromEncryptedFile(lpfilename : LibC::LPWSTR, phashes : ENCRYPTION_CERTIFICATE_HASH_LIST*) : UInt32

  # Params # lpfilename : LibC::LPWSTR [In],pencryptioncertificates : ENCRYPTION_CERTIFICATE_LIST* [In]
  fun AddUsersToEncryptedFile(lpfilename : LibC::LPWSTR, pencryptioncertificates : ENCRYPTION_CERTIFICATE_LIST*) : UInt32

  # Params # pencryptioncertificate : ENCRYPTION_CERTIFICATE* [In]
  fun SetUserFileEncryptionKey(pencryptioncertificate : ENCRYPTION_CERTIFICATE*) : UInt32

  # Params # pencryptioncertificate : ENCRYPTION_CERTIFICATE* [In],dwcapabilities : UInt32 [In],dwflags : UInt32 [In],pvreserved : Void* [In]
  fun SetUserFileEncryptionKeyEx(pencryptioncertificate : ENCRYPTION_CERTIFICATE*, dwcapabilities : UInt32, dwflags : UInt32, pvreserved : Void*) : UInt32

  # Params # pusers : ENCRYPTION_CERTIFICATE_HASH_LIST* [In]
  fun FreeEncryptionCertificateHashList(pusers : ENCRYPTION_CERTIFICATE_HASH_LIST*)

  # Params # dirpath : LibC::LPWSTR [In],disable : LibC::BOOL [In]
  fun EncryptionDisable(dirpath : LibC::LPWSTR, disable : LibC::BOOL) : LibC::BOOL

  # Params # srcfilename : LibC::LPWSTR [In],dstfilename : LibC::LPWSTR [In],dwcreationdistribution : UInt32 [In],dwattributes : UInt32 [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In]
  fun DuplicateEncryptionInfoFile(srcfilename : LibC::LPWSTR, dstfilename : LibC::LPWSTR, dwcreationdistribution : UInt32, dwattributes : UInt32, lpsecurityattributes : SECURITY_ATTRIBUTES*) : UInt32

  # Params # lpfilename : LibC::LPWSTR [In],pcbmetadata : UInt32* [In],ppbmetadata : UInt8** [In]
  fun GetEncryptedFileMetadata(lpfilename : LibC::LPWSTR, pcbmetadata : UInt32*, ppbmetadata : UInt8**) : UInt32

  # Params # lpfilename : LibC::LPWSTR [In],pboldmetadata : UInt8* [In],pbnewmetadata : UInt8* [In],pownerhash : ENCRYPTION_CERTIFICATE_HASH* [In],dwoperation : UInt32 [In],pcertificatesadded : ENCRYPTION_CERTIFICATE_HASH_LIST* [In]
  fun SetEncryptedFileMetadata(lpfilename : LibC::LPWSTR, pboldmetadata : UInt8*, pbnewmetadata : UInt8*, pownerhash : ENCRYPTION_CERTIFICATE_HASH*, dwoperation : UInt32, pcertificatesadded : ENCRYPTION_CERTIFICATE_HASH_LIST*) : UInt32

  # Params # pbmetadata : UInt8* [In]
  fun FreeEncryptedFileMetadata(pbmetadata : UInt8*)

  # Params # 
  fun LZStart : Int32

  # Params # 
  fun LZDone

  # Params # hfsource : Int32 [In],hfdest : Int32 [In]
  fun CopyLZFile(hfsource : Int32, hfdest : Int32) : Int32

  # Params # hfsource : Int32 [In],hfdest : Int32 [In]
  fun LZCopy(hfsource : Int32, hfdest : Int32) : Int32

  # Params # hfsource : Int32 [In]
  fun LZInit(hfsource : Int32) : Int32

  # Params # lpszsource : PSTR [In],lpszbuffer : UInt8* [In]
  fun GetExpandedNameA(lpszsource : PSTR, lpszbuffer : UInt8*) : Int32

  # Params # lpszsource : LibC::LPWSTR [In],lpszbuffer : Char* [In]
  fun GetExpandedNameW(lpszsource : LibC::LPWSTR, lpszbuffer : Char*) : Int32

  # Params # lpfilename : PSTR [In],lpreopenbuf : OFSTRUCT* [In],wstyle : LZOPENFILE_STYLE [In]
  fun LZOpenFileA(lpfilename : PSTR, lpreopenbuf : OFSTRUCT*, wstyle : LZOPENFILE_STYLE) : Int32

  # Params # lpfilename : LibC::LPWSTR [In],lpreopenbuf : OFSTRUCT* [In],wstyle : LZOPENFILE_STYLE [In]
  fun LZOpenFileW(lpfilename : LibC::LPWSTR, lpreopenbuf : OFSTRUCT*, wstyle : LZOPENFILE_STYLE) : Int32

  # Params # hfile : Int32 [In],loffset : Int32 [In],iorigin : Int32 [In]
  fun LZSeek(hfile : Int32, loffset : Int32, iorigin : Int32) : Int32

  # Params # hfile : Int32 [In],lpbuffer : PSTR [In],cbread : Int32 [In]
  fun LZRead(hfile : Int32, lpbuffer : PSTR, cbread : Int32) : Int32

  # Params # hfile : Int32 [In]
  fun LZClose(hfile : Int32)

  # Params # volume : LibC::LPWSTR [In],algorithm : UInt32* [In]
  fun WofShouldCompressBinaries(volume : LibC::LPWSTR, algorithm : UInt32*) : LibC::BOOL

  # Params # fileorvolumehandle : LibC::HANDLE [In],provider : UInt32 [In],wofversion : UInt32* [In]
  fun WofGetDriverVersion(fileorvolumehandle : LibC::HANDLE, provider : UInt32, wofversion : UInt32*) : HRESULT

  # Params # filehandle : LibC::HANDLE [In],provider : UInt32 [In],externalfileinfo : Void* [In],length : UInt32 [In]
  fun WofSetFileDataLocation(filehandle : LibC::HANDLE, provider : UInt32, externalfileinfo : Void*, length : UInt32) : HRESULT

  # Params # filepath : LibC::LPWSTR [In],isexternalfile : LibC::BOOL* [In],provider : UInt32* [In],externalfileinfo : Void* [In],bufferlength : UInt32* [In]
  fun WofIsExternalFile(filepath : LibC::LPWSTR, isexternalfile : LibC::BOOL*, provider : UInt32*, externalfileinfo : Void*, bufferlength : UInt32*) : HRESULT

  # Params # volumename : LibC::LPWSTR [In],provider : UInt32 [In],enumproc : WofEnumEntryProc [In],userdata : Void* [In]
  fun WofEnumEntries(volumename : LibC::LPWSTR, provider : UInt32, enumproc : WofEnumEntryProc, userdata : Void*) : HRESULT

  # Params # volumename : LibC::LPWSTR [In],wimpath : LibC::LPWSTR [In],wimtype : UInt32 [In],wimindex : UInt32 [In],datasourceid : LARGE_INTEGER* [In]
  fun WofWimAddEntry(volumename : LibC::LPWSTR, wimpath : LibC::LPWSTR, wimtype : UInt32, wimindex : UInt32, datasourceid : LARGE_INTEGER*) : HRESULT

  # Params # volumename : LibC::LPWSTR [In],datasourceid : LARGE_INTEGER [In],enumproc : WofEnumFilesProc [In],userdata : Void* [In]
  fun WofWimEnumFiles(volumename : LibC::LPWSTR, datasourceid : LARGE_INTEGER, enumproc : WofEnumFilesProc, userdata : Void*) : HRESULT

  # Params # volumename : LibC::LPWSTR [In],datasourceid : LARGE_INTEGER [In]
  fun WofWimSuspendEntry(volumename : LibC::LPWSTR, datasourceid : LARGE_INTEGER) : HRESULT

  # Params # volumename : LibC::LPWSTR [In],datasourceid : LARGE_INTEGER [In]
  fun WofWimRemoveEntry(volumename : LibC::LPWSTR, datasourceid : LARGE_INTEGER) : HRESULT

  # Params # volumename : LibC::LPWSTR [In],datasourceid : LARGE_INTEGER [In],newwimpath : LibC::LPWSTR [In]
  fun WofWimUpdateEntry(volumename : LibC::LPWSTR, datasourceid : LARGE_INTEGER, newwimpath : LibC::LPWSTR) : HRESULT

  # Params # volumename : LibC::LPWSTR [In],algorithm : UInt32 [In],enumproc : WofEnumFilesProc [In],userdata : Void* [In]
  fun WofFileEnumFiles(volumename : LibC::LPWSTR, algorithm : UInt32, enumproc : WofEnumFilesProc, userdata : Void*) : HRESULT

  # Params # logpath : LibC::LPWSTR [In],beginninglsn : CLS_LSN [In],endinglsn : CLS_LSN [In],txffileid : TXF_ID* [In],txflogcontext : Void** [In]
  fun TxfLogCreateFileReadContext(logpath : LibC::LPWSTR, beginninglsn : CLS_LSN, endinglsn : CLS_LSN, txffileid : TXF_ID*, txflogcontext : Void**) : LibC::BOOL

  # Params # logpath : LibC::LPWSTR [In],beginninglsn : CLS_LSN [In],endinglsn : CLS_LSN [In],beginningvirtualclock : LARGE_INTEGER* [In],endingvirtualclock : LARGE_INTEGER* [In],recordtypemask : UInt32 [In],txflogcontext : Void** [In]
  fun TxfLogCreateRangeReadContext(logpath : LibC::LPWSTR, beginninglsn : CLS_LSN, endinglsn : CLS_LSN, beginningvirtualclock : LARGE_INTEGER*, endingvirtualclock : LARGE_INTEGER*, recordtypemask : UInt32, txflogcontext : Void**) : LibC::BOOL

  # Params # txflogcontext : Void* [In]
  fun TxfLogDestroyReadContext(txflogcontext : Void*) : LibC::BOOL

  # Params # txflogcontext : Void* [In],bufferlength : UInt32 [In],buffer : Void* [In],bytesused : UInt32* [In],recordcount : UInt32* [In]
  fun TxfLogReadRecords(txflogcontext : Void*, bufferlength : UInt32, buffer : Void*, bytesused : UInt32*, recordcount : UInt32*) : LibC::BOOL

  # Params # filehandle : LibC::HANDLE [In],txffileid : TXF_ID* [In],lastlsn : CLS_LSN* [In],transactionstate : UInt32* [In],lockingtransaction : Guid* [In]
  fun TxfReadMetadataInfo(filehandle : LibC::HANDLE, txffileid : TXF_ID*, lastlsn : CLS_LSN*, transactionstate : UInt32*, lockingtransaction : Guid*) : LibC::BOOL

  # Params # recordbuffer : Void* [In],recordbufferlengthinbytes : UInt32 [In],namebuffer : LibC::LPWSTR [In],namebufferlengthinbytes : UInt32* [In],txfid : TXF_ID* [In]
  fun TxfLogRecordGetFileName(recordbuffer : Void*, recordbufferlengthinbytes : UInt32, namebuffer : LibC::LPWSTR, namebufferlengthinbytes : UInt32*, txfid : TXF_ID*) : LibC::BOOL

  # Params # recordbuffer : Void* [In],recordbufferlengthinbytes : UInt32 [In],generictype : UInt32* [In],virtualclock : LARGE_INTEGER* [In]
  fun TxfLogRecordGetGenericType(recordbuffer : Void*, recordbufferlengthinbytes : UInt32, generictype : UInt32*, virtualclock : LARGE_INTEGER*) : LibC::BOOL

  # Params # miniversion : UInt16 [In]
  fun TxfSetThreadMiniVersionForCreate(miniversion : UInt16)

  # Params # miniversion : UInt16* [In]
  fun TxfGetThreadMiniVersionForCreate(miniversion : UInt16*)

  # Params # lptransactionattributes : SECURITY_ATTRIBUTES* [In],uow : Guid* [In],createoptions : UInt32 [In],isolationlevel : UInt32 [In],isolationflags : UInt32 [In],timeout : UInt32 [In],description : LibC::LPWSTR [In]
  fun CreateTransaction(lptransactionattributes : SECURITY_ATTRIBUTES*, uow : Guid*, createoptions : UInt32, isolationlevel : UInt32, isolationflags : UInt32, timeout : UInt32, description : LibC::LPWSTR) : LibC::HANDLE

  # Params # dwdesiredaccess : UInt32 [In],transactionid : Guid* [In]
  fun OpenTransaction(dwdesiredaccess : UInt32, transactionid : Guid*) : LibC::HANDLE

  # Params # transactionhandle : LibC::HANDLE [In]
  fun CommitTransaction(transactionhandle : LibC::HANDLE) : LibC::BOOL

  # Params # transactionhandle : LibC::HANDLE [In]
  fun CommitTransactionAsync(transactionhandle : LibC::HANDLE) : LibC::BOOL

  # Params # transactionhandle : LibC::HANDLE [In]
  fun RollbackTransaction(transactionhandle : LibC::HANDLE) : LibC::BOOL

  # Params # transactionhandle : LibC::HANDLE [In]
  fun RollbackTransactionAsync(transactionhandle : LibC::HANDLE) : LibC::BOOL

  # Params # transactionhandle : LibC::HANDLE [In],transactionid : Guid* [In]
  fun GetTransactionId(transactionhandle : LibC::HANDLE, transactionid : Guid*) : LibC::BOOL

  # Params # transactionhandle : LibC::HANDLE [In],outcome : UInt32* [In],isolationlevel : UInt32* [In],isolationflags : UInt32* [In],timeout : UInt32* [In],bufferlength : UInt32 [In],description : Char* [In]
  fun GetTransactionInformation(transactionhandle : LibC::HANDLE, outcome : UInt32*, isolationlevel : UInt32*, isolationflags : UInt32*, timeout : UInt32*, bufferlength : UInt32, description : Char*) : LibC::BOOL

  # Params # transactionhandle : LibC::HANDLE [In],isolationlevel : UInt32 [In],isolationflags : UInt32 [In],timeout : UInt32 [In],description : LibC::LPWSTR [In]
  fun SetTransactionInformation(transactionhandle : LibC::HANDLE, isolationlevel : UInt32, isolationflags : UInt32, timeout : UInt32, description : LibC::LPWSTR) : LibC::BOOL

  # Params # lptransactionattributes : SECURITY_ATTRIBUTES* [In],logfilename : LibC::LPWSTR [In],createoptions : UInt32 [In],commitstrength : UInt32 [In]
  fun CreateTransactionManager(lptransactionattributes : SECURITY_ATTRIBUTES*, logfilename : LibC::LPWSTR, createoptions : UInt32, commitstrength : UInt32) : LibC::HANDLE

  # Params # logfilename : LibC::LPWSTR [In],desiredaccess : UInt32 [In],openoptions : UInt32 [In]
  fun OpenTransactionManager(logfilename : LibC::LPWSTR, desiredaccess : UInt32, openoptions : UInt32) : LibC::HANDLE

  # Params # transactionmanagerid : Guid* [In],desiredaccess : UInt32 [In],openoptions : UInt32 [In]
  fun OpenTransactionManagerById(transactionmanagerid : Guid*, desiredaccess : UInt32, openoptions : UInt32) : LibC::HANDLE

  # Params # logfilename : LibC::LPWSTR [In],existingtransactionmanagerguid : Guid* [In]
  fun RenameTransactionManager(logfilename : LibC::LPWSTR, existingtransactionmanagerguid : Guid*) : LibC::BOOL

  # Params # transactionmanagerhandle : LibC::HANDLE [In],tmvirtualclock : LARGE_INTEGER* [In]
  fun RollforwardTransactionManager(transactionmanagerhandle : LibC::HANDLE, tmvirtualclock : LARGE_INTEGER*) : LibC::BOOL

  # Params # transactionmanagerhandle : LibC::HANDLE [In]
  fun RecoverTransactionManager(transactionmanagerhandle : LibC::HANDLE) : LibC::BOOL

  # Params # transactionmanagerhandle : LibC::HANDLE [In],tmvirtualclock : LARGE_INTEGER* [In]
  fun GetCurrentClockTransactionManager(transactionmanagerhandle : LibC::HANDLE, tmvirtualclock : LARGE_INTEGER*) : LibC::BOOL

  # Params # transactionmanagerhandle : LibC::HANDLE [In],transactionmanagerid : Guid* [In]
  fun GetTransactionManagerId(transactionmanagerhandle : LibC::HANDLE, transactionmanagerid : Guid*) : LibC::BOOL

  # Params # lpresourcemanagerattributes : SECURITY_ATTRIBUTES* [In],resourcemanagerid : Guid* [In],createoptions : UInt32 [In],tmhandle : LibC::HANDLE [In],description : LibC::LPWSTR [In]
  fun CreateResourceManager(lpresourcemanagerattributes : SECURITY_ATTRIBUTES*, resourcemanagerid : Guid*, createoptions : UInt32, tmhandle : LibC::HANDLE, description : LibC::LPWSTR) : LibC::HANDLE

  # Params # dwdesiredaccess : UInt32 [In],tmhandle : LibC::HANDLE [In],resourcemanagerid : Guid* [In]
  fun OpenResourceManager(dwdesiredaccess : UInt32, tmhandle : LibC::HANDLE, resourcemanagerid : Guid*) : LibC::HANDLE

  # Params # resourcemanagerhandle : LibC::HANDLE [In]
  fun RecoverResourceManager(resourcemanagerhandle : LibC::HANDLE) : LibC::BOOL

  # Params # resourcemanagerhandle : LibC::HANDLE [In],transactionnotification : TRANSACTION_NOTIFICATION* [In],notificationlength : UInt32 [In],dwmilliseconds : UInt32 [In],returnlength : UInt32* [In]
  fun GetNotificationResourceManager(resourcemanagerhandle : LibC::HANDLE, transactionnotification : TRANSACTION_NOTIFICATION*, notificationlength : UInt32, dwmilliseconds : UInt32, returnlength : UInt32*) : LibC::BOOL

  # Params # resourcemanagerhandle : LibC::HANDLE [In],transactionnotification : TRANSACTION_NOTIFICATION* [In],transactionnotificationlength : UInt32 [In],returnlength : UInt32* [In],lpoverlapped : OVERLAPPED* [In]
  fun GetNotificationResourceManagerAsync(resourcemanagerhandle : LibC::HANDLE, transactionnotification : TRANSACTION_NOTIFICATION*, transactionnotificationlength : UInt32, returnlength : UInt32*, lpoverlapped : OVERLAPPED*) : LibC::BOOL

  # Params # resourcemanagerhandle : LibC::HANDLE [In],iocompletionporthandle : LibC::HANDLE [In],completionkey : LibC::UINT_PTR [In]
  fun SetResourceManagerCompletionPort(resourcemanagerhandle : LibC::HANDLE, iocompletionporthandle : LibC::HANDLE, completionkey : LibC::UINT_PTR) : LibC::BOOL

  # Params # lpenlistmentattributes : SECURITY_ATTRIBUTES* [In],resourcemanagerhandle : LibC::HANDLE [In],transactionhandle : LibC::HANDLE [In],notificationmask : UInt32 [In],createoptions : UInt32 [In],enlistmentkey : Void* [In]
  fun CreateEnlistment(lpenlistmentattributes : SECURITY_ATTRIBUTES*, resourcemanagerhandle : LibC::HANDLE, transactionhandle : LibC::HANDLE, notificationmask : UInt32, createoptions : UInt32, enlistmentkey : Void*) : LibC::HANDLE

  # Params # dwdesiredaccess : UInt32 [In],resourcemanagerhandle : LibC::HANDLE [In],enlistmentid : Guid* [In]
  fun OpenEnlistment(dwdesiredaccess : UInt32, resourcemanagerhandle : LibC::HANDLE, enlistmentid : Guid*) : LibC::HANDLE

  # Params # enlistmenthandle : LibC::HANDLE [In],enlistmentkey : Void* [In]
  fun RecoverEnlistment(enlistmenthandle : LibC::HANDLE, enlistmentkey : Void*) : LibC::BOOL

  # Params # enlistmenthandle : LibC::HANDLE [In],buffersize : UInt32 [In],buffer : Void* [In],bufferused : UInt32* [In]
  fun GetEnlistmentRecoveryInformation(enlistmenthandle : LibC::HANDLE, buffersize : UInt32, buffer : Void*, bufferused : UInt32*) : LibC::BOOL

  # Params # enlistmenthandle : LibC::HANDLE [In],enlistmentid : Guid* [In]
  fun GetEnlistmentId(enlistmenthandle : LibC::HANDLE, enlistmentid : Guid*) : LibC::BOOL

  # Params # enlistmenthandle : LibC::HANDLE [In],buffersize : UInt32 [In],buffer : Void* [In]
  fun SetEnlistmentRecoveryInformation(enlistmenthandle : LibC::HANDLE, buffersize : UInt32, buffer : Void*) : LibC::BOOL

  # Params # enlistmenthandle : LibC::HANDLE [In],tmvirtualclock : LARGE_INTEGER* [In]
  fun PrepareEnlistment(enlistmenthandle : LibC::HANDLE, tmvirtualclock : LARGE_INTEGER*) : LibC::BOOL

  # Params # enlistmenthandle : LibC::HANDLE [In],tmvirtualclock : LARGE_INTEGER* [In]
  fun PrePrepareEnlistment(enlistmenthandle : LibC::HANDLE, tmvirtualclock : LARGE_INTEGER*) : LibC::BOOL

  # Params # enlistmenthandle : LibC::HANDLE [In],tmvirtualclock : LARGE_INTEGER* [In]
  fun CommitEnlistment(enlistmenthandle : LibC::HANDLE, tmvirtualclock : LARGE_INTEGER*) : LibC::BOOL

  # Params # enlistmenthandle : LibC::HANDLE [In],tmvirtualclock : LARGE_INTEGER* [In]
  fun RollbackEnlistment(enlistmenthandle : LibC::HANDLE, tmvirtualclock : LARGE_INTEGER*) : LibC::BOOL

  # Params # enlistmenthandle : LibC::HANDLE [In],tmvirtualclock : LARGE_INTEGER* [In]
  fun PrePrepareComplete(enlistmenthandle : LibC::HANDLE, tmvirtualclock : LARGE_INTEGER*) : LibC::BOOL

  # Params # enlistmenthandle : LibC::HANDLE [In],tmvirtualclock : LARGE_INTEGER* [In]
  fun PrepareComplete(enlistmenthandle : LibC::HANDLE, tmvirtualclock : LARGE_INTEGER*) : LibC::BOOL

  # Params # enlistmenthandle : LibC::HANDLE [In],tmvirtualclock : LARGE_INTEGER* [In]
  fun ReadOnlyEnlistment(enlistmenthandle : LibC::HANDLE, tmvirtualclock : LARGE_INTEGER*) : LibC::BOOL

  # Params # enlistmenthandle : LibC::HANDLE [In],tmvirtualclock : LARGE_INTEGER* [In]
  fun CommitComplete(enlistmenthandle : LibC::HANDLE, tmvirtualclock : LARGE_INTEGER*) : LibC::BOOL

  # Params # enlistmenthandle : LibC::HANDLE [In],tmvirtualclock : LARGE_INTEGER* [In]
  fun RollbackComplete(enlistmenthandle : LibC::HANDLE, tmvirtualclock : LARGE_INTEGER*) : LibC::BOOL

  # Params # enlistmenthandle : LibC::HANDLE [In],tmvirtualclock : LARGE_INTEGER* [In]
  fun SinglePhaseReject(enlistmenthandle : LibC::HANDLE, tmvirtualclock : LARGE_INTEGER*) : LibC::BOOL

  # Params # servername : LibC::LPWSTR [In],level : UInt32 [In],buf : UInt8* [In],parm_err : UInt32* [In]
  fun NetShareAdd(servername : LibC::LPWSTR, level : UInt32, buf : UInt8*, parm_err : UInt32*) : UInt32

  # Params # servername : LibC::LPWSTR [In],level : UInt32 [In],bufptr : UInt8** [In],prefmaxlen : UInt32 [In],entriesread : UInt32* [In],totalentries : UInt32* [In],resume_handle : UInt32* [In]
  fun NetShareEnum(servername : LibC::LPWSTR, level : UInt32, bufptr : UInt8**, prefmaxlen : UInt32, entriesread : UInt32*, totalentries : UInt32*, resume_handle : UInt32*) : UInt32

  # Params # servername : LibC::LPWSTR [In],level : UInt32 [In],bufptr : UInt8** [In],prefmaxlen : UInt32 [In],entriesread : UInt32* [In],totalentries : UInt32* [In],resume_handle : UInt32* [In]
  fun NetShareEnumSticky(servername : LibC::LPWSTR, level : UInt32, bufptr : UInt8**, prefmaxlen : UInt32, entriesread : UInt32*, totalentries : UInt32*, resume_handle : UInt32*) : UInt32

  # Params # servername : LibC::LPWSTR [In],netname : LibC::LPWSTR [In],level : UInt32 [In],bufptr : UInt8** [In]
  fun NetShareGetInfo(servername : LibC::LPWSTR, netname : LibC::LPWSTR, level : UInt32, bufptr : UInt8**) : UInt32

  # Params # servername : LibC::LPWSTR [In],netname : LibC::LPWSTR [In],level : UInt32 [In],buf : UInt8* [In],parm_err : UInt32* [In]
  fun NetShareSetInfo(servername : LibC::LPWSTR, netname : LibC::LPWSTR, level : UInt32, buf : UInt8*, parm_err : UInt32*) : UInt32

  # Params # servername : LibC::LPWSTR [In],netname : LibC::LPWSTR [In],reserved : UInt32 [In]
  fun NetShareDel(servername : LibC::LPWSTR, netname : LibC::LPWSTR, reserved : UInt32) : UInt32

  # Params # servername : LibC::LPWSTR [In],netname : LibC::LPWSTR [In],reserved : UInt32 [In]
  fun NetShareDelSticky(servername : LibC::LPWSTR, netname : LibC::LPWSTR, reserved : UInt32) : UInt32

  # Params # servername : LibC::LPWSTR [In],device : LibC::LPWSTR [In],type : UInt32* [In]
  fun NetShareCheck(servername : LibC::LPWSTR, device : LibC::LPWSTR, type : UInt32*) : UInt32

  # Params # servername : LibC::LPWSTR [In],level : UInt32 [In],buf : UInt8* [In]
  fun NetShareDelEx(servername : LibC::LPWSTR, level : UInt32, buf : UInt8*) : UInt32

  # Params # servername : LibC::LPWSTR [In],level : UInt32 [In],buf : UInt8* [In]
  fun NetServerAliasAdd(servername : LibC::LPWSTR, level : UInt32, buf : UInt8*) : UInt32

  # Params # servername : LibC::LPWSTR [In],level : UInt32 [In],buf : UInt8* [In]
  fun NetServerAliasDel(servername : LibC::LPWSTR, level : UInt32, buf : UInt8*) : UInt32

  # Params # servername : LibC::LPWSTR [In],level : UInt32 [In],bufptr : UInt8** [In],prefmaxlen : UInt32 [In],entriesread : UInt32* [In],totalentries : UInt32* [In],resumehandle : UInt32* [In]
  fun NetServerAliasEnum(servername : LibC::LPWSTR, level : UInt32, bufptr : UInt8**, prefmaxlen : UInt32, entriesread : UInt32*, totalentries : UInt32*, resumehandle : UInt32*) : UInt32

  # Params # servername : LibC::LPWSTR [In],uncclientname : LibC::LPWSTR [In],username : LibC::LPWSTR [In],level : UInt32 [In],bufptr : UInt8** [In],prefmaxlen : UInt32 [In],entriesread : UInt32* [In],totalentries : UInt32* [In],resume_handle : UInt32* [In]
  fun NetSessionEnum(servername : LibC::LPWSTR, uncclientname : LibC::LPWSTR, username : LibC::LPWSTR, level : UInt32, bufptr : UInt8**, prefmaxlen : UInt32, entriesread : UInt32*, totalentries : UInt32*, resume_handle : UInt32*) : UInt32

  # Params # servername : LibC::LPWSTR [In],uncclientname : LibC::LPWSTR [In],username : LibC::LPWSTR [In]
  fun NetSessionDel(servername : LibC::LPWSTR, uncclientname : LibC::LPWSTR, username : LibC::LPWSTR) : UInt32

  # Params # servername : LibC::LPWSTR [In],uncclientname : LibC::LPWSTR [In],username : LibC::LPWSTR [In],level : UInt32 [In],bufptr : UInt8** [In]
  fun NetSessionGetInfo(servername : LibC::LPWSTR, uncclientname : LibC::LPWSTR, username : LibC::LPWSTR, level : UInt32, bufptr : UInt8**) : UInt32

  # Params # servername : LibC::LPWSTR [In],qualifier : LibC::LPWSTR [In],level : UInt32 [In],bufptr : UInt8** [In],prefmaxlen : UInt32 [In],entriesread : UInt32* [In],totalentries : UInt32* [In],resume_handle : UInt32* [In]
  fun NetConnectionEnum(servername : LibC::LPWSTR, qualifier : LibC::LPWSTR, level : UInt32, bufptr : UInt8**, prefmaxlen : UInt32, entriesread : UInt32*, totalentries : UInt32*, resume_handle : UInt32*) : UInt32

  # Params # servername : LibC::LPWSTR [In],fileid : UInt32 [In]
  fun NetFileClose(servername : LibC::LPWSTR, fileid : UInt32) : UInt32

  # Params # servername : LibC::LPWSTR [In],basepath : LibC::LPWSTR [In],username : LibC::LPWSTR [In],level : UInt32 [In],bufptr : UInt8** [In],prefmaxlen : UInt32 [In],entriesread : UInt32* [In],totalentries : UInt32* [In],resume_handle : LibC::UINT_PTR* [In]
  fun NetFileEnum(servername : LibC::LPWSTR, basepath : LibC::LPWSTR, username : LibC::LPWSTR, level : UInt32, bufptr : UInt8**, prefmaxlen : UInt32, entriesread : UInt32*, totalentries : UInt32*, resume_handle : LibC::UINT_PTR*) : UInt32

  # Params # servername : LibC::LPWSTR [In],fileid : UInt32 [In],level : UInt32 [In],bufptr : UInt8** [In]
  fun NetFileGetInfo(servername : LibC::LPWSTR, fileid : UInt32, level : UInt32, bufptr : UInt8**) : UInt32

  # Params # servername : Int8* [In],service : Int8* [In],level : UInt32 [In],options : UInt32 [In],buffer : UInt8** [In]
  fun NetStatisticsGet(servername : Int8*, service : Int8*, level : UInt32, options : UInt32, buffer : UInt8**) : UInt32

  # Params # capabilities : IORING_CAPABILITIES* [In]
  fun QueryIoRingCapabilities(capabilities : IORING_CAPABILITIES*) : HRESULT

  # Params # ioring : HIORING__* [In],op : IORING_OP_CODE [In]
  fun IsIoRingOpSupported(ioring : HIORING__*, op : IORING_OP_CODE) : LibC::BOOL

  # Params # ioringversion : IORING_VERSION [In],flags : IORING_CREATE_FLAGS [In],submissionqueuesize : UInt32 [In],completionqueuesize : UInt32 [In],h : HIORING__** [In]
  fun CreateIoRing(ioringversion : IORING_VERSION, flags : IORING_CREATE_FLAGS, submissionqueuesize : UInt32, completionqueuesize : UInt32, h : HIORING__**) : HRESULT

  # Params # ioring : HIORING__* [In],info : IORING_INFO* [In]
  fun GetIoRingInfo(ioring : HIORING__*, info : IORING_INFO*) : HRESULT

  # Params # ioring : HIORING__* [In],waitoperations : UInt32 [In],milliseconds : UInt32 [In],submittedentries : UInt32* [In]
  fun SubmitIoRing(ioring : HIORING__*, waitoperations : UInt32, milliseconds : UInt32, submittedentries : UInt32*) : HRESULT

  # Params # ioring : HIORING__* [In]
  fun CloseIoRing(ioring : HIORING__*) : HRESULT

  # Params # ioring : HIORING__* [In],cqe : IORING_CQE* [In]
  fun PopIoRingCompletion(ioring : HIORING__*, cqe : IORING_CQE*) : HRESULT

  # Params # ioring : HIORING__* [In],hevent : LibC::HANDLE [In]
  fun SetIoRingCompletionEvent(ioring : HIORING__*, hevent : LibC::HANDLE) : HRESULT

  # Params # ioring : HIORING__* [In],file : IORING_HANDLE_REF [In],optocancel : LibC::UINT_PTR [In],userdata : LibC::UINT_PTR [In]
  fun BuildIoRingCancelRequest(ioring : HIORING__*, file : IORING_HANDLE_REF, optocancel : LibC::UINT_PTR, userdata : LibC::UINT_PTR) : HRESULT

  # Params # ioring : HIORING__* [In],fileref : IORING_HANDLE_REF [In],dataref : IORING_BUFFER_REF [In],numberofbytestoread : UInt32 [In],fileoffset : UInt64 [In],userdata : LibC::UINT_PTR [In],flags : IORING_SQE_FLAGS [In]
  fun BuildIoRingReadFile(ioring : HIORING__*, fileref : IORING_HANDLE_REF, dataref : IORING_BUFFER_REF, numberofbytestoread : UInt32, fileoffset : UInt64, userdata : LibC::UINT_PTR, flags : IORING_SQE_FLAGS) : HRESULT

  # Params # ioring : HIORING__* [In],count : UInt32 [In],handles : LibC::HANDLE* [In],userdata : LibC::UINT_PTR [In]
  fun BuildIoRingRegisterFileHandles(ioring : HIORING__*, count : UInt32, handles : LibC::HANDLE*, userdata : LibC::UINT_PTR) : HRESULT

  # Params # ioring : HIORING__* [In],count : UInt32 [In],buffers : IORING_BUFFER_INFO* [In],userdata : LibC::UINT_PTR [In]
  fun BuildIoRingRegisterBuffers(ioring : HIORING__*, count : UInt32, buffers : IORING_BUFFER_INFO*, userdata : LibC::UINT_PTR) : HRESULT

  # Params # wow64fsenableredirection : BOOLEAN [In]
  fun Wow64EnableWow64FsRedirection(wow64fsenableredirection : BOOLEAN) : BOOLEAN

  # Params # oldvalue : Void** [In]
  fun Wow64DisableWow64FsRedirection(oldvalue : Void**) : LibC::BOOL

  # Params # olvalue : Void* [In]
  fun Wow64RevertWow64FsRedirection(olvalue : Void*) : LibC::BOOL

  # Params # lpapplicationname : PSTR [In],lpbinarytype : UInt32* [In]
  fun GetBinaryTypeA(lpapplicationname : PSTR, lpbinarytype : UInt32*) : LibC::BOOL

  # Params # lpapplicationname : LibC::LPWSTR [In],lpbinarytype : UInt32* [In]
  # Commented out because function is part of Lib C
  #fun GetBinaryTypeW(lpapplicationname : LibC::LPWSTR, lpbinarytype : UInt32*) : LibC::BOOL

  # Params # lpszlongpath : PSTR [In],lpszshortpath : UInt8* [In],cchbuffer : UInt32 [In]
  fun GetShortPathNameA(lpszlongpath : PSTR, lpszshortpath : UInt8*, cchbuffer : UInt32) : UInt32

  # Params # lpszshortpath : PSTR [In],lpszlongpath : UInt8* [In],cchbuffer : UInt32 [In],htransaction : LibC::HANDLE [In]
  fun GetLongPathNameTransactedA(lpszshortpath : PSTR, lpszlongpath : UInt8*, cchbuffer : UInt32, htransaction : LibC::HANDLE) : UInt32

  # Params # lpszshortpath : LibC::LPWSTR [In],lpszlongpath : Char* [In],cchbuffer : UInt32 [In],htransaction : LibC::HANDLE [In]
  fun GetLongPathNameTransactedW(lpszshortpath : LibC::LPWSTR, lpszlongpath : Char*, cchbuffer : UInt32, htransaction : LibC::HANDLE) : UInt32

  # Params # filehandle : LibC::HANDLE [In],flags : UInt8 [In]
  # Commented out because function is part of Lib C
  #fun SetFileCompletionNotificationModes(filehandle : LibC::HANDLE, flags : UInt8) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],lpshortname : PSTR [In]
  fun SetFileShortNameA(hfile : LibC::HANDLE, lpshortname : PSTR) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],lpshortname : LibC::LPWSTR [In]
  fun SetFileShortNameW(hfile : LibC::HANDLE, lpshortname : LibC::LPWSTR) : LibC::BOOL

  # Params # hdevice : LibC::HANDLE [In],dwpositionmethod : TAPE_POSITION_METHOD [In],dwpartition : UInt32 [In],dwoffsetlow : UInt32 [In],dwoffsethigh : UInt32 [In],bimmediate : LibC::BOOL [In]
  fun SetTapePosition(hdevice : LibC::HANDLE, dwpositionmethod : TAPE_POSITION_METHOD, dwpartition : UInt32, dwoffsetlow : UInt32, dwoffsethigh : UInt32, bimmediate : LibC::BOOL) : UInt32

  # Params # hdevice : LibC::HANDLE [In],dwpositiontype : TAPE_POSITION_TYPE [In],lpdwpartition : UInt32* [In],lpdwoffsetlow : UInt32* [In],lpdwoffsethigh : UInt32* [In]
  fun GetTapePosition(hdevice : LibC::HANDLE, dwpositiontype : TAPE_POSITION_TYPE, lpdwpartition : UInt32*, lpdwoffsetlow : UInt32*, lpdwoffsethigh : UInt32*) : UInt32

  # Params # hdevice : LibC::HANDLE [In],dwoperation : PREPARE_TAPE_OPERATION [In],bimmediate : LibC::BOOL [In]
  fun PrepareTape(hdevice : LibC::HANDLE, dwoperation : PREPARE_TAPE_OPERATION, bimmediate : LibC::BOOL) : UInt32

  # Params # hdevice : LibC::HANDLE [In],dwerasetype : ERASE_TAPE_TYPE [In],bimmediate : LibC::BOOL [In]
  fun EraseTape(hdevice : LibC::HANDLE, dwerasetype : ERASE_TAPE_TYPE, bimmediate : LibC::BOOL) : UInt32

  # Params # hdevice : LibC::HANDLE [In],dwpartitionmethod : CREATE_TAPE_PARTITION_METHOD [In],dwcount : UInt32 [In],dwsize : UInt32 [In]
  fun CreateTapePartition(hdevice : LibC::HANDLE, dwpartitionmethod : CREATE_TAPE_PARTITION_METHOD, dwcount : UInt32, dwsize : UInt32) : UInt32

  # Params # hdevice : LibC::HANDLE [In],dwtapemarktype : TAPEMARK_TYPE [In],dwtapemarkcount : UInt32 [In],bimmediate : LibC::BOOL [In]
  fun WriteTapemark(hdevice : LibC::HANDLE, dwtapemarktype : TAPEMARK_TYPE, dwtapemarkcount : UInt32, bimmediate : LibC::BOOL) : UInt32

  # Params # hdevice : LibC::HANDLE [In]
  fun GetTapeStatus(hdevice : LibC::HANDLE) : UInt32

  # Params # hdevice : LibC::HANDLE [In],dwoperation : GET_TAPE_DRIVE_PARAMETERS_OPERATION [In],lpdwsize : UInt32* [In],lptapeinformation : Void* [In]
  fun GetTapeParameters(hdevice : LibC::HANDLE, dwoperation : GET_TAPE_DRIVE_PARAMETERS_OPERATION, lpdwsize : UInt32*, lptapeinformation : Void*) : UInt32

  # Params # hdevice : LibC::HANDLE [In],dwoperation : TAPE_INFORMATION_TYPE [In],lptapeinformation : Void* [In]
  fun SetTapeParameters(hdevice : LibC::HANDLE, dwoperation : TAPE_INFORMATION_TYPE, lptapeinformation : Void*) : UInt32

  # Params # lpfilename : PSTR [In]
  fun EncryptFileA(lpfilename : PSTR) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In]
  fun EncryptFileW(lpfilename : LibC::LPWSTR) : LibC::BOOL

  # Params # lpfilename : PSTR [In],dwreserved : UInt32 [In]
  fun DecryptFileA(lpfilename : PSTR, dwreserved : UInt32) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],dwreserved : UInt32 [In]
  fun DecryptFileW(lpfilename : LibC::LPWSTR, dwreserved : UInt32) : LibC::BOOL

  # Params # lpfilename : PSTR [In],lpstatus : UInt32* [In]
  fun FileEncryptionStatusA(lpfilename : PSTR, lpstatus : UInt32*) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],lpstatus : UInt32* [In]
  fun FileEncryptionStatusW(lpfilename : LibC::LPWSTR, lpstatus : UInt32*) : LibC::BOOL

  # Params # lpfilename : PSTR [In],ulflags : UInt32 [In],pvcontext : Void** [In]
  fun OpenEncryptedFileRawA(lpfilename : PSTR, ulflags : UInt32, pvcontext : Void**) : UInt32

  # Params # lpfilename : LibC::LPWSTR [In],ulflags : UInt32 [In],pvcontext : Void** [In]
  fun OpenEncryptedFileRawW(lpfilename : LibC::LPWSTR, ulflags : UInt32, pvcontext : Void**) : UInt32

  # Params # pfexportcallback : PFE_EXPORT_FUNC [In],pvcallbackcontext : Void* [In],pvcontext : Void* [In]
  fun ReadEncryptedFileRaw(pfexportcallback : PFE_EXPORT_FUNC, pvcallbackcontext : Void*, pvcontext : Void*) : UInt32

  # Params # pfimportcallback : PFE_IMPORT_FUNC [In],pvcallbackcontext : Void* [In],pvcontext : Void* [In]
  fun WriteEncryptedFileRaw(pfimportcallback : PFE_IMPORT_FUNC, pvcallbackcontext : Void*, pvcontext : Void*) : UInt32

  # Params # pvcontext : Void* [In]
  fun CloseEncryptedFileRaw(pvcontext : Void*)

  # Params # lpfilename : PSTR [In],lpreopenbuff : OFSTRUCT* [In],ustyle : LZOPENFILE_STYLE [In]
  fun OpenFile(lpfilename : PSTR, lpreopenbuff : OFSTRUCT*, ustyle : LZOPENFILE_STYLE) : Int32

  # Params # hfile : LibC::HANDLE [In],lpbuffer : UInt8* [In],nnumberofbytestoread : UInt32 [In],lpnumberofbytesread : UInt32* [In],babort : LibC::BOOL [In],bprocesssecurity : LibC::BOOL [In],lpcontext : Void** [In]
  fun BackupRead(hfile : LibC::HANDLE, lpbuffer : UInt8*, nnumberofbytestoread : UInt32, lpnumberofbytesread : UInt32*, babort : LibC::BOOL, bprocesssecurity : LibC::BOOL, lpcontext : Void**) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],dwlowbytestoseek : UInt32 [In],dwhighbytestoseek : UInt32 [In],lpdwlowbyteseeked : UInt32* [In],lpdwhighbyteseeked : UInt32* [In],lpcontext : Void** [In]
  fun BackupSeek(hfile : LibC::HANDLE, dwlowbytestoseek : UInt32, dwhighbytestoseek : UInt32, lpdwlowbyteseeked : UInt32*, lpdwhighbyteseeked : UInt32*, lpcontext : Void**) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],lpbuffer : UInt8* [In],nnumberofbytestowrite : UInt32 [In],lpnumberofbyteswritten : UInt32* [In],babort : LibC::BOOL [In],bprocesssecurity : LibC::BOOL [In],lpcontext : Void** [In]
  fun BackupWrite(hfile : LibC::HANDLE, lpbuffer : UInt8*, nnumberofbytestowrite : UInt32, lpnumberofbyteswritten : UInt32*, babort : LibC::BOOL, bprocesssecurity : LibC::BOOL, lpcontext : Void**) : LibC::BOOL

  # Params # nbufferlength : UInt32 [In],lpbuffer : UInt8* [In]
  fun GetLogicalDriveStringsA(nbufferlength : UInt32, lpbuffer : UInt8*) : UInt32

  # Params # flags : UInt32 [In]
  fun SetSearchPathMode(flags : UInt32) : LibC::BOOL

  # Params # lptemplatedirectory : PSTR [In],lpnewdirectory : PSTR [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In]
  fun CreateDirectoryExA(lptemplatedirectory : PSTR, lpnewdirectory : PSTR, lpsecurityattributes : SECURITY_ATTRIBUTES*) : LibC::BOOL

  # Params # lptemplatedirectory : LibC::LPWSTR [In],lpnewdirectory : LibC::LPWSTR [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In]
  fun CreateDirectoryExW(lptemplatedirectory : LibC::LPWSTR, lpnewdirectory : LibC::LPWSTR, lpsecurityattributes : SECURITY_ATTRIBUTES*) : LibC::BOOL

  # Params # lptemplatedirectory : PSTR [In],lpnewdirectory : PSTR [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In],htransaction : LibC::HANDLE [In]
  fun CreateDirectoryTransactedA(lptemplatedirectory : PSTR, lpnewdirectory : PSTR, lpsecurityattributes : SECURITY_ATTRIBUTES*, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # lptemplatedirectory : LibC::LPWSTR [In],lpnewdirectory : LibC::LPWSTR [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In],htransaction : LibC::HANDLE [In]
  fun CreateDirectoryTransactedW(lptemplatedirectory : LibC::LPWSTR, lpnewdirectory : LibC::LPWSTR, lpsecurityattributes : SECURITY_ATTRIBUTES*, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # lppathname : PSTR [In],htransaction : LibC::HANDLE [In]
  fun RemoveDirectoryTransactedA(lppathname : PSTR, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # lppathname : LibC::LPWSTR [In],htransaction : LibC::HANDLE [In]
  fun RemoveDirectoryTransactedW(lppathname : LibC::LPWSTR, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # lpfilename : PSTR [In],nbufferlength : UInt32 [In],lpbuffer : UInt8* [In],lpfilepart : PSTR* [In],htransaction : LibC::HANDLE [In]
  fun GetFullPathNameTransactedA(lpfilename : PSTR, nbufferlength : UInt32, lpbuffer : UInt8*, lpfilepart : PSTR*, htransaction : LibC::HANDLE) : UInt32

  # Params # lpfilename : LibC::LPWSTR [In],nbufferlength : UInt32 [In],lpbuffer : Char* [In],lpfilepart : LibC::LPWSTR* [In],htransaction : LibC::HANDLE [In]
  fun GetFullPathNameTransactedW(lpfilename : LibC::LPWSTR, nbufferlength : UInt32, lpbuffer : Char*, lpfilepart : LibC::LPWSTR*, htransaction : LibC::HANDLE) : UInt32

  # Params # dwflags : DEFINE_DOS_DEVICE_FLAGS [In],lpdevicename : PSTR [In],lptargetpath : PSTR [In]
  fun DefineDosDeviceA(dwflags : DEFINE_DOS_DEVICE_FLAGS, lpdevicename : PSTR, lptargetpath : PSTR) : LibC::BOOL

  # Params # lpdevicename : PSTR [In],lptargetpath : UInt8* [In],ucchmax : UInt32 [In]
  fun QueryDosDeviceA(lpdevicename : PSTR, lptargetpath : UInt8*, ucchmax : UInt32) : UInt32

  # Params # lpfilename : PSTR [In],dwdesiredaccess : UInt32 [In],dwsharemode : FILE_SHARE_MODE [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In],dwcreationdisposition : FILE_CREATION_DISPOSITION [In],dwflagsandattributes : FILE_FLAGS_AND_ATTRIBUTES [In],htemplatefile : LibC::HANDLE [In],htransaction : LibC::HANDLE [In],pusminiversion : TXFS_MINIVERSION* [In],lpextendedparameter : Void* [In]
  fun CreateFileTransactedA(lpfilename : PSTR, dwdesiredaccess : UInt32, dwsharemode : FILE_SHARE_MODE, lpsecurityattributes : SECURITY_ATTRIBUTES*, dwcreationdisposition : FILE_CREATION_DISPOSITION, dwflagsandattributes : FILE_FLAGS_AND_ATTRIBUTES, htemplatefile : LibC::HANDLE, htransaction : LibC::HANDLE, pusminiversion : TXFS_MINIVERSION*, lpextendedparameter : Void*) : LibC::HANDLE

  # Params # lpfilename : LibC::LPWSTR [In],dwdesiredaccess : UInt32 [In],dwsharemode : FILE_SHARE_MODE [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In],dwcreationdisposition : FILE_CREATION_DISPOSITION [In],dwflagsandattributes : FILE_FLAGS_AND_ATTRIBUTES [In],htemplatefile : LibC::HANDLE [In],htransaction : LibC::HANDLE [In],pusminiversion : TXFS_MINIVERSION* [In],lpextendedparameter : Void* [In]
  fun CreateFileTransactedW(lpfilename : LibC::LPWSTR, dwdesiredaccess : UInt32, dwsharemode : FILE_SHARE_MODE, lpsecurityattributes : SECURITY_ATTRIBUTES*, dwcreationdisposition : FILE_CREATION_DISPOSITION, dwflagsandattributes : FILE_FLAGS_AND_ATTRIBUTES, htemplatefile : LibC::HANDLE, htransaction : LibC::HANDLE, pusminiversion : TXFS_MINIVERSION*, lpextendedparameter : Void*) : LibC::HANDLE

  # Params # horiginalfile : LibC::HANDLE [In],dwdesiredaccess : FILE_ACCESS_FLAGS [In],dwsharemode : FILE_SHARE_MODE [In],dwflagsandattributes : FILE_FLAGS_AND_ATTRIBUTES [In]
  fun ReOpenFile(horiginalfile : LibC::HANDLE, dwdesiredaccess : FILE_ACCESS_FLAGS, dwsharemode : FILE_SHARE_MODE, dwflagsandattributes : FILE_FLAGS_AND_ATTRIBUTES) : LibC::HANDLE

  # Params # lpfilename : PSTR [In],dwfileattributes : UInt32 [In],htransaction : LibC::HANDLE [In]
  fun SetFileAttributesTransactedA(lpfilename : PSTR, dwfileattributes : UInt32, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],dwfileattributes : UInt32 [In],htransaction : LibC::HANDLE [In]
  fun SetFileAttributesTransactedW(lpfilename : LibC::LPWSTR, dwfileattributes : UInt32, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # lpfilename : PSTR [In],finfolevelid : GET_FILEEX_INFO_LEVELS [In],lpfileinformation : Void* [In],htransaction : LibC::HANDLE [In]
  fun GetFileAttributesTransactedA(lpfilename : PSTR, finfolevelid : GET_FILEEX_INFO_LEVELS, lpfileinformation : Void*, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],finfolevelid : GET_FILEEX_INFO_LEVELS [In],lpfileinformation : Void* [In],htransaction : LibC::HANDLE [In]
  fun GetFileAttributesTransactedW(lpfilename : LibC::LPWSTR, finfolevelid : GET_FILEEX_INFO_LEVELS, lpfileinformation : Void*, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # lpfilename : PSTR [In],lpfilesizehigh : UInt32* [In],htransaction : LibC::HANDLE [In]
  fun GetCompressedFileSizeTransactedA(lpfilename : PSTR, lpfilesizehigh : UInt32*, htransaction : LibC::HANDLE) : UInt32

  # Params # lpfilename : LibC::LPWSTR [In],lpfilesizehigh : UInt32* [In],htransaction : LibC::HANDLE [In]
  fun GetCompressedFileSizeTransactedW(lpfilename : LibC::LPWSTR, lpfilesizehigh : UInt32*, htransaction : LibC::HANDLE) : UInt32

  # Params # lpfilename : PSTR [In],htransaction : LibC::HANDLE [In]
  fun DeleteFileTransactedA(lpfilename : PSTR, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],htransaction : LibC::HANDLE [In]
  fun DeleteFileTransactedW(lpfilename : LibC::LPWSTR, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # lpname : PSTR [In],lpoemname : UInt8* [In],oemnamesize : UInt32 [In],pbnamecontainsspaces : LibC::BOOL* [In],pbnamelegal : LibC::BOOL* [In]
  fun CheckNameLegalDOS8Dot3A(lpname : PSTR, lpoemname : UInt8*, oemnamesize : UInt32, pbnamecontainsspaces : LibC::BOOL*, pbnamelegal : LibC::BOOL*) : LibC::BOOL

  # Params # lpname : LibC::LPWSTR [In],lpoemname : UInt8* [In],oemnamesize : UInt32 [In],pbnamecontainsspaces : LibC::BOOL* [In],pbnamelegal : LibC::BOOL* [In]
  fun CheckNameLegalDOS8Dot3W(lpname : LibC::LPWSTR, lpoemname : UInt8*, oemnamesize : UInt32, pbnamecontainsspaces : LibC::BOOL*, pbnamelegal : LibC::BOOL*) : LibC::BOOL

  # Params # lpfilename : PSTR [In],finfolevelid : FINDEX_INFO_LEVELS [In],lpfindfiledata : Void* [In],fsearchop : FINDEX_SEARCH_OPS [In],lpsearchfilter : Void* [In],dwadditionalflags : UInt32 [In],htransaction : LibC::HANDLE [In]
  fun FindFirstFileTransactedA(lpfilename : PSTR, finfolevelid : FINDEX_INFO_LEVELS, lpfindfiledata : Void*, fsearchop : FINDEX_SEARCH_OPS, lpsearchfilter : Void*, dwadditionalflags : UInt32, htransaction : LibC::HANDLE) : FindFileHandle

  # Params # lpfilename : LibC::LPWSTR [In],finfolevelid : FINDEX_INFO_LEVELS [In],lpfindfiledata : Void* [In],fsearchop : FINDEX_SEARCH_OPS [In],lpsearchfilter : Void* [In],dwadditionalflags : UInt32 [In],htransaction : LibC::HANDLE [In]
  fun FindFirstFileTransactedW(lpfilename : LibC::LPWSTR, finfolevelid : FINDEX_INFO_LEVELS, lpfindfiledata : Void*, fsearchop : FINDEX_SEARCH_OPS, lpsearchfilter : Void*, dwadditionalflags : UInt32, htransaction : LibC::HANDLE) : FindFileHandle

  # Params # lpexistingfilename : PSTR [In],lpnewfilename : PSTR [In],bfailifexists : LibC::BOOL [In]
  fun CopyFileA(lpexistingfilename : PSTR, lpnewfilename : PSTR, bfailifexists : LibC::BOOL) : LibC::BOOL

  # Params # lpexistingfilename : LibC::LPWSTR [In],lpnewfilename : LibC::LPWSTR [In],bfailifexists : LibC::BOOL [In]
  fun CopyFileW(lpexistingfilename : LibC::LPWSTR, lpnewfilename : LibC::LPWSTR, bfailifexists : LibC::BOOL) : LibC::BOOL

  # Params # lpexistingfilename : PSTR [In],lpnewfilename : PSTR [In],lpprogressroutine : LPPROGRESS_ROUTINE [In],lpdata : Void* [In],pbcancel : Int32* [In],dwcopyflags : UInt32 [In]
  fun CopyFileExA(lpexistingfilename : PSTR, lpnewfilename : PSTR, lpprogressroutine : LPPROGRESS_ROUTINE, lpdata : Void*, pbcancel : Int32*, dwcopyflags : UInt32) : LibC::BOOL

  # Params # lpexistingfilename : LibC::LPWSTR [In],lpnewfilename : LibC::LPWSTR [In],lpprogressroutine : LPPROGRESS_ROUTINE [In],lpdata : Void* [In],pbcancel : Int32* [In],dwcopyflags : UInt32 [In]
  fun CopyFileExW(lpexistingfilename : LibC::LPWSTR, lpnewfilename : LibC::LPWSTR, lpprogressroutine : LPPROGRESS_ROUTINE, lpdata : Void*, pbcancel : Int32*, dwcopyflags : UInt32) : LibC::BOOL

  # Params # lpexistingfilename : PSTR [In],lpnewfilename : PSTR [In],lpprogressroutine : LPPROGRESS_ROUTINE [In],lpdata : Void* [In],pbcancel : Int32* [In],dwcopyflags : UInt32 [In],htransaction : LibC::HANDLE [In]
  fun CopyFileTransactedA(lpexistingfilename : PSTR, lpnewfilename : PSTR, lpprogressroutine : LPPROGRESS_ROUTINE, lpdata : Void*, pbcancel : Int32*, dwcopyflags : UInt32, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # lpexistingfilename : LibC::LPWSTR [In],lpnewfilename : LibC::LPWSTR [In],lpprogressroutine : LPPROGRESS_ROUTINE [In],lpdata : Void* [In],pbcancel : Int32* [In],dwcopyflags : UInt32 [In],htransaction : LibC::HANDLE [In]
  fun CopyFileTransactedW(lpexistingfilename : LibC::LPWSTR, lpnewfilename : LibC::LPWSTR, lpprogressroutine : LPPROGRESS_ROUTINE, lpdata : Void*, pbcancel : Int32*, dwcopyflags : UInt32, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # pwszexistingfilename : LibC::LPWSTR [In],pwsznewfilename : LibC::LPWSTR [In],pextendedparameters : COPYFILE2_EXTENDED_PARAMETERS* [In]
  fun CopyFile2(pwszexistingfilename : LibC::LPWSTR, pwsznewfilename : LibC::LPWSTR, pextendedparameters : COPYFILE2_EXTENDED_PARAMETERS*) : HRESULT

  # Params # lpexistingfilename : PSTR [In],lpnewfilename : PSTR [In]
  fun MoveFileA(lpexistingfilename : PSTR, lpnewfilename : PSTR) : LibC::BOOL

  # Params # lpexistingfilename : LibC::LPWSTR [In],lpnewfilename : LibC::LPWSTR [In]
  fun MoveFileW(lpexistingfilename : LibC::LPWSTR, lpnewfilename : LibC::LPWSTR) : LibC::BOOL

  # Params # lpexistingfilename : PSTR [In],lpnewfilename : PSTR [In],dwflags : MOVE_FILE_FLAGS [In]
  fun MoveFileExA(lpexistingfilename : PSTR, lpnewfilename : PSTR, dwflags : MOVE_FILE_FLAGS) : LibC::BOOL

  # Params # lpexistingfilename : LibC::LPWSTR [In],lpnewfilename : LibC::LPWSTR [In],dwflags : MOVE_FILE_FLAGS [In]
  # Commented out because function is part of Lib C
  #fun MoveFileExW(lpexistingfilename : LibC::LPWSTR, lpnewfilename : LibC::LPWSTR, dwflags : MOVE_FILE_FLAGS) : LibC::BOOL

  # Params # lpexistingfilename : PSTR [In],lpnewfilename : PSTR [In],lpprogressroutine : LPPROGRESS_ROUTINE [In],lpdata : Void* [In],dwflags : MOVE_FILE_FLAGS [In]
  fun MoveFileWithProgressA(lpexistingfilename : PSTR, lpnewfilename : PSTR, lpprogressroutine : LPPROGRESS_ROUTINE, lpdata : Void*, dwflags : MOVE_FILE_FLAGS) : LibC::BOOL

  # Params # lpexistingfilename : LibC::LPWSTR [In],lpnewfilename : LibC::LPWSTR [In],lpprogressroutine : LPPROGRESS_ROUTINE [In],lpdata : Void* [In],dwflags : MOVE_FILE_FLAGS [In]
  fun MoveFileWithProgressW(lpexistingfilename : LibC::LPWSTR, lpnewfilename : LibC::LPWSTR, lpprogressroutine : LPPROGRESS_ROUTINE, lpdata : Void*, dwflags : MOVE_FILE_FLAGS) : LibC::BOOL

  # Params # lpexistingfilename : PSTR [In],lpnewfilename : PSTR [In],lpprogressroutine : LPPROGRESS_ROUTINE [In],lpdata : Void* [In],dwflags : MOVE_FILE_FLAGS [In],htransaction : LibC::HANDLE [In]
  fun MoveFileTransactedA(lpexistingfilename : PSTR, lpnewfilename : PSTR, lpprogressroutine : LPPROGRESS_ROUTINE, lpdata : Void*, dwflags : MOVE_FILE_FLAGS, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # lpexistingfilename : LibC::LPWSTR [In],lpnewfilename : LibC::LPWSTR [In],lpprogressroutine : LPPROGRESS_ROUTINE [In],lpdata : Void* [In],dwflags : MOVE_FILE_FLAGS [In],htransaction : LibC::HANDLE [In]
  fun MoveFileTransactedW(lpexistingfilename : LibC::LPWSTR, lpnewfilename : LibC::LPWSTR, lpprogressroutine : LPPROGRESS_ROUTINE, lpdata : Void*, dwflags : MOVE_FILE_FLAGS, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # lpreplacedfilename : PSTR [In],lpreplacementfilename : PSTR [In],lpbackupfilename : PSTR [In],dwreplaceflags : REPLACE_FILE_FLAGS [In],lpexclude : Void* [In],lpreserved : Void* [In]
  fun ReplaceFileA(lpreplacedfilename : PSTR, lpreplacementfilename : PSTR, lpbackupfilename : PSTR, dwreplaceflags : REPLACE_FILE_FLAGS, lpexclude : Void*, lpreserved : Void*) : LibC::BOOL

  # Params # lpreplacedfilename : LibC::LPWSTR [In],lpreplacementfilename : LibC::LPWSTR [In],lpbackupfilename : LibC::LPWSTR [In],dwreplaceflags : REPLACE_FILE_FLAGS [In],lpexclude : Void* [In],lpreserved : Void* [In]
  fun ReplaceFileW(lpreplacedfilename : LibC::LPWSTR, lpreplacementfilename : LibC::LPWSTR, lpbackupfilename : LibC::LPWSTR, dwreplaceflags : REPLACE_FILE_FLAGS, lpexclude : Void*, lpreserved : Void*) : LibC::BOOL

  # Params # lpfilename : PSTR [In],lpexistingfilename : PSTR [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In]
  fun CreateHardLinkA(lpfilename : PSTR, lpexistingfilename : PSTR, lpsecurityattributes : SECURITY_ATTRIBUTES*) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],lpexistingfilename : LibC::LPWSTR [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In]
  # Commented out because function is part of Lib C
  #fun CreateHardLinkW(lpfilename : LibC::LPWSTR, lpexistingfilename : LibC::LPWSTR, lpsecurityattributes : SECURITY_ATTRIBUTES*) : LibC::BOOL

  # Params # lpfilename : PSTR [In],lpexistingfilename : PSTR [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In],htransaction : LibC::HANDLE [In]
  fun CreateHardLinkTransactedA(lpfilename : PSTR, lpexistingfilename : PSTR, lpsecurityattributes : SECURITY_ATTRIBUTES*, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],lpexistingfilename : LibC::LPWSTR [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In],htransaction : LibC::HANDLE [In]
  fun CreateHardLinkTransactedW(lpfilename : LibC::LPWSTR, lpexistingfilename : LibC::LPWSTR, lpsecurityattributes : SECURITY_ATTRIBUTES*, htransaction : LibC::HANDLE) : LibC::BOOL

  # Params # lpfilename : LibC::LPWSTR [In],infolevel : STREAM_INFO_LEVELS [In],lpfindstreamdata : Void* [In],dwflags : UInt32 [In],htransaction : LibC::HANDLE [In]
  fun FindFirstStreamTransactedW(lpfilename : LibC::LPWSTR, infolevel : STREAM_INFO_LEVELS, lpfindstreamdata : Void*, dwflags : UInt32, htransaction : LibC::HANDLE) : FindStreamHandle

  # Params # lpfilename : LibC::LPWSTR [In],dwflags : UInt32 [In],stringlength : UInt32* [In],linkname : Char* [In],htransaction : LibC::HANDLE [In]
  fun FindFirstFileNameTransactedW(lpfilename : LibC::LPWSTR, dwflags : UInt32, stringlength : UInt32*, linkname : Char*, htransaction : LibC::HANDLE) : FindFileNameHandle

  # Params # lprootpathname : PSTR [In],lpvolumename : PSTR [In]
  fun SetVolumeLabelA(lprootpathname : PSTR, lpvolumename : PSTR) : LibC::BOOL

  # Params # lprootpathname : LibC::LPWSTR [In],lpvolumename : LibC::LPWSTR [In]
  fun SetVolumeLabelW(lprootpathname : LibC::LPWSTR, lpvolumename : LibC::LPWSTR) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],nperiodmilliseconds : UInt32 [In],nbytesperperiod : UInt32 [In],bdiscardable : LibC::BOOL [In],lptransfersize : UInt32* [In],lpnumoutstandingrequests : UInt32* [In]
  fun SetFileBandwidthReservation(hfile : LibC::HANDLE, nperiodmilliseconds : UInt32, nbytesperperiod : UInt32, bdiscardable : LibC::BOOL, lptransfersize : UInt32*, lpnumoutstandingrequests : UInt32*) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],lpperiodmilliseconds : UInt32* [In],lpbytesperperiod : UInt32* [In],pdiscardable : Int32* [In],lptransfersize : UInt32* [In],lpnumoutstandingrequests : UInt32* [In]
  fun GetFileBandwidthReservation(hfile : LibC::HANDLE, lpperiodmilliseconds : UInt32*, lpbytesperperiod : UInt32*, pdiscardable : Int32*, lptransfersize : UInt32*, lpnumoutstandingrequests : UInt32*) : LibC::BOOL

  # Params # hdirectory : LibC::HANDLE [In],lpbuffer : Void* [In],nbufferlength : UInt32 [In],bwatchsubtree : LibC::BOOL [In],dwnotifyfilter : FILE_NOTIFY_CHANGE [In],lpbytesreturned : UInt32* [In],lpoverlapped : OVERLAPPED* [In],lpcompletionroutine : LPOVERLAPPED_COMPLETION_ROUTINE [In]
  fun ReadDirectoryChangesW(hdirectory : LibC::HANDLE, lpbuffer : Void*, nbufferlength : UInt32, bwatchsubtree : LibC::BOOL, dwnotifyfilter : FILE_NOTIFY_CHANGE, lpbytesreturned : UInt32*, lpoverlapped : OVERLAPPED*, lpcompletionroutine : LPOVERLAPPED_COMPLETION_ROUTINE) : LibC::BOOL

  # Params # hdirectory : LibC::HANDLE [In],lpbuffer : Void* [In],nbufferlength : UInt32 [In],bwatchsubtree : LibC::BOOL [In],dwnotifyfilter : FILE_NOTIFY_CHANGE [In],lpbytesreturned : UInt32* [In],lpoverlapped : OVERLAPPED* [In],lpcompletionroutine : LPOVERLAPPED_COMPLETION_ROUTINE [In],readdirectorynotifyinformationclass : READ_DIRECTORY_NOTIFY_INFORMATION_CLASS [In]
  fun ReadDirectoryChangesExW(hdirectory : LibC::HANDLE, lpbuffer : Void*, nbufferlength : UInt32, bwatchsubtree : LibC::BOOL, dwnotifyfilter : FILE_NOTIFY_CHANGE, lpbytesreturned : UInt32*, lpoverlapped : OVERLAPPED*, lpcompletionroutine : LPOVERLAPPED_COMPLETION_ROUTINE, readdirectorynotifyinformationclass : READ_DIRECTORY_NOTIFY_INFORMATION_CLASS) : LibC::BOOL

  # Params # lpszvolumename : UInt8* [In],cchbufferlength : UInt32 [In]
  fun FindFirstVolumeA(lpszvolumename : UInt8*, cchbufferlength : UInt32) : FindVolumeHandle

  # Params # hfindvolume : FindVolumeHandle [In],lpszvolumename : UInt8* [In],cchbufferlength : UInt32 [In]
  fun FindNextVolumeA(hfindvolume : FindVolumeHandle, lpszvolumename : UInt8*, cchbufferlength : UInt32) : LibC::BOOL

  # Params # lpszrootpathname : PSTR [In],lpszvolumemountpoint : UInt8* [In],cchbufferlength : UInt32 [In]
  fun FindFirstVolumeMountPointA(lpszrootpathname : PSTR, lpszvolumemountpoint : UInt8*, cchbufferlength : UInt32) : FindVolumeMointPointHandle

  # Params # lpszrootpathname : LibC::LPWSTR [In],lpszvolumemountpoint : Char* [In],cchbufferlength : UInt32 [In]
  fun FindFirstVolumeMountPointW(lpszrootpathname : LibC::LPWSTR, lpszvolumemountpoint : Char*, cchbufferlength : UInt32) : FindVolumeMointPointHandle

  # Params # hfindvolumemountpoint : FindVolumeMointPointHandle [In],lpszvolumemountpoint : UInt8* [In],cchbufferlength : UInt32 [In]
  fun FindNextVolumeMountPointA(hfindvolumemountpoint : FindVolumeMointPointHandle, lpszvolumemountpoint : UInt8*, cchbufferlength : UInt32) : LibC::BOOL

  # Params # hfindvolumemountpoint : FindVolumeMointPointHandle [In],lpszvolumemountpoint : Char* [In],cchbufferlength : UInt32 [In]
  fun FindNextVolumeMountPointW(hfindvolumemountpoint : FindVolumeMointPointHandle, lpszvolumemountpoint : Char*, cchbufferlength : UInt32) : LibC::BOOL

  # Params # hfindvolumemountpoint : FindVolumeMointPointHandle [In]
  fun FindVolumeMountPointClose(hfindvolumemountpoint : FindVolumeMointPointHandle) : LibC::BOOL

  # Params # lpszvolumemountpoint : PSTR [In],lpszvolumename : PSTR [In]
  fun SetVolumeMountPointA(lpszvolumemountpoint : PSTR, lpszvolumename : PSTR) : LibC::BOOL

  # Params # lpszvolumemountpoint : LibC::LPWSTR [In],lpszvolumename : LibC::LPWSTR [In]
  fun SetVolumeMountPointW(lpszvolumemountpoint : LibC::LPWSTR, lpszvolumename : LibC::LPWSTR) : LibC::BOOL

  # Params # lpszvolumemountpoint : PSTR [In]
  fun DeleteVolumeMountPointA(lpszvolumemountpoint : PSTR) : LibC::BOOL

  # Params # lpszvolumemountpoint : PSTR [In],lpszvolumename : UInt8* [In],cchbufferlength : UInt32 [In]
  fun GetVolumeNameForVolumeMountPointA(lpszvolumemountpoint : PSTR, lpszvolumename : UInt8*, cchbufferlength : UInt32) : LibC::BOOL

  # Params # lpszfilename : PSTR [In],lpszvolumepathname : UInt8* [In],cchbufferlength : UInt32 [In]
  fun GetVolumePathNameA(lpszfilename : PSTR, lpszvolumepathname : UInt8*, cchbufferlength : UInt32) : LibC::BOOL

  # Params # lpszvolumename : PSTR [In],lpszvolumepathnames : UInt8* [In],cchbufferlength : UInt32 [In],lpcchreturnlength : UInt32* [In]
  fun GetVolumePathNamesForVolumeNameA(lpszvolumename : PSTR, lpszvolumepathnames : UInt8*, cchbufferlength : UInt32, lpcchreturnlength : UInt32*) : LibC::BOOL

  # Params # hfile : LibC::HANDLE [In],fileinformationclass : FILE_INFO_BY_HANDLE_CLASS [In],lpfileinformation : Void* [In],dwbuffersize : UInt32 [In]
  fun GetFileInformationByHandleEx(hfile : LibC::HANDLE, fileinformationclass : FILE_INFO_BY_HANDLE_CLASS, lpfileinformation : Void*, dwbuffersize : UInt32) : LibC::BOOL

  # Params # hvolumehint : LibC::HANDLE [In],lpfileid : FILE_ID_DESCRIPTOR* [In],dwdesiredaccess : FILE_ACCESS_FLAGS [In],dwsharemode : FILE_SHARE_MODE [In],lpsecurityattributes : SECURITY_ATTRIBUTES* [In],dwflagsandattributes : FILE_FLAGS_AND_ATTRIBUTES [In]
  fun OpenFileById(hvolumehint : LibC::HANDLE, lpfileid : FILE_ID_DESCRIPTOR*, dwdesiredaccess : FILE_ACCESS_FLAGS, dwsharemode : FILE_SHARE_MODE, lpsecurityattributes : SECURITY_ATTRIBUTES*, dwflagsandattributes : FILE_FLAGS_AND_ATTRIBUTES) : LibC::HANDLE

  # Params # lpsymlinkfilename : PSTR [In],lptargetfilename : PSTR [In],dwflags : SYMBOLIC_LINK_FLAGS [In]
  fun CreateSymbolicLinkA(lpsymlinkfilename : PSTR, lptargetfilename : PSTR, dwflags : SYMBOLIC_LINK_FLAGS) : BOOLEAN

  # Params # lpsymlinkfilename : LibC::LPWSTR [In],lptargetfilename : LibC::LPWSTR [In],dwflags : SYMBOLIC_LINK_FLAGS [In]
  # Commented out because function is part of Lib C
  #fun CreateSymbolicLinkW(lpsymlinkfilename : LibC::LPWSTR, lptargetfilename : LibC::LPWSTR, dwflags : SYMBOLIC_LINK_FLAGS) : BOOLEAN

  # Params # lpsymlinkfilename : PSTR [In],lptargetfilename : PSTR [In],dwflags : SYMBOLIC_LINK_FLAGS [In],htransaction : LibC::HANDLE [In]
  fun CreateSymbolicLinkTransactedA(lpsymlinkfilename : PSTR, lptargetfilename : PSTR, dwflags : SYMBOLIC_LINK_FLAGS, htransaction : LibC::HANDLE) : BOOLEAN

  # Params # lpsymlinkfilename : LibC::LPWSTR [In],lptargetfilename : LibC::LPWSTR [In],dwflags : SYMBOLIC_LINK_FLAGS [In],htransaction : LibC::HANDLE [In]
  fun CreateSymbolicLinkTransactedW(lpsymlinkfilename : LibC::LPWSTR, lptargetfilename : LibC::LPWSTR, dwflags : SYMBOLIC_LINK_FLAGS, htransaction : LibC::HANDLE) : BOOLEAN

  # Params # filehandle : LibC::HANDLE* [In],desiredaccess : UInt32 [In],objectattributes : OBJECT_ATTRIBUTES* [In],iostatusblock : IO_STATUS_BLOCK* [In],allocationsize : LARGE_INTEGER* [In],fileattributes : UInt32 [In],shareaccess : FILE_SHARE_MODE [In],createdisposition : NT_CREATE_FILE_DISPOSITION [In],createoptions : UInt32 [In],eabuffer : Void* [In],ealength : UInt32 [In]
  fun NtCreateFile(filehandle : LibC::HANDLE*, desiredaccess : UInt32, objectattributes : OBJECT_ATTRIBUTES*, iostatusblock : IO_STATUS_BLOCK*, allocationsize : LARGE_INTEGER*, fileattributes : UInt32, shareaccess : FILE_SHARE_MODE, createdisposition : NT_CREATE_FILE_DISPOSITION, createoptions : UInt32, eabuffer : Void*, ealength : UInt32) : NTSTATUS
end
