require "./../foundation.cr"
require "./../security.cr"
require "./../system/com.cr"
require "./../system/io.cr"
require "./../system/windows_programming.cr"

module Win32cr::Storage::FileSystem
  alias FindFileHandle = LibC::IntPtrT
  alias FindFileNameHandle = LibC::IntPtrT
  alias FindStreamHandle = LibC::IntPtrT
  alias FindChangeNotificationHandle = LibC::IntPtrT
  alias FindVolumeHandle = LibC::IntPtrT
  alias FindVolumeMointPointHandle = LibC::IntPtrT
  alias MAXMEDIALABEL = Proc(UInt32*, UInt32)*

  alias CLAIMMEDIALABEL = Proc(UInt8*, UInt32, Win32cr::Storage::FileSystem::MediaLabelInfo*, UInt32)*

  alias CLAIMMEDIALABELEX = Proc(UInt8*, UInt32, Win32cr::Storage::FileSystem::MediaLabelInfo*, LibC::GUID*, UInt32)*

  alias CLFS_BLOCK_ALLOCATION = Proc(UInt32, Void*, Void*)*

  alias CLFS_BLOCK_DEALLOCATION = Proc(Void*, Void*, Void)*

  alias PCLFS_COMPLETION_ROUTINE = Proc(Void*, UInt32, Void)*

  alias PLOG_TAIL_ADVANCE_CALLBACK = Proc(Win32cr::Foundation::HANDLE, Win32cr::Storage::FileSystem::CLS_LSN, Void*, Void)*

  alias PLOG_FULL_HANDLER_CALLBACK = Proc(Win32cr::Foundation::HANDLE, UInt32, Win32cr::Foundation::BOOL, Void*, Void)*

  alias PLOG_UNPINNED_CALLBACK = Proc(Win32cr::Foundation::HANDLE, Void*, Void)*

  alias WofEnumEntryProc = Proc(Void*, Void*, Win32cr::Foundation::BOOL)*

  alias WofEnumFilesProc = Proc(Win32cr::Foundation::PWSTR, Void*, Void*, Win32cr::Foundation::BOOL)*

  alias PFN_IO_COMPLETION = Proc(Win32cr::Storage::FileSystem::FIO_CONTEXT*, Win32cr::Storage::FileSystem::FH_OVERLAPPED*, UInt32, UInt32, Void)*

  alias FCACHE_CREATE_CALLBACK = Proc(Win32cr::Foundation::PSTR, Void*, UInt32*, UInt32*, Win32cr::Foundation::HANDLE)*

  alias FCACHE_RICHCREATE_CALLBACK = Proc(Win32cr::Foundation::PSTR, Void*, UInt32*, UInt32*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::BOOL*, Win32cr::Foundation::HANDLE)*

  alias CACHE_KEY_COMPARE = Proc(UInt32, UInt8*, UInt32, UInt8*, Int32)*

  alias CACHE_KEY_HASH = Proc(UInt8*, UInt32, UInt32)*

  alias CACHE_READ_CALLBACK = Proc(UInt32, UInt8*, Void*, Win32cr::Foundation::BOOL)*

  alias CACHE_DESTROY_CALLBACK = Proc(UInt32, UInt8*, Void)*

  alias CACHE_ACCESS_CHECK = Proc(Win32cr::Security::PSECURITY_DESCRIPTOR, Win32cr::Foundation::HANDLE, UInt32, Win32cr::Security::GENERIC_MAPPING*, Win32cr::Security::PRIVILEGE_SET*, UInt32*, UInt32*, Int32*, Win32cr::Foundation::BOOL)*

  alias PFE_EXPORT_FUNC = Proc(UInt8*, Void*, UInt32, UInt32)*

  alias PFE_IMPORT_FUNC = Proc(UInt8*, Void*, UInt32*, UInt32)*

  alias LPPROGRESS_ROUTINE = Proc(Win32cr::Foundation::LARGE_INTEGER, Win32cr::Foundation::LARGE_INTEGER, Win32cr::Foundation::LARGE_INTEGER, Win32cr::Foundation::LARGE_INTEGER, UInt32, Win32cr::Storage::FileSystem::LPPROGRESS_ROUTINE_CALLBACK_REASON, Win32cr::Foundation::HANDLE, Win32cr::Foundation::HANDLE, Void*, UInt32)*

  alias PCOPYFILE2_PROGRESS_ROUTINE = Proc(Win32cr::Storage::FileSystem::COPYFILE2_MESSAGE*, Void*, Win32cr::Storage::FileSystem::COPYFILE2_MESSAGE_ACTION)*

  EA_CONTAINER_NAME = "ContainerName"
  EA_CONTAINER_SIZE = "ContainerSize"
  CLFS_BASELOG_EXTENSION = ".blf"
  CLFS_FLAG_REENTRANT_FILE_SYSTEM = 8_u32
  CLFS_FLAG_NON_REENTRANT_FILTER = 16_u32
  CLFS_FLAG_REENTRANT_FILTER = 32_u32
  CLFS_FLAG_IGNORE_SHARE_ACCESS = 64_u32
  CLFS_FLAG_READ_IN_PROGRESS = 128_u32
  CLFS_FLAG_MINIFILTER_LEVEL = 256_u32
  CLFS_FLAG_HIDDEN_SYSTEM_LOG = 512_u32
  CLFS_MARSHALLING_FLAG_NONE = 0_u32
  CLFS_MARSHALLING_FLAG_DISABLE_BUFF_INIT = 1_u32
  CLFS_FLAG_FILTER_INTERMEDIATE_LEVEL = 16_u32
  CLFS_FLAG_FILTER_TOP_LEVEL = 32_u32
  CLFS_CONTAINER_STREAM_PREFIX = "%BLF%:"
  CLFS_CONTAINER_RELATIVE_PREFIX = "%BLF%\\"
  TRANSACTION_MANAGER_VOLATILE = 1_u32
  TRANSACTION_MANAGER_COMMIT_DEFAULT = 0_u32
  TRANSACTION_MANAGER_COMMIT_SYSTEM_VOLUME = 2_u32
  TRANSACTION_MANAGER_COMMIT_SYSTEM_HIVES = 4_u32
  TRANSACTION_MANAGER_COMMIT_LOWEST = 8_u32
  TRANSACTION_MANAGER_CORRUPT_FOR_RECOVERY = 16_u32
  TRANSACTION_MANAGER_CORRUPT_FOR_PROGRESS = 32_u32
  TRANSACTION_MANAGER_MAXIMUM_OPTION = 63_u32
  TRANSACTION_DO_NOT_PROMOTE = 1_u32
  TRANSACTION_MAXIMUM_OPTION = 1_u32
  RESOURCE_MANAGER_VOLATILE = 1_u32
  RESOURCE_MANAGER_COMMUNICATION = 2_u32
  RESOURCE_MANAGER_MAXIMUM_OPTION = 3_u32
  CRM_PROTOCOL_EXPLICIT_MARSHAL_ONLY = 1_u32
  CRM_PROTOCOL_DYNAMIC_MARSHAL_INFO = 2_u32
  CRM_PROTOCOL_MAXIMUM_OPTION = 3_u32
  ENLISTMENT_SUPERIOR = 1_u32
  ENLISTMENT_MAXIMUM_OPTION = 1_u32
  TRANSACTION_NOTIFY_MASK = 1073741823_u32
  TRANSACTION_NOTIFY_PREPREPARE = 1_u32
  TRANSACTION_NOTIFY_PREPARE = 2_u32
  TRANSACTION_NOTIFY_COMMIT = 4_u32
  TRANSACTION_NOTIFY_ROLLBACK = 8_u32
  TRANSACTION_NOTIFY_PREPREPARE_COMPLETE = 16_u32
  TRANSACTION_NOTIFY_PREPARE_COMPLETE = 32_u32
  TRANSACTION_NOTIFY_COMMIT_COMPLETE = 64_u32
  TRANSACTION_NOTIFY_ROLLBACK_COMPLETE = 128_u32
  TRANSACTION_NOTIFY_RECOVER = 256_u32
  TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT = 512_u32
  TRANSACTION_NOTIFY_DELEGATE_COMMIT = 1024_u32
  TRANSACTION_NOTIFY_RECOVER_QUERY = 2048_u32
  TRANSACTION_NOTIFY_ENLIST_PREPREPARE = 4096_u32
  TRANSACTION_NOTIFY_LAST_RECOVER = 8192_u32
  TRANSACTION_NOTIFY_INDOUBT = 16384_u32
  TRANSACTION_NOTIFY_PROPAGATE_PULL = 32768_u32
  TRANSACTION_NOTIFY_PROPAGATE_PUSH = 65536_u32
  TRANSACTION_NOTIFY_MARSHAL = 131072_u32
  TRANSACTION_NOTIFY_ENLIST_MASK = 262144_u32
  TRANSACTION_NOTIFY_RM_DISCONNECTED = 16777216_u32
  TRANSACTION_NOTIFY_TM_ONLINE = 33554432_u32
  TRANSACTION_NOTIFY_COMMIT_REQUEST = 67108864_u32
  TRANSACTION_NOTIFY_PROMOTE = 134217728_u32
  TRANSACTION_NOTIFY_PROMOTE_NEW = 268435456_u32
  TRANSACTION_NOTIFY_REQUEST_OUTCOME = 536870912_u32
  TRANSACTION_NOTIFY_COMMIT_FINALIZE = 1073741824_u32
  TRANSACTIONMANAGER_OBJECT_PATH = "\\TransactionManager\\"
  TRANSACTION_OBJECT_PATH = "\\Transaction\\"
  ENLISTMENT_OBJECT_PATH = "\\Enlistment\\"
  RESOURCE_MANAGER_OBJECT_PATH = "\\ResourceManager\\"
  TRANSACTION_NOTIFICATION_TM_ONLINE_FLAG_IS_CLUSTERED = 1_u32
  KTM_MARSHAL_BLOB_VERSION_MAJOR = 1_u32
  KTM_MARSHAL_BLOB_VERSION_MINOR = 1_u32
  MAX_TRANSACTION_DESCRIPTION_LENGTH = 64_u32
  MAX_RESOURCEMANAGER_DESCRIPTION_LENGTH = 64_u32
  IOCTL_VOLUME_BASE = 86_u32
  IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS = 5636096_u32
  IOCTL_VOLUME_ONLINE = 5685256_u32
  IOCTL_VOLUME_OFFLINE = 5685260_u32
  IOCTL_VOLUME_IS_CLUSTERED = 5636144_u32
  IOCTL_VOLUME_GET_GPT_ATTRIBUTES = 5636152_u32
  IOCTL_VOLUME_SUPPORTS_ONLINE_OFFLINE = 5636100_u32
  IOCTL_VOLUME_IS_OFFLINE = 5636112_u32
  IOCTL_VOLUME_IS_IO_CAPABLE = 5636116_u32
  IOCTL_VOLUME_QUERY_FAILOVER_SET = 5636120_u32
  IOCTL_VOLUME_QUERY_VOLUME_NUMBER = 5636124_u32
  IOCTL_VOLUME_LOGICAL_TO_PHYSICAL = 5636128_u32
  IOCTL_VOLUME_PHYSICAL_TO_LOGICAL = 5636132_u32
  IOCTL_VOLUME_IS_PARTITION = 5636136_u32
  IOCTL_VOLUME_READ_PLEX = 5652526_u32
  IOCTL_VOLUME_SET_GPT_ATTRIBUTES = 5636148_u32
  IOCTL_VOLUME_GET_BC_PROPERTIES = 5652540_u32
  IOCTL_VOLUME_ALLOCATE_BC_STREAM = 5685312_u32
  IOCTL_VOLUME_FREE_BC_STREAM = 5685316_u32
  IOCTL_VOLUME_BC_VERSION = 1_u32
  IOCTL_VOLUME_IS_DYNAMIC = 5636168_u32
  IOCTL_VOLUME_PREPARE_FOR_CRITICAL_IO = 5685324_u32
  IOCTL_VOLUME_QUERY_ALLOCATION_HINT = 5652562_u32
  IOCTL_VOLUME_UPDATE_PROPERTIES = 5636180_u32
  IOCTL_VOLUME_QUERY_MINIMUM_SHRINK_SIZE = 5652568_u32
  IOCTL_VOLUME_PREPARE_FOR_SHRINK = 5685340_u32
  IOCTL_VOLUME_IS_CSV = 5636192_u32
  IOCTL_VOLUME_POST_ONLINE = 5685348_u32
  IOCTL_VOLUME_GET_CSVBLOCKCACHE_CALLBACK = 5685352_u32
  CSV_BLOCK_CACHE_CALLBACK_VERSION = 1_u32
  CSV_BLOCK_AND_FILE_CACHE_CALLBACK_VERSION = 2_u32
  PARTITION_BASIC_DATA_GUID = "ebd0a0a2-b9e5-4433-87c0-68b6b72699c7"
  PARTITION_BSP_GUID = "57434f53-4df9-45b9-8e9e-2370f006457c"
  PARTITION_CLUSTER_GUID = "db97dba9-0840-4bae-97f0-ffb9a327c7e1"
  PARTITION_DPP_GUID = "57434f53-94cb-43f0-a533-d73c10cfa57d"
  PARTITION_ENTRY_UNUSED_GUID = "00000000-0000-0000-0000-000000000000"
  PARTITION_LDM_DATA_GUID = "af9b60a0-1431-4f62-bc68-3311714a69ad"
  PARTITION_LDM_METADATA_GUID = "5808c8aa-7e8f-42e0-85d2-e1e90434cfb3"
  PARTITION_LEGACY_BL_GUID = "424ca0e2-7cb2-4fb9-8143-c52a99398bc6"
  PARTITION_LEGACY_BL_GUID_BACKUP = "424c3e6c-d79f-49cb-935d-36d71467a288"
  PARTITION_MAIN_OS_GUID = "57434f53-8f45-405e-8a23-186d8a4330d3"
  PARTITION_MSFT_RECOVERY_GUID = "de94bba4-06d1-4d40-a16a-bfd50179d6ac"
  PARTITION_MSFT_RESERVED_GUID = "e3c9e316-0b5c-4db8-817d-f92df00215ae"
  PARTITION_MSFT_SNAPSHOT_GUID = "caddebf1-4400-4de8-b103-12117dcf3ccf"
  PARTITION_OS_DATA_GUID = "57434f53-23f2-44d5-a830-67bbdaa609f9"
  PARTITION_PATCH_GUID = "8967a686-96aa-6aa8-9589-a84256541090"
  PARTITION_PRE_INSTALLED_GUID = "57434f53-7fe0-4196-9b42-427b51643484"
  PARTITION_SERVICING_FILES_GUID = "57434f53-432e-4014-ae4c-8deaa9c0006a"
  PARTITION_SERVICING_METADATA_GUID = "57434f53-c691-4a05-bb4e-703dafd229ce"
  PARTITION_SERVICING_RESERVE_GUID = "57434f53-4b81-460b-a319-ffb6fe136d14"
  PARTITION_SERVICING_STAGING_ROOT_GUID = "57434f53-e84d-4e84-aaf3-ecbbbd04b9df"
  PARTITION_SPACES_GUID = "e75caf8f-f680-4cee-afa3-b001e56efc2d"
  PARTITION_SPACES_DATA_GUID = "e7addcb4-dc34-4539-9a76-ebbd07be6f7e"
  PARTITION_SYSTEM_GUID = "c12a7328-f81f-11d2-ba4b-00a0c93ec93b"
  PARTITION_WINDOWS_SYSTEM_GUID = "57434f53-e3e3-4631-a5c5-26d2243873aa"
  FT_TYPES_DEFINITION_ = 1_u32
  CLFS_MGMT_POLICY_VERSION = 1_u32
  LOG_POLICY_OVERWRITE = 1_u32
  LOG_POLICY_PERSIST = 2_u32
  CLFS_MGMT_CLIENT_REGISTRATION_VERSION = 1_u32
  CLSID_DiskQuotaControl = "7988b571-ec89-11cf-9c00-00aa00a14f56"
  DISKQUOTA_STATE_DISABLED = 0_u32
  DISKQUOTA_STATE_TRACK = 1_u32
  DISKQUOTA_STATE_ENFORCE = 2_u32
  DISKQUOTA_STATE_MASK = 3_u32
  DISKQUOTA_FILESTATE_INCOMPLETE = 256_u32
  DISKQUOTA_FILESTATE_REBUILDING = 512_u32
  DISKQUOTA_FILESTATE_MASK = 768_u32
  DISKQUOTA_LOGFLAG_USER_THRESHOLD = 1_u32
  DISKQUOTA_LOGFLAG_USER_LIMIT = 2_u32
  DISKQUOTA_USER_ACCOUNT_RESOLVED = 0_u32
  DISKQUOTA_USER_ACCOUNT_UNAVAILABLE = 1_u32
  DISKQUOTA_USER_ACCOUNT_DELETED = 2_u32
  DISKQUOTA_USER_ACCOUNT_INVALID = 3_u32
  DISKQUOTA_USER_ACCOUNT_UNKNOWN = 4_u32
  DISKQUOTA_USER_ACCOUNT_UNRESOLVED = 5_u32
  INVALID_SET_FILE_POINTER = 4294967295_u32
  INVALID_FILE_ATTRIBUTES = 4294967295_u32
  SHARE_NETNAME_PARMNUM = 1_u32
  SHARE_TYPE_PARMNUM = 3_u32
  SHARE_REMARK_PARMNUM = 4_u32
  SHARE_PERMISSIONS_PARMNUM = 5_u32
  SHARE_MAX_USES_PARMNUM = 6_u32
  SHARE_CURRENT_USES_PARMNUM = 7_u32
  SHARE_PATH_PARMNUM = 8_u32
  SHARE_PASSWD_PARMNUM = 9_u32
  SHARE_FILE_SD_PARMNUM = 501_u32
  SHARE_SERVER_PARMNUM = 503_u32
  SHI1_NUM_ELEMENTS = 4_u32
  SHI2_NUM_ELEMENTS = 10_u32
  STYPE_RESERVED1 = 16777216_u32
  STYPE_RESERVED2 = 33554432_u32
  STYPE_RESERVED3 = 67108864_u32
  STYPE_RESERVED4 = 134217728_u32
  STYPE_RESERVED5 = 1048576_u32
  STYPE_RESERVED_ALL = 1073741568_u32
  SHI_USES_UNLIMITED = 4294967295_u32
  SHI1005_FLAGS_DFS = 1_u32
  SHI1005_FLAGS_DFS_ROOT = 2_u32
  CSC_MASK_EXT = 8240_u32
  CSC_MASK = 48_u32
  CSC_CACHE_MANUAL_REINT = 0_u32
  CSC_CACHE_AUTO_REINT = 16_u32
  CSC_CACHE_VDO = 32_u32
  CSC_CACHE_NONE = 48_u32
  SHI1005_FLAGS_RESTRICT_EXCLUSIVE_OPENS = 256_u32
  SHI1005_FLAGS_FORCE_SHARED_DELETE = 512_u32
  SHI1005_FLAGS_ALLOW_NAMESPACE_CACHING = 1024_u32
  SHI1005_FLAGS_ACCESS_BASED_DIRECTORY_ENUM = 2048_u32
  SHI1005_FLAGS_FORCE_LEVELII_OPLOCK = 4096_u32
  SHI1005_FLAGS_ENABLE_HASH = 8192_u32
  SHI1005_FLAGS_ENABLE_CA = 16384_u32
  SHI1005_FLAGS_ENCRYPT_DATA = 32768_u32
  SHI1005_FLAGS_RESERVED = 65536_u32
  SHI1005_FLAGS_DISABLE_CLIENT_BUFFERING = 131072_u32
  SHI1005_FLAGS_IDENTITY_REMOTING = 262144_u32
  SHI1005_FLAGS_CLUSTER_MANAGED = 524288_u32
  SHI1005_FLAGS_COMPRESS_DATA = 1048576_u32
  SESI1_NUM_ELEMENTS = 8_u32
  SESI2_NUM_ELEMENTS = 9_u32
  STATSOPT_CLR = 1_u32
  LZERROR_BADINHANDLE = -1_i32
  LZERROR_BADOUTHANDLE = -2_i32
  LZERROR_READ = -3_i32
  LZERROR_WRITE = -4_i32
  LZERROR_GLOBALLOC = -5_i32
  LZERROR_GLOBLOCK = -6_i32
  LZERROR_BADVALUE = -7_i32
  LZERROR_UNKNOWNALG = -8_i32
  NTMS_OBJECTNAME_LENGTH = 64_u32
  NTMS_DESCRIPTION_LENGTH = 127_u32
  NTMS_DEVICENAME_LENGTH = 64_u32
  NTMS_SERIALNUMBER_LENGTH = 32_u32
  NTMS_REVISION_LENGTH = 32_u32
  NTMS_BARCODE_LENGTH = 64_u32
  NTMS_SEQUENCE_LENGTH = 32_u32
  NTMS_VENDORNAME_LENGTH = 128_u32
  NTMS_PRODUCTNAME_LENGTH = 128_u32
  NTMS_USERNAME_LENGTH = 64_u32
  NTMS_APPLICATIONNAME_LENGTH = 64_u32
  NTMS_COMPUTERNAME_LENGTH = 64_u32
  NTMS_I1_MESSAGE_LENGTH = 127_u32
  NTMS_MESSAGE_LENGTH = 256_u32
  NTMS_POOLHIERARCHY_LENGTH = 512_u32
  NTMS_OMIDLABELID_LENGTH = 255_u32
  NTMS_OMIDLABELTYPE_LENGTH = 64_u32
  NTMS_OMIDLABELINFO_LENGTH = 256_u32
  NTMS_MAXATTR_LENGTH = 65536_u32
  NTMS_MAXATTR_NAMELEN = 32_u32
  NTMSMLI_MAXTYPE = 64_u32
  NTMSMLI_MAXIDSIZE = 256_u32
  NTMSMLI_MAXAPPDESCR = 256_u32
  TXF_LOG_RECORD_GENERIC_TYPE_COMMIT = 1_u32
  TXF_LOG_RECORD_GENERIC_TYPE_ABORT = 2_u32
  TXF_LOG_RECORD_GENERIC_TYPE_PREPARE = 4_u32
  TXF_LOG_RECORD_GENERIC_TYPE_DATA = 8_u32
  VS_VERSION_INFO = 1_u32
  VS_USER_DEFINED = 100_u32
  VS_FFI_SIGNATURE = -17890115_i32
  VS_FFI_STRUCVERSION = 65536_i32
  VS_FFI_FILEFLAGSMASK = 63_i32
  WINEFS_SETUSERKEY_SET_CAPABILITIES = 1_u32
  EFS_COMPATIBILITY_VERSION_NCRYPT_PROTECTOR = 5_u32
  EFS_COMPATIBILITY_VERSION_PFILE_PROTECTOR = 6_u32
  EFS_SUBVER_UNKNOWN = 0_u32
  EFS_EFS_SUBVER_EFS_CERT = 1_u32
  EFS_PFILE_SUBVER_RMS = 2_u32
  EFS_PFILE_SUBVER_APPX = 3_u32
  MAX_SID_SIZE = 256_u32
  EFS_METADATA_ADD_USER = 1_u32
  EFS_METADATA_REMOVE_USER = 2_u32
  EFS_METADATA_REPLACE_USER = 4_u32
  EFS_METADATA_GENERAL_OP = 8_u32
  WOF_PROVIDER_WIM = 1_u32
  WOF_PROVIDER_FILE = 2_u32
  WIM_PROVIDER_HASH_SIZE = 20_u32
  WIM_BOOT_OS_WIM = 1_u32
  WIM_BOOT_NOT_OS_WIM = 0_u32
  WIM_ENTRY_FLAG_NOT_ACTIVE = 1_u32
  WIM_ENTRY_FLAG_SUSPENDED = 2_u32
  WIM_EXTERNAL_FILE_INFO_FLAG_NOT_ACTIVE = 1_u32
  WIM_EXTERNAL_FILE_INFO_FLAG_SUSPENDED = 2_u32
  FILE_PROVIDER_COMPRESSION_XPRESS4K = 0_u32
  FILE_PROVIDER_COMPRESSION_LZX = 1_u32
  FILE_PROVIDER_COMPRESSION_XPRESS8K = 2_u32
  FILE_PROVIDER_COMPRESSION_XPRESS16K = 3_u32
  ClfsNullRecord = 0
  ClfsDataRecord = 1
  ClfsRestartRecord = 2
  ClfsClientRecord = 3
  ClsContainerInitializing = 1_u32
  ClsContainerInactive = 2_u32
  ClsContainerActive = 4_u32
  ClsContainerActivePendingDelete = 8_u32
  ClsContainerPendingArchive = 16_u32
  ClsContainerPendingArchiveAndDelete = 32_u32
  ClfsContainerInitializing = 1_u32
  ClfsContainerInactive = 2_u32
  ClfsContainerActive = 4_u32
  ClfsContainerActivePendingDelete = 8_u32
  ClfsContainerPendingArchive = 16_u32
  ClfsContainerPendingArchiveAndDelete = 32_u32
  CLFS_MAX_CONTAINER_INFO = 256_u32
  CLFS_SCAN_INIT = 1
  CLFS_SCAN_FORWARD = 2
  CLFS_SCAN_BACKWARD = 4
  CLFS_SCAN_CLOSE = 8
  CLFS_SCAN_INITIALIZED = 16
  CLFS_SCAN_BUFFERED = 32

  @[Flags]
  enum FIND_FIRST_EX_FLAGS : UInt32
    FIND_FIRST_EX_CASE_SENSITIVE = 1_u32
    FIND_FIRST_EX_LARGE_FETCH = 2_u32
    FIND_FIRST_EX_ON_DISK_ENTRIES_ONLY = 4_u32
  end
  @[Flags]
  enum DEFINE_DOS_DEVICE_FLAGS : UInt32
    DDD_RAW_TARGET_PATH = 1_u32
    DDD_REMOVE_DEFINITION = 2_u32
    DDD_EXACT_MATCH_ON_REMOVE = 4_u32
    DDD_NO_BROADCAST_SYSTEM = 8_u32
    DDD_LUID_BROADCAST_DRIVE = 16_u32
  end
  @[Flags]
  enum FILE_FLAGS_AND_ATTRIBUTES : UInt32
    FILE_ATTRIBUTE_READONLY = 1_u32
    FILE_ATTRIBUTE_HIDDEN = 2_u32
    FILE_ATTRIBUTE_SYSTEM = 4_u32
    FILE_ATTRIBUTE_DIRECTORY = 16_u32
    FILE_ATTRIBUTE_ARCHIVE = 32_u32
    FILE_ATTRIBUTE_DEVICE = 64_u32
    FILE_ATTRIBUTE_NORMAL = 128_u32
    FILE_ATTRIBUTE_TEMPORARY = 256_u32
    FILE_ATTRIBUTE_SPARSE_FILE = 512_u32
    FILE_ATTRIBUTE_REPARSE_POINT = 1024_u32
    FILE_ATTRIBUTE_COMPRESSED = 2048_u32
    FILE_ATTRIBUTE_OFFLINE = 4096_u32
    FILE_ATTRIBUTE_NOT_CONTENT_INDEXED = 8192_u32
    FILE_ATTRIBUTE_ENCRYPTED = 16384_u32
    FILE_ATTRIBUTE_INTEGRITY_STREAM = 32768_u32
    FILE_ATTRIBUTE_VIRTUAL = 65536_u32
    FILE_ATTRIBUTE_NO_SCRUB_DATA = 131072_u32
    FILE_ATTRIBUTE_EA = 262144_u32
    FILE_ATTRIBUTE_PINNED = 524288_u32
    FILE_ATTRIBUTE_UNPINNED = 1048576_u32
    FILE_ATTRIBUTE_RECALL_ON_OPEN = 262144_u32
    FILE_ATTRIBUTE_RECALL_ON_DATA_ACCESS = 4194304_u32
    FILE_FLAG_WRITE_THROUGH = 2147483648_u32
    FILE_FLAG_OVERLAPPED = 1073741824_u32
    FILE_FLAG_NO_BUFFERING = 536870912_u32
    FILE_FLAG_RANDOM_ACCESS = 268435456_u32
    FILE_FLAG_SEQUENTIAL_SCAN = 134217728_u32
    FILE_FLAG_DELETE_ON_CLOSE = 67108864_u32
    FILE_FLAG_BACKUP_SEMANTICS = 33554432_u32
    FILE_FLAG_POSIX_SEMANTICS = 16777216_u32
    FILE_FLAG_SESSION_AWARE = 8388608_u32
    FILE_FLAG_OPEN_REPARSE_POINT = 2097152_u32
    FILE_FLAG_OPEN_NO_RECALL = 1048576_u32
    FILE_FLAG_FIRST_PIPE_INSTANCE = 524288_u32
    PIPE_ACCESS_DUPLEX = 3_u32
    PIPE_ACCESS_INBOUND = 1_u32
    PIPE_ACCESS_OUTBOUND = 2_u32
    SECURITY_ANONYMOUS = 0_u32
    SECURITY_IDENTIFICATION = 65536_u32
    SECURITY_IMPERSONATION = 131072_u32
    SECURITY_DELEGATION = 196608_u32
    SECURITY_CONTEXT_TRACKING = 262144_u32
    SECURITY_EFFECTIVE_ONLY = 524288_u32
    SECURITY_SQOS_PRESENT = 1048576_u32
    SECURITY_VALID_SQOS_FLAGS = 2031616_u32
  end
  @[Flags]
  enum FILE_ACCESS_FLAGS : UInt32
    FILE_READ_DATA = 1_u32
    FILE_LIST_DIRECTORY = 1_u32
    FILE_WRITE_DATA = 2_u32
    FILE_ADD_FILE = 2_u32
    FILE_APPEND_DATA = 4_u32
    FILE_ADD_SUBDIRECTORY = 4_u32
    FILE_CREATE_PIPE_INSTANCE = 4_u32
    FILE_READ_EA = 8_u32
    FILE_WRITE_EA = 16_u32
    FILE_EXECUTE = 32_u32
    FILE_TRAVERSE = 32_u32
    FILE_DELETE_CHILD = 64_u32
    FILE_READ_ATTRIBUTES = 128_u32
    FILE_WRITE_ATTRIBUTES = 256_u32
    READ_CONTROL = 131072_u32
    SYNCHRONIZE = 1048576_u32
    STANDARD_RIGHTS_REQUIRED = 983040_u32
    STANDARD_RIGHTS_READ = 131072_u32
    STANDARD_RIGHTS_WRITE = 131072_u32
    STANDARD_RIGHTS_EXECUTE = 131072_u32
    STANDARD_RIGHTS_ALL = 2031616_u32
    SPECIFIC_RIGHTS_ALL = 65535_u32
    FILE_ALL_ACCESS = 2032127_u32
    FILE_GENERIC_READ = 1179785_u32
    FILE_GENERIC_WRITE = 1179926_u32
    FILE_GENERIC_EXECUTE = 1179808_u32
  end
  @[Flags]
  enum GET_FILE_VERSION_INFO_FLAGS : UInt32
    FILE_VER_GET_LOCALISED = 1_u32
    FILE_VER_GET_NEUTRAL = 2_u32
    FILE_VER_GET_PREFETCHED = 4_u32
  end
  enum VER_FIND_FILE_FLAGS : UInt32
    VFFF_ISSHAREDFILE = 1_u32
  end
  @[Flags]
  enum VER_FIND_FILE_STATUS : UInt32
    VFF_CURNEDEST = 1_u32
    VFF_FILEINUSE = 2_u32
    VFF_BUFFTOOSMALL = 4_u32
  end
  enum VER_INSTALL_FILE_FLAGS : UInt32
    VIFF_FORCEINSTALL = 1_u32
    VIFF_DONTDELETEOLD = 2_u32
  end
  @[Flags]
  enum VER_INSTALL_FILE_STATUS : UInt32
    VIF_TEMPFILE = 1_u32
    VIF_MISMATCH = 2_u32
    VIF_SRCOLD = 4_u32
    VIF_DIFFLANG = 8_u32
    VIF_DIFFCODEPG = 16_u32
    VIF_DIFFTYPE = 32_u32
    VIF_WRITEPROT = 64_u32
    VIF_FILEINUSE = 128_u32
    VIF_OUTOFSPACE = 256_u32
    VIF_ACCESSVIOLATION = 512_u32
    VIF_SHARINGVIOLATION = 1024_u32
    VIF_CANNOTCREATE = 2048_u32
    VIF_CANNOTDELETE = 4096_u32
    VIF_CANNOTRENAME = 8192_u32
    VIF_CANNOTDELETECUR = 16384_u32
    VIF_OUTOFMEMORY = 32768_u32
    VIF_CANNOTREADSRC = 65536_u32
    VIF_CANNOTREADDST = 131072_u32
    VIF_BUFFTOOSMALL = 262144_u32
    VIF_CANNOTLOADLZ32 = 524288_u32
    VIF_CANNOTLOADCABINET = 1048576_u32
  end
  @[Flags]
  enum VS_FIXEDFILEINFO_FILE_FLAGS : UInt32
    VS_FF_DEBUG = 1_u32
    VS_FF_PRERELEASE = 2_u32
    VS_FF_PATCHED = 4_u32
    VS_FF_PRIVATEBUILD = 8_u32
    VS_FF_INFOINFERRED = 16_u32
    VS_FF_SPECIALBUILD = 32_u32
  end
  enum VS_FIXEDFILEINFO_FILE_OS
    VOS_UNKNOWN = 0_i32
    VOS_DOS = 65536_i32
    VOS_OS216 = 131072_i32
    VOS_OS232 = 196608_i32
    VOS_NT = 262144_i32
    VOS_WINCE = 327680_i32
    VOS__BASE = 0_i32
    VOS__WINDOWS16 = 1_i32
    VOS__PM16 = 2_i32
    VOS__PM32 = 3_i32
    VOS__WINDOWS32 = 4_i32
    VOS_DOS_WINDOWS16 = 65537_i32
    VOS_DOS_WINDOWS32 = 65540_i32
    VOS_OS216_PM16 = 131074_i32
    VOS_OS232_PM32 = 196611_i32
    VOS_NT_WINDOWS32 = 262148_i32
  end
  enum VS_FIXEDFILEINFO_FILE_TYPE
    VFT_UNKNOWN = 0_i32
    VFT_APP = 1_i32
    VFT_DLL = 2_i32
    VFT_DRV = 3_i32
    VFT_FONT = 4_i32
    VFT_VXD = 5_i32
    VFT_STATIC_LIB = 7_i32
  end
  enum VS_FIXEDFILEINFO_FILE_SUBTYPE
    VFT2_UNKNOWN = 0_i32
    VFT2_DRV_PRINTER = 1_i32
    VFT2_DRV_KEYBOARD = 2_i32
    VFT2_DRV_LANGUAGE = 3_i32
    VFT2_DRV_DISPLAY = 4_i32
    VFT2_DRV_MOUSE = 5_i32
    VFT2_DRV_NETWORK = 6_i32
    VFT2_DRV_SYSTEM = 7_i32
    VFT2_DRV_INSTALLABLE = 8_i32
    VFT2_DRV_SOUND = 9_i32
    VFT2_DRV_COMM = 10_i32
    VFT2_DRV_INPUTMETHOD = 11_i32
    VFT2_DRV_VERSIONED_PRINTER = 12_i32
    VFT2_FONT_RASTER = 1_i32
    VFT2_FONT_VECTOR = 2_i32
    VFT2_FONT_TRUETYPE = 3_i32
  end
  enum FILE_CREATION_DISPOSITION : UInt32
    CREATE_NEW = 1_u32
    CREATE_ALWAYS = 2_u32
    OPEN_EXISTING = 3_u32
    OPEN_ALWAYS = 4_u32
    TRUNCATE_EXISTING = 5_u32
  end
  @[Flags]
  enum FILE_SHARE_MODE : UInt32
    FILE_SHARE_NONE = 0_u32
    FILE_SHARE_DELETE = 4_u32
    FILE_SHARE_READ = 1_u32
    FILE_SHARE_WRITE = 2_u32
  end
  @[Flags]
  enum SHARE_TYPE : UInt32
    STYPE_DISKTREE = 0_u32
    STYPE_PRINTQ = 1_u32
    STYPE_DEVICE = 2_u32
    STYPE_IPC = 3_u32
    STYPE_SPECIAL = 2147483648_u32
    STYPE_TEMPORARY = 1073741824_u32
    STYPE_MASK = 255_u32
  end
  @[Flags]
  enum CLFS_FLAG : UInt32
    CLFS_FLAG_FORCE_APPEND = 1_u32
    CLFS_FLAG_FORCE_FLUSH = 2_u32
    CLFS_FLAG_NO_FLAGS = 0_u32
    CLFS_FLAG_USE_RESERVATION = 4_u32
  end
  enum SET_FILE_POINTER_MOVE_METHOD : UInt32
    FILE_BEGIN = 0_u32
    FILE_CURRENT = 1_u32
    FILE_END = 2_u32
  end
  @[Flags]
  enum MOVE_FILE_FLAGS : UInt32
    MOVEFILE_COPY_ALLOWED = 2_u32
    MOVEFILE_CREATE_HARDLINK = 16_u32
    MOVEFILE_DELAY_UNTIL_REBOOT = 4_u32
    MOVEFILE_REPLACE_EXISTING = 1_u32
    MOVEFILE_WRITE_THROUGH = 8_u32
    MOVEFILE_FAIL_IF_NOT_TRACKABLE = 32_u32
  end
  enum FILE_NAME : UInt32
    FILE_NAME_NORMALIZED = 0_u32
    FILE_NAME_OPENED = 8_u32
  end
  @[Flags]
  enum LZOPENFILE_STYLE : UInt32
    OF_CANCEL = 2048_u32
    OF_CREATE = 4096_u32
    OF_DELETE = 512_u32
    OF_EXIST = 16384_u32
    OF_PARSE = 256_u32
    OF_PROMPT = 8192_u32
    OF_READ = 0_u32
    OF_READWRITE = 2_u32
    OF_REOPEN = 32768_u32
    OF_SHARE_DENY_NONE = 64_u32
    OF_SHARE_DENY_READ = 48_u32
    OF_SHARE_DENY_WRITE = 32_u32
    OF_SHARE_EXCLUSIVE = 16_u32
    OF_WRITE = 1_u32
    OF_SHARE_COMPAT = 0_u32
    OF_VERIFY = 1024_u32
  end
  @[Flags]
  enum FILE_NOTIFY_CHANGE : UInt32
    FILE_NOTIFY_CHANGE_FILE_NAME = 1_u32
    FILE_NOTIFY_CHANGE_DIR_NAME = 2_u32
    FILE_NOTIFY_CHANGE_ATTRIBUTES = 4_u32
    FILE_NOTIFY_CHANGE_SIZE = 8_u32
    FILE_NOTIFY_CHANGE_LAST_WRITE = 16_u32
    FILE_NOTIFY_CHANGE_LAST_ACCESS = 32_u32
    FILE_NOTIFY_CHANGE_CREATION = 64_u32
    FILE_NOTIFY_CHANGE_SECURITY = 256_u32
  end
  enum TXFS_MINIVERSION : UInt32
    TXFS_MINIVERSION_COMMITTED_VIEW = 0_u32
    TXFS_MINIVERSION_DIRTY_VIEW = 65535_u32
    TXFS_MINIVERSION_DEFAULT_VIEW = 65534_u32
  end
  enum TAPE_POSITION_TYPE
    TAPE_ABSOLUTE_POSITION = 0_i32
    TAPE_LOGICAL_POSITION = 1_i32
  end
  enum CREATE_TAPE_PARTITION_METHOD
    TAPE_FIXED_PARTITIONS = 0_i32
    TAPE_INITIATOR_PARTITIONS = 2_i32
    TAPE_SELECT_PARTITIONS = 1_i32
  end
  @[Flags]
  enum REPLACE_FILE_FLAGS : UInt32
    REPLACEFILE_WRITE_THROUGH = 1_u32
    REPLACEFILE_IGNORE_MERGE_ERRORS = 2_u32
    REPLACEFILE_IGNORE_ACL_ERRORS = 4_u32
  end
  enum TAPEMARK_TYPE
    TAPE_FILEMARKS = 1_i32
    TAPE_LONG_FILEMARKS = 3_i32
    TAPE_SETMARKS = 0_i32
    TAPE_SHORT_FILEMARKS = 2_i32
  end
  enum DISKQUOTA_USERNAME_RESOLVE : UInt32
    DISKQUOTA_USERNAME_RESOLVE_ASYNC = 2_u32
    DISKQUOTA_USERNAME_RESOLVE_NONE = 0_u32
    DISKQUOTA_USERNAME_RESOLVE_SYNC = 1_u32
  end
  enum TAPE_POSITION_METHOD
    TAPE_ABSOLUTE_BLOCK = 1_i32
    TAPE_LOGICAL_BLOCK = 2_i32
    TAPE_REWIND = 0_i32
    TAPE_SPACE_END_OF_DATA = 4_i32
    TAPE_SPACE_FILEMARKS = 6_i32
    TAPE_SPACE_RELATIVE_BLOCKS = 5_i32
    TAPE_SPACE_SEQUENTIAL_FMKS = 7_i32
    TAPE_SPACE_SEQUENTIAL_SMKS = 9_i32
    TAPE_SPACE_SETMARKS = 8_i32
  end
  enum NT_CREATE_FILE_DISPOSITION : UInt32
    FILE_SUPERSEDE = 0_u32
    FILE_CREATE = 2_u32
    FILE_OPEN = 1_u32
    FILE_OPEN_IF = 3_u32
    FILE_OVERWRITE = 4_u32
    FILE_OVERWRITE_IF = 5_u32
  end
  enum TAPE_INFORMATION_TYPE : UInt32
    SET_TAPE_DRIVE_INFORMATION = 1_u32
    SET_TAPE_MEDIA_INFORMATION = 0_u32
  end
  enum NTMS_OMID_TYPE : UInt32
    NTMS_OMID_TYPE_FILESYSTEM_INFO = 2_u32
    NTMS_OMID_TYPE_RAW_LABEL = 1_u32
  end
  @[Flags]
  enum LOCK_FILE_FLAGS : UInt32
    LOCKFILE_EXCLUSIVE_LOCK = 2_u32
    LOCKFILE_FAIL_IMMEDIATELY = 1_u32
  end
  enum LPPROGRESS_ROUTINE_CALLBACK_REASON : UInt32
    CALLBACK_CHUNK_FINISHED = 0_u32
    CALLBACK_STREAM_SWITCH = 1_u32
  end
  enum PREPARE_TAPE_OPERATION
    TAPE_FORMAT = 5_i32
    TAPE_LOAD = 0_i32
    TAPE_LOCK = 3_i32
    TAPE_TENSION = 2_i32
    TAPE_UNLOAD = 1_i32
    TAPE_UNLOCK = 4_i32
  end
  enum GET_TAPE_DRIVE_PARAMETERS_OPERATION : UInt32
    GET_TAPE_DRIVE_INFORMATION = 1_u32
    GET_TAPE_MEDIA_INFORMATION = 0_u32
  end
  enum ERASE_TAPE_TYPE
    TAPE_ERASE_LONG = 1_i32
    TAPE_ERASE_SHORT = 0_i32
  end
  enum FILE_ACTION : UInt32
    FILE_ACTION_ADDED = 1_u32
    FILE_ACTION_REMOVED = 2_u32
    FILE_ACTION_MODIFIED = 3_u32
    FILE_ACTION_RENAMED_OLD_NAME = 4_u32
    FILE_ACTION_RENAMED_NEW_NAME = 5_u32
  end
  enum SHARE_INFO_PERMISSIONS : UInt32
    ACCESS_READ = 1_u32
    ACCESS_WRITE = 2_u32
    ACCESS_CREATE = 4_u32
    ACCESS_EXEC = 8_u32
    ACCESS_DELETE = 16_u32
    ACCESS_ATRIB = 32_u32
    ACCESS_PERM = 64_u32
    ACCESS_ALL = 32768_u32
  end
  enum FILE_DEVICE_TYPE : UInt32
    FILE_DEVICE_CD_ROM = 2_u32
    FILE_DEVICE_DISK = 7_u32
    FILE_DEVICE_TAPE = 31_u32
    FILE_DEVICE_DVD = 51_u32
  end
  enum SESSION_INFO_USER_FLAGS : UInt32
    SESS_GUEST = 1_u32
    SESS_NOENCRYPTION = 2_u32
  end
  enum WIN_STREAM_ID : UInt32
    BACKUP_ALTERNATE_DATA = 4_u32
    BACKUP_DATA = 1_u32
    BACKUP_EA_DATA = 2_u32
    BACKUP_LINK = 5_u32
    BACKUP_OBJECT_ID = 7_u32
    BACKUP_PROPERTY_DATA = 6_u32
    BACKUP_REPARSE_DATA = 8_u32
    BACKUP_SECURITY_DATA = 3_u32
    BACKUP_SPARSE_BLOCK = 9_u32
    BACKUP_TXFS_DATA = 10_u32
  end
  enum TXF_LOG_RECORD_TYPE : UInt16
    TXF_LOG_RECORD_TYPE_AFFECTED_FILE = 4_u16
    TXF_LOG_RECORD_TYPE_TRUNCATE = 2_u16
    TXF_LOG_RECORD_TYPE_WRITE = 1_u16
  end
  @[Flags]
  enum FILE_INFO_FLAGS_PERMISSIONS : UInt32
    PERM_FILE_READ = 1_u32
    PERM_FILE_WRITE = 2_u32
    PERM_FILE_CREATE = 4_u32
  end
  @[Flags]
  enum SYMBOLIC_LINK_FLAGS : UInt32
    SYMBOLIC_LINK_FLAG_DIRECTORY = 1_u32
    SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE = 2_u32
  end
  enum FINDEX_INFO_LEVELS
    FindExInfoStandard = 0_i32
    FindExInfoBasic = 1_i32
    FindExInfoMaxInfoLevel = 2_i32
  end
  enum FINDEX_SEARCH_OPS
    FindExSearchNameMatch = 0_i32
    FindExSearchLimitToDirectories = 1_i32
    FindExSearchLimitToDevices = 2_i32
    FindExSearchMaxSearchOp = 3_i32
  end
  enum READ_DIRECTORY_NOTIFY_INFORMATION_CLASS
    ReadDirectoryNotifyInformation = 1_i32
    ReadDirectoryNotifyExtendedInformation = 2_i32
  end
  enum GET_FILEEX_INFO_LEVELS
    GetFileExInfoStandard = 0_i32
    GetFileExMaxInfoLevel = 1_i32
  end
  enum FILE_INFO_BY_HANDLE_CLASS
    FileBasicInfo = 0_i32
    FileStandardInfo = 1_i32
    FileNameInfo = 2_i32
    FileRenameInfo = 3_i32
    FileDispositionInfo = 4_i32
    FileAllocationInfo = 5_i32
    FileEndOfFileInfo = 6_i32
    FileStreamInfo = 7_i32
    FileCompressionInfo = 8_i32
    FileAttributeTagInfo = 9_i32
    FileIdBothDirectoryInfo = 10_i32
    FileIdBothDirectoryRestartInfo = 11_i32
    FileIoPriorityHintInfo = 12_i32
    FileRemoteProtocolInfo = 13_i32
    FileFullDirectoryInfo = 14_i32
    FileFullDirectoryRestartInfo = 15_i32
    FileStorageInfo = 16_i32
    FileAlignmentInfo = 17_i32
    FileIdInfo = 18_i32
    FileIdExtdDirectoryInfo = 19_i32
    FileIdExtdDirectoryRestartInfo = 20_i32
    FileDispositionInfoEx = 21_i32
    FileRenameInfoEx = 22_i32
    FileCaseSensitiveInfo = 23_i32
    FileNormalizedNameInfo = 24_i32
    MaximumFileInfoByHandleClass = 25_i32
  end
  enum STREAM_INFO_LEVELS
    FindStreamInfoStandard = 0_i32
    FindStreamInfoMaxInfoLevel = 1_i32
  end
  enum NtmsObjectsTypes
    NTMS_UNKNOWN = 0_i32
    NTMS_OBJECT = 1_i32
    NTMS_CHANGER = 2_i32
    NTMS_CHANGER_TYPE = 3_i32
    NTMS_COMPUTER = 4_i32
    NTMS_DRIVE = 5_i32
    NTMS_DRIVE_TYPE = 6_i32
    NTMS_IEDOOR = 7_i32
    NTMS_IEPORT = 8_i32
    NTMS_LIBRARY = 9_i32
    NTMS_LIBREQUEST = 10_i32
    NTMS_LOGICAL_MEDIA = 11_i32
    NTMS_MEDIA_POOL = 12_i32
    NTMS_MEDIA_TYPE = 13_i32
    NTMS_PARTITION = 14_i32
    NTMS_PHYSICAL_MEDIA = 15_i32
    NTMS_STORAGESLOT = 16_i32
    NTMS_OPREQUEST = 17_i32
    NTMS_UI_DESTINATION = 18_i32
    NTMS_NUMBER_OF_OBJECT_TYPES = 19_i32
  end
  enum NtmsAsyncStatus
    NTMS_ASYNCSTATE_QUEUED = 0_i32
    NTMS_ASYNCSTATE_WAIT_RESOURCE = 1_i32
    NTMS_ASYNCSTATE_WAIT_OPERATOR = 2_i32
    NTMS_ASYNCSTATE_INPROCESS = 3_i32
    NTMS_ASYNCSTATE_COMPLETE = 4_i32
  end
  enum NtmsAsyncOperations
    NTMS_ASYNCOP_MOUNT = 1_i32
  end
  enum NtmsSessionOptions
    NTMS_SESSION_QUERYEXPEDITE = 1_i32
  end
  enum NtmsMountOptions
    NTMS_MOUNT_READ = 1_i32
    NTMS_MOUNT_WRITE = 2_i32
    NTMS_MOUNT_ERROR_NOT_AVAILABLE = 4_i32
    NTMS_MOUNT_ERROR_IF_UNAVAILABLE = 4_i32
    NTMS_MOUNT_ERROR_OFFLINE = 8_i32
    NTMS_MOUNT_ERROR_IF_OFFLINE = 8_i32
    NTMS_MOUNT_SPECIFIC_DRIVE = 16_i32
    NTMS_MOUNT_NOWAIT = 32_i32
  end
  enum NtmsDismountOptions
    NTMS_DISMOUNT_DEFERRED = 1_i32
    NTMS_DISMOUNT_IMMEDIATE = 2_i32
  end
  enum NtmsMountPriority
    NTMS_PRIORITY_DEFAULT = 0_i32
    NTMS_PRIORITY_HIGHEST = 15_i32
    NTMS_PRIORITY_HIGH = 7_i32
    NTMS_PRIORITY_NORMAL = 0_i32
    NTMS_PRIORITY_LOW = -7_i32
    NTMS_PRIORITY_LOWEST = -15_i32
  end
  enum NtmsAllocateOptions
    NTMS_ALLOCATE_NEW = 1_i32
    NTMS_ALLOCATE_NEXT = 2_i32
    NTMS_ALLOCATE_ERROR_IF_UNAVAILABLE = 4_i32
  end
  enum NtmsCreateOptions
    NTMS_OPEN_EXISTING = 1_i32
    NTMS_CREATE_NEW = 2_i32
    NTMS_OPEN_ALWAYS = 3_i32
  end
  enum NtmsDriveState
    NTMS_DRIVESTATE_DISMOUNTED = 0_i32
    NTMS_DRIVESTATE_MOUNTED = 1_i32
    NTMS_DRIVESTATE_LOADED = 2_i32
    NTMS_DRIVESTATE_UNLOADED = 5_i32
    NTMS_DRIVESTATE_BEING_CLEANED = 6_i32
    NTMS_DRIVESTATE_DISMOUNTABLE = 7_i32
  end
  enum NtmsLibraryType
    NTMS_LIBRARYTYPE_UNKNOWN = 0_i32
    NTMS_LIBRARYTYPE_OFFLINE = 1_i32
    NTMS_LIBRARYTYPE_ONLINE = 2_i32
    NTMS_LIBRARYTYPE_STANDALONE = 3_i32
  end
  enum NtmsLibraryFlags
    NTMS_LIBRARYFLAG_FIXEDOFFLINE = 1_i32
    NTMS_LIBRARYFLAG_CLEANERPRESENT = 2_i32
    NTMS_LIBRARYFLAG_AUTODETECTCHANGE = 4_i32
    NTMS_LIBRARYFLAG_IGNORECLEANERUSESREMAINING = 8_i32
    NTMS_LIBRARYFLAG_RECOGNIZECLEANERBARCODE = 16_i32
  end
  enum NtmsInventoryMethod
    NTMS_INVENTORY_NONE = 0_i32
    NTMS_INVENTORY_FAST = 1_i32
    NTMS_INVENTORY_OMID = 2_i32
    NTMS_INVENTORY_DEFAULT = 3_i32
    NTMS_INVENTORY_SLOT = 4_i32
    NTMS_INVENTORY_STOP = 5_i32
    NTMS_INVENTORY_MAX = 6_i32
  end
  enum NtmsSlotState
    NTMS_SLOTSTATE_UNKNOWN = 0_i32
    NTMS_SLOTSTATE_FULL = 1_i32
    NTMS_SLOTSTATE_EMPTY = 2_i32
    NTMS_SLOTSTATE_NOTPRESENT = 3_i32
    NTMS_SLOTSTATE_NEEDSINVENTORY = 4_i32
  end
  enum NtmsDoorState
    NTMS_DOORSTATE_UNKNOWN = 0_i32
    NTMS_DOORSTATE_CLOSED = 1_i32
    NTMS_DOORSTATE_OPEN = 2_i32
  end
  enum NtmsPortPosition
    NTMS_PORTPOSITION_UNKNOWN = 0_i32
    NTMS_PORTPOSITION_EXTENDED = 1_i32
    NTMS_PORTPOSITION_RETRACTED = 2_i32
  end
  enum NtmsPortContent
    NTMS_PORTCONTENT_UNKNOWN = 0_i32
    NTMS_PORTCONTENT_FULL = 1_i32
    NTMS_PORTCONTENT_EMPTY = 2_i32
  end
  enum NtmsBarCodeState
    NTMS_BARCODESTATE_OK = 1_i32
    NTMS_BARCODESTATE_UNREADABLE = 2_i32
  end
  enum NtmsMediaState
    NTMS_MEDIASTATE_IDLE = 0_i32
    NTMS_MEDIASTATE_INUSE = 1_i32
    NTMS_MEDIASTATE_MOUNTED = 2_i32
    NTMS_MEDIASTATE_LOADED = 3_i32
    NTMS_MEDIASTATE_UNLOADED = 4_i32
    NTMS_MEDIASTATE_OPERROR = 5_i32
    NTMS_MEDIASTATE_OPREQ = 6_i32
  end
  enum NtmsPartitionState
    NTMS_PARTSTATE_UNKNOWN = 0_i32
    NTMS_PARTSTATE_UNPREPARED = 1_i32
    NTMS_PARTSTATE_INCOMPATIBLE = 2_i32
    NTMS_PARTSTATE_DECOMMISSIONED = 3_i32
    NTMS_PARTSTATE_AVAILABLE = 4_i32
    NTMS_PARTSTATE_ALLOCATED = 5_i32
    NTMS_PARTSTATE_COMPLETE = 6_i32
    NTMS_PARTSTATE_FOREIGN = 7_i32
    NTMS_PARTSTATE_IMPORT = 8_i32
    NTMS_PARTSTATE_RESERVED = 9_i32
  end
  enum NtmsPoolType
    NTMS_POOLTYPE_UNKNOWN = 0_i32
    NTMS_POOLTYPE_SCRATCH = 1_i32
    NTMS_POOLTYPE_FOREIGN = 2_i32
    NTMS_POOLTYPE_IMPORT = 3_i32
    NTMS_POOLTYPE_APPLICATION = 1000_i32
  end
  enum NtmsAllocationPolicy
    NTMS_ALLOCATE_FROMSCRATCH = 1_i32
  end
  enum NtmsDeallocationPolicy
    NTMS_DEALLOCATE_TOSCRATCH = 1_i32
  end
  enum NtmsReadWriteCharacteristics
    NTMS_MEDIARW_UNKNOWN = 0_i32
    NTMS_MEDIARW_REWRITABLE = 1_i32
    NTMS_MEDIARW_WRITEONCE = 2_i32
    NTMS_MEDIARW_READONLY = 3_i32
  end
  enum NtmsLmOperation
    NTMS_LM_REMOVE = 0_i32
    NTMS_LM_DISABLECHANGER = 1_i32
    NTMS_LM_DISABLELIBRARY = 1_i32
    NTMS_LM_ENABLECHANGER = 2_i32
    NTMS_LM_ENABLELIBRARY = 2_i32
    NTMS_LM_DISABLEDRIVE = 3_i32
    NTMS_LM_ENABLEDRIVE = 4_i32
    NTMS_LM_DISABLEMEDIA = 5_i32
    NTMS_LM_ENABLEMEDIA = 6_i32
    NTMS_LM_UPDATEOMID = 7_i32
    NTMS_LM_INVENTORY = 8_i32
    NTMS_LM_DOORACCESS = 9_i32
    NTMS_LM_EJECT = 10_i32
    NTMS_LM_EJECTCLEANER = 11_i32
    NTMS_LM_INJECT = 12_i32
    NTMS_LM_INJECTCLEANER = 13_i32
    NTMS_LM_PROCESSOMID = 14_i32
    NTMS_LM_CLEANDRIVE = 15_i32
    NTMS_LM_DISMOUNT = 16_i32
    NTMS_LM_MOUNT = 17_i32
    NTMS_LM_WRITESCRATCH = 18_i32
    NTMS_LM_CLASSIFY = 19_i32
    NTMS_LM_RESERVECLEANER = 20_i32
    NTMS_LM_RELEASECLEANER = 21_i32
    NTMS_LM_MAXWORKITEM = 22_i32
  end
  enum NtmsLmState
    NTMS_LM_QUEUED = 0_i32
    NTMS_LM_INPROCESS = 1_i32
    NTMS_LM_PASSED = 2_i32
    NTMS_LM_FAILED = 3_i32
    NTMS_LM_INVALID = 4_i32
    NTMS_LM_WAITING = 5_i32
    NTMS_LM_DEFERRED = 6_i32
    NTMS_LM_DEFFERED = 6_i32
    NTMS_LM_CANCELLED = 7_i32
    NTMS_LM_STOPPED = 8_i32
  end
  enum NtmsOpreqCommand
    NTMS_OPREQ_UNKNOWN = 0_i32
    NTMS_OPREQ_NEWMEDIA = 1_i32
    NTMS_OPREQ_CLEANER = 2_i32
    NTMS_OPREQ_DEVICESERVICE = 3_i32
    NTMS_OPREQ_MOVEMEDIA = 4_i32
    NTMS_OPREQ_MESSAGE = 5_i32
  end
  enum NtmsOpreqState
    NTMS_OPSTATE_UNKNOWN = 0_i32
    NTMS_OPSTATE_SUBMITTED = 1_i32
    NTMS_OPSTATE_ACTIVE = 2_i32
    NTMS_OPSTATE_INPROGRESS = 3_i32
    NTMS_OPSTATE_REFUSED = 4_i32
    NTMS_OPSTATE_COMPLETE = 5_i32
  end
  enum NtmsLibRequestFlags
    NTMS_LIBREQFLAGS_NOAUTOPURGE = 1_i32
    NTMS_LIBREQFLAGS_NOFAILEDPURGE = 2_i32
  end
  enum NtmsOpRequestFlags
    NTMS_OPREQFLAGS_NOAUTOPURGE = 1_i32
    NTMS_OPREQFLAGS_NOFAILEDPURGE = 2_i32
    NTMS_OPREQFLAGS_NOALERTS = 16_i32
    NTMS_OPREQFLAGS_NOTRAYICON = 32_i32
  end
  enum NtmsMediaPoolPolicy
    NTMS_POOLPOLICY_PURGEOFFLINESCRATCH = 1_i32
    NTMS_POOLPOLICY_KEEPOFFLINEIMPORT = 2_i32
  end
  enum NtmsOperationalState
    NTMS_READY = 0_i32
    NTMS_INITIALIZING = 10_i32
    NTMS_NEEDS_SERVICE = 20_i32
    NTMS_NOT_PRESENT = 21_i32
  end
  enum NtmsCreateNtmsMediaOptions
    NTMS_ERROR_ON_DUPLICATE = 1_i32
  end
  enum NtmsEnumerateOption
    NTMS_ENUM_DEFAULT = 0_i32
    NTMS_ENUM_ROOTPOOL = 1_i32
  end
  enum NtmsEjectOperation
    NTMS_EJECT_START = 0_i32
    NTMS_EJECT_STOP = 1_i32
    NTMS_EJECT_QUEUE = 2_i32
    NTMS_EJECT_FORCE = 3_i32
    NTMS_EJECT_IMMEDIATE = 4_i32
    NTMS_EJECT_ASK_USER = 5_i32
  end
  enum NtmsInjectOperation
    NTMS_INJECT_START = 0_i32
    NTMS_INJECT_STOP = 1_i32
    NTMS_INJECT_RETRACT = 2_i32
    NTMS_INJECT_STARTMANY = 3_i32
  end
  enum NtmsDriveType
    NTMS_UNKNOWN_DRIVE = 0_i32
  end
  enum NtmsAccessMask
    NTMS_USE_ACCESS = 1_i32
    NTMS_MODIFY_ACCESS = 2_i32
    NTMS_CONTROL_ACCESS = 4_i32
  end
  enum NtmsUITypes
    NTMS_UITYPE_INVALID = 0_i32
    NTMS_UITYPE_INFO = 1_i32
    NTMS_UITYPE_REQ = 2_i32
    NTMS_UITYPE_ERR = 3_i32
    NTMS_UITYPE_MAX = 4_i32
  end
  enum NtmsUIOperations
    NTMS_UIDEST_ADD = 1_i32
    NTMS_UIDEST_DELETE = 2_i32
    NTMS_UIDEST_DELETEALL = 3_i32
    NTMS_UIOPERATION_MAX = 4_i32
  end
  enum NtmsNotificationOperations
    NTMS_OBJ_UPDATE = 1_i32
    NTMS_OBJ_INSERT = 2_i32
    NTMS_OBJ_DELETE = 3_i32
    NTMS_EVENT_SIGNAL = 4_i32
    NTMS_EVENT_COMPLETE = 5_i32
  end
  enum CLS_CONTEXT_MODE
    ClsContextNone = 0_i32
    ClsContextUndoNext = 1_i32
    ClsContextPrevious = 2_i32
    ClsContextForward = 3_i32
  end
  enum CLFS_CONTEXT_MODE
    ClfsContextNone = 0_i32
    ClfsContextUndoNext = 1_i32
    ClfsContextPrevious = 2_i32
    ClfsContextForward = 3_i32
  end
  enum CLS_LOG_INFORMATION_CLASS
    ClfsLogBasicInformation = 0_i32
    ClfsLogBasicInformationPhysical = 1_i32
    ClfsLogPhysicalNameInformation = 2_i32
    ClfsLogStreamIdentifierInformation = 3_i32
    ClfsLogSystemMarkingInformation = 4_i32
    ClfsLogPhysicalLsnInformation = 5_i32
  end
  enum CLS_IOSTATS_CLASS
    ClsIoStatsDefault = 0_i32
    ClsIoStatsMax = 65535_i32
  end
  enum CLFS_IOSTATS_CLASS
    ClfsIoStatsDefault = 0_i32
    ClfsIoStatsMax = 65535_i32
  end
  enum CLFS_LOG_ARCHIVE_MODE
    ClfsLogArchiveEnabled = 1_i32
    ClfsLogArchiveDisabled = 2_i32
  end
  enum CLFS_MGMT_POLICY_TYPE
    ClfsMgmtPolicyMaximumSize = 0_i32
    ClfsMgmtPolicyMinimumSize = 1_i32
    ClfsMgmtPolicyNewContainerSize = 2_i32
    ClfsMgmtPolicyGrowthRate = 3_i32
    ClfsMgmtPolicyLogTail = 4_i32
    ClfsMgmtPolicyAutoShrink = 5_i32
    ClfsMgmtPolicyAutoGrow = 6_i32
    ClfsMgmtPolicyNewContainerPrefix = 7_i32
    ClfsMgmtPolicyNewContainerSuffix = 8_i32
    ClfsMgmtPolicyNewContainerExtension = 9_i32
    ClfsMgmtPolicyInvalid = 10_i32
  end
  enum CLFS_MGMT_NOTIFICATION_TYPE
    ClfsMgmtAdvanceTailNotification = 0_i32
    ClfsMgmtLogFullHandlerNotification = 1_i32
    ClfsMgmtLogUnpinnedNotification = 2_i32
    ClfsMgmtLogWriteNotification = 3_i32
  end
  enum SERVER_CERTIFICATE_TYPE
    QUIC = 0_i32
  end
  enum IORING_VERSION
    IORING_VERSION_INVALID = 0_i32
    IORING_VERSION_1 = 1_i32
  end
  enum IORING_FEATURE_FLAGS
    IORING_FEATURE_FLAGS_NONE = 0_i32
    IORING_FEATURE_UM_EMULATION = 1_i32
    IORING_FEATURE_SET_COMPLETION_EVENT = 2_i32
  end
  enum IORING_OP_CODE
    IORING_OP_NOP = 0_i32
    IORING_OP_READ = 1_i32
    IORING_OP_REGISTER_FILES = 2_i32
    IORING_OP_REGISTER_BUFFERS = 3_i32
    IORING_OP_CANCEL = 4_i32
  end
  enum IORING_SQE_FLAGS
    IOSQE_FLAGS_NONE = 0_i32
  end
  enum IORING_CREATE_REQUIRED_FLAGS
    IORING_CREATE_REQUIRED_FLAGS_NONE = 0_i32
  end
  enum IORING_CREATE_ADVISORY_FLAGS
    IORING_CREATE_ADVISORY_FLAGS_NONE = 0_i32
  end
  enum IORING_REF_KIND
    IORING_REF_RAW = 0_i32
    IORING_REF_REGISTERED = 1_i32
  end
  enum TRANSACTION_OUTCOME
    TransactionOutcomeUndetermined = 1_i32
    TransactionOutcomeCommitted = 2_i32
    TransactionOutcomeAborted = 3_i32
  end
  enum STORAGE_BUS_TYPE
    BusTypeUnknown = 0_i32
    BusTypeScsi = 1_i32
    BusTypeAtapi = 2_i32
    BusTypeAta = 3_i32
    BusType1394 = 4_i32
    BusTypeSsa = 5_i32
    BusTypeFibre = 6_i32
    BusTypeUsb = 7_i32
    BusTypeRAID = 8_i32
    BusTypeiScsi = 9_i32
    BusTypeSas = 10_i32
    BusTypeSata = 11_i32
    BusTypeSd = 12_i32
    BusTypeMmc = 13_i32
    BusTypeVirtual = 14_i32
    BusTypeFileBackedVirtual = 15_i32
    BusTypeSpaces = 16_i32
    BusTypeNvme = 17_i32
    BusTypeSCM = 18_i32
    BusTypeUfs = 19_i32
    BusTypeMax = 20_i32
    BusTypeMaxReserved = 127_i32
  end
  enum COPYFILE2_MESSAGE_TYPE
    COPYFILE2_CALLBACK_NONE = 0_i32
    COPYFILE2_CALLBACK_CHUNK_STARTED = 1_i32
    COPYFILE2_CALLBACK_CHUNK_FINISHED = 2_i32
    COPYFILE2_CALLBACK_STREAM_STARTED = 3_i32
    COPYFILE2_CALLBACK_STREAM_FINISHED = 4_i32
    COPYFILE2_CALLBACK_POLL_CONTINUE = 5_i32
    COPYFILE2_CALLBACK_ERROR = 6_i32
    COPYFILE2_CALLBACK_MAX = 7_i32
  end
  enum COPYFILE2_MESSAGE_ACTION
    COPYFILE2_PROGRESS_CONTINUE = 0_i32
    COPYFILE2_PROGRESS_CANCEL = 1_i32
    COPYFILE2_PROGRESS_STOP = 2_i32
    COPYFILE2_PROGRESS_QUIET = 3_i32
    COPYFILE2_PROGRESS_PAUSE = 4_i32
  end
  enum COPYFILE2_COPY_PHASE
    COPYFILE2_PHASE_NONE = 0_i32
    COPYFILE2_PHASE_PREPARE_SOURCE = 1_i32
    COPYFILE2_PHASE_PREPARE_DEST = 2_i32
    COPYFILE2_PHASE_READ_SOURCE = 3_i32
    COPYFILE2_PHASE_WRITE_DESTINATION = 4_i32
    COPYFILE2_PHASE_SERVER_COPY = 5_i32
    COPYFILE2_PHASE_NAMEGRAFT_COPY = 6_i32
    COPYFILE2_PHASE_MAX = 7_i32
  end
  enum PRIORITY_HINT
    IoPriorityHintVeryLow = 0_i32
    IoPriorityHintLow = 1_i32
    IoPriorityHintNormal = 2_i32
    MaximumIoPriorityHintType = 3_i32
  end
  enum FILE_ID_TYPE
    FileIdType = 0_i32
    ObjectIdType = 1_i32
    ExtendedFileIdType = 2_i32
    MaximumFileIdType = 3_i32
  end

  @[Extern]
  record WIN32_FIND_DATAA,
    dwFileAttributes : UInt32,
    ftCreationTime : Win32cr::Foundation::FILETIME,
    ftLastAccessTime : Win32cr::Foundation::FILETIME,
    ftLastWriteTime : Win32cr::Foundation::FILETIME,
    nFileSizeHigh : UInt32,
    nFileSizeLow : UInt32,
    dwReserved0 : UInt32,
    dwReserved1 : UInt32,
    cFileName : Win32cr::Foundation::CHAR[260],
    cAlternateFileName : Win32cr::Foundation::CHAR[14]

  @[Extern]
  record WIN32_FIND_DATAW,
    dwFileAttributes : UInt32,
    ftCreationTime : Win32cr::Foundation::FILETIME,
    ftLastAccessTime : Win32cr::Foundation::FILETIME,
    ftLastWriteTime : Win32cr::Foundation::FILETIME,
    nFileSizeHigh : UInt32,
    nFileSizeLow : UInt32,
    dwReserved0 : UInt32,
    dwReserved1 : UInt32,
    cFileName : UInt16[260],
    cAlternateFileName : UInt16[14]

  @[Extern]
  record TRANSACTION_NOTIFICATION,
    transaction_key : Void*,
    transaction_notification : UInt32,
    tm_virtual_clock : Win32cr::Foundation::LARGE_INTEGER,
    argument_length : UInt32

  @[Extern]
  record TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT,
    enlistment_id : LibC::GUID,
    uow : LibC::GUID

  @[Extern]
  record TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT,
    tm_identity : LibC::GUID,
    flags : UInt32

  @[Extern]
  record TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT,
    savepoint_id : UInt32

  @[Extern]
  record TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT,
    propagation_cookie : UInt32,
    uow : LibC::GUID,
    tm_identity : LibC::GUID,
    buffer_length : UInt32

  @[Extern]
  record TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT,
    marshal_cookie : UInt32,
    uow : LibC::GUID

  @[Extern]
  record KCRM_MARSHAL_HEADER,
    version_major : UInt32,
    version_minor : UInt32,
    num_protocols : UInt32,
    unused : UInt32

  @[Extern]
  record KCRM_TRANSACTION_BLOB,
    uow : LibC::GUID,
    tm_identity : LibC::GUID,
    isolation_level : UInt32,
    isolation_flags : UInt32,
    timeout : UInt32,
    description : UInt16[64]

  @[Extern]
  record KCRM_PROTOCOL_BLOB,
    protocol_id : LibC::GUID,
    static_info_length : UInt32,
    transaction_id_info_length : UInt32,
    unused1 : UInt32,
    unused2 : UInt32

  @[Extern]
  record DISK_SPACE_INFORMATION,
    actual_total_allocation_units : UInt64,
    actual_available_allocation_units : UInt64,
    actual_pool_unavailable_allocation_units : UInt64,
    caller_total_allocation_units : UInt64,
    caller_available_allocation_units : UInt64,
    caller_pool_unavailable_allocation_units : UInt64,
    used_allocation_units : UInt64,
    total_reserved_allocation_units : UInt64,
    volume_storage_reserve_allocation_units : UInt64,
    available_committed_allocation_units : UInt64,
    pool_available_allocation_units : UInt64,
    sectors_per_allocation_unit : UInt32,
    bytes_per_sector : UInt32

  @[Extern]
  record WIN32_FILE_ATTRIBUTE_DATA,
    dwFileAttributes : UInt32,
    ftCreationTime : Win32cr::Foundation::FILETIME,
    ftLastAccessTime : Win32cr::Foundation::FILETIME,
    ftLastWriteTime : Win32cr::Foundation::FILETIME,
    nFileSizeHigh : UInt32,
    nFileSizeLow : UInt32

  @[Extern]
  record BY_HANDLE_FILE_INFORMATION,
    dwFileAttributes : UInt32,
    ftCreationTime : Win32cr::Foundation::FILETIME,
    ftLastAccessTime : Win32cr::Foundation::FILETIME,
    ftLastWriteTime : Win32cr::Foundation::FILETIME,
    dwVolumeSerialNumber : UInt32,
    nFileSizeHigh : UInt32,
    nFileSizeLow : UInt32,
    nNumberOfLinks : UInt32,
    nFileIndexHigh : UInt32,
    nFileIndexLow : UInt32

  @[Extern]
  record CREATEFILE2_EXTENDED_PARAMETERS,
    dwSize : UInt32,
    dwFileAttributes : UInt32,
    dwFileFlags : UInt32,
    dwSecurityQosFlags : UInt32,
    lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*,
    hTemplateFile : Win32cr::Foundation::HANDLE

  @[Extern]
  record WIN32_FIND_STREAM_DATA,
    stream_size : Win32cr::Foundation::LARGE_INTEGER,
    cStreamName : UInt16[296]

  @[Extern]
  record VS_FIXEDFILEINFO,
    dwSignature : UInt32,
    dwStrucVersion : UInt32,
    dwFileVersionMS : UInt32,
    dwFileVersionLS : UInt32,
    dwProductVersionMS : UInt32,
    dwProductVersionLS : UInt32,
    dwFileFlagsMask : UInt32,
    dwFileFlags : Win32cr::Storage::FileSystem::VS_FIXEDFILEINFO_FILE_FLAGS,
    dwFileOS : Win32cr::Storage::FileSystem::VS_FIXEDFILEINFO_FILE_OS,
    dwFileType : Win32cr::Storage::FileSystem::VS_FIXEDFILEINFO_FILE_TYPE,
    dwFileSubtype : Win32cr::Storage::FileSystem::VS_FIXEDFILEINFO_FILE_SUBTYPE,
    dwFileDateMS : UInt32,
    dwFileDateLS : UInt32

  @[Extern]
  record NTMS_ASYNC_IO,
    operation_id : LibC::GUID,
    event_id : LibC::GUID,
    dwOperationType : UInt32,
    dwResult : UInt32,
    dwAsyncState : UInt32,
    hEvent : Win32cr::Foundation::HANDLE,
    bOnStateChange : Win32cr::Foundation::BOOL

  @[Extern]
  record NTMS_MOUNT_INFORMATION,
    dwSize : UInt32,
    lpReserved : Void*

  @[Extern]
  record NTMS_ALLOCATION_INFORMATION,
    dwSize : UInt32,
    lpReserved : Void*,
    allocated_from : LibC::GUID

  @[Extern]
  record NTMS_DRIVEINFORMATIONA,
    number : UInt32,
    state : Win32cr::Storage::FileSystem::NtmsDriveState,
    drive_type : LibC::GUID,
    szDeviceName : Win32cr::Foundation::CHAR[64],
    szSerialNumber : Win32cr::Foundation::CHAR[32],
    szRevision : Win32cr::Foundation::CHAR[32],
    scsi_port : UInt16,
    scsi_bus : UInt16,
    scsi_target : UInt16,
    scsi_lun : UInt16,
    dwMountCount : UInt32,
    last_cleaned_ts : Win32cr::Foundation::SYSTEMTIME,
    saved_partition_id : LibC::GUID,
    library : LibC::GUID,
    reserved : LibC::GUID,
    dwDeferDismountDelay : UInt32

  @[Extern]
  record NTMS_DRIVEINFORMATIONW,
    number : UInt32,
    state : Win32cr::Storage::FileSystem::NtmsDriveState,
    drive_type : LibC::GUID,
    szDeviceName : UInt16[64],
    szSerialNumber : UInt16[32],
    szRevision : UInt16[32],
    scsi_port : UInt16,
    scsi_bus : UInt16,
    scsi_target : UInt16,
    scsi_lun : UInt16,
    dwMountCount : UInt32,
    last_cleaned_ts : Win32cr::Foundation::SYSTEMTIME,
    saved_partition_id : LibC::GUID,
    library : LibC::GUID,
    reserved : LibC::GUID,
    dwDeferDismountDelay : UInt32

  @[Extern]
  record NTMS_LIBRARYINFORMATION,
    library_type : Win32cr::Storage::FileSystem::NtmsLibraryType,
    cleaner_slot : LibC::GUID,
    cleaner_slot_default : LibC::GUID,
    library_supports_drive_cleaning : Win32cr::Foundation::BOOL,
    bar_code_reader_installed : Win32cr::Foundation::BOOL,
    inventory_method : Win32cr::Storage::FileSystem::NtmsInventoryMethod,
    dwCleanerUsesRemaining : UInt32,
    first_drive_number : UInt32,
    dwNumberOfDrives : UInt32,
    first_slot_number : UInt32,
    dwNumberOfSlots : UInt32,
    first_door_number : UInt32,
    dwNumberOfDoors : UInt32,
    first_port_number : UInt32,
    dwNumberOfPorts : UInt32,
    first_changer_number : UInt32,
    dwNumberOfChangers : UInt32,
    dwNumberOfMedia : UInt32,
    dwNumberOfMediaTypes : UInt32,
    dwNumberOfLibRequests : UInt32,
    reserved : LibC::GUID,
    auto_recovery : Win32cr::Foundation::BOOL,
    dwFlags : Win32cr::Storage::FileSystem::NtmsLibraryFlags

  @[Extern]
  record NTMS_CHANGERINFORMATIONA,
    number : UInt32,
    changer_type : LibC::GUID,
    szSerialNumber : Win32cr::Foundation::CHAR[32],
    szRevision : Win32cr::Foundation::CHAR[32],
    szDeviceName : Win32cr::Foundation::CHAR[64],
    scsi_port : UInt16,
    scsi_bus : UInt16,
    scsi_target : UInt16,
    scsi_lun : UInt16,
    library : LibC::GUID

  @[Extern]
  record NTMS_CHANGERINFORMATIONW,
    number : UInt32,
    changer_type : LibC::GUID,
    szSerialNumber : UInt16[32],
    szRevision : UInt16[32],
    szDeviceName : UInt16[64],
    scsi_port : UInt16,
    scsi_bus : UInt16,
    scsi_target : UInt16,
    scsi_lun : UInt16,
    library : LibC::GUID

  @[Extern]
  record NTMS_STORAGESLOTINFORMATION,
    number : UInt32,
    state : UInt32,
    library : LibC::GUID

  @[Extern]
  record NTMS_IEDOORINFORMATION,
    number : UInt32,
    state : Win32cr::Storage::FileSystem::NtmsDoorState,
    max_open_secs : UInt16,
    library : LibC::GUID

  @[Extern]
  record NTMS_IEPORTINFORMATION,
    number : UInt32,
    content : Win32cr::Storage::FileSystem::NtmsPortContent,
    position : Win32cr::Storage::FileSystem::NtmsPortPosition,
    max_extend_secs : UInt16,
    library : LibC::GUID

  @[Extern]
  record NTMS_PMIDINFORMATIONA,
    current_library : LibC::GUID,
    media_pool : LibC::GUID,
    location : LibC::GUID,
    location_type : UInt32,
    media_type : LibC::GUID,
    home_slot : LibC::GUID,
    szBarCode : Win32cr::Foundation::CHAR[64],
    bar_code_state : Win32cr::Storage::FileSystem::NtmsBarCodeState,
    szSequenceNumber : Win32cr::Foundation::CHAR[32],
    media_state : Win32cr::Storage::FileSystem::NtmsMediaState,
    dwNumberOfPartitions : UInt32,
    dwMediaTypeCode : UInt32,
    dwDensityCode : UInt32,
    mounted_partition : LibC::GUID

  @[Extern]
  record NTMS_PMIDINFORMATIONW,
    current_library : LibC::GUID,
    media_pool : LibC::GUID,
    location : LibC::GUID,
    location_type : UInt32,
    media_type : LibC::GUID,
    home_slot : LibC::GUID,
    szBarCode : UInt16[64],
    bar_code_state : Win32cr::Storage::FileSystem::NtmsBarCodeState,
    szSequenceNumber : UInt16[32],
    media_state : Win32cr::Storage::FileSystem::NtmsMediaState,
    dwNumberOfPartitions : UInt32,
    dwMediaTypeCode : UInt32,
    dwDensityCode : UInt32,
    mounted_partition : LibC::GUID

  @[Extern]
  record NTMS_LMIDINFORMATION,
    media_pool : LibC::GUID,
    dwNumberOfPartitions : UInt32

  @[Extern]
  record NTMS_PARTITIONINFORMATIONA,
    physical_media : LibC::GUID,
    logical_media : LibC::GUID,
    state : Win32cr::Storage::FileSystem::NtmsPartitionState,
    side : UInt16,
    dwOmidLabelIdLength : UInt32,
    omid_label_id : UInt8[255],
    szOmidLabelType : Win32cr::Foundation::CHAR[64],
    szOmidLabelInfo : Win32cr::Foundation::CHAR[256],
    dwMountCount : UInt32,
    dwAllocateCount : UInt32,
    capacity : Win32cr::Foundation::LARGE_INTEGER

  @[Extern]
  record NTMS_PARTITIONINFORMATIONW,
    physical_media : LibC::GUID,
    logical_media : LibC::GUID,
    state : Win32cr::Storage::FileSystem::NtmsPartitionState,
    side : UInt16,
    dwOmidLabelIdLength : UInt32,
    omid_label_id : UInt8[255],
    szOmidLabelType : UInt16[64],
    szOmidLabelInfo : UInt16[256],
    dwMountCount : UInt32,
    dwAllocateCount : UInt32,
    capacity : Win32cr::Foundation::LARGE_INTEGER

  @[Extern]
  record NTMS_MEDIAPOOLINFORMATION,
    pool_type : UInt32,
    media_type : LibC::GUID,
    parent : LibC::GUID,
    allocation_policy : UInt32,
    deallocation_policy : UInt32,
    dwMaxAllocates : UInt32,
    dwNumberOfPhysicalMedia : UInt32,
    dwNumberOfLogicalMedia : UInt32,
    dwNumberOfMediaPools : UInt32

  @[Extern]
  record NTMS_MEDIATYPEINFORMATION,
    media_type : UInt32,
    number_of_sides : UInt32,
    read_write_characteristics : Win32cr::Storage::FileSystem::NtmsReadWriteCharacteristics,
    device_type : Win32cr::Storage::FileSystem::FILE_DEVICE_TYPE

  @[Extern]
  record NTMS_DRIVETYPEINFORMATIONA,
    szVendor : Win32cr::Foundation::CHAR[128],
    szProduct : Win32cr::Foundation::CHAR[128],
    number_of_heads : UInt32,
    device_type : Win32cr::Storage::FileSystem::FILE_DEVICE_TYPE

  @[Extern]
  record NTMS_DRIVETYPEINFORMATIONW,
    szVendor : UInt16[128],
    szProduct : UInt16[128],
    number_of_heads : UInt32,
    device_type : Win32cr::Storage::FileSystem::FILE_DEVICE_TYPE

  @[Extern]
  record NTMS_CHANGERTYPEINFORMATIONA,
    szVendor : Win32cr::Foundation::CHAR[128],
    szProduct : Win32cr::Foundation::CHAR[128],
    device_type : UInt32

  @[Extern]
  record NTMS_CHANGERTYPEINFORMATIONW,
    szVendor : UInt16[128],
    szProduct : UInt16[128],
    device_type : UInt32

  @[Extern]
  record NTMS_LIBREQUESTINFORMATIONA,
    operation_code : Win32cr::Storage::FileSystem::NtmsLmOperation,
    operation_option : UInt32,
    state : Win32cr::Storage::FileSystem::NtmsLmState,
    partition_id : LibC::GUID,
    drive_id : LibC::GUID,
    phys_media_id : LibC::GUID,
    library : LibC::GUID,
    slot_id : LibC::GUID,
    time_queued : Win32cr::Foundation::SYSTEMTIME,
    time_completed : Win32cr::Foundation::SYSTEMTIME,
    szApplication : Win32cr::Foundation::CHAR[64],
    szUser : Win32cr::Foundation::CHAR[64],
    szComputer : Win32cr::Foundation::CHAR[64],
    dwErrorCode : UInt32,
    work_item_id : LibC::GUID,
    dwPriority : UInt32

  @[Extern]
  record NTMS_LIBREQUESTINFORMATIONW,
    operation_code : Win32cr::Storage::FileSystem::NtmsLmOperation,
    operation_option : UInt32,
    state : Win32cr::Storage::FileSystem::NtmsLmState,
    partition_id : LibC::GUID,
    drive_id : LibC::GUID,
    phys_media_id : LibC::GUID,
    library : LibC::GUID,
    slot_id : LibC::GUID,
    time_queued : Win32cr::Foundation::SYSTEMTIME,
    time_completed : Win32cr::Foundation::SYSTEMTIME,
    szApplication : UInt16[64],
    szUser : UInt16[64],
    szComputer : UInt16[64],
    dwErrorCode : UInt32,
    work_item_id : LibC::GUID,
    dwPriority : UInt32

  @[Extern]
  record NTMS_OPREQUESTINFORMATIONA,
    request : Win32cr::Storage::FileSystem::NtmsOpreqCommand,
    submitted : Win32cr::Foundation::SYSTEMTIME,
    state : Win32cr::Storage::FileSystem::NtmsOpreqState,
    szMessage : Win32cr::Foundation::CHAR[256],
    arg1_type : Win32cr::Storage::FileSystem::NtmsObjectsTypes,
    arg1 : LibC::GUID,
    arg2_type : Win32cr::Storage::FileSystem::NtmsObjectsTypes,
    arg2 : LibC::GUID,
    szApplication : Win32cr::Foundation::CHAR[64],
    szUser : Win32cr::Foundation::CHAR[64],
    szComputer : Win32cr::Foundation::CHAR[64]

  @[Extern]
  record NTMS_OPREQUESTINFORMATIONW,
    request : Win32cr::Storage::FileSystem::NtmsOpreqCommand,
    submitted : Win32cr::Foundation::SYSTEMTIME,
    state : Win32cr::Storage::FileSystem::NtmsOpreqState,
    szMessage : UInt16[256],
    arg1_type : Win32cr::Storage::FileSystem::NtmsObjectsTypes,
    arg1 : LibC::GUID,
    arg2_type : Win32cr::Storage::FileSystem::NtmsObjectsTypes,
    arg2 : LibC::GUID,
    szApplication : UInt16[64],
    szUser : UInt16[64],
    szComputer : UInt16[64]

  @[Extern]
  record NTMS_COMPUTERINFORMATION,
    dwLibRequestPurgeTime : UInt32,
    dwOpRequestPurgeTime : UInt32,
    dwLibRequestFlags : UInt32,
    dwOpRequestFlags : UInt32,
    dwMediaPoolPolicy : UInt32

  @[Extern]
  record NTMS_OBJECTINFORMATIONA,
    dwSize : UInt32,
    dwType : Win32cr::Storage::FileSystem::NtmsObjectsTypes,
    created : Win32cr::Foundation::SYSTEMTIME,
    modified : Win32cr::Foundation::SYSTEMTIME,
    object_guid : LibC::GUID,
    enabled : Win32cr::Foundation::BOOL,
    dwOperationalState : Win32cr::Storage::FileSystem::NtmsOperationalState,
    szName : Win32cr::Foundation::CHAR[64],
    szDescription : Win32cr::Foundation::CHAR[127],
    info : Info_e__Union do

    # Nested Type Info_e__Union
    @[Extern(union: true)]
    record Info_e__Union,
      drive : Win32cr::Storage::FileSystem::NTMS_DRIVEINFORMATIONA,
      drive_type : Win32cr::Storage::FileSystem::NTMS_DRIVETYPEINFORMATIONA,
      library : Win32cr::Storage::FileSystem::NTMS_LIBRARYINFORMATION,
      changer : Win32cr::Storage::FileSystem::NTMS_CHANGERINFORMATIONA,
      changer_type : Win32cr::Storage::FileSystem::NTMS_CHANGERTYPEINFORMATIONA,
      storage_slot : Win32cr::Storage::FileSystem::NTMS_STORAGESLOTINFORMATION,
      ie_door : Win32cr::Storage::FileSystem::NTMS_IEDOORINFORMATION,
      ie_port : Win32cr::Storage::FileSystem::NTMS_IEPORTINFORMATION,
      physical_media : Win32cr::Storage::FileSystem::NTMS_PMIDINFORMATIONA,
      logical_media : Win32cr::Storage::FileSystem::NTMS_LMIDINFORMATION,
      partition : Win32cr::Storage::FileSystem::NTMS_PARTITIONINFORMATIONA,
      media_pool : Win32cr::Storage::FileSystem::NTMS_MEDIAPOOLINFORMATION,
      media_type : Win32cr::Storage::FileSystem::NTMS_MEDIATYPEINFORMATION,
      lib_request : Win32cr::Storage::FileSystem::NTMS_LIBREQUESTINFORMATIONA,
      op_request : Win32cr::Storage::FileSystem::NTMS_OPREQUESTINFORMATIONA,
      computer : Win32cr::Storage::FileSystem::NTMS_COMPUTERINFORMATION

  end

  @[Extern]
  record NTMS_OBJECTINFORMATIONW,
    dwSize : UInt32,
    dwType : Win32cr::Storage::FileSystem::NtmsObjectsTypes,
    created : Win32cr::Foundation::SYSTEMTIME,
    modified : Win32cr::Foundation::SYSTEMTIME,
    object_guid : LibC::GUID,
    enabled : Win32cr::Foundation::BOOL,
    dwOperationalState : Win32cr::Storage::FileSystem::NtmsOperationalState,
    szName : UInt16[64],
    szDescription : UInt16[127],
    info : Info_e__Union do

    # Nested Type Info_e__Union
    @[Extern(union: true)]
    record Info_e__Union,
      drive : Win32cr::Storage::FileSystem::NTMS_DRIVEINFORMATIONW,
      drive_type : Win32cr::Storage::FileSystem::NTMS_DRIVETYPEINFORMATIONW,
      library : Win32cr::Storage::FileSystem::NTMS_LIBRARYINFORMATION,
      changer : Win32cr::Storage::FileSystem::NTMS_CHANGERINFORMATIONW,
      changer_type : Win32cr::Storage::FileSystem::NTMS_CHANGERTYPEINFORMATIONW,
      storage_slot : Win32cr::Storage::FileSystem::NTMS_STORAGESLOTINFORMATION,
      ie_door : Win32cr::Storage::FileSystem::NTMS_IEDOORINFORMATION,
      ie_port : Win32cr::Storage::FileSystem::NTMS_IEPORTINFORMATION,
      physical_media : Win32cr::Storage::FileSystem::NTMS_PMIDINFORMATIONW,
      logical_media : Win32cr::Storage::FileSystem::NTMS_LMIDINFORMATION,
      partition : Win32cr::Storage::FileSystem::NTMS_PARTITIONINFORMATIONW,
      media_pool : Win32cr::Storage::FileSystem::NTMS_MEDIAPOOLINFORMATION,
      media_type : Win32cr::Storage::FileSystem::NTMS_MEDIATYPEINFORMATION,
      lib_request : Win32cr::Storage::FileSystem::NTMS_LIBREQUESTINFORMATIONW,
      op_request : Win32cr::Storage::FileSystem::NTMS_OPREQUESTINFORMATIONW,
      computer : Win32cr::Storage::FileSystem::NTMS_COMPUTERINFORMATION

  end

  @[Extern]
  record NTMS_I1_LIBRARYINFORMATION,
    library_type : UInt32,
    cleaner_slot : LibC::GUID,
    cleaner_slot_default : LibC::GUID,
    library_supports_drive_cleaning : Win32cr::Foundation::BOOL,
    bar_code_reader_installed : Win32cr::Foundation::BOOL,
    inventory_method : UInt32,
    dwCleanerUsesRemaining : UInt32,
    first_drive_number : UInt32,
    dwNumberOfDrives : UInt32,
    first_slot_number : UInt32,
    dwNumberOfSlots : UInt32,
    first_door_number : UInt32,
    dwNumberOfDoors : UInt32,
    first_port_number : UInt32,
    dwNumberOfPorts : UInt32,
    first_changer_number : UInt32,
    dwNumberOfChangers : UInt32,
    dwNumberOfMedia : UInt32,
    dwNumberOfMediaTypes : UInt32,
    dwNumberOfLibRequests : UInt32,
    reserved : LibC::GUID

  @[Extern]
  record NTMS_I1_LIBREQUESTINFORMATIONA,
    operation_code : UInt32,
    operation_option : UInt32,
    state : UInt32,
    partition_id : LibC::GUID,
    drive_id : LibC::GUID,
    phys_media_id : LibC::GUID,
    library : LibC::GUID,
    slot_id : LibC::GUID,
    time_queued : Win32cr::Foundation::SYSTEMTIME,
    time_completed : Win32cr::Foundation::SYSTEMTIME,
    szApplication : Win32cr::Foundation::CHAR[64],
    szUser : Win32cr::Foundation::CHAR[64],
    szComputer : Win32cr::Foundation::CHAR[64]

  @[Extern]
  record NTMS_I1_LIBREQUESTINFORMATIONW,
    operation_code : UInt32,
    operation_option : UInt32,
    state : UInt32,
    partition_id : LibC::GUID,
    drive_id : LibC::GUID,
    phys_media_id : LibC::GUID,
    library : LibC::GUID,
    slot_id : LibC::GUID,
    time_queued : Win32cr::Foundation::SYSTEMTIME,
    time_completed : Win32cr::Foundation::SYSTEMTIME,
    szApplication : UInt16[64],
    szUser : UInt16[64],
    szComputer : UInt16[64]

  @[Extern]
  record NTMS_I1_PMIDINFORMATIONA,
    current_library : LibC::GUID,
    media_pool : LibC::GUID,
    location : LibC::GUID,
    location_type : UInt32,
    media_type : LibC::GUID,
    home_slot : LibC::GUID,
    szBarCode : Win32cr::Foundation::CHAR[64],
    bar_code_state : UInt32,
    szSequenceNumber : Win32cr::Foundation::CHAR[32],
    media_state : UInt32,
    dwNumberOfPartitions : UInt32

  @[Extern]
  record NTMS_I1_PMIDINFORMATIONW,
    current_library : LibC::GUID,
    media_pool : LibC::GUID,
    location : LibC::GUID,
    location_type : UInt32,
    media_type : LibC::GUID,
    home_slot : LibC::GUID,
    szBarCode : UInt16[64],
    bar_code_state : UInt32,
    szSequenceNumber : UInt16[32],
    media_state : UInt32,
    dwNumberOfPartitions : UInt32

  @[Extern]
  record NTMS_I1_PARTITIONINFORMATIONA,
    physical_media : LibC::GUID,
    logical_media : LibC::GUID,
    state : UInt32,
    side : UInt16,
    dwOmidLabelIdLength : UInt32,
    omid_label_id : UInt8[255],
    szOmidLabelType : Win32cr::Foundation::CHAR[64],
    szOmidLabelInfo : Win32cr::Foundation::CHAR[256],
    dwMountCount : UInt32,
    dwAllocateCount : UInt32

  @[Extern]
  record NTMS_I1_PARTITIONINFORMATIONW,
    physical_media : LibC::GUID,
    logical_media : LibC::GUID,
    state : UInt32,
    side : UInt16,
    dwOmidLabelIdLength : UInt32,
    omid_label_id : UInt8[255],
    szOmidLabelType : UInt16[64],
    szOmidLabelInfo : UInt16[256],
    dwMountCount : UInt32,
    dwAllocateCount : UInt32

  @[Extern]
  record NTMS_I1_OPREQUESTINFORMATIONA,
    request : UInt32,
    submitted : Win32cr::Foundation::SYSTEMTIME,
    state : UInt32,
    szMessage : Win32cr::Foundation::CHAR[127],
    arg1_type : UInt32,
    arg1 : LibC::GUID,
    arg2_type : UInt32,
    arg2 : LibC::GUID,
    szApplication : Win32cr::Foundation::CHAR[64],
    szUser : Win32cr::Foundation::CHAR[64],
    szComputer : Win32cr::Foundation::CHAR[64]

  @[Extern]
  record NTMS_I1_OPREQUESTINFORMATIONW,
    request : UInt32,
    submitted : Win32cr::Foundation::SYSTEMTIME,
    state : UInt32,
    szMessage : UInt16[127],
    arg1_type : UInt32,
    arg1 : LibC::GUID,
    arg2_type : UInt32,
    arg2 : LibC::GUID,
    szApplication : UInt16[64],
    szUser : UInt16[64],
    szComputer : UInt16[64]

  @[Extern]
  record NTMS_I1_OBJECTINFORMATIONA,
    dwSize : UInt32,
    dwType : UInt32,
    created : Win32cr::Foundation::SYSTEMTIME,
    modified : Win32cr::Foundation::SYSTEMTIME,
    object_guid : LibC::GUID,
    enabled : Win32cr::Foundation::BOOL,
    dwOperationalState : UInt32,
    szName : Win32cr::Foundation::CHAR[64],
    szDescription : Win32cr::Foundation::CHAR[127],
    info : Info_e__Union do

    # Nested Type Info_e__Union
    @[Extern(union: true)]
    record Info_e__Union,
      drive : Win32cr::Storage::FileSystem::NTMS_DRIVEINFORMATIONA,
      drive_type : Win32cr::Storage::FileSystem::NTMS_DRIVETYPEINFORMATIONA,
      library : Win32cr::Storage::FileSystem::NTMS_I1_LIBRARYINFORMATION,
      changer : Win32cr::Storage::FileSystem::NTMS_CHANGERINFORMATIONA,
      changer_type : Win32cr::Storage::FileSystem::NTMS_CHANGERTYPEINFORMATIONA,
      storage_slot : Win32cr::Storage::FileSystem::NTMS_STORAGESLOTINFORMATION,
      ie_door : Win32cr::Storage::FileSystem::NTMS_IEDOORINFORMATION,
      ie_port : Win32cr::Storage::FileSystem::NTMS_IEPORTINFORMATION,
      physical_media : Win32cr::Storage::FileSystem::NTMS_I1_PMIDINFORMATIONA,
      logical_media : Win32cr::Storage::FileSystem::NTMS_LMIDINFORMATION,
      partition : Win32cr::Storage::FileSystem::NTMS_I1_PARTITIONINFORMATIONA,
      media_pool : Win32cr::Storage::FileSystem::NTMS_MEDIAPOOLINFORMATION,
      media_type : Win32cr::Storage::FileSystem::NTMS_MEDIATYPEINFORMATION,
      lib_request : Win32cr::Storage::FileSystem::NTMS_I1_LIBREQUESTINFORMATIONA,
      op_request : Win32cr::Storage::FileSystem::NTMS_I1_OPREQUESTINFORMATIONA

  end

  @[Extern]
  record NTMS_I1_OBJECTINFORMATIONW,
    dwSize : UInt32,
    dwType : UInt32,
    created : Win32cr::Foundation::SYSTEMTIME,
    modified : Win32cr::Foundation::SYSTEMTIME,
    object_guid : LibC::GUID,
    enabled : Win32cr::Foundation::BOOL,
    dwOperationalState : UInt32,
    szName : UInt16[64],
    szDescription : UInt16[127],
    info : Info_e__Union do

    # Nested Type Info_e__Union
    @[Extern(union: true)]
    record Info_e__Union,
      drive : Win32cr::Storage::FileSystem::NTMS_DRIVEINFORMATIONW,
      drive_type : Win32cr::Storage::FileSystem::NTMS_DRIVETYPEINFORMATIONW,
      library : Win32cr::Storage::FileSystem::NTMS_I1_LIBRARYINFORMATION,
      changer : Win32cr::Storage::FileSystem::NTMS_CHANGERINFORMATIONW,
      changer_type : Win32cr::Storage::FileSystem::NTMS_CHANGERTYPEINFORMATIONW,
      storage_slot : Win32cr::Storage::FileSystem::NTMS_STORAGESLOTINFORMATION,
      ie_door : Win32cr::Storage::FileSystem::NTMS_IEDOORINFORMATION,
      ie_port : Win32cr::Storage::FileSystem::NTMS_IEPORTINFORMATION,
      physical_media : Win32cr::Storage::FileSystem::NTMS_I1_PMIDINFORMATIONW,
      logical_media : Win32cr::Storage::FileSystem::NTMS_LMIDINFORMATION,
      partition : Win32cr::Storage::FileSystem::NTMS_I1_PARTITIONINFORMATIONW,
      media_pool : Win32cr::Storage::FileSystem::NTMS_MEDIAPOOLINFORMATION,
      media_type : Win32cr::Storage::FileSystem::NTMS_MEDIATYPEINFORMATION,
      lib_request : Win32cr::Storage::FileSystem::NTMS_I1_LIBREQUESTINFORMATIONW,
      op_request : Win32cr::Storage::FileSystem::NTMS_I1_OPREQUESTINFORMATIONW

  end

  @[Extern]
  record NTMS_FILESYSTEM_INFO,
    file_system_type : UInt16[64],
    volume_name : UInt16[256],
    serial_number : UInt32

  @[Extern]
  record NTMS_NOTIFICATIONINFORMATION,
    dwOperation : Win32cr::Storage::FileSystem::NtmsNotificationOperations,
    object_id : LibC::GUID

  @[Extern]
  record MediaLabelInfo,
    label_type : UInt16[64],
    label_id_size : UInt32,
    label_id : UInt8[256],
    label_app_descr : UInt16[256]

  @[Extern]
  record CLS_LSN,
    internal : UInt64

  @[Extern]
  record CLFS_NODE_ID,
    cType : UInt32,
    cbNode : UInt32

  @[Extern]
  record CLS_WRITE_ENTRY,
    buffer : Void*,
    byte_length : UInt32

  @[Extern]
  record CLS_INFORMATION,
    total_available : Int64,
    current_available : Int64,
    total_reservation : Int64,
    base_file_size : UInt64,
    container_size : UInt64,
    total_containers : UInt32,
    free_containers : UInt32,
    total_clients : UInt32,
    attributes : UInt32,
    flush_threshold : UInt32,
    sector_size : UInt32,
    min_archive_tail_lsn : Win32cr::Storage::FileSystem::CLS_LSN,
    base_lsn : Win32cr::Storage::FileSystem::CLS_LSN,
    last_flushed_lsn : Win32cr::Storage::FileSystem::CLS_LSN,
    last_lsn : Win32cr::Storage::FileSystem::CLS_LSN,
    restart_lsn : Win32cr::Storage::FileSystem::CLS_LSN,
    identity : LibC::GUID

  @[Extern]
  record CLFS_LOG_NAME_INFORMATION,
    name_length_in_bytes : UInt16,
    name : UInt16*

  @[Extern]
  record CLFS_STREAM_ID_INFORMATION,
    stream_identifier : UInt8

  @[Extern]
  record CLFS_PHYSICAL_LSN_INFORMATION,
    stream_identifier : UInt8,
    virtual_lsn : Win32cr::Storage::FileSystem::CLS_LSN,
    physical_lsn : Win32cr::Storage::FileSystem::CLS_LSN

  @[Extern]
  record CLS_CONTAINER_INFORMATION,
    file_attributes : UInt32,
    creation_time : UInt64,
    last_access_time : UInt64,
    last_write_time : UInt64,
    container_size : Int64,
    file_name_actual_length : UInt32,
    file_name_length : UInt32,
    file_name : UInt16[256],
    state : UInt32,
    physical_container_id : UInt32,
    logical_container_id : UInt32

  @[Extern]
  record CLS_IO_STATISTICS_HEADER,
    ubMajorVersion : UInt8,
    ubMinorVersion : UInt8,
    eStatsClass : Win32cr::Storage::FileSystem::CLFS_IOSTATS_CLASS,
    cbLength : UInt16,
    coffData : UInt32

  @[Extern]
  record CLS_IO_STATISTICS,
    hdrIoStats : Win32cr::Storage::FileSystem::CLS_IO_STATISTICS_HEADER,
    cFlush : UInt64,
    cbFlush : UInt64,
    cMetaFlush : UInt64,
    cbMetaFlush : UInt64

  @[Extern]
  record CLS_SCAN_CONTEXT,
    cidNode : Win32cr::Storage::FileSystem::CLFS_NODE_ID,
    hLog : Win32cr::Foundation::HANDLE,
    cIndex : UInt32,
    cContainers : UInt32,
    cContainersReturned : UInt32,
    eScanMode : UInt8,
    pinfoContainer : Win32cr::Storage::FileSystem::CLS_CONTAINER_INFORMATION*

  @[Extern]
  record CLS_ARCHIVE_DESCRIPTOR,
    coffLow : UInt64,
    coffHigh : UInt64,
    infoContainer : Win32cr::Storage::FileSystem::CLS_CONTAINER_INFORMATION

  @[Extern]
  record CLFS_MGMT_POLICY,
    version : UInt32,
    length_in_bytes : UInt32,
    policy_flags : UInt32,
    policy_type : Win32cr::Storage::FileSystem::CLFS_MGMT_POLICY_TYPE,
    policy_parameters : PolicyParameters_e__Union do

    # Nested Type PolicyParameters_e__Union
    @[Extern(union: true)]
    record PolicyParameters_e__Union,
      maximum_size : MaximumSize_e__Struct,
      minimum_size : MinimumSize_e__Struct,
      new_container_size : NewContainerSize_e__Struct,
      growth_rate : GrowthRate_e__Struct,
      log_tail : LogTail_e__Struct,
      auto_shrink : AutoShrink_e__Struct,
      auto_grow : AutoGrow_e__Struct,
      new_container_prefix : NewContainerPrefix_e__Struct,
      new_container_suffix : NewContainerSuffix_e__Struct,
      new_container_extension : NewContainerExtension_e__Struct do

      # Nested Type NewContainerExtension_e__Struct
      @[Extern]
      record NewContainerExtension_e__Struct,
        extension_length_in_bytes : UInt16,
        extension_string : UInt16*


      # Nested Type NewContainerPrefix_e__Struct
      @[Extern]
      record NewContainerPrefix_e__Struct,
        prefix_length_in_bytes : UInt16,
        prefix_string : UInt16*


      # Nested Type AutoShrink_e__Struct
      @[Extern]
      record AutoShrink_e__Struct,
        percentage : UInt32


      # Nested Type GrowthRate_e__Struct
      @[Extern]
      record GrowthRate_e__Struct,
        absolute_growth_in_containers : UInt32,
        relative_growth_percentage : UInt32


      # Nested Type MinimumSize_e__Struct
      @[Extern]
      record MinimumSize_e__Struct,
        containers : UInt32


      # Nested Type NewContainerSuffix_e__Struct
      @[Extern]
      record NewContainerSuffix_e__Struct,
        next_container_suffix : UInt64


      # Nested Type LogTail_e__Struct
      @[Extern]
      record LogTail_e__Struct,
        minimum_available_percentage : UInt32,
        minimum_available_containers : UInt32


      # Nested Type MaximumSize_e__Struct
      @[Extern]
      record MaximumSize_e__Struct,
        containers : UInt32


      # Nested Type AutoGrow_e__Struct
      @[Extern]
      record AutoGrow_e__Struct,
        enabled : UInt32


      # Nested Type NewContainerSize_e__Struct
      @[Extern]
      record NewContainerSize_e__Struct,
        size_in_bytes : UInt32

    end

  end

  @[Extern]
  record CLFS_MGMT_NOTIFICATION,
    notification : Win32cr::Storage::FileSystem::CLFS_MGMT_NOTIFICATION_TYPE,
    lsn : Win32cr::Storage::FileSystem::CLS_LSN,
    log_is_pinned : UInt16

  @[Extern]
  record LOG_MANAGEMENT_CALLBACKS,
    callback_context : Void*,
    advance_tail_callback : Win32cr::Storage::FileSystem::PLOG_TAIL_ADVANCE_CALLBACK,
    log_full_handler_callback : Win32cr::Storage::FileSystem::PLOG_FULL_HANDLER_CALLBACK,
    log_unpinned_callback : Win32cr::Storage::FileSystem::PLOG_UNPINNED_CALLBACK

  @[Extern]
  record DISKQUOTA_USER_INFORMATION,
    quota_used : Int64,
    quota_threshold : Int64,
    quota_limit : Int64

  @[Extern]
  record EFS_CERTIFICATE_BLOB,
    dwCertEncodingType : UInt32,
    cbData : UInt32,
    pbData : UInt8*

  @[Extern]
  record EFS_HASH_BLOB,
    cbData : UInt32,
    pbData : UInt8*

  @[Extern]
  record EFS_RPC_BLOB,
    cbData : UInt32,
    pbData : UInt8*

  @[Extern]
  record EFS_PIN_BLOB,
    cbPadding : UInt32,
    cbData : UInt32,
    pbData : UInt8*

  @[Extern]
  record EFS_KEY_INFO,
    dwVersion : UInt32,
    entropy : UInt32,
    algorithm : UInt32,
    key_length : UInt32

  @[Extern]
  record EFS_COMPATIBILITY_INFO,
    efs_version : UInt32

  @[Extern]
  record EFS_VERSION_INFO,
    efs_version : UInt32,
    sub_version : UInt32

  @[Extern]
  record EFS_DECRYPTION_STATUS_INFO,
    dwDecryptionError : UInt32,
    dwHashOffset : UInt32,
    cbHash : UInt32

  @[Extern]
  record EFS_ENCRYPTION_STATUS_INFO,
    bHasCurrentKey : Win32cr::Foundation::BOOL,
    dwEncryptionError : UInt32

  @[Extern]
  record ENCRYPTION_CERTIFICATE,
    cbTotalLength : UInt32,
    pUserSid : Win32cr::Security::SID*,
    pCertBlob : Win32cr::Storage::FileSystem::EFS_CERTIFICATE_BLOB*

  @[Extern]
  record ENCRYPTION_CERTIFICATE_HASH,
    cbTotalLength : UInt32,
    pUserSid : Win32cr::Security::SID*,
    pHash : Win32cr::Storage::FileSystem::EFS_HASH_BLOB*,
    lpDisplayInformation : Win32cr::Foundation::PWSTR

  @[Extern]
  record ENCRYPTION_CERTIFICATE_HASH_LIST,
    nCert_Hash : UInt32,
    pUsers : Win32cr::Storage::FileSystem::ENCRYPTION_CERTIFICATE_HASH**

  @[Extern]
  record ENCRYPTION_CERTIFICATE_LIST,
    nUsers : UInt32,
    pUsers : Win32cr::Storage::FileSystem::ENCRYPTION_CERTIFICATE**

  @[Extern]
  record ENCRYPTED_FILE_METADATA_SIGNATURE,
    dwEfsAccessType : UInt32,
    pCertificatesAdded : Win32cr::Storage::FileSystem::ENCRYPTION_CERTIFICATE_HASH_LIST*,
    pEncryptionCertificate : Win32cr::Storage::FileSystem::ENCRYPTION_CERTIFICATE*,
    pEfsStreamSignature : Win32cr::Storage::FileSystem::EFS_RPC_BLOB*

  @[Extern]
  record ENCRYPTION_PROTECTOR,
    cbTotalLength : UInt32,
    pUserSid : Win32cr::Security::SID*,
    lpProtectorDescriptor : Win32cr::Foundation::PWSTR

  @[Extern]
  record ENCRYPTION_PROTECTOR_LIST,
    nProtectors : UInt32,
    pProtectors : Win32cr::Storage::FileSystem::ENCRYPTION_PROTECTOR**

  @[Extern]
  record WIM_ENTRY_INFO,
    wim_entry_info_size : UInt32,
    wim_type : UInt32,
    data_source_id : Win32cr::Foundation::LARGE_INTEGER,
    wim_guid : LibC::GUID,
    wim_path : Win32cr::Foundation::PWSTR,
    wim_index : UInt32,
    flags : UInt32

  @[Extern]
  record WIM_EXTERNAL_FILE_INFO,
    data_source_id : Win32cr::Foundation::LARGE_INTEGER,
    resource_hash : UInt8[20],
    flags : UInt32

  @[Extern]
  record WOF_FILE_COMPRESSION_INFO_V0,
    algorithm : UInt32

  @[Extern]
  record WOF_FILE_COMPRESSION_INFO_V1,
    algorithm : UInt32,
    flags : UInt32

  @[Extern]
  record TXF_ID,
    anonymous : Anonymous_e__Struct do

    # Nested Type Anonymous_e__Struct
    @[Extern]
    record Anonymous_e__Struct,
      low_part : Int64,
      high_part : Int64

  end

  @[Extern]
  record TXF_LOG_RECORD_BASE,
    version : UInt16,
    record_type : Win32cr::Storage::FileSystem::TXF_LOG_RECORD_TYPE,
    record_length : UInt32

  @[Extern]
  record TXF_LOG_RECORD_WRITE,
    version : UInt16,
    record_type : UInt16,
    record_length : UInt32,
    flags : UInt32,
    txf_file_id : Win32cr::Storage::FileSystem::TXF_ID,
    ktm_guid : LibC::GUID,
    byte_offset_in_file : Int64,
    num_bytes_written : UInt32,
    byte_offset_in_structure : UInt32,
    file_name_length : UInt32,
    file_name_byte_offset_in_structure : UInt32

  @[Extern]
  record TXF_LOG_RECORD_TRUNCATE,
    version : UInt16,
    record_type : UInt16,
    record_length : UInt32,
    flags : UInt32,
    txf_file_id : Win32cr::Storage::FileSystem::TXF_ID,
    ktm_guid : LibC::GUID,
    new_file_size : Int64,
    file_name_length : UInt32,
    file_name_byte_offset_in_structure : UInt32

  @[Extern]
  record TXF_LOG_RECORD_AFFECTED_FILE,
    version : UInt16,
    record_length : UInt32,
    flags : UInt32,
    txf_file_id : Win32cr::Storage::FileSystem::TXF_ID,
    ktm_guid : LibC::GUID,
    file_name_length : UInt32,
    file_name_byte_offset_in_structure : UInt32

  @[Extern]
  record VOLUME_FAILOVER_SET,
    number_of_disks : UInt32,
    disk_numbers : UInt32*

  @[Extern]
  record VOLUME_NUMBER,
    volume_number : UInt32,
    volume_manager_name : UInt16[8]

  @[Extern]
  record VOLUME_LOGICAL_OFFSET,
    logical_offset : Int64

  @[Extern]
  record VOLUME_PHYSICAL_OFFSET,
    disk_number : UInt32,
    offset : Int64

  @[Extern]
  record VOLUME_PHYSICAL_OFFSETS,
    number_of_physical_offsets : UInt32,
    physical_offset : Win32cr::Storage::FileSystem::VOLUME_PHYSICAL_OFFSET*

  @[Extern]
  record VOLUME_READ_PLEX_INPUT,
    byte_offset : Win32cr::Foundation::LARGE_INTEGER,
    length : UInt32,
    plex_number : UInt32

  @[Extern]
  record VOLUME_SET_GPT_ATTRIBUTES_INFORMATION,
    gpt_attributes : UInt64,
    revert_on_close : Win32cr::Foundation::BOOLEAN,
    apply_to_all_connected_volumes : Win32cr::Foundation::BOOLEAN,
    reserved1 : UInt16,
    reserved2 : UInt32

  @[Extern]
  record VOLUME_GET_BC_PROPERTIES_INPUT,
    version : UInt32,
    reserved1 : UInt32,
    lowest_byte_offset : UInt64,
    highest_byte_offset : UInt64,
    access_type : UInt32,
    access_mode : UInt32

  @[Extern]
  record VOLUME_GET_BC_PROPERTIES_OUTPUT,
    maximum_requests_per_period : UInt32,
    minimum_period : UInt32,
    maximum_request_size : UInt64,
    estimated_time_per_request : UInt32,
    num_out_standing_requests : UInt32,
    request_size : UInt64

  @[Extern]
  record VOLUME_ALLOCATE_BC_STREAM_INPUT,
    version : UInt32,
    requests_per_period : UInt32,
    period : UInt32,
    retry_failures : Win32cr::Foundation::BOOLEAN,
    discardable : Win32cr::Foundation::BOOLEAN,
    reserved1 : Win32cr::Foundation::BOOLEAN[2],
    lowest_byte_offset : UInt64,
    highest_byte_offset : UInt64,
    access_type : UInt32,
    access_mode : UInt32

  @[Extern]
  record VOLUME_ALLOCATE_BC_STREAM_OUTPUT,
    request_size : UInt64,
    num_out_standing_requests : UInt32

  @[Extern]
  record FILE_EXTENT,
    volume_offset : UInt64,
    extent_length : UInt64

  @[Extern]
  record VOLUME_CRITICAL_IO,
    access_type : UInt32,
    extents_count : UInt32,
    extents : Win32cr::Storage::FileSystem::FILE_EXTENT*

  @[Extern]
  record VOLUME_ALLOCATION_HINT_INPUT,
    cluster_size : UInt32,
    number_of_clusters : UInt32,
    starting_cluster_number : Int64

  @[Extern]
  record VOLUME_ALLOCATION_HINT_OUTPUT,
    bitmap : UInt32*

  @[Extern]
  record VOLUME_SHRINK_INFO,
    volume_size : UInt64

  @[Extern]
  record SHARE_INFO_0,
    shi0_netname : Win32cr::Foundation::PWSTR

  @[Extern]
  record SHARE_INFO_1,
    shi1_netname : Win32cr::Foundation::PWSTR,
    shi1_type : Win32cr::Storage::FileSystem::SHARE_TYPE,
    shi1_remark : Win32cr::Foundation::PWSTR

  @[Extern]
  record SHARE_INFO_2,
    shi2_netname : Win32cr::Foundation::PWSTR,
    shi2_type : Win32cr::Storage::FileSystem::SHARE_TYPE,
    shi2_remark : Win32cr::Foundation::PWSTR,
    shi2_permissions : Win32cr::Storage::FileSystem::SHARE_INFO_PERMISSIONS,
    shi2_max_uses : UInt32,
    shi2_current_uses : UInt32,
    shi2_path : Win32cr::Foundation::PWSTR,
    shi2_passwd : Win32cr::Foundation::PWSTR

  @[Extern]
  record SHARE_INFO_501,
    shi501_netname : Win32cr::Foundation::PWSTR,
    shi501_type : Win32cr::Storage::FileSystem::SHARE_TYPE,
    shi501_remark : Win32cr::Foundation::PWSTR,
    shi501_flags : UInt32

  @[Extern]
  record SHARE_INFO_502,
    shi502_netname : Win32cr::Foundation::PWSTR,
    shi502_type : Win32cr::Storage::FileSystem::SHARE_TYPE,
    shi502_remark : Win32cr::Foundation::PWSTR,
    shi502_permissions : Win32cr::Storage::FileSystem::SHARE_INFO_PERMISSIONS,
    shi502_max_uses : UInt32,
    shi502_current_uses : UInt32,
    shi502_path : Win32cr::Foundation::PWSTR,
    shi502_passwd : Win32cr::Foundation::PWSTR,
    shi502_reserved : UInt32,
    shi502_security_descriptor : Win32cr::Security::PSECURITY_DESCRIPTOR

  @[Extern]
  record SHARE_INFO_503,
    shi503_netname : Win32cr::Foundation::PWSTR,
    shi503_type : Win32cr::Storage::FileSystem::SHARE_TYPE,
    shi503_remark : Win32cr::Foundation::PWSTR,
    shi503_permissions : Win32cr::Storage::FileSystem::SHARE_INFO_PERMISSIONS,
    shi503_max_uses : UInt32,
    shi503_current_uses : UInt32,
    shi503_path : Win32cr::Foundation::PWSTR,
    shi503_passwd : Win32cr::Foundation::PWSTR,
    shi503_servername : Win32cr::Foundation::PWSTR,
    shi503_reserved : UInt32,
    shi503_security_descriptor : Win32cr::Security::PSECURITY_DESCRIPTOR

  @[Extern]
  record SHARE_INFO_1004,
    shi1004_remark : Win32cr::Foundation::PWSTR

  @[Extern]
  record SHARE_INFO_1005,
    shi1005_flags : UInt32

  @[Extern]
  record SHARE_INFO_1006,
    shi1006_max_uses : UInt32

  @[Extern]
  record SHARE_INFO_1501,
    shi1501_reserved : UInt32,
    shi1501_security_descriptor : Win32cr::Security::PSECURITY_DESCRIPTOR

  @[Extern]
  record SHARE_INFO_1503,
    shi1503_sharefilter : LibC::GUID

  @[Extern]
  record SERVER_ALIAS_INFO_0,
    srvai0_alias : Win32cr::Foundation::PWSTR,
    srvai0_target : Win32cr::Foundation::PWSTR,
    srvai0_default : Win32cr::Foundation::BOOLEAN,
    srvai0_reserved : UInt32

  @[Extern]
  record SESSION_INFO_0,
    sesi0_cname : Win32cr::Foundation::PWSTR

  @[Extern]
  record SESSION_INFO_1,
    sesi1_cname : Win32cr::Foundation::PWSTR,
    sesi1_username : Win32cr::Foundation::PWSTR,
    sesi1_num_opens : UInt32,
    sesi1_time : UInt32,
    sesi1_idle_time : UInt32,
    sesi1_user_flags : Win32cr::Storage::FileSystem::SESSION_INFO_USER_FLAGS

  @[Extern]
  record SESSION_INFO_2,
    sesi2_cname : Win32cr::Foundation::PWSTR,
    sesi2_username : Win32cr::Foundation::PWSTR,
    sesi2_num_opens : UInt32,
    sesi2_time : UInt32,
    sesi2_idle_time : UInt32,
    sesi2_user_flags : Win32cr::Storage::FileSystem::SESSION_INFO_USER_FLAGS,
    sesi2_cltype_name : Win32cr::Foundation::PWSTR

  @[Extern]
  record SESSION_INFO_10,
    sesi10_cname : Win32cr::Foundation::PWSTR,
    sesi10_username : Win32cr::Foundation::PWSTR,
    sesi10_time : UInt32,
    sesi10_idle_time : UInt32

  @[Extern]
  record SESSION_INFO_502,
    sesi502_cname : Win32cr::Foundation::PWSTR,
    sesi502_username : Win32cr::Foundation::PWSTR,
    sesi502_num_opens : UInt32,
    sesi502_time : UInt32,
    sesi502_idle_time : UInt32,
    sesi502_user_flags : Win32cr::Storage::FileSystem::SESSION_INFO_USER_FLAGS,
    sesi502_cltype_name : Win32cr::Foundation::PWSTR,
    sesi502_transport : Win32cr::Foundation::PWSTR

  @[Extern]
  record CONNECTION_INFO_0,
    coni0_id : UInt32

  @[Extern]
  record CONNECTION_INFO_1,
    coni1_id : UInt32,
    coni1_type : Win32cr::Storage::FileSystem::SHARE_TYPE,
    coni1_num_opens : UInt32,
    coni1_num_users : UInt32,
    coni1_time : UInt32,
    coni1_username : Win32cr::Foundation::PWSTR,
    coni1_netname : Win32cr::Foundation::PWSTR

  @[Extern]
  record FILE_INFO_2,
    fi2_id : UInt32

  @[Extern]
  record FILE_INFO_3,
    fi3_id : UInt32,
    fi3_permissions : Win32cr::Storage::FileSystem::FILE_INFO_FLAGS_PERMISSIONS,
    fi3_num_locks : UInt32,
    fi3_pathname : Win32cr::Foundation::PWSTR,
    fi3_username : Win32cr::Foundation::PWSTR

  @[Extern]
  record SERVER_CERTIFICATE_INFO_0,
    srvci0_name : Win32cr::Foundation::PWSTR,
    srvci0_subject : Win32cr::Foundation::PWSTR,
    srvci0_issuer : Win32cr::Foundation::PWSTR,
    srvci0_thumbprint : Win32cr::Foundation::PWSTR,
    srvci0_friendlyname : Win32cr::Foundation::PWSTR,
    srvci0_notbefore : Win32cr::Foundation::PWSTR,
    srvci0_notafter : Win32cr::Foundation::PWSTR,
    srvci0_storelocation : Win32cr::Foundation::PWSTR,
    srvci0_storename : Win32cr::Foundation::PWSTR,
    srvci0_renewalchain : Win32cr::Foundation::PWSTR,
    srvci0_type : UInt32,
    srvci0_flags : UInt32

  @[Extern]
  record STAT_WORKSTATION_0,
    statistics_start_time : Win32cr::Foundation::LARGE_INTEGER,
    bytes_received : Win32cr::Foundation::LARGE_INTEGER,
    smbs_received : Win32cr::Foundation::LARGE_INTEGER,
    paging_read_bytes_requested : Win32cr::Foundation::LARGE_INTEGER,
    non_paging_read_bytes_requested : Win32cr::Foundation::LARGE_INTEGER,
    cache_read_bytes_requested : Win32cr::Foundation::LARGE_INTEGER,
    network_read_bytes_requested : Win32cr::Foundation::LARGE_INTEGER,
    bytes_transmitted : Win32cr::Foundation::LARGE_INTEGER,
    smbs_transmitted : Win32cr::Foundation::LARGE_INTEGER,
    paging_write_bytes_requested : Win32cr::Foundation::LARGE_INTEGER,
    non_paging_write_bytes_requested : Win32cr::Foundation::LARGE_INTEGER,
    cache_write_bytes_requested : Win32cr::Foundation::LARGE_INTEGER,
    network_write_bytes_requested : Win32cr::Foundation::LARGE_INTEGER,
    initially_failed_operations : UInt32,
    failed_completion_operations : UInt32,
    read_operations : UInt32,
    random_read_operations : UInt32,
    read_smbs : UInt32,
    large_read_smbs : UInt32,
    small_read_smbs : UInt32,
    write_operations : UInt32,
    random_write_operations : UInt32,
    write_smbs : UInt32,
    large_write_smbs : UInt32,
    small_write_smbs : UInt32,
    raw_reads_denied : UInt32,
    raw_writes_denied : UInt32,
    network_errors : UInt32,
    sessions : UInt32,
    failed_sessions : UInt32,
    reconnects : UInt32,
    core_connects : UInt32,
    lanman20_connects : UInt32,
    lanman21_connects : UInt32,
    lanman_nt_connects : UInt32,
    server_disconnects : UInt32,
    hung_sessions : UInt32,
    use_count : UInt32,
    failed_use_count : UInt32,
    current_commands : UInt32

  @[Extern]
  record STAT_SERVER_0,
    sts0_start : UInt32,
    sts0_fopens : UInt32,
    sts0_devopens : UInt32,
    sts0_jobsqueued : UInt32,
    sts0_sopens : UInt32,
    sts0_stimedout : UInt32,
    sts0_serrorout : UInt32,
    sts0_pwerrors : UInt32,
    sts0_permerrors : UInt32,
    sts0_syserrors : UInt32,
    sts0_bytessent_low : UInt32,
    sts0_bytessent_high : UInt32,
    sts0_bytesrcvd_low : UInt32,
    sts0_bytesrcvd_high : UInt32,
    sts0_avresponse : UInt32,
    sts0_reqbufneed : UInt32,
    sts0_bigbufneed : UInt32

  @[Extern]
  record FH_OVERLAPPED,
    internal : LibC::UIntPtrT,
    internal_high : LibC::UIntPtrT,
    offset : UInt32,
    offset_high : UInt32,
    hEvent : Win32cr::Foundation::HANDLE,
    pfnCompletion : Win32cr::Storage::FileSystem::PFN_IO_COMPLETION,
    reserved1 : LibC::UIntPtrT,
    reserved2 : LibC::UIntPtrT,
    reserved3 : LibC::UIntPtrT,
    reserved4 : LibC::UIntPtrT

  @[Extern]
  record FIO_CONTEXT,
    m_dwTempHack : UInt32,
    m_dwSignature : UInt32,
    m_hFile : Win32cr::Foundation::HANDLE,
    m_dwLinesOffset : UInt32,
    m_dwHeaderLength : UInt32

  @[Extern]
  record NAME_CACHE_CONTEXT,
    m_dwSignature : UInt32

  @[Extern]
  record IORING_BUFFER_INFO,
    address : Void*,
    length : UInt32

  @[Extern]
  record IORING_REGISTERED_BUFFER,
    buffer_index : UInt32,
    offset : UInt32

  @[Extern]
  record HIORING__,
    unused : Int32

  @[Extern]
  record IORING_CREATE_FLAGS,
    required : Win32cr::Storage::FileSystem::IORING_CREATE_REQUIRED_FLAGS,
    advisory : Win32cr::Storage::FileSystem::IORING_CREATE_ADVISORY_FLAGS

  @[Extern]
  record IORING_INFO,
    io_ring_version : Win32cr::Storage::FileSystem::IORING_VERSION,
    flags : Win32cr::Storage::FileSystem::IORING_CREATE_FLAGS,
    submission_queue_size : UInt32,
    completion_queue_size : UInt32

  @[Extern]
  record IORING_CAPABILITIES,
    max_version : Win32cr::Storage::FileSystem::IORING_VERSION,
    max_submission_queue_size : UInt32,
    max_completion_queue_size : UInt32,
    feature_flags : Win32cr::Storage::FileSystem::IORING_FEATURE_FLAGS

  @[Extern]
  record IORING_HANDLE_REF,
    kind : Win32cr::Storage::FileSystem::IORING_REF_KIND,
    handle : HandleUnion do

    # Nested Type HandleUnion
    @[Extern(union: true)]
    record HandleUnion,
      handle : Win32cr::Foundation::HANDLE,
      index : UInt32

  end

  @[Extern]
  record IORING_BUFFER_REF,
    kind : Win32cr::Storage::FileSystem::IORING_REF_KIND,
    buffer : BufferUnion do

    # Nested Type BufferUnion
    @[Extern(union: true)]
    record BufferUnion,
      address : Void*,
      index_and_offset : Win32cr::Storage::FileSystem::IORING_REGISTERED_BUFFER

  end

  @[Extern]
  record IORING_CQE,
    user_data : LibC::UIntPtrT,
    result_code : Win32cr::Foundation::HRESULT,
    information : LibC::UIntPtrT

  @[Extern]
  record FILE_ID_128,
    identifier : UInt8[16]

  @[Extern]
  record FILE_NOTIFY_INFORMATION,
    next_entry_offset : UInt32,
    action : Win32cr::Storage::FileSystem::FILE_ACTION,
    file_name_length : UInt32,
    file_name : UInt16*

  @[Extern]
  record FILE_NOTIFY_EXTENDED_INFORMATION,
    next_entry_offset : UInt32,
    action : Win32cr::Storage::FileSystem::FILE_ACTION,
    creation_time : Win32cr::Foundation::LARGE_INTEGER,
    last_modification_time : Win32cr::Foundation::LARGE_INTEGER,
    last_change_time : Win32cr::Foundation::LARGE_INTEGER,
    last_access_time : Win32cr::Foundation::LARGE_INTEGER,
    allocated_length : Win32cr::Foundation::LARGE_INTEGER,
    file_size : Win32cr::Foundation::LARGE_INTEGER,
    file_attributes : UInt32,
    reparse_point_tag : UInt32,
    file_id : Win32cr::Foundation::LARGE_INTEGER,
    parent_file_id : Win32cr::Foundation::LARGE_INTEGER,
    file_name_length : UInt32,
    file_name : UInt16*

  @[Extern(union: true)]
  record FILE_SEGMENT_ELEMENT,
    buffer : Void*,
    alignment : UInt64

  @[Extern]
  record REPARSE_GUID_DATA_BUFFER,
    reparse_tag : UInt32,
    reparse_data_length : UInt16,
    reserved : UInt16,
    reparse_guid : LibC::GUID,
    generic_reparse_buffer : GenericReparseBuffer_e__Struct do

    # Nested Type GenericReparseBuffer_e__Struct
    @[Extern]
    record GenericReparseBuffer_e__Struct,
      data_buffer : UInt8*

  end

  @[Extern]
  record TAPE_ERASE,
    type__ : Win32cr::Storage::FileSystem::ERASE_TAPE_TYPE,
    immediate : Win32cr::Foundation::BOOLEAN

  @[Extern]
  record TAPE_PREPARE,
    operation : Win32cr::Storage::FileSystem::PREPARE_TAPE_OPERATION,
    immediate : Win32cr::Foundation::BOOLEAN

  @[Extern]
  record TAPE_WRITE_MARKS,
    type__ : Win32cr::Storage::FileSystem::TAPEMARK_TYPE,
    count : UInt32,
    immediate : Win32cr::Foundation::BOOLEAN

  @[Extern]
  record TAPE_GET_POSITION,
    type__ : Win32cr::Storage::FileSystem::TAPE_POSITION_TYPE,
    partition : UInt32,
    offset : Win32cr::Foundation::LARGE_INTEGER

  @[Extern]
  record TAPE_SET_POSITION,
    method : Win32cr::Storage::FileSystem::TAPE_POSITION_METHOD,
    partition : UInt32,
    offset : Win32cr::Foundation::LARGE_INTEGER,
    immediate : Win32cr::Foundation::BOOLEAN

  @[Extern]
  record OFSTRUCT,
    cBytes : UInt8,
    fFixedDisk : UInt8,
    nErrCode : UInt16,
    reserved1 : UInt16,
    reserved2 : UInt16,
    szPathName : Win32cr::Foundation::CHAR[128]

  @[Extern]
  record WIN32_STREAM_ID,
    dwStreamId : Win32cr::Storage::FileSystem::WIN_STREAM_ID,
    dwStreamAttributes : UInt32,
    size : Win32cr::Foundation::LARGE_INTEGER,
    dwStreamNameSize : UInt32,
    cStreamName : UInt16*

  @[Extern]
  record COPYFILE2_MESSAGE,
    type__ : Win32cr::Storage::FileSystem::COPYFILE2_MESSAGE_TYPE,
    dwPadding : UInt32,
    info : Info_e__Union do

    # Nested Type Info_e__Union
    @[Extern(union: true)]
    record Info_e__Union,
      chunk_started : ChunkStarted_e__Struct,
      chunk_finished : ChunkFinished_e__Struct,
      stream_started : StreamStarted_e__Struct,
      stream_finished : StreamFinished_e__Struct,
      poll_continue : PollContinue_e__Struct,
      error : Error_e__Struct do

      # Nested Type Error_e__Struct
      @[Extern]
      record Error_e__Struct,
        copy_phase : Win32cr::Storage::FileSystem::COPYFILE2_COPY_PHASE,
        dwStreamNumber : UInt32,
        hrFailure : Win32cr::Foundation::HRESULT,
        dwReserved : UInt32,
        uliChunkNumber : Win32cr::Foundation::ULARGE_INTEGER,
        uliStreamSize : Win32cr::Foundation::ULARGE_INTEGER,
        uliStreamBytesTransferred : Win32cr::Foundation::ULARGE_INTEGER,
        uliTotalFileSize : Win32cr::Foundation::ULARGE_INTEGER,
        uliTotalBytesTransferred : Win32cr::Foundation::ULARGE_INTEGER


      # Nested Type StreamFinished_e__Struct
      @[Extern]
      record StreamFinished_e__Struct,
        dwStreamNumber : UInt32,
        dwReserved : UInt32,
        hSourceFile : Win32cr::Foundation::HANDLE,
        hDestinationFile : Win32cr::Foundation::HANDLE,
        uliStreamSize : Win32cr::Foundation::ULARGE_INTEGER,
        uliStreamBytesTransferred : Win32cr::Foundation::ULARGE_INTEGER,
        uliTotalFileSize : Win32cr::Foundation::ULARGE_INTEGER,
        uliTotalBytesTransferred : Win32cr::Foundation::ULARGE_INTEGER


      # Nested Type ChunkFinished_e__Struct
      @[Extern]
      record ChunkFinished_e__Struct,
        dwStreamNumber : UInt32,
        dwFlags : UInt32,
        hSourceFile : Win32cr::Foundation::HANDLE,
        hDestinationFile : Win32cr::Foundation::HANDLE,
        uliChunkNumber : Win32cr::Foundation::ULARGE_INTEGER,
        uliChunkSize : Win32cr::Foundation::ULARGE_INTEGER,
        uliStreamSize : Win32cr::Foundation::ULARGE_INTEGER,
        uliStreamBytesTransferred : Win32cr::Foundation::ULARGE_INTEGER,
        uliTotalFileSize : Win32cr::Foundation::ULARGE_INTEGER,
        uliTotalBytesTransferred : Win32cr::Foundation::ULARGE_INTEGER


      # Nested Type StreamStarted_e__Struct
      @[Extern]
      record StreamStarted_e__Struct,
        dwStreamNumber : UInt32,
        dwReserved : UInt32,
        hSourceFile : Win32cr::Foundation::HANDLE,
        hDestinationFile : Win32cr::Foundation::HANDLE,
        uliStreamSize : Win32cr::Foundation::ULARGE_INTEGER,
        uliTotalFileSize : Win32cr::Foundation::ULARGE_INTEGER


      # Nested Type ChunkStarted_e__Struct
      @[Extern]
      record ChunkStarted_e__Struct,
        dwStreamNumber : UInt32,
        dwReserved : UInt32,
        hSourceFile : Win32cr::Foundation::HANDLE,
        hDestinationFile : Win32cr::Foundation::HANDLE,
        uliChunkNumber : Win32cr::Foundation::ULARGE_INTEGER,
        uliChunkSize : Win32cr::Foundation::ULARGE_INTEGER,
        uliStreamSize : Win32cr::Foundation::ULARGE_INTEGER,
        uliTotalFileSize : Win32cr::Foundation::ULARGE_INTEGER


      # Nested Type PollContinue_e__Struct
      @[Extern]
      record PollContinue_e__Struct,
        dwReserved : UInt32

    end

  end

  @[Extern]
  record COPYFILE2_EXTENDED_PARAMETERS,
    dwSize : UInt32,
    dwCopyFlags : UInt32,
    pfCancel : Win32cr::Foundation::BOOL*,
    pProgressRoutine : Win32cr::Storage::FileSystem::PCOPYFILE2_PROGRESS_ROUTINE,
    pvCallbackContext : Void*

  @[Extern]
  record COPYFILE2_EXTENDED_PARAMETERS_V2,
    dwSize : UInt32,
    dwCopyFlags : UInt32,
    pfCancel : Win32cr::Foundation::BOOL*,
    pProgressRoutine : Win32cr::Storage::FileSystem::PCOPYFILE2_PROGRESS_ROUTINE,
    pvCallbackContext : Void*,
    dwCopyFlagsV2 : UInt32,
    ioDesiredSize : UInt32,
    ioDesiredRate : UInt32,
    reserved : Void*[8]

  @[Extern]
  record FILE_BASIC_INFO,
    creation_time : Win32cr::Foundation::LARGE_INTEGER,
    last_access_time : Win32cr::Foundation::LARGE_INTEGER,
    last_write_time : Win32cr::Foundation::LARGE_INTEGER,
    change_time : Win32cr::Foundation::LARGE_INTEGER,
    file_attributes : UInt32

  @[Extern]
  record FILE_STANDARD_INFO,
    allocation_size : Win32cr::Foundation::LARGE_INTEGER,
    end_of_file : Win32cr::Foundation::LARGE_INTEGER,
    number_of_links : UInt32,
    delete_pending : Win32cr::Foundation::BOOLEAN,
    directory : Win32cr::Foundation::BOOLEAN

  @[Extern]
  record FILE_NAME_INFO,
    file_name_length : UInt32,
    file_name : UInt16*

  @[Extern]
  record FILE_RENAME_INFO,
    anonymous : Anonymous_e__Union,
    root_directory : Win32cr::Foundation::HANDLE,
    file_name_length : UInt32,
    file_name : UInt16* do

    # Nested Type Anonymous_e__Union
    @[Extern(union: true)]
    record Anonymous_e__Union,
      replace_if_exists : Win32cr::Foundation::BOOLEAN,
      flags : UInt32

  end

  @[Extern]
  record FILE_ALLOCATION_INFO,
    allocation_size : Win32cr::Foundation::LARGE_INTEGER

  @[Extern]
  record FILE_END_OF_FILE_INFO,
    end_of_file : Win32cr::Foundation::LARGE_INTEGER

  @[Extern]
  record FILE_STREAM_INFO,
    next_entry_offset : UInt32,
    stream_name_length : UInt32,
    stream_size : Win32cr::Foundation::LARGE_INTEGER,
    stream_allocation_size : Win32cr::Foundation::LARGE_INTEGER,
    stream_name : UInt16*

  @[Extern]
  record FILE_COMPRESSION_INFO,
    compressed_file_size : Win32cr::Foundation::LARGE_INTEGER,
    compression_format : UInt16,
    compression_unit_shift : UInt8,
    chunk_shift : UInt8,
    cluster_shift : UInt8,
    reserved : UInt8[3]

  @[Extern]
  record FILE_ATTRIBUTE_TAG_INFO,
    file_attributes : UInt32,
    reparse_tag : UInt32

  @[Extern]
  record FILE_DISPOSITION_INFO,
    delete_file_a : Win32cr::Foundation::BOOLEAN

  @[Extern]
  record FILE_ID_BOTH_DIR_INFO,
    next_entry_offset : UInt32,
    file_index : UInt32,
    creation_time : Win32cr::Foundation::LARGE_INTEGER,
    last_access_time : Win32cr::Foundation::LARGE_INTEGER,
    last_write_time : Win32cr::Foundation::LARGE_INTEGER,
    change_time : Win32cr::Foundation::LARGE_INTEGER,
    end_of_file : Win32cr::Foundation::LARGE_INTEGER,
    allocation_size : Win32cr::Foundation::LARGE_INTEGER,
    file_attributes : UInt32,
    file_name_length : UInt32,
    ea_size : UInt32,
    short_name_length : Int8,
    short_name : UInt16[12],
    file_id : Win32cr::Foundation::LARGE_INTEGER,
    file_name : UInt16*

  @[Extern]
  record FILE_FULL_DIR_INFO,
    next_entry_offset : UInt32,
    file_index : UInt32,
    creation_time : Win32cr::Foundation::LARGE_INTEGER,
    last_access_time : Win32cr::Foundation::LARGE_INTEGER,
    last_write_time : Win32cr::Foundation::LARGE_INTEGER,
    change_time : Win32cr::Foundation::LARGE_INTEGER,
    end_of_file : Win32cr::Foundation::LARGE_INTEGER,
    allocation_size : Win32cr::Foundation::LARGE_INTEGER,
    file_attributes : UInt32,
    file_name_length : UInt32,
    ea_size : UInt32,
    file_name : UInt16*

  @[Extern]
  record FILE_IO_PRIORITY_HINT_INFO,
    priority_hint : Win32cr::Storage::FileSystem::PRIORITY_HINT

  @[Extern]
  record FILE_ALIGNMENT_INFO,
    alignment_requirement : UInt32

  @[Extern]
  record FILE_STORAGE_INFO,
    logical_bytes_per_sector : UInt32,
    physical_bytes_per_sector_for_atomicity : UInt32,
    physical_bytes_per_sector_for_performance : UInt32,
    file_system_effective_physical_bytes_per_sector_for_atomicity : UInt32,
    flags : UInt32,
    byte_offset_for_sector_alignment : UInt32,
    byte_offset_for_partition_alignment : UInt32

  @[Extern]
  record FILE_ID_INFO,
    volume_serial_number : UInt64,
    file_id : Win32cr::Storage::FileSystem::FILE_ID_128

  @[Extern]
  record FILE_ID_EXTD_DIR_INFO,
    next_entry_offset : UInt32,
    file_index : UInt32,
    creation_time : Win32cr::Foundation::LARGE_INTEGER,
    last_access_time : Win32cr::Foundation::LARGE_INTEGER,
    last_write_time : Win32cr::Foundation::LARGE_INTEGER,
    change_time : Win32cr::Foundation::LARGE_INTEGER,
    end_of_file : Win32cr::Foundation::LARGE_INTEGER,
    allocation_size : Win32cr::Foundation::LARGE_INTEGER,
    file_attributes : UInt32,
    file_name_length : UInt32,
    ea_size : UInt32,
    reparse_point_tag : UInt32,
    file_id : Win32cr::Storage::FileSystem::FILE_ID_128,
    file_name : UInt16*

  @[Extern]
  record FILE_REMOTE_PROTOCOL_INFO,
    structure_version : UInt16,
    structure_size : UInt16,
    protocol : UInt32,
    protocol_major_version : UInt16,
    protocol_minor_version : UInt16,
    protocol_revision : UInt16,
    reserved : UInt16,
    flags : UInt32,
    generic_reserved : GenericReserved_e__Struct,
    protocol_specific : ProtocolSpecific_e__Union do

    # Nested Type ProtocolSpecific_e__Union
    @[Extern(union: true)]
    record ProtocolSpecific_e__Union,
      smb2 : Smb2_e__Struct,
      reserved : UInt32[16] do

      # Nested Type Smb2_e__Struct
      @[Extern]
      record Smb2_e__Struct,
        server : Server_e__Struct,
        share : Share_e__Struct do

        # Nested Type Share_e__Struct
        @[Extern]
        record Share_e__Struct,
          capabilities : UInt32,
          caching_flags : UInt32


        # Nested Type Server_e__Struct
        @[Extern]
        record Server_e__Struct,
          capabilities : UInt32

      end

    end


    # Nested Type GenericReserved_e__Struct
    @[Extern]
    record GenericReserved_e__Struct,
      reserved : UInt32[8]

  end

  @[Extern]
  record FILE_ID_DESCRIPTOR,
    dwSize : UInt32,
    type__ : Win32cr::Storage::FileSystem::FILE_ID_TYPE,
    anonymous : Anonymous_e__Union do

    # Nested Type Anonymous_e__Union
    @[Extern(union: true)]
    record Anonymous_e__Union,
      file_id : Win32cr::Foundation::LARGE_INTEGER,
      object_id : LibC::GUID,
      extended_file_id : Win32cr::Storage::FileSystem::FILE_ID_128

  end

  @[Extern]
  record IDiskQuotaUserVtbl,
    query_interface : Proc(IDiskQuotaUser*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDiskQuotaUser*, UInt32),
    release : Proc(IDiskQuotaUser*, UInt32),
    get_id : Proc(IDiskQuotaUser*, UInt32*, Win32cr::Foundation::HRESULT),
    get_name : Proc(IDiskQuotaUser*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_sid_length : Proc(IDiskQuotaUser*, UInt32*, Win32cr::Foundation::HRESULT),
    get_sid : Proc(IDiskQuotaUser*, UInt8*, UInt32, Win32cr::Foundation::HRESULT),
    get_quota_threshold : Proc(IDiskQuotaUser*, Int64*, Win32cr::Foundation::HRESULT),
    get_quota_threshold_text : Proc(IDiskQuotaUser*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_quota_limit : Proc(IDiskQuotaUser*, Int64*, Win32cr::Foundation::HRESULT),
    get_quota_limit_text : Proc(IDiskQuotaUser*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_quota_used : Proc(IDiskQuotaUser*, Int64*, Win32cr::Foundation::HRESULT),
    get_quota_used_text : Proc(IDiskQuotaUser*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    get_quota_information : Proc(IDiskQuotaUser*, Void*, UInt32, Win32cr::Foundation::HRESULT),
    set_quota_threshold : Proc(IDiskQuotaUser*, Int64, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_quota_limit : Proc(IDiskQuotaUser*, Int64, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    invalidate : Proc(IDiskQuotaUser*, Win32cr::Foundation::HRESULT),
    get_account_status : Proc(IDiskQuotaUser*, UInt32*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("7988b574-ec89-11cf-9c00-00aa00a14f56")]
  record IDiskQuotaUser, lpVtbl : IDiskQuotaUserVtbl* do
    GUID = LibC::GUID.new(0x7988b574_u32, 0xec89_u16, 0x11cf_u16, StaticArray[0x9c_u8, 0x0_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xa1_u8, 0x4f_u8, 0x56_u8])
    def query_interface(this : IDiskQuotaUser*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDiskQuotaUser*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDiskQuotaUser*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def get_id(this : IDiskQuotaUser*, pulID : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_id.call(this, pulID)
    end
    def get_name(this : IDiskQuotaUser*, pszAccountContainer : Win32cr::Foundation::PWSTR, cchAccountContainer : UInt32, pszLogonName : Win32cr::Foundation::PWSTR, cchLogonName : UInt32, pszDisplayName : Win32cr::Foundation::PWSTR, cchDisplayName : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_name.call(this, pszAccountContainer, cchAccountContainer, pszLogonName, cchLogonName, pszDisplayName, cchDisplayName)
    end
    def get_sid_length(this : IDiskQuotaUser*, pdwLength : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_sid_length.call(this, pdwLength)
    end
    def get_sid(this : IDiskQuotaUser*, pbSidBuffer : UInt8*, cbSidBuffer : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_sid.call(this, pbSidBuffer, cbSidBuffer)
    end
    def get_quota_threshold(this : IDiskQuotaUser*, pllThreshold : Int64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_quota_threshold.call(this, pllThreshold)
    end
    def get_quota_threshold_text(this : IDiskQuotaUser*, pszText : Win32cr::Foundation::PWSTR, cchText : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_quota_threshold_text.call(this, pszText, cchText)
    end
    def get_quota_limit(this : IDiskQuotaUser*, pllLimit : Int64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_quota_limit.call(this, pllLimit)
    end
    def get_quota_limit_text(this : IDiskQuotaUser*, pszText : Win32cr::Foundation::PWSTR, cchText : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_quota_limit_text.call(this, pszText, cchText)
    end
    def get_quota_used(this : IDiskQuotaUser*, pllUsed : Int64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_quota_used.call(this, pllUsed)
    end
    def get_quota_used_text(this : IDiskQuotaUser*, pszText : Win32cr::Foundation::PWSTR, cchText : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_quota_used_text.call(this, pszText, cchText)
    end
    def get_quota_information(this : IDiskQuotaUser*, pbQuotaInfo : Void*, cbQuotaInfo : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_quota_information.call(this, pbQuotaInfo, cbQuotaInfo)
    end
    def set_quota_threshold(this : IDiskQuotaUser*, llThreshold : Int64, fWriteThrough : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_quota_threshold.call(this, llThreshold, fWriteThrough)
    end
    def set_quota_limit(this : IDiskQuotaUser*, llLimit : Int64, fWriteThrough : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_quota_limit.call(this, llLimit, fWriteThrough)
    end
    def invalidate(this : IDiskQuotaUser*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invalidate.call(this)
    end
    def get_account_status(this : IDiskQuotaUser*, pdwStatus : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_account_status.call(this, pdwStatus)
    end

  end

  @[Extern]
  record IEnumDiskQuotaUsersVtbl,
    query_interface : Proc(IEnumDiskQuotaUsers*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IEnumDiskQuotaUsers*, UInt32),
    release : Proc(IEnumDiskQuotaUsers*, UInt32),
    next__ : Proc(IEnumDiskQuotaUsers*, UInt32, Void**, UInt32*, Win32cr::Foundation::HRESULT),
    skip : Proc(IEnumDiskQuotaUsers*, UInt32, Win32cr::Foundation::HRESULT),
    reset : Proc(IEnumDiskQuotaUsers*, Win32cr::Foundation::HRESULT),
    clone : Proc(IEnumDiskQuotaUsers*, Void**, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("7988b577-ec89-11cf-9c00-00aa00a14f56")]
  record IEnumDiskQuotaUsers, lpVtbl : IEnumDiskQuotaUsersVtbl* do
    GUID = LibC::GUID.new(0x7988b577_u32, 0xec89_u16, 0x11cf_u16, StaticArray[0x9c_u8, 0x0_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xa1_u8, 0x4f_u8, 0x56_u8])
    def query_interface(this : IEnumDiskQuotaUsers*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IEnumDiskQuotaUsers*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IEnumDiskQuotaUsers*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def next__(this : IEnumDiskQuotaUsers*, cUsers : UInt32, rgUsers : Void**, pcUsersFetched : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.next__.call(this, cUsers, rgUsers, pcUsersFetched)
    end
    def skip(this : IEnumDiskQuotaUsers*, cUsers : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.skip.call(this, cUsers)
    end
    def reset(this : IEnumDiskQuotaUsers*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.reset.call(this)
    end
    def clone(this : IEnumDiskQuotaUsers*, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.clone.call(this, ppEnum)
    end

  end

  @[Extern]
  record IDiskQuotaUserBatchVtbl,
    query_interface : Proc(IDiskQuotaUserBatch*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDiskQuotaUserBatch*, UInt32),
    release : Proc(IDiskQuotaUserBatch*, UInt32),
    add : Proc(IDiskQuotaUserBatch*, Void*, Win32cr::Foundation::HRESULT),
    remove : Proc(IDiskQuotaUserBatch*, Void*, Win32cr::Foundation::HRESULT),
    remove_all : Proc(IDiskQuotaUserBatch*, Win32cr::Foundation::HRESULT),
    flush_to_disk : Proc(IDiskQuotaUserBatch*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("7988b576-ec89-11cf-9c00-00aa00a14f56")]
  record IDiskQuotaUserBatch, lpVtbl : IDiskQuotaUserBatchVtbl* do
    GUID = LibC::GUID.new(0x7988b576_u32, 0xec89_u16, 0x11cf_u16, StaticArray[0x9c_u8, 0x0_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xa1_u8, 0x4f_u8, 0x56_u8])
    def query_interface(this : IDiskQuotaUserBatch*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDiskQuotaUserBatch*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDiskQuotaUserBatch*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def add(this : IDiskQuotaUserBatch*, pUser : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add.call(this, pUser)
    end
    def remove(this : IDiskQuotaUserBatch*, pUser : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove.call(this, pUser)
    end
    def remove_all(this : IDiskQuotaUserBatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.remove_all.call(this)
    end
    def flush_to_disk(this : IDiskQuotaUserBatch*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.flush_to_disk.call(this)
    end

  end

  @[Extern]
  record IDiskQuotaControlVtbl,
    query_interface : Proc(IDiskQuotaControl*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDiskQuotaControl*, UInt32),
    release : Proc(IDiskQuotaControl*, UInt32),
    enum_connection_points : Proc(IDiskQuotaControl*, Void**, Win32cr::Foundation::HRESULT),
    find_connection_point : Proc(IDiskQuotaControl*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    initialize__ : Proc(IDiskQuotaControl*, Win32cr::Foundation::PWSTR, Win32cr::Foundation::BOOL, Win32cr::Foundation::HRESULT),
    set_quota_state : Proc(IDiskQuotaControl*, UInt32, Win32cr::Foundation::HRESULT),
    get_quota_state : Proc(IDiskQuotaControl*, UInt32*, Win32cr::Foundation::HRESULT),
    set_quota_log_flags : Proc(IDiskQuotaControl*, UInt32, Win32cr::Foundation::HRESULT),
    get_quota_log_flags : Proc(IDiskQuotaControl*, UInt32*, Win32cr::Foundation::HRESULT),
    set_default_quota_threshold : Proc(IDiskQuotaControl*, Int64, Win32cr::Foundation::HRESULT),
    get_default_quota_threshold : Proc(IDiskQuotaControl*, Int64*, Win32cr::Foundation::HRESULT),
    get_default_quota_threshold_text : Proc(IDiskQuotaControl*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    set_default_quota_limit : Proc(IDiskQuotaControl*, Int64, Win32cr::Foundation::HRESULT),
    get_default_quota_limit : Proc(IDiskQuotaControl*, Int64*, Win32cr::Foundation::HRESULT),
    get_default_quota_limit_text : Proc(IDiskQuotaControl*, Win32cr::Foundation::PWSTR, UInt32, Win32cr::Foundation::HRESULT),
    add_user_sid : Proc(IDiskQuotaControl*, Win32cr::Foundation::PSID, Win32cr::Storage::FileSystem::DISKQUOTA_USERNAME_RESOLVE, Void**, Win32cr::Foundation::HRESULT),
    add_user_name : Proc(IDiskQuotaControl*, Win32cr::Foundation::PWSTR, Win32cr::Storage::FileSystem::DISKQUOTA_USERNAME_RESOLVE, Void**, Win32cr::Foundation::HRESULT),
    delete_user : Proc(IDiskQuotaControl*, Void*, Win32cr::Foundation::HRESULT),
    find_user_sid : Proc(IDiskQuotaControl*, Win32cr::Foundation::PSID, Win32cr::Storage::FileSystem::DISKQUOTA_USERNAME_RESOLVE, Void**, Win32cr::Foundation::HRESULT),
    find_user_name : Proc(IDiskQuotaControl*, Win32cr::Foundation::PWSTR, Void**, Win32cr::Foundation::HRESULT),
    create_enum_users : Proc(IDiskQuotaControl*, Win32cr::Foundation::PSID*, UInt32, Win32cr::Storage::FileSystem::DISKQUOTA_USERNAME_RESOLVE, Void**, Win32cr::Foundation::HRESULT),
    create_user_batch : Proc(IDiskQuotaControl*, Void**, Win32cr::Foundation::HRESULT),
    invalidate_sid_name_cache : Proc(IDiskQuotaControl*, Win32cr::Foundation::HRESULT),
    give_user_name_resolution_priority : Proc(IDiskQuotaControl*, Void*, Win32cr::Foundation::HRESULT),
    shutdown_name_resolution : Proc(IDiskQuotaControl*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("7988b572-ec89-11cf-9c00-00aa00a14f56")]
  record IDiskQuotaControl, lpVtbl : IDiskQuotaControlVtbl* do
    GUID = LibC::GUID.new(0x7988b572_u32, 0xec89_u16, 0x11cf_u16, StaticArray[0x9c_u8, 0x0_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xa1_u8, 0x4f_u8, 0x56_u8])
    def query_interface(this : IDiskQuotaControl*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDiskQuotaControl*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDiskQuotaControl*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def enum_connection_points(this : IDiskQuotaControl*, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.enum_connection_points.call(this, ppEnum)
    end
    def find_connection_point(this : IDiskQuotaControl*, riid : LibC::GUID*, ppCP : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_connection_point.call(this, riid, ppCP)
    end
    def initialize__(this : IDiskQuotaControl*, pszPath : Win32cr::Foundation::PWSTR, bReadWrite : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.initialize__.call(this, pszPath, bReadWrite)
    end
    def set_quota_state(this : IDiskQuotaControl*, dwState : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_quota_state.call(this, dwState)
    end
    def get_quota_state(this : IDiskQuotaControl*, pdwState : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_quota_state.call(this, pdwState)
    end
    def set_quota_log_flags(this : IDiskQuotaControl*, dwFlags : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_quota_log_flags.call(this, dwFlags)
    end
    def get_quota_log_flags(this : IDiskQuotaControl*, pdwFlags : UInt32*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_quota_log_flags.call(this, pdwFlags)
    end
    def set_default_quota_threshold(this : IDiskQuotaControl*, llThreshold : Int64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_default_quota_threshold.call(this, llThreshold)
    end
    def get_default_quota_threshold(this : IDiskQuotaControl*, pllThreshold : Int64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_quota_threshold.call(this, pllThreshold)
    end
    def get_default_quota_threshold_text(this : IDiskQuotaControl*, pszText : Win32cr::Foundation::PWSTR, cchText : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_quota_threshold_text.call(this, pszText, cchText)
    end
    def set_default_quota_limit(this : IDiskQuotaControl*, llLimit : Int64) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.set_default_quota_limit.call(this, llLimit)
    end
    def get_default_quota_limit(this : IDiskQuotaControl*, pllLimit : Int64*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_quota_limit.call(this, pllLimit)
    end
    def get_default_quota_limit_text(this : IDiskQuotaControl*, pszText : Win32cr::Foundation::PWSTR, cchText : UInt32) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.get_default_quota_limit_text.call(this, pszText, cchText)
    end
    def add_user_sid(this : IDiskQuotaControl*, pUserSid : Win32cr::Foundation::PSID, fNameResolution : Win32cr::Storage::FileSystem::DISKQUOTA_USERNAME_RESOLVE, ppUser : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_user_sid.call(this, pUserSid, fNameResolution, ppUser)
    end
    def add_user_name(this : IDiskQuotaControl*, pszLogonName : Win32cr::Foundation::PWSTR, fNameResolution : Win32cr::Storage::FileSystem::DISKQUOTA_USERNAME_RESOLVE, ppUser : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.add_user_name.call(this, pszLogonName, fNameResolution, ppUser)
    end
    def delete_user(this : IDiskQuotaControl*, pUser : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.delete_user.call(this, pUser)
    end
    def find_user_sid(this : IDiskQuotaControl*, pUserSid : Win32cr::Foundation::PSID, fNameResolution : Win32cr::Storage::FileSystem::DISKQUOTA_USERNAME_RESOLVE, ppUser : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_user_sid.call(this, pUserSid, fNameResolution, ppUser)
    end
    def find_user_name(this : IDiskQuotaControl*, pszLogonName : Win32cr::Foundation::PWSTR, ppUser : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.find_user_name.call(this, pszLogonName, ppUser)
    end
    def create_enum_users(this : IDiskQuotaControl*, rgpUserSids : Win32cr::Foundation::PSID*, cpSids : UInt32, fNameResolution : Win32cr::Storage::FileSystem::DISKQUOTA_USERNAME_RESOLVE, ppEnum : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_enum_users.call(this, rgpUserSids, cpSids, fNameResolution, ppEnum)
    end
    def create_user_batch(this : IDiskQuotaControl*, ppBatch : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.create_user_batch.call(this, ppBatch)
    end
    def invalidate_sid_name_cache(this : IDiskQuotaControl*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.invalidate_sid_name_cache.call(this)
    end
    def give_user_name_resolution_priority(this : IDiskQuotaControl*, pUser : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.give_user_name_resolution_priority.call(this, pUser)
    end
    def shutdown_name_resolution(this : IDiskQuotaControl*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.shutdown_name_resolution.call(this)
    end

  end

  @[Extern]
  record IDiskQuotaEventsVtbl,
    query_interface : Proc(IDiskQuotaEvents*, LibC::GUID*, Void**, Win32cr::Foundation::HRESULT),
    add_ref : Proc(IDiskQuotaEvents*, UInt32),
    release : Proc(IDiskQuotaEvents*, UInt32),
    on_user_name_changed : Proc(IDiskQuotaEvents*, Void*, Win32cr::Foundation::HRESULT)


  @[Extern]
  #@[Com("7988b579-ec89-11cf-9c00-00aa00a14f56")]
  record IDiskQuotaEvents, lpVtbl : IDiskQuotaEventsVtbl* do
    GUID = LibC::GUID.new(0x7988b579_u32, 0xec89_u16, 0x11cf_u16, StaticArray[0x9c_u8, 0x0_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xa1_u8, 0x4f_u8, 0x56_u8])
    def query_interface(this : IDiskQuotaEvents*, riid : LibC::GUID*, ppvObject : Void**) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.query_interface.call(this, riid, ppvObject)
    end
    def add_ref(this : IDiskQuotaEvents*) : UInt32
      @lpVtbl.try &.value.add_ref.call(this)
    end
    def release(this : IDiskQuotaEvents*) : UInt32
      @lpVtbl.try &.value.release.call(this)
    end
    def on_user_name_changed(this : IDiskQuotaEvents*, pUser : Void*) : Win32cr::Foundation::HRESULT
      @lpVtbl.try &.value.on_user_name_changed.call(this, pUser)
    end

  end

  @[Link("kernel32")]
  @[Link("api-ms-win-core-file-fromapp-l1-1-0")]
  @[Link("version")]
  @[Link("clfsw32")]
  @[Link("advapi32")]
  @[Link("wofutil")]
  @[Link("txfw32")]
  @[Link("ktmw32")]
  @[Link("netapi32")]
  @[Link("api-ms-win-core-ioring-l1-1-0")]
  @[Link("ntdll")]
  lib C
    fun SearchPathW(lpPath : Win32cr::Foundation::PWSTR, lpFileName : Win32cr::Foundation::PWSTR, lpExtension : Win32cr::Foundation::PWSTR, nBufferLength : UInt32, lpBuffer : UInt16*, lpFilePart : Win32cr::Foundation::PWSTR*) : UInt32

    fun SearchPathA(lpPath : Win32cr::Foundation::PSTR, lpFileName : Win32cr::Foundation::PSTR, lpExtension : Win32cr::Foundation::PSTR, nBufferLength : UInt32, lpBuffer : UInt8*, lpFilePart : Win32cr::Foundation::PSTR*) : UInt32

    fun CompareFileTime(lpFileTime1 : Win32cr::Foundation::FILETIME*, lpFileTime2 : Win32cr::Foundation::FILETIME*) : Int32

    fun CreateDirectoryA(lpPathName : Win32cr::Foundation::PSTR, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun CreateDirectoryW(lpPathName : Win32cr::Foundation::PWSTR, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*) : Win32cr::Foundation::BOOL

    fun CreateFileA(lpFileName : Win32cr::Foundation::PSTR, dwDesiredAccess : Win32cr::Storage::FileSystem::FILE_ACCESS_FLAGS, dwShareMode : Win32cr::Storage::FileSystem::FILE_SHARE_MODE, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, dwCreationDisposition : Win32cr::Storage::FileSystem::FILE_CREATION_DISPOSITION, dwFlagsAndAttributes : Win32cr::Storage::FileSystem::FILE_FLAGS_AND_ATTRIBUTES, hTemplateFile : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HANDLE

    # Commented out due to being part of LibC
    #fun CreateFileW(lpFileName : Win32cr::Foundation::PWSTR, dwDesiredAccess : Win32cr::Storage::FileSystem::FILE_ACCESS_FLAGS, dwShareMode : Win32cr::Storage::FileSystem::FILE_SHARE_MODE, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, dwCreationDisposition : Win32cr::Storage::FileSystem::FILE_CREATION_DISPOSITION, dwFlagsAndAttributes : Win32cr::Storage::FileSystem::FILE_FLAGS_AND_ATTRIBUTES, hTemplateFile : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HANDLE

    fun DefineDosDeviceW(dwFlags : Win32cr::Storage::FileSystem::DEFINE_DOS_DEVICE_FLAGS, lpDeviceName : Win32cr::Foundation::PWSTR, lpTargetPath : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    fun DeleteFileA(lpFileName : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun DeleteFileW(lpFileName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    fun DeleteVolumeMountPointW(lpszVolumeMountPoint : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    fun FileTimeToLocalFileTime(lpFileTime : Win32cr::Foundation::FILETIME*, lpLocalFileTime : Win32cr::Foundation::FILETIME*) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun FindClose(hFindFile : Win32cr::Storage::FileSystem::FindFileHandle) : Win32cr::Foundation::BOOL

    fun FindCloseChangeNotification(hChangeHandle : Win32cr::Storage::FileSystem::FindChangeNotificationHandle) : Win32cr::Foundation::BOOL

    fun FindFirstChangeNotificationA(lpPathName : Win32cr::Foundation::PSTR, bWatchSubtree : Win32cr::Foundation::BOOL, dwNotifyFilter : Win32cr::Storage::FileSystem::FILE_NOTIFY_CHANGE) : Win32cr::Storage::FileSystem::FindChangeNotificationHandle

    fun FindFirstChangeNotificationW(lpPathName : Win32cr::Foundation::PWSTR, bWatchSubtree : Win32cr::Foundation::BOOL, dwNotifyFilter : Win32cr::Storage::FileSystem::FILE_NOTIFY_CHANGE) : Win32cr::Storage::FileSystem::FindChangeNotificationHandle

    fun FindFirstFileA(lpFileName : Win32cr::Foundation::PSTR, lpFindFileData : Win32cr::Storage::FileSystem::WIN32_FIND_DATAA*) : Win32cr::Storage::FileSystem::FindFileHandle

    # Commented out due to being part of LibC
    #fun FindFirstFileW(lpFileName : Win32cr::Foundation::PWSTR, lpFindFileData : Win32cr::Storage::FileSystem::WIN32_FIND_DATAW*) : Win32cr::Storage::FileSystem::FindFileHandle

    fun FindFirstFileExA(lpFileName : Win32cr::Foundation::PSTR, fInfoLevelId : Win32cr::Storage::FileSystem::FINDEX_INFO_LEVELS, lpFindFileData : Void*, fSearchOp : Win32cr::Storage::FileSystem::FINDEX_SEARCH_OPS, lpSearchFilter : Void*, dwAdditionalFlags : Win32cr::Storage::FileSystem::FIND_FIRST_EX_FLAGS) : Win32cr::Storage::FileSystem::FindFileHandle

    fun FindFirstFileExW(lpFileName : Win32cr::Foundation::PWSTR, fInfoLevelId : Win32cr::Storage::FileSystem::FINDEX_INFO_LEVELS, lpFindFileData : Void*, fSearchOp : Win32cr::Storage::FileSystem::FINDEX_SEARCH_OPS, lpSearchFilter : Void*, dwAdditionalFlags : Win32cr::Storage::FileSystem::FIND_FIRST_EX_FLAGS) : Win32cr::Storage::FileSystem::FindFileHandle

    fun FindFirstVolumeW(lpszVolumeName : UInt16*, cchBufferLength : UInt32) : Win32cr::Storage::FileSystem::FindVolumeHandle

    fun FindNextChangeNotification(hChangeHandle : Win32cr::Storage::FileSystem::FindChangeNotificationHandle) : Win32cr::Foundation::BOOL

    fun FindNextFileA(hFindFile : Win32cr::Storage::FileSystem::FindFileHandle, lpFindFileData : Win32cr::Storage::FileSystem::WIN32_FIND_DATAA*) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun FindNextFileW(hFindFile : Win32cr::Foundation::HANDLE, lpFindFileData : Win32cr::Storage::FileSystem::WIN32_FIND_DATAW*) : Win32cr::Foundation::BOOL

    fun FindNextVolumeW(hFindVolume : Win32cr::Storage::FileSystem::FindVolumeHandle, lpszVolumeName : UInt16*, cchBufferLength : UInt32) : Win32cr::Foundation::BOOL

    fun FindVolumeClose(hFindVolume : Win32cr::Storage::FileSystem::FindVolumeHandle) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun FlushFileBuffers(hFile : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun GetDiskFreeSpaceA(lpRootPathName : Win32cr::Foundation::PSTR, lpSectorsPerCluster : UInt32*, lpBytesPerSector : UInt32*, lpNumberOfFreeClusters : UInt32*, lpTotalNumberOfClusters : UInt32*) : Win32cr::Foundation::BOOL

    fun GetDiskFreeSpaceW(lpRootPathName : Win32cr::Foundation::PWSTR, lpSectorsPerCluster : UInt32*, lpBytesPerSector : UInt32*, lpNumberOfFreeClusters : UInt32*, lpTotalNumberOfClusters : UInt32*) : Win32cr::Foundation::BOOL

    fun GetDiskFreeSpaceExA(lpDirectoryName : Win32cr::Foundation::PSTR, lpFreeBytesAvailableToCaller : Win32cr::Foundation::ULARGE_INTEGER*, lpTotalNumberOfBytes : Win32cr::Foundation::ULARGE_INTEGER*, lpTotalNumberOfFreeBytes : Win32cr::Foundation::ULARGE_INTEGER*) : Win32cr::Foundation::BOOL

    fun GetDiskFreeSpaceExW(lpDirectoryName : Win32cr::Foundation::PWSTR, lpFreeBytesAvailableToCaller : Win32cr::Foundation::ULARGE_INTEGER*, lpTotalNumberOfBytes : Win32cr::Foundation::ULARGE_INTEGER*, lpTotalNumberOfFreeBytes : Win32cr::Foundation::ULARGE_INTEGER*) : Win32cr::Foundation::BOOL

    fun GetDiskSpaceInformationA(rootPath : Win32cr::Foundation::PSTR, diskSpaceInfo : Win32cr::Storage::FileSystem::DISK_SPACE_INFORMATION*) : Win32cr::Foundation::HRESULT

    fun GetDiskSpaceInformationW(rootPath : Win32cr::Foundation::PWSTR, diskSpaceInfo : Win32cr::Storage::FileSystem::DISK_SPACE_INFORMATION*) : Win32cr::Foundation::HRESULT

    fun GetDriveTypeA(lpRootPathName : Win32cr::Foundation::PSTR) : UInt32

    fun GetDriveTypeW(lpRootPathName : Win32cr::Foundation::PWSTR) : UInt32

    fun GetFileAttributesA(lpFileName : Win32cr::Foundation::PSTR) : UInt32

    # Commented out due to being part of LibC
    #fun GetFileAttributesW(lpFileName : Win32cr::Foundation::PWSTR) : UInt32

    fun GetFileAttributesExA(lpFileName : Win32cr::Foundation::PSTR, fInfoLevelId : Win32cr::Storage::FileSystem::GET_FILEEX_INFO_LEVELS, lpFileInformation : Void*) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun GetFileAttributesExW(lpFileName : Win32cr::Foundation::PWSTR, fInfoLevelId : Win32cr::Storage::FileSystem::GET_FILEEX_INFO_LEVELS, lpFileInformation : Void*) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun GetFileInformationByHandle(hFile : Win32cr::Foundation::HANDLE, lpFileInformation : Win32cr::Storage::FileSystem::BY_HANDLE_FILE_INFORMATION*) : Win32cr::Foundation::BOOL

    fun GetFileSize(hFile : Win32cr::Foundation::HANDLE, lpFileSizeHigh : UInt32*) : UInt32

    fun GetFileSizeEx(hFile : Win32cr::Foundation::HANDLE, lpFileSize : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun GetFileType(hFile : Win32cr::Foundation::HANDLE) : UInt32

    fun GetFinalPathNameByHandleA(hFile : Win32cr::Foundation::HANDLE, lpszFilePath : UInt8*, cchFilePath : UInt32, dwFlags : Win32cr::Storage::FileSystem::FILE_NAME) : UInt32

    fun GetFinalPathNameByHandleW(hFile : Win32cr::Foundation::HANDLE, lpszFilePath : UInt16*, cchFilePath : UInt32, dwFlags : Win32cr::Storage::FileSystem::FILE_NAME) : UInt32

    fun GetFileTime(hFile : Win32cr::Foundation::HANDLE, lpCreationTime : Win32cr::Foundation::FILETIME*, lpLastAccessTime : Win32cr::Foundation::FILETIME*, lpLastWriteTime : Win32cr::Foundation::FILETIME*) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun GetFullPathNameW(lpFileName : Win32cr::Foundation::PWSTR, nBufferLength : UInt32, lpBuffer : UInt16*, lpFilePart : Win32cr::Foundation::PWSTR*) : UInt32

    fun GetFullPathNameA(lpFileName : Win32cr::Foundation::PSTR, nBufferLength : UInt32, lpBuffer : UInt8*, lpFilePart : Win32cr::Foundation::PSTR*) : UInt32

    fun GetLogicalDrives : UInt32

    fun GetLogicalDriveStringsW(nBufferLength : UInt32, lpBuffer : UInt16*) : UInt32

    fun GetLongPathNameA(lpszShortPath : Win32cr::Foundation::PSTR, lpszLongPath : UInt8*, cchBuffer : UInt32) : UInt32

    fun GetLongPathNameW(lpszShortPath : Win32cr::Foundation::PWSTR, lpszLongPath : UInt16*, cchBuffer : UInt32) : UInt32

    fun AreShortNamesEnabled(handle : Win32cr::Foundation::HANDLE, enabled : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::BOOL

    fun GetShortPathNameW(lpszLongPath : Win32cr::Foundation::PWSTR, lpszShortPath : UInt16*, cchBuffer : UInt32) : UInt32

    fun GetTempFileNameW(lpPathName : Win32cr::Foundation::PWSTR, lpPrefixString : Win32cr::Foundation::PWSTR, uUnique : UInt32, lpTempFileName : UInt16*) : UInt32

    fun GetVolumeInformationByHandleW(hFile : Win32cr::Foundation::HANDLE, lpVolumeNameBuffer : UInt16*, nVolumeNameSize : UInt32, lpVolumeSerialNumber : UInt32*, lpMaximumComponentLength : UInt32*, lpFileSystemFlags : UInt32*, lpFileSystemNameBuffer : UInt16*, nFileSystemNameSize : UInt32) : Win32cr::Foundation::BOOL

    fun GetVolumeInformationW(lpRootPathName : Win32cr::Foundation::PWSTR, lpVolumeNameBuffer : UInt16*, nVolumeNameSize : UInt32, lpVolumeSerialNumber : UInt32*, lpMaximumComponentLength : UInt32*, lpFileSystemFlags : UInt32*, lpFileSystemNameBuffer : UInt16*, nFileSystemNameSize : UInt32) : Win32cr::Foundation::BOOL

    fun GetVolumePathNameW(lpszFileName : Win32cr::Foundation::PWSTR, lpszVolumePathName : UInt16*, cchBufferLength : UInt32) : Win32cr::Foundation::BOOL

    fun LocalFileTimeToFileTime(lpLocalFileTime : Win32cr::Foundation::FILETIME*, lpFileTime : Win32cr::Foundation::FILETIME*) : Win32cr::Foundation::BOOL

    fun LockFile(hFile : Win32cr::Foundation::HANDLE, dwFileOffsetLow : UInt32, dwFileOffsetHigh : UInt32, nNumberOfBytesToLockLow : UInt32, nNumberOfBytesToLockHigh : UInt32) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun LockFileEx(hFile : Win32cr::Foundation::HANDLE, dwFlags : Win32cr::Storage::FileSystem::LOCK_FILE_FLAGS, dwReserved : UInt32, nNumberOfBytesToLockLow : UInt32, nNumberOfBytesToLockHigh : UInt32, lpOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun QueryDosDeviceW(lpDeviceName : Win32cr::Foundation::PWSTR, lpTargetPath : UInt16*, ucchMax : UInt32) : UInt32

    # Commented out due to being part of LibC
    #fun ReadFile(hFile : Win32cr::Foundation::HANDLE, lpBuffer : Void*, nNumberOfBytesToRead : UInt32, lpNumberOfBytesRead : UInt32*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun ReadFileEx(hFile : Win32cr::Foundation::HANDLE, lpBuffer : Void*, nNumberOfBytesToRead : UInt32, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpCompletionRoutine : Win32cr::System::IO::LPOVERLAPPED_COMPLETION_ROUTINE) : Win32cr::Foundation::BOOL

    fun ReadFileScatter(hFile : Win32cr::Foundation::HANDLE, aSegmentArray : Win32cr::Storage::FileSystem::FILE_SEGMENT_ELEMENT*, nNumberOfBytesToRead : UInt32, lpReserved : UInt32*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun RemoveDirectoryA(lpPathName : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun RemoveDirectoryW(lpPathName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun SetEndOfFile(hFile : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun SetFileAttributesA(lpFileName : Win32cr::Foundation::PSTR, dwFileAttributes : Win32cr::Storage::FileSystem::FILE_FLAGS_AND_ATTRIBUTES) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun SetFileAttributesW(lpFileName : Win32cr::Foundation::PWSTR, dwFileAttributes : Win32cr::Storage::FileSystem::FILE_FLAGS_AND_ATTRIBUTES) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun SetFileInformationByHandle(hFile : Win32cr::Foundation::HANDLE, file_information_class : Win32cr::Storage::FileSystem::FILE_INFO_BY_HANDLE_CLASS, lpFileInformation : Void*, dwBufferSize : UInt32) : Win32cr::Foundation::BOOL

    fun SetFilePointer(hFile : Win32cr::Foundation::HANDLE, lDistanceToMove : Int32, lpDistanceToMoveHigh : Int32*, dwMoveMethod : Win32cr::Storage::FileSystem::SET_FILE_POINTER_MOVE_METHOD) : UInt32

    # Commented out due to being part of LibC
    #fun SetFilePointerEx(hFile : Win32cr::Foundation::HANDLE, liDistanceToMove : Win32cr::Foundation::LARGE_INTEGER, lpNewFilePointer : Win32cr::Foundation::LARGE_INTEGER*, dwMoveMethod : Win32cr::Storage::FileSystem::SET_FILE_POINTER_MOVE_METHOD) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun SetFileTime(hFile : Win32cr::Foundation::HANDLE, lpCreationTime : Win32cr::Foundation::FILETIME*, lpLastAccessTime : Win32cr::Foundation::FILETIME*, lpLastWriteTime : Win32cr::Foundation::FILETIME*) : Win32cr::Foundation::BOOL

    fun SetFileValidData(hFile : Win32cr::Foundation::HANDLE, valid_data_length : Int64) : Win32cr::Foundation::BOOL

    fun UnlockFile(hFile : Win32cr::Foundation::HANDLE, dwFileOffsetLow : UInt32, dwFileOffsetHigh : UInt32, nNumberOfBytesToUnlockLow : UInt32, nNumberOfBytesToUnlockHigh : UInt32) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun UnlockFileEx(hFile : Win32cr::Foundation::HANDLE, dwReserved : UInt32, nNumberOfBytesToUnlockLow : UInt32, nNumberOfBytesToUnlockHigh : UInt32, lpOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun WriteFile(hFile : Win32cr::Foundation::HANDLE, lpBuffer : Void*, nNumberOfBytesToWrite : UInt32, lpNumberOfBytesWritten : UInt32*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun WriteFileEx(hFile : Win32cr::Foundation::HANDLE, lpBuffer : Void*, nNumberOfBytesToWrite : UInt32, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpCompletionRoutine : Win32cr::System::IO::LPOVERLAPPED_COMPLETION_ROUTINE) : Win32cr::Foundation::BOOL

    fun WriteFileGather(hFile : Win32cr::Foundation::HANDLE, aSegmentArray : Win32cr::Storage::FileSystem::FILE_SEGMENT_ELEMENT*, nNumberOfBytesToWrite : UInt32, lpReserved : UInt32*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun GetTempPathW(nBufferLength : UInt32, lpBuffer : UInt16*) : UInt32

    fun GetVolumeNameForVolumeMountPointW(lpszVolumeMountPoint : Win32cr::Foundation::PWSTR, lpszVolumeName : UInt16*, cchBufferLength : UInt32) : Win32cr::Foundation::BOOL

    fun GetVolumePathNamesForVolumeNameW(lpszVolumeName : Win32cr::Foundation::PWSTR, lpszVolumePathNames : UInt16*, cchBufferLength : UInt32, lpcchReturnLength : UInt32*) : Win32cr::Foundation::BOOL

    fun CreateFile2(lpFileName : Win32cr::Foundation::PWSTR, dwDesiredAccess : Win32cr::Storage::FileSystem::FILE_ACCESS_FLAGS, dwShareMode : Win32cr::Storage::FileSystem::FILE_SHARE_MODE, dwCreationDisposition : Win32cr::Storage::FileSystem::FILE_CREATION_DISPOSITION, pCreateExParams : Win32cr::Storage::FileSystem::CREATEFILE2_EXTENDED_PARAMETERS*) : Win32cr::Foundation::HANDLE

    fun SetFileIoOverlappedRange(file_handle : Win32cr::Foundation::HANDLE, overlapped_range_start : UInt8*, length : UInt32) : Win32cr::Foundation::BOOL

    fun GetCompressedFileSizeA(lpFileName : Win32cr::Foundation::PSTR, lpFileSizeHigh : UInt32*) : UInt32

    fun GetCompressedFileSizeW(lpFileName : Win32cr::Foundation::PWSTR, lpFileSizeHigh : UInt32*) : UInt32

    fun FindFirstStreamW(lpFileName : Win32cr::Foundation::PWSTR, info_level : Win32cr::Storage::FileSystem::STREAM_INFO_LEVELS, lpFindStreamData : Void*, dwFlags : UInt32) : Win32cr::Storage::FileSystem::FindStreamHandle

    fun FindNextStreamW(hFindStream : Win32cr::Storage::FileSystem::FindStreamHandle, lpFindStreamData : Void*) : Win32cr::Foundation::BOOL

    fun AreFileApisANSI : Win32cr::Foundation::BOOL

    fun GetTempPathA(nBufferLength : UInt32, lpBuffer : UInt8*) : UInt32

    fun FindFirstFileNameW(lpFileName : Win32cr::Foundation::PWSTR, dwFlags : UInt32, string_length : UInt32*, link_name : UInt16*) : Win32cr::Storage::FileSystem::FindFileNameHandle

    fun FindNextFileNameW(hFindStream : Win32cr::Storage::FileSystem::FindFileNameHandle, string_length : UInt32*, link_name : UInt16*) : Win32cr::Foundation::BOOL

    fun GetVolumeInformationA(lpRootPathName : Win32cr::Foundation::PSTR, lpVolumeNameBuffer : UInt8*, nVolumeNameSize : UInt32, lpVolumeSerialNumber : UInt32*, lpMaximumComponentLength : UInt32*, lpFileSystemFlags : UInt32*, lpFileSystemNameBuffer : UInt8*, nFileSystemNameSize : UInt32) : Win32cr::Foundation::BOOL

    fun GetTempFileNameA(lpPathName : Win32cr::Foundation::PSTR, lpPrefixString : Win32cr::Foundation::PSTR, uUnique : UInt32, lpTempFileName : UInt8*) : UInt32

    fun SetFileApisToOEM : Void

    fun SetFileApisToANSI : Void

    fun GetTempPath2W(buffer_length : UInt32, buffer : UInt16*) : UInt32

    fun GetTempPath2A(buffer_length : UInt32, buffer : UInt8*) : UInt32

    fun CopyFileFromAppW(lpExistingFileName : Win32cr::Foundation::PWSTR, lpNewFileName : Win32cr::Foundation::PWSTR, bFailIfExists : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL

    fun CreateDirectoryFromAppW(lpPathName : Win32cr::Foundation::PWSTR, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*) : Win32cr::Foundation::BOOL

    fun CreateFileFromAppW(lpFileName : Win32cr::Foundation::PWSTR, dwDesiredAccess : UInt32, dwShareMode : UInt32, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, dwCreationDisposition : UInt32, dwFlagsAndAttributes : UInt32, hTemplateFile : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HANDLE

    fun CreateFile2FromAppW(lpFileName : Win32cr::Foundation::PWSTR, dwDesiredAccess : UInt32, dwShareMode : UInt32, dwCreationDisposition : UInt32, pCreateExParams : Win32cr::Storage::FileSystem::CREATEFILE2_EXTENDED_PARAMETERS*) : Win32cr::Foundation::HANDLE

    fun DeleteFileFromAppW(lpFileName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    fun FindFirstFileExFromAppW(lpFileName : Win32cr::Foundation::PWSTR, fInfoLevelId : Win32cr::Storage::FileSystem::FINDEX_INFO_LEVELS, lpFindFileData : Void*, fSearchOp : Win32cr::Storage::FileSystem::FINDEX_SEARCH_OPS, lpSearchFilter : Void*, dwAdditionalFlags : UInt32) : Win32cr::Foundation::HANDLE

    fun GetFileAttributesExFromAppW(lpFileName : Win32cr::Foundation::PWSTR, fInfoLevelId : Win32cr::Storage::FileSystem::GET_FILEEX_INFO_LEVELS, lpFileInformation : Void*) : Win32cr::Foundation::BOOL

    fun MoveFileFromAppW(lpExistingFileName : Win32cr::Foundation::PWSTR, lpNewFileName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    fun RemoveDirectoryFromAppW(lpPathName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    fun ReplaceFileFromAppW(lpReplacedFileName : Win32cr::Foundation::PWSTR, lpReplacementFileName : Win32cr::Foundation::PWSTR, lpBackupFileName : Win32cr::Foundation::PWSTR, dwReplaceFlags : UInt32, lpExclude : Void*, lpReserved : Void*) : Win32cr::Foundation::BOOL

    fun SetFileAttributesFromAppW(lpFileName : Win32cr::Foundation::PWSTR, dwFileAttributes : UInt32) : Win32cr::Foundation::BOOL

    fun VerFindFileA(uFlags : Win32cr::Storage::FileSystem::VER_FIND_FILE_FLAGS, szFileName : Win32cr::Foundation::PSTR, szWinDir : Win32cr::Foundation::PSTR, szAppDir : Win32cr::Foundation::PSTR, szCurDir : UInt8*, puCurDirLen : UInt32*, szDestDir : UInt8*, puDestDirLen : UInt32*) : Win32cr::Storage::FileSystem::VER_FIND_FILE_STATUS

    fun VerFindFileW(uFlags : Win32cr::Storage::FileSystem::VER_FIND_FILE_FLAGS, szFileName : Win32cr::Foundation::PWSTR, szWinDir : Win32cr::Foundation::PWSTR, szAppDir : Win32cr::Foundation::PWSTR, szCurDir : UInt16*, puCurDirLen : UInt32*, szDestDir : UInt16*, puDestDirLen : UInt32*) : Win32cr::Storage::FileSystem::VER_FIND_FILE_STATUS

    fun VerInstallFileA(uFlags : Win32cr::Storage::FileSystem::VER_INSTALL_FILE_FLAGS, szSrcFileName : Win32cr::Foundation::PSTR, szDestFileName : Win32cr::Foundation::PSTR, szSrcDir : Win32cr::Foundation::PSTR, szDestDir : Win32cr::Foundation::PSTR, szCurDir : Win32cr::Foundation::PSTR, szTmpFile : UInt8*, puTmpFileLen : UInt32*) : Win32cr::Storage::FileSystem::VER_INSTALL_FILE_STATUS

    fun VerInstallFileW(uFlags : Win32cr::Storage::FileSystem::VER_INSTALL_FILE_FLAGS, szSrcFileName : Win32cr::Foundation::PWSTR, szDestFileName : Win32cr::Foundation::PWSTR, szSrcDir : Win32cr::Foundation::PWSTR, szDestDir : Win32cr::Foundation::PWSTR, szCurDir : Win32cr::Foundation::PWSTR, szTmpFile : UInt16*, puTmpFileLen : UInt32*) : Win32cr::Storage::FileSystem::VER_INSTALL_FILE_STATUS

    fun GetFileVersionInfoSizeA(lptstrFilename : Win32cr::Foundation::PSTR, lpdwHandle : UInt32*) : UInt32

    fun GetFileVersionInfoSizeW(lptstrFilename : Win32cr::Foundation::PWSTR, lpdwHandle : UInt32*) : UInt32

    fun GetFileVersionInfoA(lptstrFilename : Win32cr::Foundation::PSTR, dwHandle : UInt32, dwLen : UInt32, lpData : Void*) : Win32cr::Foundation::BOOL

    fun GetFileVersionInfoW(lptstrFilename : Win32cr::Foundation::PWSTR, dwHandle : UInt32, dwLen : UInt32, lpData : Void*) : Win32cr::Foundation::BOOL

    fun GetFileVersionInfoSizeExA(dwFlags : Win32cr::Storage::FileSystem::GET_FILE_VERSION_INFO_FLAGS, lpwstrFilename : Win32cr::Foundation::PSTR, lpdwHandle : UInt32*) : UInt32

    fun GetFileVersionInfoSizeExW(dwFlags : Win32cr::Storage::FileSystem::GET_FILE_VERSION_INFO_FLAGS, lpwstrFilename : Win32cr::Foundation::PWSTR, lpdwHandle : UInt32*) : UInt32

    fun GetFileVersionInfoExA(dwFlags : Win32cr::Storage::FileSystem::GET_FILE_VERSION_INFO_FLAGS, lpwstrFilename : Win32cr::Foundation::PSTR, dwHandle : UInt32, dwLen : UInt32, lpData : Void*) : Win32cr::Foundation::BOOL

    fun GetFileVersionInfoExW(dwFlags : Win32cr::Storage::FileSystem::GET_FILE_VERSION_INFO_FLAGS, lpwstrFilename : Win32cr::Foundation::PWSTR, dwHandle : UInt32, dwLen : UInt32, lpData : Void*) : Win32cr::Foundation::BOOL

    fun VerLanguageNameA(wLang : UInt32, szLang : UInt8*, cchLang : UInt32) : UInt32

    fun VerLanguageNameW(wLang : UInt32, szLang : UInt16*, cchLang : UInt32) : UInt32

    fun VerQueryValueA(pBlock : Void*, lpSubBlock : Win32cr::Foundation::PSTR, lplpBuffer : Void**, puLen : UInt32*) : Win32cr::Foundation::BOOL

    fun VerQueryValueW(pBlock : Void*, lpSubBlock : Win32cr::Foundation::PWSTR, lplpBuffer : Void**, puLen : UInt32*) : Win32cr::Foundation::BOOL

    fun LsnEqual(plsn1 : Win32cr::Storage::FileSystem::CLS_LSN*, plsn2 : Win32cr::Storage::FileSystem::CLS_LSN*) : Win32cr::Foundation::BOOLEAN

    fun LsnLess(plsn1 : Win32cr::Storage::FileSystem::CLS_LSN*, plsn2 : Win32cr::Storage::FileSystem::CLS_LSN*) : Win32cr::Foundation::BOOLEAN

    fun LsnGreater(plsn1 : Win32cr::Storage::FileSystem::CLS_LSN*, plsn2 : Win32cr::Storage::FileSystem::CLS_LSN*) : Win32cr::Foundation::BOOLEAN

    fun LsnNull(plsn : Win32cr::Storage::FileSystem::CLS_LSN*) : Win32cr::Foundation::BOOLEAN

    fun LsnContainer(plsn : Win32cr::Storage::FileSystem::CLS_LSN*) : UInt32

    fun LsnCreate(cidContainer : UInt32, offBlock : UInt32, cRecord : UInt32) : Win32cr::Storage::FileSystem::CLS_LSN

    fun LsnBlockOffset(plsn : Win32cr::Storage::FileSystem::CLS_LSN*) : UInt32

    fun LsnRecordSequence(plsn : Win32cr::Storage::FileSystem::CLS_LSN*) : UInt32

    fun LsnInvalid(plsn : Win32cr::Storage::FileSystem::CLS_LSN*) : Win32cr::Foundation::BOOLEAN

    fun LsnIncrement(plsn : Win32cr::Storage::FileSystem::CLS_LSN*) : Win32cr::Storage::FileSystem::CLS_LSN

    fun CreateLogFile(pszLogFileName : Win32cr::Foundation::PWSTR, fDesiredAccess : Win32cr::Storage::FileSystem::FILE_ACCESS_FLAGS, dwShareMode : Win32cr::Storage::FileSystem::FILE_SHARE_MODE, psaLogFile : Win32cr::Security::SECURITY_ATTRIBUTES*, fCreateDisposition : Win32cr::Storage::FileSystem::FILE_CREATION_DISPOSITION, fFlagsAndAttributes : Win32cr::Storage::FileSystem::FILE_FLAGS_AND_ATTRIBUTES) : Win32cr::Foundation::HANDLE

    fun DeleteLogByHandle(hLog : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun DeleteLogFile(pszLogFileName : Win32cr::Foundation::PWSTR, pvReserved : Void*) : Win32cr::Foundation::BOOL

    fun AddLogContainer(hLog : Win32cr::Foundation::HANDLE, pcbContainer : UInt64*, pwszContainerPath : Win32cr::Foundation::PWSTR, pReserved : Void*) : Win32cr::Foundation::BOOL

    fun AddLogContainerSet(hLog : Win32cr::Foundation::HANDLE, cContainer : UInt16, pcbContainer : UInt64*, rgwszContainerPath : Win32cr::Foundation::PWSTR*, pReserved : Void*) : Win32cr::Foundation::BOOL

    fun RemoveLogContainer(hLog : Win32cr::Foundation::HANDLE, pwszContainerPath : Win32cr::Foundation::PWSTR, fForce : Win32cr::Foundation::BOOL, pReserved : Void*) : Win32cr::Foundation::BOOL

    fun RemoveLogContainerSet(hLog : Win32cr::Foundation::HANDLE, cContainer : UInt16, rgwszContainerPath : Win32cr::Foundation::PWSTR*, fForce : Win32cr::Foundation::BOOL, pReserved : Void*) : Win32cr::Foundation::BOOL

    fun SetLogArchiveTail(hLog : Win32cr::Foundation::HANDLE, plsnArchiveTail : Win32cr::Storage::FileSystem::CLS_LSN*, pReserved : Void*) : Win32cr::Foundation::BOOL

    fun SetEndOfLog(hLog : Win32cr::Foundation::HANDLE, plsnEnd : Win32cr::Storage::FileSystem::CLS_LSN*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun TruncateLog(pvMarshal : Void*, plsnEnd : Win32cr::Storage::FileSystem::CLS_LSN*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun CreateLogContainerScanContext(hLog : Win32cr::Foundation::HANDLE, cFromContainer : UInt32, cContainers : UInt32, eScanMode : UInt8, pcxScan : Win32cr::Storage::FileSystem::CLS_SCAN_CONTEXT*, pOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun ScanLogContainers(pcxScan : Win32cr::Storage::FileSystem::CLS_SCAN_CONTEXT*, eScanMode : UInt8, pReserved : Void*) : Win32cr::Foundation::BOOL

    fun AlignReservedLog(pvMarshal : Void*, cReservedRecords : UInt32, rgcbReservation : Int64*, pcbAlignReservation : Int64*) : Win32cr::Foundation::BOOL

    fun AllocReservedLog(pvMarshal : Void*, cReservedRecords : UInt32, pcbAdjustment : Int64*) : Win32cr::Foundation::BOOL

    fun FreeReservedLog(pvMarshal : Void*, cReservedRecords : UInt32, pcbAdjustment : Int64*) : Win32cr::Foundation::BOOL

    fun GetLogFileInformation(hLog : Win32cr::Foundation::HANDLE, pinfoBuffer : Win32cr::Storage::FileSystem::CLS_INFORMATION*, cbBuffer : UInt32*) : Win32cr::Foundation::BOOL

    fun SetLogArchiveMode(hLog : Win32cr::Foundation::HANDLE, eMode : Win32cr::Storage::FileSystem::CLFS_LOG_ARCHIVE_MODE) : Win32cr::Foundation::BOOL

    fun ReadLogRestartArea(pvMarshal : Void*, ppvRestartBuffer : Void**, pcbRestartBuffer : UInt32*, plsn : Win32cr::Storage::FileSystem::CLS_LSN*, ppvContext : Void**, pOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun ReadPreviousLogRestartArea(pvReadContext : Void*, ppvRestartBuffer : Void**, pcbRestartBuffer : UInt32*, plsnRestart : Win32cr::Storage::FileSystem::CLS_LSN*, pOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun WriteLogRestartArea(pvMarshal : Void*, pvRestartBuffer : Void*, cbRestartBuffer : UInt32, plsnBase : Win32cr::Storage::FileSystem::CLS_LSN*, fFlags : Win32cr::Storage::FileSystem::CLFS_FLAG, pcbWritten : UInt32*, plsnNext : Win32cr::Storage::FileSystem::CLS_LSN*, pOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun GetLogReservationInfo(pvMarshal : Void*, pcbRecordNumber : UInt32*, pcbUserReservation : Int64*, pcbCommitReservation : Int64*) : Win32cr::Foundation::BOOL

    fun AdvanceLogBase(pvMarshal : Void*, plsnBase : Win32cr::Storage::FileSystem::CLS_LSN*, fFlags : UInt32, pOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun CloseAndResetLogFile(hLog : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun CreateLogMarshallingArea(hLog : Win32cr::Foundation::HANDLE, pfnAllocBuffer : Win32cr::Storage::FileSystem::CLFS_BLOCK_ALLOCATION, pfnFreeBuffer : Win32cr::Storage::FileSystem::CLFS_BLOCK_DEALLOCATION, pvBlockAllocContext : Void*, cbMarshallingBuffer : UInt32, cMaxWriteBuffers : UInt32, cMaxReadBuffers : UInt32, ppvMarshal : Void**) : Win32cr::Foundation::BOOL

    fun DeleteLogMarshallingArea(pvMarshal : Void*) : Win32cr::Foundation::BOOL

    fun ReserveAndAppendLog(pvMarshal : Void*, rgWriteEntries : Win32cr::Storage::FileSystem::CLS_WRITE_ENTRY*, cWriteEntries : UInt32, plsnUndoNext : Win32cr::Storage::FileSystem::CLS_LSN*, plsnPrevious : Win32cr::Storage::FileSystem::CLS_LSN*, cReserveRecords : UInt32, rgcbReservation : Int64*, fFlags : Win32cr::Storage::FileSystem::CLFS_FLAG, plsn : Win32cr::Storage::FileSystem::CLS_LSN*, pOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun ReserveAndAppendLogAligned(pvMarshal : Void*, rgWriteEntries : Win32cr::Storage::FileSystem::CLS_WRITE_ENTRY*, cWriteEntries : UInt32, cbEntryAlignment : UInt32, plsnUndoNext : Win32cr::Storage::FileSystem::CLS_LSN*, plsnPrevious : Win32cr::Storage::FileSystem::CLS_LSN*, cReserveRecords : UInt32, rgcbReservation : Int64*, fFlags : Win32cr::Storage::FileSystem::CLFS_FLAG, plsn : Win32cr::Storage::FileSystem::CLS_LSN*, pOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun FlushLogBuffers(pvMarshal : Void*, pOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun FlushLogToLsn(pvMarshalContext : Void*, plsnFlush : Win32cr::Storage::FileSystem::CLS_LSN*, plsnLastFlushed : Win32cr::Storage::FileSystem::CLS_LSN*, pOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun ReadLogRecord(pvMarshal : Void*, plsnFirst : Win32cr::Storage::FileSystem::CLS_LSN*, eContextMode : Win32cr::Storage::FileSystem::CLFS_CONTEXT_MODE, ppvReadBuffer : Void**, pcbReadBuffer : UInt32*, peRecordType : UInt8*, plsnUndoNext : Win32cr::Storage::FileSystem::CLS_LSN*, plsnPrevious : Win32cr::Storage::FileSystem::CLS_LSN*, ppvReadContext : Void**, pOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun ReadNextLogRecord(pvReadContext : Void*, ppvBuffer : Void**, pcbBuffer : UInt32*, peRecordType : UInt8*, plsnUser : Win32cr::Storage::FileSystem::CLS_LSN*, plsnUndoNext : Win32cr::Storage::FileSystem::CLS_LSN*, plsnPrevious : Win32cr::Storage::FileSystem::CLS_LSN*, plsnRecord : Win32cr::Storage::FileSystem::CLS_LSN*, pOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun TerminateReadLog(pvCursorContext : Void*) : Win32cr::Foundation::BOOL

    fun PrepareLogArchive(hLog : Win32cr::Foundation::HANDLE, pszBaseLogFileName : UInt16*, cLen : UInt32, plsnLow : Win32cr::Storage::FileSystem::CLS_LSN*, plsnHigh : Win32cr::Storage::FileSystem::CLS_LSN*, pcActualLength : UInt32*, poffBaseLogFileData : UInt64*, pcbBaseLogFileLength : UInt64*, plsnBase : Win32cr::Storage::FileSystem::CLS_LSN*, plsnLast : Win32cr::Storage::FileSystem::CLS_LSN*, plsnCurrentArchiveTail : Win32cr::Storage::FileSystem::CLS_LSN*, ppvArchiveContext : Void**) : Win32cr::Foundation::BOOL

    fun ReadLogArchiveMetadata(pvArchiveContext : Void*, cbOffset : UInt32, cbBytesToRead : UInt32, pbReadBuffer : UInt8*, pcbBytesRead : UInt32*) : Win32cr::Foundation::BOOL

    fun GetNextLogArchiveExtent(pvArchiveContext : Void*, rgadExtent : Win32cr::Storage::FileSystem::CLS_ARCHIVE_DESCRIPTOR*, cDescriptors : UInt32, pcDescriptorsReturned : UInt32*) : Win32cr::Foundation::BOOL

    fun TerminateLogArchive(pvArchiveContext : Void*) : Win32cr::Foundation::BOOL

    fun ValidateLog(pszLogFileName : Win32cr::Foundation::PWSTR, psaLogFile : Win32cr::Security::SECURITY_ATTRIBUTES*, pinfoBuffer : Win32cr::Storage::FileSystem::CLS_INFORMATION*, pcbBuffer : UInt32*) : Win32cr::Foundation::BOOL

    fun GetLogContainerName(hLog : Win32cr::Foundation::HANDLE, cidLogicalContainer : UInt32, pwstrContainerName : Win32cr::Foundation::PWSTR, cLenContainerName : UInt32, pcActualLenContainerName : UInt32*) : Win32cr::Foundation::BOOL

    fun GetLogIoStatistics(hLog : Win32cr::Foundation::HANDLE, pvStatsBuffer : Void*, cbStatsBuffer : UInt32, eStatsClass : Win32cr::Storage::FileSystem::CLFS_IOSTATS_CLASS, pcbStatsWritten : UInt32*) : Win32cr::Foundation::BOOL

    fun RegisterManageableLogClient(hLog : Win32cr::Foundation::HANDLE, pCallbacks : Win32cr::Storage::FileSystem::LOG_MANAGEMENT_CALLBACKS*) : Win32cr::Foundation::BOOL

    fun DeregisterManageableLogClient(hLog : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun ReadLogNotification(hLog : Win32cr::Foundation::HANDLE, pNotification : Win32cr::Storage::FileSystem::CLFS_MGMT_NOTIFICATION*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun InstallLogPolicy(hLog : Win32cr::Foundation::HANDLE, pPolicy : Win32cr::Storage::FileSystem::CLFS_MGMT_POLICY*) : Win32cr::Foundation::BOOL

    fun RemoveLogPolicy(hLog : Win32cr::Foundation::HANDLE, ePolicyType : Win32cr::Storage::FileSystem::CLFS_MGMT_POLICY_TYPE) : Win32cr::Foundation::BOOL

    fun QueryLogPolicy(hLog : Win32cr::Foundation::HANDLE, ePolicyType : Win32cr::Storage::FileSystem::CLFS_MGMT_POLICY_TYPE, pPolicyBuffer : Win32cr::Storage::FileSystem::CLFS_MGMT_POLICY*, pcbPolicyBuffer : UInt32*) : Win32cr::Foundation::BOOL

    fun SetLogFileSizeWithPolicy(hLog : Win32cr::Foundation::HANDLE, pDesiredSize : UInt64*, pResultingSize : UInt64*) : Win32cr::Foundation::BOOL

    fun HandleLogFull(hLog : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun LogTailAdvanceFailure(hLog : Win32cr::Foundation::HANDLE, dwReason : UInt32) : Win32cr::Foundation::BOOL

    fun RegisterForLogWriteNotification(hLog : Win32cr::Foundation::HANDLE, cbThreshold : UInt32, fEnable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL

    fun QueryUsersOnEncryptedFile(lpFileName : Win32cr::Foundation::PWSTR, pUsers : Win32cr::Storage::FileSystem::ENCRYPTION_CERTIFICATE_HASH_LIST**) : UInt32

    fun QueryRecoveryAgentsOnEncryptedFile(lpFileName : Win32cr::Foundation::PWSTR, pRecoveryAgents : Win32cr::Storage::FileSystem::ENCRYPTION_CERTIFICATE_HASH_LIST**) : UInt32

    fun RemoveUsersFromEncryptedFile(lpFileName : Win32cr::Foundation::PWSTR, pHashes : Win32cr::Storage::FileSystem::ENCRYPTION_CERTIFICATE_HASH_LIST*) : UInt32

    fun AddUsersToEncryptedFile(lpFileName : Win32cr::Foundation::PWSTR, pEncryptionCertificates : Win32cr::Storage::FileSystem::ENCRYPTION_CERTIFICATE_LIST*) : UInt32

    fun SetUserFileEncryptionKey(pEncryptionCertificate : Win32cr::Storage::FileSystem::ENCRYPTION_CERTIFICATE*) : UInt32

    fun SetUserFileEncryptionKeyEx(pEncryptionCertificate : Win32cr::Storage::FileSystem::ENCRYPTION_CERTIFICATE*, dwCapabilities : UInt32, dwFlags : UInt32, pvReserved : Void*) : UInt32

    fun FreeEncryptionCertificateHashList(pUsers : Win32cr::Storage::FileSystem::ENCRYPTION_CERTIFICATE_HASH_LIST*) : Void

    fun EncryptionDisable(dir_path : Win32cr::Foundation::PWSTR, disable : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL

    fun DuplicateEncryptionInfoFile(src_file_name : Win32cr::Foundation::PWSTR, dst_file_name : Win32cr::Foundation::PWSTR, dwCreationDistribution : UInt32, dwAttributes : UInt32, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*) : UInt32

    fun GetEncryptedFileMetadata(lpFileName : Win32cr::Foundation::PWSTR, pcbMetadata : UInt32*, ppbMetadata : UInt8**) : UInt32

    fun SetEncryptedFileMetadata(lpFileName : Win32cr::Foundation::PWSTR, pbOldMetadata : UInt8*, pbNewMetadata : UInt8*, pOwnerHash : Win32cr::Storage::FileSystem::ENCRYPTION_CERTIFICATE_HASH*, dwOperation : UInt32, pCertificatesAdded : Win32cr::Storage::FileSystem::ENCRYPTION_CERTIFICATE_HASH_LIST*) : UInt32

    fun FreeEncryptedFileMetadata(pbMetadata : UInt8*) : Void

    fun LZStart : Int32

    fun LZDone : Void

    fun CopyLZFile(hfSource : Int32, hfDest : Int32) : Int32

    fun LZCopy(hfSource : Int32, hfDest : Int32) : Int32

    fun LZInit(hfSource : Int32) : Int32

    fun GetExpandedNameA(lpszSource : Win32cr::Foundation::PSTR, lpszBuffer : UInt8*) : Int32

    fun GetExpandedNameW(lpszSource : Win32cr::Foundation::PWSTR, lpszBuffer : UInt16*) : Int32

    fun LZOpenFileA(lpFileName : Win32cr::Foundation::PSTR, lpReOpenBuf : Win32cr::Storage::FileSystem::OFSTRUCT*, wStyle : Win32cr::Storage::FileSystem::LZOPENFILE_STYLE) : Int32

    fun LZOpenFileW(lpFileName : Win32cr::Foundation::PWSTR, lpReOpenBuf : Win32cr::Storage::FileSystem::OFSTRUCT*, wStyle : Win32cr::Storage::FileSystem::LZOPENFILE_STYLE) : Int32

    fun LZSeek(hFile : Int32, lOffset : Int32, iOrigin : Int32) : Int32

    fun LZRead(hFile : Int32, lpBuffer : Win32cr::Foundation::PSTR, cbRead : Int32) : Int32

    fun LZClose(hFile : Int32) : Void

    fun WofShouldCompressBinaries(volume : Win32cr::Foundation::PWSTR, algorithm : UInt32*) : Win32cr::Foundation::BOOL

    fun WofGetDriverVersion(file_or_volume_handle : Win32cr::Foundation::HANDLE, provider : UInt32, wof_version : UInt32*) : Win32cr::Foundation::HRESULT

    fun WofSetFileDataLocation(file_handle : Win32cr::Foundation::HANDLE, provider : UInt32, external_file_info : Void*, length : UInt32) : Win32cr::Foundation::HRESULT

    fun WofIsExternalFile(file_path : Win32cr::Foundation::PWSTR, is_external_file : Win32cr::Foundation::BOOL*, provider : UInt32*, external_file_info : Void*, buffer_length : UInt32*) : Win32cr::Foundation::HRESULT

    fun WofEnumEntries(volume_name : Win32cr::Foundation::PWSTR, provider : UInt32, enum_proc : Win32cr::Storage::FileSystem::WofEnumEntryProc, user_data : Void*) : Win32cr::Foundation::HRESULT

    fun WofWimAddEntry(volume_name : Win32cr::Foundation::PWSTR, wim_path : Win32cr::Foundation::PWSTR, wim_type : UInt32, wim_index : UInt32, data_source_id : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::HRESULT

    fun WofWimEnumFiles(volume_name : Win32cr::Foundation::PWSTR, data_source_id : Win32cr::Foundation::LARGE_INTEGER, enum_proc : Win32cr::Storage::FileSystem::WofEnumFilesProc, user_data : Void*) : Win32cr::Foundation::HRESULT

    fun WofWimSuspendEntry(volume_name : Win32cr::Foundation::PWSTR, data_source_id : Win32cr::Foundation::LARGE_INTEGER) : Win32cr::Foundation::HRESULT

    fun WofWimRemoveEntry(volume_name : Win32cr::Foundation::PWSTR, data_source_id : Win32cr::Foundation::LARGE_INTEGER) : Win32cr::Foundation::HRESULT

    fun WofWimUpdateEntry(volume_name : Win32cr::Foundation::PWSTR, data_source_id : Win32cr::Foundation::LARGE_INTEGER, new_wim_path : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HRESULT

    fun WofFileEnumFiles(volume_name : Win32cr::Foundation::PWSTR, algorithm : UInt32, enum_proc : Win32cr::Storage::FileSystem::WofEnumFilesProc, user_data : Void*) : Win32cr::Foundation::HRESULT

    fun TxfLogCreateFileReadContext(log_path : Win32cr::Foundation::PWSTR, beginning_lsn : Win32cr::Storage::FileSystem::CLS_LSN, ending_lsn : Win32cr::Storage::FileSystem::CLS_LSN, txf_file_id : Win32cr::Storage::FileSystem::TXF_ID*, txf_log_context : Void**) : Win32cr::Foundation::BOOL

    fun TxfLogCreateRangeReadContext(log_path : Win32cr::Foundation::PWSTR, beginning_lsn : Win32cr::Storage::FileSystem::CLS_LSN, ending_lsn : Win32cr::Storage::FileSystem::CLS_LSN, beginning_virtual_clock : Win32cr::Foundation::LARGE_INTEGER*, ending_virtual_clock : Win32cr::Foundation::LARGE_INTEGER*, record_type_mask : UInt32, txf_log_context : Void**) : Win32cr::Foundation::BOOL

    fun TxfLogDestroyReadContext(txf_log_context : Void*) : Win32cr::Foundation::BOOL

    fun TxfLogReadRecords(txf_log_context : Void*, buffer_length : UInt32, buffer : Void*, bytes_used : UInt32*, record_count : UInt32*) : Win32cr::Foundation::BOOL

    fun TxfReadMetadataInfo(file_handle : Win32cr::Foundation::HANDLE, txf_file_id : Win32cr::Storage::FileSystem::TXF_ID*, last_lsn : Win32cr::Storage::FileSystem::CLS_LSN*, transaction_state : UInt32*, locking_transaction : LibC::GUID*) : Win32cr::Foundation::BOOL

    fun TxfLogRecordGetFileName(record_buffer : Void*, record_buffer_length_in_bytes : UInt32, name_buffer : Win32cr::Foundation::PWSTR, name_buffer_length_in_bytes : UInt32*, txf_id : Win32cr::Storage::FileSystem::TXF_ID*) : Win32cr::Foundation::BOOL

    fun TxfLogRecordGetGenericType(record_buffer : Void*, record_buffer_length_in_bytes : UInt32, generic_type : UInt32*, virtual_clock : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::BOOL

    fun TxfSetThreadMiniVersionForCreate(mini_version : UInt16) : Void

    fun TxfGetThreadMiniVersionForCreate(mini_version : UInt16*) : Void

    fun CreateTransaction(lpTransactionAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, uow : LibC::GUID*, create_options : UInt32, isolation_level : UInt32, isolation_flags : UInt32, timeout : UInt32, description : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HANDLE

    fun OpenTransaction(dwDesiredAccess : UInt32, transaction_id : LibC::GUID*) : Win32cr::Foundation::HANDLE

    fun CommitTransaction(transaction_handle : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun CommitTransactionAsync(transaction_handle : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun RollbackTransaction(transaction_handle : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun RollbackTransactionAsync(transaction_handle : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun GetTransactionId(transaction_handle : Win32cr::Foundation::HANDLE, transaction_id : LibC::GUID*) : Win32cr::Foundation::BOOL

    fun GetTransactionInformation(transaction_handle : Win32cr::Foundation::HANDLE, outcome : UInt32*, isolation_level : UInt32*, isolation_flags : UInt32*, timeout : UInt32*, buffer_length : UInt32, description : UInt16*) : Win32cr::Foundation::BOOL

    fun SetTransactionInformation(transaction_handle : Win32cr::Foundation::HANDLE, isolation_level : UInt32, isolation_flags : UInt32, timeout : UInt32, description : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    fun CreateTransactionManager(lpTransactionAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, log_file_name : Win32cr::Foundation::PWSTR, create_options : UInt32, commit_strength : UInt32) : Win32cr::Foundation::HANDLE

    fun OpenTransactionManager(log_file_name : Win32cr::Foundation::PWSTR, desired_access : UInt32, open_options : UInt32) : Win32cr::Foundation::HANDLE

    fun OpenTransactionManagerById(transaction_manager_id : LibC::GUID*, desired_access : UInt32, open_options : UInt32) : Win32cr::Foundation::HANDLE

    fun RenameTransactionManager(log_file_name : Win32cr::Foundation::PWSTR, existing_transaction_manager_guid : LibC::GUID*) : Win32cr::Foundation::BOOL

    fun RollforwardTransactionManager(transaction_manager_handle : Win32cr::Foundation::HANDLE, tm_virtual_clock : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::BOOL

    fun RecoverTransactionManager(transaction_manager_handle : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun GetCurrentClockTransactionManager(transaction_manager_handle : Win32cr::Foundation::HANDLE, tm_virtual_clock : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::BOOL

    fun GetTransactionManagerId(transaction_manager_handle : Win32cr::Foundation::HANDLE, transaction_manager_id : LibC::GUID*) : Win32cr::Foundation::BOOL

    fun CreateResourceManager(lpResourceManagerAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, resource_manager_id : LibC::GUID*, create_options : UInt32, tm_handle : Win32cr::Foundation::HANDLE, description : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::HANDLE

    fun OpenResourceManager(dwDesiredAccess : UInt32, tm_handle : Win32cr::Foundation::HANDLE, resource_manager_id : LibC::GUID*) : Win32cr::Foundation::HANDLE

    fun RecoverResourceManager(resource_manager_handle : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun GetNotificationResourceManager(resource_manager_handle : Win32cr::Foundation::HANDLE, transaction_notification : Win32cr::Storage::FileSystem::TRANSACTION_NOTIFICATION*, notification_length : UInt32, dwMilliseconds : UInt32, return_length : UInt32*) : Win32cr::Foundation::BOOL

    fun GetNotificationResourceManagerAsync(resource_manager_handle : Win32cr::Foundation::HANDLE, transaction_notification : Win32cr::Storage::FileSystem::TRANSACTION_NOTIFICATION*, transaction_notification_length : UInt32, return_length : UInt32*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun SetResourceManagerCompletionPort(resource_manager_handle : Win32cr::Foundation::HANDLE, io_completion_port_handle : Win32cr::Foundation::HANDLE, completion_key : LibC::UIntPtrT) : Win32cr::Foundation::BOOL

    fun CreateEnlistment(lpEnlistmentAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, resource_manager_handle : Win32cr::Foundation::HANDLE, transaction_handle : Win32cr::Foundation::HANDLE, notification_mask : UInt32, create_options : UInt32, enlistment_key : Void*) : Win32cr::Foundation::HANDLE

    fun OpenEnlistment(dwDesiredAccess : UInt32, resource_manager_handle : Win32cr::Foundation::HANDLE, enlistment_id : LibC::GUID*) : Win32cr::Foundation::HANDLE

    fun RecoverEnlistment(enlistment_handle : Win32cr::Foundation::HANDLE, enlistment_key : Void*) : Win32cr::Foundation::BOOL

    fun GetEnlistmentRecoveryInformation(enlistment_handle : Win32cr::Foundation::HANDLE, buffer_size : UInt32, buffer : Void*, buffer_used : UInt32*) : Win32cr::Foundation::BOOL

    fun GetEnlistmentId(enlistment_handle : Win32cr::Foundation::HANDLE, enlistment_id : LibC::GUID*) : Win32cr::Foundation::BOOL

    fun SetEnlistmentRecoveryInformation(enlistment_handle : Win32cr::Foundation::HANDLE, buffer_size : UInt32, buffer : Void*) : Win32cr::Foundation::BOOL

    fun PrepareEnlistment(enlistment_handle : Win32cr::Foundation::HANDLE, tm_virtual_clock : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::BOOL

    fun PrePrepareEnlistment(enlistment_handle : Win32cr::Foundation::HANDLE, tm_virtual_clock : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::BOOL

    fun CommitEnlistment(enlistment_handle : Win32cr::Foundation::HANDLE, tm_virtual_clock : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::BOOL

    fun RollbackEnlistment(enlistment_handle : Win32cr::Foundation::HANDLE, tm_virtual_clock : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::BOOL

    fun PrePrepareComplete(enlistment_handle : Win32cr::Foundation::HANDLE, tm_virtual_clock : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::BOOL

    fun PrepareComplete(enlistment_handle : Win32cr::Foundation::HANDLE, tm_virtual_clock : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::BOOL

    fun ReadOnlyEnlistment(enlistment_handle : Win32cr::Foundation::HANDLE, tm_virtual_clock : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::BOOL

    fun CommitComplete(enlistment_handle : Win32cr::Foundation::HANDLE, tm_virtual_clock : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::BOOL

    fun RollbackComplete(enlistment_handle : Win32cr::Foundation::HANDLE, tm_virtual_clock : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::BOOL

    fun SinglePhaseReject(enlistment_handle : Win32cr::Foundation::HANDLE, tm_virtual_clock : Win32cr::Foundation::LARGE_INTEGER*) : Win32cr::Foundation::BOOL

    fun NetShareAdd(servername : Win32cr::Foundation::PWSTR, level : UInt32, buf : UInt8*, parm_err : UInt32*) : UInt32

    fun NetShareEnum(servername : Win32cr::Foundation::PWSTR, level : UInt32, bufptr : UInt8**, prefmaxlen : UInt32, entriesread : UInt32*, totalentries : UInt32*, resume_handle : UInt32*) : UInt32

    fun NetShareEnumSticky(servername : Win32cr::Foundation::PWSTR, level : UInt32, bufptr : UInt8**, prefmaxlen : UInt32, entriesread : UInt32*, totalentries : UInt32*, resume_handle : UInt32*) : UInt32

    fun NetShareGetInfo(servername : Win32cr::Foundation::PWSTR, netname : Win32cr::Foundation::PWSTR, level : UInt32, bufptr : UInt8**) : UInt32

    fun NetShareSetInfo(servername : Win32cr::Foundation::PWSTR, netname : Win32cr::Foundation::PWSTR, level : UInt32, buf : UInt8*, parm_err : UInt32*) : UInt32

    fun NetShareDel(servername : Win32cr::Foundation::PWSTR, netname : Win32cr::Foundation::PWSTR, reserved : UInt32) : UInt32

    fun NetShareDelSticky(servername : Win32cr::Foundation::PWSTR, netname : Win32cr::Foundation::PWSTR, reserved : UInt32) : UInt32

    fun NetShareCheck(servername : Win32cr::Foundation::PWSTR, device : Win32cr::Foundation::PWSTR, type__ : UInt32*) : UInt32

    fun NetShareDelEx(servername : Win32cr::Foundation::PWSTR, level : UInt32, buf : UInt8*) : UInt32

    fun NetServerAliasAdd(servername : Win32cr::Foundation::PWSTR, level : UInt32, buf : UInt8*) : UInt32

    fun NetServerAliasDel(servername : Win32cr::Foundation::PWSTR, level : UInt32, buf : UInt8*) : UInt32

    fun NetServerAliasEnum(servername : Win32cr::Foundation::PWSTR, level : UInt32, bufptr : UInt8**, prefmaxlen : UInt32, entriesread : UInt32*, totalentries : UInt32*, resumehandle : UInt32*) : UInt32

    fun NetSessionEnum(servername : Win32cr::Foundation::PWSTR, unc_client_name : Win32cr::Foundation::PWSTR, username : Win32cr::Foundation::PWSTR, level : UInt32, bufptr : UInt8**, prefmaxlen : UInt32, entriesread : UInt32*, totalentries : UInt32*, resume_handle : UInt32*) : UInt32

    fun NetSessionDel(servername : Win32cr::Foundation::PWSTR, unc_client_name : Win32cr::Foundation::PWSTR, username : Win32cr::Foundation::PWSTR) : UInt32

    fun NetSessionGetInfo(servername : Win32cr::Foundation::PWSTR, unc_client_name : Win32cr::Foundation::PWSTR, username : Win32cr::Foundation::PWSTR, level : UInt32, bufptr : UInt8**) : UInt32

    fun NetConnectionEnum(servername : Win32cr::Foundation::PWSTR, qualifier : Win32cr::Foundation::PWSTR, level : UInt32, bufptr : UInt8**, prefmaxlen : UInt32, entriesread : UInt32*, totalentries : UInt32*, resume_handle : UInt32*) : UInt32

    fun NetFileClose(servername : Win32cr::Foundation::PWSTR, fileid : UInt32) : UInt32

    fun NetFileEnum(servername : Win32cr::Foundation::PWSTR, basepath : Win32cr::Foundation::PWSTR, username : Win32cr::Foundation::PWSTR, level : UInt32, bufptr : UInt8**, prefmaxlen : UInt32, entriesread : UInt32*, totalentries : UInt32*, resume_handle : LibC::UIntPtrT*) : UInt32

    fun NetFileGetInfo(servername : Win32cr::Foundation::PWSTR, fileid : UInt32, level : UInt32, bufptr : UInt8**) : UInt32

    fun NetStatisticsGet(server_name : Int8*, service : Int8*, level : UInt32, options : UInt32, buffer : UInt8**) : UInt32

    fun QueryIoRingCapabilities(capabilities : Win32cr::Storage::FileSystem::IORING_CAPABILITIES*) : Win32cr::Foundation::HRESULT

    fun IsIoRingOpSupported(ioRing : Win32cr::Storage::FileSystem::HIORING__*, op : Win32cr::Storage::FileSystem::IORING_OP_CODE) : Win32cr::Foundation::BOOL

    fun CreateIoRing(ioringVersion : Win32cr::Storage::FileSystem::IORING_VERSION, flags : Win32cr::Storage::FileSystem::IORING_CREATE_FLAGS, submissionQueueSize : UInt32, completionQueueSize : UInt32, h : Win32cr::Storage::FileSystem::HIORING__**) : Win32cr::Foundation::HRESULT

    fun GetIoRingInfo(ioRing : Win32cr::Storage::FileSystem::HIORING__*, info : Win32cr::Storage::FileSystem::IORING_INFO*) : Win32cr::Foundation::HRESULT

    fun SubmitIoRing(ioRing : Win32cr::Storage::FileSystem::HIORING__*, waitOperations : UInt32, milliseconds : UInt32, submittedEntries : UInt32*) : Win32cr::Foundation::HRESULT

    fun CloseIoRing(ioRing : Win32cr::Storage::FileSystem::HIORING__*) : Win32cr::Foundation::HRESULT

    fun PopIoRingCompletion(ioRing : Win32cr::Storage::FileSystem::HIORING__*, cqe : Win32cr::Storage::FileSystem::IORING_CQE*) : Win32cr::Foundation::HRESULT

    fun SetIoRingCompletionEvent(ioRing : Win32cr::Storage::FileSystem::HIORING__*, hEvent : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::HRESULT

    fun BuildIoRingCancelRequest(ioRing : Win32cr::Storage::FileSystem::HIORING__*, file : Win32cr::Storage::FileSystem::IORING_HANDLE_REF, opToCancel : LibC::UIntPtrT, userData : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT

    fun BuildIoRingReadFile(ioRing : Win32cr::Storage::FileSystem::HIORING__*, fileRef : Win32cr::Storage::FileSystem::IORING_HANDLE_REF, dataRef : Win32cr::Storage::FileSystem::IORING_BUFFER_REF, numberOfBytesToRead : UInt32, fileOffset : UInt64, userData : LibC::UIntPtrT, flags : Win32cr::Storage::FileSystem::IORING_SQE_FLAGS) : Win32cr::Foundation::HRESULT

    fun BuildIoRingRegisterFileHandles(ioRing : Win32cr::Storage::FileSystem::HIORING__*, count : UInt32, handles : Win32cr::Foundation::HANDLE*, userData : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT

    fun BuildIoRingRegisterBuffers(ioRing : Win32cr::Storage::FileSystem::HIORING__*, count : UInt32, buffers : Win32cr::Storage::FileSystem::IORING_BUFFER_INFO*, userData : LibC::UIntPtrT) : Win32cr::Foundation::HRESULT

    fun Wow64EnableWow64FsRedirection(wow64_fs_enable_redirection : Win32cr::Foundation::BOOLEAN) : Win32cr::Foundation::BOOLEAN

    fun Wow64DisableWow64FsRedirection(old_value : Void**) : Win32cr::Foundation::BOOL

    fun Wow64RevertWow64FsRedirection(ol_value : Void*) : Win32cr::Foundation::BOOL

    fun GetBinaryTypeA(lpApplicationName : Win32cr::Foundation::PSTR, lpBinaryType : UInt32*) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun GetBinaryTypeW(lpApplicationName : Win32cr::Foundation::PWSTR, lpBinaryType : UInt32*) : Win32cr::Foundation::BOOL

    fun GetShortPathNameA(lpszLongPath : Win32cr::Foundation::PSTR, lpszShortPath : UInt8*, cchBuffer : UInt32) : UInt32

    fun GetLongPathNameTransactedA(lpszShortPath : Win32cr::Foundation::PSTR, lpszLongPath : UInt8*, cchBuffer : UInt32, hTransaction : Win32cr::Foundation::HANDLE) : UInt32

    fun GetLongPathNameTransactedW(lpszShortPath : Win32cr::Foundation::PWSTR, lpszLongPath : UInt16*, cchBuffer : UInt32, hTransaction : Win32cr::Foundation::HANDLE) : UInt32

    # Commented out due to being part of LibC
    #fun SetFileCompletionNotificationModes(file_handle : Win32cr::Foundation::HANDLE, flags : UInt8) : Win32cr::Foundation::BOOL

    fun SetFileShortNameA(hFile : Win32cr::Foundation::HANDLE, lpShortName : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    fun SetFileShortNameW(hFile : Win32cr::Foundation::HANDLE, lpShortName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    fun SetTapePosition(hDevice : Win32cr::Foundation::HANDLE, dwPositionMethod : Win32cr::Storage::FileSystem::TAPE_POSITION_METHOD, dwPartition : UInt32, dwOffsetLow : UInt32, dwOffsetHigh : UInt32, bImmediate : Win32cr::Foundation::BOOL) : UInt32

    fun GetTapePosition(hDevice : Win32cr::Foundation::HANDLE, dwPositionType : Win32cr::Storage::FileSystem::TAPE_POSITION_TYPE, lpdwPartition : UInt32*, lpdwOffsetLow : UInt32*, lpdwOffsetHigh : UInt32*) : UInt32

    fun PrepareTape(hDevice : Win32cr::Foundation::HANDLE, dwOperation : Win32cr::Storage::FileSystem::PREPARE_TAPE_OPERATION, bImmediate : Win32cr::Foundation::BOOL) : UInt32

    fun EraseTape(hDevice : Win32cr::Foundation::HANDLE, dwEraseType : Win32cr::Storage::FileSystem::ERASE_TAPE_TYPE, bImmediate : Win32cr::Foundation::BOOL) : UInt32

    fun CreateTapePartition(hDevice : Win32cr::Foundation::HANDLE, dwPartitionMethod : Win32cr::Storage::FileSystem::CREATE_TAPE_PARTITION_METHOD, dwCount : UInt32, dwSize : UInt32) : UInt32

    fun WriteTapemark(hDevice : Win32cr::Foundation::HANDLE, dwTapemarkType : Win32cr::Storage::FileSystem::TAPEMARK_TYPE, dwTapemarkCount : UInt32, bImmediate : Win32cr::Foundation::BOOL) : UInt32

    fun GetTapeStatus(hDevice : Win32cr::Foundation::HANDLE) : UInt32

    fun GetTapeParameters(hDevice : Win32cr::Foundation::HANDLE, dwOperation : Win32cr::Storage::FileSystem::GET_TAPE_DRIVE_PARAMETERS_OPERATION, lpdwSize : UInt32*, lpTapeInformation : Void*) : UInt32

    fun SetTapeParameters(hDevice : Win32cr::Foundation::HANDLE, dwOperation : Win32cr::Storage::FileSystem::TAPE_INFORMATION_TYPE, lpTapeInformation : Void*) : UInt32

    fun EncryptFileA(lpFileName : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    fun EncryptFileW(lpFileName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    fun DecryptFileA(lpFileName : Win32cr::Foundation::PSTR, dwReserved : UInt32) : Win32cr::Foundation::BOOL

    fun DecryptFileW(lpFileName : Win32cr::Foundation::PWSTR, dwReserved : UInt32) : Win32cr::Foundation::BOOL

    fun FileEncryptionStatusA(lpFileName : Win32cr::Foundation::PSTR, lpStatus : UInt32*) : Win32cr::Foundation::BOOL

    fun FileEncryptionStatusW(lpFileName : Win32cr::Foundation::PWSTR, lpStatus : UInt32*) : Win32cr::Foundation::BOOL

    fun OpenEncryptedFileRawA(lpFileName : Win32cr::Foundation::PSTR, ulFlags : UInt32, pvContext : Void**) : UInt32

    fun OpenEncryptedFileRawW(lpFileName : Win32cr::Foundation::PWSTR, ulFlags : UInt32, pvContext : Void**) : UInt32

    fun ReadEncryptedFileRaw(pfExportCallback : Win32cr::Storage::FileSystem::PFE_EXPORT_FUNC, pvCallbackContext : Void*, pvContext : Void*) : UInt32

    fun WriteEncryptedFileRaw(pfImportCallback : Win32cr::Storage::FileSystem::PFE_IMPORT_FUNC, pvCallbackContext : Void*, pvContext : Void*) : UInt32

    fun CloseEncryptedFileRaw(pvContext : Void*) : Void

    fun OpenFile(lpFileName : Win32cr::Foundation::PSTR, lpReOpenBuff : Win32cr::Storage::FileSystem::OFSTRUCT*, uStyle : Win32cr::Storage::FileSystem::LZOPENFILE_STYLE) : Int32

    fun BackupRead(hFile : Win32cr::Foundation::HANDLE, lpBuffer : UInt8*, nNumberOfBytesToRead : UInt32, lpNumberOfBytesRead : UInt32*, bAbort : Win32cr::Foundation::BOOL, bProcessSecurity : Win32cr::Foundation::BOOL, lpContext : Void**) : Win32cr::Foundation::BOOL

    fun BackupSeek(hFile : Win32cr::Foundation::HANDLE, dwLowBytesToSeek : UInt32, dwHighBytesToSeek : UInt32, lpdwLowByteSeeked : UInt32*, lpdwHighByteSeeked : UInt32*, lpContext : Void**) : Win32cr::Foundation::BOOL

    fun BackupWrite(hFile : Win32cr::Foundation::HANDLE, lpBuffer : UInt8*, nNumberOfBytesToWrite : UInt32, lpNumberOfBytesWritten : UInt32*, bAbort : Win32cr::Foundation::BOOL, bProcessSecurity : Win32cr::Foundation::BOOL, lpContext : Void**) : Win32cr::Foundation::BOOL

    fun GetLogicalDriveStringsA(nBufferLength : UInt32, lpBuffer : UInt8*) : UInt32

    fun SetSearchPathMode(flags : UInt32) : Win32cr::Foundation::BOOL

    fun CreateDirectoryExA(lpTemplateDirectory : Win32cr::Foundation::PSTR, lpNewDirectory : Win32cr::Foundation::PSTR, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*) : Win32cr::Foundation::BOOL

    fun CreateDirectoryExW(lpTemplateDirectory : Win32cr::Foundation::PWSTR, lpNewDirectory : Win32cr::Foundation::PWSTR, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*) : Win32cr::Foundation::BOOL

    fun CreateDirectoryTransactedA(lpTemplateDirectory : Win32cr::Foundation::PSTR, lpNewDirectory : Win32cr::Foundation::PSTR, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun CreateDirectoryTransactedW(lpTemplateDirectory : Win32cr::Foundation::PWSTR, lpNewDirectory : Win32cr::Foundation::PWSTR, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun RemoveDirectoryTransactedA(lpPathName : Win32cr::Foundation::PSTR, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun RemoveDirectoryTransactedW(lpPathName : Win32cr::Foundation::PWSTR, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun GetFullPathNameTransactedA(lpFileName : Win32cr::Foundation::PSTR, nBufferLength : UInt32, lpBuffer : UInt8*, lpFilePart : Win32cr::Foundation::PSTR*, hTransaction : Win32cr::Foundation::HANDLE) : UInt32

    fun GetFullPathNameTransactedW(lpFileName : Win32cr::Foundation::PWSTR, nBufferLength : UInt32, lpBuffer : UInt16*, lpFilePart : Win32cr::Foundation::PWSTR*, hTransaction : Win32cr::Foundation::HANDLE) : UInt32

    fun DefineDosDeviceA(dwFlags : Win32cr::Storage::FileSystem::DEFINE_DOS_DEVICE_FLAGS, lpDeviceName : Win32cr::Foundation::PSTR, lpTargetPath : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    fun QueryDosDeviceA(lpDeviceName : Win32cr::Foundation::PSTR, lpTargetPath : UInt8*, ucchMax : UInt32) : UInt32

    fun CreateFileTransactedA(lpFileName : Win32cr::Foundation::PSTR, dwDesiredAccess : UInt32, dwShareMode : Win32cr::Storage::FileSystem::FILE_SHARE_MODE, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, dwCreationDisposition : Win32cr::Storage::FileSystem::FILE_CREATION_DISPOSITION, dwFlagsAndAttributes : Win32cr::Storage::FileSystem::FILE_FLAGS_AND_ATTRIBUTES, hTemplateFile : Win32cr::Foundation::HANDLE, hTransaction : Win32cr::Foundation::HANDLE, pusMiniVersion : Win32cr::Storage::FileSystem::TXFS_MINIVERSION*, lpExtendedParameter : Void*) : Win32cr::Foundation::HANDLE

    fun CreateFileTransactedW(lpFileName : Win32cr::Foundation::PWSTR, dwDesiredAccess : UInt32, dwShareMode : Win32cr::Storage::FileSystem::FILE_SHARE_MODE, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, dwCreationDisposition : Win32cr::Storage::FileSystem::FILE_CREATION_DISPOSITION, dwFlagsAndAttributes : Win32cr::Storage::FileSystem::FILE_FLAGS_AND_ATTRIBUTES, hTemplateFile : Win32cr::Foundation::HANDLE, hTransaction : Win32cr::Foundation::HANDLE, pusMiniVersion : Win32cr::Storage::FileSystem::TXFS_MINIVERSION*, lpExtendedParameter : Void*) : Win32cr::Foundation::HANDLE

    fun ReOpenFile(hOriginalFile : Win32cr::Foundation::HANDLE, dwDesiredAccess : Win32cr::Storage::FileSystem::FILE_ACCESS_FLAGS, dwShareMode : Win32cr::Storage::FileSystem::FILE_SHARE_MODE, dwFlagsAndAttributes : Win32cr::Storage::FileSystem::FILE_FLAGS_AND_ATTRIBUTES) : Win32cr::Foundation::HANDLE

    fun SetFileAttributesTransactedA(lpFileName : Win32cr::Foundation::PSTR, dwFileAttributes : UInt32, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun SetFileAttributesTransactedW(lpFileName : Win32cr::Foundation::PWSTR, dwFileAttributes : UInt32, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun GetFileAttributesTransactedA(lpFileName : Win32cr::Foundation::PSTR, fInfoLevelId : Win32cr::Storage::FileSystem::GET_FILEEX_INFO_LEVELS, lpFileInformation : Void*, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun GetFileAttributesTransactedW(lpFileName : Win32cr::Foundation::PWSTR, fInfoLevelId : Win32cr::Storage::FileSystem::GET_FILEEX_INFO_LEVELS, lpFileInformation : Void*, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun GetCompressedFileSizeTransactedA(lpFileName : Win32cr::Foundation::PSTR, lpFileSizeHigh : UInt32*, hTransaction : Win32cr::Foundation::HANDLE) : UInt32

    fun GetCompressedFileSizeTransactedW(lpFileName : Win32cr::Foundation::PWSTR, lpFileSizeHigh : UInt32*, hTransaction : Win32cr::Foundation::HANDLE) : UInt32

    fun DeleteFileTransactedA(lpFileName : Win32cr::Foundation::PSTR, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun DeleteFileTransactedW(lpFileName : Win32cr::Foundation::PWSTR, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun CheckNameLegalDOS8Dot3A(lpName : Win32cr::Foundation::PSTR, lpOemName : UInt8*, oem_name_size : UInt32, pbNameContainsSpaces : Win32cr::Foundation::BOOL*, pbNameLegal : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::BOOL

    fun CheckNameLegalDOS8Dot3W(lpName : Win32cr::Foundation::PWSTR, lpOemName : UInt8*, oem_name_size : UInt32, pbNameContainsSpaces : Win32cr::Foundation::BOOL*, pbNameLegal : Win32cr::Foundation::BOOL*) : Win32cr::Foundation::BOOL

    fun FindFirstFileTransactedA(lpFileName : Win32cr::Foundation::PSTR, fInfoLevelId : Win32cr::Storage::FileSystem::FINDEX_INFO_LEVELS, lpFindFileData : Void*, fSearchOp : Win32cr::Storage::FileSystem::FINDEX_SEARCH_OPS, lpSearchFilter : Void*, dwAdditionalFlags : UInt32, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Storage::FileSystem::FindFileHandle

    fun FindFirstFileTransactedW(lpFileName : Win32cr::Foundation::PWSTR, fInfoLevelId : Win32cr::Storage::FileSystem::FINDEX_INFO_LEVELS, lpFindFileData : Void*, fSearchOp : Win32cr::Storage::FileSystem::FINDEX_SEARCH_OPS, lpSearchFilter : Void*, dwAdditionalFlags : UInt32, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Storage::FileSystem::FindFileHandle

    fun CopyFileA(lpExistingFileName : Win32cr::Foundation::PSTR, lpNewFileName : Win32cr::Foundation::PSTR, bFailIfExists : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL

    fun CopyFileW(lpExistingFileName : Win32cr::Foundation::PWSTR, lpNewFileName : Win32cr::Foundation::PWSTR, bFailIfExists : Win32cr::Foundation::BOOL) : Win32cr::Foundation::BOOL

    fun CopyFileExA(lpExistingFileName : Win32cr::Foundation::PSTR, lpNewFileName : Win32cr::Foundation::PSTR, lpProgressRoutine : Win32cr::Storage::FileSystem::LPPROGRESS_ROUTINE, lpData : Void*, pbCancel : Int32*, dwCopyFlags : UInt32) : Win32cr::Foundation::BOOL

    fun CopyFileExW(lpExistingFileName : Win32cr::Foundation::PWSTR, lpNewFileName : Win32cr::Foundation::PWSTR, lpProgressRoutine : Win32cr::Storage::FileSystem::LPPROGRESS_ROUTINE, lpData : Void*, pbCancel : Int32*, dwCopyFlags : UInt32) : Win32cr::Foundation::BOOL

    fun CopyFileTransactedA(lpExistingFileName : Win32cr::Foundation::PSTR, lpNewFileName : Win32cr::Foundation::PSTR, lpProgressRoutine : Win32cr::Storage::FileSystem::LPPROGRESS_ROUTINE, lpData : Void*, pbCancel : Int32*, dwCopyFlags : UInt32, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun CopyFileTransactedW(lpExistingFileName : Win32cr::Foundation::PWSTR, lpNewFileName : Win32cr::Foundation::PWSTR, lpProgressRoutine : Win32cr::Storage::FileSystem::LPPROGRESS_ROUTINE, lpData : Void*, pbCancel : Int32*, dwCopyFlags : UInt32, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun CopyFile2(pwszExistingFileName : Win32cr::Foundation::PWSTR, pwszNewFileName : Win32cr::Foundation::PWSTR, pExtendedParameters : Win32cr::Storage::FileSystem::COPYFILE2_EXTENDED_PARAMETERS*) : Win32cr::Foundation::HRESULT

    fun MoveFileA(lpExistingFileName : Win32cr::Foundation::PSTR, lpNewFileName : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    fun MoveFileW(lpExistingFileName : Win32cr::Foundation::PWSTR, lpNewFileName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    fun MoveFileExA(lpExistingFileName : Win32cr::Foundation::PSTR, lpNewFileName : Win32cr::Foundation::PSTR, dwFlags : Win32cr::Storage::FileSystem::MOVE_FILE_FLAGS) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun MoveFileExW(lpExistingFileName : Win32cr::Foundation::PWSTR, lpNewFileName : Win32cr::Foundation::PWSTR, dwFlags : Win32cr::Storage::FileSystem::MOVE_FILE_FLAGS) : Win32cr::Foundation::BOOL

    fun MoveFileWithProgressA(lpExistingFileName : Win32cr::Foundation::PSTR, lpNewFileName : Win32cr::Foundation::PSTR, lpProgressRoutine : Win32cr::Storage::FileSystem::LPPROGRESS_ROUTINE, lpData : Void*, dwFlags : Win32cr::Storage::FileSystem::MOVE_FILE_FLAGS) : Win32cr::Foundation::BOOL

    fun MoveFileWithProgressW(lpExistingFileName : Win32cr::Foundation::PWSTR, lpNewFileName : Win32cr::Foundation::PWSTR, lpProgressRoutine : Win32cr::Storage::FileSystem::LPPROGRESS_ROUTINE, lpData : Void*, dwFlags : Win32cr::Storage::FileSystem::MOVE_FILE_FLAGS) : Win32cr::Foundation::BOOL

    fun MoveFileTransactedA(lpExistingFileName : Win32cr::Foundation::PSTR, lpNewFileName : Win32cr::Foundation::PSTR, lpProgressRoutine : Win32cr::Storage::FileSystem::LPPROGRESS_ROUTINE, lpData : Void*, dwFlags : Win32cr::Storage::FileSystem::MOVE_FILE_FLAGS, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun MoveFileTransactedW(lpExistingFileName : Win32cr::Foundation::PWSTR, lpNewFileName : Win32cr::Foundation::PWSTR, lpProgressRoutine : Win32cr::Storage::FileSystem::LPPROGRESS_ROUTINE, lpData : Void*, dwFlags : Win32cr::Storage::FileSystem::MOVE_FILE_FLAGS, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun ReplaceFileA(lpReplacedFileName : Win32cr::Foundation::PSTR, lpReplacementFileName : Win32cr::Foundation::PSTR, lpBackupFileName : Win32cr::Foundation::PSTR, dwReplaceFlags : Win32cr::Storage::FileSystem::REPLACE_FILE_FLAGS, lpExclude : Void*, lpReserved : Void*) : Win32cr::Foundation::BOOL

    fun ReplaceFileW(lpReplacedFileName : Win32cr::Foundation::PWSTR, lpReplacementFileName : Win32cr::Foundation::PWSTR, lpBackupFileName : Win32cr::Foundation::PWSTR, dwReplaceFlags : Win32cr::Storage::FileSystem::REPLACE_FILE_FLAGS, lpExclude : Void*, lpReserved : Void*) : Win32cr::Foundation::BOOL

    fun CreateHardLinkA(lpFileName : Win32cr::Foundation::PSTR, lpExistingFileName : Win32cr::Foundation::PSTR, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun CreateHardLinkW(lpFileName : Win32cr::Foundation::PWSTR, lpExistingFileName : Win32cr::Foundation::PWSTR, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*) : Win32cr::Foundation::BOOL

    fun CreateHardLinkTransactedA(lpFileName : Win32cr::Foundation::PSTR, lpExistingFileName : Win32cr::Foundation::PSTR, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun CreateHardLinkTransactedW(lpFileName : Win32cr::Foundation::PWSTR, lpExistingFileName : Win32cr::Foundation::PWSTR, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun FindFirstStreamTransactedW(lpFileName : Win32cr::Foundation::PWSTR, info_level : Win32cr::Storage::FileSystem::STREAM_INFO_LEVELS, lpFindStreamData : Void*, dwFlags : UInt32, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Storage::FileSystem::FindStreamHandle

    fun FindFirstFileNameTransactedW(lpFileName : Win32cr::Foundation::PWSTR, dwFlags : UInt32, string_length : UInt32*, link_name : UInt16*, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Storage::FileSystem::FindFileNameHandle

    fun SetVolumeLabelA(lpRootPathName : Win32cr::Foundation::PSTR, lpVolumeName : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    fun SetVolumeLabelW(lpRootPathName : Win32cr::Foundation::PWSTR, lpVolumeName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    fun SetFileBandwidthReservation(hFile : Win32cr::Foundation::HANDLE, nPeriodMilliseconds : UInt32, nBytesPerPeriod : UInt32, bDiscardable : Win32cr::Foundation::BOOL, lpTransferSize : UInt32*, lpNumOutstandingRequests : UInt32*) : Win32cr::Foundation::BOOL

    fun GetFileBandwidthReservation(hFile : Win32cr::Foundation::HANDLE, lpPeriodMilliseconds : UInt32*, lpBytesPerPeriod : UInt32*, pDiscardable : Int32*, lpTransferSize : UInt32*, lpNumOutstandingRequests : UInt32*) : Win32cr::Foundation::BOOL

    fun ReadDirectoryChangesW(hDirectory : Win32cr::Foundation::HANDLE, lpBuffer : Void*, nBufferLength : UInt32, bWatchSubtree : Win32cr::Foundation::BOOL, dwNotifyFilter : Win32cr::Storage::FileSystem::FILE_NOTIFY_CHANGE, lpBytesReturned : UInt32*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpCompletionRoutine : Win32cr::System::IO::LPOVERLAPPED_COMPLETION_ROUTINE) : Win32cr::Foundation::BOOL

    fun ReadDirectoryChangesExW(hDirectory : Win32cr::Foundation::HANDLE, lpBuffer : Void*, nBufferLength : UInt32, bWatchSubtree : Win32cr::Foundation::BOOL, dwNotifyFilter : Win32cr::Storage::FileSystem::FILE_NOTIFY_CHANGE, lpBytesReturned : UInt32*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpCompletionRoutine : Win32cr::System::IO::LPOVERLAPPED_COMPLETION_ROUTINE, read_directory_notify_information_class : Win32cr::Storage::FileSystem::READ_DIRECTORY_NOTIFY_INFORMATION_CLASS) : Win32cr::Foundation::BOOL

    fun FindFirstVolumeA(lpszVolumeName : UInt8*, cchBufferLength : UInt32) : Win32cr::Storage::FileSystem::FindVolumeHandle

    fun FindNextVolumeA(hFindVolume : Win32cr::Storage::FileSystem::FindVolumeHandle, lpszVolumeName : UInt8*, cchBufferLength : UInt32) : Win32cr::Foundation::BOOL

    fun FindFirstVolumeMountPointA(lpszRootPathName : Win32cr::Foundation::PSTR, lpszVolumeMountPoint : UInt8*, cchBufferLength : UInt32) : Win32cr::Storage::FileSystem::FindVolumeMointPointHandle

    fun FindFirstVolumeMountPointW(lpszRootPathName : Win32cr::Foundation::PWSTR, lpszVolumeMountPoint : UInt16*, cchBufferLength : UInt32) : Win32cr::Storage::FileSystem::FindVolumeMointPointHandle

    fun FindNextVolumeMountPointA(hFindVolumeMountPoint : Win32cr::Storage::FileSystem::FindVolumeMointPointHandle, lpszVolumeMountPoint : UInt8*, cchBufferLength : UInt32) : Win32cr::Foundation::BOOL

    fun FindNextVolumeMountPointW(hFindVolumeMountPoint : Win32cr::Storage::FileSystem::FindVolumeMointPointHandle, lpszVolumeMountPoint : UInt16*, cchBufferLength : UInt32) : Win32cr::Foundation::BOOL

    fun FindVolumeMountPointClose(hFindVolumeMountPoint : Win32cr::Storage::FileSystem::FindVolumeMointPointHandle) : Win32cr::Foundation::BOOL

    fun SetVolumeMountPointA(lpszVolumeMountPoint : Win32cr::Foundation::PSTR, lpszVolumeName : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    fun SetVolumeMountPointW(lpszVolumeMountPoint : Win32cr::Foundation::PWSTR, lpszVolumeName : Win32cr::Foundation::PWSTR) : Win32cr::Foundation::BOOL

    fun DeleteVolumeMountPointA(lpszVolumeMountPoint : Win32cr::Foundation::PSTR) : Win32cr::Foundation::BOOL

    fun GetVolumeNameForVolumeMountPointA(lpszVolumeMountPoint : Win32cr::Foundation::PSTR, lpszVolumeName : UInt8*, cchBufferLength : UInt32) : Win32cr::Foundation::BOOL

    fun GetVolumePathNameA(lpszFileName : Win32cr::Foundation::PSTR, lpszVolumePathName : UInt8*, cchBufferLength : UInt32) : Win32cr::Foundation::BOOL

    fun GetVolumePathNamesForVolumeNameA(lpszVolumeName : Win32cr::Foundation::PSTR, lpszVolumePathNames : UInt8*, cchBufferLength : UInt32, lpcchReturnLength : UInt32*) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun GetFileInformationByHandleEx(hFile : Win32cr::Foundation::HANDLE, file_information_class : Win32cr::Storage::FileSystem::FILE_INFO_BY_HANDLE_CLASS, lpFileInformation : Void*, dwBufferSize : UInt32) : Win32cr::Foundation::BOOL

    fun OpenFileById(hVolumeHint : Win32cr::Foundation::HANDLE, lpFileId : Win32cr::Storage::FileSystem::FILE_ID_DESCRIPTOR*, dwDesiredAccess : Win32cr::Storage::FileSystem::FILE_ACCESS_FLAGS, dwShareMode : Win32cr::Storage::FileSystem::FILE_SHARE_MODE, lpSecurityAttributes : Win32cr::Security::SECURITY_ATTRIBUTES*, dwFlagsAndAttributes : Win32cr::Storage::FileSystem::FILE_FLAGS_AND_ATTRIBUTES) : Win32cr::Foundation::HANDLE

    fun CreateSymbolicLinkA(lpSymlinkFileName : Win32cr::Foundation::PSTR, lpTargetFileName : Win32cr::Foundation::PSTR, dwFlags : Win32cr::Storage::FileSystem::SYMBOLIC_LINK_FLAGS) : Win32cr::Foundation::BOOLEAN

    # Commented out due to being part of LibC
    #fun CreateSymbolicLinkW(lpSymlinkFileName : Win32cr::Foundation::PWSTR, lpTargetFileName : Win32cr::Foundation::PWSTR, dwFlags : Win32cr::Storage::FileSystem::SYMBOLIC_LINK_FLAGS) : Win32cr::Foundation::BOOLEAN

    fun CreateSymbolicLinkTransactedA(lpSymlinkFileName : Win32cr::Foundation::PSTR, lpTargetFileName : Win32cr::Foundation::PSTR, dwFlags : Win32cr::Storage::FileSystem::SYMBOLIC_LINK_FLAGS, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOLEAN

    fun CreateSymbolicLinkTransactedW(lpSymlinkFileName : Win32cr::Foundation::PWSTR, lpTargetFileName : Win32cr::Foundation::PWSTR, dwFlags : Win32cr::Storage::FileSystem::SYMBOLIC_LINK_FLAGS, hTransaction : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOLEAN

    fun NtCreateFile(file_handle : Win32cr::Foundation::HANDLE*, desired_access : UInt32, object_attributes : Win32cr::System::WindowsProgramming::OBJECT_ATTRIBUTES*, io_status_block : Win32cr::System::WindowsProgramming::IO_STATUS_BLOCK*, allocation_size : Win32cr::Foundation::LARGE_INTEGER*, file_attributes : UInt32, share_access : Win32cr::Storage::FileSystem::FILE_SHARE_MODE, create_disposition : Win32cr::Storage::FileSystem::NT_CREATE_FILE_DISPOSITION, create_options : UInt32, ea_buffer : Void*, ea_length : UInt32) : Win32cr::Foundation::NTSTATUS

  end
end