require "./../foundation.cr"
require "./../system/kernel.cr"
require "./../system/io.cr"
require "./../system/com.cr"

module Win32cr::Networking::WinSock
  alias HWSAEVENT = LibC::IntPtrT
  alias SOCKET = LibC::UIntPtrT
  alias LPCONDITIONPROC = Proc(Win32cr::Networking::WinSock::WSABUF*, Win32cr::Networking::WinSock::WSABUF*, Win32cr::Networking::WinSock::QOS*, Win32cr::Networking::WinSock::QOS*, Win32cr::Networking::WinSock::WSABUF*, Win32cr::Networking::WinSock::WSABUF*, UInt32*, LibC::UIntPtrT, Int32)*

  alias LPWSAOVERLAPPED_COMPLETION_ROUTINE = Proc(UInt32, UInt32, Win32cr::System::IO::OVERLAPPED*, UInt32, Void)*

  alias LPFN_TRANSMITFILE = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Foundation::HANDLE, UInt32, UInt32, Win32cr::System::IO::OVERLAPPED*, Win32cr::Networking::WinSock::TRANSMIT_FILE_BUFFERS*, UInt32, Win32cr::Foundation::BOOL)*

  alias LPFN_ACCEPTEX = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::SOCKET, Void*, UInt32, UInt32, UInt32, UInt32*, Win32cr::System::IO::OVERLAPPED*, Win32cr::Foundation::BOOL)*

  alias LPFN_GETACCEPTEXSOCKADDRS = Proc(Void*, UInt32, UInt32, UInt32, Win32cr::Networking::WinSock::SOCKADDR**, Int32*, Win32cr::Networking::WinSock::SOCKADDR**, Int32*, Void)*

  alias LPFN_TRANSMITPACKETS = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::TRANSMIT_PACKETS_ELEMENT*, UInt32, UInt32, Win32cr::System::IO::OVERLAPPED*, UInt32, Win32cr::Foundation::BOOL)*

  alias LPFN_CONNECTEX = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::SOCKADDR*, Int32, Void*, UInt32, UInt32*, Win32cr::System::IO::OVERLAPPED*, Win32cr::Foundation::BOOL)*

  alias LPFN_DISCONNECTEX = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::System::IO::OVERLAPPED*, UInt32, UInt32, Win32cr::Foundation::BOOL)*

  alias LPFN_WSARECVMSG = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::WSAMSG*, UInt32*, Win32cr::System::IO::OVERLAPPED*, Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE, Int32)*

  alias LPFN_WSASENDMSG = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::WSAMSG*, UInt32, UInt32*, Win32cr::System::IO::OVERLAPPED*, Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE, Int32)*

  alias LPFN_WSAPOLL = Proc(Win32cr::Networking::WinSock::WSAPOLLFD*, UInt32, Int32, Int32)*

  alias LPFN_RIORECEIVE = Proc(Win32cr::Networking::WinSock::RIO_RQ_t*, Win32cr::Networking::WinSock::RIO_BUF*, UInt32, UInt32, Void*, Win32cr::Foundation::BOOL)*

  alias LPFN_RIORECEIVEEX = Proc(Win32cr::Networking::WinSock::RIO_RQ_t*, Win32cr::Networking::WinSock::RIO_BUF*, UInt32, Win32cr::Networking::WinSock::RIO_BUF*, Win32cr::Networking::WinSock::RIO_BUF*, Win32cr::Networking::WinSock::RIO_BUF*, Win32cr::Networking::WinSock::RIO_BUF*, UInt32, Void*, Int32)*

  alias LPFN_RIOSEND = Proc(Win32cr::Networking::WinSock::RIO_RQ_t*, Win32cr::Networking::WinSock::RIO_BUF*, UInt32, UInt32, Void*, Win32cr::Foundation::BOOL)*

  alias LPFN_RIOSENDEX = Proc(Win32cr::Networking::WinSock::RIO_RQ_t*, Win32cr::Networking::WinSock::RIO_BUF*, UInt32, Win32cr::Networking::WinSock::RIO_BUF*, Win32cr::Networking::WinSock::RIO_BUF*, Win32cr::Networking::WinSock::RIO_BUF*, Win32cr::Networking::WinSock::RIO_BUF*, UInt32, Void*, Win32cr::Foundation::BOOL)*

  alias LPFN_RIOCLOSECOMPLETIONQUEUE = Proc(Win32cr::Networking::WinSock::RIO_CQ_t*, Void)*

  alias LPFN_RIOCREATECOMPLETIONQUEUE = Proc(UInt32, Win32cr::Networking::WinSock::RIO_NOTIFICATION_COMPLETION*, Win32cr::Networking::WinSock::RIO_CQ_t*)*

  alias LPFN_RIOCREATEREQUESTQUEUE = Proc(Win32cr::Networking::WinSock::SOCKET, UInt32, UInt32, UInt32, UInt32, Win32cr::Networking::WinSock::RIO_CQ_t*, Win32cr::Networking::WinSock::RIO_CQ_t*, Void*, Win32cr::Networking::WinSock::RIO_RQ_t*)*

  alias LPFN_RIODEQUEUECOMPLETION = Proc(Win32cr::Networking::WinSock::RIO_CQ_t*, Win32cr::Networking::WinSock::RIORESULT*, UInt32, UInt32)*

  alias LPFN_RIODEREGISTERBUFFER = Proc(Win32cr::Networking::WinSock::RIO_BUFFERID_t*, Void)*

  alias LPFN_RIONOTIFY = Proc(Win32cr::Networking::WinSock::RIO_CQ_t*, Int32)*

  alias LPFN_RIOREGISTERBUFFER = Proc(Win32cr::Foundation::PSTR, UInt32, Win32cr::Networking::WinSock::RIO_BUFFERID_t*)*

  alias LPFN_RIORESIZECOMPLETIONQUEUE = Proc(Win32cr::Networking::WinSock::RIO_CQ_t*, UInt32, Win32cr::Foundation::BOOL)*

  alias LPFN_RIORESIZEREQUESTQUEUE = Proc(Win32cr::Networking::WinSock::RIO_RQ_t*, UInt32, UInt32, Win32cr::Foundation::BOOL)*

  alias LPBLOCKINGCALLBACK = Proc(LibC::UIntPtrT, Win32cr::Foundation::BOOL)*

  alias LPWSAUSERAPC = Proc(LibC::UIntPtrT, Void)*

  alias LPWSPACCEPT = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::SOCKADDR*, Int32*, Win32cr::Networking::WinSock::LPCONDITIONPROC, LibC::UIntPtrT, Int32*, Win32cr::Networking::WinSock::SOCKET)*

  alias LPWSPADDRESSTOSTRING = Proc(Win32cr::Networking::WinSock::SOCKADDR*, UInt32, Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, UInt16*, UInt32*, Int32*, Int32)*

  alias LPWSPASYNCSELECT = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Foundation::HWND, UInt32, Int32, Int32*, Int32)*

  alias LPWSPBIND = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::SOCKADDR*, Int32, Int32*, Int32)*

  alias LPWSPCANCELBLOCKINGCALL = Proc(Int32*, Int32)*

  alias LPWSPCLEANUP = Proc(Int32*, Int32)*

  alias LPWSPCLOSESOCKET = Proc(Win32cr::Networking::WinSock::SOCKET, Int32*, Int32)*

  alias LPWSPCONNECT = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::SOCKADDR*, Int32, Win32cr::Networking::WinSock::WSABUF*, Win32cr::Networking::WinSock::WSABUF*, Win32cr::Networking::WinSock::QOS*, Win32cr::Networking::WinSock::QOS*, Int32*, Int32)*

  alias LPWSPDUPLICATESOCKET = Proc(Win32cr::Networking::WinSock::SOCKET, UInt32, Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, Int32*, Int32)*

  alias LPWSPENUMNETWORKEVENTS = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Foundation::HANDLE, Win32cr::Networking::WinSock::WSANETWORKEVENTS*, Int32*, Int32)*

  alias LPWSPEVENTSELECT = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Foundation::HANDLE, Int32, Int32*, Int32)*

  alias LPWSPGETOVERLAPPEDRESULT = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::System::IO::OVERLAPPED*, UInt32*, Win32cr::Foundation::BOOL, UInt32*, Int32*, Win32cr::Foundation::BOOL)*

  alias LPWSPGETPEERNAME = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::SOCKADDR*, Int32*, Int32*, Int32)*

  alias LPWSPGETSOCKNAME = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::SOCKADDR*, Int32*, Int32*, Int32)*

  alias LPWSPGETSOCKOPT = Proc(Win32cr::Networking::WinSock::SOCKET, Int32, Int32, Win32cr::Foundation::PSTR, Int32*, Int32*, Int32)*

  alias LPWSPGETQOSBYNAME = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::WSABUF*, Win32cr::Networking::WinSock::QOS*, Int32*, Win32cr::Foundation::BOOL)*

  alias LPWSPIOCTL = Proc(Win32cr::Networking::WinSock::SOCKET, UInt32, Void*, UInt32, Void*, UInt32, UInt32*, Win32cr::System::IO::OVERLAPPED*, Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE, Win32cr::Networking::WinSock::WSATHREADID*, Int32*, Int32)*

  alias LPWSPJOINLEAF = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::SOCKADDR*, Int32, Win32cr::Networking::WinSock::WSABUF*, Win32cr::Networking::WinSock::WSABUF*, Win32cr::Networking::WinSock::QOS*, Win32cr::Networking::WinSock::QOS*, UInt32, Int32*, Win32cr::Networking::WinSock::SOCKET)*

  alias LPWSPLISTEN = Proc(Win32cr::Networking::WinSock::SOCKET, Int32, Int32*, Int32)*

  alias LPWSPRECV = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::WSABUF*, UInt32, UInt32*, UInt32*, Win32cr::System::IO::OVERLAPPED*, Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE, Win32cr::Networking::WinSock::WSATHREADID*, Int32*, Int32)*

  alias LPWSPRECVDISCONNECT = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::WSABUF*, Int32*, Int32)*

  alias LPWSPRECVFROM = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::WSABUF*, UInt32, UInt32*, UInt32*, Win32cr::Networking::WinSock::SOCKADDR*, Int32*, Win32cr::System::IO::OVERLAPPED*, Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE, Win32cr::Networking::WinSock::WSATHREADID*, Int32*, Int32)*

  alias LPWSPSELECT = Proc(Int32, Win32cr::Networking::WinSock::Fd_set*, Win32cr::Networking::WinSock::Fd_set*, Win32cr::Networking::WinSock::Fd_set*, Win32cr::Networking::WinSock::Timeval*, Int32*, Int32)*

  alias LPWSPSEND = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::WSABUF*, UInt32, UInt32*, UInt32, Win32cr::System::IO::OVERLAPPED*, Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE, Win32cr::Networking::WinSock::WSATHREADID*, Int32*, Int32)*

  alias LPWSPSENDDISCONNECT = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::WSABUF*, Int32*, Int32)*

  alias LPWSPSENDTO = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::WSABUF*, UInt32, UInt32*, UInt32, Win32cr::Networking::WinSock::SOCKADDR*, Int32, Win32cr::System::IO::OVERLAPPED*, Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE, Win32cr::Networking::WinSock::WSATHREADID*, Int32*, Int32)*

  alias LPWSPSETSOCKOPT = Proc(Win32cr::Networking::WinSock::SOCKET, Int32, Int32, Win32cr::Foundation::PSTR, Int32, Int32*, Int32)*

  alias LPWSPSHUTDOWN = Proc(Win32cr::Networking::WinSock::SOCKET, Int32, Int32*, Int32)*

  alias LPWSPSOCKET = Proc(Int32, Int32, Int32, Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, UInt32, UInt32, Int32*, Win32cr::Networking::WinSock::SOCKET)*

  alias LPWSPSTRINGTOADDRESS = Proc(Win32cr::Foundation::PWSTR, Int32, Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, Win32cr::Networking::WinSock::SOCKADDR*, Int32*, Int32*, Int32)*

  alias LPWPUCLOSEEVENT = Proc(Win32cr::Foundation::HANDLE, Int32*, Win32cr::Foundation::BOOL)*

  alias LPWPUCLOSESOCKETHANDLE = Proc(Win32cr::Networking::WinSock::SOCKET, Int32*, Int32)*

  alias LPWPUCREATEEVENT = Proc(Int32*, Win32cr::Foundation::HANDLE)*

  alias LPWPUCREATESOCKETHANDLE = Proc(UInt32, LibC::UIntPtrT, Int32*, Win32cr::Networking::WinSock::SOCKET)*

  alias LPWPUFDISSET = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::Networking::WinSock::Fd_set*, Int32)*

  alias LPWPUGETPROVIDERPATH = Proc(LibC::GUID*, UInt16*, Int32*, Int32*, Int32)*

  alias LPWPUMODIFYIFSHANDLE = Proc(UInt32, Win32cr::Networking::WinSock::SOCKET, Int32*, Win32cr::Networking::WinSock::SOCKET)*

  alias LPWPUPOSTMESSAGE = Proc(Win32cr::Foundation::HWND, UInt32, Win32cr::Foundation::WPARAM, Win32cr::Foundation::LPARAM, Win32cr::Foundation::BOOL)*

  alias LPWPUQUERYBLOCKINGCALLBACK = Proc(UInt32, Win32cr::Networking::WinSock::LPBLOCKINGCALLBACK*, LibC::UIntPtrT*, Int32*, Int32)*

  alias LPWPUQUERYSOCKETHANDLECONTEXT = Proc(Win32cr::Networking::WinSock::SOCKET, LibC::UIntPtrT*, Int32*, Int32)*

  alias LPWPUQUEUEAPC = Proc(Win32cr::Networking::WinSock::WSATHREADID*, Win32cr::Networking::WinSock::LPWSAUSERAPC, LibC::UIntPtrT, Int32*, Int32)*

  alias LPWPURESETEVENT = Proc(Win32cr::Foundation::HANDLE, Int32*, Win32cr::Foundation::BOOL)*

  alias LPWPUSETEVENT = Proc(Win32cr::Foundation::HANDLE, Int32*, Win32cr::Foundation::BOOL)*

  alias LPWPUOPENCURRENTTHREAD = Proc(Win32cr::Networking::WinSock::WSATHREADID*, Int32*, Int32)*

  alias LPWPUCLOSETHREAD = Proc(Win32cr::Networking::WinSock::WSATHREADID*, Int32*, Int32)*

  alias LPWPUCOMPLETEOVERLAPPEDREQUEST = Proc(Win32cr::Networking::WinSock::SOCKET, Win32cr::System::IO::OVERLAPPED*, UInt32, UInt32, Int32*, Int32)*

  alias LPWSPSTARTUP = Proc(UInt16, Win32cr::Networking::WinSock::WSPData*, Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, Win32cr::Networking::WinSock::WSPUPCALLTABLE, Win32cr::Networking::WinSock::WSPPROC_TABLE*, Int32)*

  alias LPWSCENUMPROTOCOLS = Proc(Int32*, Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, UInt32*, Int32*, Int32)*

  alias LPWSCDEINSTALLPROVIDER = Proc(LibC::GUID*, Int32*, Int32)*

  alias LPWSCINSTALLPROVIDER = Proc(LibC::GUID*, Win32cr::Foundation::PWSTR, Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, UInt32, Int32*, Int32)*

  alias LPWSCGETPROVIDERPATH = Proc(LibC::GUID*, UInt16*, Int32*, Int32*, Int32)*

  alias LPWSCUPDATEPROVIDER = Proc(LibC::GUID*, Win32cr::Foundation::PWSTR, Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, UInt32, Int32*, Int32)*

  alias LPWSCINSTALLNAMESPACE = Proc(Win32cr::Foundation::PWSTR, Win32cr::Foundation::PWSTR, UInt32, UInt32, LibC::GUID*, Int32)*

  alias LPWSCUNINSTALLNAMESPACE = Proc(LibC::GUID*, Int32)*

  alias LPWSCENABLENSPROVIDER = Proc(LibC::GUID*, Win32cr::Foundation::BOOL, Int32)*

  alias LPNSPCLEANUP = Proc(LibC::GUID*, Int32)*

  alias LPNSPLOOKUPSERVICEBEGIN = Proc(LibC::GUID*, Win32cr::Networking::WinSock::WSAQUERYSETW*, Win32cr::Networking::WinSock::WSASERVICECLASSINFOW*, UInt32, Win32cr::Foundation::HANDLE*, Int32)*

  alias LPNSPLOOKUPSERVICENEXT = Proc(Win32cr::Foundation::HANDLE, UInt32, UInt32*, Win32cr::Networking::WinSock::WSAQUERYSETW*, Int32)*

  alias LPNSPIOCTL = Proc(Win32cr::Foundation::HANDLE, UInt32, Void*, UInt32, Void*, UInt32, UInt32*, Win32cr::Networking::WinSock::WSACOMPLETION*, Win32cr::Networking::WinSock::WSATHREADID*, Int32)*

  alias LPNSPLOOKUPSERVICEEND = Proc(Win32cr::Foundation::HANDLE, Int32)*

  alias LPNSPSETSERVICE = Proc(LibC::GUID*, Win32cr::Networking::WinSock::WSASERVICECLASSINFOW*, Win32cr::Networking::WinSock::WSAQUERYSETW*, Win32cr::Networking::WinSock::WSAESETSERVICEOP, UInt32, Int32)*

  alias LPNSPINSTALLSERVICECLASS = Proc(LibC::GUID*, Win32cr::Networking::WinSock::WSASERVICECLASSINFOW*, Int32)*

  alias LPNSPREMOVESERVICECLASS = Proc(LibC::GUID*, LibC::GUID*, Int32)*

  alias LPNSPGETSERVICECLASSINFO = Proc(LibC::GUID*, UInt32*, Win32cr::Networking::WinSock::WSASERVICECLASSINFOW*, Int32)*

  alias LPNSPSTARTUP = Proc(LibC::GUID*, Win32cr::Networking::WinSock::NSP_ROUTINE*, Int32)*

  alias LPNSPV2STARTUP = Proc(LibC::GUID*, Void**, Int32)*

  alias LPNSPV2CLEANUP = Proc(LibC::GUID*, Void*, Int32)*

  alias LPNSPV2LOOKUPSERVICEBEGIN = Proc(LibC::GUID*, Win32cr::Networking::WinSock::WSAQUERYSET2W*, UInt32, Void*, Win32cr::Foundation::HANDLE*, Int32)*

  alias LPNSPV2LOOKUPSERVICENEXTEX = Proc(Win32cr::Foundation::HANDLE, Win32cr::Foundation::HANDLE, UInt32, UInt32*, Win32cr::Networking::WinSock::WSAQUERYSET2W*, Void)*

  alias LPNSPV2LOOKUPSERVICEEND = Proc(Win32cr::Foundation::HANDLE, Int32)*

  alias LPNSPV2SETSERVICEEX = Proc(Win32cr::Foundation::HANDLE, LibC::GUID*, Win32cr::Networking::WinSock::WSAQUERYSET2W*, Win32cr::Networking::WinSock::WSAESETSERVICEOP, UInt32, Void*, Void)*

  alias LPNSPV2CLIENTSESSIONRUNDOWN = Proc(LibC::GUID*, Void*, Void)*

  alias LPFN_NSPAPI = Proc(UInt32)*

  alias LPSERVICE_CALLBACK_PROC = Proc(Win32cr::Foundation::LPARAM, Win32cr::Foundation::HANDLE, Void)*

  alias LPLOOKUPSERVICE_COMPLETION_ROUTINE = Proc(UInt32, UInt32, Win32cr::System::IO::OVERLAPPED*, Void)*

  alias LPWSCWRITEPROVIDERORDER = Proc(UInt32*, UInt32, Int32)*

  alias LPWSCWRITENAMESPACEORDER = Proc(LibC::GUID*, UInt32, Int32)*

  SOCKET_DEFAULT2_QM_POLICY = "aec2ef9c-3a4d-4d3e-8842-239942e39a47"
  REAL_TIME_NOTIFICATION_CAPABILITY = "6b59819a-5cae-492d-a901-2a3c2c50164f"
  REAL_TIME_NOTIFICATION_CAPABILITY_EX = "6843da03-154a-4616-a508-44371295f96b"
  ASSOCIATE_NAMERES_CONTEXT = "59a38b67-d4fe-46e1-ba3c-87ea74ca3049"
  SIO_RCVALL = 2550136833_u32
  SIO_RCVALL_MCAST = 2550136834_u32
  SIO_RCVALL_IGMPMCAST = 2550136835_u32
  SIO_KEEPALIVE_VALS = 2550136836_u32
  SIO_ABSORB_RTRALERT = 2550136837_u32
  SIO_UCAST_IF = 2550136838_u32
  SIO_LIMIT_BROADCASTS = 2550136839_u32
  SIO_INDEX_BIND = 2550136840_u32
  SIO_INDEX_MCASTIF = 2550136841_u32
  SIO_INDEX_ADD_MCAST = 2550136842_u32
  SIO_INDEX_DEL_MCAST = 2550136843_u32
  SIO_RCVALL_MCAST_IF = 2550136845_u32
  SIO_RCVALL_IF = 2550136846_u32
  SIO_LOOPBACK_FAST_PATH = 2550136848_u32
  SIO_TCP_INITIAL_RTO = 2550136849_u32
  SIO_APPLY_TRANSPORT_SETTING = 2550136851_u32
  SIO_QUERY_TRANSPORT_SETTING = 2550136852_u32
  SIO_TCP_SET_ICW = 2550136854_u32
  SIO_TCP_SET_ACK_FREQUENCY = 2550136855_u32
  SIO_SET_PRIORITY_HINT = 2550136856_u32
  SIO_PRIORITY_HINT = 2550136856_u32
  SIO_TCP_INFO = 3623878695_u32
  SIO_CPU_AFFINITY = 2550136853_u32
  SIO_TIMESTAMPING = 2550137067_u32
  TIMESTAMPING_FLAG_RX = 1_u32
  TIMESTAMPING_FLAG_TX = 2_u32
  SO_TIMESTAMP = 12298_u32
  SO_TIMESTAMP_ID = 12299_u32
  SIO_GET_TX_TIMESTAMP = 2550137066_u32
  TCP_INITIAL_RTO_DEFAULT_RTT = 0_u32
  TCP_INITIAL_RTO_DEFAULT_MAX_SYN_RETRANSMISSIONS = 0_u32
  SIO_ACQUIRE_PORT_RESERVATION = 2550136932_u32
  SIO_RELEASE_PORT_RESERVATION = 2550136933_u32
  SIO_ASSOCIATE_PORT_RESERVATION = 2550136934_u32
  SIO_SET_SECURITY = 2550137032_u32
  SIO_QUERY_SECURITY = 3623878857_u32
  SIO_SET_PEER_TARGET_NAME = 2550137034_u32
  SIO_DELETE_PEER_TARGET_NAME = 2550137035_u32
  SIO_QUERY_WFP_CONNECTION_REDIRECT_RECORDS = 2550137052_u32
  SIO_QUERY_WFP_CONNECTION_REDIRECT_CONTEXT = 2550137053_u32
  SIO_SET_WFP_CONNECTION_REDIRECT_RECORDS = 2550137054_u32
  SIO_SOCKET_USAGE_NOTIFICATION = 2550137036_u32
  SOCKET_SETTINGS_GUARANTEE_ENCRYPTION = 1_u32
  SOCKET_SETTINGS_ALLOW_INSECURE = 2_u32
  SOCKET_SETTINGS_IPSEC_SKIP_FILTER_INSTANTIATION = 1_u32
  SOCKET_SETTINGS_IPSEC_OPTIONAL_PEER_NAME_VERIFICATION = 2_u32
  SOCKET_SETTINGS_IPSEC_ALLOW_FIRST_INBOUND_PKT_UNENCRYPTED = 4_u32
  SOCKET_SETTINGS_IPSEC_PEER_NAME_IS_RAW_FORMAT = 8_u32
  SOCKET_QUERY_IPSEC2_ABORT_CONNECTION_ON_FIELD_CHANGE = 1_u32
  SOCKET_QUERY_IPSEC2_FIELD_MASK_MM_SA_ID = 1_u32
  SOCKET_QUERY_IPSEC2_FIELD_MASK_QM_SA_ID = 2_u32
  SOCKET_INFO_CONNECTION_SECURED = 1_u32
  SOCKET_INFO_CONNECTION_ENCRYPTED = 2_u32
  SOCKET_INFO_CONNECTION_IMPERSONATED = 4_u32
  SIO_QUERY_WFP_ALE_ENDPOINT_HANDLE = 1476395213_u32
  SIO_QUERY_RSS_SCALABILITY_INFO = 1476395218_u32
  IN4ADDR_LOOPBACK = 16777343_u32
  IN4ADDR_LOOPBACKPREFIX_LENGTH = 8_u32
  IN4ADDR_LINKLOCALPREFIX_LENGTH = 16_u32
  IN4ADDR_MULTICASTPREFIX_LENGTH = 4_u32
  SIO_SET_COMPATIBILITY_MODE = 2550137132_u32
  RIO_MSG_DONT_NOTIFY = 1_u32
  RIO_MSG_DEFER = 2_u32
  RIO_MSG_WAITALL = 4_u32
  RIO_MSG_COMMIT_ONLY = 8_u32
  RIO_MAX_CQ_SIZE = 134217728_u32
  RIO_CORRUPT_CQ = 4294967295_u32
  AF_UNIX = 1_u16
  AF_IMPLINK = 3_u16
  AF_PUP = 4_u16
  AF_CHAOS = 5_u16
  AF_NS = 6_u16
  AF_IPX = 6_u16
  AF_ISO = 7_u16
  AF_OSI = 7_u16
  AF_ECMA = 8_u16
  AF_DATAKIT = 9_u16
  AF_CCITT = 10_u16
  AF_SNA = 11_u16
  AF_DECnet = 12_u16
  AF_DLI = 13_u16
  AF_LAT = 14_u16
  AF_HYLINK = 15_u16
  AF_APPLETALK = 16_u16
  AF_NETBIOS = 17_u16
  AF_VOICEVIEW = 18_u16
  AF_FIREFOX = 19_u16
  AF_UNKNOWN1 = 20_u16
  AF_BAN = 21_u16
  AF_ATM = 22_u16
  AF_CLUSTER = 24_u16
  AF_12844 = 25_u16
  AF_IRDA = 26_u16
  AF_NETDES = 28_u16
  AF_MAX = 29_u16
  AF_TCNPROCESS = 29_u16
  AF_TCNMESSAGE = 30_u16
  AF_ICLFXBM = 31_u16
  AF_LINK = 33_u16
  AF_HYPERV = 34_u16
  SOCK_STREAM = 1_u16
  SOCK_DGRAM = 2_u16
  SOCK_RAW = 3_u16
  SOCK_RDM = 4_u16
  SOCK_SEQPACKET = 5_u16
  SOL_SOCKET = 65535_u32
  SO_DEBUG = 1_u32
  SO_ACCEPTCONN = 2_u32
  SO_REUSEADDR = 4_u32
  SO_KEEPALIVE = 8_u32
  SO_DONTROUTE = 16_u32
  SO_BROADCAST = 32_u32
  SO_USELOOPBACK = 64_u32
  SO_LINGER = 128_u32
  SO_OOBINLINE = 256_u32
  SO_SNDBUF = 4097_u32
  SO_RCVBUF = 4098_u32
  SO_SNDLOWAT = 4099_u32
  SO_RCVLOWAT = 4100_u32
  SO_SNDTIMEO = 4101_u32
  SO_RCVTIMEO = 4102_u32
  SO_ERROR = 4103_u32
  SO_TYPE = 4104_u32
  SO_BSP_STATE = 4105_u32
  SO_GROUP_ID = 8193_u32
  SO_GROUP_PRIORITY = 8194_u32
  SO_MAX_MSG_SIZE = 8195_u32
  SO_CONDITIONAL_ACCEPT = 12290_u32
  SO_PAUSE_ACCEPT = 12291_u32
  SO_COMPARTMENT_ID = 12292_u32
  SO_RANDOMIZE_PORT = 12293_u32
  SO_PORT_SCALABILITY = 12294_u32
  SO_REUSE_UNICASTPORT = 12295_u32
  SO_REUSE_MULTICASTPORT = 12296_u32
  SO_ORIGINAL_DST = 12303_u32
  IP6T_SO_ORIGINAL_DST = 12303_u32
  WSK_SO_BASE = 16384_u32
  TCP_NODELAY = 1_u32
  SS_MAXSIZE_ = 128_u32
  IOC_UNIX = 0_u32
  IOC_WS2 = 134217728_u32
  IOC_PROTOCOL = 268435456_u32
  IOC_VENDOR = 402653184_u32
  SIO_ASSOCIATE_HANDLE = 2281701377_u32
  SIO_ENABLE_CIRCULAR_QUEUEING = 671088642_u32
  SIO_FIND_ROUTE = 1207959555_u32
  SIO_FLUSH = 671088644_u32
  SIO_GET_BROADCAST_ADDRESS = 1207959557_u32
  SIO_GET_EXTENSION_FUNCTION_POINTER = 3355443206_u32
  SIO_GET_QOS = 3355443207_u32
  SIO_GET_GROUP_QOS = 3355443208_u32
  SIO_MULTIPOINT_LOOPBACK = 2281701385_u32
  SIO_MULTICAST_SCOPE = 2281701386_u32
  SIO_SET_QOS = 2281701387_u32
  SIO_SET_GROUP_QOS = 2281701388_u32
  SIO_TRANSLATE_HANDLE = 3355443213_u32
  SIO_ROUTING_INTERFACE_QUERY = 3355443220_u32
  SIO_ROUTING_INTERFACE_CHANGE = 2281701397_u32
  SIO_ADDRESS_LIST_QUERY = 1207959574_u32
  SIO_ADDRESS_LIST_CHANGE = 671088663_u32
  SIO_QUERY_TARGET_PNP_HANDLE = 1207959576_u32
  SIO_QUERY_RSS_PROCESSOR_INFO = 1207959589_u32
  SIO_ADDRESS_LIST_SORT = 3355443225_u32
  SIO_RESERVED_1 = 2281701402_u32
  SIO_RESERVED_2 = 2281701409_u32
  SIO_GET_MULTIPLE_EXTENSION_FUNCTION_POINTER = 3355443236_u32
  IPPROTO_IP = 0_u32
  IPPORT_TCPMUX = 1_u32
  IPPORT_ECHO = 7_u32
  IPPORT_DISCARD = 9_u32
  IPPORT_SYSTAT = 11_u32
  IPPORT_DAYTIME = 13_u32
  IPPORT_NETSTAT = 15_u32
  IPPORT_QOTD = 17_u32
  IPPORT_MSP = 18_u32
  IPPORT_CHARGEN = 19_u32
  IPPORT_FTP_DATA = 20_u32
  IPPORT_FTP = 21_u32
  IPPORT_TELNET = 23_u32
  IPPORT_SMTP = 25_u32
  IPPORT_TIMESERVER = 37_u32
  IPPORT_NAMESERVER = 42_u32
  IPPORT_WHOIS = 43_u32
  IPPORT_MTP = 57_u32
  IPPORT_TFTP = 69_u32
  IPPORT_RJE = 77_u32
  IPPORT_FINGER = 79_u32
  IPPORT_TTYLINK = 87_u32
  IPPORT_SUPDUP = 95_u32
  IPPORT_POP3 = 110_u32
  IPPORT_NTP = 123_u32
  IPPORT_EPMAP = 135_u32
  IPPORT_NETBIOS_NS = 137_u32
  IPPORT_NETBIOS_DGM = 138_u32
  IPPORT_NETBIOS_SSN = 139_u32
  IPPORT_IMAP = 143_u32
  IPPORT_SNMP = 161_u32
  IPPORT_SNMP_TRAP = 162_u32
  IPPORT_IMAP3 = 220_u32
  IPPORT_LDAP = 389_u32
  IPPORT_HTTPS = 443_u32
  IPPORT_MICROSOFT_DS = 445_u32
  IPPORT_EXECSERVER = 512_u32
  IPPORT_LOGINSERVER = 513_u32
  IPPORT_CMDSERVER = 514_u32
  IPPORT_EFSSERVER = 520_u32
  IPPORT_BIFFUDP = 512_u32
  IPPORT_WHOSERVER = 513_u32
  IPPORT_ROUTESERVER = 520_u32
  IPPORT_RESERVED = 1024_u32
  IPPORT_REGISTERED_MIN = 1024_u32
  IPPORT_REGISTERED_MAX = 49151_u32
  IPPORT_DYNAMIC_MIN = 49152_u32
  IPPORT_DYNAMIC_MAX = 65535_u32
  IN_CLASSA_NET = 4278190080_u32
  IN_CLASSA_NSHIFT = 24_u32
  IN_CLASSA_HOST = 16777215_u32
  IN_CLASSA_MAX = 128_u32
  IN_CLASSB_NET = 4294901760_u32
  IN_CLASSB_NSHIFT = 16_u32
  IN_CLASSB_HOST = 65535_u32
  IN_CLASSB_MAX = 65536_u32
  IN_CLASSC_NET = 4294967040_u32
  IN_CLASSC_NSHIFT = 8_u32
  IN_CLASSC_HOST = 255_u32
  IN_CLASSD_NET = 4026531840_u32
  IN_CLASSD_NSHIFT = 28_u32
  IN_CLASSD_HOST = 268435455_u32
  INADDR_LOOPBACK = 2130706433_u32
  INADDR_NONE = 4294967295_u32
  IOCPARM_MASK = 127_u32
  IOC_VOID = 536870912_u32
  IOC_OUT = 1073741824_u32
  IOC_IN = 2147483648_u32
  MSG_TRUNC = 256_u32
  MSG_CTRUNC = 512_u32
  MSG_BCAST = 1024_u32
  MSG_MCAST = 2048_u32
  MSG_ERRQUEUE = 4096_u32
  AI_PASSIVE = 1_u32
  AI_CANONNAME = 2_u32
  AI_NUMERICHOST = 4_u32
  AI_NUMERICSERV = 8_u32
  AI_DNS_ONLY = 16_u32
  AI_FORCE_CLEAR_TEXT = 32_u32
  AI_BYPASS_DNS_CACHE = 64_u32
  AI_RETURN_TTL = 128_u32
  AI_ALL = 256_u32
  AI_ADDRCONFIG = 1024_u32
  AI_V4MAPPED = 2048_u32
  AI_NON_AUTHORITATIVE = 16384_u32
  AI_SECURE = 32768_u32
  AI_RETURN_PREFERRED_NAMES = 65536_u32
  AI_FQDN = 131072_u32
  AI_FILESERVER = 262144_u32
  AI_DISABLE_IDN_ENCODING = 524288_u32
  AI_SECURE_WITH_FALLBACK = 1048576_u32
  AI_EXCLUSIVE_CUSTOM_SERVERS = 2097152_u32
  AI_RETURN_RESPONSE_FLAGS = 268435456_u32
  AI_REQUIRE_SECURE = 536870912_u32
  AI_RESOLUTION_HANDLE = 1073741824_u32
  AI_EXTENDED = 2147483648_u32
  ADDRINFOEX_VERSION_2 = 2_u32
  ADDRINFOEX_VERSION_3 = 3_u32
  ADDRINFOEX_VERSION_4 = 4_u32
  ADDRINFOEX_VERSION_5 = 5_u32
  ADDRINFOEX_VERSION_6 = 6_u32
  AI_DNS_SERVER_TYPE_UDP = 1_u32
  AI_DNS_SERVER_TYPE_DOH = 2_u32
  AI_DNS_SERVER_UDP_FALLBACK = 1_u32
  AI_DNS_RESPONSE_SECURE = 1_u32
  AI_DNS_RESPONSE_HOSTFILE = 2_u32
  NS_ALL = 0_u32
  NS_SAP = 1_u32
  NS_NDS = 2_u32
  NS_PEER_BROWSE = 3_u32
  NS_SLP = 5_u32
  NS_DHCP = 6_u32
  NS_TCPIP_LOCAL = 10_u32
  NS_TCPIP_HOSTS = 11_u32
  NS_DNS = 12_u32
  NS_NETBT = 13_u32
  NS_WINS = 14_u32
  NS_NLA = 15_u32
  NS_NBP = 20_u32
  NS_MS = 30_u32
  NS_STDA = 31_u32
  NS_NTDS = 32_u32
  NS_EMAIL = 37_u32
  NS_X500 = 40_u32
  NS_NIS = 41_u32
  NS_NISPLUS = 42_u32
  NS_WRQ = 50_u32
  NS_NETDES = 60_u32
  NI_NOFQDN = 1_u32
  NI_NUMERICHOST = 2_u32
  NI_NAMEREQD = 4_u32
  NI_NUMERICSERV = 8_u32
  NI_DGRAM = 16_u32
  NI_MAXHOST = 1025_u32
  NI_MAXSERV = 32_u32
  IFF_UP = 1_u32
  IFF_BROADCAST = 2_u32
  IFF_LOOPBACK = 4_u32
  IFF_POINTTOPOINT = 8_u32
  IFF_MULTICAST = 16_u32
  IP_OPTIONS = 1_u32
  IP_HDRINCL = 2_u32
  IP_TOS = 3_u32
  IP_TTL = 4_u32
  IP_MULTICAST_IF = 9_u32
  IP_MULTICAST_TTL = 10_u32
  IP_MULTICAST_LOOP = 11_u32
  IP_ADD_MEMBERSHIP = 12_u32
  IP_DROP_MEMBERSHIP = 13_u32
  IP_DONTFRAGMENT = 14_u32
  IP_ADD_SOURCE_MEMBERSHIP = 15_u32
  IP_DROP_SOURCE_MEMBERSHIP = 16_u32
  IP_BLOCK_SOURCE = 17_u32
  IP_UNBLOCK_SOURCE = 18_u32
  IP_PKTINFO = 19_u32
  IP_HOPLIMIT = 21_u32
  IP_RECVTTL = 21_u32
  IP_RECEIVE_BROADCAST = 22_u32
  IP_RECVIF = 24_u32
  IP_RECVDSTADDR = 25_u32
  IP_IFLIST = 28_u32
  IP_ADD_IFLIST = 29_u32
  IP_DEL_IFLIST = 30_u32
  IP_UNICAST_IF = 31_u32
  IP_RTHDR = 32_u32
  IP_GET_IFLIST = 33_u32
  IP_RECVRTHDR = 38_u32
  IP_TCLASS = 39_u32
  IP_RECVTCLASS = 40_u32
  IP_RECVTOS = 40_u32
  IP_ORIGINAL_ARRIVAL_IF = 47_u32
  IP_ECN = 50_u32
  IP_RECVECN = 50_u32
  IP_PKTINFO_EX = 51_u32
  IP_WFP_REDIRECT_RECORDS = 60_u32
  IP_WFP_REDIRECT_CONTEXT = 70_u32
  IP_MTU_DISCOVER = 71_u32
  IP_MTU = 73_u32
  IP_NRT_INTERFACE = 74_u32
  IP_RECVERR = 75_u32
  IP_USER_MTU = 76_u32
  IP_UNSPECIFIED_TYPE_OF_SERVICE = -1_i32
  IP_UNSPECIFIED_USER_MTU = 4294967295_u32
  IN6ADDR_LINKLOCALPREFIX_LENGTH = 64_u32
  IN6ADDR_MULTICASTPREFIX_LENGTH = 8_u32
  IN6ADDR_SOLICITEDNODEMULTICASTPREFIX_LENGTH = 104_u32
  IN6ADDR_V4MAPPEDPREFIX_LENGTH = 96_u32
  IN6ADDR_6TO4PREFIX_LENGTH = 16_u32
  IN6ADDR_TEREDOPREFIX_LENGTH = 32_u32
  MCAST_JOIN_GROUP = 41_u32
  MCAST_LEAVE_GROUP = 42_u32
  MCAST_BLOCK_SOURCE = 43_u32
  MCAST_UNBLOCK_SOURCE = 44_u32
  MCAST_JOIN_SOURCE_GROUP = 45_u32
  MCAST_LEAVE_SOURCE_GROUP = 46_u32
  IPV6_HOPOPTS = 1_u32
  IPV6_HDRINCL = 2_u32
  IPV6_UNICAST_HOPS = 4_u32
  IPV6_MULTICAST_IF = 9_u32
  IPV6_MULTICAST_HOPS = 10_u32
  IPV6_MULTICAST_LOOP = 11_u32
  IPV6_ADD_MEMBERSHIP = 12_u32
  IPV6_JOIN_GROUP = 12_u32
  IPV6_DROP_MEMBERSHIP = 13_u32
  IPV6_LEAVE_GROUP = 13_u32
  IPV6_DONTFRAG = 14_u32
  IPV6_PKTINFO = 19_u32
  IPV6_HOPLIMIT = 21_u32
  IPV6_PROTECTION_LEVEL = 23_u32
  IPV6_RECVIF = 24_u32
  IPV6_RECVDSTADDR = 25_u32
  IPV6_CHECKSUM = 26_u32
  IPV6_V6ONLY = 27_u32
  IPV6_IFLIST = 28_u32
  IPV6_ADD_IFLIST = 29_u32
  IPV6_DEL_IFLIST = 30_u32
  IPV6_UNICAST_IF = 31_u32
  IPV6_RTHDR = 32_u32
  IPV6_GET_IFLIST = 33_u32
  IPV6_RECVRTHDR = 38_u32
  IPV6_TCLASS = 39_u32
  IPV6_RECVTCLASS = 40_u32
  IPV6_ECN = 50_u32
  IPV6_RECVECN = 50_u32
  IPV6_PKTINFO_EX = 51_u32
  IPV6_WFP_REDIRECT_RECORDS = 60_u32
  IPV6_WFP_REDIRECT_CONTEXT = 70_u32
  IPV6_MTU_DISCOVER = 71_u32
  IPV6_MTU = 72_u32
  IPV6_NRT_INTERFACE = 74_u32
  IPV6_RECVERR = 75_u32
  IPV6_USER_MTU = 76_u32
  IP_UNSPECIFIED_HOP_LIMIT = -1_i32
  IP_PROTECTION_LEVEL = 23_u32
  PROTECTION_LEVEL_UNRESTRICTED = 10_u32
  PROTECTION_LEVEL_EDGERESTRICTED = 20_u32
  PROTECTION_LEVEL_RESTRICTED = 30_u32
  PROTECTION_LEVEL_DEFAULT = 20_u32
  INET_ADDRSTRLEN = 22_u32
  INET6_ADDRSTRLEN = 65_u32
  TCP_OFFLOAD_NO_PREFERENCE = 0_u32
  TCP_OFFLOAD_NOT_PREFERRED = 1_u32
  TCP_OFFLOAD_PREFERRED = 2_u32
  TCP_EXPEDITED_1122 = 2_u32
  TCP_KEEPALIVE = 3_u32
  TCP_MAXSEG = 4_u32
  TCP_MAXRT = 5_u32
  TCP_STDURG = 6_u32
  TCP_NOURG = 7_u32
  TCP_ATMARK = 8_u32
  TCP_NOSYNRETRIES = 9_u32
  TCP_TIMESTAMPS = 10_u32
  TCP_OFFLOAD_PREFERENCE = 11_u32
  TCP_CONGESTION_ALGORITHM = 12_u32
  TCP_DELAY_FIN_ACK = 13_u32
  TCP_MAXRTMS = 14_u32
  TCP_FASTOPEN = 15_u32
  TCP_KEEPCNT = 16_u32
  TCP_KEEPIDLE = 3_u32
  TCP_KEEPINTVL = 17_u32
  TCP_FAIL_CONNECT_ON_ICMP_ERROR = 18_u32
  TCP_ICMP_ERROR_INFO = 19_u32
  UDP_SEND_MSG_SIZE = 2_u32
  UDP_RECV_MAX_COALESCED_SIZE = 3_u32
  UDP_COALESCED_INFO = 3_u32
  WINDOWS_AF_IRDA = 26_u32
  WINDOWS_PF_IRDA = 26_u32
  WCE_AF_IRDA = 22_u32
  WCE_PF_IRDA = 22_u32
  IRDA_PROTO_SOCK_STREAM = 1_u32
  PF_IRDA = 26_u16
  SOL_IRLMP = 255_u32
  IRLMP_ENUMDEVICES = 16_u32
  IRLMP_IAS_SET = 17_u32
  IRLMP_IAS_QUERY = 18_u32
  IRLMP_SEND_PDU_LEN = 19_u32
  IRLMP_EXCLUSIVE_MODE = 20_u32
  IRLMP_IRLPT_MODE = 21_u32
  IRLMP_9WIRE_MODE = 22_u32
  IRLMP_TINYTP_MODE = 23_u32
  IRLMP_PARAMETERS = 24_u32
  IRLMP_DISCOVERY_MODE = 25_u32
  IRLMP_SHARP_MODE = 32_u32
  IAS_ATTRIB_NO_CLASS = 16_u32
  IAS_ATTRIB_NO_ATTRIB = 0_u32
  IAS_ATTRIB_INT = 1_u32
  IAS_ATTRIB_OCTETSEQ = 2_u32
  IAS_ATTRIB_STR = 3_u32
  IAS_MAX_USER_STRING = 256_u32
  IAS_MAX_OCTET_STRING = 1024_u32
  IAS_MAX_CLASSNAME = 64_u32
  IAS_MAX_ATTRIBNAME = 256_u32
  LmCharSetASCII = 0_u32
  LmCharSetISO_8859_1 = 1_u32
  LmCharSetISO_8859_2 = 2_u32
  LmCharSetISO_8859_3 = 3_u32
  LmCharSetISO_8859_4 = 4_u32
  LmCharSetISO_8859_5 = 5_u32
  LmCharSetISO_8859_6 = 6_u32
  LmCharSetISO_8859_7 = 7_u32
  LmCharSetISO_8859_8 = 8_u32
  LmCharSetISO_8859_9 = 9_u32
  LmCharSetUNICODE = 255_u32
  LM_BAUD_1200 = 1200_u32
  LM_BAUD_2400 = 2400_u32
  LM_BAUD_9600 = 9600_u32
  LM_BAUD_19200 = 19200_u32
  LM_BAUD_38400 = 38400_u32
  LM_BAUD_57600 = 57600_u32
  LM_BAUD_115200 = 115200_u32
  LM_BAUD_576K = 576000_u32
  LM_BAUD_1152K = 1152000_u32
  LM_BAUD_4M = 4000000_u32
  LM_BAUD_16M = 16000000_u32
  SO_CONNDATA = 28672_u32
  SO_CONNOPT = 28673_u32
  SO_DISCDATA = 28674_u32
  SO_DISCOPT = 28675_u32
  SO_CONNDATALEN = 28676_u32
  SO_CONNOPTLEN = 28677_u32
  SO_DISCDATALEN = 28678_u32
  SO_DISCOPTLEN = 28679_u32
  SO_OPENTYPE = 28680_u32
  SO_SYNCHRONOUS_ALERT = 16_u32
  SO_SYNCHRONOUS_NONALERT = 32_u32
  SO_MAXDG = 28681_u32
  SO_MAXPATHDG = 28682_u32
  SO_UPDATE_ACCEPT_CONTEXT = 28683_u32
  SO_CONNECT_TIME = 28684_u32
  SO_UPDATE_CONNECT_CONTEXT = 28688_u32
  TCP_BSDURGENT = 28672_u32
  SIO_UDP_CONNRESET = 2550136844_u32
  SIO_SOCKET_CLOSE_NOTIFY = 2550136845_u32
  SIO_UDP_NETRESET = 2550136847_u32
  TF_DISCONNECT = 1_u32
  TF_REUSE_SOCKET = 2_u32
  TF_WRITE_BEHIND = 4_u32
  TF_USE_DEFAULT_WORKER = 0_u32
  TF_USE_SYSTEM_THREAD = 16_u32
  TF_USE_KERNEL_APC = 32_u32
  TP_ELEMENT_MEMORY = 1_u32
  TP_ELEMENT_FILE = 2_u32
  TP_ELEMENT_EOP = 4_u32
  TP_DISCONNECT = 1_u32
  TP_REUSE_SOCKET = 2_u32
  TP_USE_DEFAULT_WORKER = 0_u32
  TP_USE_SYSTEM_THREAD = 16_u32
  TP_USE_KERNEL_APC = 32_u32
  DE_REUSE_SOCKET = 2_u32
  NLA_ALLUSERS_NETWORK = 1_u32
  NLA_FRIENDLY_NAME = 2_u32
  SIO_BSP_HANDLE = 1207959579_u32
  SIO_BSP_HANDLE_SELECT = 1207959580_u32
  SIO_BSP_HANDLE_POLL = 1207959581_u32
  SIO_BASE_HANDLE = 1207959586_u32
  SIO_EXT_SELECT = 3355443230_u32
  SIO_EXT_POLL = 3355443231_u32
  SIO_EXT_SENDMSG = 3355443232_u32
  SERVICE_RESOURCE = 1_u32
  SERVICE_SERVICE = 2_u32
  SERVICE_LOCAL = 4_u32
  SERVICE_FLAG_DEFER = 1_u32
  SERVICE_FLAG_HARD = 2_u32
  PROP_COMMENT = 1_u32
  PROP_LOCALE = 2_u32
  PROP_DISPLAY_HINT = 4_u32
  PROP_VERSION = 8_u32
  PROP_START_TIME = 16_u32
  PROP_MACHINE = 32_u32
  PROP_ADDRESSES = 256_u32
  PROP_SD = 512_u32
  PROP_ALL = 2147483648_u32
  SERVICE_ADDRESS_FLAG_RPC_CN = 1_u32
  SERVICE_ADDRESS_FLAG_RPC_DG = 2_u32
  SERVICE_ADDRESS_FLAG_RPC_NB = 4_u32
  NS_DEFAULT = 0_u32
  NS_VNS = 50_u32
  NSTYPE_HIERARCHICAL = 1_u32
  NSTYPE_DYNAMIC = 2_u32
  NSTYPE_ENUMERABLE = 4_u32
  NSTYPE_WORKGROUP = 8_u32
  XP_CONNECTIONLESS = 1_u32
  XP_GUARANTEED_DELIVERY = 2_u32
  XP_GUARANTEED_ORDER = 4_u32
  XP_MESSAGE_ORIENTED = 8_u32
  XP_PSEUDO_STREAM = 16_u32
  XP_GRACEFUL_CLOSE = 32_u32
  XP_EXPEDITED_DATA = 64_u32
  XP_CONNECT_DATA = 128_u32
  XP_DISCONNECT_DATA = 256_u32
  XP_SUPPORTS_BROADCAST = 512_u32
  XP_SUPPORTS_MULTICAST = 1024_u32
  XP_BANDWIDTH_ALLOCATION = 2048_u32
  XP_FRAGMENTATION = 4096_u32
  XP_ENCRYPTS = 8192_u32
  RES_SOFT_SEARCH = 1_u32
  RES_FIND_MULTIPLE = 2_u32
  RES_SERVICE = 4_u32
  SERVICE_TYPE_VALUE_SAPIDA = "SapId"
  SERVICE_TYPE_VALUE_SAPIDW = "SapId"
  SERVICE_TYPE_VALUE_CONNA = "ConnectionOriented"
  SERVICE_TYPE_VALUE_CONNW = "ConnectionOriented"
  SERVICE_TYPE_VALUE_TCPPORTA = "TcpPort"
  SERVICE_TYPE_VALUE_TCPPORTW = "TcpPort"
  SERVICE_TYPE_VALUE_UDPPORTA = "UdpPort"
  SERVICE_TYPE_VALUE_UDPPORTW = "UdpPort"
  SERVICE_TYPE_VALUE_SAPID = "SapId"
  SERVICE_TYPE_VALUE_CONN = "ConnectionOriented"
  SERVICE_TYPE_VALUE_TCPPORT = "TcpPort"
  SERVICE_TYPE_VALUE_UDPPORT = "UdpPort"
  SET_SERVICE_PARTIAL_SUCCESS = 1_u32
  FD_SETSIZE = 64_u32
  IMPLINK_IP = 155_u32
  IMPLINK_LOWEXPER = 156_u32
  IMPLINK_HIGHEXPER = 158_u32
  WSADESCRIPTION_LEN = 256_u32
  WSASYS_STATUS_LEN = 128_u32
  IP_DEFAULT_MULTICAST_TTL = 1_u32
  IP_DEFAULT_MULTICAST_LOOP = 1_u32
  IP_MAX_MEMBERSHIPS = 20_u32
  SOCKET_ERROR = -1_i32
  PF_UNIX = 1_u16
  PF_IMPLINK = 3_u16
  PF_PUP = 4_u16
  PF_CHAOS = 5_u16
  PF_NS = 6_u16
  PF_IPX = 6_u16
  PF_ISO = 7_u16
  PF_OSI = 7_u16
  PF_ECMA = 8_u16
  PF_DATAKIT = 9_u16
  PF_CCITT = 10_u16
  PF_SNA = 11_u16
  PF_DECnet = 12_u16
  PF_DLI = 13_u16
  PF_LAT = 14_u16
  PF_HYLINK = 15_u16
  PF_APPLETALK = 16_u16
  PF_VOICEVIEW = 18_u16
  PF_FIREFOX = 19_u16
  PF_UNKNOWN1 = 20_u16
  PF_BAN = 21_u16
  PF_MAX = 29_u16
  SOMAXCONN = 5_u32
  MSG_MAXIOVLEN = 16_u32
  MSG_PARTIAL = 32768_u32
  MAXGETHOSTSTRUCT = 1024_u32
  FD_READ = 1_u32
  FD_WRITE = 2_u32
  FD_OOB = 4_u32
  FD_ACCEPT = 8_u32
  FD_CONNECT = 16_u32
  FD_CLOSE = 32_u32
  INCL_WINSOCK_API_PROTOTYPES = 1_u32
  INCL_WINSOCK_API_TYPEDEFS = 0_u32
  FROM_PROTOCOL_INFO = -1_i32
  SO_PROTOCOL_INFOA = 8196_u32
  SO_PROTOCOL_INFOW = 8197_u32
  SO_PROTOCOL_INFO = 8197_u32
  PVD_CONFIG = 12289_u32
  PF_ATM = 22_u16
  MSG_INTERRUPT = 16_u32
  FD_READ_BIT = 0_u32
  FD_WRITE_BIT = 1_u32
  FD_OOB_BIT = 2_u32
  FD_ACCEPT_BIT = 3_u32
  FD_CONNECT_BIT = 4_u32
  FD_CLOSE_BIT = 5_u32
  FD_QOS_BIT = 6_u32
  FD_GROUP_QOS_BIT = 7_u32
  FD_ROUTING_INTERFACE_CHANGE_BIT = 8_u32
  FD_ADDRESS_LIST_CHANGE_BIT = 9_u32
  FD_MAX_EVENTS = 10_u32
  WSA_MAXIMUM_WAIT_EVENTS = 64_u32
  WSA_WAIT_FAILED = 4294967295_u32
  CF_ACCEPT = 0_u32
  CF_REJECT = 1_u32
  CF_DEFER = 2_u32
  SD_RECEIVE = 0_u32
  SD_SEND = 1_u32
  SD_BOTH = 2_u32
  SG_UNCONSTRAINED_GROUP = 1_u32
  SG_CONSTRAINED_GROUP = 2_u32
  MAX_PROTOCOL_CHAIN = 7_u32
  BASE_PROTOCOL = 1_u32
  LAYERED_PROTOCOL = 0_u32
  WSAPROTOCOL_LEN = 255_u32
  PFL_MULTIPLE_PROTO_ENTRIES = 1_u32
  PFL_RECOMMENDED_PROTO_ENTRY = 2_u32
  PFL_HIDDEN = 4_u32
  PFL_MATCHES_PROTOCOL_ZERO = 8_u32
  PFL_NETWORKDIRECT_PROVIDER = 16_u32
  XP1_CONNECTIONLESS = 1_u32
  XP1_GUARANTEED_DELIVERY = 2_u32
  XP1_GUARANTEED_ORDER = 4_u32
  XP1_MESSAGE_ORIENTED = 8_u32
  XP1_PSEUDO_STREAM = 16_u32
  XP1_GRACEFUL_CLOSE = 32_u32
  XP1_EXPEDITED_DATA = 64_u32
  XP1_CONNECT_DATA = 128_u32
  XP1_DISCONNECT_DATA = 256_u32
  XP1_SUPPORT_BROADCAST = 512_u32
  XP1_SUPPORT_MULTIPOINT = 1024_u32
  XP1_MULTIPOINT_CONTROL_PLANE = 2048_u32
  XP1_MULTIPOINT_DATA_PLANE = 4096_u32
  XP1_QOS_SUPPORTED = 8192_u32
  XP1_INTERRUPT = 16384_u32
  XP1_UNI_SEND = 32768_u32
  XP1_UNI_RECV = 65536_u32
  XP1_IFS_HANDLES = 131072_u32
  XP1_PARTIAL_MESSAGE = 262144_u32
  XP1_SAN_SUPPORT_SDP = 524288_u32
  BIGENDIAN = 0_u32
  LITTLEENDIAN = 1_u32
  SECURITY_PROTOCOL_NONE = 0_u32
  JL_SENDER_ONLY = 1_u32
  JL_RECEIVER_ONLY = 2_u32
  JL_BOTH = 4_u32
  WSA_FLAG_OVERLAPPED = 1_u32
  WSA_FLAG_MULTIPOINT_C_ROOT = 2_u32
  WSA_FLAG_MULTIPOINT_C_LEAF = 4_u32
  WSA_FLAG_MULTIPOINT_D_ROOT = 8_u32
  WSA_FLAG_MULTIPOINT_D_LEAF = 16_u32
  WSA_FLAG_ACCESS_SYSTEM_SECURITY = 64_u32
  WSA_FLAG_NO_HANDLE_INHERIT = 128_u32
  WSA_FLAG_REGISTERED_IO = 256_u32
  SIO_NSP_NOTIFY_CHANGE = 2281701401_u32
  TH_NETDEV = 1_u32
  TH_TAPI = 2_u32
  SERVICE_MULTIPLE = 1_u32
  NS_LOCALNAME = 19_u32
  RES_UNUSED_1 = 1_u32
  RES_FLUSH_CACHE = 2_u32
  SERVICE_TYPE_VALUE_IPXPORTA = "IpxSocket"
  SERVICE_TYPE_VALUE_IPXPORTW = "IpxSocket"
  SERVICE_TYPE_VALUE_OBJECTIDA = "ObjectId"
  SERVICE_TYPE_VALUE_OBJECTIDW = "ObjectId"
  SERVICE_TYPE_VALUE_OBJECTID = "ObjectId"
  LUP_DEEP = 1_u32
  LUP_CONTAINERS = 2_u32
  LUP_NOCONTAINERS = 4_u32
  LUP_NEAREST = 8_u32
  LUP_RETURN_NAME = 16_u32
  LUP_RETURN_TYPE = 32_u32
  LUP_RETURN_VERSION = 64_u32
  LUP_RETURN_COMMENT = 128_u32
  LUP_RETURN_ADDR = 256_u32
  LUP_RETURN_BLOB = 512_u32
  LUP_RETURN_ALIASES = 1024_u32
  LUP_RETURN_QUERY_STRING = 2048_u32
  LUP_RETURN_ALL = 4080_u32
  LUP_RES_SERVICE = 32768_u32
  LUP_FLUSHCACHE = 4096_u32
  LUP_FLUSHPREVIOUS = 8192_u32
  LUP_NON_AUTHORITATIVE = 16384_u32
  LUP_SECURE = 32768_u32
  LUP_RETURN_PREFERRED_NAMES = 65536_u32
  LUP_DNS_ONLY = 131072_u32
  LUP_RETURN_RESPONSE_FLAGS = 262144_u32
  LUP_ADDRCONFIG = 1048576_u32
  LUP_DUAL_ADDR = 2097152_u32
  LUP_FILESERVER = 4194304_u32
  LUP_DISABLE_IDN_ENCODING = 8388608_u32
  LUP_API_ANSI = 16777216_u32
  LUP_EXTENDED_QUERYSET = 33554432_u32
  LUP_SECURE_WITH_FALLBACK = 67108864_u32
  LUP_EXCLUSIVE_CUSTOM_SERVERS = 134217728_u32
  LUP_REQUIRE_SECURE = 268435456_u32
  LUP_RETURN_TTL = 536870912_u32
  LUP_FORCE_CLEAR_TEXT = 1073741824_u32
  LUP_RESOLUTION_HANDLE = 2147483648_u32
  RESULT_IS_ALIAS = 1_u32
  RESULT_IS_ADDED = 16_u32
  RESULT_IS_CHANGED = 32_u32
  RESULT_IS_DELETED = 64_u32
  POLLRDNORM = 256_u16
  POLLRDBAND = 512_u16
  POLLPRI = 1024_u16
  POLLWRNORM = 16_u16
  POLLOUT = 16_u16
  POLLWRBAND = 32_u16
  POLLERR = 1_u16
  POLLHUP = 2_u16
  POLLNVAL = 4_u16
  SOCK_NOTIFY_REGISTER_EVENT_NONE = 0_u32
  SOCK_NOTIFY_REGISTER_EVENT_IN = 1_u32
  SOCK_NOTIFY_REGISTER_EVENT_OUT = 2_u32
  SOCK_NOTIFY_REGISTER_EVENT_HANGUP = 4_u32
  SOCK_NOTIFY_EVENT_IN = 1_u32
  SOCK_NOTIFY_EVENT_OUT = 2_u32
  SOCK_NOTIFY_EVENT_HANGUP = 4_u32
  SOCK_NOTIFY_EVENT_ERR = 64_u32
  SOCK_NOTIFY_EVENT_REMOVE = 128_u32
  SOCK_NOTIFY_OP_NONE = 0_u32
  SOCK_NOTIFY_OP_ENABLE = 1_u32
  SOCK_NOTIFY_OP_DISABLE = 2_u32
  SOCK_NOTIFY_OP_REMOVE = 4_u32
  SOCK_NOTIFY_TRIGGER_ONESHOT = 1_u32
  SOCK_NOTIFY_TRIGGER_PERSISTENT = 2_u32
  SOCK_NOTIFY_TRIGGER_LEVEL = 4_u32
  SOCK_NOTIFY_TRIGGER_EDGE = 8_u32
  ATMPROTO_AALUSER = 0_u32
  ATMPROTO_AAL1 = 1_u32
  ATMPROTO_AAL2 = 2_u32
  ATMPROTO_AAL34 = 3_u32
  ATMPROTO_AAL5 = 5_u32
  SAP_FIELD_ABSENT = 4294967294_u32
  SAP_FIELD_ANY = 4294967295_u32
  SAP_FIELD_ANY_AESA_SEL = 4294967290_u32
  SAP_FIELD_ANY_AESA_REST = 4294967291_u32
  ATM_E164 = 1_u32
  ATM_NSAP = 2_u32
  ATM_AESA = 2_u32
  ATM_ADDR_SIZE = 20_u32
  BLLI_L2_ISO_1745 = 1_u32
  BLLI_L2_Q921 = 2_u32
  BLLI_L2_X25L = 6_u32
  BLLI_L2_X25M = 7_u32
  BLLI_L2_ELAPB = 8_u32
  BLLI_L2_HDLC_ARM = 9_u32
  BLLI_L2_HDLC_NRM = 10_u32
  BLLI_L2_HDLC_ABM = 11_u32
  BLLI_L2_LLC = 12_u32
  BLLI_L2_X75 = 13_u32
  BLLI_L2_Q922 = 14_u32
  BLLI_L2_USER_SPECIFIED = 16_u32
  BLLI_L2_ISO_7776 = 17_u32
  BLLI_L3_X25 = 6_u32
  BLLI_L3_ISO_8208 = 7_u32
  BLLI_L3_X223 = 8_u32
  BLLI_L3_SIO_8473 = 9_u32
  BLLI_L3_T70 = 10_u32
  BLLI_L3_ISO_TR9577 = 11_u32
  BLLI_L3_USER_SPECIFIED = 16_u32
  BLLI_L3_IPI_SNAP = 128_u32
  BLLI_L3_IPI_IP = 204_u32
  BHLI_ISO = 0_u32
  BHLI_UserSpecific = 1_u32
  BHLI_HighLayerProfile = 2_u32
  BHLI_VendorSpecificAppId = 3_u32
  AAL5_MODE_MESSAGE = 1_u32
  AAL5_MODE_STREAMING = 2_u32
  AAL5_SSCS_NULL = 0_u32
  AAL5_SSCS_SSCOP_ASSURED = 1_u32
  AAL5_SSCS_SSCOP_NON_ASSURED = 2_u32
  AAL5_SSCS_FRAME_RELAY = 4_u32
  BCOB_A = 1_u32
  BCOB_C = 3_u32
  BCOB_X = 16_u32
  TT_NOIND = 0_u32
  TT_CBR = 4_u32
  TT_VBR = 8_u32
  TR_NOIND = 0_u32
  TR_END_TO_END = 1_u32
  TR_NO_END_TO_END = 2_u32
  CLIP_NOT = 0_u32
  CLIP_SUS = 32_u32
  UP_P2P = 0_u32
  UP_P2MP = 1_u32
  BLLI_L2_MODE_NORMAL = 64_u32
  BLLI_L2_MODE_EXT = 128_u32
  BLLI_L3_MODE_NORMAL = 64_u32
  BLLI_L3_MODE_EXT = 128_u32
  BLLI_L3_PACKET_16 = 4_u32
  BLLI_L3_PACKET_32 = 5_u32
  BLLI_L3_PACKET_64 = 6_u32
  BLLI_L3_PACKET_128 = 7_u32
  BLLI_L3_PACKET_256 = 8_u32
  BLLI_L3_PACKET_512 = 9_u32
  BLLI_L3_PACKET_1024 = 10_u32
  BLLI_L3_PACKET_2048 = 11_u32
  BLLI_L3_PACKET_4096 = 12_u32
  PI_ALLOWED = 0_u32
  PI_RESTRICTED = 64_u32
  PI_NUMBER_NOT_AVAILABLE = 128_u32
  SI_USER_NOT_SCREENED = 0_u32
  SI_USER_PASSED = 1_u32
  SI_USER_FAILED = 2_u32
  SI_NETWORK = 3_u32
  CAUSE_LOC_USER = 0_u32
  CAUSE_LOC_PRIVATE_LOCAL = 1_u32
  CAUSE_LOC_PUBLIC_LOCAL = 2_u32
  CAUSE_LOC_TRANSIT_NETWORK = 3_u32
  CAUSE_LOC_PUBLIC_REMOTE = 4_u32
  CAUSE_LOC_PRIVATE_REMOTE = 5_u32
  CAUSE_LOC_INTERNATIONAL_NETWORK = 7_u32
  CAUSE_LOC_BEYOND_INTERWORKING = 10_u32
  CAUSE_UNALLOCATED_NUMBER = 1_u32
  CAUSE_NO_ROUTE_TO_TRANSIT_NETWORK = 2_u32
  CAUSE_NO_ROUTE_TO_DESTINATION = 3_u32
  CAUSE_VPI_VCI_UNACCEPTABLE = 10_u32
  CAUSE_NORMAL_CALL_CLEARING = 16_u32
  CAUSE_USER_BUSY = 17_u32
  CAUSE_NO_USER_RESPONDING = 18_u32
  CAUSE_CALL_REJECTED = 21_u32
  CAUSE_NUMBER_CHANGED = 22_u32
  CAUSE_USER_REJECTS_CLIR = 23_u32
  CAUSE_DESTINATION_OUT_OF_ORDER = 27_u32
  CAUSE_INVALID_NUMBER_FORMAT = 28_u32
  CAUSE_STATUS_ENQUIRY_RESPONSE = 30_u32
  CAUSE_NORMAL_UNSPECIFIED = 31_u32
  CAUSE_VPI_VCI_UNAVAILABLE = 35_u32
  CAUSE_NETWORK_OUT_OF_ORDER = 38_u32
  CAUSE_TEMPORARY_FAILURE = 41_u32
  CAUSE_ACCESS_INFORMAION_DISCARDED = 43_u32
  CAUSE_NO_VPI_VCI_AVAILABLE = 45_u32
  CAUSE_RESOURCE_UNAVAILABLE = 47_u32
  CAUSE_QOS_UNAVAILABLE = 49_u32
  CAUSE_USER_CELL_RATE_UNAVAILABLE = 51_u32
  CAUSE_BEARER_CAPABILITY_UNAUTHORIZED = 57_u32
  CAUSE_BEARER_CAPABILITY_UNAVAILABLE = 58_u32
  CAUSE_OPTION_UNAVAILABLE = 63_u32
  CAUSE_BEARER_CAPABILITY_UNIMPLEMENTED = 65_u32
  CAUSE_UNSUPPORTED_TRAFFIC_PARAMETERS = 73_u32
  CAUSE_INVALID_CALL_REFERENCE = 81_u32
  CAUSE_CHANNEL_NONEXISTENT = 82_u32
  CAUSE_INCOMPATIBLE_DESTINATION = 88_u32
  CAUSE_INVALID_ENDPOINT_REFERENCE = 89_u32
  CAUSE_INVALID_TRANSIT_NETWORK_SELECTION = 91_u32
  CAUSE_TOO_MANY_PENDING_ADD_PARTY = 92_u32
  CAUSE_AAL_PARAMETERS_UNSUPPORTED = 93_u32
  CAUSE_MANDATORY_IE_MISSING = 96_u32
  CAUSE_UNIMPLEMENTED_MESSAGE_TYPE = 97_u32
  CAUSE_UNIMPLEMENTED_IE = 99_u32
  CAUSE_INVALID_IE_CONTENTS = 100_u32
  CAUSE_INVALID_STATE_FOR_MESSAGE = 101_u32
  CAUSE_RECOVERY_ON_TIMEOUT = 102_u32
  CAUSE_INCORRECT_MESSAGE_LENGTH = 104_u32
  CAUSE_PROTOCOL_ERROR = 111_u32
  CAUSE_COND_UNKNOWN = 0_u32
  CAUSE_COND_PERMANENT = 1_u32
  CAUSE_COND_TRANSIENT = 2_u32
  CAUSE_REASON_USER = 0_u32
  CAUSE_REASON_IE_MISSING = 4_u32
  CAUSE_REASON_IE_INSUFFICIENT = 8_u32
  CAUSE_PU_PROVIDER = 0_u32
  CAUSE_PU_USER = 8_u32
  CAUSE_NA_NORMAL = 0_u32
  CAUSE_NA_ABNORMAL = 4_u32
  QOS_CLASS0 = 0_u32
  QOS_CLASS1 = 1_u32
  QOS_CLASS2 = 2_u32
  QOS_CLASS3 = 3_u32
  QOS_CLASS4 = 4_u32
  TNS_TYPE_NATIONAL = 64_u32
  TNS_PLAN_CARRIER_ID_CODE = 1_u32
  SIO_GET_NUMBER_OF_ATM_DEVICES = 1343619073_u32
  SIO_GET_ATM_ADDRESS = 3491102722_u32
  SIO_ASSOCIATE_PVC = 2417360899_u32
  SIO_GET_ATM_CONNECTION_ID = 1343619076_u32
  WSPDESCRIPTION_LEN = 255_u32
  WSS_OPERATION_IN_PROGRESS = 259_i32
  LSP_SYSTEM = 2147483648_u32
  LSP_INSPECTOR = 1_u32
  LSP_REDIRECTOR = 2_u32
  LSP_PROXY = 4_u32
  LSP_FIREWALL = 8_u32
  LSP_INBOUND_MODIFY = 16_u32
  LSP_OUTBOUND_MODIFY = 32_u32
  LSP_CRYPTO_COMPRESS = 64_u32
  LSP_LOCAL_CACHE = 128_u32
  UDP_NOCHECKSUM = 1_u32
  UDP_CHECKSUM_COVERAGE = 20_u32
  GAI_STRERROR_BUFFER_SIZE = 1024_u32
  IPX_PTYPE = 16384_u32
  IPX_FILTERPTYPE = 16385_u32
  IPX_STOPFILTERPTYPE = 16387_u32
  IPX_DSTYPE = 16386_u32
  IPX_EXTENDED_ADDRESS = 16388_u32
  IPX_RECVHDR = 16389_u32
  IPX_MAXSIZE = 16390_u32
  IPX_ADDRESS = 16391_u32
  IPX_GETNETINFO = 16392_u32
  IPX_GETNETINFO_NORIP = 16393_u32
  IPX_SPXGETCONNECTIONSTATUS = 16395_u32
  IPX_ADDRESS_NOTIFY = 16396_u32
  IPX_MAX_ADAPTER_NUM = 16397_u32
  IPX_RERIPNETNUMBER = 16398_u32
  IPX_RECEIVE_BROADCAST = 16399_u32
  IPX_IMMEDIATESPXACK = 16400_u32
  IPPROTO_RM = 113_u32
  MAX_MCAST_TTL = 255_u32
  RM_OPTIONSBASE = 1000_u32
  RM_RATE_WINDOW_SIZE = 1001_u32
  RM_SET_MESSAGE_BOUNDARY = 1002_u32
  RM_FLUSHCACHE = 1003_u32
  RM_SENDER_WINDOW_ADVANCE_METHOD = 1004_u32
  RM_SENDER_STATISTICS = 1005_u32
  RM_LATEJOIN = 1006_u32
  RM_SET_SEND_IF = 1007_u32
  RM_ADD_RECEIVE_IF = 1008_u32
  RM_DEL_RECEIVE_IF = 1009_u32
  RM_SEND_WINDOW_ADV_RATE = 1010_u32
  RM_USE_FEC = 1011_u32
  RM_SET_MCAST_TTL = 1012_u32
  RM_RECEIVER_STATISTICS = 1013_u32
  RM_HIGH_SPEED_INTRANET_OPT = 1014_u32
  SENDER_DEFAULT_RATE_KBITS_PER_SEC = 56_u32
  SENDER_DEFAULT_WINDOW_ADV_PERCENTAGE = 15_u32
  MAX_WINDOW_INCREMENT_PERCENTAGE = 25_u32
  SENDER_DEFAULT_LATE_JOINER_PERCENTAGE = 0_u32
  SENDER_MAX_LATE_JOINER_PERCENTAGE = 75_u32
  BITS_PER_BYTE = 8_u32
  LOG2_BITS_PER_BYTE = 3_u32
  UNIX_PATH_MAX = 108_u32
  SIO_AF_UNIX_GETPEERPID = 1476395264_u32
  SIO_AF_UNIX_SETBINDPARENTPATH = 2550137089_u32
  SIO_AF_UNIX_SETCONNPARENTPATH = 2550137090_u32
  ISOPROTO_TP0 = 25_u32
  ISOPROTO_TP1 = 26_u32
  ISOPROTO_TP2 = 27_u32
  ISOPROTO_TP3 = 28_u32
  ISOPROTO_TP4 = 29_u32
  ISOPROTO_TP = 29_u32
  ISOPROTO_CLTP = 30_u32
  ISOPROTO_CLNP = 31_u32
  ISOPROTO_X25 = 32_u32
  ISOPROTO_INACT_NL = 33_u32
  ISOPROTO_ESIS = 34_u32
  ISOPROTO_INTRAISIS = 35_u32
  ISO_MAX_ADDR_LENGTH = 64_u32
  ISO_HIERARCHICAL = 0_u32
  ISO_NON_HIERARCHICAL = 1_u32
  ISO_EXP_DATA_USE = 0_u32
  ISO_EXP_DATA_NUSE = 1_u32
  NSPROTO_IPX = 1000_u32
  NSPROTO_SPX = 1256_u32
  NSPROTO_SPXII = 1257_u32
  NETBIOS_NAME_LENGTH = 16_u32
  NETBIOS_UNIQUE_NAME = 0_u32
  NETBIOS_GROUP_NAME = 1_u32
  NETBIOS_TYPE_QUICK_UNIQUE = 2_u32
  NETBIOS_TYPE_QUICK_GROUP = 3_u32
  VNSPROTO_IPC = 1_u32
  VNSPROTO_RELIABLE_IPC = 2_u32
  VNSPROTO_SPP = 3_u32
  LITTLE_ENDIAN_ = 1234_u32
  BIG_ENDIAN_ = 4321_u32
  PDP_ENDIAN_ = 3412_u32
  BYTE_ORDER = 1234_u32
  DL_ADDRESS_LENGTH_MAXIMUM = 32_u32
  DL_HEADER_LENGTH_MAXIMUM = 64_u32
  SNAP_DSAP = 170_u32
  SNAP_SSAP = 170_u32
  SNAP_CONTROL = 3_u32
  SNAP_OUI = 0_u32
  ETH_LENGTH_OF_HEADER = 14_u32
  ETH_LENGTH_OF_VLAN_HEADER = 4_u32
  ETH_LENGTH_OF_SNAP_HEADER = 8_u32
  ETHERNET_TYPE_MINIMUM = 1536_u32
  ETHERNET_TYPE_IPV4 = 2048_u32
  ETHERNET_TYPE_ARP = 2054_u32
  ETHERNET_TYPE_IPV6 = 34525_u32
  ETHERNET_TYPE_802_1Q = 33024_u32
  ETHERNET_TYPE_802_1AD = 34984_u32
  IP_VER_MASK = 240_u32
  IPV4_VERSION = 4_u32
  MAX_IPV4_PACKET = 65535_u32
  MAX_IPV4_HLEN = 60_u32
  IPV4_MINIMUM_MTU = 576_u32
  IPV4_MIN_MINIMUM_MTU = 352_u32
  IPV4_MAX_MINIMUM_MTU = 576_u32
  SIZEOF_IP_OPT_ROUTING_HEADER = 3_u32
  SIZEOF_IP_OPT_TIMESTAMP_HEADER = 4_u32
  SIZEOF_IP_OPT_SECURITY = 11_u32
  SIZEOF_IP_OPT_STREAMIDENTIFIER = 4_u32
  SIZEOF_IP_OPT_ROUTERALERT = 4_u32
  IP4_OFF_MASK = 65311_u32
  ICMPV4_INVALID_PREFERENCE_LEVEL = 2147483648_u32
  IGMP_QUERY_TYPE = 17_u32
  IGMP_VERSION1_REPORT_TYPE = 18_u32
  IGMP_VERSION2_REPORT_TYPE = 22_u32
  IGMP_LEAVE_GROUP_TYPE = 23_u32
  IGMP_VERSION3_REPORT_TYPE = 34_u32
  IPV6_VERSION = 96_u32
  IPV6_TRAFFIC_CLASS_MASK = 49167_u32
  IPV6_FULL_TRAFFIC_CLASS_MASK = 61455_u32
  IPV6_ECN_MASK = 12288_u32
  IPV6_FLOW_LABEL_MASK = 4294905600_u32
  MAX_IPV6_PAYLOAD = 65535_u32
  IPV6_ECN_SHIFT = 12_u32
  IPV6_MINIMUM_MTU = 1280_u32
  IP6F_OFF_MASK = 63743_u32
  IP6F_RESERVED_MASK = 1536_u32
  IP6F_MORE_FRAG = 256_u32
  EXT_LEN_UNIT = 8_u32
  IP6OPT_TYPE_SKIP = 0_u32
  IP6OPT_TYPE_DISCARD = 64_u32
  IP6OPT_TYPE_FORCEICMP = 128_u32
  IP6OPT_TYPE_ICMP = 192_u32
  IP6OPT_MUTABLE = 32_u32
  ICMP6_DST_UNREACH_NOROUTE = 0_u32
  ICMP6_DST_UNREACH_ADMIN = 1_u32
  ICMP6_DST_UNREACH_BEYONDSCOPE = 2_u32
  ICMP6_DST_UNREACH_ADDR = 3_u32
  ICMP6_DST_UNREACH_NOPORT = 4_u32
  ICMP6_TIME_EXCEED_TRANSIT = 0_u32
  ICMP6_TIME_EXCEED_REASSEMBLY = 1_u32
  ICMP6_PARAMPROB_HEADER = 0_u32
  ICMP6_PARAMPROB_NEXTHEADER = 1_u32
  ICMP6_PARAMPROB_OPTION = 2_u32
  ICMPV6_ECHO_REQUEST_FLAG_REVERSE = 1_u32
  ND_RA_FLAG_MANAGED = 128_u32
  ND_RA_FLAG_OTHER = 64_u32
  ND_RA_FLAG_HOME_AGENT = 32_u32
  ND_RA_FLAG_PREFERENCE = 24_u32
  ND_NA_FLAG_ROUTER = 2147483648_u32
  ND_NA_FLAG_SOLICITED = 1073741824_u32
  ND_NA_FLAG_OVERRIDE = 536870912_u32
  ND_OPT_PI_FLAG_ONLINK = 128_u32
  ND_OPT_PI_FLAG_AUTO = 64_u32
  ND_OPT_PI_FLAG_ROUTER_ADDR = 32_u32
  ND_OPT_PI_FLAG_SITE_PREFIX = 16_u32
  ND_OPT_PI_FLAG_ROUTE = 1_u32
  ND_OPT_RI_FLAG_PREFERENCE = 24_u32
  ND_OPT_RDNSS_MIN_LEN = 24_u32
  ND_OPT_DNSSL_MIN_LEN = 16_u32
  IN6_EMBEDDEDV4_UOCTET_POSITION = 8_u32
  IN6_EMBEDDEDV4_BITS_IN_BYTE = 8_u32
  TH_FIN = 1_u32
  TH_SYN = 2_u32
  TH_RST = 4_u32
  TH_PSH = 8_u32
  TH_ACK = 16_u32
  TH_URG = 32_u32
  TH_ECE = 64_u32
  TH_CWR = 128_u32
  TH_OPT_EOL = 0_u32
  TH_OPT_NOP = 1_u32
  TH_OPT_MSS = 2_u32
  TH_OPT_WS = 3_u32
  TH_OPT_SACK_PERMITTED = 4_u32
  TH_OPT_SACK = 5_u32
  TH_OPT_TS = 8_u32
  TH_OPT_FASTOPEN = 34_u32
  INVALID_SOCKET = -1_i32
  WSA_INFINITE = 4294967295_u32
  IOC_INOUT = 3221225472_u32
  FIONREAD = 1074030207_i32
  FIONBIO = -2147195266_i32
  FIOASYNC = -2147195267_i32
  SIOCSHIWAT = -2147192064_i32
  SIOCGHIWAT = 1074033409_i32
  SIOCSLOWAT = -2147192062_i32
  SIOCGLOWAT = 1074033411_i32
  SIOCATMARK = 1074033415_i32
  POLLIN = 768_u16
  LM_HB_Extension = 128_i32
  LM_HB1_PnP = 1_i32
  LM_HB1_PDA_Palmtop = 2_i32
  LM_HB1_Computer = 4_i32
  LM_HB1_Printer = 8_i32
  LM_HB1_Modem = 16_i32
  LM_HB1_Fax = 32_i32
  LM_HB1_LANAccess = 64_i32
  LM_HB2_Telephony = 1_i32
  LM_HB2_FileServer = 2_i32

  enum WSA_ERROR
    WSA_IO_PENDING = 997_i32
    WSA_IO_INCOMPLETE = 996_i32
    WSA_INVALID_HANDLE = 6_i32
    WSA_INVALID_PARAMETER = 87_i32
    WSA_NOT_ENOUGH_MEMORY = 8_i32
    WSA_OPERATION_ABORTED = 995_i32
    WSA_WAIT_EVENT_0 = 0_i32
    WSA_WAIT_IO_COMPLETION = 129_i32
    WSABASEERR = 10000_i32
    WSAEINTR = 10004_i32
    WSAEBADF = 10009_i32
    WSAEACCES = 10013_i32
    WSAEFAULT = 10014_i32
    WSAEINVAL = 10022_i32
    WSAEMFILE = 10024_i32
    WSAEWOULDBLOCK = 10035_i32
    WSAEINPROGRESS = 10036_i32
    WSAEALREADY = 10037_i32
    WSAENOTSOCK = 10038_i32
    WSAEDESTADDRREQ = 10039_i32
    WSAEMSGSIZE = 10040_i32
    WSAEPROTOTYPE = 10041_i32
    WSAENOPROTOOPT = 10042_i32
    WSAEPROTONOSUPPORT = 10043_i32
    WSAESOCKTNOSUPPORT = 10044_i32
    WSAEOPNOTSUPP = 10045_i32
    WSAEPFNOSUPPORT = 10046_i32
    WSAEAFNOSUPPORT = 10047_i32
    WSAEADDRINUSE = 10048_i32
    WSAEADDRNOTAVAIL = 10049_i32
    WSAENETDOWN = 10050_i32
    WSAENETUNREACH = 10051_i32
    WSAENETRESET = 10052_i32
    WSAECONNABORTED = 10053_i32
    WSAECONNRESET = 10054_i32
    WSAENOBUFS = 10055_i32
    WSAEISCONN = 10056_i32
    WSAENOTCONN = 10057_i32
    WSAESHUTDOWN = 10058_i32
    WSAETOOMANYREFS = 10059_i32
    WSAETIMEDOUT = 10060_i32
    WSAECONNREFUSED = 10061_i32
    WSAELOOP = 10062_i32
    WSAENAMETOOLONG = 10063_i32
    WSAEHOSTDOWN = 10064_i32
    WSAEHOSTUNREACH = 10065_i32
    WSAENOTEMPTY = 10066_i32
    WSAEPROCLIM = 10067_i32
    WSAEUSERS = 10068_i32
    WSAEDQUOT = 10069_i32
    WSAESTALE = 10070_i32
    WSAEREMOTE = 10071_i32
    WSASYSNOTREADY = 10091_i32
    WSAVERNOTSUPPORTED = 10092_i32
    WSANOTINITIALISED = 10093_i32
    WSAEDISCON = 10101_i32
    WSAENOMORE = 10102_i32
    WSAECANCELLED = 10103_i32
    WSAEINVALIDPROCTABLE = 10104_i32
    WSAEINVALIDPROVIDER = 10105_i32
    WSAEPROVIDERFAILEDINIT = 10106_i32
    WSASYSCALLFAILURE = 10107_i32
    WSASERVICE_NOT_FOUND = 10108_i32
    WSATYPE_NOT_FOUND = 10109_i32
    WSA_E_NO_MORE = 10110_i32
    WSA_E_CANCELLED = 10111_i32
    WSAEREFUSED = 10112_i32
    WSAHOST_NOT_FOUND = 11001_i32
    WSATRY_AGAIN = 11002_i32
    WSANO_RECOVERY = 11003_i32
    WSANO_DATA = 11004_i32
    WSA_QOS_RECEIVERS = 11005_i32
    WSA_QOS_SENDERS = 11006_i32
    WSA_QOS_NO_SENDERS = 11007_i32
    WSA_QOS_NO_RECEIVERS = 11008_i32
    WSA_QOS_REQUEST_CONFIRMED = 11009_i32
    WSA_QOS_ADMISSION_FAILURE = 11010_i32
    WSA_QOS_POLICY_FAILURE = 11011_i32
    WSA_QOS_BAD_STYLE = 11012_i32
    WSA_QOS_BAD_OBJECT = 11013_i32
    WSA_QOS_TRAFFIC_CTRL_ERROR = 11014_i32
    WSA_QOS_GENERIC_ERROR = 11015_i32
    WSA_QOS_ESERVICETYPE = 11016_i32
    WSA_QOS_EFLOWSPEC = 11017_i32
    WSA_QOS_EPROVSPECBUF = 11018_i32
    WSA_QOS_EFILTERSTYLE = 11019_i32
    WSA_QOS_EFILTERTYPE = 11020_i32
    WSA_QOS_EFILTERCOUNT = 11021_i32
    WSA_QOS_EOBJLENGTH = 11022_i32
    WSA_QOS_EFLOWCOUNT = 11023_i32
    WSA_QOS_EUNKOWNPSOBJ = 11024_i32
    WSA_QOS_EPOLICYOBJ = 11025_i32
    WSA_QOS_EFLOWDESC = 11026_i32
    WSA_QOS_EPSFLOWSPEC = 11027_i32
    WSA_QOS_EPSFILTERSPEC = 11028_i32
    WSA_QOS_ESDMODEOBJ = 11029_i32
    WSA_QOS_ESHAPERATEOBJ = 11030_i32
    WSA_QOS_RESERVED_PETYPE = 11031_i32
    WSA_SECURE_HOST_NOT_FOUND = 11032_i32
    WSA_IPSEC_NAME_POLICY_ERROR = 11033_i32
  end
  enum ADDRESS_FAMILY : UInt32
    AF_INET = 2_u32
    AF_INET6 = 23_u32
    AF_UNSPEC = 0_u32
  end
  enum SET_SERVICE_OPERATION : UInt32
    SERVICE_REGISTER = 1_u32
    SERVICE_DEREGISTER = 2_u32
    SERVICE_FLUSH = 3_u32
    SERVICE_ADD_TYPE = 4_u32
    SERVICE_DELETE_TYPE = 5_u32
  end
  @[Flags]
  enum SEND_RECV_FLAGS
    MSG_OOB = 1_i32
    MSG_PEEK = 2_i32
    MSG_DONTROUTE = 4_i32
    MSG_WAITALL = 8_i32
    MSG_PUSH_IMMEDIATE = 32_i32
  end
  enum RESOURCE_DISPLAY_TYPE : UInt32
    RESOURCEDISPLAYTYPE_DOMAIN = 1_u32
    RESOURCEDISPLAYTYPE_FILE = 4_u32
    RESOURCEDISPLAYTYPE_GENERIC = 0_u32
    RESOURCEDISPLAYTYPE_GROUP = 5_u32
    RESOURCEDISPLAYTYPE_SERVER = 2_u32
    RESOURCEDISPLAYTYPE_SHARE = 3_u32
    RESOURCEDISPLAYTYPE_TREE = 10_u32
  end
  enum IPPROTO
    IPPROTO_HOPOPTS = 0_i32
    IPPROTO_ICMP = 1_i32
    IPPROTO_IGMP = 2_i32
    IPPROTO_GGP = 3_i32
    IPPROTO_IPV4 = 4_i32
    IPPROTO_ST = 5_i32
    IPPROTO_TCP = 6_i32
    IPPROTO_CBT = 7_i32
    IPPROTO_EGP = 8_i32
    IPPROTO_IGP = 9_i32
    IPPROTO_PUP = 12_i32
    IPPROTO_UDP = 17_i32
    IPPROTO_IDP = 22_i32
    IPPROTO_RDP = 27_i32
    IPPROTO_IPV6 = 41_i32
    IPPROTO_ROUTING = 43_i32
    IPPROTO_FRAGMENT = 44_i32
    IPPROTO_ESP = 50_i32
    IPPROTO_AH = 51_i32
    IPPROTO_ICMPV6 = 58_i32
    IPPROTO_NONE = 59_i32
    IPPROTO_DSTOPTS = 60_i32
    IPPROTO_ND = 77_i32
    IPPROTO_ICLFXBM = 78_i32
    IPPROTO_PIM = 103_i32
    IPPROTO_PGM = 113_i32
    IPPROTO_L2TP = 115_i32
    IPPROTO_SCTP = 132_i32
    IPPROTO_RAW = 255_i32
    IPPROTO_MAX = 256_i32
    IPPROTO_RESERVED_RAW = 257_i32
    IPPROTO_RESERVED_IPSEC = 258_i32
    IPPROTO_RESERVED_IPSECOFFLOAD = 259_i32
    IPPROTO_RESERVED_WNV = 260_i32
    IPPROTO_RESERVED_MAX = 261_i32
  end
  enum SCOPE_LEVEL
    ScopeLevelInterface = 1_i32
    ScopeLevelLink = 2_i32
    ScopeLevelSubnet = 3_i32
    ScopeLevelAdmin = 4_i32
    ScopeLevelSite = 5_i32
    ScopeLevelOrganization = 8_i32
    ScopeLevelGlobal = 14_i32
    ScopeLevelCount = 16_i32
  end
  enum WSACOMPLETIONTYPE
    NSP_NOTIFY_IMMEDIATELY = 0_i32
    NSP_NOTIFY_HWND = 1_i32
    NSP_NOTIFY_EVENT = 2_i32
    NSP_NOTIFY_PORT = 3_i32
    NSP_NOTIFY_APC = 4_i32
  end
  enum WSAECOMPARATOR
    COMP_EQUAL = 0_i32
    COMP_NOTLESS = 1_i32
  end
  enum WSAESETSERVICEOP
    RNRSERVICE_REGISTER = 0_i32
    RNRSERVICE_DEREGISTER = 1_i32
    RNRSERVICE_DELETE = 2_i32
  end
  enum PMTUD_STATE
    IP_PMTUDISC_NOT_SET = 0_i32
    IP_PMTUDISC_DO = 1_i32
    IP_PMTUDISC_DONT = 2_i32
    IP_PMTUDISC_PROBE = 3_i32
    IP_PMTUDISC_MAX = 4_i32
  end
  enum MULTICAST_MODE_TYPE
    MCAST_INCLUDE = 0_i32
    MCAST_EXCLUDE = 1_i32
  end
  enum Ewindow_advance_method
    E_WINDOW_ADVANCE_BY_TIME = 1_i32
    E_WINDOW_USE_AS_DATA_CACHE = 2_i32
  end
  enum NL_PREFIX_ORIGIN
    IpPrefixOriginOther = 0_i32
    IpPrefixOriginManual = 1_i32
    IpPrefixOriginWellKnown = 2_i32
    IpPrefixOriginDhcp = 3_i32
    IpPrefixOriginRouterAdvertisement = 4_i32
    IpPrefixOriginUnchanged = 16_i32
  end
  enum NL_SUFFIX_ORIGIN
    NlsoOther = 0_i32
    NlsoManual = 1_i32
    NlsoWellKnown = 2_i32
    NlsoDhcp = 3_i32
    NlsoLinkLayerAddress = 4_i32
    NlsoRandom = 5_i32
    IpSuffixOriginOther = 0_i32
    IpSuffixOriginManual = 1_i32
    IpSuffixOriginWellKnown = 2_i32
    IpSuffixOriginDhcp = 3_i32
    IpSuffixOriginLinkLayerAddress = 4_i32
    IpSuffixOriginRandom = 5_i32
    IpSuffixOriginUnchanged = 16_i32
  end
  enum NL_DAD_STATE
    NldsInvalid = 0_i32
    NldsTentative = 1_i32
    NldsDuplicate = 2_i32
    NldsDeprecated = 3_i32
    NldsPreferred = 4_i32
    IpDadStateInvalid = 0_i32
    IpDadStateTentative = 1_i32
    IpDadStateDuplicate = 2_i32
    IpDadStateDeprecated = 3_i32
    IpDadStatePreferred = 4_i32
  end
  enum NL_ROUTE_PROTOCOL
    RouteProtocolOther = 1_i32
    RouteProtocolLocal = 2_i32
    RouteProtocolNetMgmt = 3_i32
    RouteProtocolIcmp = 4_i32
    RouteProtocolEgp = 5_i32
    RouteProtocolGgp = 6_i32
    RouteProtocolHello = 7_i32
    RouteProtocolRip = 8_i32
    RouteProtocolIsIs = 9_i32
    RouteProtocolEsIs = 10_i32
    RouteProtocolCisco = 11_i32
    RouteProtocolBbn = 12_i32
    RouteProtocolOspf = 13_i32
    RouteProtocolBgp = 14_i32
    RouteProtocolIdpr = 15_i32
    RouteProtocolEigrp = 16_i32
    RouteProtocolDvmrp = 17_i32
    RouteProtocolRpl = 18_i32
    RouteProtocolDhcp = 19_i32
    MIB_IPPROTO_OTHER = 1_i32
    PROTO_IP_OTHER = 1_i32
    MIB_IPPROTO_LOCAL = 2_i32
    PROTO_IP_LOCAL = 2_i32
    MIB_IPPROTO_NETMGMT = 3_i32
    PROTO_IP_NETMGMT = 3_i32
    MIB_IPPROTO_ICMP = 4_i32
    PROTO_IP_ICMP = 4_i32
    MIB_IPPROTO_EGP = 5_i32
    PROTO_IP_EGP = 5_i32
    MIB_IPPROTO_GGP = 6_i32
    PROTO_IP_GGP = 6_i32
    MIB_IPPROTO_HELLO = 7_i32
    PROTO_IP_HELLO = 7_i32
    MIB_IPPROTO_RIP = 8_i32
    PROTO_IP_RIP = 8_i32
    MIB_IPPROTO_IS_IS = 9_i32
    PROTO_IP_IS_IS = 9_i32
    MIB_IPPROTO_ES_IS = 10_i32
    PROTO_IP_ES_IS = 10_i32
    MIB_IPPROTO_CISCO = 11_i32
    PROTO_IP_CISCO = 11_i32
    MIB_IPPROTO_BBN = 12_i32
    PROTO_IP_BBN = 12_i32
    MIB_IPPROTO_OSPF = 13_i32
    PROTO_IP_OSPF = 13_i32
    MIB_IPPROTO_BGP = 14_i32
    PROTO_IP_BGP = 14_i32
    MIB_IPPROTO_IDPR = 15_i32
    PROTO_IP_IDPR = 15_i32
    MIB_IPPROTO_EIGRP = 16_i32
    PROTO_IP_EIGRP = 16_i32
    MIB_IPPROTO_DVMRP = 17_i32
    PROTO_IP_DVMRP = 17_i32
    MIB_IPPROTO_RPL = 18_i32
    PROTO_IP_RPL = 18_i32
    MIB_IPPROTO_DHCP = 19_i32
    PROTO_IP_DHCP = 19_i32
    MIB_IPPROTO_NT_AUTOSTATIC = 10002_i32
    PROTO_IP_NT_AUTOSTATIC = 10002_i32
    MIB_IPPROTO_NT_STATIC = 10006_i32
    PROTO_IP_NT_STATIC = 10006_i32
    MIB_IPPROTO_NT_STATIC_NON_DOD = 10007_i32
    PROTO_IP_NT_STATIC_NON_DOD = 10007_i32
  end
  enum NL_ADDRESS_TYPE
    NlatUnspecified = 0_i32
    NlatUnicast = 1_i32
    NlatAnycast = 2_i32
    NlatMulticast = 3_i32
    NlatBroadcast = 4_i32
    NlatInvalid = 5_i32
  end
  enum NL_ROUTE_ORIGIN
    NlroManual = 0_i32
    NlroWellKnown = 1_i32
    NlroDHCP = 2_i32
    NlroRouterAdvertisement = 3_i32
    Nlro6to4 = 4_i32
  end
  enum NL_NEIGHBOR_STATE
    NlnsUnreachable = 0_i32
    NlnsIncomplete = 1_i32
    NlnsProbe = 2_i32
    NlnsDelay = 3_i32
    NlnsStale = 4_i32
    NlnsReachable = 5_i32
    NlnsPermanent = 6_i32
    NlnsMaximum = 7_i32
  end
  enum NL_LINK_LOCAL_ADDRESS_BEHAVIOR
    LinkLocalAlwaysOff = 0_i32
    LinkLocalDelayed = 1_i32
    LinkLocalAlwaysOn = 2_i32
    LinkLocalUnchanged = -1_i32
  end
  enum NL_ROUTER_DISCOVERY_BEHAVIOR
    RouterDiscoveryDisabled = 0_i32
    RouterDiscoveryEnabled = 1_i32
    RouterDiscoveryDhcp = 2_i32
    RouterDiscoveryUnchanged = -1_i32
  end
  enum NL_BANDWIDTH_FLAG
    NlbwDisabled = 0_i32
    NlbwEnabled = 1_i32
    NlbwUnchanged = -1_i32
  end
  enum NL_NETWORK_CATEGORY
    NetworkCategoryPublic = 0_i32
    NetworkCategoryPrivate = 1_i32
    NetworkCategoryDomainAuthenticated = 2_i32
    NetworkCategoryUnchanged = -1_i32
    NetworkCategoryUnknown = -1_i32
  end
  enum NL_INTERFACE_NETWORK_CATEGORY_STATE
    NlincCategoryUnknown = 0_i32
    NlincPublic = 1_i32
    NlincPrivate = 2_i32
    NlincDomainAuthenticated = 3_i32
    NlincCategoryStateMax = 4_i32
  end
  enum NL_NETWORK_CONNECTIVITY_LEVEL_HINT
    NetworkConnectivityLevelHintUnknown = 0_i32
    NetworkConnectivityLevelHintNone = 1_i32
    NetworkConnectivityLevelHintLocalAccess = 2_i32
    NetworkConnectivityLevelHintInternetAccess = 3_i32
    NetworkConnectivityLevelHintConstrainedInternetAccess = 4_i32
    NetworkConnectivityLevelHintHidden = 5_i32
  end
  enum NL_NETWORK_CONNECTIVITY_COST_HINT
    NetworkConnectivityCostHintUnknown = 0_i32
    NetworkConnectivityCostHintUnrestricted = 1_i32
    NetworkConnectivityCostHintFixed = 2_i32
    NetworkConnectivityCostHintVariable = 3_i32
  end
  enum TCPSTATE
    TCPSTATE_CLOSED = 0_i32
    TCPSTATE_LISTEN = 1_i32
    TCPSTATE_SYN_SENT = 2_i32
    TCPSTATE_SYN_RCVD = 3_i32
    TCPSTATE_ESTABLISHED = 4_i32
    TCPSTATE_FIN_WAIT_1 = 5_i32
    TCPSTATE_FIN_WAIT_2 = 6_i32
    TCPSTATE_CLOSE_WAIT = 7_i32
    TCPSTATE_CLOSING = 8_i32
    TCPSTATE_LAST_ACK = 9_i32
    TCPSTATE_TIME_WAIT = 10_i32
    TCPSTATE_MAX = 11_i32
  end
  enum CONTROL_CHANNEL_TRIGGER_STATUS
    CONTROL_CHANNEL_TRIGGER_STATUS_INVALID = 0_i32
    CONTROL_CHANNEL_TRIGGER_STATUS_SOFTWARE_SLOT_ALLOCATED = 1_i32
    CONTROL_CHANNEL_TRIGGER_STATUS_HARDWARE_SLOT_ALLOCATED = 2_i32
    CONTROL_CHANNEL_TRIGGER_STATUS_POLICY_ERROR = 3_i32
    CONTROL_CHANNEL_TRIGGER_STATUS_SYSTEM_ERROR = 4_i32
    CONTROL_CHANNEL_TRIGGER_STATUS_TRANSPORT_DISCONNECTED = 5_i32
    CONTROL_CHANNEL_TRIGGER_STATUS_SERVICE_UNAVAILABLE = 6_i32
  end
  enum SOCKET_PRIORITY_HINT
    SocketPriorityHintVeryLow = 0_i32
    SocketPriorityHintLow = 1_i32
    SocketPriorityHintNormal = 2_i32
    SocketMaximumPriorityHintType = 3_i32
  end
  enum RCVALL_VALUE
    RCVALL_OFF = 0_i32
    RCVALL_ON = 1_i32
    RCVALL_SOCKETLEVELONLY = 2_i32
    RCVALL_IPLEVEL = 3_i32
  end
  enum TCP_ICW_LEVEL
    TCP_ICW_LEVEL_DEFAULT = 0_i32
    TCP_ICW_LEVEL_HIGH = 1_i32
    TCP_ICW_LEVEL_VERY_HIGH = 2_i32
    TCP_ICW_LEVEL_AGGRESSIVE = 3_i32
    TCP_ICW_LEVEL_EXPERIMENTAL = 4_i32
    TCP_ICW_LEVEL_COMPAT = 254_i32
    TCP_ICW_LEVEL_MAX = 255_i32
  end
  enum SOCKET_USAGE_TYPE
    SYSTEM_CRITICAL_SOCKET = 1_i32
  end
  enum SOCKET_SECURITY_PROTOCOL
    SOCKET_SECURITY_PROTOCOL_DEFAULT = 0_i32
    SOCKET_SECURITY_PROTOCOL_IPSEC = 1_i32
    SOCKET_SECURITY_PROTOCOL_IPSEC2 = 2_i32
    SOCKET_SECURITY_PROTOCOL_INVALID = 3_i32
  end
  enum WSA_COMPATIBILITY_BEHAVIOR_ID
    WsaBehaviorAll = 0_i32
    WsaBehaviorReceiveBuffering = 1_i32
    WsaBehaviorAutoTuning = 2_i32
  end
  enum Q2931_IE_TYPE
    IE_AALParameters = 0_i32
    IE_TrafficDescriptor = 1_i32
    IE_BroadbandBearerCapability = 2_i32
    IE_BHLI = 3_i32
    IE_BLLI = 4_i32
    IE_CalledPartyNumber = 5_i32
    IE_CalledPartySubaddress = 6_i32
    IE_CallingPartyNumber = 7_i32
    IE_CallingPartySubaddress = 8_i32
    IE_Cause = 9_i32
    IE_QOSClass = 10_i32
    IE_TransitNetworkSelection = 11_i32
  end
  enum AAL_TYPE
    AALTYPE_5 = 5_i32
    AALTYPE_USER = 16_i32
  end
  enum NAPI_PROVIDER_TYPE
    ProviderType_Application = 1_i32
    ProviderType_Service = 2_i32
  end
  enum NAPI_PROVIDER_LEVEL
    ProviderLevel_None = 0_i32
    ProviderLevel_Secondary = 1_i32
    ProviderLevel_Primary = 2_i32
  end
  enum NLA_BLOB_DATA_TYPE
    NLA_RAW_DATA = 0_i32
    NLA_INTERFACE = 1_i32
    NLA_802_1X_LOCATION = 2_i32
    NLA_CONNECTIVITY = 3_i32
    NLA_ICS = 4_i32
  end
  enum NLA_CONNECTIVITY_TYPE
    NLA_NETWORK_AD_HOC = 0_i32
    NLA_NETWORK_MANAGED = 1_i32
    NLA_NETWORK_UNMANAGED = 2_i32
    NLA_NETWORK_UNKNOWN = 3_i32
  end
  enum NLA_INTERNET
    NLA_INTERNET_UNKNOWN = 0_i32
    NLA_INTERNET_NO = 1_i32
    NLA_INTERNET_YES = 2_i32
  end
  enum RIO_NOTIFICATION_COMPLETION_TYPE
    RIO_EVENT_COMPLETION = 1_i32
    RIO_IOCP_COMPLETION = 2_i32
  end
  enum WSC_PROVIDER_INFO_TYPE
    ProviderInfoLspCategories = 0_i32
    ProviderInfoAudit = 1_i32
  end
  enum IPV4_OPTION_TYPE
    IP_OPT_EOL = 0_i32
    IP_OPT_NOP = 1_i32
    IP_OPT_SECURITY = 130_i32
    IP_OPT_LSRR = 131_i32
    IP_OPT_TS = 68_i32
    IP_OPT_RR = 7_i32
    IP_OPT_SSRR = 137_i32
    IP_OPT_SID = 136_i32
    IP_OPT_ROUTER_ALERT = 148_i32
    IP_OPT_MULTIDEST = 149_i32
  end
  enum IP_OPTION_TIMESTAMP_FLAGS
    IP_OPTION_TIMESTAMP_ONLY = 0_i32
    IP_OPTION_TIMESTAMP_ADDRESS = 1_i32
    IP_OPTION_TIMESTAMP_SPECIFIC_ADDRESS = 3_i32
  end
  enum ICMP4_UNREACH_CODE
    ICMP4_UNREACH_NET = 0_i32
    ICMP4_UNREACH_HOST = 1_i32
    ICMP4_UNREACH_PROTOCOL = 2_i32
    ICMP4_UNREACH_PORT = 3_i32
    ICMP4_UNREACH_FRAG_NEEDED = 4_i32
    ICMP4_UNREACH_SOURCEROUTE_FAILED = 5_i32
    ICMP4_UNREACH_NET_UNKNOWN = 6_i32
    ICMP4_UNREACH_HOST_UNKNOWN = 7_i32
    ICMP4_UNREACH_ISOLATED = 8_i32
    ICMP4_UNREACH_NET_ADMIN = 9_i32
    ICMP4_UNREACH_HOST_ADMIN = 10_i32
    ICMP4_UNREACH_NET_TOS = 11_i32
    ICMP4_UNREACH_HOST_TOS = 12_i32
    ICMP4_UNREACH_ADMIN = 13_i32
  end
  enum ICMP4_TIME_EXCEED_CODE
    ICMP4_TIME_EXCEED_TRANSIT = 0_i32
    ICMP4_TIME_EXCEED_REASSEMBLY = 1_i32
  end
  enum ARP_OPCODE
    ARP_REQUEST = 1_i32
    ARP_RESPONSE = 2_i32
  end
  enum ARP_HARDWARE_TYPE
    ARP_HW_ENET = 1_i32
    ARP_HW_802 = 6_i32
  end
  enum IGMP_MAX_RESP_CODE_TYPE
    IGMP_MAX_RESP_CODE_TYPE_NORMAL = 0_i32
    IGMP_MAX_RESP_CODE_TYPE_FLOAT = 1_i32
  end
  enum IPV6_OPTION_TYPE
    IP6OPT_PAD1 = 0_i32
    IP6OPT_PADN = 1_i32
    IP6OPT_TUNNEL_LIMIT = 4_i32
    IP6OPT_ROUTER_ALERT = 5_i32
    IP6OPT_JUMBO = 194_i32
    IP6OPT_NSAP_ADDR = 195_i32
  end
  enum ND_OPTION_TYPE
    ND_OPT_SOURCE_LINKADDR = 1_i32
    ND_OPT_TARGET_LINKADDR = 2_i32
    ND_OPT_PREFIX_INFORMATION = 3_i32
    ND_OPT_REDIRECTED_HEADER = 4_i32
    ND_OPT_MTU = 5_i32
    ND_OPT_NBMA_SHORTCUT_LIMIT = 6_i32
    ND_OPT_ADVERTISEMENT_INTERVAL = 7_i32
    ND_OPT_HOME_AGENT_INFORMATION = 8_i32
    ND_OPT_SOURCE_ADDR_LIST = 9_i32
    ND_OPT_TARGET_ADDR_LIST = 10_i32
    ND_OPT_ROUTE_INFO = 24_i32
    ND_OPT_RDNSS = 25_i32
    ND_OPT_DNSSL = 31_i32
  end
  enum MLD_MAX_RESP_CODE_TYPE
    MLD_MAX_RESP_CODE_TYPE_NORMAL = 0_i32
    MLD_MAX_RESP_CODE_TYPE_FLOAT = 1_i32
  end
  enum TUNNEL_SUB_TYPE
    TUNNEL_SUB_TYPE_NONE = 0_i32
    TUNNEL_SUB_TYPE_CP = 1_i32
    TUNNEL_SUB_TYPE_IPTLS = 2_i32
    TUNNEL_SUB_TYPE_HA = 3_i32
  end
  enum NPI_MODULEID_TYPE
    MIT_GUID = 1_i32
    MIT_IF_LUID = 2_i32
  end
  enum FALLBACK_INDEX
    FallbackIndexTcpFastopen = 0_i32
    FallbackIndexMax = 1_i32
  end

  @[Extern]
  record RIO_BUFFERID_t
  @[Extern]
  record RIO_CQ_t
  @[Extern]
  record RIO_RQ_t
  @[Extern]
  record FLOWSPEC,
    token_rate : UInt32,
    token_bucket_size : UInt32,
    peak_bandwidth : UInt32,
    latency : UInt32,
    delay_variation : UInt32,
    service_type : UInt32,
    max_sdu_size : UInt32,
    minimum_policed_size : UInt32

  @[Extern]
  record IN_ADDR,
    s_un : S_un_e__Union_ do

    # Nested Type S_un_e__Union_
    @[Extern(union: true)]
    record S_un_e__Union_,
      s_un_b : S_un_b_e__Struct_,
      s_un_w : S_un_w_e__Struct_,
      s_addr : UInt32 do

      # Nested Type S_un_w_e__Struct_
      @[Extern]
      record S_un_w_e__Struct_,
        s_w1 : UInt16,
        s_w2 : UInt16


      # Nested Type S_un_b_e__Struct_
      @[Extern]
      record S_un_b_e__Struct_,
        s_b1 : UInt8,
        s_b2 : UInt8,
        s_b3 : UInt8,
        s_b4 : UInt8

    end

  end

  @[Extern]
  record SOCKADDR,
    sa_family : UInt16,
    sa_data : Win32cr::Foundation::CHAR[14]

  @[Extern]
  record SOCKET_ADDRESS,
    lpSockaddr : Win32cr::Networking::WinSock::SOCKADDR*,
    iSockaddrLength : Int32

  @[Extern]
  record SOCKET_ADDRESS_LIST,
    iAddressCount : Int32,
    address : Win32cr::Networking::WinSock::SOCKET_ADDRESS*

  @[Extern]
  record CSADDR_INFO,
    local_addr : Win32cr::Networking::WinSock::SOCKET_ADDRESS,
    remote_addr : Win32cr::Networking::WinSock::SOCKET_ADDRESS,
    iSocketType : Int32,
    iProtocol : Int32

  @[Extern]
  record SOCKADDR_STORAGE,
    ss_family : UInt16,
    __ss_pad1 : Win32cr::Foundation::CHAR[6],
    __ss_align : Int64,
    __ss_pad2 : Win32cr::Foundation::CHAR[112]

  @[Extern]
  record SOCKADDR_STORAGE_XP,
    ss_family : Int16,
    __ss_pad1 : Win32cr::Foundation::CHAR[6],
    __ss_align : Int64,
    __ss_pad2 : Win32cr::Foundation::CHAR[112]

  @[Extern]
  record SOCKET_PROCESSOR_AFFINITY,
    processor : Win32cr::System::Kernel::PROCESSOR_NUMBER,
    numa_node_id : UInt16,
    reserved : UInt16

  @[Extern]
  record SCOPE_ID,
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      anonymous : Anonymous_e__Struct_,
      value : UInt32 do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        _bitfield : UInt32

    end

  end

  @[Extern]
  record SOCKADDR_IN,
    sin_family : UInt16,
    sin_port : UInt16,
    sin_addr : Win32cr::Networking::WinSock::IN_ADDR,
    sin_zero : Win32cr::Foundation::CHAR[8]

  @[Extern]
  record SOCKADDR_DL,
    sdl_family : UInt16,
    sdl_data : UInt8[8],
    sdl_zero : UInt8[4]

  @[Extern]
  record WSABUF,
    len : UInt32,
    buf : Win32cr::Foundation::PSTR

  @[Extern]
  record WSAMSG,
    name : Win32cr::Networking::WinSock::SOCKADDR*,
    namelen : Int32,
    lpBuffers : Win32cr::Networking::WinSock::WSABUF*,
    dwBufferCount : UInt32,
    control : Win32cr::Networking::WinSock::WSABUF,
    dwFlags : UInt32

  @[Extern]
  record Cmsghdr,
    cmsg_len : LibC::UIntPtrT,
    cmsg_level : Int32,
    cmsg_type : Int32

  @[Extern]
  record ADDRINFOA,
    ai_flags : Int32,
    ai_family : Int32,
    ai_socktype : Int32,
    ai_protocol : Int32,
    ai_addrlen : LibC::UIntPtrT,
    ai_canonname : Win32cr::Foundation::PSTR,
    ai_addr : Win32cr::Networking::WinSock::SOCKADDR*,
    ai_next : Win32cr::Networking::WinSock::ADDRINFOA*

  @[Extern]
  record Addrinfow,
    ai_flags : Int32,
    ai_family : Int32,
    ai_socktype : Int32,
    ai_protocol : Int32,
    ai_addrlen : LibC::UIntPtrT,
    ai_canonname : Win32cr::Foundation::PWSTR,
    ai_addr : Win32cr::Networking::WinSock::SOCKADDR*,
    ai_next : Win32cr::Networking::WinSock::Addrinfow*

  @[Extern]
  record Addrinfoexa,
    ai_flags : Int32,
    ai_family : Int32,
    ai_socktype : Int32,
    ai_protocol : Int32,
    ai_addrlen : LibC::UIntPtrT,
    ai_canonname : Win32cr::Foundation::PSTR,
    ai_addr : Win32cr::Networking::WinSock::SOCKADDR*,
    ai_blob : Void*,
    ai_bloblen : LibC::UIntPtrT,
    ai_provider : LibC::GUID*,
    ai_next : Win32cr::Networking::WinSock::Addrinfoexa*

  @[Extern]
  record Addrinfoexw,
    ai_flags : Int32,
    ai_family : Int32,
    ai_socktype : Int32,
    ai_protocol : Int32,
    ai_addrlen : LibC::UIntPtrT,
    ai_canonname : Win32cr::Foundation::PWSTR,
    ai_addr : Win32cr::Networking::WinSock::SOCKADDR*,
    ai_blob : Void*,
    ai_bloblen : LibC::UIntPtrT,
    ai_provider : LibC::GUID*,
    ai_next : Win32cr::Networking::WinSock::Addrinfoexw*

  @[Extern]
  record Addrinfoex2a,
    ai_flags : Int32,
    ai_family : Int32,
    ai_socktype : Int32,
    ai_protocol : Int32,
    ai_addrlen : LibC::UIntPtrT,
    ai_canonname : Win32cr::Foundation::PSTR,
    ai_addr : Win32cr::Networking::WinSock::SOCKADDR*,
    ai_blob : Void*,
    ai_bloblen : LibC::UIntPtrT,
    ai_provider : LibC::GUID*,
    ai_next : Win32cr::Networking::WinSock::Addrinfoex2a*,
    ai_version : Int32,
    ai_fqdn : Win32cr::Foundation::PSTR

  @[Extern]
  record Addrinfoex2w,
    ai_flags : Int32,
    ai_family : Int32,
    ai_socktype : Int32,
    ai_protocol : Int32,
    ai_addrlen : LibC::UIntPtrT,
    ai_canonname : Win32cr::Foundation::PWSTR,
    ai_addr : Win32cr::Networking::WinSock::SOCKADDR*,
    ai_blob : Void*,
    ai_bloblen : LibC::UIntPtrT,
    ai_provider : LibC::GUID*,
    ai_next : Win32cr::Networking::WinSock::Addrinfoex2w*,
    ai_version : Int32,
    ai_fqdn : Win32cr::Foundation::PWSTR

  @[Extern]
  record Addrinfoex3,
    ai_flags : Int32,
    ai_family : Int32,
    ai_socktype : Int32,
    ai_protocol : Int32,
    ai_addrlen : LibC::UIntPtrT,
    ai_canonname : Win32cr::Foundation::PWSTR,
    ai_addr : Win32cr::Networking::WinSock::SOCKADDR*,
    ai_blob : Void*,
    ai_bloblen : LibC::UIntPtrT,
    ai_provider : LibC::GUID*,
    ai_next : Win32cr::Networking::WinSock::Addrinfoex3*,
    ai_version : Int32,
    ai_fqdn : Win32cr::Foundation::PWSTR,
    ai_interfaceindex : Int32

  @[Extern]
  record Addrinfoex4,
    ai_flags : Int32,
    ai_family : Int32,
    ai_socktype : Int32,
    ai_protocol : Int32,
    ai_addrlen : LibC::UIntPtrT,
    ai_canonname : Win32cr::Foundation::PWSTR,
    ai_addr : Win32cr::Networking::WinSock::SOCKADDR*,
    ai_blob : Void*,
    ai_bloblen : LibC::UIntPtrT,
    ai_provider : LibC::GUID*,
    ai_next : Win32cr::Networking::WinSock::Addrinfoex4*,
    ai_version : Int32,
    ai_fqdn : Win32cr::Foundation::PWSTR,
    ai_interfaceindex : Int32,
    ai_resolutionhandle : Win32cr::Foundation::HANDLE

  @[Extern]
  record Addrinfoex5,
    ai_flags : Int32,
    ai_family : Int32,
    ai_socktype : Int32,
    ai_protocol : Int32,
    ai_addrlen : LibC::UIntPtrT,
    ai_canonname : Win32cr::Foundation::PWSTR,
    ai_addr : Win32cr::Networking::WinSock::SOCKADDR*,
    ai_blob : Void*,
    ai_bloblen : LibC::UIntPtrT,
    ai_provider : LibC::GUID*,
    ai_next : Win32cr::Networking::WinSock::Addrinfoex5*,
    ai_version : Int32,
    ai_fqdn : Win32cr::Foundation::PWSTR,
    ai_interfaceindex : Int32,
    ai_resolutionhandle : Win32cr::Foundation::HANDLE,
    ai_ttl : UInt32

  @[Extern]
  record Addrinfo_dns_server,
    ai_servertype : UInt32,
    ai_flags : UInt64,
    ai_addrlen : UInt32,
    ai_addr : Win32cr::Networking::WinSock::SOCKADDR*,
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      ai_template : Win32cr::Foundation::PWSTR

  end

  @[Extern]
  record Addrinfoex6,
    ai_flags : Int32,
    ai_family : Int32,
    ai_socktype : Int32,
    ai_protocol : Int32,
    ai_addrlen : LibC::UIntPtrT,
    ai_canonname : Win32cr::Foundation::PWSTR,
    ai_addr : Win32cr::Networking::WinSock::SOCKADDR*,
    ai_blob : Void*,
    ai_bloblen : LibC::UIntPtrT,
    ai_provider : LibC::GUID*,
    ai_next : Win32cr::Networking::WinSock::Addrinfoex5*,
    ai_version : Int32,
    ai_fqdn : Win32cr::Foundation::PWSTR,
    ai_interfaceindex : Int32,
    ai_resolutionhandle : Win32cr::Foundation::HANDLE,
    ai_ttl : UInt32,
    ai_numservers : UInt32,
    ai_servers : Win32cr::Networking::WinSock::Addrinfo_dns_server*,
    ai_responseflags : UInt64

  @[Extern]
  record Fd_set,
    fd_count : UInt32,
    fd_array : Win32cr::Networking::WinSock::SOCKET[64]

  @[Extern]
  record Timeval,
    tv_sec : Int32,
    tv_usec : Int32

  @[Extern]
  record Hostent,
    h_name : Win32cr::Foundation::PSTR,
    h_aliases : Int8**,
    h_addrtype : Int16,
    h_length : Int16,
    h_addr_list : Int8**

  @[Extern]
  record Netent,
    n_name : Win32cr::Foundation::PSTR,
    n_aliases : Int8**,
    n_addrtype : Int16,
    n_net : UInt32

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  record Servent,
    s_name : Win32cr::Foundation::PSTR,
    s_aliases : Int8**,
    s_proto : Win32cr::Foundation::PSTR,
    s_port : Int16
  {% end %}

  @[Extern]
  record Protoent,
    p_name : Win32cr::Foundation::PSTR,
    p_aliases : Int8**,
    p_proto : Int16

  {% if flag?(:x86_64) || flag?(:arm) %}
  @[Extern]
  record WSAData,
    wVersion : UInt16,
    wHighVersion : UInt16,
    iMaxSockets : UInt16,
    iMaxUdpDg : UInt16,
    lpVendorInfo : Win32cr::Foundation::PSTR,
    szDescription : Win32cr::Foundation::CHAR[257],
    szSystemStatus : Win32cr::Foundation::CHAR[129]
  {% end %}

  @[Extern]
  record Sockproto,
    sp_family : UInt16,
    sp_protocol : UInt16

  @[Extern]
  record Linger,
    l_onoff : UInt16,
    l_linger : UInt16

  @[Extern]
  record QOS,
    sending_flowspec : Win32cr::Networking::WinSock::FLOWSPEC,
    receiving_flowspec : Win32cr::Networking::WinSock::FLOWSPEC,
    provider_specific : Win32cr::Networking::WinSock::WSABUF

  @[Extern]
  record WSANETWORKEVENTS,
    lNetworkEvents : Int32,
    iErrorCode : Int32[10]

  @[Extern]
  record WSAPROTOCOLCHAIN,
    chain_len : Int32,
    chain_entries : UInt32[7]

  @[Extern]
  record WSAPROTOCOL_INFOA,
    dwServiceFlags1 : UInt32,
    dwServiceFlags2 : UInt32,
    dwServiceFlags3 : UInt32,
    dwServiceFlags4 : UInt32,
    dwProviderFlags : UInt32,
    provider_id : LibC::GUID,
    dwCatalogEntryId : UInt32,
    protocol_chain : Win32cr::Networking::WinSock::WSAPROTOCOLCHAIN,
    iVersion : Int32,
    iAddressFamily : Int32,
    iMaxSockAddr : Int32,
    iMinSockAddr : Int32,
    iSocketType : Int32,
    iProtocol : Int32,
    iProtocolMaxOffset : Int32,
    iNetworkByteOrder : Int32,
    iSecurityScheme : Int32,
    dwMessageSize : UInt32,
    dwProviderReserved : UInt32,
    szProtocol : Win32cr::Foundation::CHAR[256]

  @[Extern]
  record WSAPROTOCOL_INFOW,
    dwServiceFlags1 : UInt32,
    dwServiceFlags2 : UInt32,
    dwServiceFlags3 : UInt32,
    dwServiceFlags4 : UInt32,
    dwProviderFlags : UInt32,
    provider_id : LibC::GUID,
    dwCatalogEntryId : UInt32,
    protocol_chain : Win32cr::Networking::WinSock::WSAPROTOCOLCHAIN,
    iVersion : Int32,
    iAddressFamily : Int32,
    iMaxSockAddr : Int32,
    iMinSockAddr : Int32,
    iSocketType : Int32,
    iProtocol : Int32,
    iProtocolMaxOffset : Int32,
    iNetworkByteOrder : Int32,
    iSecurityScheme : Int32,
    dwMessageSize : UInt32,
    dwProviderReserved : UInt32,
    szProtocol : UInt16[256]

  @[Extern]
  record WSACOMPLETION,
    type__ : Win32cr::Networking::WinSock::WSACOMPLETIONTYPE,
    parameters : Parameters_e__Union_ do

    # Nested Type Parameters_e__Union_
    @[Extern(union: true)]
    record Parameters_e__Union_,
      window_message : WindowMessage_e__Struct_,
      event : Event_e__Struct_,
      apc : Apc_e__Struct_,
      port : Port_e__Struct_ do

      # Nested Type Port_e__Struct_
      @[Extern]
      record Port_e__Struct_,
        lpOverlapped : Win32cr::System::IO::OVERLAPPED*,
        hPort : Win32cr::Foundation::HANDLE,
        key : LibC::UIntPtrT


      # Nested Type Event_e__Struct_
      @[Extern]
      record Event_e__Struct_,
        lpOverlapped : Win32cr::System::IO::OVERLAPPED*


      # Nested Type Apc_e__Struct_
      @[Extern]
      record Apc_e__Struct_,
        lpOverlapped : Win32cr::System::IO::OVERLAPPED*,
        lpfnCompletionProc : Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE


      # Nested Type WindowMessage_e__Struct_
      @[Extern]
      record WindowMessage_e__Struct_,
        hWnd : Win32cr::Foundation::HWND,
        uMsg : UInt32,
        context : Win32cr::Foundation::WPARAM

    end

  end

  @[Extern]
  record AFPROTOCOLS,
    iAddressFamily : Int32,
    iProtocol : Int32

  @[Extern]
  record WSAVERSION,
    dwVersion : UInt32,
    ecHow : Win32cr::Networking::WinSock::WSAECOMPARATOR

  @[Extern]
  record WSAQUERYSETA,
    dwSize : UInt32,
    lpszServiceInstanceName : Win32cr::Foundation::PSTR,
    lpServiceClassId : LibC::GUID*,
    lpVersion : Win32cr::Networking::WinSock::WSAVERSION*,
    lpszComment : Win32cr::Foundation::PSTR,
    dwNameSpace : UInt32,
    lpNSProviderId : LibC::GUID*,
    lpszContext : Win32cr::Foundation::PSTR,
    dwNumberOfProtocols : UInt32,
    lpafpProtocols : Win32cr::Networking::WinSock::AFPROTOCOLS*,
    lpszQueryString : Win32cr::Foundation::PSTR,
    dwNumberOfCsAddrs : UInt32,
    lpcsaBuffer : Win32cr::Networking::WinSock::CSADDR_INFO*,
    dwOutputFlags : UInt32,
    lpBlob : Win32cr::System::Com::BLOB*

  @[Extern]
  record WSAQUERYSETW,
    dwSize : UInt32,
    lpszServiceInstanceName : Win32cr::Foundation::PWSTR,
    lpServiceClassId : LibC::GUID*,
    lpVersion : Win32cr::Networking::WinSock::WSAVERSION*,
    lpszComment : Win32cr::Foundation::PWSTR,
    dwNameSpace : UInt32,
    lpNSProviderId : LibC::GUID*,
    lpszContext : Win32cr::Foundation::PWSTR,
    dwNumberOfProtocols : UInt32,
    lpafpProtocols : Win32cr::Networking::WinSock::AFPROTOCOLS*,
    lpszQueryString : Win32cr::Foundation::PWSTR,
    dwNumberOfCsAddrs : UInt32,
    lpcsaBuffer : Win32cr::Networking::WinSock::CSADDR_INFO*,
    dwOutputFlags : UInt32,
    lpBlob : Win32cr::System::Com::BLOB*

  @[Extern]
  record WSAQUERYSET2A,
    dwSize : UInt32,
    lpszServiceInstanceName : Win32cr::Foundation::PSTR,
    lpVersion : Win32cr::Networking::WinSock::WSAVERSION*,
    lpszComment : Win32cr::Foundation::PSTR,
    dwNameSpace : UInt32,
    lpNSProviderId : LibC::GUID*,
    lpszContext : Win32cr::Foundation::PSTR,
    dwNumberOfProtocols : UInt32,
    lpafpProtocols : Win32cr::Networking::WinSock::AFPROTOCOLS*,
    lpszQueryString : Win32cr::Foundation::PSTR,
    dwNumberOfCsAddrs : UInt32,
    lpcsaBuffer : Win32cr::Networking::WinSock::CSADDR_INFO*,
    dwOutputFlags : UInt32,
    lpBlob : Win32cr::System::Com::BLOB*

  @[Extern]
  record WSAQUERYSET2W,
    dwSize : UInt32,
    lpszServiceInstanceName : Win32cr::Foundation::PWSTR,
    lpVersion : Win32cr::Networking::WinSock::WSAVERSION*,
    lpszComment : Win32cr::Foundation::PWSTR,
    dwNameSpace : UInt32,
    lpNSProviderId : LibC::GUID*,
    lpszContext : Win32cr::Foundation::PWSTR,
    dwNumberOfProtocols : UInt32,
    lpafpProtocols : Win32cr::Networking::WinSock::AFPROTOCOLS*,
    lpszQueryString : Win32cr::Foundation::PWSTR,
    dwNumberOfCsAddrs : UInt32,
    lpcsaBuffer : Win32cr::Networking::WinSock::CSADDR_INFO*,
    dwOutputFlags : UInt32,
    lpBlob : Win32cr::System::Com::BLOB*

  @[Extern]
  record WSANSCLASSINFOA,
    lpszName : Win32cr::Foundation::PSTR,
    dwNameSpace : UInt32,
    dwValueType : UInt32,
    dwValueSize : UInt32,
    lpValue : Void*

  @[Extern]
  record WSANSCLASSINFOW,
    lpszName : Win32cr::Foundation::PWSTR,
    dwNameSpace : UInt32,
    dwValueType : UInt32,
    dwValueSize : UInt32,
    lpValue : Void*

  @[Extern]
  record WSASERVICECLASSINFOA,
    lpServiceClassId : LibC::GUID*,
    lpszServiceClassName : Win32cr::Foundation::PSTR,
    dwCount : UInt32,
    lpClassInfos : Win32cr::Networking::WinSock::WSANSCLASSINFOA*

  @[Extern]
  record WSASERVICECLASSINFOW,
    lpServiceClassId : LibC::GUID*,
    lpszServiceClassName : Win32cr::Foundation::PWSTR,
    dwCount : UInt32,
    lpClassInfos : Win32cr::Networking::WinSock::WSANSCLASSINFOW*

  @[Extern]
  record WSANAMESPACE_INFOA,
    ns_provider_id : LibC::GUID,
    dwNameSpace : UInt32,
    fActive : Win32cr::Foundation::BOOL,
    dwVersion : UInt32,
    lpszIdentifier : Win32cr::Foundation::PSTR

  @[Extern]
  record WSANAMESPACE_INFOW,
    ns_provider_id : LibC::GUID,
    dwNameSpace : UInt32,
    fActive : Win32cr::Foundation::BOOL,
    dwVersion : UInt32,
    lpszIdentifier : Win32cr::Foundation::PWSTR

  @[Extern]
  record WSANAMESPACE_INFOEXA,
    ns_provider_id : LibC::GUID,
    dwNameSpace : UInt32,
    fActive : Win32cr::Foundation::BOOL,
    dwVersion : UInt32,
    lpszIdentifier : Win32cr::Foundation::PSTR,
    provider_specific : Win32cr::System::Com::BLOB

  @[Extern]
  record WSANAMESPACE_INFOEXW,
    ns_provider_id : LibC::GUID,
    dwNameSpace : UInt32,
    fActive : Win32cr::Foundation::BOOL,
    dwVersion : UInt32,
    lpszIdentifier : Win32cr::Foundation::PWSTR,
    provider_specific : Win32cr::System::Com::BLOB

  @[Extern]
  record WSAPOLLFD,
    fd : Win32cr::Networking::WinSock::SOCKET,
    events : Int16,
    revents : Int16

  @[Extern]
  record SOCK_NOTIFY_REGISTRATION,
    socket : Win32cr::Networking::WinSock::SOCKET,
    completionKey : Void*,
    eventFilter : UInt16,
    operation : UInt8,
    triggerFlags : UInt8,
    registrationResult : UInt32

  @[Extern]
  record IN6_ADDR,
    u : U_e__union_ do

    # Nested Type U_e__union_
    @[Extern(union: true)]
    record U_e__union_,
      byte : UInt8[16],
      word : UInt16[8]

  end

  @[Extern]
  record Sockaddr_in6_old,
    sin6_family : Int16,
    sin6_port : UInt16,
    sin6_flowinfo : UInt32,
    sin6_addr : Win32cr::Networking::WinSock::IN6_ADDR

  @[Extern(union: true)]
  record Sockaddr_gen,
    address : Win32cr::Networking::WinSock::SOCKADDR,
    address_in : Win32cr::Networking::WinSock::SOCKADDR_IN,
    address_in6 : Win32cr::Networking::WinSock::Sockaddr_in6_old

  @[Extern]
  record INTERFACE_INFO,
    iiFlags : UInt32,
    iiAddress : Win32cr::Networking::WinSock::Sockaddr_gen,
    iiBroadcastAddress : Win32cr::Networking::WinSock::Sockaddr_gen,
    iiNetmask : Win32cr::Networking::WinSock::Sockaddr_gen

  @[Extern]
  record INTERFACE_INFO_EX,
    iiFlags : UInt32,
    iiAddress : Win32cr::Networking::WinSock::SOCKET_ADDRESS,
    iiBroadcastAddress : Win32cr::Networking::WinSock::SOCKET_ADDRESS,
    iiNetmask : Win32cr::Networking::WinSock::SOCKET_ADDRESS

  @[Extern]
  record SOCKADDR_IN6,
    sin6_family : UInt16,
    sin6_port : UInt16,
    sin6_flowinfo : UInt32,
    sin6_addr : Win32cr::Networking::WinSock::IN6_ADDR,
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      sin6_scope_id : UInt32,
      sin6_scope_struct : Win32cr::Networking::WinSock::SCOPE_ID

  end

  @[Extern]
  record SOCKADDR_IN6_W2KSP1,
    sin6_family : Int16,
    sin6_port : UInt16,
    sin6_flowinfo : UInt32,
    sin6_addr : Win32cr::Networking::WinSock::IN6_ADDR,
    sin6_scope_id : UInt32

  @[Extern(union: true)]
  record SOCKADDR_INET,
    ipv4 : Win32cr::Networking::WinSock::SOCKADDR_IN,
    ipv6 : Win32cr::Networking::WinSock::SOCKADDR_IN6,
    si_family : UInt16

  @[Extern]
  record SOCKADDR_IN6_PAIR,
    source_address : Win32cr::Networking::WinSock::SOCKADDR_IN6*,
    destination_address : Win32cr::Networking::WinSock::SOCKADDR_IN6*

  @[Extern]
  record IP_MREQ,
    imr_multiaddr : Win32cr::Networking::WinSock::IN_ADDR,
    imr_interface : Win32cr::Networking::WinSock::IN_ADDR

  @[Extern]
  record IP_MREQ_SOURCE,
    imr_multiaddr : Win32cr::Networking::WinSock::IN_ADDR,
    imr_sourceaddr : Win32cr::Networking::WinSock::IN_ADDR,
    imr_interface : Win32cr::Networking::WinSock::IN_ADDR

  @[Extern]
  record IP_MSFILTER,
    imsf_multiaddr : Win32cr::Networking::WinSock::IN_ADDR,
    imsf_interface : Win32cr::Networking::WinSock::IN_ADDR,
    imsf_fmode : Win32cr::Networking::WinSock::MULTICAST_MODE_TYPE,
    imsf_numsrc : UInt32,
    imsf_slist : Win32cr::Networking::WinSock::IN_ADDR*

  @[Extern]
  record IPV6_MREQ,
    ipv6mr_multiaddr : Win32cr::Networking::WinSock::IN6_ADDR,
    ipv6mr_interface : UInt32

  @[Extern]
  record GROUP_REQ,
    gr_interface : UInt32,
    gr_group : Win32cr::Networking::WinSock::SOCKADDR_STORAGE

  @[Extern]
  record GROUP_SOURCE_REQ,
    gsr_interface : UInt32,
    gsr_group : Win32cr::Networking::WinSock::SOCKADDR_STORAGE,
    gsr_source : Win32cr::Networking::WinSock::SOCKADDR_STORAGE

  @[Extern]
  record GROUP_FILTER,
    gf_interface : UInt32,
    gf_group : Win32cr::Networking::WinSock::SOCKADDR_STORAGE,
    gf_fmode : Win32cr::Networking::WinSock::MULTICAST_MODE_TYPE,
    gf_numsrc : UInt32,
    gf_slist : Win32cr::Networking::WinSock::SOCKADDR_STORAGE*

  @[Extern]
  record IN_PKTINFO,
    ipi_addr : Win32cr::Networking::WinSock::IN_ADDR,
    ipi_ifindex : UInt32

  @[Extern]
  record IN6_PKTINFO,
    ipi6_addr : Win32cr::Networking::WinSock::IN6_ADDR,
    ipi6_ifindex : UInt32

  @[Extern]
  record IN_PKTINFO_EX,
    pkt_info : Win32cr::Networking::WinSock::IN_PKTINFO,
    scope_id : Win32cr::Networking::WinSock::SCOPE_ID

  @[Extern]
  record In6_pktinfo_ex,
    pkt_info : Win32cr::Networking::WinSock::IN6_PKTINFO,
    scope_id : Win32cr::Networking::WinSock::SCOPE_ID

  @[Extern]
  record IN_RECVERR,
    protocol : Win32cr::Networking::WinSock::IPPROTO,
    info : UInt32,
    type__ : UInt8,
    code : UInt8

  @[Extern]
  record ICMP_ERROR_INFO,
    srcaddress : Win32cr::Networking::WinSock::SOCKADDR_INET,
    protocol : Win32cr::Networking::WinSock::IPPROTO,
    type__ : UInt8,
    code : UInt8

  @[Extern]
  record RM_SEND_WINDOW,
    rate_kbits_per_sec : UInt32,
    window_size_in_m_secs : UInt32,
    window_size_in_bytes : UInt32

  @[Extern]
  record RM_SENDER_STATS,
    data_bytes_sent : UInt64,
    total_bytes_sent : UInt64,
    naks_received : UInt64,
    naks_received_too_late : UInt64,
    num_outstanding_naks : UInt64,
    num_naks_after_r_data : UInt64,
    repair_packets_sent : UInt64,
    buffer_space_available : UInt64,
    trailing_edge_seq_id : UInt64,
    leading_edge_seq_id : UInt64,
    rate_k_bits_per_sec_overall : UInt64,
    rate_k_bits_per_sec_last : UInt64,
    total_o_data_packets_sent : UInt64

  @[Extern]
  record RM_RECEIVER_STATS,
    num_o_data_packets_received : UInt64,
    num_r_data_packets_received : UInt64,
    num_duplicate_data_packets : UInt64,
    data_bytes_received : UInt64,
    total_bytes_received : UInt64,
    rate_k_bits_per_sec_overall : UInt64,
    rate_k_bits_per_sec_last : UInt64,
    trailing_edge_seq_id : UInt64,
    leading_edge_seq_id : UInt64,
    average_sequences_in_window : UInt64,
    min_sequences_in_window : UInt64,
    max_sequences_in_window : UInt64,
    first_nak_sequence_number : UInt64,
    num_pending_naks : UInt64,
    num_outstanding_naks : UInt64,
    num_data_packets_buffered : UInt64,
    total_selective_naks_sent : UInt64,
    total_parity_naks_sent : UInt64

  @[Extern]
  record RM_FEC_INFO,
    fec_block_size : UInt16,
    fec_pro_active_packets : UInt16,
    fec_group_size : UInt8,
    fFECOnDemandParityEnabled : Win32cr::Foundation::BOOLEAN

  @[Extern]
  record IPX_ADDRESS_DATA,
    adapternum : Int32,
    netnum : UInt8[4],
    nodenum : UInt8[6],
    wan : Win32cr::Foundation::BOOLEAN,
    status : Win32cr::Foundation::BOOLEAN,
    maxpkt : Int32,
    linkspeed : UInt32

  @[Extern]
  record IPX_NETNUM_DATA,
    netnum : UInt8[4],
    hopcount : UInt16,
    netdelay : UInt16,
    cardnum : Int32,
    router : UInt8[6]

  @[Extern]
  record IPX_SPXCONNSTATUS_DATA,
    connection_state : UInt8,
    watch_dog_active : UInt8,
    local_connection_id : UInt16,
    remote_connection_id : UInt16,
    local_sequence_number : UInt16,
    local_ack_number : UInt16,
    local_alloc_number : UInt16,
    remote_ack_number : UInt16,
    remote_alloc_number : UInt16,
    local_socket : UInt16,
    immediate_address : UInt8[6],
    remote_network : UInt8[4],
    remote_node : UInt8[6],
    remote_socket : UInt16,
    retransmission_count : UInt16,
    estimated_round_trip_delay : UInt16,
    retransmitted_packets : UInt16,
    suppressed_packet : UInt16

  @[Extern]
  record LM_IRPARMS,
    nTXDataBytes : UInt32,
    nRXDataBytes : UInt32,
    nBaudRate : UInt32,
    thresholdTime : UInt32,
    discTime : UInt32,
    nMSLinkTurn : UInt16,
    nTXPackets : UInt8,
    nRXPackets : UInt8

  @[Extern]
  record SOCKADDR_IRDA,
    irdaAddressFamily : UInt16,
    irdaDeviceID : UInt8[4],
    irdaServiceName : Win32cr::Foundation::CHAR[25]

  @[Extern]
  record WINDOWS_IRDA_DEVICE_INFO,
    irdaDeviceID : UInt8[4],
    irdaDeviceName : Win32cr::Foundation::CHAR[22],
    irdaDeviceHints1 : UInt8,
    irdaDeviceHints2 : UInt8,
    irdaCharSet : UInt8

  @[Extern]
  record WCE_IRDA_DEVICE_INFO,
    irdaDeviceID : UInt8[4],
    irdaDeviceName : Win32cr::Foundation::CHAR[22],
    reserved : UInt8[2]

  @[Extern]
  record WINDOWS_DEVICELIST,
    numDevice : UInt32,
    device : Win32cr::Networking::WinSock::WINDOWS_IRDA_DEVICE_INFO*

  @[Extern]
  record WCE_DEVICELIST,
    numDevice : UInt32,
    device : Win32cr::Networking::WinSock::WCE_IRDA_DEVICE_INFO*

  @[Extern]
  record WINDOWS_IAS_SET,
    irdaClassName : Win32cr::Foundation::CHAR[64],
    irdaAttribName : Win32cr::Foundation::CHAR[256],
    irdaAttribType : UInt32,
    irdaAttribute : Irdaattribute_e__union_ do

    # Nested Type Irdaattribute_e__union_
    @[Extern(union: true)]
    record Irdaattribute_e__union_,
      irdaAttribInt : Int32,
      irdaAttribOctetSeq : Irdaattriboctetseq_e__struct_,
      irdaAttribUsrStr : Irdaattribusrstr_e__struct_ do

      # Nested Type Irdaattriboctetseq_e__struct_
      @[Extern]
      record Irdaattriboctetseq_e__struct_,
        len : UInt16,
        octet_seq : UInt8[1024]


      # Nested Type Irdaattribusrstr_e__struct_
      @[Extern]
      record Irdaattribusrstr_e__struct_,
        len : UInt8,
        char_set : UInt8,
        usr_str : UInt8[256]

    end

  end

  @[Extern]
  record WINDOWS_IAS_QUERY,
    irdaDeviceID : UInt8[4],
    irdaClassName : Win32cr::Foundation::CHAR[64],
    irdaAttribName : Win32cr::Foundation::CHAR[256],
    irdaAttribType : UInt32,
    irdaAttribute : Irdaattribute_e__union_ do

    # Nested Type Irdaattribute_e__union_
    @[Extern(union: true)]
    record Irdaattribute_e__union_,
      irdaAttribInt : Int32,
      irdaAttribOctetSeq : Irdaattriboctetseq_e__struct_,
      irdaAttribUsrStr : Irdaattribusrstr_e__struct_ do

      # Nested Type Irdaattriboctetseq_e__struct_
      @[Extern]
      record Irdaattriboctetseq_e__struct_,
        len : UInt32,
        octet_seq : UInt8[1024]


      # Nested Type Irdaattribusrstr_e__struct_
      @[Extern]
      record Irdaattribusrstr_e__struct_,
        len : UInt32,
        char_set : UInt32,
        usr_str : UInt8[256]

    end

  end

  @[Extern]
  record NL_INTERFACE_OFFLOAD_ROD,
    _bitfield : UInt8

  @[Extern]
  record NL_PATH_BANDWIDTH_ROD,
    bandwidth : UInt64,
    instability : UInt64,
    bandwidth_peaked : Win32cr::Foundation::BOOLEAN

  @[Extern]
  record NL_NETWORK_CONNECTIVITY_HINT,
    connectivity_level : Win32cr::Networking::WinSock::NL_NETWORK_CONNECTIVITY_LEVEL_HINT,
    connectivity_cost : Win32cr::Networking::WinSock::NL_NETWORK_CONNECTIVITY_COST_HINT,
    approaching_data_limit : Win32cr::Foundation::BOOLEAN,
    over_data_limit : Win32cr::Foundation::BOOLEAN,
    roaming : Win32cr::Foundation::BOOLEAN

  @[Extern]
  record NL_BANDWIDTH_INFORMATION,
    bandwidth : UInt64,
    instability : UInt64,
    bandwidth_peaked : Win32cr::Foundation::BOOLEAN

  @[Extern]
  record TRANSPORT_SETTING_ID,
    guid : LibC::GUID

  @[Extern]
  record Tcp_keepalive,
    onoff : UInt32,
    keepalivetime : UInt32,
    keepaliveinterval : UInt32

  @[Extern]
  record REAL_TIME_NOTIFICATION_SETTING_INPUT,
    transport_setting_id : Win32cr::Networking::WinSock::TRANSPORT_SETTING_ID,
    broker_event_guid : LibC::GUID

  @[Extern]
  record REAL_TIME_NOTIFICATION_SETTING_INPUT_EX,
    transport_setting_id : Win32cr::Networking::WinSock::TRANSPORT_SETTING_ID,
    broker_event_guid : LibC::GUID,
    unmark : Win32cr::Foundation::BOOLEAN

  @[Extern]
  record REAL_TIME_NOTIFICATION_SETTING_OUTPUT,
    channel_status : Win32cr::Networking::WinSock::CONTROL_CHANNEL_TRIGGER_STATUS

  @[Extern]
  record ASSOCIATE_NAMERES_CONTEXT_INPUT,
    transport_setting_id : Win32cr::Networking::WinSock::TRANSPORT_SETTING_ID,
    handle : UInt64

  @[Extern]
  record TIMESTAMPING_CONFIG,
    flags : UInt32,
    tx_timestamps_buffered : UInt16

  @[Extern]
  record PRIORITY_STATUS,
    sender : Win32cr::Networking::WinSock::SOCKET_PRIORITY_HINT,
    receiver : Win32cr::Networking::WinSock::SOCKET_PRIORITY_HINT

  @[Extern]
  record RCVALL_IF,
    mode : Win32cr::Networking::WinSock::RCVALL_VALUE,
    interface : UInt32

  @[Extern]
  record TCP_INITIAL_RTO_PARAMETERS,
    rtt : UInt16,
    max_syn_retransmissions : UInt8

  @[Extern]
  record TCP_ICW_PARAMETERS,
    level : Win32cr::Networking::WinSock::TCP_ICW_LEVEL

  @[Extern]
  record TCP_ACK_FREQUENCY_PARAMETERS,
    tcp_delayed_ack_frequency : UInt8

  @[Extern]
  record TCP_INFO_v0,
    state : Win32cr::Networking::WinSock::TCPSTATE,
    mss : UInt32,
    connection_time_ms : UInt64,
    timestamps_enabled : Win32cr::Foundation::BOOLEAN,
    rtt_us : UInt32,
    min_rtt_us : UInt32,
    bytes_in_flight : UInt32,
    cwnd : UInt32,
    snd_wnd : UInt32,
    rcv_wnd : UInt32,
    rcv_buf : UInt32,
    bytes_out : UInt64,
    bytes_in : UInt64,
    bytes_reordered : UInt32,
    bytes_retrans : UInt32,
    fast_retrans : UInt32,
    dup_acks_in : UInt32,
    timeout_episodes : UInt32,
    syn_retrans : UInt8

  @[Extern]
  record TCP_INFO_v1,
    state : Win32cr::Networking::WinSock::TCPSTATE,
    mss : UInt32,
    connection_time_ms : UInt64,
    timestamps_enabled : Win32cr::Foundation::BOOLEAN,
    rtt_us : UInt32,
    min_rtt_us : UInt32,
    bytes_in_flight : UInt32,
    cwnd : UInt32,
    snd_wnd : UInt32,
    rcv_wnd : UInt32,
    rcv_buf : UInt32,
    bytes_out : UInt64,
    bytes_in : UInt64,
    bytes_reordered : UInt32,
    bytes_retrans : UInt32,
    fast_retrans : UInt32,
    dup_acks_in : UInt32,
    timeout_episodes : UInt32,
    syn_retrans : UInt8,
    snd_lim_trans_rwin : UInt32,
    snd_lim_time_rwin : UInt32,
    snd_lim_bytes_rwin : UInt64,
    snd_lim_trans_cwnd : UInt32,
    snd_lim_time_cwnd : UInt32,
    snd_lim_bytes_cwnd : UInt64,
    snd_lim_trans_snd : UInt32,
    snd_lim_time_snd : UInt32,
    snd_lim_bytes_snd : UInt64

  @[Extern]
  record INET_PORT_RANGE,
    start_port : UInt16,
    number_of_ports : UInt16

  @[Extern]
  record INET_PORT_RESERVATION_TOKEN,
    token : UInt64

  @[Extern]
  record INET_PORT_RESERVATION_INSTANCE,
    reservation : Win32cr::Networking::WinSock::INET_PORT_RANGE,
    token : Win32cr::Networking::WinSock::INET_PORT_RESERVATION_TOKEN

  @[Extern]
  record INET_PORT_RESERVATION_INFORMATION,
    owning_pid : UInt32

  @[Extern]
  record SOCKET_SECURITY_SETTINGS,
    security_protocol : Win32cr::Networking::WinSock::SOCKET_SECURITY_PROTOCOL,
    security_flags : UInt32

  @[Extern]
  record SOCKET_SECURITY_SETTINGS_IPSEC,
    security_protocol : Win32cr::Networking::WinSock::SOCKET_SECURITY_PROTOCOL,
    security_flags : UInt32,
    ipsec_flags : UInt32,
    authip_mm_policy_key : LibC::GUID,
    authip_qm_policy_key : LibC::GUID,
    reserved : LibC::GUID,
    reserved2 : UInt64,
    user_name_string_len : UInt32,
    domain_name_string_len : UInt32,
    password_string_len : UInt32,
    all_strings : UInt16*

  @[Extern]
  record SOCKET_PEER_TARGET_NAME,
    security_protocol : Win32cr::Networking::WinSock::SOCKET_SECURITY_PROTOCOL,
    peer_address : Win32cr::Networking::WinSock::SOCKADDR_STORAGE,
    peer_target_name_string_len : UInt32,
    all_strings : UInt16*

  @[Extern]
  record SOCKET_SECURITY_QUERY_TEMPLATE,
    security_protocol : Win32cr::Networking::WinSock::SOCKET_SECURITY_PROTOCOL,
    peer_address : Win32cr::Networking::WinSock::SOCKADDR_STORAGE,
    peer_token_access_mask : UInt32

  @[Extern]
  record SOCKET_SECURITY_QUERY_TEMPLATE_IPSEC2,
    security_protocol : Win32cr::Networking::WinSock::SOCKET_SECURITY_PROTOCOL,
    peer_address : Win32cr::Networking::WinSock::SOCKADDR_STORAGE,
    peer_token_access_mask : UInt32,
    flags : UInt32,
    field_mask : UInt32

  @[Extern]
  record SOCKET_SECURITY_QUERY_INFO,
    security_protocol : Win32cr::Networking::WinSock::SOCKET_SECURITY_PROTOCOL,
    flags : UInt32,
    peer_application_access_token_handle : UInt64,
    peer_machine_access_token_handle : UInt64

  @[Extern]
  record SOCKET_SECURITY_QUERY_INFO_IPSEC2,
    security_protocol : Win32cr::Networking::WinSock::SOCKET_SECURITY_PROTOCOL,
    flags : UInt32,
    peer_application_access_token_handle : UInt64,
    peer_machine_access_token_handle : UInt64,
    mm_sa_id : UInt64,
    qm_sa_id : UInt64,
    negotiation_winerr : UInt32,
    sa_lookup_context : LibC::GUID

  @[Extern]
  record RSS_SCALABILITY_INFO,
    rss_enabled : Win32cr::Foundation::BOOLEAN

  @[Extern]
  record WSA_COMPATIBILITY_MODE,
    behavior_id : Win32cr::Networking::WinSock::WSA_COMPATIBILITY_BEHAVIOR_ID,
    target_os_version : UInt32

  @[Extern]
  record RIORESULT,
    status : Int32,
    bytes_transferred : UInt32,
    socket_context : UInt64,
    request_context : UInt64

  @[Extern]
  record RIO_BUF,
    buffer_id : Win32cr::Networking::WinSock::RIO_BUFFERID_t*,
    offset : UInt32,
    length : UInt32

  @[Extern]
  record RIO_CMSG_BUFFER,
    total_length : UInt32

  @[Extern]
  record ATM_ADDRESS,
    address_type : UInt32,
    numof_digits : UInt32,
    addr : UInt8[20]

  @[Extern]
  record ATM_BLLI,
    layer2_protocol : UInt32,
    layer2_user_specified_protocol : UInt32,
    layer3_protocol : UInt32,
    layer3_user_specified_protocol : UInt32,
    layer3_ipi : UInt32,
    snap_id : UInt8[5]

  @[Extern]
  record ATM_BHLI,
    high_layer_info_type : UInt32,
    high_layer_info_length : UInt32,
    high_layer_info : UInt8[8]

  @[Extern]
  record Sockaddr_atm,
    satm_family : UInt16,
    satm_number : Win32cr::Networking::WinSock::ATM_ADDRESS,
    satm_blli : Win32cr::Networking::WinSock::ATM_BLLI,
    satm_bhli : Win32cr::Networking::WinSock::ATM_BHLI

  @[Extern]
  record Q2931_IE,
    ie_type : Win32cr::Networking::WinSock::Q2931_IE_TYPE,
    ie_length : UInt32,
    ie : UInt8*

  @[Extern]
  record AAL5_PARAMETERS,
    forward_max_cpcssdu_size : UInt32,
    backward_max_cpcssdu_size : UInt32,
    mode : UInt8,
    sscs_type : UInt8

  @[Extern]
  record AALUSER_PARAMETERS,
    user_defined : UInt32

  @[Extern]
  record AAL_PARAMETERS_IE,
    aal_type : Win32cr::Networking::WinSock::AAL_TYPE,
    aal_specific_parameters : AALSpecificParameters_e__Union_ do

    # Nested Type AALSpecificParameters_e__Union_
    @[Extern(union: true)]
    record AALSpecificParameters_e__Union_,
      aal5_parameters : Win32cr::Networking::WinSock::AAL5_PARAMETERS,
      aal_user_parameters : Win32cr::Networking::WinSock::AALUSER_PARAMETERS

  end

  @[Extern]
  record ATM_TD,
    peak_cell_rate_clp0 : UInt32,
    peak_cell_rate_clp01 : UInt32,
    sustainable_cell_rate_clp0 : UInt32,
    sustainable_cell_rate_clp01 : UInt32,
    max_burst_size_clp0 : UInt32,
    max_burst_size_clp01 : UInt32,
    tagging : Win32cr::Foundation::BOOL

  @[Extern]
  record ATM_TRAFFIC_DESCRIPTOR_IE,
    forward : Win32cr::Networking::WinSock::ATM_TD,
    backward : Win32cr::Networking::WinSock::ATM_TD,
    best_effort : Win32cr::Foundation::BOOL

  @[Extern]
  record ATM_BROADBAND_BEARER_CAPABILITY_IE,
    bearer_class : UInt8,
    traffic_type : UInt8,
    timing_requirements : UInt8,
    clipping_susceptability : UInt8,
    user_plane_connection_config : UInt8

  @[Extern]
  record ATM_BLLI_IE,
    layer2_protocol : UInt32,
    layer2_mode : UInt8,
    layer2_window_size : UInt8,
    layer2_user_specified_protocol : UInt32,
    layer3_protocol : UInt32,
    layer3_mode : UInt8,
    layer3_default_packet_size : UInt8,
    layer3_packet_window_size : UInt8,
    layer3_user_specified_protocol : UInt32,
    layer3_ipi : UInt32,
    snap_id : UInt8[5]

  @[Extern]
  record ATM_CALLING_PARTY_NUMBER_IE,
    atm_number : Win32cr::Networking::WinSock::ATM_ADDRESS,
    presentation_indication : UInt8,
    screening_indicator : UInt8

  @[Extern]
  record ATM_CAUSE_IE,
    location : UInt8,
    cause : UInt8,
    diagnostics_length : UInt8,
    diagnostics : UInt8[4]

  @[Extern]
  record ATM_QOS_CLASS_IE,
    qos_class_forward : UInt8,
    qos_class_backward : UInt8

  @[Extern]
  record ATM_TRANSIT_NETWORK_SELECTION_IE,
    type_of_network_id : UInt8,
    network_id_plan : UInt8,
    network_id_length : UInt8,
    network_id : UInt8*

  @[Extern]
  record ATM_CONNECTION_ID,
    device_number : UInt32,
    vpi : UInt32,
    vci : UInt32

  @[Extern]
  record ATM_PVC_PARAMS,
    pvc_connection_id : Win32cr::Networking::WinSock::ATM_CONNECTION_ID,
    pvc_qos : Win32cr::Networking::WinSock::QOS

  @[Extern]
  record NAPI_DOMAIN_DESCRIPTION_BLOB,
    auth_level : UInt32,
    cchDomainName : UInt32,
    offset_next_domain_description : UInt32,
    offset_this_domain_name : UInt32

  @[Extern]
  record NAPI_PROVIDER_INSTALLATION_BLOB,
    dwVersion : UInt32,
    dwProviderType : UInt32,
    fSupportsWildCard : UInt32,
    cDomains : UInt32,
    offset_first_domain : UInt32

  @[Extern]
  record TRANSMIT_FILE_BUFFERS,
    head : Void*,
    head_length : UInt32,
    tail : Void*,
    tail_length : UInt32

  @[Extern]
  record TRANSMIT_PACKETS_ELEMENT,
    dwElFlags : UInt32,
    cLength : UInt32,
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      anonymous : Anonymous_e__Struct_,
      pBuffer : Void* do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        nFileOffset : Win32cr::Foundation::LARGE_INTEGER,
        hFile : Win32cr::Foundation::HANDLE

    end

  end

  @[Extern]
  record NLA_BLOB,
    header : Header_e__struct_,
    data : Data_e__union_ do

    # Nested Type Data_e__union_
    @[Extern(union: true)]
    record Data_e__union_,
      rawData : Win32cr::Foundation::CHAR*,
      interfaceData : Interfacedata_e__struct_,
      locationData : Locationdata_e__struct_,
      connectivity : Connectivity_e__struct_,
      ics : ICS_e__Struct_ do

      # Nested Type ICS_e__Struct_
      @[Extern]
      record ICS_e__Struct_,
        remote : Remote_e__struct_ do

        # Nested Type Remote_e__struct_
        @[Extern]
        record Remote_e__struct_,
          speed : UInt32,
          type__ : UInt32,
          state : UInt32,
          machineName : UInt16[256],
          sharedAdapterName : UInt16[256]

      end


      # Nested Type Locationdata_e__struct_
      @[Extern]
      record Locationdata_e__struct_,
        information : Win32cr::Foundation::CHAR*


      # Nested Type Connectivity_e__struct_
      @[Extern]
      record Connectivity_e__struct_,
        type__ : Win32cr::Networking::WinSock::NLA_CONNECTIVITY_TYPE,
        internet : Win32cr::Networking::WinSock::NLA_INTERNET


      # Nested Type Interfacedata_e__struct_
      @[Extern]
      record Interfacedata_e__struct_,
        dwType : UInt32,
        dwSpeed : UInt32,
        adapterName : Win32cr::Foundation::CHAR*

    end


    # Nested Type Header_e__struct_
    @[Extern]
    record Header_e__struct_,
      type__ : Win32cr::Networking::WinSock::NLA_BLOB_DATA_TYPE,
      dwSize : UInt32,
      nextOffset : UInt32

  end

  @[Extern]
  record WSAPOLLDATA,
    result : Int32,
    fds : UInt32,
    timeout : Int32,
    fdArray : Win32cr::Networking::WinSock::WSAPOLLFD*

  @[Extern]
  record WSASENDMSG,
    lpMsg : Win32cr::Networking::WinSock::WSAMSG*,
    dwFlags : UInt32,
    lpNumberOfBytesSent : UInt32*,
    lpOverlapped : Win32cr::System::IO::OVERLAPPED*,
    lpCompletionRoutine : Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE

  @[Extern]
  record RIO_NOTIFICATION_COMPLETION,
    type__ : Win32cr::Networking::WinSock::RIO_NOTIFICATION_COMPLETION_TYPE,
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      event : Event_e__Struct_,
      iocp : Iocp_e__Struct_ do

      # Nested Type Iocp_e__Struct_
      @[Extern]
      record Iocp_e__Struct_,
        iocp_handle : Win32cr::Foundation::HANDLE,
        completion_key : Void*,
        overlapped : Void*


      # Nested Type Event_e__Struct_
      @[Extern]
      record Event_e__Struct_,
        event_handle : Win32cr::Foundation::HANDLE,
        notify_reset : Win32cr::Foundation::BOOL

    end

  end

  @[Extern]
  record RIO_EXTENSION_FUNCTION_TABLE,
    cbSize : UInt32,
    rio_receive : Win32cr::Networking::WinSock::LPFN_RIORECEIVE,
    rio_receive_ex : Win32cr::Networking::WinSock::LPFN_RIORECEIVEEX,
    rio_send : Win32cr::Networking::WinSock::LPFN_RIOSEND,
    rio_send_ex : Win32cr::Networking::WinSock::LPFN_RIOSENDEX,
    rio_close_completion_queue : Win32cr::Networking::WinSock::LPFN_RIOCLOSECOMPLETIONQUEUE,
    rio_create_completion_queue : Win32cr::Networking::WinSock::LPFN_RIOCREATECOMPLETIONQUEUE,
    rio_create_request_queue : Win32cr::Networking::WinSock::LPFN_RIOCREATEREQUESTQUEUE,
    rio_dequeue_completion : Win32cr::Networking::WinSock::LPFN_RIODEQUEUECOMPLETION,
    rio_deregister_buffer : Win32cr::Networking::WinSock::LPFN_RIODEREGISTERBUFFER,
    rio_notify : Win32cr::Networking::WinSock::LPFN_RIONOTIFY,
    rio_register_buffer : Win32cr::Networking::WinSock::LPFN_RIOREGISTERBUFFER,
    rio_resize_completion_queue : Win32cr::Networking::WinSock::LPFN_RIORESIZECOMPLETIONQUEUE,
    rio_resize_request_queue : Win32cr::Networking::WinSock::LPFN_RIORESIZEREQUESTQUEUE

  @[Extern]
  record WSPData,
    wVersion : UInt16,
    wHighVersion : UInt16,
    szDescription : UInt16[256]

  @[Extern]
  record WSATHREADID,
    thread_handle : Win32cr::Foundation::HANDLE,
    reserved : LibC::UIntPtrT

  @[Extern]
  record WSPPROC_TABLE,
    lpWSPAccept : Win32cr::Networking::WinSock::LPWSPACCEPT,
    lpWSPAddressToString : Win32cr::Networking::WinSock::LPWSPADDRESSTOSTRING,
    lpWSPAsyncSelect : Win32cr::Networking::WinSock::LPWSPASYNCSELECT,
    lpWSPBind : Win32cr::Networking::WinSock::LPWSPBIND,
    lpWSPCancelBlockingCall : Win32cr::Networking::WinSock::LPWSPCANCELBLOCKINGCALL,
    lpWSPCleanup : Win32cr::Networking::WinSock::LPWSPCLEANUP,
    lpWSPCloseSocket : Win32cr::Networking::WinSock::LPWSPCLOSESOCKET,
    lpWSPConnect : Win32cr::Networking::WinSock::LPWSPCONNECT,
    lpWSPDuplicateSocket : Win32cr::Networking::WinSock::LPWSPDUPLICATESOCKET,
    lpWSPEnumNetworkEvents : Win32cr::Networking::WinSock::LPWSPENUMNETWORKEVENTS,
    lpWSPEventSelect : Win32cr::Networking::WinSock::LPWSPEVENTSELECT,
    lpWSPGetOverlappedResult : Win32cr::Networking::WinSock::LPWSPGETOVERLAPPEDRESULT,
    lpWSPGetPeerName : Win32cr::Networking::WinSock::LPWSPGETPEERNAME,
    lpWSPGetSockName : Win32cr::Networking::WinSock::LPWSPGETSOCKNAME,
    lpWSPGetSockOpt : Win32cr::Networking::WinSock::LPWSPGETSOCKOPT,
    lpWSPGetQOSByName : Win32cr::Networking::WinSock::LPWSPGETQOSBYNAME,
    lpWSPIoctl : Win32cr::Networking::WinSock::LPWSPIOCTL,
    lpWSPJoinLeaf : Win32cr::Networking::WinSock::LPWSPJOINLEAF,
    lpWSPListen : Win32cr::Networking::WinSock::LPWSPLISTEN,
    lpWSPRecv : Win32cr::Networking::WinSock::LPWSPRECV,
    lpWSPRecvDisconnect : Win32cr::Networking::WinSock::LPWSPRECVDISCONNECT,
    lpWSPRecvFrom : Win32cr::Networking::WinSock::LPWSPRECVFROM,
    lpWSPSelect : Win32cr::Networking::WinSock::LPWSPSELECT,
    lpWSPSend : Win32cr::Networking::WinSock::LPWSPSEND,
    lpWSPSendDisconnect : Win32cr::Networking::WinSock::LPWSPSENDDISCONNECT,
    lpWSPSendTo : Win32cr::Networking::WinSock::LPWSPSENDTO,
    lpWSPSetSockOpt : Win32cr::Networking::WinSock::LPWSPSETSOCKOPT,
    lpWSPShutdown : Win32cr::Networking::WinSock::LPWSPSHUTDOWN,
    lpWSPSocket : Win32cr::Networking::WinSock::LPWSPSOCKET,
    lpWSPStringToAddress : Win32cr::Networking::WinSock::LPWSPSTRINGTOADDRESS

  @[Extern]
  record WSPUPCALLTABLE,
    lpWPUCloseEvent : Win32cr::Networking::WinSock::LPWPUCLOSEEVENT,
    lpWPUCloseSocketHandle : Win32cr::Networking::WinSock::LPWPUCLOSESOCKETHANDLE,
    lpWPUCreateEvent : Win32cr::Networking::WinSock::LPWPUCREATEEVENT,
    lpWPUCreateSocketHandle : Win32cr::Networking::WinSock::LPWPUCREATESOCKETHANDLE,
    lpWPUFDIsSet : Win32cr::Networking::WinSock::LPWPUFDISSET,
    lpWPUGetProviderPath : Win32cr::Networking::WinSock::LPWPUGETPROVIDERPATH,
    lpWPUModifyIFSHandle : Win32cr::Networking::WinSock::LPWPUMODIFYIFSHANDLE,
    lpWPUPostMessage : Win32cr::Networking::WinSock::LPWPUPOSTMESSAGE,
    lpWPUQueryBlockingCallback : Win32cr::Networking::WinSock::LPWPUQUERYBLOCKINGCALLBACK,
    lpWPUQuerySocketHandleContext : Win32cr::Networking::WinSock::LPWPUQUERYSOCKETHANDLECONTEXT,
    lpWPUQueueApc : Win32cr::Networking::WinSock::LPWPUQUEUEAPC,
    lpWPUResetEvent : Win32cr::Networking::WinSock::LPWPURESETEVENT,
    lpWPUSetEvent : Win32cr::Networking::WinSock::LPWPUSETEVENT,
    lpWPUOpenCurrentThread : Win32cr::Networking::WinSock::LPWPUOPENCURRENTTHREAD,
    lpWPUCloseThread : Win32cr::Networking::WinSock::LPWPUCLOSETHREAD

  @[Extern]
  record WSC_PROVIDER_AUDIT_INFO,
    record_size : UInt32,
    reserved : Void*

  @[Extern]
  record NSP_ROUTINE,
    cbSize : UInt32,
    dwMajorVersion : UInt32,
    dwMinorVersion : UInt32,
    nsp_cleanup : Win32cr::Networking::WinSock::LPNSPCLEANUP,
    nsp_lookup_service_begin : Win32cr::Networking::WinSock::LPNSPLOOKUPSERVICEBEGIN,
    nsp_lookup_service_next : Win32cr::Networking::WinSock::LPNSPLOOKUPSERVICENEXT,
    nsp_lookup_service_end : Win32cr::Networking::WinSock::LPNSPLOOKUPSERVICEEND,
    nsp_set_service : Win32cr::Networking::WinSock::LPNSPSETSERVICE,
    nsp_install_service_class : Win32cr::Networking::WinSock::LPNSPINSTALLSERVICECLASS,
    nsp_remove_service_class : Win32cr::Networking::WinSock::LPNSPREMOVESERVICECLASS,
    nsp_get_service_class_info : Win32cr::Networking::WinSock::LPNSPGETSERVICECLASSINFO,
    nsp_ioctl : Win32cr::Networking::WinSock::LPNSPIOCTL

  @[Extern]
  record NSPV2_ROUTINE,
    cbSize : UInt32,
    dwMajorVersion : UInt32,
    dwMinorVersion : UInt32,
    ns_pv2_startup : Win32cr::Networking::WinSock::LPNSPV2STARTUP,
    ns_pv2_cleanup : Win32cr::Networking::WinSock::LPNSPV2CLEANUP,
    ns_pv2_lookup_service_begin : Win32cr::Networking::WinSock::LPNSPV2LOOKUPSERVICEBEGIN,
    ns_pv2_lookup_service_next_ex : Win32cr::Networking::WinSock::LPNSPV2LOOKUPSERVICENEXTEX,
    ns_pv2_lookup_service_end : Win32cr::Networking::WinSock::LPNSPV2LOOKUPSERVICEEND,
    ns_pv2_set_service_ex : Win32cr::Networking::WinSock::LPNSPV2SETSERVICEEX,
    ns_pv2_client_session_rundown : Win32cr::Networking::WinSock::LPNSPV2CLIENTSESSIONRUNDOWN

  @[Extern]
  record NS_INFOA,
    dwNameSpace : UInt32,
    dwNameSpaceFlags : UInt32,
    lpNameSpace : Win32cr::Foundation::PSTR

  @[Extern]
  record NS_INFOW,
    dwNameSpace : UInt32,
    dwNameSpaceFlags : UInt32,
    lpNameSpace : Win32cr::Foundation::PWSTR

  @[Extern]
  record SERVICE_TYPE_VALUE,
    dwNameSpace : UInt32,
    dwValueType : UInt32,
    dwValueSize : UInt32,
    dwValueNameOffset : UInt32,
    dwValueOffset : UInt32

  @[Extern]
  record SERVICE_TYPE_VALUE_ABSA,
    dwNameSpace : UInt32,
    dwValueType : UInt32,
    dwValueSize : UInt32,
    lpValueName : Win32cr::Foundation::PSTR,
    lpValue : Void*

  @[Extern]
  record SERVICE_TYPE_VALUE_ABSW,
    dwNameSpace : UInt32,
    dwValueType : UInt32,
    dwValueSize : UInt32,
    lpValueName : Win32cr::Foundation::PWSTR,
    lpValue : Void*

  @[Extern]
  record SERVICE_TYPE_INFO,
    dwTypeNameOffset : UInt32,
    dwValueCount : UInt32,
    values : Win32cr::Networking::WinSock::SERVICE_TYPE_VALUE*

  @[Extern]
  record SERVICE_TYPE_INFO_ABSA,
    lpTypeName : Win32cr::Foundation::PSTR,
    dwValueCount : UInt32,
    values : Win32cr::Networking::WinSock::SERVICE_TYPE_VALUE_ABSA*

  @[Extern]
  record SERVICE_TYPE_INFO_ABSW,
    lpTypeName : Win32cr::Foundation::PWSTR,
    dwValueCount : UInt32,
    values : Win32cr::Networking::WinSock::SERVICE_TYPE_VALUE_ABSW*

  @[Extern]
  record SERVICE_ADDRESS,
    dwAddressType : UInt32,
    dwAddressFlags : UInt32,
    dwAddressLength : UInt32,
    dwPrincipalLength : UInt32,
    lpAddress : UInt8*,
    lpPrincipal : UInt8*

  @[Extern]
  record SERVICE_ADDRESSES,
    dwAddressCount : UInt32,
    addresses : Win32cr::Networking::WinSock::SERVICE_ADDRESS*

  @[Extern]
  record SERVICE_INFOA,
    lpServiceType : LibC::GUID*,
    lpServiceName : Win32cr::Foundation::PSTR,
    lpComment : Win32cr::Foundation::PSTR,
    lpLocale : Win32cr::Foundation::PSTR,
    dwDisplayHint : Win32cr::Networking::WinSock::RESOURCE_DISPLAY_TYPE,
    dwVersion : UInt32,
    dwTime : UInt32,
    lpMachineName : Win32cr::Foundation::PSTR,
    lpServiceAddress : Win32cr::Networking::WinSock::SERVICE_ADDRESSES*,
    service_specific_info : Win32cr::System::Com::BLOB

  @[Extern]
  record SERVICE_INFOW,
    lpServiceType : LibC::GUID*,
    lpServiceName : Win32cr::Foundation::PWSTR,
    lpComment : Win32cr::Foundation::PWSTR,
    lpLocale : Win32cr::Foundation::PWSTR,
    dwDisplayHint : Win32cr::Networking::WinSock::RESOURCE_DISPLAY_TYPE,
    dwVersion : UInt32,
    dwTime : UInt32,
    lpMachineName : Win32cr::Foundation::PWSTR,
    lpServiceAddress : Win32cr::Networking::WinSock::SERVICE_ADDRESSES*,
    service_specific_info : Win32cr::System::Com::BLOB

  @[Extern]
  record NS_SERVICE_INFOA,
    dwNameSpace : UInt32,
    service_info : Win32cr::Networking::WinSock::SERVICE_INFOA

  @[Extern]
  record NS_SERVICE_INFOW,
    dwNameSpace : UInt32,
    service_info : Win32cr::Networking::WinSock::SERVICE_INFOW

  @[Extern]
  record PROTOCOL_INFOA,
    dwServiceFlags : UInt32,
    iAddressFamily : Int32,
    iMaxSockAddr : Int32,
    iMinSockAddr : Int32,
    iSocketType : Int32,
    iProtocol : Int32,
    dwMessageSize : UInt32,
    lpProtocol : Win32cr::Foundation::PSTR

  @[Extern]
  record PROTOCOL_INFOW,
    dwServiceFlags : UInt32,
    iAddressFamily : Int32,
    iMaxSockAddr : Int32,
    iMinSockAddr : Int32,
    iSocketType : Int32,
    iProtocol : Int32,
    dwMessageSize : UInt32,
    lpProtocol : Win32cr::Foundation::PWSTR

  @[Extern]
  record NETRESOURCE2A,
    dwScope : UInt32,
    dwType : UInt32,
    dwUsage : UInt32,
    dwDisplayType : UInt32,
    lpLocalName : Win32cr::Foundation::PSTR,
    lpRemoteName : Win32cr::Foundation::PSTR,
    lpComment : Win32cr::Foundation::PSTR,
    ns_info : Win32cr::Networking::WinSock::NS_INFOA,
    service_type : LibC::GUID,
    dwProtocols : UInt32,
    lpiProtocols : Int32*

  @[Extern]
  record NETRESOURCE2W,
    dwScope : UInt32,
    dwType : UInt32,
    dwUsage : UInt32,
    dwDisplayType : UInt32,
    lpLocalName : Win32cr::Foundation::PWSTR,
    lpRemoteName : Win32cr::Foundation::PWSTR,
    lpComment : Win32cr::Foundation::PWSTR,
    ns_info : Win32cr::Networking::WinSock::NS_INFOA,
    service_type : LibC::GUID,
    dwProtocols : UInt32,
    lpiProtocols : Int32*

  @[Extern]
  record SERVICE_ASYNC_INFO,
    lpServiceCallbackProc : Win32cr::Networking::WinSock::LPSERVICE_CALLBACK_PROC,
    lParam : Win32cr::Foundation::LPARAM,
    hAsyncTaskHandle : Win32cr::Foundation::HANDLE

  @[Extern]
  record Sockaddr_un,
    sun_family : UInt16,
    sun_path : Win32cr::Foundation::CHAR[108]

  @[Extern]
  record Sockaddr_ipx,
    sa_family : Int16,
    sa_netnum : Win32cr::Foundation::CHAR[4],
    sa_nodenum : Win32cr::Foundation::CHAR[6],
    sa_socket : UInt16

  @[Extern]
  record Sockaddr_tp,
    tp_family : UInt16,
    tp_addr_type : UInt16,
    tp_taddr_len : UInt16,
    tp_tsel_len : UInt16,
    tp_addr : UInt8[64]

  @[Extern]
  record Sockaddr_nb,
    snb_family : Int16,
    snb_type : UInt16,
    snb_name : Win32cr::Foundation::CHAR[16]

  @[Extern]
  record Sockaddr_vns,
    sin_family : UInt16,
    net_address : UInt8[4],
    subnet_addr : UInt8[2],
    port : UInt8[2],
    hops : UInt8,
    filler : UInt8[5]

  @[Extern(union: true)]
  record DL_OUI,
    byte : UInt8[3],
    anonymous : Anonymous_e__Struct_ do

    # Nested Type Anonymous_e__Struct_
    @[Extern]
    record Anonymous_e__Struct_,
      _bitfield : UInt8

  end

  @[Extern(union: true)]
  record DL_EI48,
    byte : UInt8[3]

  @[Extern(union: true)]
  record DL_EUI48,
    byte : UInt8[6],
    anonymous : Anonymous_e__Struct_ do

    # Nested Type Anonymous_e__Struct_
    @[Extern]
    record Anonymous_e__Struct_,
      oui : Win32cr::Networking::WinSock::DL_OUI,
      ei48 : Win32cr::Networking::WinSock::DL_EI48

  end

  @[Extern(union: true)]
  record DL_EI64,
    byte : UInt8[5]

  @[Extern(union: true)]
  record DL_EUI64,
    byte : UInt8[8],
    value : UInt64,
    anonymous : Anonymous_e__Struct_ do

    # Nested Type Anonymous_e__Struct_
    @[Extern]
    record Anonymous_e__Struct_,
      oui : Win32cr::Networking::WinSock::DL_OUI,
      anonymous : Anonymous_e__Union_ do

      # Nested Type Anonymous_e__Union_
      @[Extern(union: true)]
      record Anonymous_e__Union_,
        ei64 : Win32cr::Networking::WinSock::DL_EI64,
        anonymous : Anonymous_e__Struct_ do

        # Nested Type Anonymous_e__Struct_
        @[Extern]
        record Anonymous_e__Struct_,
          type__ : UInt8,
          tse : UInt8,
          ei48 : Win32cr::Networking::WinSock::DL_EI48

      end

    end

  end

  @[Extern]
  record SNAP_HEADER,
    dsap : UInt8,
    ssap : UInt8,
    control : UInt8,
    oui : UInt8[3],
    type__ : UInt16

  @[Extern]
  record ETHERNET_HEADER,
    destination : Win32cr::Networking::WinSock::DL_EUI48,
    source : Win32cr::Networking::WinSock::DL_EUI48,
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      type__ : UInt16,
      length : UInt16

  end

  @[Extern]
  record VLAN_TAG,
    anonymous : Anonymous_e__Union_,
    type__ : UInt16 do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      tag : UInt16,
      anonymous : Anonymous_e__Struct_ do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        _bitfield : UInt16

    end

  end

  @[Extern]
  record ICMP_HEADER,
    type__ : UInt8,
    code : UInt8,
    checksum : UInt16

  @[Extern]
  record ICMP_MESSAGE,
    header : Win32cr::Networking::WinSock::ICMP_HEADER,
    data : Data_e__Union_ do

    # Nested Type Data_e__Union_
    @[Extern(union: true)]
    record Data_e__Union_,
      data32 : UInt32*,
      data16 : UInt16[2],
      data8 : UInt8[4]

  end

  @[Extern]
  record IPV4_HEADER,
    anonymous1 : Anonymous1_e__Union_,
    anonymous2 : Anonymous2_e__Union_,
    total_length : UInt16,
    identification : UInt16,
    anonymous3 : Anonymous3_e__Union_,
    time_to_live : UInt8,
    protocol : UInt8,
    header_checksum : UInt16,
    source_address : Win32cr::Networking::WinSock::IN_ADDR,
    destination_address : Win32cr::Networking::WinSock::IN_ADDR do

    # Nested Type Anonymous3_e__Union_
    @[Extern(union: true)]
    record Anonymous3_e__Union_,
      flags_and_offset : UInt16,
      anonymous : Anonymous_e__Struct_ do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        _bitfield : UInt16

    end


    # Nested Type Anonymous2_e__Union_
    @[Extern(union: true)]
    record Anonymous2_e__Union_,
      type_of_service_and_ecn_field : UInt8,
      anonymous : Anonymous_e__Struct_ do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        _bitfield : UInt8

    end


    # Nested Type Anonymous1_e__Union_
    @[Extern(union: true)]
    record Anonymous1_e__Union_,
      version_and_header_length : UInt8,
      anonymous : Anonymous_e__Struct_ do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        _bitfield : UInt8

    end

  end

  @[Extern]
  record IPV4_OPTION_HEADER,
    anonymous : Anonymous_e__Union_,
    option_length : UInt8 do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      option_type : UInt8,
      anonymous : Anonymous_e__Struct_ do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        _bitfield : UInt8

    end

  end

  @[Extern]
  record IPV4_TIMESTAMP_OPTION,
    option_header : Win32cr::Networking::WinSock::IPV4_OPTION_HEADER,
    pointer : UInt8,
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      flags_overflow : UInt8,
      anonymous : Anonymous_e__Struct_ do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        _bitfield : UInt8

    end

  end

  @[Extern]
  record IPV4_ROUTING_HEADER,
    option_header : Win32cr::Networking::WinSock::IPV4_OPTION_HEADER,
    pointer : UInt8

  @[Extern]
  record ICMPV4_ROUTER_SOLICIT,
    rs_header : Win32cr::Networking::WinSock::ICMP_MESSAGE

  @[Extern]
  record ICMPV4_ROUTER_ADVERT_HEADER,
    ra_header : Win32cr::Networking::WinSock::ICMP_MESSAGE

  @[Extern]
  record ICMPV4_ROUTER_ADVERT_ENTRY,
    router_advert_addr : Win32cr::Networking::WinSock::IN_ADDR,
    preference_level : Int32

  @[Extern]
  record ICMPV4_TIMESTAMP_MESSAGE,
    header : Win32cr::Networking::WinSock::ICMP_MESSAGE,
    originate_timestamp : UInt32,
    receive_timestamp : UInt32,
    transmit_timestamp : UInt32

  @[Extern]
  record ICMPV4_ADDRESS_MASK_MESSAGE,
    header : Win32cr::Networking::WinSock::ICMP_MESSAGE,
    address_mask : UInt32

  @[Extern]
  record ARP_HEADER,
    hardware_address_space : UInt16,
    protocol_address_space : UInt16,
    hardware_address_length : UInt8,
    protocol_address_length : UInt8,
    opcode : UInt16,
    sender_hardware_address : UInt8*

  @[Extern]
  record IGMP_HEADER,
    anonymous1 : Anonymous1_e__Union_,
    anonymous2 : Anonymous2_e__Union_,
    checksum : UInt16,
    multicast_address : Win32cr::Networking::WinSock::IN_ADDR do

    # Nested Type Anonymous1_e__Union_
    @[Extern(union: true)]
    record Anonymous1_e__Union_,
      anonymous : Anonymous_e__Struct_,
      version_type : UInt8 do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        _bitfield : UInt8

    end


    # Nested Type Anonymous2_e__Union_
    @[Extern(union: true)]
    record Anonymous2_e__Union_,
      reserved : UInt8,
      max_resp_time : UInt8,
      code : UInt8

  end

  @[Extern]
  record IGMPV3_QUERY_HEADER,
    type__ : UInt8,
    anonymous1 : Anonymous1_e__Union_,
    checksum : UInt16,
    multicast_address : Win32cr::Networking::WinSock::IN_ADDR,
    _bitfield : UInt8,
    anonymous2 : Anonymous2_e__Union_,
    source_count : UInt16 do

    # Nested Type Anonymous2_e__Union_
    @[Extern(union: true)]
    record Anonymous2_e__Union_,
      queriers_query_interface_code : UInt8,
      anonymous : Anonymous_e__Struct_ do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        _bitfield : UInt8

    end


    # Nested Type Anonymous1_e__Union_
    @[Extern(union: true)]
    record Anonymous1_e__Union_,
      max_resp_code : UInt8,
      anonymous : Anonymous_e__Struct_ do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        _bitfield : UInt8

    end

  end

  @[Extern]
  record IGMPV3_REPORT_RECORD_HEADER,
    type__ : UInt8,
    auxillary_data_length : UInt8,
    source_count : UInt16,
    multicast_address : Win32cr::Networking::WinSock::IN_ADDR

  @[Extern]
  record IGMPV3_REPORT_HEADER,
    type__ : UInt8,
    reserved : UInt8,
    checksum : UInt16,
    reserved2 : UInt16,
    record_count : UInt16

  @[Extern]
  record IPV6_HEADER,
    anonymous : Anonymous_e__Union_,
    payload_length : UInt16,
    next_header : UInt8,
    hop_limit : UInt8,
    source_address : Win32cr::Networking::WinSock::IN6_ADDR,
    destination_address : Win32cr::Networking::WinSock::IN6_ADDR do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      version_class_flow : UInt32,
      anonymous : Anonymous_e__Struct_ do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        _bitfield : UInt32

    end

  end

  @[Extern]
  record IPV6_FRAGMENT_HEADER,
    next_header : UInt8,
    reserved : UInt8,
    anonymous : Anonymous_e__Union_,
    id : UInt32 do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      anonymous : Anonymous_e__Struct_,
      offset_and_flags : UInt16 do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        _bitfield : UInt16

    end

  end

  @[Extern]
  record IPV6_EXTENSION_HEADER,
    next_header : UInt8,
    length : UInt8

  @[Extern]
  record IPV6_OPTION_HEADER,
    type__ : UInt8,
    data_length : UInt8

  @[Extern]
  record IPV6_OPTION_JUMBOGRAM,
    header : Win32cr::Networking::WinSock::IPV6_OPTION_HEADER,
    jumbogram_length : UInt8[4]

  @[Extern]
  record IPV6_OPTION_ROUTER_ALERT,
    header : Win32cr::Networking::WinSock::IPV6_OPTION_HEADER,
    value : UInt8[2]

  @[Extern]
  record IPV6_ROUTING_HEADER,
    next_header : UInt8,
    length : UInt8,
    routing_type : UInt8,
    segments_left : UInt8,
    reserved : UInt8[4]

  @[Extern]
  record Nd_router_solicit,
    nd_rs_hdr : Win32cr::Networking::WinSock::ICMP_MESSAGE

  @[Extern]
  record Nd_router_advert,
    nd_ra_hdr : Win32cr::Networking::WinSock::ICMP_MESSAGE,
    nd_ra_reachable : UInt32,
    nd_ra_retransmit : UInt32

  @[Extern(union: true)]
  record IPV6_ROUTER_ADVERTISEMENT_FLAGS,
    anonymous : Anonymous_e__Struct_,
    value : UInt8 do

    # Nested Type Anonymous_e__Struct_
    @[Extern]
    record Anonymous_e__Struct_,
      _bitfield : UInt8

  end

  @[Extern]
  record Nd_neighbor_solicit,
    nd_ns_hdr : Win32cr::Networking::WinSock::ICMP_MESSAGE,
    nd_ns_target : Win32cr::Networking::WinSock::IN6_ADDR

  @[Extern]
  record Nd_neighbor_advert,
    nd_na_hdr : Win32cr::Networking::WinSock::ICMP_MESSAGE,
    nd_na_target : Win32cr::Networking::WinSock::IN6_ADDR

  @[Extern(union: true)]
  record IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS,
    anonymous : Anonymous_e__Struct_,
    value : UInt32 do

    # Nested Type Anonymous_e__Struct_
    @[Extern]
    record Anonymous_e__Struct_,
      _bitfield : UInt8,
      reserved2 : UInt8[3]

  end

  @[Extern]
  record Nd_redirect,
    nd_rd_hdr : Win32cr::Networking::WinSock::ICMP_MESSAGE,
    nd_rd_target : Win32cr::Networking::WinSock::IN6_ADDR,
    nd_rd_dst : Win32cr::Networking::WinSock::IN6_ADDR

  @[Extern]
  record Nd_opt_hdr,
    nd_opt_type : UInt8,
    nd_opt_len : UInt8

  @[Extern]
  record Nd_opt_prefix_info,
    nd_opt_pi_type : UInt8,
    nd_opt_pi_len : UInt8,
    nd_opt_pi_prefix_len : UInt8,
    anonymous1 : Anonymous1_e__Union_,
    nd_opt_pi_valid_time : UInt32,
    nd_opt_pi_preferred_time : UInt32,
    anonymous2 : Anonymous2_e__Union_,
    nd_opt_pi_prefix : Win32cr::Networking::WinSock::IN6_ADDR do

    # Nested Type Anonymous2_e__Union_
    @[Extern(union: true)]
    record Anonymous2_e__Union_,
      nd_opt_pi_reserved2 : UInt32,
      anonymous : Anonymous_e__Struct_ do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        nd_opt_pi_reserved3 : UInt8[3],
        nd_opt_pi_site_prefix_len : UInt8

    end


    # Nested Type Anonymous1_e__Union_
    @[Extern(union: true)]
    record Anonymous1_e__Union_,
      nd_opt_pi_flags_reserved : UInt8,
      flags : Flags_e__Struct_ do

      # Nested Type Flags_e__Struct_
      @[Extern]
      record Flags_e__Struct_,
        _bitfield : UInt8

    end

  end

  @[Extern]
  record Nd_opt_rd_hdr,
    nd_opt_rh_type : UInt8,
    nd_opt_rh_len : UInt8,
    nd_opt_rh_reserved1 : UInt16,
    nd_opt_rh_reserved2 : UInt32

  @[Extern]
  record Nd_opt_mtu,
    nd_opt_mtu_type : UInt8,
    nd_opt_mtu_len : UInt8,
    nd_opt_mtu_reserved : UInt16,
    nd_opt_mtu_mtu : UInt32

  @[Extern]
  record Nd_opt_route_info,
    nd_opt_ri_type : UInt8,
    nd_opt_ri_len : UInt8,
    nd_opt_ri_prefix_len : UInt8,
    anonymous : Anonymous_e__Union_,
    nd_opt_ri_route_lifetime : UInt32,
    nd_opt_ri_prefix : Win32cr::Networking::WinSock::IN6_ADDR do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      nd_opt_ri_flags_reserved : UInt8,
      flags : Flags_e__Struct_ do

      # Nested Type Flags_e__Struct_
      @[Extern]
      record Flags_e__Struct_,
        _bitfield : UInt8

    end

  end

  @[Extern]
  record Nd_opt_rdnss,
    nd_opt_rdnss_type : UInt8,
    nd_opt_rdnss_len : UInt8,
    nd_opt_rdnss_reserved : UInt16,
    nd_opt_rdnss_lifetime : UInt32

  @[Extern]
  record Nd_opt_dnssl,
    nd_opt_dnssl_type : UInt8,
    nd_opt_dnssl_len : UInt8,
    nd_opt_dnssl_reserved : UInt16,
    nd_opt_dnssl_lifetime : UInt32

  @[Extern]
  record MLD_HEADER,
    icmp_header : Win32cr::Networking::WinSock::ICMP_HEADER,
    max_resp_time : UInt16,
    reserved : UInt16,
    multicast_address : Win32cr::Networking::WinSock::IN6_ADDR

  @[Extern]
  record MLDV2_QUERY_HEADER,
    icmp_header : Win32cr::Networking::WinSock::ICMP_HEADER,
    anonymous1 : Anonymous1_e__Union_,
    reserved : UInt16,
    multicast_address : Win32cr::Networking::WinSock::IN6_ADDR,
    _bitfield : UInt8,
    anonymous2 : Anonymous2_e__Union_,
    source_count : UInt16 do

    # Nested Type Anonymous2_e__Union_
    @[Extern(union: true)]
    record Anonymous2_e__Union_,
      queriers_query_interface_code : UInt8,
      anonymous : Anonymous_e__Struct_ do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        _bitfield : UInt8

    end


    # Nested Type Anonymous1_e__Union_
    @[Extern(union: true)]
    record Anonymous1_e__Union_,
      max_resp_code : UInt16,
      anonymous : Anonymous_e__Struct_ do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        _bitfield : UInt16

    end

  end

  @[Extern]
  record MLDV2_REPORT_RECORD_HEADER,
    type__ : UInt8,
    auxillary_data_length : UInt8,
    source_count : UInt16,
    multicast_address : Win32cr::Networking::WinSock::IN6_ADDR

  @[Extern]
  record MLDV2_REPORT_HEADER,
    icmp_header : Win32cr::Networking::WinSock::ICMP_HEADER,
    reserved : UInt16,
    record_count : UInt16

  @[Extern]
  record Tcp_hdr,
    th_sport : UInt16,
    th_dport : UInt16,
    th_seq : UInt32,
    th_ack : UInt32,
    _bitfield : UInt8,
    th_flags : UInt8,
    th_win : UInt16,
    th_sum : UInt16,
    th_urp : UInt16

  @[Extern]
  record Tcp_opt_mss,
    kind : UInt8,
    length : UInt8,
    mss : UInt16

  @[Extern]
  record Tcp_opt_ws,
    kind : UInt8,
    length : UInt8,
    shift_cnt : UInt8

  @[Extern]
  record Tcp_opt_sack_permitted,
    kind : UInt8,
    length : UInt8

  @[Extern]
  record Tcp_opt_sack,
    kind : UInt8,
    length : UInt8,
    block : Tcp_opt_sack_block* do

    # Nested Type Tcp_opt_sack_block
    @[Extern]
    record Tcp_opt_sack_block,
      left : UInt32,
      right : UInt32

  end

  @[Extern]
  record Tcp_opt_ts,
    kind : UInt8,
    length : UInt8,
    val : UInt32,
    ec_r : UInt32

  @[Extern]
  record Tcp_opt_unknown,
    kind : UInt8,
    length : UInt8

  @[Extern]
  record Tcp_opt_fastopen,
    kind : UInt8,
    length : UInt8,
    cookie : UInt8*

  @[Extern]
  record DL_TUNNEL_ADDRESS,
    compartment_id : Win32cr::System::Kernel::COMPARTMENT_ID,
    scope_id : Win32cr::Networking::WinSock::SCOPE_ID,
    ip_address : UInt8*

  @[Extern]
  record DL_TEREDO_ADDRESS,
    reserved : UInt8[6],
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      eui64 : Win32cr::Networking::WinSock::DL_EUI64,
      anonymous : Anonymous_e__Struct_ do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        flags : UInt16,
        mapped_port : UInt16,
        mapped_address : Win32cr::Networking::WinSock::IN_ADDR

    end

  end

  @[Extern]
  record DL_TEREDO_ADDRESS_PRV,
    reserved : UInt8[6],
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      eui64 : Win32cr::Networking::WinSock::DL_EUI64,
      anonymous : Anonymous_e__Struct_ do

      # Nested Type Anonymous_e__Struct_
      @[Extern]
      record Anonymous_e__Struct_,
        flags : UInt16,
        mapped_port : UInt16,
        mapped_address : Win32cr::Networking::WinSock::IN_ADDR,
        local_address : Win32cr::Networking::WinSock::IN_ADDR,
        interface_index : UInt32,
        local_port : UInt16,
        dl_destination : Win32cr::Networking::WinSock::DL_EUI48

    end

  end

  @[Extern]
  record IPTLS_METADATA,
    sequence_number : UInt64

  @[Extern]
  record NPI_MODULEID,
    length : UInt16,
    type__ : Win32cr::Networking::WinSock::NPI_MODULEID_TYPE,
    anonymous : Anonymous_e__Union_ do

    # Nested Type Anonymous_e__Union_
    @[Extern(union: true)]
    record Anonymous_e__Union_,
      guid : LibC::GUID,
      if_luid : Win32cr::Foundation::LUID

  end

  {% if flag?(:i386) %}
  @[Extern]
  record Servent,
    s_name : Win32cr::Foundation::PSTR,
    s_aliases : Int8**,
    s_port : Int16,
    s_proto : Win32cr::Foundation::PSTR
  {% end %}

  {% if flag?(:i386) %}
  @[Extern]
  record WSAData,
    wVersion : UInt16,
    wHighVersion : UInt16,
    szDescription : Win32cr::Foundation::CHAR[257],
    szSystemStatus : Win32cr::Foundation::CHAR[129],
    iMaxSockets : UInt16,
    iMaxUdpDg : UInt16,
    lpVendorInfo : Win32cr::Foundation::PSTR
  {% end %}

  @[Link("ws2_32")]
  @[Link("ntdll")]
  @[Link("mswsock")]
  @[Link("fwpuclnt")]
  @[Link("windows.networking")]
  lib C
    fun __WSAFDIsSet(fd : Win32cr::Networking::WinSock::SOCKET, param1 : Win32cr::Networking::WinSock::Fd_set*) : Int32

    # Commented out due to being part of LibC
    #fun accept(s : Win32cr::Networking::WinSock::SOCKET, addr : Win32cr::Networking::WinSock::SOCKADDR*, addrlen : Int32*) : Win32cr::Networking::WinSock::SOCKET

    # Commented out due to being part of LibC
    #fun bind(s : Win32cr::Networking::WinSock::SOCKET, name : Win32cr::Networking::WinSock::SOCKADDR*, namelen : Int32) : Int32

    # Commented out due to being part of LibC
    #fun closesocket(s : Win32cr::Networking::WinSock::SOCKET) : Int32

    # Commented out due to being part of LibC
    #fun connect(s : Win32cr::Networking::WinSock::SOCKET, name : Win32cr::Networking::WinSock::SOCKADDR*, namelen : Int32) : Int32

    # Commented out due to being part of LibC
    #fun ioctlsocket(s : Win32cr::Networking::WinSock::SOCKET, cmd : Int32, argp : UInt32*) : Int32

    # Commented out due to being part of LibC
    #fun getpeername(s : Win32cr::Networking::WinSock::SOCKET, name : Win32cr::Networking::WinSock::SOCKADDR*, namelen : Int32*) : Int32

    # Commented out due to being part of LibC
    #fun getsockname(s : Win32cr::Networking::WinSock::SOCKET, name : Win32cr::Networking::WinSock::SOCKADDR*, namelen : Int32*) : Int32

    # Commented out due to being part of LibC
    #fun getsockopt(s : Win32cr::Networking::WinSock::SOCKET, level : Int32, optname : Int32, optval : Win32cr::Foundation::PSTR, optlen : Int32*) : Int32

    fun htonl(hostlong : UInt32) : UInt32

    # Commented out due to being part of LibC
    #fun htons(hostshort : UInt16) : UInt16

    fun inet_addr(cp : Win32cr::Foundation::PSTR) : UInt32

    fun inet_ntoa(in__ : Win32cr::Networking::WinSock::IN_ADDR) : Win32cr::Foundation::PSTR

    # Commented out due to being part of LibC
    #fun listen(s : Win32cr::Networking::WinSock::SOCKET, backlog : Int32) : Int32

    fun ntohl(netlong : UInt32) : UInt32

    # Commented out due to being part of LibC
    #fun ntohs(netshort : UInt16) : UInt16

    # Commented out due to being part of LibC
    #fun recv(s : Win32cr::Networking::WinSock::SOCKET, buf : Win32cr::Foundation::PSTR, len : Int32, flags : Win32cr::Networking::WinSock::SEND_RECV_FLAGS) : Int32

    # Commented out due to being part of LibC
    #fun recvfrom(s : Win32cr::Networking::WinSock::SOCKET, buf : Win32cr::Foundation::PSTR, len : Int32, flags : Int32, from : Win32cr::Networking::WinSock::SOCKADDR*, fromlen : Int32*) : Int32

    fun select(nfds : Int32, readfds : Win32cr::Networking::WinSock::Fd_set*, writefds : Win32cr::Networking::WinSock::Fd_set*, exceptfds : Win32cr::Networking::WinSock::Fd_set*, timeout : Win32cr::Networking::WinSock::Timeval*) : Int32

    # Commented out due to being part of LibC
    #fun send(s : Win32cr::Networking::WinSock::SOCKET, buf : Win32cr::Foundation::PSTR, len : Int32, flags : Win32cr::Networking::WinSock::SEND_RECV_FLAGS) : Int32

    fun sendto(s : Win32cr::Networking::WinSock::SOCKET, buf : Win32cr::Foundation::PSTR, len : Int32, flags : Int32, to : Win32cr::Networking::WinSock::SOCKADDR*, tolen : Int32) : Int32

    # Commented out due to being part of LibC
    #fun setsockopt(s : Win32cr::Networking::WinSock::SOCKET, level : Int32, optname : Int32, optval : Win32cr::Foundation::PSTR, optlen : Int32) : Int32

    # Commented out due to being part of LibC
    #fun shutdown(s : Win32cr::Networking::WinSock::SOCKET, how : Int32) : Int32

    # Commented out due to being part of LibC
    #fun socket(af : Int32, type__ : Int32, protocol : Int32) : Win32cr::Networking::WinSock::SOCKET

    fun gethostbyaddr(addr : Win32cr::Foundation::PSTR, len : Int32, type__ : Int32) : Win32cr::Networking::WinSock::Hostent*

    fun gethostbyname(name : Win32cr::Foundation::PSTR) : Win32cr::Networking::WinSock::Hostent*

    fun gethostname(name : Win32cr::Foundation::PSTR, namelen : Int32) : Int32

    fun GetHostNameW(name : UInt16*, namelen : Int32) : Int32

    fun getservbyport(port : Int32, proto : Win32cr::Foundation::PSTR) : Win32cr::Networking::WinSock::Servent*

    fun getservbyname(name : Win32cr::Foundation::PSTR, proto : Win32cr::Foundation::PSTR) : Win32cr::Networking::WinSock::Servent*

    fun getprotobynumber(number : Int32) : Win32cr::Networking::WinSock::Protoent*

    fun getprotobyname(name : Win32cr::Foundation::PSTR) : Win32cr::Networking::WinSock::Protoent*

    # Commented out due to being part of LibC
    #fun WSAStartup(wVersionRequested : UInt16, lpWSAData : Win32cr::Networking::WinSock::WSAData*) : Int32

    # Commented out due to being part of LibC
    #fun WSACleanup : Int32

    # Commented out due to being part of LibC
    #fun WSASetLastError(iError : Int32) : Void

    # Commented out due to being part of LibC
    #fun WSAGetLastError : Win32cr::Networking::WinSock::WSA_ERROR

    fun WSAIsBlocking : Win32cr::Foundation::BOOL

    fun WSAUnhookBlockingHook : Int32

    fun WSASetBlockingHook(lpBlockFunc : Win32cr::Foundation::FARPROC) : Win32cr::Foundation::FARPROC

    fun WSACancelBlockingCall : Int32

    fun WSAAsyncGetServByName(hWnd : Win32cr::Foundation::HWND, wMsg : UInt32, name : Win32cr::Foundation::PSTR, proto : Win32cr::Foundation::PSTR, buf : Win32cr::Foundation::PSTR, buflen : Int32) : Win32cr::Foundation::HANDLE

    fun WSAAsyncGetServByPort(hWnd : Win32cr::Foundation::HWND, wMsg : UInt32, port : Int32, proto : Win32cr::Foundation::PSTR, buf : Win32cr::Foundation::PSTR, buflen : Int32) : Win32cr::Foundation::HANDLE

    fun WSAAsyncGetProtoByName(hWnd : Win32cr::Foundation::HWND, wMsg : UInt32, name : Win32cr::Foundation::PSTR, buf : Win32cr::Foundation::PSTR, buflen : Int32) : Win32cr::Foundation::HANDLE

    fun WSAAsyncGetProtoByNumber(hWnd : Win32cr::Foundation::HWND, wMsg : UInt32, number : Int32, buf : Win32cr::Foundation::PSTR, buflen : Int32) : Win32cr::Foundation::HANDLE

    fun WSAAsyncGetHostByName(hWnd : Win32cr::Foundation::HWND, wMsg : UInt32, name : Win32cr::Foundation::PSTR, buf : Win32cr::Foundation::PSTR, buflen : Int32) : Win32cr::Foundation::HANDLE

    fun WSAAsyncGetHostByAddr(hWnd : Win32cr::Foundation::HWND, wMsg : UInt32, addr : Win32cr::Foundation::PSTR, len : Int32, type__ : Int32, buf : Win32cr::Foundation::PSTR, buflen : Int32) : Win32cr::Foundation::HANDLE

    fun WSACancelAsyncRequest(hAsyncTaskHandle : Win32cr::Foundation::HANDLE) : Int32

    fun WSAAsyncSelect(s : Win32cr::Networking::WinSock::SOCKET, hWnd : Win32cr::Foundation::HWND, wMsg : UInt32, lEvent : Int32) : Int32

    # Commented out due to being part of LibC
    #fun WSAAccept(s : Win32cr::Networking::WinSock::SOCKET, addr : Win32cr::Networking::WinSock::SOCKADDR*, addrlen : Int32*, lpfnCondition : Win32cr::Networking::WinSock::LPCONDITIONPROC, dwCallbackData : LibC::UIntPtrT) : Win32cr::Networking::WinSock::SOCKET

    fun WSACloseEvent(hEvent : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun WSAConnect(s : Win32cr::Networking::WinSock::SOCKET, name : Win32cr::Networking::WinSock::SOCKADDR*, namelen : Int32, lpCallerData : Win32cr::Networking::WinSock::WSABUF*, lpCalleeData : Win32cr::Networking::WinSock::WSABUF*, lpSQOS : Win32cr::Networking::WinSock::QOS*, lpGQOS : Win32cr::Networking::WinSock::QOS*) : Int32

    fun WSAConnectByNameW(s : Win32cr::Networking::WinSock::SOCKET, nodename : Win32cr::Foundation::PWSTR, servicename : Win32cr::Foundation::PWSTR, local_address_length : UInt32*, local_address : Win32cr::Networking::WinSock::SOCKADDR*, remote_address_length : UInt32*, remote_address : Win32cr::Networking::WinSock::SOCKADDR*, timeout : Win32cr::Networking::WinSock::Timeval*, reserved : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun WSAConnectByNameA(s : Win32cr::Networking::WinSock::SOCKET, nodename : Win32cr::Foundation::PSTR, servicename : Win32cr::Foundation::PSTR, local_address_length : UInt32*, local_address : Win32cr::Networking::WinSock::SOCKADDR*, remote_address_length : UInt32*, remote_address : Win32cr::Networking::WinSock::SOCKADDR*, timeout : Win32cr::Networking::WinSock::Timeval*, reserved : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun WSAConnectByList(s : Win32cr::Networking::WinSock::SOCKET, socket_address : Win32cr::Networking::WinSock::SOCKET_ADDRESS_LIST*, local_address_length : UInt32*, local_address : Win32cr::Networking::WinSock::SOCKADDR*, remote_address_length : UInt32*, remote_address : Win32cr::Networking::WinSock::SOCKADDR*, timeout : Win32cr::Networking::WinSock::Timeval*, reserved : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun WSACreateEvent : Win32cr::Foundation::HANDLE

    fun WSADuplicateSocketA(s : Win32cr::Networking::WinSock::SOCKET, dwProcessId : UInt32, lpProtocolInfo : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOA*) : Int32

    fun WSADuplicateSocketW(s : Win32cr::Networking::WinSock::SOCKET, dwProcessId : UInt32, lpProtocolInfo : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*) : Int32

    fun WSAEnumNetworkEvents(s : Win32cr::Networking::WinSock::SOCKET, hEventObject : Win32cr::Foundation::HANDLE, lpNetworkEvents : Win32cr::Networking::WinSock::WSANETWORKEVENTS*) : Int32

    fun WSAEnumProtocolsA(lpiProtocols : Int32*, lpProtocolBuffer : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOA*, lpdwBufferLength : UInt32*) : Int32

    fun WSAEnumProtocolsW(lpiProtocols : Int32*, lpProtocolBuffer : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, lpdwBufferLength : UInt32*) : Int32

    # Commented out due to being part of LibC
    #fun WSAEventSelect(s : Win32cr::Networking::WinSock::SOCKET, hEventObject : Win32cr::Foundation::HANDLE, lNetworkEvents : Int32) : Int32

    # Commented out due to being part of LibC
    #fun WSAGetOverlappedResult(s : Win32cr::Networking::WinSock::SOCKET, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpcbTransfer : UInt32*, fWait : Win32cr::Foundation::BOOL, lpdwFlags : UInt32*) : Win32cr::Foundation::BOOL

    fun WSAGetQOSByName(s : Win32cr::Networking::WinSock::SOCKET, lpQOSName : Win32cr::Networking::WinSock::WSABUF*, lpQOS : Win32cr::Networking::WinSock::QOS*) : Win32cr::Foundation::BOOL

    fun WSAHtonl(s : Win32cr::Networking::WinSock::SOCKET, hostlong : UInt32, lpnetlong : UInt32*) : Int32

    fun WSAHtons(s : Win32cr::Networking::WinSock::SOCKET, hostshort : UInt16, lpnetshort : UInt16*) : Int32

    # Commented out due to being part of LibC
    #fun WSAIoctl(s : Win32cr::Networking::WinSock::SOCKET, dwIoControlCode : UInt32, lpvInBuffer : Void*, cbInBuffer : UInt32, lpvOutBuffer : Void*, cbOutBuffer : UInt32, lpcbBytesReturned : UInt32*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpCompletionRoutine : Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE) : Int32

    fun WSAJoinLeaf(s : Win32cr::Networking::WinSock::SOCKET, name : Win32cr::Networking::WinSock::SOCKADDR*, namelen : Int32, lpCallerData : Win32cr::Networking::WinSock::WSABUF*, lpCalleeData : Win32cr::Networking::WinSock::WSABUF*, lpSQOS : Win32cr::Networking::WinSock::QOS*, lpGQOS : Win32cr::Networking::WinSock::QOS*, dwFlags : UInt32) : Win32cr::Networking::WinSock::SOCKET

    fun WSANtohl(s : Win32cr::Networking::WinSock::SOCKET, netlong : UInt32, lphostlong : UInt32*) : Int32

    fun WSANtohs(s : Win32cr::Networking::WinSock::SOCKET, netshort : UInt16, lphostshort : UInt16*) : Int32

    # Commented out due to being part of LibC
    #fun WSARecv(s : Win32cr::Networking::WinSock::SOCKET, lpBuffers : Win32cr::Networking::WinSock::WSABUF*, dwBufferCount : UInt32, lpNumberOfBytesRecvd : UInt32*, lpFlags : UInt32*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpCompletionRoutine : Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE) : Int32

    fun WSARecvDisconnect(s : Win32cr::Networking::WinSock::SOCKET, lpInboundDisconnectData : Win32cr::Networking::WinSock::WSABUF*) : Int32

    # Commented out due to being part of LibC
    #fun WSARecvFrom(s : Win32cr::Networking::WinSock::SOCKET, lpBuffers : Win32cr::Networking::WinSock::WSABUF*, dwBufferCount : UInt32, lpNumberOfBytesRecvd : UInt32*, lpFlags : UInt32*, lpFrom : Win32cr::Networking::WinSock::SOCKADDR*, lpFromlen : Int32*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpCompletionRoutine : Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE) : Int32

    # Commented out due to being part of LibC
    #fun WSAResetEvent(hEvent : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    # Commented out due to being part of LibC
    #fun WSASend(s : Win32cr::Networking::WinSock::SOCKET, lpBuffers : Win32cr::Networking::WinSock::WSABUF*, dwBufferCount : UInt32, lpNumberOfBytesSent : UInt32*, dwFlags : UInt32, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpCompletionRoutine : Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE) : Int32

    fun WSASendMsg(handle : Win32cr::Networking::WinSock::SOCKET, lpMsg : Win32cr::Networking::WinSock::WSAMSG*, dwFlags : UInt32, lpNumberOfBytesSent : UInt32*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpCompletionRoutine : Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE) : Int32

    fun WSASendDisconnect(s : Win32cr::Networking::WinSock::SOCKET, lpOutboundDisconnectData : Win32cr::Networking::WinSock::WSABUF*) : Int32

    # Commented out due to being part of LibC
    #fun WSASendTo(s : Win32cr::Networking::WinSock::SOCKET, lpBuffers : Win32cr::Networking::WinSock::WSABUF*, dwBufferCount : UInt32, lpNumberOfBytesSent : UInt32*, dwFlags : UInt32, lpTo : Win32cr::Networking::WinSock::SOCKADDR*, iTolen : Int32, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpCompletionRoutine : Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE) : Int32

    fun WSASetEvent(hEvent : Win32cr::Foundation::HANDLE) : Win32cr::Foundation::BOOL

    fun WSASocketA(af : Int32, type__ : Int32, protocol : Int32, lpProtocolInfo : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOA*, g : UInt32, dwFlags : UInt32) : Win32cr::Networking::WinSock::SOCKET

    # Commented out due to being part of LibC
    #fun WSASocketW(af : Int32, type__ : Int32, protocol : Int32, lpProtocolInfo : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, g : UInt32, dwFlags : UInt32) : Win32cr::Networking::WinSock::SOCKET

    # Commented out due to being part of LibC
    #fun WSAWaitForMultipleEvents(cEvents : UInt32, lphEvents : Win32cr::Foundation::HANDLE*, fWaitAll : Win32cr::Foundation::BOOL, dwTimeout : UInt32, fAlertable : Win32cr::Foundation::BOOL) : UInt32

    fun WSAAddressToStringA(lpsaAddress : Win32cr::Networking::WinSock::SOCKADDR*, dwAddressLength : UInt32, lpProtocolInfo : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOA*, lpszAddressString : UInt8*, lpdwAddressStringLength : UInt32*) : Int32

    fun WSAAddressToStringW(lpsaAddress : Win32cr::Networking::WinSock::SOCKADDR*, dwAddressLength : UInt32, lpProtocolInfo : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, lpszAddressString : UInt16*, lpdwAddressStringLength : UInt32*) : Int32

    fun WSAStringToAddressA(address_string : Win32cr::Foundation::PSTR, address_family : Int32, lpProtocolInfo : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOA*, lpAddress : Win32cr::Networking::WinSock::SOCKADDR*, lpAddressLength : Int32*) : Int32

    fun WSAStringToAddressW(address_string : Win32cr::Foundation::PWSTR, address_family : Int32, lpProtocolInfo : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, lpAddress : Win32cr::Networking::WinSock::SOCKADDR*, lpAddressLength : Int32*) : Int32

    fun WSALookupServiceBeginA(lpqsRestrictions : Win32cr::Networking::WinSock::WSAQUERYSETA*, dwControlFlags : UInt32, lphLookup : Win32cr::Foundation::HANDLE*) : Int32

    fun WSALookupServiceBeginW(lpqsRestrictions : Win32cr::Networking::WinSock::WSAQUERYSETW*, dwControlFlags : UInt32, lphLookup : Win32cr::Foundation::HANDLE*) : Int32

    fun WSALookupServiceNextA(hLookup : Win32cr::Foundation::HANDLE, dwControlFlags : UInt32, lpdwBufferLength : UInt32*, lpqsResults : Win32cr::Networking::WinSock::WSAQUERYSETA*) : Int32

    fun WSALookupServiceNextW(hLookup : Win32cr::Foundation::HANDLE, dwControlFlags : UInt32, lpdwBufferLength : UInt32*, lpqsResults : Win32cr::Networking::WinSock::WSAQUERYSETW*) : Int32

    fun WSANSPIoctl(hLookup : Win32cr::Foundation::HANDLE, dwControlCode : UInt32, lpvInBuffer : Void*, cbInBuffer : UInt32, lpvOutBuffer : Void*, cbOutBuffer : UInt32, lpcbBytesReturned : UInt32*, lpCompletion : Win32cr::Networking::WinSock::WSACOMPLETION*) : Int32

    fun WSALookupServiceEnd(hLookup : Win32cr::Foundation::HANDLE) : Int32

    fun WSAInstallServiceClassA(lpServiceClassInfo : Win32cr::Networking::WinSock::WSASERVICECLASSINFOA*) : Int32

    fun WSAInstallServiceClassW(lpServiceClassInfo : Win32cr::Networking::WinSock::WSASERVICECLASSINFOW*) : Int32

    fun WSARemoveServiceClass(lpServiceClassId : LibC::GUID*) : Int32

    fun WSAGetServiceClassInfoA(lpProviderId : LibC::GUID*, lpServiceClassId : LibC::GUID*, lpdwBufSize : UInt32*, lpServiceClassInfo : Win32cr::Networking::WinSock::WSASERVICECLASSINFOA*) : Int32

    fun WSAGetServiceClassInfoW(lpProviderId : LibC::GUID*, lpServiceClassId : LibC::GUID*, lpdwBufSize : UInt32*, lpServiceClassInfo : Win32cr::Networking::WinSock::WSASERVICECLASSINFOW*) : Int32

    fun WSAEnumNameSpaceProvidersA(lpdwBufferLength : UInt32*, lpnspBuffer : Win32cr::Networking::WinSock::WSANAMESPACE_INFOA*) : Int32

    fun WSAEnumNameSpaceProvidersW(lpdwBufferLength : UInt32*, lpnspBuffer : Win32cr::Networking::WinSock::WSANAMESPACE_INFOW*) : Int32

    fun WSAEnumNameSpaceProvidersExA(lpdwBufferLength : UInt32*, lpnspBuffer : Win32cr::Networking::WinSock::WSANAMESPACE_INFOEXA*) : Int32

    fun WSAEnumNameSpaceProvidersExW(lpdwBufferLength : UInt32*, lpnspBuffer : Win32cr::Networking::WinSock::WSANAMESPACE_INFOEXW*) : Int32

    fun WSAGetServiceClassNameByClassIdA(lpServiceClassId : LibC::GUID*, lpszServiceClassName : Win32cr::Foundation::PSTR, lpdwBufferLength : UInt32*) : Int32

    fun WSAGetServiceClassNameByClassIdW(lpServiceClassId : LibC::GUID*, lpszServiceClassName : Win32cr::Foundation::PWSTR, lpdwBufferLength : UInt32*) : Int32

    fun WSASetServiceA(lpqsRegInfo : Win32cr::Networking::WinSock::WSAQUERYSETA*, essoperation : Win32cr::Networking::WinSock::WSAESETSERVICEOP, dwControlFlags : UInt32) : Int32

    fun WSASetServiceW(lpqsRegInfo : Win32cr::Networking::WinSock::WSAQUERYSETW*, essoperation : Win32cr::Networking::WinSock::WSAESETSERVICEOP, dwControlFlags : UInt32) : Int32

    fun WSAProviderConfigChange(lpNotificationHandle : Win32cr::Foundation::HANDLE*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpCompletionRoutine : Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE) : Int32

    fun WSAPoll(fdArray : Win32cr::Networking::WinSock::WSAPOLLFD*, fds : UInt32, timeout : Int32) : Int32

    fun ProcessSocketNotifications(completionPort : Win32cr::Foundation::HANDLE, registrationCount : UInt32, registrationInfos : Win32cr::Networking::WinSock::SOCK_NOTIFY_REGISTRATION*, timeoutMs : UInt32, completionCount : UInt32, completionPortEntries : Win32cr::System::IO::OVERLAPPED_ENTRY*, receivedEntryCount : UInt32*) : UInt32

    fun RtlIpv4AddressToStringA(addr : Win32cr::Networking::WinSock::IN_ADDR*, s : UInt8*) : Win32cr::Foundation::PSTR

    fun RtlIpv4AddressToStringExA(address : Win32cr::Networking::WinSock::IN_ADDR*, port : UInt16, address_string : UInt8*, address_string_length : UInt32*) : Int32

    fun RtlIpv4AddressToStringW(addr : Win32cr::Networking::WinSock::IN_ADDR*, s : UInt16*) : Win32cr::Foundation::PWSTR

    fun RtlIpv4AddressToStringExW(address : Win32cr::Networking::WinSock::IN_ADDR*, port : UInt16, address_string : UInt16*, address_string_length : UInt32*) : Int32

    fun RtlIpv4StringToAddressA(s : Win32cr::Foundation::PSTR, strict : Win32cr::Foundation::BOOLEAN, terminator : Win32cr::Foundation::PSTR*, addr : Win32cr::Networking::WinSock::IN_ADDR*) : Int32

    fun RtlIpv4StringToAddressExA(address_string : Win32cr::Foundation::PSTR, strict : Win32cr::Foundation::BOOLEAN, address : Win32cr::Networking::WinSock::IN_ADDR*, port : UInt16*) : Int32

    fun RtlIpv4StringToAddressW(s : Win32cr::Foundation::PWSTR, strict : Win32cr::Foundation::BOOLEAN, terminator : Win32cr::Foundation::PWSTR*, addr : Win32cr::Networking::WinSock::IN_ADDR*) : Int32

    fun RtlIpv4StringToAddressExW(address_string : Win32cr::Foundation::PWSTR, strict : Win32cr::Foundation::BOOLEAN, address : Win32cr::Networking::WinSock::IN_ADDR*, port : UInt16*) : Int32

    fun RtlIpv6AddressToStringA(addr : Win32cr::Networking::WinSock::IN6_ADDR*, s : UInt8*) : Win32cr::Foundation::PSTR

    fun RtlIpv6AddressToStringExA(address : Win32cr::Networking::WinSock::IN6_ADDR*, scope_id : UInt32, port : UInt16, address_string : UInt8*, address_string_length : UInt32*) : Int32

    fun RtlIpv6AddressToStringW(addr : Win32cr::Networking::WinSock::IN6_ADDR*, s : UInt16*) : Win32cr::Foundation::PWSTR

    fun RtlIpv6AddressToStringExW(address : Win32cr::Networking::WinSock::IN6_ADDR*, scope_id : UInt32, port : UInt16, address_string : UInt16*, address_string_length : UInt32*) : Int32

    fun RtlIpv6StringToAddressA(s : Win32cr::Foundation::PSTR, terminator : Win32cr::Foundation::PSTR*, addr : Win32cr::Networking::WinSock::IN6_ADDR*) : Int32

    fun RtlIpv6StringToAddressExA(address_string : Win32cr::Foundation::PSTR, address : Win32cr::Networking::WinSock::IN6_ADDR*, scope_id : UInt32*, port : UInt16*) : Int32

    fun RtlIpv6StringToAddressW(s : Win32cr::Foundation::PWSTR, terminator : Win32cr::Foundation::PWSTR*, addr : Win32cr::Networking::WinSock::IN6_ADDR*) : Int32

    fun RtlIpv6StringToAddressExW(address_string : Win32cr::Foundation::PWSTR, address : Win32cr::Networking::WinSock::IN6_ADDR*, scope_id : UInt32*, port : UInt16*) : Int32

    fun RtlEthernetAddressToStringA(addr : Win32cr::Networking::WinSock::DL_EUI48*, s : UInt8*) : Win32cr::Foundation::PSTR

    fun RtlEthernetAddressToStringW(addr : Win32cr::Networking::WinSock::DL_EUI48*, s : UInt16*) : Win32cr::Foundation::PWSTR

    fun RtlEthernetStringToAddressA(s : Win32cr::Foundation::PSTR, terminator : Win32cr::Foundation::PSTR*, addr : Win32cr::Networking::WinSock::DL_EUI48*) : Int32

    fun RtlEthernetStringToAddressW(s : Win32cr::Foundation::PWSTR, terminator : Win32cr::Foundation::PWSTR*, addr : Win32cr::Networking::WinSock::DL_EUI48*) : Int32

    fun WSARecvEx(s : Win32cr::Networking::WinSock::SOCKET, buf : Win32cr::Foundation::PSTR, len : Int32, flags : Int32*) : Int32

    fun TransmitFile(hSocket : Win32cr::Networking::WinSock::SOCKET, hFile : Win32cr::Foundation::HANDLE, nNumberOfBytesToWrite : UInt32, nNumberOfBytesPerSend : UInt32, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpTransmitBuffers : Win32cr::Networking::WinSock::TRANSMIT_FILE_BUFFERS*, dwReserved : UInt32) : Win32cr::Foundation::BOOL

    fun AcceptEx(sListenSocket : Win32cr::Networking::WinSock::SOCKET, sAcceptSocket : Win32cr::Networking::WinSock::SOCKET, lpOutputBuffer : Void*, dwReceiveDataLength : UInt32, dwLocalAddressLength : UInt32, dwRemoteAddressLength : UInt32, lpdwBytesReceived : UInt32*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*) : Win32cr::Foundation::BOOL

    fun GetAcceptExSockaddrs(lpOutputBuffer : Void*, dwReceiveDataLength : UInt32, dwLocalAddressLength : UInt32, dwRemoteAddressLength : UInt32, local_sockaddr : Win32cr::Networking::WinSock::SOCKADDR**, local_sockaddr_length : Int32*, remote_sockaddr : Win32cr::Networking::WinSock::SOCKADDR**, remote_sockaddr_length : Int32*) : Void

    fun WSCEnumProtocols(lpiProtocols : Int32*, lpProtocolBuffer : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, lpdwBufferLength : UInt32*, lpErrno : Int32*) : Int32

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCEnumProtocols32(lpiProtocols : Int32*, lpProtocolBuffer : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, lpdwBufferLength : UInt32*, lpErrno : Int32*) : Int32
  {% end %}

    fun WSCDeinstallProvider(lpProviderId : LibC::GUID*, lpErrno : Int32*) : Int32

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCDeinstallProvider32(lpProviderId : LibC::GUID*, lpErrno : Int32*) : Int32
  {% end %}

    fun WSCInstallProvider(lpProviderId : LibC::GUID*, lpszProviderDllPath : Win32cr::Foundation::PWSTR, lpProtocolInfoList : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, dwNumberOfEntries : UInt32, lpErrno : Int32*) : Int32

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCInstallProvider64_32(lpProviderId : LibC::GUID*, lpszProviderDllPath : Win32cr::Foundation::PWSTR, lpProtocolInfoList : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, dwNumberOfEntries : UInt32, lpErrno : Int32*) : Int32
  {% end %}

    fun WSCGetProviderPath(lpProviderId : LibC::GUID*, lpszProviderDllPath : UInt16*, lpProviderDllPathLen : Int32*, lpErrno : Int32*) : Int32

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCGetProviderPath32(lpProviderId : LibC::GUID*, lpszProviderDllPath : UInt16*, lpProviderDllPathLen : Int32*, lpErrno : Int32*) : Int32
  {% end %}

    fun WSCUpdateProvider(lpProviderId : LibC::GUID*, lpszProviderDllPath : Win32cr::Foundation::PWSTR, lpProtocolInfoList : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, dwNumberOfEntries : UInt32, lpErrno : Int32*) : Int32

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCUpdateProvider32(lpProviderId : LibC::GUID*, lpszProviderDllPath : Win32cr::Foundation::PWSTR, lpProtocolInfoList : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, dwNumberOfEntries : UInt32, lpErrno : Int32*) : Int32
  {% end %}

    fun WSCSetProviderInfo(lpProviderId : LibC::GUID*, info_type : Win32cr::Networking::WinSock::WSC_PROVIDER_INFO_TYPE, info : UInt8*, info_size : LibC::UIntPtrT, flags : UInt32, lpErrno : Int32*) : Int32

    fun WSCGetProviderInfo(lpProviderId : LibC::GUID*, info_type : Win32cr::Networking::WinSock::WSC_PROVIDER_INFO_TYPE, info : UInt8*, info_size : LibC::UIntPtrT*, flags : UInt32, lpErrno : Int32*) : Int32

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCSetProviderInfo32(lpProviderId : LibC::GUID*, info_type : Win32cr::Networking::WinSock::WSC_PROVIDER_INFO_TYPE, info : UInt8*, info_size : LibC::UIntPtrT, flags : UInt32, lpErrno : Int32*) : Int32
  {% end %}

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCGetProviderInfo32(lpProviderId : LibC::GUID*, info_type : Win32cr::Networking::WinSock::WSC_PROVIDER_INFO_TYPE, info : UInt8*, info_size : LibC::UIntPtrT*, flags : UInt32, lpErrno : Int32*) : Int32
  {% end %}

    fun WSCSetApplicationCategory(path : UInt16*, path_length : UInt32, extra : UInt16*, extra_length : UInt32, permitted_lsp_categories : UInt32, pPrevPermLspCat : UInt32*, lpErrno : Int32*) : Int32

    fun WSCGetApplicationCategory(path : UInt16*, path_length : UInt32, extra : UInt16*, extra_length : UInt32, pPermittedLspCategories : UInt32*, lpErrno : Int32*) : Int32

    fun WPUCompleteOverlappedRequest(s : Win32cr::Networking::WinSock::SOCKET, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, dwError : UInt32, cbTransferred : UInt32, lpErrno : Int32*) : Int32

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCEnumNameSpaceProviders32(lpdwBufferLength : UInt32*, lpnspBuffer : Win32cr::Networking::WinSock::WSANAMESPACE_INFOW*) : Int32
  {% end %}

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCEnumNameSpaceProvidersEx32(lpdwBufferLength : UInt32*, lpnspBuffer : Win32cr::Networking::WinSock::WSANAMESPACE_INFOEXW*) : Int32
  {% end %}

    fun WSCInstallNameSpace(lpszIdentifier : Win32cr::Foundation::PWSTR, lpszPathName : Win32cr::Foundation::PWSTR, dwNameSpace : UInt32, dwVersion : UInt32, lpProviderId : LibC::GUID*) : Int32

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCInstallNameSpace32(lpszIdentifier : Win32cr::Foundation::PWSTR, lpszPathName : Win32cr::Foundation::PWSTR, dwNameSpace : UInt32, dwVersion : UInt32, lpProviderId : LibC::GUID*) : Int32
  {% end %}

    fun WSCUnInstallNameSpace(lpProviderId : LibC::GUID*) : Int32

    fun WSCInstallNameSpaceEx(lpszIdentifier : Win32cr::Foundation::PWSTR, lpszPathName : Win32cr::Foundation::PWSTR, dwNameSpace : UInt32, dwVersion : UInt32, lpProviderId : LibC::GUID*, lpProviderSpecific : Win32cr::System::Com::BLOB*) : Int32

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCInstallNameSpaceEx32(lpszIdentifier : Win32cr::Foundation::PWSTR, lpszPathName : Win32cr::Foundation::PWSTR, dwNameSpace : UInt32, dwVersion : UInt32, lpProviderId : LibC::GUID*, lpProviderSpecific : Win32cr::System::Com::BLOB*) : Int32
  {% end %}

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCUnInstallNameSpace32(lpProviderId : LibC::GUID*) : Int32
  {% end %}

    fun WSCEnableNSProvider(lpProviderId : LibC::GUID*, fEnable : Win32cr::Foundation::BOOL) : Int32

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCEnableNSProvider32(lpProviderId : LibC::GUID*, fEnable : Win32cr::Foundation::BOOL) : Int32
  {% end %}

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCInstallProviderAndChains64_32(lpProviderId : LibC::GUID*, lpszProviderDllPath : Win32cr::Foundation::PWSTR, lpszProviderDllPath32 : Win32cr::Foundation::PWSTR, lpszLspName : Win32cr::Foundation::PWSTR, dwServiceFlags : UInt32, lpProtocolInfoList : Win32cr::Networking::WinSock::WSAPROTOCOL_INFOW*, dwNumberOfEntries : UInt32, lpdwCatalogEntryId : UInt32*, lpErrno : Int32*) : Int32
  {% end %}

    fun WSAAdvertiseProvider(puuidProviderId : LibC::GUID*, pNSPv2Routine : Win32cr::Networking::WinSock::NSPV2_ROUTINE*) : Int32

    fun WSAUnadvertiseProvider(puuidProviderId : LibC::GUID*) : Int32

    fun WSAProviderCompleteAsyncCall(hAsyncCall : Win32cr::Foundation::HANDLE, iRetCode : Int32) : Int32

    fun EnumProtocolsA(lpiProtocols : Int32*, lpProtocolBuffer : Void*, lpdwBufferLength : UInt32*) : Int32

    fun EnumProtocolsW(lpiProtocols : Int32*, lpProtocolBuffer : Void*, lpdwBufferLength : UInt32*) : Int32

    fun GetAddressByNameA(dwNameSpace : UInt32, lpServiceType : LibC::GUID*, lpServiceName : Win32cr::Foundation::PSTR, lpiProtocols : Int32*, dwResolution : UInt32, lpServiceAsyncInfo : Win32cr::Networking::WinSock::SERVICE_ASYNC_INFO*, lpCsaddrBuffer : Void*, lpdwBufferLength : UInt32*, lpAliasBuffer : UInt8*, lpdwAliasBufferLength : UInt32*) : Int32

    fun GetAddressByNameW(dwNameSpace : UInt32, lpServiceType : LibC::GUID*, lpServiceName : Win32cr::Foundation::PWSTR, lpiProtocols : Int32*, dwResolution : UInt32, lpServiceAsyncInfo : Win32cr::Networking::WinSock::SERVICE_ASYNC_INFO*, lpCsaddrBuffer : Void*, lpdwBufferLength : UInt32*, lpAliasBuffer : UInt16*, lpdwAliasBufferLength : UInt32*) : Int32

    fun GetTypeByNameA(lpServiceName : Win32cr::Foundation::PSTR, lpServiceType : LibC::GUID*) : Int32

    fun GetTypeByNameW(lpServiceName : Win32cr::Foundation::PWSTR, lpServiceType : LibC::GUID*) : Int32

    fun GetNameByTypeA(lpServiceType : LibC::GUID*, lpServiceName : Win32cr::Foundation::PSTR, dwNameLength : UInt32) : Int32

    fun GetNameByTypeW(lpServiceType : LibC::GUID*, lpServiceName : Win32cr::Foundation::PWSTR, dwNameLength : UInt32) : Int32

    fun SetServiceA(dwNameSpace : UInt32, dwOperation : Win32cr::Networking::WinSock::SET_SERVICE_OPERATION, dwFlags : UInt32, lpServiceInfo : Win32cr::Networking::WinSock::SERVICE_INFOA*, lpServiceAsyncInfo : Win32cr::Networking::WinSock::SERVICE_ASYNC_INFO*, lpdwStatusFlags : UInt32*) : Int32

    fun SetServiceW(dwNameSpace : UInt32, dwOperation : Win32cr::Networking::WinSock::SET_SERVICE_OPERATION, dwFlags : UInt32, lpServiceInfo : Win32cr::Networking::WinSock::SERVICE_INFOW*, lpServiceAsyncInfo : Win32cr::Networking::WinSock::SERVICE_ASYNC_INFO*, lpdwStatusFlags : UInt32*) : Int32

    fun GetServiceA(dwNameSpace : UInt32, lpGuid : LibC::GUID*, lpServiceName : Win32cr::Foundation::PSTR, dwProperties : UInt32, lpBuffer : Void*, lpdwBufferSize : UInt32*, lpServiceAsyncInfo : Win32cr::Networking::WinSock::SERVICE_ASYNC_INFO*) : Int32

    fun GetServiceW(dwNameSpace : UInt32, lpGuid : LibC::GUID*, lpServiceName : Win32cr::Foundation::PWSTR, dwProperties : UInt32, lpBuffer : Void*, lpdwBufferSize : UInt32*, lpServiceAsyncInfo : Win32cr::Networking::WinSock::SERVICE_ASYNC_INFO*) : Int32

    # Commented out due to being part of LibC
    #fun getaddrinfo(pNodeName : Win32cr::Foundation::PSTR, pServiceName : Win32cr::Foundation::PSTR, pHints : Win32cr::Networking::WinSock::ADDRINFOA*, ppResult : Win32cr::Networking::WinSock::ADDRINFOA**) : Int32

    fun GetAddrInfoW(pNodeName : Win32cr::Foundation::PWSTR, pServiceName : Win32cr::Foundation::PWSTR, pHints : Win32cr::Networking::WinSock::Addrinfow*, ppResult : Win32cr::Networking::WinSock::Addrinfow**) : Int32

    fun GetAddrInfoExA(pName : Win32cr::Foundation::PSTR, pServiceName : Win32cr::Foundation::PSTR, dwNameSpace : UInt32, lpNspId : LibC::GUID*, hints : Win32cr::Networking::WinSock::Addrinfoexa*, ppResult : Win32cr::Networking::WinSock::Addrinfoexa**, timeout : Win32cr::Networking::WinSock::Timeval*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpCompletionRoutine : Win32cr::Networking::WinSock::LPLOOKUPSERVICE_COMPLETION_ROUTINE, lpNameHandle : Win32cr::Foundation::HANDLE*) : Int32

    # Commented out due to being part of LibC
    #fun GetAddrInfoExW(pName : Win32cr::Foundation::PWSTR, pServiceName : Win32cr::Foundation::PWSTR, dwNameSpace : UInt32, lpNspId : LibC::GUID*, hints : Win32cr::Networking::WinSock::Addrinfoexw*, ppResult : Win32cr::Networking::WinSock::Addrinfoexw**, timeout : Win32cr::Networking::WinSock::Timeval*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpCompletionRoutine : Win32cr::Networking::WinSock::LPLOOKUPSERVICE_COMPLETION_ROUTINE, lpHandle : Win32cr::Foundation::HANDLE*) : Int32

    # Commented out due to being part of LibC
    #fun GetAddrInfoExCancel(lpHandle : Win32cr::Foundation::HANDLE*) : Int32

    # Commented out due to being part of LibC
    #fun GetAddrInfoExOverlappedResult(lpOverlapped : Win32cr::System::IO::OVERLAPPED*) : Int32

    fun SetAddrInfoExA(pName : Win32cr::Foundation::PSTR, pServiceName : Win32cr::Foundation::PSTR, pAddresses : Win32cr::Networking::WinSock::SOCKET_ADDRESS*, dwAddressCount : UInt32, lpBlob : Win32cr::System::Com::BLOB*, dwFlags : UInt32, dwNameSpace : UInt32, lpNspId : LibC::GUID*, timeout : Win32cr::Networking::WinSock::Timeval*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpCompletionRoutine : Win32cr::Networking::WinSock::LPLOOKUPSERVICE_COMPLETION_ROUTINE, lpNameHandle : Win32cr::Foundation::HANDLE*) : Int32

    fun SetAddrInfoExW(pName : Win32cr::Foundation::PWSTR, pServiceName : Win32cr::Foundation::PWSTR, pAddresses : Win32cr::Networking::WinSock::SOCKET_ADDRESS*, dwAddressCount : UInt32, lpBlob : Win32cr::System::Com::BLOB*, dwFlags : UInt32, dwNameSpace : UInt32, lpNspId : LibC::GUID*, timeout : Win32cr::Networking::WinSock::Timeval*, lpOverlapped : Win32cr::System::IO::OVERLAPPED*, lpCompletionRoutine : Win32cr::Networking::WinSock::LPLOOKUPSERVICE_COMPLETION_ROUTINE, lpNameHandle : Win32cr::Foundation::HANDLE*) : Int32

    # Commented out due to being part of LibC
    #fun freeaddrinfo(pAddrInfo : Win32cr::Networking::WinSock::ADDRINFOA*) : Void

    fun FreeAddrInfoW(pAddrInfo : Win32cr::Networking::WinSock::Addrinfow*) : Void

    fun FreeAddrInfoEx(pAddrInfoEx : Win32cr::Networking::WinSock::Addrinfoexa*) : Void

    # Commented out due to being part of LibC
    #fun FreeAddrInfoExW(pAddrInfoEx : Win32cr::Networking::WinSock::Addrinfoexw*) : Void

    fun getnameinfo(pSockaddr : Win32cr::Networking::WinSock::SOCKADDR*, sockaddr_length : Int32, pNodeBuffer : UInt8*, node_buffer_size : UInt32, pServiceBuffer : UInt8*, service_buffer_size : UInt32, flags : Int32) : Int32

    fun GetNameInfoW(pSockaddr : Win32cr::Networking::WinSock::SOCKADDR*, sockaddr_length : Int32, pNodeBuffer : UInt16*, node_buffer_size : UInt32, pServiceBuffer : UInt16*, service_buffer_size : UInt32, flags : Int32) : Int32

    # Commented out due to being part of LibC
    #fun inet_pton(family : Int32, pszAddrString : Win32cr::Foundation::PSTR, pAddrBuf : Void*) : Int32

    fun InetPtonW(family : Int32, pszAddrString : Win32cr::Foundation::PWSTR, pAddrBuf : Void*) : Int32

    # Commented out due to being part of LibC
    #fun inet_ntop(family : Int32, pAddr : Void*, pStringBuf : UInt8*, string_buf_size : LibC::UIntPtrT) : Win32cr::Foundation::PSTR

    fun InetNtopW(family : Int32, pAddr : Void*, pStringBuf : UInt16*, string_buf_size : LibC::UIntPtrT) : Win32cr::Foundation::PWSTR

    fun WSASetSocketSecurity(socket : Win32cr::Networking::WinSock::SOCKET, security_settings : Win32cr::Networking::WinSock::SOCKET_SECURITY_SETTINGS*, security_settings_len : UInt32, overlapped : Win32cr::System::IO::OVERLAPPED*, completion_routine : Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE) : Int32

    fun WSAQuerySocketSecurity(socket : Win32cr::Networking::WinSock::SOCKET, security_query_template : Win32cr::Networking::WinSock::SOCKET_SECURITY_QUERY_TEMPLATE*, security_query_template_len : UInt32, security_query_info : Win32cr::Networking::WinSock::SOCKET_SECURITY_QUERY_INFO*, security_query_info_len : UInt32*, overlapped : Win32cr::System::IO::OVERLAPPED*, completion_routine : Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE) : Int32

    fun WSASetSocketPeerTargetName(socket : Win32cr::Networking::WinSock::SOCKET, peer_target_name : Win32cr::Networking::WinSock::SOCKET_PEER_TARGET_NAME*, peer_target_name_len : UInt32, overlapped : Win32cr::System::IO::OVERLAPPED*, completion_routine : Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE) : Int32

    fun WSADeleteSocketPeerTargetName(socket : Win32cr::Networking::WinSock::SOCKET, peer_addr : Win32cr::Networking::WinSock::SOCKADDR*, peer_addr_len : UInt32, overlapped : Win32cr::System::IO::OVERLAPPED*, completion_routine : Win32cr::Networking::WinSock::LPWSAOVERLAPPED_COMPLETION_ROUTINE) : Int32

    fun WSAImpersonateSocketPeer(socket : Win32cr::Networking::WinSock::SOCKET, peer_addr : Win32cr::Networking::WinSock::SOCKADDR*, peer_addr_len : UInt32) : Int32

    fun WSARevertImpersonation : Int32

    fun SetSocketMediaStreamingMode(value : Win32cr::Foundation::BOOL) : Win32cr::Foundation::HRESULT

    fun WSCWriteProviderOrder(lpwdCatalogEntryId : UInt32*, dwNumberOfEntries : UInt32) : Int32

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCWriteProviderOrder32(lpwdCatalogEntryId : UInt32*, dwNumberOfEntries : UInt32) : Int32
  {% end %}

    fun WSCWriteNameSpaceOrder(lpProviderId : LibC::GUID*, dwNumberOfEntries : UInt32) : Int32

    {% if flag?(:x86_64) || flag?(:arm) %}
    fun WSCWriteNameSpaceOrder32(lpProviderId : LibC::GUID*, dwNumberOfEntries : UInt32) : Int32
  {% end %}

  end
end